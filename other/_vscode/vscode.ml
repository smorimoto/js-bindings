[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module Internal =
  struct
    module AnonymousInterfaces =
      struct
        type anonymous_interface_0 = [ `anonymous_interface_0 ] intf
        let rec anonymous_interface_0_of_js : Ojs.t -> anonymous_interface_0
          = Obj.magic
        and anonymous_interface_0_to_js : anonymous_interface_0 -> Ojs.t =
          Obj.magic
        type anonymous_interface_1 = [ `anonymous_interface_1 ] intf
        let rec anonymous_interface_1_of_js : Ojs.t -> anonymous_interface_1
          = Obj.magic
        and anonymous_interface_1_to_js : anonymous_interface_1 -> Ojs.t =
          Obj.magic
        type anonymous_interface_2 = [ `anonymous_interface_2 ] intf
        let rec anonymous_interface_2_of_js : Ojs.t -> anonymous_interface_2
          = Obj.magic
        and anonymous_interface_2_to_js : anonymous_interface_2 -> Ojs.t =
          Obj.magic
        type anonymous_interface_3 = [ `anonymous_interface_3 ] intf
        let rec anonymous_interface_3_of_js : Ojs.t -> anonymous_interface_3
          = Obj.magic
        and anonymous_interface_3_to_js : anonymous_interface_3 -> Ojs.t =
          Obj.magic
        type anonymous_interface_4 = [ `anonymous_interface_4 ] intf
        let rec anonymous_interface_4_of_js : Ojs.t -> anonymous_interface_4
          = Obj.magic
        and anonymous_interface_4_to_js : anonymous_interface_4 -> Ojs.t =
          Obj.magic
        type anonymous_interface_5 = [ `anonymous_interface_5 ] intf
        let rec anonymous_interface_5_of_js : Ojs.t -> anonymous_interface_5
          = Obj.magic
        and anonymous_interface_5_to_js : anonymous_interface_5 -> Ojs.t =
          Obj.magic
        type anonymous_interface_6 = [ `anonymous_interface_6 ] intf
        let rec anonymous_interface_6_of_js : Ojs.t -> anonymous_interface_6
          = Obj.magic
        and anonymous_interface_6_to_js : anonymous_interface_6 -> Ojs.t =
          Obj.magic
        type anonymous_interface_7 = [ `anonymous_interface_7 ] intf
        let rec anonymous_interface_7_of_js : Ojs.t -> anonymous_interface_7
          = Obj.magic
        and anonymous_interface_7_to_js : anonymous_interface_7 -> Ojs.t =
          Obj.magic
        type anonymous_interface_8 = [ `anonymous_interface_8 ] intf
        let rec anonymous_interface_8_of_js : Ojs.t -> anonymous_interface_8
          = Obj.magic
        and anonymous_interface_8_to_js : anonymous_interface_8 -> Ojs.t =
          Obj.magic
        type anonymous_interface_9 = [ `anonymous_interface_9 ] intf
        let rec anonymous_interface_9_of_js : Ojs.t -> anonymous_interface_9
          = Obj.magic
        and anonymous_interface_9_to_js : anonymous_interface_9 -> Ojs.t =
          Obj.magic
        type anonymous_interface_10 = [ `anonymous_interface_10 ] intf
        let rec anonymous_interface_10_of_js :
          Ojs.t -> anonymous_interface_10 = Obj.magic
        and anonymous_interface_10_to_js : anonymous_interface_10 -> Ojs.t =
          Obj.magic
        type anonymous_interface_11 = [ `anonymous_interface_11 ] intf
        let rec anonymous_interface_11_of_js :
          Ojs.t -> anonymous_interface_11 = Obj.magic
        and anonymous_interface_11_to_js : anonymous_interface_11 -> Ojs.t =
          Obj.magic
        type anonymous_interface_12 = [ `anonymous_interface_12 ] intf
        let rec anonymous_interface_12_of_js :
          Ojs.t -> anonymous_interface_12 = Obj.magic
        and anonymous_interface_12_to_js : anonymous_interface_12 -> Ojs.t =
          Obj.magic
        type anonymous_interface_13 = [ `anonymous_interface_13 ] intf
        let rec anonymous_interface_13_of_js :
          Ojs.t -> anonymous_interface_13 = Obj.magic
        and anonymous_interface_13_to_js : anonymous_interface_13 -> Ojs.t =
          Obj.magic
        type anonymous_interface_14 = [ `anonymous_interface_14 ] intf
        let rec anonymous_interface_14_of_js :
          Ojs.t -> anonymous_interface_14 = Obj.magic
        and anonymous_interface_14_to_js : anonymous_interface_14 -> Ojs.t =
          Obj.magic
        type anonymous_interface_15 = [ `anonymous_interface_15 ] intf
        let rec anonymous_interface_15_of_js :
          Ojs.t -> anonymous_interface_15 = Obj.magic
        and anonymous_interface_15_to_js : anonymous_interface_15 -> Ojs.t =
          Obj.magic
        type anonymous_interface_16 = [ `anonymous_interface_16 ] intf
        let rec anonymous_interface_16_of_js :
          Ojs.t -> anonymous_interface_16 = Obj.magic
        and anonymous_interface_16_to_js : anonymous_interface_16 -> Ojs.t =
          Obj.magic
        type anonymous_interface_17 = [ `anonymous_interface_17 ] intf
        let rec anonymous_interface_17_of_js :
          Ojs.t -> anonymous_interface_17 = Obj.magic
        and anonymous_interface_17_to_js : anonymous_interface_17 -> Ojs.t =
          Obj.magic
        type anonymous_interface_18 = [ `anonymous_interface_18 ] intf
        let rec anonymous_interface_18_of_js :
          Ojs.t -> anonymous_interface_18 = Obj.magic
        and anonymous_interface_18_to_js : anonymous_interface_18 -> Ojs.t =
          Obj.magic
        type anonymous_interface_19 = [ `anonymous_interface_19 ] intf
        let rec anonymous_interface_19_of_js :
          Ojs.t -> anonymous_interface_19 = Obj.magic
        and anonymous_interface_19_to_js : anonymous_interface_19 -> Ojs.t =
          Obj.magic
        type anonymous_interface_20 = [ `anonymous_interface_20 ] intf
        let rec anonymous_interface_20_of_js :
          Ojs.t -> anonymous_interface_20 = Obj.magic
        and anonymous_interface_20_to_js : anonymous_interface_20 -> Ojs.t =
          Obj.magic
        type anonymous_interface_21 = [ `anonymous_interface_21 ] intf
        let rec anonymous_interface_21_of_js :
          Ojs.t -> anonymous_interface_21 = Obj.magic
        and anonymous_interface_21_to_js : anonymous_interface_21 -> Ojs.t =
          Obj.magic
        type anonymous_interface_22 = [ `anonymous_interface_22 ] intf
        let rec anonymous_interface_22_of_js :
          Ojs.t -> anonymous_interface_22 = Obj.magic
        and anonymous_interface_22_to_js : anonymous_interface_22 -> Ojs.t =
          Obj.magic
        type anonymous_interface_23 = [ `anonymous_interface_23 ] intf
        let rec anonymous_interface_23_of_js :
          Ojs.t -> anonymous_interface_23 = Obj.magic
        and anonymous_interface_23_to_js : anonymous_interface_23 -> Ojs.t =
          Obj.magic
        type anonymous_interface_24 = [ `anonymous_interface_24 ] intf
        let rec anonymous_interface_24_of_js :
          Ojs.t -> anonymous_interface_24 = Obj.magic
        and anonymous_interface_24_to_js : anonymous_interface_24 -> Ojs.t =
          Obj.magic
        type anonymous_interface_25 = [ `anonymous_interface_25 ] intf
        let rec anonymous_interface_25_of_js :
          Ojs.t -> anonymous_interface_25 = Obj.magic
        and anonymous_interface_25_to_js : anonymous_interface_25 -> Ojs.t =
          Obj.magic
        type anonymous_interface_26 = [ `anonymous_interface_26 ] intf
        let rec anonymous_interface_26_of_js :
          Ojs.t -> anonymous_interface_26 = Obj.magic
        and anonymous_interface_26_to_js : anonymous_interface_26 -> Ojs.t =
          Obj.magic
        type anonymous_interface_27 = [ `anonymous_interface_27 ] intf
        let rec anonymous_interface_27_of_js :
          Ojs.t -> anonymous_interface_27 = Obj.magic
        and anonymous_interface_27_to_js : anonymous_interface_27 -> Ojs.t =
          Obj.magic
        type anonymous_interface_28 = [ `anonymous_interface_28 ] intf
        let rec anonymous_interface_28_of_js :
          Ojs.t -> anonymous_interface_28 = Obj.magic
        and anonymous_interface_28_to_js : anonymous_interface_28 -> Ojs.t =
          Obj.magic
        type anonymous_interface_29 = [ `anonymous_interface_29 ] intf
        let rec anonymous_interface_29_of_js :
          Ojs.t -> anonymous_interface_29 = Obj.magic
        and anonymous_interface_29_to_js : anonymous_interface_29 -> Ojs.t =
          Obj.magic
        type anonymous_interface_30 = [ `anonymous_interface_30 ] intf
        let rec anonymous_interface_30_of_js :
          Ojs.t -> anonymous_interface_30 = Obj.magic
        and anonymous_interface_30_to_js : anonymous_interface_30 -> Ojs.t =
          Obj.magic
        type anonymous_interface_31 = [ `anonymous_interface_31 ] intf
        let rec anonymous_interface_31_of_js :
          Ojs.t -> anonymous_interface_31 = Obj.magic
        and anonymous_interface_31_to_js : anonymous_interface_31 -> Ojs.t =
          Obj.magic
        type anonymous_interface_32 = [ `anonymous_interface_32 ] intf
        let rec anonymous_interface_32_of_js :
          Ojs.t -> anonymous_interface_32 = Obj.magic
        and anonymous_interface_32_to_js : anonymous_interface_32 -> Ojs.t =
          Obj.magic
        type anonymous_interface_33 = [ `anonymous_interface_33 ] intf
        let rec anonymous_interface_33_of_js :
          Ojs.t -> anonymous_interface_33 = Obj.magic
        and anonymous_interface_33_to_js : anonymous_interface_33 -> Ojs.t =
          Obj.magic
        type anonymous_interface_34 = [ `anonymous_interface_34 ] intf
        let rec anonymous_interface_34_of_js :
          Ojs.t -> anonymous_interface_34 = Obj.magic
        and anonymous_interface_34_to_js : anonymous_interface_34 -> Ojs.t =
          Obj.magic
        type anonymous_interface_35 = [ `anonymous_interface_35 ] intf
        let rec anonymous_interface_35_of_js :
          Ojs.t -> anonymous_interface_35 = Obj.magic
        and anonymous_interface_35_to_js : anonymous_interface_35 -> Ojs.t =
          Obj.magic
        type anonymous_interface_36 = [ `anonymous_interface_36 ] intf
        let rec anonymous_interface_36_of_js :
          Ojs.t -> anonymous_interface_36 = Obj.magic
        and anonymous_interface_36_to_js : anonymous_interface_36 -> Ojs.t =
          Obj.magic
        type anonymous_interface_37 = [ `anonymous_interface_37 ] intf
        let rec anonymous_interface_37_of_js :
          Ojs.t -> anonymous_interface_37 = Obj.magic
        and anonymous_interface_37_to_js : anonymous_interface_37 -> Ojs.t =
          Obj.magic
        type anonymous_interface_38 = [ `anonymous_interface_38 ] intf
        let rec anonymous_interface_38_of_js :
          Ojs.t -> anonymous_interface_38 = Obj.magic
        and anonymous_interface_38_to_js : anonymous_interface_38 -> Ojs.t =
          Obj.magic
        type anonymous_interface_39 = [ `anonymous_interface_39 ] intf
        let rec anonymous_interface_39_of_js :
          Ojs.t -> anonymous_interface_39 = Obj.magic
        and anonymous_interface_39_to_js : anonymous_interface_39 -> Ojs.t =
          Obj.magic
        type anonymous_interface_40 = [ `anonymous_interface_40 ] intf
        let rec anonymous_interface_40_of_js :
          Ojs.t -> anonymous_interface_40 = Obj.magic
        and anonymous_interface_40_to_js : anonymous_interface_40 -> Ojs.t =
          Obj.magic
        type anonymous_interface_41 = [ `anonymous_interface_41 ] intf
        let rec anonymous_interface_41_of_js :
          Ojs.t -> anonymous_interface_41 = Obj.magic
        and anonymous_interface_41_to_js : anonymous_interface_41 -> Ojs.t =
          Obj.magic
        type anonymous_interface_42 = [ `anonymous_interface_42 ] intf
        let rec anonymous_interface_42_of_js :
          Ojs.t -> anonymous_interface_42 = Obj.magic
        and anonymous_interface_42_to_js : anonymous_interface_42 -> Ojs.t =
          Obj.magic
        type anonymous_interface_43 = [ `anonymous_interface_43 ] intf
        let rec anonymous_interface_43_of_js :
          Ojs.t -> anonymous_interface_43 = Obj.magic
        and anonymous_interface_43_to_js : anonymous_interface_43 -> Ojs.t =
          Obj.magic
        type anonymous_interface_44 = [ `anonymous_interface_44 ] intf
        let rec anonymous_interface_44_of_js :
          Ojs.t -> anonymous_interface_44 = Obj.magic
        and anonymous_interface_44_to_js : anonymous_interface_44 -> Ojs.t =
          Obj.magic
        type anonymous_interface_45 = [ `anonymous_interface_45 ] intf
        let rec anonymous_interface_45_of_js :
          Ojs.t -> anonymous_interface_45 = Obj.magic
        and anonymous_interface_45_to_js : anonymous_interface_45 -> Ojs.t =
          Obj.magic
        type anonymous_interface_46 = [ `anonymous_interface_46 ] intf
        let rec anonymous_interface_46_of_js :
          Ojs.t -> anonymous_interface_46 = Obj.magic
        and anonymous_interface_46_to_js : anonymous_interface_46 -> Ojs.t =
          Obj.magic
      end
    module Types =
      struct
        open AnonymousInterfaces
        type 'T _Thenable = [ `Thenable of 'T ] intf
        and vscode_AccessibilityInformation =
          [ `Vscode_AccessibilityInformation ] intf
        and vscode_AuthenticationGetSessionOptions =
          [ `Vscode_AuthenticationGetSessionOptions ] intf
        and vscode_AuthenticationProvider =
          [ `Vscode_AuthenticationProvider ] intf
        and vscode_AuthenticationProviderAuthenticationSessionsChangeEvent =
          [ `Vscode_AuthenticationProviderAuthenticationSessionsChangeEvent ]
            intf
        and vscode_AuthenticationProviderInformation =
          [ `Vscode_AuthenticationProviderInformation ] intf
        and vscode_AuthenticationProviderOptions =
          [ `Vscode_AuthenticationProviderOptions ] intf
        and vscode_AuthenticationSession =
          [ `Vscode_AuthenticationSession ] intf
        and vscode_AuthenticationSessionAccountInformation =
          [ `Vscode_AuthenticationSessionAccountInformation ] intf
        and vscode_AuthenticationSessionsChangeEvent =
          [ `Vscode_AuthenticationSessionsChangeEvent ] intf
        and vscode_Breakpoint = [ `Vscode_Breakpoint ] intf
        and vscode_BreakpointsChangeEvent =
          [ `Vscode_BreakpointsChangeEvent ] intf
        and vscode_CallHierarchyIncomingCall =
          [ `Vscode_CallHierarchyIncomingCall ] intf
        and vscode_CallHierarchyItem = [ `Vscode_CallHierarchyItem ] intf
        and vscode_CallHierarchyOutgoingCall =
          [ `Vscode_CallHierarchyOutgoingCall ] intf
        and vscode_CallHierarchyProvider =
          [ `Vscode_CallHierarchyProvider ] intf
        and vscode_CancellationError = [ `Vscode_CancellationError ] intf
        and vscode_CancellationToken = [ `Vscode_CancellationToken ] intf
        and vscode_CancellationTokenSource =
          [ `Vscode_CancellationTokenSource ] intf
        and vscode_CharacterPair = (string * string)
        and vscode_Clipboard = [ `Vscode_Clipboard ] intf
        and vscode_CodeAction = [ `Vscode_CodeAction ] intf
        and vscode_CodeActionContext = [ `Vscode_CodeActionContext ] intf
        and vscode_CodeActionKind = [ `Vscode_CodeActionKind ] intf
        and 'T vscode_CodeActionProvider =
          [ `Vscode_CodeActionProvider of 'T ] intf
        and vscode_CodeActionProviderMetadata =
          [ `Vscode_CodeActionProviderMetadata ] intf
        and vscode_CodeActionTriggerKind = [ `Invoke  | `Automatic ]
        and vscode_CodeActionTriggerKind_Invoke = [ `Invoke ]
        and vscode_CodeActionTriggerKind_Automatic = [ `Automatic ]
        and vscode_CodeLens = [ `Vscode_CodeLens ] intf
        and 'T vscode_CodeLensProvider =
          [ `Vscode_CodeLensProvider of 'T ] intf
        and vscode_Color = [ `Vscode_Color ] intf
        and vscode_ColorInformation = [ `Vscode_ColorInformation ] intf
        and vscode_ColorPresentation = [ `Vscode_ColorPresentation ] intf
        and vscode_ColorTheme = [ `Vscode_ColorTheme ] intf
        and vscode_ColorThemeKind = [ `Light  | `Dark  | `HighContrast ]
        and vscode_ColorThemeKind_Light = [ `Light ]
        and vscode_ColorThemeKind_Dark = [ `Dark ]
        and vscode_ColorThemeKind_HighContrast = [ `HighContrast ]
        and vscode_Command = [ `Vscode_Command ] intf
        and vscode_Comment = [ `Vscode_Comment ] intf
        and vscode_CommentAuthorInformation =
          [ `Vscode_CommentAuthorInformation ] intf
        and vscode_CommentController = [ `Vscode_CommentController ] intf
        and vscode_CommentMode = [ `Editing  | `Preview ]
        and vscode_CommentMode_Editing = [ `Editing ]
        and vscode_CommentMode_Preview = [ `Preview ]
        and vscode_CommentOptions = [ `Vscode_CommentOptions ] intf
        and vscode_CommentReaction = [ `Vscode_CommentReaction ] intf
        and vscode_CommentReply = [ `Vscode_CommentReply ] intf
        and vscode_CommentRule = [ `Vscode_CommentRule ] intf
        and vscode_CommentThread = [ `Vscode_CommentThread ] intf
        and vscode_CommentThreadCollapsibleState =
          [ `Collapsed  | `Expanded ]
        and vscode_CommentThreadCollapsibleState_Collapsed = [ `Collapsed ]
        and vscode_CommentThreadCollapsibleState_Expanded = [ `Expanded ]
        and vscode_CommentingRangeProvider =
          [ `Vscode_CommentingRangeProvider ] intf
        and vscode_CompletionContext = [ `Vscode_CompletionContext ] intf
        and vscode_CompletionItem = [ `Vscode_CompletionItem ] intf
        and vscode_CompletionItemKind =
          [ `Text  | `Method  | `Function  | `Constructor  | `Field 
          | `Variable  | `Class  | `Interface  | `Module  | `Property 
          | `Unit  | `Value  | `Enum  | `Keyword  | `Snippet  | `Color 
          | `Reference  | `File  | `Folder  | `EnumMember  | `Constant 
          | `Struct  | `Event  | `Operator  | `TypeParameter  | `User 
          | `Issue ]
        and vscode_CompletionItemKind_Text = [ `Text ]
        and vscode_CompletionItemKind_Method = [ `Method ]
        and vscode_CompletionItemKind_Function = [ `Function ]
        and vscode_CompletionItemKind_Constructor = [ `Constructor ]
        and vscode_CompletionItemKind_Field = [ `Field ]
        and vscode_CompletionItemKind_Variable = [ `Variable ]
        and vscode_CompletionItemKind_Class = [ `Class ]
        and vscode_CompletionItemKind_Interface = [ `Interface ]
        and vscode_CompletionItemKind_Module = [ `Module ]
        and vscode_CompletionItemKind_Property = [ `Property ]
        and vscode_CompletionItemKind_Unit = [ `Unit ]
        and vscode_CompletionItemKind_Value = [ `Value ]
        and vscode_CompletionItemKind_Enum = [ `Enum ]
        and vscode_CompletionItemKind_Keyword = [ `Keyword ]
        and vscode_CompletionItemKind_Snippet = [ `Snippet ]
        and vscode_CompletionItemKind_Color = [ `Color ]
        and vscode_CompletionItemKind_Reference = [ `Reference ]
        and vscode_CompletionItemKind_File = [ `File ]
        and vscode_CompletionItemKind_Folder = [ `Folder ]
        and vscode_CompletionItemKind_EnumMember = [ `EnumMember ]
        and vscode_CompletionItemKind_Constant = [ `Constant ]
        and vscode_CompletionItemKind_Struct = [ `Struct ]
        and vscode_CompletionItemKind_Event = [ `Event ]
        and vscode_CompletionItemKind_Operator = [ `Operator ]
        and vscode_CompletionItemKind_TypeParameter = [ `TypeParameter ]
        and vscode_CompletionItemKind_User = [ `User ]
        and vscode_CompletionItemKind_Issue = [ `Issue ]
        and 'T vscode_CompletionItemProvider =
          [ `Vscode_CompletionItemProvider of 'T ] intf
        and vscode_CompletionItemTag = [ `Deprecated ]
        and vscode_CompletionItemTag_Deprecated = [ `Deprecated ]
        and 'T vscode_CompletionList = [ `Vscode_CompletionList of 'T ] intf
        and vscode_CompletionTriggerKind =
          [ `Invoke  | `TriggerCharacter 
          | `TriggerForIncompleteCompletions ]
        and vscode_CompletionTriggerKind_Invoke = [ `Invoke ]
        and vscode_CompletionTriggerKind_TriggerCharacter =
          [ `TriggerCharacter ]
        and vscode_CompletionTriggerKind_TriggerForIncompleteCompletions =
          [ `TriggerForIncompleteCompletions ]
        and vscode_ConfigurationChangeEvent =
          [ `Vscode_ConfigurationChangeEvent ] intf
        and vscode_ConfigurationScope =
          (vscode_TextDocument, vscode_Uri, vscode_WorkspaceFolder,
            anonymous_interface_35) union4
        and vscode_ConfigurationTarget =
          [ `Global  | `Workspace  | `WorkspaceFolder ]
        and vscode_ConfigurationTarget_Global = [ `Global ]
        and vscode_ConfigurationTarget_Workspace = [ `Workspace ]
        and vscode_ConfigurationTarget_WorkspaceFolder = [ `WorkspaceFolder ]
        and vscode_CustomDocument = [ `Vscode_CustomDocument ] intf
        and vscode_CustomDocumentBackup =
          [ `Vscode_CustomDocumentBackup ] intf
        and vscode_CustomDocumentBackupContext =
          [ `Vscode_CustomDocumentBackupContext ] intf
        and 'T vscode_CustomDocumentContentChangeEvent =
          [ `Vscode_CustomDocumentContentChangeEvent of 'T ] intf
        and 'T vscode_CustomDocumentEditEvent =
          [ `Vscode_CustomDocumentEditEvent of 'T ] intf
        and vscode_CustomDocumentOpenContext =
          [ `Vscode_CustomDocumentOpenContext ] intf
        and 'T vscode_CustomEditorProvider =
          [ `Vscode_CustomEditorProvider of 'T 
          | `Vscode_CustomReadonlyEditorProvider of 'T ] intf
        and vscode_CustomExecution = [ `Vscode_CustomExecution ] intf
        and 'T vscode_CustomReadonlyEditorProvider =
          [ `Vscode_CustomReadonlyEditorProvider of 'T ] intf
        and vscode_CustomTextEditorProvider =
          [ `Vscode_CustomTextEditorProvider ] intf
        and vscode_DebugAdapter =
          [ `Vscode_DebugAdapter  | `Vscode_Disposable ] intf
        and vscode_DebugAdapterDescriptor =
          (vscode_DebugAdapterExecutable,
            vscode_DebugAdapterInlineImplementation,
            vscode_DebugAdapterNamedPipeServer, vscode_DebugAdapterServer)
            union4
        and vscode_DebugAdapterDescriptorFactory =
          [ `Vscode_DebugAdapterDescriptorFactory ] intf
        and vscode_DebugAdapterExecutable =
          [ `Vscode_DebugAdapterExecutable ] intf
        and vscode_DebugAdapterExecutableOptions =
          [ `Vscode_DebugAdapterExecutableOptions ] intf
        and vscode_DebugAdapterInlineImplementation =
          [ `Vscode_DebugAdapterInlineImplementation ] intf
        and vscode_DebugAdapterNamedPipeServer =
          [ `Vscode_DebugAdapterNamedPipeServer ] intf
        and vscode_DebugAdapterServer = [ `Vscode_DebugAdapterServer ] intf
        and vscode_DebugAdapterTracker = [ `Vscode_DebugAdapterTracker ] intf
        and vscode_DebugAdapterTrackerFactory =
          [ `Vscode_DebugAdapterTrackerFactory ] intf
        and vscode_DebugConfiguration = [ `Vscode_DebugConfiguration ] intf
        and vscode_DebugConfigurationProvider =
          [ `Vscode_DebugConfigurationProvider ] intf
        and vscode_DebugConfigurationProviderTriggerKind =
          [ `Initial  | `Dynamic ]
        and vscode_DebugConfigurationProviderTriggerKind_Initial =
          [ `Initial ]
        and vscode_DebugConfigurationProviderTriggerKind_Dynamic =
          [ `Dynamic ]
        and vscode_DebugConsole = [ `Vscode_DebugConsole ] intf
        and vscode_DebugConsoleMode = [ `Separate  | `MergeWithParent ]
        and vscode_DebugConsoleMode_Separate = [ `Separate ]
        and vscode_DebugConsoleMode_MergeWithParent = [ `MergeWithParent ]
        and vscode_DebugProtocolBreakpoint =
          [ `Vscode_DebugProtocolBreakpoint ] intf
        and vscode_DebugProtocolMessage =
          [ `Vscode_DebugProtocolMessage ] intf
        and vscode_DebugProtocolSource = [ `Vscode_DebugProtocolSource ] intf
        and vscode_DebugSession = [ `Vscode_DebugSession ] intf
        and vscode_DebugSessionCustomEvent =
          [ `Vscode_DebugSessionCustomEvent ] intf
        and vscode_DebugSessionOptions = [ `Vscode_DebugSessionOptions ] intf
        and vscode_Declaration =
          (vscode_Location, (vscode_Location, vscode_LocationLink) union2)
            or_array
        and vscode_DeclarationProvider = [ `Vscode_DeclarationProvider ] intf
        and vscode_DecorationInstanceRenderOptions =
          [ `Vscode_DecorationInstanceRenderOptions 
          | `Vscode_ThemableDecorationInstanceRenderOptions ] intf
        and vscode_DecorationOptions = [ `Vscode_DecorationOptions ] intf
        and vscode_DecorationRangeBehavior =
          [ `OpenOpen  | `ClosedClosed  | `OpenClosed  | `ClosedOpen ]
        and vscode_DecorationRangeBehavior_OpenOpen = [ `OpenOpen ]
        and vscode_DecorationRangeBehavior_ClosedClosed = [ `ClosedClosed ]
        and vscode_DecorationRangeBehavior_OpenClosed = [ `OpenClosed ]
        and vscode_DecorationRangeBehavior_ClosedOpen = [ `ClosedOpen ]
        and vscode_DecorationRenderOptions =
          [ `Vscode_DecorationRenderOptions 
          | `Vscode_ThemableDecorationRenderOptions ] intf
        and vscode_Definition = (vscode_Location, vscode_Location) or_array
        and vscode_DefinitionLink = vscode_LocationLink
        and vscode_DefinitionProvider = [ `Vscode_DefinitionProvider ] intf
        and vscode_Diagnostic = [ `Vscode_Diagnostic ] intf
        and vscode_DiagnosticChangeEvent =
          [ `Vscode_DiagnosticChangeEvent ] intf
        and vscode_DiagnosticCollection =
          [ `Vscode_DiagnosticCollection ] intf
        and vscode_DiagnosticRelatedInformation =
          [ `Vscode_DiagnosticRelatedInformation ] intf
        and vscode_DiagnosticSeverity =
          [ `Error  | `Warning  | `Information  | `Hint ]
        and vscode_DiagnosticSeverity_Error = [ `Error ]
        and vscode_DiagnosticSeverity_Warning = [ `Warning ]
        and vscode_DiagnosticSeverity_Information = [ `Information ]
        and vscode_DiagnosticSeverity_Hint = [ `Hint ]
        and vscode_DiagnosticTag = [ `Unnecessary  | `Deprecated ]
        and vscode_DiagnosticTag_Unnecessary = [ `Unnecessary ]
        and vscode_DiagnosticTag_Deprecated = [ `Deprecated ]
        and vscode_Disposable = [ `Vscode_Disposable ] intf
        and vscode_DocumentColorProvider =
          [ `Vscode_DocumentColorProvider ] intf
        and vscode_DocumentFilter = [ `Vscode_DocumentFilter ] intf
        and vscode_DocumentFormattingEditProvider =
          [ `Vscode_DocumentFormattingEditProvider ] intf
        and vscode_DocumentHighlight = [ `Vscode_DocumentHighlight ] intf
        and vscode_DocumentHighlightKind = [ `Text  | `Read  | `Write ]
        and vscode_DocumentHighlightKind_Text = [ `Text ]
        and vscode_DocumentHighlightKind_Read = [ `Read ]
        and vscode_DocumentHighlightKind_Write = [ `Write ]
        and vscode_DocumentHighlightProvider =
          [ `Vscode_DocumentHighlightProvider ] intf
        and vscode_DocumentLink = [ `Vscode_DocumentLink ] intf
        and 'T vscode_DocumentLinkProvider =
          [ `Vscode_DocumentLinkProvider of 'T ] intf
        and vscode_DocumentRangeFormattingEditProvider =
          [ `Vscode_DocumentRangeFormattingEditProvider ] intf
        and vscode_DocumentRangeSemanticTokensProvider =
          [ `Vscode_DocumentRangeSemanticTokensProvider ] intf
        and vscode_DocumentSelector =
          (vscode_DocumentFilter, vscode_DocumentFilter or_string list)
            union2 or_string
        and vscode_DocumentSemanticTokensProvider =
          [ `Vscode_DocumentSemanticTokensProvider ] intf
        and vscode_DocumentSymbol = [ `Vscode_DocumentSymbol ] intf
        and vscode_DocumentSymbolProvider =
          [ `Vscode_DocumentSymbolProvider ] intf
        and vscode_DocumentSymbolProviderMetadata =
          [ `Vscode_DocumentSymbolProviderMetadata ] intf
        and vscode_EndOfLine = [ `LF  | `CRLF ]
        and vscode_EndOfLine_LF = [ `LF ]
        and vscode_EndOfLine_CRLF = [ `CRLF ]
        and vscode_EnterAction = [ `Vscode_EnterAction ] intf
        and vscode_EnvironmentVariableCollection =
          [ `Vscode_EnvironmentVariableCollection ] intf
        and vscode_EnvironmentVariableMutator =
          [ `Vscode_EnvironmentVariableMutator ] intf
        and vscode_EnvironmentVariableMutatorType =
          [ `Replace  | `Append  | `Prepend ]
        and vscode_EnvironmentVariableMutatorType_Replace = [ `Replace ]
        and vscode_EnvironmentVariableMutatorType_Append = [ `Append ]
        and vscode_EnvironmentVariableMutatorType_Prepend = [ `Prepend ]
        and vscode_EvaluatableExpression =
          [ `Vscode_EvaluatableExpression ] intf
        and vscode_EvaluatableExpressionProvider =
          [ `Vscode_EvaluatableExpressionProvider ] intf
        and 'T vscode_Event = [ `Vscode_Event of 'T ] intf
        and 'T vscode_EventEmitter = [ `Vscode_EventEmitter of 'T ] intf
        and 'T vscode_Extension = [ `Vscode_Extension of 'T ] intf
        and vscode_ExtensionContext = [ `Vscode_ExtensionContext ] intf
        and vscode_ExtensionKind = [ `UI  | `Workspace ]
        and vscode_ExtensionKind_UI = [ `UI ]
        and vscode_ExtensionKind_Workspace = [ `Workspace ]
        and vscode_ExtensionMode = [ `Production  | `Development  | `Test ]
        and vscode_ExtensionMode_Production = [ `Production ]
        and vscode_ExtensionMode_Development = [ `Development ]
        and vscode_ExtensionMode_Test = [ `Test ]
        and vscode_ExtensionTerminalOptions =
          [ `Vscode_ExtensionTerminalOptions ] intf
        and vscode_FileChangeEvent = [ `Vscode_FileChangeEvent ] intf
        and vscode_FileChangeType = [ `Changed  | `Created  | `Deleted ]
        and vscode_FileChangeType_Changed = [ `Changed ]
        and vscode_FileChangeType_Created = [ `Created ]
        and vscode_FileChangeType_Deleted = [ `Deleted ]
        and vscode_FileCreateEvent = [ `Vscode_FileCreateEvent ] intf
        and vscode_FileDecoration = [ `Vscode_FileDecoration ] intf
        and vscode_FileDecorationProvider =
          [ `Vscode_FileDecorationProvider ] intf
        and vscode_FileDeleteEvent = [ `Vscode_FileDeleteEvent ] intf
        and vscode_FileRenameEvent = [ `Vscode_FileRenameEvent ] intf
        and vscode_FileStat = [ `Vscode_FileStat ] intf
        and vscode_FileSystem = [ `Vscode_FileSystem ] intf
        and vscode_FileSystemError = [ `Vscode_FileSystemError ] intf
        and vscode_FileSystemProvider = [ `Vscode_FileSystemProvider ] intf
        and vscode_FileSystemWatcher =
          [ `Vscode_FileSystemWatcher  | `Vscode_Disposable ] intf
        and vscode_FileType =
          [ `Unknown  | `File  | `Directory  | `SymbolicLink ]
        and vscode_FileType_Unknown = [ `Unknown ]
        and vscode_FileType_File = [ `File ]
        and vscode_FileType_Directory = [ `Directory ]
        and vscode_FileType_SymbolicLink = [ `SymbolicLink ]
        and vscode_FileWillCreateEvent = [ `Vscode_FileWillCreateEvent ] intf
        and vscode_FileWillDeleteEvent = [ `Vscode_FileWillDeleteEvent ] intf
        and vscode_FileWillRenameEvent = [ `Vscode_FileWillRenameEvent ] intf
        and vscode_FoldingContext = [ `Vscode_FoldingContext ] intf
        and vscode_FoldingRange = [ `Vscode_FoldingRange ] intf
        and vscode_FoldingRangeKind = [ `Comment  | `Imports  | `Region ]
        and vscode_FoldingRangeKind_Comment = [ `Comment ]
        and vscode_FoldingRangeKind_Imports = [ `Imports ]
        and vscode_FoldingRangeKind_Region = [ `Region ]
        and vscode_FoldingRangeProvider =
          [ `Vscode_FoldingRangeProvider ] intf
        and vscode_FormattingOptions = [ `Vscode_FormattingOptions ] intf
        and vscode_FunctionBreakpoint =
          [ `Vscode_FunctionBreakpoint  | `Vscode_Breakpoint ] intf
        and vscode_GlobPattern = vscode_RelativePattern or_string
        and vscode_Hover = [ `Vscode_Hover ] intf
        and vscode_HoverProvider = [ `Vscode_HoverProvider ] intf
        and vscode_ImplementationProvider =
          [ `Vscode_ImplementationProvider ] intf
        and vscode_IndentAction =
          [ `None  | `Indent  | `IndentOutdent  | `Outdent ]
        and vscode_IndentAction_None = [ `None ]
        and vscode_IndentAction_Indent = [ `Indent ]
        and vscode_IndentAction_IndentOutdent = [ `IndentOutdent ]
        and vscode_IndentAction_Outdent = [ `Outdent ]
        and vscode_IndentationRule = [ `Vscode_IndentationRule ] intf
        and vscode_InlineValue =
          (vscode_InlineValueEvaluatableExpression, vscode_InlineValueText,
            vscode_InlineValueVariableLookup) union3
        and vscode_InlineValueContext = [ `Vscode_InlineValueContext ] intf
        and vscode_InlineValueEvaluatableExpression =
          [ `Vscode_InlineValueEvaluatableExpression ] intf
        and vscode_InlineValueText = [ `Vscode_InlineValueText ] intf
        and vscode_InlineValueVariableLookup =
          [ `Vscode_InlineValueVariableLookup ] intf
        and vscode_InlineValuesProvider =
          [ `Vscode_InlineValuesProvider ] intf
        and vscode_InputBox = [ `Vscode_InputBox  | `Vscode_QuickInput ] intf
        and vscode_InputBoxOptions = [ `Vscode_InputBoxOptions ] intf
        and vscode_LanguageConfiguration =
          [ `Vscode_LanguageConfiguration ] intf
        and vscode_LinkedEditingRangeProvider =
          [ `Vscode_LinkedEditingRangeProvider ] intf
        and vscode_LinkedEditingRanges = [ `Vscode_LinkedEditingRanges ] intf
        and vscode_Location = [ `Vscode_Location ] intf
        and vscode_LocationLink = [ `Vscode_LocationLink ] intf
        and vscode_MarkdownString = [ `Vscode_MarkdownString ] intf
        and vscode_MarkedString =
          (vscode_MarkdownString, anonymous_interface_13) union2 or_string
        and vscode_Memento = [ `Vscode_Memento ] intf
        and vscode_MessageItem = [ `Vscode_MessageItem ] intf
        and vscode_MessageOptions = [ `Vscode_MessageOptions ] intf
        and vscode_OnEnterRule = [ `Vscode_OnEnterRule ] intf
        and vscode_OnTypeFormattingEditProvider =
          [ `Vscode_OnTypeFormattingEditProvider ] intf
        and vscode_OpenDialogOptions = [ `Vscode_OpenDialogOptions ] intf
        and vscode_OutputChannel = [ `Vscode_OutputChannel ] intf
        and vscode_OverviewRulerLane =
          [ `Left  | `Center  | `Right  | `Full ]
        and vscode_OverviewRulerLane_Left = [ `Left ]
        and vscode_OverviewRulerLane_Center = [ `Center ]
        and vscode_OverviewRulerLane_Right = [ `Right ]
        and vscode_OverviewRulerLane_Full = [ `Full ]
        and vscode_ParameterInformation =
          [ `Vscode_ParameterInformation ] intf
        and vscode_Position = [ `Vscode_Position ] intf
        and vscode_ProcessExecution = [ `Vscode_ProcessExecution ] intf
        and vscode_ProcessExecutionOptions =
          [ `Vscode_ProcessExecutionOptions ] intf
        and 'T vscode_Progress = [ `Vscode_Progress of 'T ] intf
        and vscode_ProgressLocation =
          [ `SourceControl  | `Window  | `Notification ]
        and vscode_ProgressLocation_SourceControl = [ `SourceControl ]
        and vscode_ProgressLocation_Window = [ `Window ]
        and vscode_ProgressLocation_Notification = [ `Notification ]
        and vscode_ProgressOptions = [ `Vscode_ProgressOptions ] intf
        and 'T vscode_ProviderResult =
          ('T, 'T or_null_or_undefined _Thenable) union2 or_null_or_undefined
        and vscode_Pseudoterminal = [ `Vscode_Pseudoterminal ] intf
        and vscode_QuickDiffProvider = [ `Vscode_QuickDiffProvider ] intf
        and vscode_QuickInput = [ `Vscode_QuickInput ] intf
        and vscode_QuickInputButton = [ `Vscode_QuickInputButton ] intf
        and vscode_QuickInputButtons = [ `Vscode_QuickInputButtons ] intf
        and 'T vscode_QuickPick =
          [ `Vscode_QuickPick of 'T  | `Vscode_QuickInput ] intf
        and vscode_QuickPickItem = [ `Vscode_QuickPickItem ] intf
        and vscode_QuickPickOptions = [ `Vscode_QuickPickOptions ] intf
        and vscode_Range = [ `Vscode_Range ] intf
        and vscode_ReferenceContext = [ `Vscode_ReferenceContext ] intf
        and vscode_ReferenceProvider = [ `Vscode_ReferenceProvider ] intf
        and vscode_RelativePattern = [ `Vscode_RelativePattern ] intf
        and vscode_RenameProvider = [ `Vscode_RenameProvider ] intf
        and vscode_RunOptions = [ `Vscode_RunOptions ] intf
        and vscode_SaveDialogOptions = [ `Vscode_SaveDialogOptions ] intf
        and vscode_SecretStorage = [ `Vscode_SecretStorage ] intf
        and vscode_SecretStorageChangeEvent =
          [ `Vscode_SecretStorageChangeEvent ] intf
        and vscode_Selection = [ `Vscode_Selection  | `Vscode_Range ] intf
        and vscode_SelectionRange = [ `Vscode_SelectionRange ] intf
        and vscode_SelectionRangeProvider =
          [ `Vscode_SelectionRangeProvider ] intf
        and vscode_SemanticTokens = [ `Vscode_SemanticTokens ] intf
        and vscode_SemanticTokensBuilder =
          [ `Vscode_SemanticTokensBuilder ] intf
        and vscode_SemanticTokensEdit = [ `Vscode_SemanticTokensEdit ] intf
        and vscode_SemanticTokensEdits = [ `Vscode_SemanticTokensEdits ] intf
        and vscode_SemanticTokensLegend =
          [ `Vscode_SemanticTokensLegend ] intf
        and vscode_ShellExecution = [ `Vscode_ShellExecution ] intf
        and vscode_ShellExecutionOptions =
          [ `Vscode_ShellExecutionOptions ] intf
        and vscode_ShellQuotedString = [ `Vscode_ShellQuotedString ] intf
        and vscode_ShellQuoting = [ `Escape  | `Strong  | `Weak ]
        and vscode_ShellQuoting_Escape = [ `Escape ]
        and vscode_ShellQuoting_Strong = [ `Strong ]
        and vscode_ShellQuoting_Weak = [ `Weak ]
        and vscode_ShellQuotingOptions = [ `Vscode_ShellQuotingOptions ] intf
        and vscode_SignatureHelp = [ `Vscode_SignatureHelp ] intf
        and vscode_SignatureHelpContext =
          [ `Vscode_SignatureHelpContext ] intf
        and vscode_SignatureHelpProvider =
          [ `Vscode_SignatureHelpProvider ] intf
        and vscode_SignatureHelpProviderMetadata =
          [ `Vscode_SignatureHelpProviderMetadata ] intf
        and vscode_SignatureHelpTriggerKind =
          [ `Invoke  | `TriggerCharacter  | `ContentChange ]
        and vscode_SignatureHelpTriggerKind_Invoke = [ `Invoke ]
        and vscode_SignatureHelpTriggerKind_TriggerCharacter =
          [ `TriggerCharacter ]
        and vscode_SignatureHelpTriggerKind_ContentChange =
          [ `ContentChange ]
        and vscode_SignatureInformation =
          [ `Vscode_SignatureInformation ] intf
        and vscode_SnippetString = [ `Vscode_SnippetString ] intf
        and vscode_SourceBreakpoint =
          [ `Vscode_SourceBreakpoint  | `Vscode_Breakpoint ] intf
        and vscode_SourceControl = [ `Vscode_SourceControl ] intf
        and vscode_SourceControlInputBox =
          [ `Vscode_SourceControlInputBox ] intf
        and vscode_SourceControlResourceDecorations =
          [ `Vscode_SourceControlResourceDecorations 
          | `Vscode_SourceControlResourceThemableDecorations ] intf
        and vscode_SourceControlResourceGroup =
          [ `Vscode_SourceControlResourceGroup ] intf
        and vscode_SourceControlResourceState =
          [ `Vscode_SourceControlResourceState ] intf
        and vscode_SourceControlResourceThemableDecorations =
          [ `Vscode_SourceControlResourceThemableDecorations ] intf
        and vscode_StatusBarAlignment = [ `Left  | `Right ]
        and vscode_StatusBarAlignment_Left = [ `Left ]
        and vscode_StatusBarAlignment_Right = [ `Right ]
        and vscode_StatusBarItem = [ `Vscode_StatusBarItem ] intf
        and vscode_SymbolInformation = [ `Vscode_SymbolInformation ] intf
        and vscode_SymbolKind =
          [ `File  | `Module  | `Namespace  | `Package  | `Class  | `Method 
          | `Property  | `Field  | `Constructor  | `Enum  | `Interface 
          | `Function  | `Variable  | `Constant  | `String  | `Number 
          | `Boolean  | `Array  | `Object  | `Key  | `Null  | `EnumMember 
          | `Struct  | `Event  | `Operator  | `TypeParameter ]
        and vscode_SymbolKind_File = [ `File ]
        and vscode_SymbolKind_Module = [ `Module ]
        and vscode_SymbolKind_Namespace = [ `Namespace ]
        and vscode_SymbolKind_Package = [ `Package ]
        and vscode_SymbolKind_Class = [ `Class ]
        and vscode_SymbolKind_Method = [ `Method ]
        and vscode_SymbolKind_Property = [ `Property ]
        and vscode_SymbolKind_Field = [ `Field ]
        and vscode_SymbolKind_Constructor = [ `Constructor ]
        and vscode_SymbolKind_Enum = [ `Enum ]
        and vscode_SymbolKind_Interface = [ `Interface ]
        and vscode_SymbolKind_Function = [ `Function ]
        and vscode_SymbolKind_Variable = [ `Variable ]
        and vscode_SymbolKind_Constant = [ `Constant ]
        and vscode_SymbolKind_String = [ `String ]
        and vscode_SymbolKind_Number = [ `Number ]
        and vscode_SymbolKind_Boolean = [ `Boolean ]
        and vscode_SymbolKind_Array = [ `Array ]
        and vscode_SymbolKind_Object = [ `Object ]
        and vscode_SymbolKind_Key = [ `Key ]
        and vscode_SymbolKind_Null = [ `Null ]
        and vscode_SymbolKind_EnumMember = [ `EnumMember ]
        and vscode_SymbolKind_Struct = [ `Struct ]
        and vscode_SymbolKind_Event = [ `Event ]
        and vscode_SymbolKind_Operator = [ `Operator ]
        and vscode_SymbolKind_TypeParameter = [ `TypeParameter ]
        and vscode_SymbolTag = [ `Deprecated ]
        and vscode_SymbolTag_Deprecated = [ `Deprecated ]
        and vscode_Task = [ `Vscode_Task ] intf
        and vscode_TaskDefinition = [ `Vscode_TaskDefinition ] intf
        and vscode_TaskEndEvent = [ `Vscode_TaskEndEvent ] intf
        and vscode_TaskExecution = [ `Vscode_TaskExecution ] intf
        and vscode_TaskFilter = [ `Vscode_TaskFilter ] intf
        and vscode_TaskGroup = [ `Vscode_TaskGroup ] intf
        and vscode_TaskPanelKind = [ `Shared  | `Dedicated  | `New ]
        and vscode_TaskPanelKind_Shared = [ `Shared ]
        and vscode_TaskPanelKind_Dedicated = [ `Dedicated ]
        and vscode_TaskPanelKind_New = [ `New ]
        and vscode_TaskPresentationOptions =
          [ `Vscode_TaskPresentationOptions ] intf
        and vscode_TaskProcessEndEvent = [ `Vscode_TaskProcessEndEvent ] intf
        and vscode_TaskProcessStartEvent =
          [ `Vscode_TaskProcessStartEvent ] intf
        and 'T vscode_TaskProvider = [ `Vscode_TaskProvider of 'T ] intf
        and vscode_TaskRevealKind = [ `Always  | `Silent  | `Never ]
        and vscode_TaskRevealKind_Always = [ `Always ]
        and vscode_TaskRevealKind_Silent = [ `Silent ]
        and vscode_TaskRevealKind_Never = [ `Never ]
        and vscode_TaskScope = [ `Global  | `Workspace ]
        and vscode_TaskScope_Global = [ `Global ]
        and vscode_TaskScope_Workspace = [ `Workspace ]
        and vscode_TaskStartEvent = [ `Vscode_TaskStartEvent ] intf
        and vscode_Terminal = [ `Vscode_Terminal ] intf
        and vscode_TerminalDimensions = [ `Vscode_TerminalDimensions ] intf
        and vscode_TerminalExitStatus = [ `Vscode_TerminalExitStatus ] intf
        and vscode_TerminalLink = [ `Vscode_TerminalLink ] intf
        and vscode_TerminalLinkContext = [ `Vscode_TerminalLinkContext ] intf
        and 'T vscode_TerminalLinkProvider =
          [ `Vscode_TerminalLinkProvider of 'T ] intf
        and vscode_TerminalOptions = [ `Vscode_TerminalOptions ] intf
        and vscode_TextDocument = [ `Vscode_TextDocument ] intf
        and vscode_TextDocumentChangeEvent =
          [ `Vscode_TextDocumentChangeEvent ] intf
        and vscode_TextDocumentContentChangeEvent =
          [ `Vscode_TextDocumentContentChangeEvent ] intf
        and vscode_TextDocumentContentProvider =
          [ `Vscode_TextDocumentContentProvider ] intf
        and vscode_TextDocumentSaveReason =
          [ `Manual  | `AfterDelay  | `FocusOut ]
        and vscode_TextDocumentSaveReason_Manual = [ `Manual ]
        and vscode_TextDocumentSaveReason_AfterDelay = [ `AfterDelay ]
        and vscode_TextDocumentSaveReason_FocusOut = [ `FocusOut ]
        and vscode_TextDocumentShowOptions =
          [ `Vscode_TextDocumentShowOptions ] intf
        and vscode_TextDocumentWillSaveEvent =
          [ `Vscode_TextDocumentWillSaveEvent ] intf
        and vscode_TextEdit = [ `Vscode_TextEdit ] intf
        and vscode_TextEditor = [ `Vscode_TextEditor ] intf
        and vscode_TextEditorCursorStyle =
          [ `Line  | `Block  | `Underline  | `LineThin  | `BlockOutline 
          | `UnderlineThin ]
        and vscode_TextEditorCursorStyle_Line = [ `Line ]
        and vscode_TextEditorCursorStyle_Block = [ `Block ]
        and vscode_TextEditorCursorStyle_Underline = [ `Underline ]
        and vscode_TextEditorCursorStyle_LineThin = [ `LineThin ]
        and vscode_TextEditorCursorStyle_BlockOutline = [ `BlockOutline ]
        and vscode_TextEditorCursorStyle_UnderlineThin = [ `UnderlineThin ]
        and vscode_TextEditorDecorationType =
          [ `Vscode_TextEditorDecorationType ] intf
        and vscode_TextEditorEdit = [ `Vscode_TextEditorEdit ] intf
        and vscode_TextEditorLineNumbersStyle = [ `Off  | `On  | `Relative ]
        and vscode_TextEditorLineNumbersStyle_Off = [ `Off ]
        and vscode_TextEditorLineNumbersStyle_On = [ `On ]
        and vscode_TextEditorLineNumbersStyle_Relative = [ `Relative ]
        and vscode_TextEditorOptions = [ `Vscode_TextEditorOptions ] intf
        and vscode_TextEditorOptionsChangeEvent =
          [ `Vscode_TextEditorOptionsChangeEvent ] intf
        and vscode_TextEditorRevealType =
          [ `Default  | `InCenter  | `InCenterIfOutsideViewport  | `AtTop ]
        and vscode_TextEditorRevealType_Default = [ `Default ]
        and vscode_TextEditorRevealType_InCenter = [ `InCenter ]
        and vscode_TextEditorRevealType_InCenterIfOutsideViewport =
          [ `InCenterIfOutsideViewport ]
        and vscode_TextEditorRevealType_AtTop = [ `AtTop ]
        and vscode_TextEditorSelectionChangeEvent =
          [ `Vscode_TextEditorSelectionChangeEvent ] intf
        and vscode_TextEditorSelectionChangeKind =
          [ `Keyboard  | `Mouse  | `Command ]
        and vscode_TextEditorSelectionChangeKind_Keyboard = [ `Keyboard ]
        and vscode_TextEditorSelectionChangeKind_Mouse = [ `Mouse ]
        and vscode_TextEditorSelectionChangeKind_Command = [ `Command ]
        and vscode_TextEditorViewColumnChangeEvent =
          [ `Vscode_TextEditorViewColumnChangeEvent ] intf
        and vscode_TextEditorVisibleRangesChangeEvent =
          [ `Vscode_TextEditorVisibleRangesChangeEvent ] intf
        and vscode_TextLine = [ `Vscode_TextLine ] intf
        and vscode_ThemableDecorationAttachmentRenderOptions =
          [ `Vscode_ThemableDecorationAttachmentRenderOptions ] intf
        and vscode_ThemableDecorationInstanceRenderOptions =
          [ `Vscode_ThemableDecorationInstanceRenderOptions ] intf
        and vscode_ThemableDecorationRenderOptions =
          [ `Vscode_ThemableDecorationRenderOptions ] intf
        and vscode_ThemeColor = [ `Vscode_ThemeColor ] intf
        and vscode_ThemeIcon = [ `Vscode_ThemeIcon ] intf
        and 'T vscode_TreeDataProvider =
          [ `Vscode_TreeDataProvider of 'T ] intf
        and vscode_TreeItem = [ `Vscode_TreeItem ] intf
        and vscode_TreeItemCollapsibleState =
          [ `None  | `Collapsed  | `Expanded ]
        and vscode_TreeItemCollapsibleState_None = [ `None ]
        and vscode_TreeItemCollapsibleState_Collapsed = [ `Collapsed ]
        and vscode_TreeItemCollapsibleState_Expanded = [ `Expanded ]
        and vscode_TreeItemLabel = [ `Vscode_TreeItemLabel ] intf
        and 'T vscode_TreeView =
          [ `Vscode_TreeView of 'T  | `Vscode_Disposable ] intf
        and 'T vscode_TreeViewExpansionEvent =
          [ `Vscode_TreeViewExpansionEvent of 'T ] intf
        and 'T vscode_TreeViewOptions =
          [ `Vscode_TreeViewOptions of 'T ] intf
        and 'T vscode_TreeViewSelectionChangeEvent =
          [ `Vscode_TreeViewSelectionChangeEvent of 'T ] intf
        and vscode_TreeViewVisibilityChangeEvent =
          [ `Vscode_TreeViewVisibilityChangeEvent ] intf
        and vscode_TypeDefinitionProvider =
          [ `Vscode_TypeDefinitionProvider ] intf
        and vscode_UIKind = [ `Desktop  | `Web ]
        and vscode_UIKind_Desktop = [ `Desktop ]
        and vscode_UIKind_Web = [ `Web ]
        and vscode_Uri = [ `Vscode_Uri ] intf
        and vscode_UriHandler = [ `Vscode_UriHandler ] intf
        and vscode_ViewColumn =
          [ `Active  | `Beside  | `One  | `Two  | `Three  | `Four  | 
            `Five 
          | `Six  | `Seven  | `Eight  | `Nine ]
        and vscode_ViewColumn_Active = [ `Active ]
        and vscode_ViewColumn_Beside = [ `Beside ]
        and vscode_ViewColumn_One = [ `One ]
        and vscode_ViewColumn_Two = [ `Two ]
        and vscode_ViewColumn_Three = [ `Three ]
        and vscode_ViewColumn_Four = [ `Four ]
        and vscode_ViewColumn_Five = [ `Five ]
        and vscode_ViewColumn_Six = [ `Six ]
        and vscode_ViewColumn_Seven = [ `Seven ]
        and vscode_ViewColumn_Eight = [ `Eight ]
        and vscode_ViewColumn_Nine = [ `Nine ]
        and vscode_Webview = [ `Vscode_Webview ] intf
        and vscode_WebviewOptions = [ `Vscode_WebviewOptions ] intf
        and vscode_WebviewPanel = [ `Vscode_WebviewPanel ] intf
        and vscode_WebviewPanelOnDidChangeViewStateEvent =
          [ `Vscode_WebviewPanelOnDidChangeViewStateEvent ] intf
        and vscode_WebviewPanelOptions = [ `Vscode_WebviewPanelOptions ] intf
        and 'T vscode_WebviewPanelSerializer =
          [ `Vscode_WebviewPanelSerializer of 'T ] intf
        and vscode_WebviewPortMapping = [ `Vscode_WebviewPortMapping ] intf
        and vscode_WebviewView = [ `Vscode_WebviewView ] intf
        and vscode_WebviewViewProvider = [ `Vscode_WebviewViewProvider ] intf
        and 'T vscode_WebviewViewResolveContext =
          [ `Vscode_WebviewViewResolveContext of 'T ] intf
        and vscode_WindowState = [ `Vscode_WindowState ] intf
        and vscode_WorkspaceConfiguration =
          [ `Vscode_WorkspaceConfiguration ] intf
        and vscode_WorkspaceEdit = [ `Vscode_WorkspaceEdit ] intf
        and vscode_WorkspaceEditEntryMetadata =
          [ `Vscode_WorkspaceEditEntryMetadata ] intf
        and vscode_WorkspaceFolder = [ `Vscode_WorkspaceFolder ] intf
        and vscode_WorkspaceFolderPickOptions =
          [ `Vscode_WorkspaceFolderPickOptions ] intf
        and vscode_WorkspaceFoldersChangeEvent =
          [ `Vscode_WorkspaceFoldersChangeEvent ] intf
        and 'T vscode_WorkspaceSymbolProvider =
          [ `Vscode_WorkspaceSymbolProvider of 'T ] intf
        let rec _Thenable_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Thenable
          = fun _T -> Obj.magic
        and _Thenable_to_js : 'T . ('T -> Ojs.t) -> 'T _Thenable -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_AccessibilityInformation_of_js :
          Ojs.t -> vscode_AccessibilityInformation = Obj.magic
        and vscode_AccessibilityInformation_to_js :
          vscode_AccessibilityInformation -> Ojs.t = Obj.magic
        and vscode_AuthenticationGetSessionOptions_of_js :
          Ojs.t -> vscode_AuthenticationGetSessionOptions = Obj.magic
        and vscode_AuthenticationGetSessionOptions_to_js :
          vscode_AuthenticationGetSessionOptions -> Ojs.t = Obj.magic
        and vscode_AuthenticationProvider_of_js :
          Ojs.t -> vscode_AuthenticationProvider = Obj.magic
        and vscode_AuthenticationProvider_to_js :
          vscode_AuthenticationProvider -> Ojs.t = Obj.magic
        and vscode_AuthenticationProviderAuthenticationSessionsChangeEvent_of_js
          :
          Ojs.t ->
            vscode_AuthenticationProviderAuthenticationSessionsChangeEvent
          = Obj.magic
        and vscode_AuthenticationProviderAuthenticationSessionsChangeEvent_to_js
          :
          vscode_AuthenticationProviderAuthenticationSessionsChangeEvent ->
            Ojs.t
          = Obj.magic
        and vscode_AuthenticationProviderInformation_of_js :
          Ojs.t -> vscode_AuthenticationProviderInformation = Obj.magic
        and vscode_AuthenticationProviderInformation_to_js :
          vscode_AuthenticationProviderInformation -> Ojs.t = Obj.magic
        and vscode_AuthenticationProviderOptions_of_js :
          Ojs.t -> vscode_AuthenticationProviderOptions = Obj.magic
        and vscode_AuthenticationProviderOptions_to_js :
          vscode_AuthenticationProviderOptions -> Ojs.t = Obj.magic
        and vscode_AuthenticationSession_of_js :
          Ojs.t -> vscode_AuthenticationSession = Obj.magic
        and vscode_AuthenticationSession_to_js :
          vscode_AuthenticationSession -> Ojs.t = Obj.magic
        and vscode_AuthenticationSessionAccountInformation_of_js :
          Ojs.t -> vscode_AuthenticationSessionAccountInformation = Obj.magic
        and vscode_AuthenticationSessionAccountInformation_to_js :
          vscode_AuthenticationSessionAccountInformation -> Ojs.t = Obj.magic
        and vscode_AuthenticationSessionsChangeEvent_of_js :
          Ojs.t -> vscode_AuthenticationSessionsChangeEvent = Obj.magic
        and vscode_AuthenticationSessionsChangeEvent_to_js :
          vscode_AuthenticationSessionsChangeEvent -> Ojs.t = Obj.magic
        and vscode_Breakpoint_of_js : Ojs.t -> vscode_Breakpoint = Obj.magic
        and vscode_Breakpoint_to_js : vscode_Breakpoint -> Ojs.t = Obj.magic
        and vscode_BreakpointsChangeEvent_of_js :
          Ojs.t -> vscode_BreakpointsChangeEvent = Obj.magic
        and vscode_BreakpointsChangeEvent_to_js :
          vscode_BreakpointsChangeEvent -> Ojs.t = Obj.magic
        and vscode_CallHierarchyIncomingCall_of_js :
          Ojs.t -> vscode_CallHierarchyIncomingCall = Obj.magic
        and vscode_CallHierarchyIncomingCall_to_js :
          vscode_CallHierarchyIncomingCall -> Ojs.t = Obj.magic
        and vscode_CallHierarchyItem_of_js :
          Ojs.t -> vscode_CallHierarchyItem = Obj.magic
        and vscode_CallHierarchyItem_to_js :
          vscode_CallHierarchyItem -> Ojs.t = Obj.magic
        and vscode_CallHierarchyOutgoingCall_of_js :
          Ojs.t -> vscode_CallHierarchyOutgoingCall = Obj.magic
        and vscode_CallHierarchyOutgoingCall_to_js :
          vscode_CallHierarchyOutgoingCall -> Ojs.t = Obj.magic
        and vscode_CallHierarchyProvider_of_js :
          Ojs.t -> vscode_CallHierarchyProvider = Obj.magic
        and vscode_CallHierarchyProvider_to_js :
          vscode_CallHierarchyProvider -> Ojs.t = Obj.magic
        and vscode_CancellationError_of_js :
          Ojs.t -> vscode_CancellationError = Obj.magic
        and vscode_CancellationError_to_js :
          vscode_CancellationError -> Ojs.t = Obj.magic
        and vscode_CancellationToken_of_js :
          Ojs.t -> vscode_CancellationToken = Obj.magic
        and vscode_CancellationToken_to_js :
          vscode_CancellationToken -> Ojs.t = Obj.magic
        and vscode_CancellationTokenSource_of_js :
          Ojs.t -> vscode_CancellationTokenSource = Obj.magic
        and vscode_CancellationTokenSource_to_js :
          vscode_CancellationTokenSource -> Ojs.t = Obj.magic
        and vscode_CharacterPair_of_js : Ojs.t -> vscode_CharacterPair =
          fun (x5 : Ojs.t) ->
            let x6 = x5 in
            ((Ojs.string_of_js (Ojs.array_get x6 0)),
              (Ojs.string_of_js (Ojs.array_get x6 1)))
        and vscode_CharacterPair_to_js : vscode_CharacterPair -> Ojs.t =
          fun (x1 : (string * string)) ->
            let (x2, x3) = x1 in
            let x4 = Ojs.array_make 2 in
            Ojs.array_set x4 0 (Ojs.string_to_js x2);
            Ojs.array_set x4 1 (Ojs.string_to_js x3);
            x4
        and vscode_Clipboard_of_js : Ojs.t -> vscode_Clipboard = Obj.magic
        and vscode_Clipboard_to_js : vscode_Clipboard -> Ojs.t = Obj.magic
        and vscode_CodeAction_of_js : Ojs.t -> vscode_CodeAction = Obj.magic
        and vscode_CodeAction_to_js : vscode_CodeAction -> Ojs.t = Obj.magic
        and vscode_CodeActionContext_of_js :
          Ojs.t -> vscode_CodeActionContext = Obj.magic
        and vscode_CodeActionContext_to_js :
          vscode_CodeActionContext -> Ojs.t = Obj.magic
        and vscode_CodeActionKind_of_js : Ojs.t -> vscode_CodeActionKind =
          Obj.magic
        and vscode_CodeActionKind_to_js : vscode_CodeActionKind -> Ojs.t =
          Obj.magic
        and vscode_CodeActionProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CodeActionProvider =
          fun _T -> Obj.magic
        and vscode_CodeActionProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_CodeActionProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_CodeActionProviderMetadata_of_js :
          Ojs.t -> vscode_CodeActionProviderMetadata = Obj.magic
        and vscode_CodeActionProviderMetadata_to_js :
          vscode_CodeActionProviderMetadata -> Ojs.t = Obj.magic
        and vscode_CodeActionTriggerKind_of_js :
          Ojs.t -> vscode_CodeActionTriggerKind =
          fun (x8 : Ojs.t) ->
            let x9 = x8 in
            match Ojs.int_of_js x9 with
            | 1 -> `Invoke
            | 2 -> `Automatic
            | _ -> assert false
        and vscode_CodeActionTriggerKind_to_js :
          vscode_CodeActionTriggerKind -> Ojs.t =
          fun (x7 : [ `Invoke  | `Automatic ]) ->
            match x7 with
            | `Invoke -> Ojs.int_to_js 1
            | `Automatic -> Ojs.int_to_js 2
        and vscode_CodeActionTriggerKind_Invoke_of_js :
          Ojs.t -> vscode_CodeActionTriggerKind_Invoke =
          fun (x11 : Ojs.t) ->
            let x12 = x11 in
            match Ojs.int_of_js x12 with | 1 -> `Invoke | _ -> assert false
        and vscode_CodeActionTriggerKind_Invoke_to_js :
          vscode_CodeActionTriggerKind_Invoke -> Ojs.t =
          fun (x10 : [ `Invoke ]) ->
            match x10 with | `Invoke -> Ojs.int_to_js 1
        and vscode_CodeActionTriggerKind_Automatic_of_js :
          Ojs.t -> vscode_CodeActionTriggerKind_Automatic =
          fun (x14 : Ojs.t) ->
            let x15 = x14 in
            match Ojs.int_of_js x15 with
            | 2 -> `Automatic
            | _ -> assert false
        and vscode_CodeActionTriggerKind_Automatic_to_js :
          vscode_CodeActionTriggerKind_Automatic -> Ojs.t =
          fun (x13 : [ `Automatic ]) ->
            match x13 with | `Automatic -> Ojs.int_to_js 2
        and vscode_CodeLens_of_js : Ojs.t -> vscode_CodeLens = Obj.magic
        and vscode_CodeLens_to_js : vscode_CodeLens -> Ojs.t = Obj.magic
        and vscode_CodeLensProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CodeLensProvider =
          fun _T -> Obj.magic
        and vscode_CodeLensProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_CodeLensProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_Color_of_js : Ojs.t -> vscode_Color = Obj.magic
        and vscode_Color_to_js : vscode_Color -> Ojs.t = Obj.magic
        and vscode_ColorInformation_of_js : Ojs.t -> vscode_ColorInformation
          = Obj.magic
        and vscode_ColorInformation_to_js : vscode_ColorInformation -> Ojs.t
          = Obj.magic
        and vscode_ColorPresentation_of_js :
          Ojs.t -> vscode_ColorPresentation = Obj.magic
        and vscode_ColorPresentation_to_js :
          vscode_ColorPresentation -> Ojs.t = Obj.magic
        and vscode_ColorTheme_of_js : Ojs.t -> vscode_ColorTheme = Obj.magic
        and vscode_ColorTheme_to_js : vscode_ColorTheme -> Ojs.t = Obj.magic
        and vscode_ColorThemeKind_of_js : Ojs.t -> vscode_ColorThemeKind =
          fun (x17 : Ojs.t) ->
            let x18 = x17 in
            match Ojs.int_of_js x18 with
            | 1 -> `Light
            | 2 -> `Dark
            | 3 -> `HighContrast
            | _ -> assert false
        and vscode_ColorThemeKind_to_js : vscode_ColorThemeKind -> Ojs.t =
          fun (x16 : [ `Light  | `Dark  | `HighContrast ]) ->
            match x16 with
            | `Light -> Ojs.int_to_js 1
            | `Dark -> Ojs.int_to_js 2
            | `HighContrast -> Ojs.int_to_js 3
        and vscode_ColorThemeKind_Light_of_js :
          Ojs.t -> vscode_ColorThemeKind_Light =
          fun (x20 : Ojs.t) ->
            let x21 = x20 in
            match Ojs.int_of_js x21 with | 1 -> `Light | _ -> assert false
        and vscode_ColorThemeKind_Light_to_js :
          vscode_ColorThemeKind_Light -> Ojs.t =
          fun (x19 : [ `Light ]) ->
            match x19 with | `Light -> Ojs.int_to_js 1
        and vscode_ColorThemeKind_Dark_of_js :
          Ojs.t -> vscode_ColorThemeKind_Dark =
          fun (x23 : Ojs.t) ->
            let x24 = x23 in
            match Ojs.int_of_js x24 with | 2 -> `Dark | _ -> assert false
        and vscode_ColorThemeKind_Dark_to_js :
          vscode_ColorThemeKind_Dark -> Ojs.t =
          fun (x22 : [ `Dark ]) -> match x22 with | `Dark -> Ojs.int_to_js 2
        and vscode_ColorThemeKind_HighContrast_of_js :
          Ojs.t -> vscode_ColorThemeKind_HighContrast =
          fun (x26 : Ojs.t) ->
            let x27 = x26 in
            match Ojs.int_of_js x27 with
            | 3 -> `HighContrast
            | _ -> assert false
        and vscode_ColorThemeKind_HighContrast_to_js :
          vscode_ColorThemeKind_HighContrast -> Ojs.t =
          fun (x25 : [ `HighContrast ]) ->
            match x25 with | `HighContrast -> Ojs.int_to_js 3
        and vscode_Command_of_js : Ojs.t -> vscode_Command = Obj.magic
        and vscode_Command_to_js : vscode_Command -> Ojs.t = Obj.magic
        and vscode_Comment_of_js : Ojs.t -> vscode_Comment = Obj.magic
        and vscode_Comment_to_js : vscode_Comment -> Ojs.t = Obj.magic
        and vscode_CommentAuthorInformation_of_js :
          Ojs.t -> vscode_CommentAuthorInformation = Obj.magic
        and vscode_CommentAuthorInformation_to_js :
          vscode_CommentAuthorInformation -> Ojs.t = Obj.magic
        and vscode_CommentController_of_js :
          Ojs.t -> vscode_CommentController = Obj.magic
        and vscode_CommentController_to_js :
          vscode_CommentController -> Ojs.t = Obj.magic
        and vscode_CommentMode_of_js : Ojs.t -> vscode_CommentMode =
          fun (x29 : Ojs.t) ->
            let x30 = x29 in
            match Ojs.int_of_js x30 with
            | 0 -> `Editing
            | 1 -> `Preview
            | _ -> assert false
        and vscode_CommentMode_to_js : vscode_CommentMode -> Ojs.t =
          fun (x28 : [ `Editing  | `Preview ]) ->
            match x28 with
            | `Editing -> Ojs.int_to_js 0
            | `Preview -> Ojs.int_to_js 1
        and vscode_CommentMode_Editing_of_js :
          Ojs.t -> vscode_CommentMode_Editing =
          fun (x32 : Ojs.t) ->
            let x33 = x32 in
            match Ojs.int_of_js x33 with | 0 -> `Editing | _ -> assert false
        and vscode_CommentMode_Editing_to_js :
          vscode_CommentMode_Editing -> Ojs.t =
          fun (x31 : [ `Editing ]) ->
            match x31 with | `Editing -> Ojs.int_to_js 0
        and vscode_CommentMode_Preview_of_js :
          Ojs.t -> vscode_CommentMode_Preview =
          fun (x35 : Ojs.t) ->
            let x36 = x35 in
            match Ojs.int_of_js x36 with | 1 -> `Preview | _ -> assert false
        and vscode_CommentMode_Preview_to_js :
          vscode_CommentMode_Preview -> Ojs.t =
          fun (x34 : [ `Preview ]) ->
            match x34 with | `Preview -> Ojs.int_to_js 1
        and vscode_CommentOptions_of_js : Ojs.t -> vscode_CommentOptions =
          Obj.magic
        and vscode_CommentOptions_to_js : vscode_CommentOptions -> Ojs.t =
          Obj.magic
        and vscode_CommentReaction_of_js : Ojs.t -> vscode_CommentReaction =
          Obj.magic
        and vscode_CommentReaction_to_js : vscode_CommentReaction -> Ojs.t =
          Obj.magic
        and vscode_CommentReply_of_js : Ojs.t -> vscode_CommentReply =
          Obj.magic
        and vscode_CommentReply_to_js : vscode_CommentReply -> Ojs.t =
          Obj.magic
        and vscode_CommentRule_of_js : Ojs.t -> vscode_CommentRule =
          Obj.magic
        and vscode_CommentRule_to_js : vscode_CommentRule -> Ojs.t =
          Obj.magic
        and vscode_CommentThread_of_js : Ojs.t -> vscode_CommentThread =
          Obj.magic
        and vscode_CommentThread_to_js : vscode_CommentThread -> Ojs.t =
          Obj.magic
        and vscode_CommentThreadCollapsibleState_of_js :
          Ojs.t -> vscode_CommentThreadCollapsibleState =
          fun (x38 : Ojs.t) ->
            let x39 = x38 in
            match Ojs.int_of_js x39 with
            | 0 -> `Collapsed
            | 1 -> `Expanded
            | _ -> assert false
        and vscode_CommentThreadCollapsibleState_to_js :
          vscode_CommentThreadCollapsibleState -> Ojs.t =
          fun (x37 : [ `Collapsed  | `Expanded ]) ->
            match x37 with
            | `Collapsed -> Ojs.int_to_js 0
            | `Expanded -> Ojs.int_to_js 1
        and vscode_CommentThreadCollapsibleState_Collapsed_of_js :
          Ojs.t -> vscode_CommentThreadCollapsibleState_Collapsed =
          fun (x41 : Ojs.t) ->
            let x42 = x41 in
            match Ojs.int_of_js x42 with
            | 0 -> `Collapsed
            | _ -> assert false
        and vscode_CommentThreadCollapsibleState_Collapsed_to_js :
          vscode_CommentThreadCollapsibleState_Collapsed -> Ojs.t =
          fun (x40 : [ `Collapsed ]) ->
            match x40 with | `Collapsed -> Ojs.int_to_js 0
        and vscode_CommentThreadCollapsibleState_Expanded_of_js :
          Ojs.t -> vscode_CommentThreadCollapsibleState_Expanded =
          fun (x44 : Ojs.t) ->
            let x45 = x44 in
            match Ojs.int_of_js x45 with | 1 -> `Expanded | _ -> assert false
        and vscode_CommentThreadCollapsibleState_Expanded_to_js :
          vscode_CommentThreadCollapsibleState_Expanded -> Ojs.t =
          fun (x43 : [ `Expanded ]) ->
            match x43 with | `Expanded -> Ojs.int_to_js 1
        and vscode_CommentingRangeProvider_of_js :
          Ojs.t -> vscode_CommentingRangeProvider = Obj.magic
        and vscode_CommentingRangeProvider_to_js :
          vscode_CommentingRangeProvider -> Ojs.t = Obj.magic
        and vscode_CompletionContext_of_js :
          Ojs.t -> vscode_CompletionContext = Obj.magic
        and vscode_CompletionContext_to_js :
          vscode_CompletionContext -> Ojs.t = Obj.magic
        and vscode_CompletionItem_of_js : Ojs.t -> vscode_CompletionItem =
          Obj.magic
        and vscode_CompletionItem_to_js : vscode_CompletionItem -> Ojs.t =
          Obj.magic
        and vscode_CompletionItemKind_of_js :
          Ojs.t -> vscode_CompletionItemKind =
          fun (x47 : Ojs.t) ->
            let x48 = x47 in
            match Ojs.int_of_js x48 with
            | 0 -> `Text
            | 1 -> `Method
            | 2 -> `Function
            | 3 -> `Constructor
            | 4 -> `Field
            | 5 -> `Variable
            | 6 -> `Class
            | 7 -> `Interface
            | 8 -> `Module
            | 9 -> `Property
            | 10 -> `Unit
            | 11 -> `Value
            | 12 -> `Enum
            | 13 -> `Keyword
            | 14 -> `Snippet
            | 15 -> `Color
            | 17 -> `Reference
            | 16 -> `File
            | 18 -> `Folder
            | 19 -> `EnumMember
            | 20 -> `Constant
            | 21 -> `Struct
            | 22 -> `Event
            | 23 -> `Operator
            | 24 -> `TypeParameter
            | 25 -> `User
            | 26 -> `Issue
            | _ -> assert false
        and vscode_CompletionItemKind_to_js :
          vscode_CompletionItemKind -> Ojs.t =
          fun
            (x46 :
              [ `Text  | `Method  | `Function  | `Constructor  | `Field 
              | `Variable  | `Class  | `Interface  | `Module  | `Property 
              | `Unit  | `Value  | `Enum  | `Keyword  | `Snippet  | `Color 
              | `Reference  | `File  | `Folder  | `EnumMember  | `Constant 
              | `Struct  | `Event  | `Operator  | `TypeParameter  | `User 
              | `Issue ])
            ->
            match x46 with
            | `Text -> Ojs.int_to_js 0
            | `Method -> Ojs.int_to_js 1
            | `Function -> Ojs.int_to_js 2
            | `Constructor -> Ojs.int_to_js 3
            | `Field -> Ojs.int_to_js 4
            | `Variable -> Ojs.int_to_js 5
            | `Class -> Ojs.int_to_js 6
            | `Interface -> Ojs.int_to_js 7
            | `Module -> Ojs.int_to_js 8
            | `Property -> Ojs.int_to_js 9
            | `Unit -> Ojs.int_to_js 10
            | `Value -> Ojs.int_to_js 11
            | `Enum -> Ojs.int_to_js 12
            | `Keyword -> Ojs.int_to_js 13
            | `Snippet -> Ojs.int_to_js 14
            | `Color -> Ojs.int_to_js 15
            | `Reference -> Ojs.int_to_js 17
            | `File -> Ojs.int_to_js 16
            | `Folder -> Ojs.int_to_js 18
            | `EnumMember -> Ojs.int_to_js 19
            | `Constant -> Ojs.int_to_js 20
            | `Struct -> Ojs.int_to_js 21
            | `Event -> Ojs.int_to_js 22
            | `Operator -> Ojs.int_to_js 23
            | `TypeParameter -> Ojs.int_to_js 24
            | `User -> Ojs.int_to_js 25
            | `Issue -> Ojs.int_to_js 26
        and vscode_CompletionItemKind_Text_of_js :
          Ojs.t -> vscode_CompletionItemKind_Text =
          fun (x50 : Ojs.t) ->
            let x51 = x50 in
            match Ojs.int_of_js x51 with | 0 -> `Text | _ -> assert false
        and vscode_CompletionItemKind_Text_to_js :
          vscode_CompletionItemKind_Text -> Ojs.t =
          fun (x49 : [ `Text ]) -> match x49 with | `Text -> Ojs.int_to_js 0
        and vscode_CompletionItemKind_Method_of_js :
          Ojs.t -> vscode_CompletionItemKind_Method =
          fun (x53 : Ojs.t) ->
            let x54 = x53 in
            match Ojs.int_of_js x54 with | 1 -> `Method | _ -> assert false
        and vscode_CompletionItemKind_Method_to_js :
          vscode_CompletionItemKind_Method -> Ojs.t =
          fun (x52 : [ `Method ]) ->
            match x52 with | `Method -> Ojs.int_to_js 1
        and vscode_CompletionItemKind_Function_of_js :
          Ojs.t -> vscode_CompletionItemKind_Function =
          fun (x56 : Ojs.t) ->
            let x57 = x56 in
            match Ojs.int_of_js x57 with | 2 -> `Function | _ -> assert false
        and vscode_CompletionItemKind_Function_to_js :
          vscode_CompletionItemKind_Function -> Ojs.t =
          fun (x55 : [ `Function ]) ->
            match x55 with | `Function -> Ojs.int_to_js 2
        and vscode_CompletionItemKind_Constructor_of_js :
          Ojs.t -> vscode_CompletionItemKind_Constructor =
          fun (x59 : Ojs.t) ->
            let x60 = x59 in
            match Ojs.int_of_js x60 with
            | 3 -> `Constructor
            | _ -> assert false
        and vscode_CompletionItemKind_Constructor_to_js :
          vscode_CompletionItemKind_Constructor -> Ojs.t =
          fun (x58 : [ `Constructor ]) ->
            match x58 with | `Constructor -> Ojs.int_to_js 3
        and vscode_CompletionItemKind_Field_of_js :
          Ojs.t -> vscode_CompletionItemKind_Field =
          fun (x62 : Ojs.t) ->
            let x63 = x62 in
            match Ojs.int_of_js x63 with | 4 -> `Field | _ -> assert false
        and vscode_CompletionItemKind_Field_to_js :
          vscode_CompletionItemKind_Field -> Ojs.t =
          fun (x61 : [ `Field ]) ->
            match x61 with | `Field -> Ojs.int_to_js 4
        and vscode_CompletionItemKind_Variable_of_js :
          Ojs.t -> vscode_CompletionItemKind_Variable =
          fun (x65 : Ojs.t) ->
            let x66 = x65 in
            match Ojs.int_of_js x66 with | 5 -> `Variable | _ -> assert false
        and vscode_CompletionItemKind_Variable_to_js :
          vscode_CompletionItemKind_Variable -> Ojs.t =
          fun (x64 : [ `Variable ]) ->
            match x64 with | `Variable -> Ojs.int_to_js 5
        and vscode_CompletionItemKind_Class_of_js :
          Ojs.t -> vscode_CompletionItemKind_Class =
          fun (x68 : Ojs.t) ->
            let x69 = x68 in
            match Ojs.int_of_js x69 with | 6 -> `Class | _ -> assert false
        and vscode_CompletionItemKind_Class_to_js :
          vscode_CompletionItemKind_Class -> Ojs.t =
          fun (x67 : [ `Class ]) ->
            match x67 with | `Class -> Ojs.int_to_js 6
        and vscode_CompletionItemKind_Interface_of_js :
          Ojs.t -> vscode_CompletionItemKind_Interface =
          fun (x71 : Ojs.t) ->
            let x72 = x71 in
            match Ojs.int_of_js x72 with
            | 7 -> `Interface
            | _ -> assert false
        and vscode_CompletionItemKind_Interface_to_js :
          vscode_CompletionItemKind_Interface -> Ojs.t =
          fun (x70 : [ `Interface ]) ->
            match x70 with | `Interface -> Ojs.int_to_js 7
        and vscode_CompletionItemKind_Module_of_js :
          Ojs.t -> vscode_CompletionItemKind_Module =
          fun (x74 : Ojs.t) ->
            let x75 = x74 in
            match Ojs.int_of_js x75 with | 8 -> `Module | _ -> assert false
        and vscode_CompletionItemKind_Module_to_js :
          vscode_CompletionItemKind_Module -> Ojs.t =
          fun (x73 : [ `Module ]) ->
            match x73 with | `Module -> Ojs.int_to_js 8
        and vscode_CompletionItemKind_Property_of_js :
          Ojs.t -> vscode_CompletionItemKind_Property =
          fun (x77 : Ojs.t) ->
            let x78 = x77 in
            match Ojs.int_of_js x78 with | 9 -> `Property | _ -> assert false
        and vscode_CompletionItemKind_Property_to_js :
          vscode_CompletionItemKind_Property -> Ojs.t =
          fun (x76 : [ `Property ]) ->
            match x76 with | `Property -> Ojs.int_to_js 9
        and vscode_CompletionItemKind_Unit_of_js :
          Ojs.t -> vscode_CompletionItemKind_Unit =
          fun (x80 : Ojs.t) ->
            let x81 = x80 in
            match Ojs.int_of_js x81 with | 10 -> `Unit | _ -> assert false
        and vscode_CompletionItemKind_Unit_to_js :
          vscode_CompletionItemKind_Unit -> Ojs.t =
          fun (x79 : [ `Unit ]) -> match x79 with | `Unit -> Ojs.int_to_js 10
        and vscode_CompletionItemKind_Value_of_js :
          Ojs.t -> vscode_CompletionItemKind_Value =
          fun (x83 : Ojs.t) ->
            let x84 = x83 in
            match Ojs.int_of_js x84 with | 11 -> `Value | _ -> assert false
        and vscode_CompletionItemKind_Value_to_js :
          vscode_CompletionItemKind_Value -> Ojs.t =
          fun (x82 : [ `Value ]) ->
            match x82 with | `Value -> Ojs.int_to_js 11
        and vscode_CompletionItemKind_Enum_of_js :
          Ojs.t -> vscode_CompletionItemKind_Enum =
          fun (x86 : Ojs.t) ->
            let x87 = x86 in
            match Ojs.int_of_js x87 with | 12 -> `Enum | _ -> assert false
        and vscode_CompletionItemKind_Enum_to_js :
          vscode_CompletionItemKind_Enum -> Ojs.t =
          fun (x85 : [ `Enum ]) -> match x85 with | `Enum -> Ojs.int_to_js 12
        and vscode_CompletionItemKind_Keyword_of_js :
          Ojs.t -> vscode_CompletionItemKind_Keyword =
          fun (x89 : Ojs.t) ->
            let x90 = x89 in
            match Ojs.int_of_js x90 with | 13 -> `Keyword | _ -> assert false
        and vscode_CompletionItemKind_Keyword_to_js :
          vscode_CompletionItemKind_Keyword -> Ojs.t =
          fun (x88 : [ `Keyword ]) ->
            match x88 with | `Keyword -> Ojs.int_to_js 13
        and vscode_CompletionItemKind_Snippet_of_js :
          Ojs.t -> vscode_CompletionItemKind_Snippet =
          fun (x92 : Ojs.t) ->
            let x93 = x92 in
            match Ojs.int_of_js x93 with | 14 -> `Snippet | _ -> assert false
        and vscode_CompletionItemKind_Snippet_to_js :
          vscode_CompletionItemKind_Snippet -> Ojs.t =
          fun (x91 : [ `Snippet ]) ->
            match x91 with | `Snippet -> Ojs.int_to_js 14
        and vscode_CompletionItemKind_Color_of_js :
          Ojs.t -> vscode_CompletionItemKind_Color =
          fun (x95 : Ojs.t) ->
            let x96 = x95 in
            match Ojs.int_of_js x96 with | 15 -> `Color | _ -> assert false
        and vscode_CompletionItemKind_Color_to_js :
          vscode_CompletionItemKind_Color -> Ojs.t =
          fun (x94 : [ `Color ]) ->
            match x94 with | `Color -> Ojs.int_to_js 15
        and vscode_CompletionItemKind_Reference_of_js :
          Ojs.t -> vscode_CompletionItemKind_Reference =
          fun (x98 : Ojs.t) ->
            let x99 = x98 in
            match Ojs.int_of_js x99 with
            | 17 -> `Reference
            | _ -> assert false
        and vscode_CompletionItemKind_Reference_to_js :
          vscode_CompletionItemKind_Reference -> Ojs.t =
          fun (x97 : [ `Reference ]) ->
            match x97 with | `Reference -> Ojs.int_to_js 17
        and vscode_CompletionItemKind_File_of_js :
          Ojs.t -> vscode_CompletionItemKind_File =
          fun (x101 : Ojs.t) ->
            let x102 = x101 in
            match Ojs.int_of_js x102 with | 16 -> `File | _ -> assert false
        and vscode_CompletionItemKind_File_to_js :
          vscode_CompletionItemKind_File -> Ojs.t =
          fun (x100 : [ `File ]) ->
            match x100 with | `File -> Ojs.int_to_js 16
        and vscode_CompletionItemKind_Folder_of_js :
          Ojs.t -> vscode_CompletionItemKind_Folder =
          fun (x104 : Ojs.t) ->
            let x105 = x104 in
            match Ojs.int_of_js x105 with | 18 -> `Folder | _ -> assert false
        and vscode_CompletionItemKind_Folder_to_js :
          vscode_CompletionItemKind_Folder -> Ojs.t =
          fun (x103 : [ `Folder ]) ->
            match x103 with | `Folder -> Ojs.int_to_js 18
        and vscode_CompletionItemKind_EnumMember_of_js :
          Ojs.t -> vscode_CompletionItemKind_EnumMember =
          fun (x107 : Ojs.t) ->
            let x108 = x107 in
            match Ojs.int_of_js x108 with
            | 19 -> `EnumMember
            | _ -> assert false
        and vscode_CompletionItemKind_EnumMember_to_js :
          vscode_CompletionItemKind_EnumMember -> Ojs.t =
          fun (x106 : [ `EnumMember ]) ->
            match x106 with | `EnumMember -> Ojs.int_to_js 19
        and vscode_CompletionItemKind_Constant_of_js :
          Ojs.t -> vscode_CompletionItemKind_Constant =
          fun (x110 : Ojs.t) ->
            let x111 = x110 in
            match Ojs.int_of_js x111 with
            | 20 -> `Constant
            | _ -> assert false
        and vscode_CompletionItemKind_Constant_to_js :
          vscode_CompletionItemKind_Constant -> Ojs.t =
          fun (x109 : [ `Constant ]) ->
            match x109 with | `Constant -> Ojs.int_to_js 20
        and vscode_CompletionItemKind_Struct_of_js :
          Ojs.t -> vscode_CompletionItemKind_Struct =
          fun (x113 : Ojs.t) ->
            let x114 = x113 in
            match Ojs.int_of_js x114 with | 21 -> `Struct | _ -> assert false
        and vscode_CompletionItemKind_Struct_to_js :
          vscode_CompletionItemKind_Struct -> Ojs.t =
          fun (x112 : [ `Struct ]) ->
            match x112 with | `Struct -> Ojs.int_to_js 21
        and vscode_CompletionItemKind_Event_of_js :
          Ojs.t -> vscode_CompletionItemKind_Event =
          fun (x116 : Ojs.t) ->
            let x117 = x116 in
            match Ojs.int_of_js x117 with | 22 -> `Event | _ -> assert false
        and vscode_CompletionItemKind_Event_to_js :
          vscode_CompletionItemKind_Event -> Ojs.t =
          fun (x115 : [ `Event ]) ->
            match x115 with | `Event -> Ojs.int_to_js 22
        and vscode_CompletionItemKind_Operator_of_js :
          Ojs.t -> vscode_CompletionItemKind_Operator =
          fun (x119 : Ojs.t) ->
            let x120 = x119 in
            match Ojs.int_of_js x120 with
            | 23 -> `Operator
            | _ -> assert false
        and vscode_CompletionItemKind_Operator_to_js :
          vscode_CompletionItemKind_Operator -> Ojs.t =
          fun (x118 : [ `Operator ]) ->
            match x118 with | `Operator -> Ojs.int_to_js 23
        and vscode_CompletionItemKind_TypeParameter_of_js :
          Ojs.t -> vscode_CompletionItemKind_TypeParameter =
          fun (x122 : Ojs.t) ->
            let x123 = x122 in
            match Ojs.int_of_js x123 with
            | 24 -> `TypeParameter
            | _ -> assert false
        and vscode_CompletionItemKind_TypeParameter_to_js :
          vscode_CompletionItemKind_TypeParameter -> Ojs.t =
          fun (x121 : [ `TypeParameter ]) ->
            match x121 with | `TypeParameter -> Ojs.int_to_js 24
        and vscode_CompletionItemKind_User_of_js :
          Ojs.t -> vscode_CompletionItemKind_User =
          fun (x125 : Ojs.t) ->
            let x126 = x125 in
            match Ojs.int_of_js x126 with | 25 -> `User | _ -> assert false
        and vscode_CompletionItemKind_User_to_js :
          vscode_CompletionItemKind_User -> Ojs.t =
          fun (x124 : [ `User ]) ->
            match x124 with | `User -> Ojs.int_to_js 25
        and vscode_CompletionItemKind_Issue_of_js :
          Ojs.t -> vscode_CompletionItemKind_Issue =
          fun (x128 : Ojs.t) ->
            let x129 = x128 in
            match Ojs.int_of_js x129 with | 26 -> `Issue | _ -> assert false
        and vscode_CompletionItemKind_Issue_to_js :
          vscode_CompletionItemKind_Issue -> Ojs.t =
          fun (x127 : [ `Issue ]) ->
            match x127 with | `Issue -> Ojs.int_to_js 26
        and vscode_CompletionItemProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CompletionItemProvider =
          fun _T -> Obj.magic
        and vscode_CompletionItemProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_CompletionItemProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_CompletionItemTag_of_js :
          Ojs.t -> vscode_CompletionItemTag =
          fun (x131 : Ojs.t) ->
            let x132 = x131 in
            match Ojs.int_of_js x132 with
            | 1 -> `Deprecated
            | _ -> assert false
        and vscode_CompletionItemTag_to_js :
          vscode_CompletionItemTag -> Ojs.t =
          fun (x130 : [ `Deprecated ]) ->
            match x130 with | `Deprecated -> Ojs.int_to_js 1
        and vscode_CompletionItemTag_Deprecated_of_js :
          Ojs.t -> vscode_CompletionItemTag_Deprecated =
          fun (x134 : Ojs.t) ->
            let x135 = x134 in
            match Ojs.int_of_js x135 with
            | 1 -> `Deprecated
            | _ -> assert false
        and vscode_CompletionItemTag_Deprecated_to_js :
          vscode_CompletionItemTag_Deprecated -> Ojs.t =
          fun (x133 : [ `Deprecated ]) ->
            match x133 with | `Deprecated -> Ojs.int_to_js 1
        and vscode_CompletionList_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CompletionList =
          fun _T -> Obj.magic
        and vscode_CompletionList_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_CompletionList -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_CompletionTriggerKind_of_js :
          Ojs.t -> vscode_CompletionTriggerKind =
          fun (x137 : Ojs.t) ->
            let x138 = x137 in
            match Ojs.int_of_js x138 with
            | 0 -> `Invoke
            | 1 -> `TriggerCharacter
            | 2 -> `TriggerForIncompleteCompletions
            | _ -> assert false
        and vscode_CompletionTriggerKind_to_js :
          vscode_CompletionTriggerKind -> Ojs.t =
          fun
            (x136 :
              [ `Invoke  | `TriggerCharacter 
              | `TriggerForIncompleteCompletions ])
            ->
            match x136 with
            | `Invoke -> Ojs.int_to_js 0
            | `TriggerCharacter -> Ojs.int_to_js 1
            | `TriggerForIncompleteCompletions -> Ojs.int_to_js 2
        and vscode_CompletionTriggerKind_Invoke_of_js :
          Ojs.t -> vscode_CompletionTriggerKind_Invoke =
          fun (x140 : Ojs.t) ->
            let x141 = x140 in
            match Ojs.int_of_js x141 with | 0 -> `Invoke | _ -> assert false
        and vscode_CompletionTriggerKind_Invoke_to_js :
          vscode_CompletionTriggerKind_Invoke -> Ojs.t =
          fun (x139 : [ `Invoke ]) ->
            match x139 with | `Invoke -> Ojs.int_to_js 0
        and vscode_CompletionTriggerKind_TriggerCharacter_of_js :
          Ojs.t -> vscode_CompletionTriggerKind_TriggerCharacter =
          fun (x143 : Ojs.t) ->
            let x144 = x143 in
            match Ojs.int_of_js x144 with
            | 1 -> `TriggerCharacter
            | _ -> assert false
        and vscode_CompletionTriggerKind_TriggerCharacter_to_js :
          vscode_CompletionTriggerKind_TriggerCharacter -> Ojs.t =
          fun (x142 : [ `TriggerCharacter ]) ->
            match x142 with | `TriggerCharacter -> Ojs.int_to_js 1
        and vscode_CompletionTriggerKind_TriggerForIncompleteCompletions_of_js
          :
          Ojs.t ->
            vscode_CompletionTriggerKind_TriggerForIncompleteCompletions
          =
          fun (x146 : Ojs.t) ->
            let x147 = x146 in
            match Ojs.int_of_js x147 with
            | 2 -> `TriggerForIncompleteCompletions
            | _ -> assert false
        and vscode_CompletionTriggerKind_TriggerForIncompleteCompletions_to_js
          :
          vscode_CompletionTriggerKind_TriggerForIncompleteCompletions ->
            Ojs.t
          =
          fun (x145 : [ `TriggerForIncompleteCompletions ]) ->
            match x145 with
            | `TriggerForIncompleteCompletions -> Ojs.int_to_js 2
        and vscode_ConfigurationChangeEvent_of_js :
          Ojs.t -> vscode_ConfigurationChangeEvent = Obj.magic
        and vscode_ConfigurationChangeEvent_to_js :
          vscode_ConfigurationChangeEvent -> Ojs.t = Obj.magic
        and vscode_ConfigurationScope_of_js :
          Ojs.t -> vscode_ConfigurationScope =
          fun (x153 : Ojs.t) ->
            union4_of_js vscode_TextDocument_of_js vscode_Uri_of_js
              vscode_WorkspaceFolder_of_js anonymous_interface_35_of_js x153
        and vscode_ConfigurationScope_to_js :
          vscode_ConfigurationScope -> Ojs.t =
          fun
            (x148 :
              (vscode_TextDocument, vscode_Uri, vscode_WorkspaceFolder,
                anonymous_interface_35) union4)
            ->
            union4_to_js vscode_TextDocument_to_js vscode_Uri_to_js
              vscode_WorkspaceFolder_to_js anonymous_interface_35_to_js x148
        and vscode_ConfigurationTarget_of_js :
          Ojs.t -> vscode_ConfigurationTarget =
          fun (x159 : Ojs.t) ->
            let x160 = x159 in
            match Ojs.int_of_js x160 with
            | 1 -> `Global
            | 2 -> `Workspace
            | 3 -> `WorkspaceFolder
            | _ -> assert false
        and vscode_ConfigurationTarget_to_js :
          vscode_ConfigurationTarget -> Ojs.t =
          fun (x158 : [ `Global  | `Workspace  | `WorkspaceFolder ]) ->
            match x158 with
            | `Global -> Ojs.int_to_js 1
            | `Workspace -> Ojs.int_to_js 2
            | `WorkspaceFolder -> Ojs.int_to_js 3
        and vscode_ConfigurationTarget_Global_of_js :
          Ojs.t -> vscode_ConfigurationTarget_Global =
          fun (x162 : Ojs.t) ->
            let x163 = x162 in
            match Ojs.int_of_js x163 with | 1 -> `Global | _ -> assert false
        and vscode_ConfigurationTarget_Global_to_js :
          vscode_ConfigurationTarget_Global -> Ojs.t =
          fun (x161 : [ `Global ]) ->
            match x161 with | `Global -> Ojs.int_to_js 1
        and vscode_ConfigurationTarget_Workspace_of_js :
          Ojs.t -> vscode_ConfigurationTarget_Workspace =
          fun (x165 : Ojs.t) ->
            let x166 = x165 in
            match Ojs.int_of_js x166 with
            | 2 -> `Workspace
            | _ -> assert false
        and vscode_ConfigurationTarget_Workspace_to_js :
          vscode_ConfigurationTarget_Workspace -> Ojs.t =
          fun (x164 : [ `Workspace ]) ->
            match x164 with | `Workspace -> Ojs.int_to_js 2
        and vscode_ConfigurationTarget_WorkspaceFolder_of_js :
          Ojs.t -> vscode_ConfigurationTarget_WorkspaceFolder =
          fun (x168 : Ojs.t) ->
            let x169 = x168 in
            match Ojs.int_of_js x169 with
            | 3 -> `WorkspaceFolder
            | _ -> assert false
        and vscode_ConfigurationTarget_WorkspaceFolder_to_js :
          vscode_ConfigurationTarget_WorkspaceFolder -> Ojs.t =
          fun (x167 : [ `WorkspaceFolder ]) ->
            match x167 with | `WorkspaceFolder -> Ojs.int_to_js 3
        and vscode_CustomDocument_of_js : Ojs.t -> vscode_CustomDocument =
          Obj.magic
        and vscode_CustomDocument_to_js : vscode_CustomDocument -> Ojs.t =
          Obj.magic
        and vscode_CustomDocumentBackup_of_js :
          Ojs.t -> vscode_CustomDocumentBackup = Obj.magic
        and vscode_CustomDocumentBackup_to_js :
          vscode_CustomDocumentBackup -> Ojs.t = Obj.magic
        and vscode_CustomDocumentBackupContext_of_js :
          Ojs.t -> vscode_CustomDocumentBackupContext = Obj.magic
        and vscode_CustomDocumentBackupContext_to_js :
          vscode_CustomDocumentBackupContext -> Ojs.t = Obj.magic
        and vscode_CustomDocumentContentChangeEvent_of_js :
          'T .
            (Ojs.t -> 'T) ->
              Ojs.t -> 'T vscode_CustomDocumentContentChangeEvent
          = fun _T -> Obj.magic
        and vscode_CustomDocumentContentChangeEvent_to_js :
          'T .
            ('T -> Ojs.t) ->
              'T vscode_CustomDocumentContentChangeEvent -> Ojs.t
          = fun _T -> Obj.magic
        and vscode_CustomDocumentEditEvent_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CustomDocumentEditEvent =
          fun _T -> Obj.magic
        and vscode_CustomDocumentEditEvent_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_CustomDocumentEditEvent -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_CustomDocumentOpenContext_of_js :
          Ojs.t -> vscode_CustomDocumentOpenContext = Obj.magic
        and vscode_CustomDocumentOpenContext_to_js :
          vscode_CustomDocumentOpenContext -> Ojs.t = Obj.magic
        and vscode_CustomEditorProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CustomEditorProvider =
          fun _T -> Obj.magic
        and vscode_CustomEditorProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_CustomEditorProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_CustomExecution_of_js : Ojs.t -> vscode_CustomExecution =
          Obj.magic
        and vscode_CustomExecution_to_js : vscode_CustomExecution -> Ojs.t =
          Obj.magic
        and vscode_CustomReadonlyEditorProvider_of_js :
          'T .
            (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_CustomReadonlyEditorProvider
          = fun _T -> Obj.magic
        and vscode_CustomReadonlyEditorProvider_to_js :
          'T .
            ('T -> Ojs.t) -> 'T vscode_CustomReadonlyEditorProvider -> Ojs.t
          = fun _T -> Obj.magic
        and vscode_CustomTextEditorProvider_of_js :
          Ojs.t -> vscode_CustomTextEditorProvider = Obj.magic
        and vscode_CustomTextEditorProvider_to_js :
          vscode_CustomTextEditorProvider -> Ojs.t = Obj.magic
        and vscode_DebugAdapter_of_js : Ojs.t -> vscode_DebugAdapter =
          Obj.magic
        and vscode_DebugAdapter_to_js : vscode_DebugAdapter -> Ojs.t =
          Obj.magic
        and vscode_DebugAdapterDescriptor_of_js :
          Ojs.t -> vscode_DebugAdapterDescriptor =
          fun (x175 : Ojs.t) ->
            union4_of_js vscode_DebugAdapterExecutable_of_js
              vscode_DebugAdapterInlineImplementation_of_js
              vscode_DebugAdapterNamedPipeServer_of_js
              vscode_DebugAdapterServer_of_js x175
        and vscode_DebugAdapterDescriptor_to_js :
          vscode_DebugAdapterDescriptor -> Ojs.t =
          fun
            (x170 :
              (vscode_DebugAdapterExecutable,
                vscode_DebugAdapterInlineImplementation,
                vscode_DebugAdapterNamedPipeServer,
                vscode_DebugAdapterServer) union4)
            ->
            union4_to_js vscode_DebugAdapterExecutable_to_js
              vscode_DebugAdapterInlineImplementation_to_js
              vscode_DebugAdapterNamedPipeServer_to_js
              vscode_DebugAdapterServer_to_js x170
        and vscode_DebugAdapterDescriptorFactory_of_js :
          Ojs.t -> vscode_DebugAdapterDescriptorFactory = Obj.magic
        and vscode_DebugAdapterDescriptorFactory_to_js :
          vscode_DebugAdapterDescriptorFactory -> Ojs.t = Obj.magic
        and vscode_DebugAdapterExecutable_of_js :
          Ojs.t -> vscode_DebugAdapterExecutable = Obj.magic
        and vscode_DebugAdapterExecutable_to_js :
          vscode_DebugAdapterExecutable -> Ojs.t = Obj.magic
        and vscode_DebugAdapterExecutableOptions_of_js :
          Ojs.t -> vscode_DebugAdapterExecutableOptions = Obj.magic
        and vscode_DebugAdapterExecutableOptions_to_js :
          vscode_DebugAdapterExecutableOptions -> Ojs.t = Obj.magic
        and vscode_DebugAdapterInlineImplementation_of_js :
          Ojs.t -> vscode_DebugAdapterInlineImplementation = Obj.magic
        and vscode_DebugAdapterInlineImplementation_to_js :
          vscode_DebugAdapterInlineImplementation -> Ojs.t = Obj.magic
        and vscode_DebugAdapterNamedPipeServer_of_js :
          Ojs.t -> vscode_DebugAdapterNamedPipeServer = Obj.magic
        and vscode_DebugAdapterNamedPipeServer_to_js :
          vscode_DebugAdapterNamedPipeServer -> Ojs.t = Obj.magic
        and vscode_DebugAdapterServer_of_js :
          Ojs.t -> vscode_DebugAdapterServer = Obj.magic
        and vscode_DebugAdapterServer_to_js :
          vscode_DebugAdapterServer -> Ojs.t = Obj.magic
        and vscode_DebugAdapterTracker_of_js :
          Ojs.t -> vscode_DebugAdapterTracker = Obj.magic
        and vscode_DebugAdapterTracker_to_js :
          vscode_DebugAdapterTracker -> Ojs.t = Obj.magic
        and vscode_DebugAdapterTrackerFactory_of_js :
          Ojs.t -> vscode_DebugAdapterTrackerFactory = Obj.magic
        and vscode_DebugAdapterTrackerFactory_to_js :
          vscode_DebugAdapterTrackerFactory -> Ojs.t = Obj.magic
        and vscode_DebugConfiguration_of_js :
          Ojs.t -> vscode_DebugConfiguration = Obj.magic
        and vscode_DebugConfiguration_to_js :
          vscode_DebugConfiguration -> Ojs.t = Obj.magic
        and vscode_DebugConfigurationProvider_of_js :
          Ojs.t -> vscode_DebugConfigurationProvider = Obj.magic
        and vscode_DebugConfigurationProvider_to_js :
          vscode_DebugConfigurationProvider -> Ojs.t = Obj.magic
        and vscode_DebugConfigurationProviderTriggerKind_of_js :
          Ojs.t -> vscode_DebugConfigurationProviderTriggerKind =
          fun (x181 : Ojs.t) ->
            let x182 = x181 in
            match Ojs.int_of_js x182 with
            | 1 -> `Initial
            | 2 -> `Dynamic
            | _ -> assert false
        and vscode_DebugConfigurationProviderTriggerKind_to_js :
          vscode_DebugConfigurationProviderTriggerKind -> Ojs.t =
          fun (x180 : [ `Initial  | `Dynamic ]) ->
            match x180 with
            | `Initial -> Ojs.int_to_js 1
            | `Dynamic -> Ojs.int_to_js 2
        and vscode_DebugConfigurationProviderTriggerKind_Initial_of_js :
          Ojs.t -> vscode_DebugConfigurationProviderTriggerKind_Initial =
          fun (x184 : Ojs.t) ->
            let x185 = x184 in
            match Ojs.int_of_js x185 with | 1 -> `Initial | _ -> assert false
        and vscode_DebugConfigurationProviderTriggerKind_Initial_to_js :
          vscode_DebugConfigurationProviderTriggerKind_Initial -> Ojs.t =
          fun (x183 : [ `Initial ]) ->
            match x183 with | `Initial -> Ojs.int_to_js 1
        and vscode_DebugConfigurationProviderTriggerKind_Dynamic_of_js :
          Ojs.t -> vscode_DebugConfigurationProviderTriggerKind_Dynamic =
          fun (x187 : Ojs.t) ->
            let x188 = x187 in
            match Ojs.int_of_js x188 with | 2 -> `Dynamic | _ -> assert false
        and vscode_DebugConfigurationProviderTriggerKind_Dynamic_to_js :
          vscode_DebugConfigurationProviderTriggerKind_Dynamic -> Ojs.t =
          fun (x186 : [ `Dynamic ]) ->
            match x186 with | `Dynamic -> Ojs.int_to_js 2
        and vscode_DebugConsole_of_js : Ojs.t -> vscode_DebugConsole =
          Obj.magic
        and vscode_DebugConsole_to_js : vscode_DebugConsole -> Ojs.t =
          Obj.magic
        and vscode_DebugConsoleMode_of_js : Ojs.t -> vscode_DebugConsoleMode
          =
          fun (x190 : Ojs.t) ->
            let x191 = x190 in
            match Ojs.int_of_js x191 with
            | 0 -> `Separate
            | 1 -> `MergeWithParent
            | _ -> assert false
        and vscode_DebugConsoleMode_to_js : vscode_DebugConsoleMode -> Ojs.t
          =
          fun (x189 : [ `Separate  | `MergeWithParent ]) ->
            match x189 with
            | `Separate -> Ojs.int_to_js 0
            | `MergeWithParent -> Ojs.int_to_js 1
        and vscode_DebugConsoleMode_Separate_of_js :
          Ojs.t -> vscode_DebugConsoleMode_Separate =
          fun (x193 : Ojs.t) ->
            let x194 = x193 in
            match Ojs.int_of_js x194 with
            | 0 -> `Separate
            | _ -> assert false
        and vscode_DebugConsoleMode_Separate_to_js :
          vscode_DebugConsoleMode_Separate -> Ojs.t =
          fun (x192 : [ `Separate ]) ->
            match x192 with | `Separate -> Ojs.int_to_js 0
        and vscode_DebugConsoleMode_MergeWithParent_of_js :
          Ojs.t -> vscode_DebugConsoleMode_MergeWithParent =
          fun (x196 : Ojs.t) ->
            let x197 = x196 in
            match Ojs.int_of_js x197 with
            | 1 -> `MergeWithParent
            | _ -> assert false
        and vscode_DebugConsoleMode_MergeWithParent_to_js :
          vscode_DebugConsoleMode_MergeWithParent -> Ojs.t =
          fun (x195 : [ `MergeWithParent ]) ->
            match x195 with | `MergeWithParent -> Ojs.int_to_js 1
        and vscode_DebugProtocolBreakpoint_of_js :
          Ojs.t -> vscode_DebugProtocolBreakpoint = Obj.magic
        and vscode_DebugProtocolBreakpoint_to_js :
          vscode_DebugProtocolBreakpoint -> Ojs.t = Obj.magic
        and vscode_DebugProtocolMessage_of_js :
          Ojs.t -> vscode_DebugProtocolMessage = Obj.magic
        and vscode_DebugProtocolMessage_to_js :
          vscode_DebugProtocolMessage -> Ojs.t = Obj.magic
        and vscode_DebugProtocolSource_of_js :
          Ojs.t -> vscode_DebugProtocolSource = Obj.magic
        and vscode_DebugProtocolSource_to_js :
          vscode_DebugProtocolSource -> Ojs.t = Obj.magic
        and vscode_DebugSession_of_js : Ojs.t -> vscode_DebugSession =
          Obj.magic
        and vscode_DebugSession_to_js : vscode_DebugSession -> Ojs.t =
          Obj.magic
        and vscode_DebugSessionCustomEvent_of_js :
          Ojs.t -> vscode_DebugSessionCustomEvent = Obj.magic
        and vscode_DebugSessionCustomEvent_to_js :
          vscode_DebugSessionCustomEvent -> Ojs.t = Obj.magic
        and vscode_DebugSessionOptions_of_js :
          Ojs.t -> vscode_DebugSessionOptions = Obj.magic
        and vscode_DebugSessionOptions_to_js :
          vscode_DebugSessionOptions -> Ojs.t = Obj.magic
        and vscode_Declaration_of_js : Ojs.t -> vscode_Declaration =
          fun (x203 : Ojs.t) ->
            or_array_of_js vscode_Location_of_js
              (fun (x205 : Ojs.t) ->
                 union2_of_js vscode_Location_of_js vscode_LocationLink_of_js
                   x205) x203
        and vscode_Declaration_to_js : vscode_Declaration -> Ojs.t =
          fun
            (x198 :
              (vscode_Location,
                (vscode_Location, vscode_LocationLink) union2) or_array)
            ->
            or_array_to_js vscode_Location_to_js
              (fun (x200 : (vscode_Location, vscode_LocationLink) union2) ->
                 union2_to_js vscode_Location_to_js vscode_LocationLink_to_js
                   x200) x198
        and vscode_DeclarationProvider_of_js :
          Ojs.t -> vscode_DeclarationProvider = Obj.magic
        and vscode_DeclarationProvider_to_js :
          vscode_DeclarationProvider -> Ojs.t = Obj.magic
        and vscode_DecorationInstanceRenderOptions_of_js :
          Ojs.t -> vscode_DecorationInstanceRenderOptions = Obj.magic
        and vscode_DecorationInstanceRenderOptions_to_js :
          vscode_DecorationInstanceRenderOptions -> Ojs.t = Obj.magic
        and vscode_DecorationOptions_of_js :
          Ojs.t -> vscode_DecorationOptions = Obj.magic
        and vscode_DecorationOptions_to_js :
          vscode_DecorationOptions -> Ojs.t = Obj.magic
        and vscode_DecorationRangeBehavior_of_js :
          Ojs.t -> vscode_DecorationRangeBehavior =
          fun (x209 : Ojs.t) ->
            let x210 = x209 in
            match Ojs.int_of_js x210 with
            | 0 -> `OpenOpen
            | 1 -> `ClosedClosed
            | 2 -> `OpenClosed
            | 3 -> `ClosedOpen
            | _ -> assert false
        and vscode_DecorationRangeBehavior_to_js :
          vscode_DecorationRangeBehavior -> Ojs.t =
          fun
            (x208 :
              [ `OpenOpen  | `ClosedClosed  | `OpenClosed  | `ClosedOpen ])
            ->
            match x208 with
            | `OpenOpen -> Ojs.int_to_js 0
            | `ClosedClosed -> Ojs.int_to_js 1
            | `OpenClosed -> Ojs.int_to_js 2
            | `ClosedOpen -> Ojs.int_to_js 3
        and vscode_DecorationRangeBehavior_OpenOpen_of_js :
          Ojs.t -> vscode_DecorationRangeBehavior_OpenOpen =
          fun (x212 : Ojs.t) ->
            let x213 = x212 in
            match Ojs.int_of_js x213 with
            | 0 -> `OpenOpen
            | _ -> assert false
        and vscode_DecorationRangeBehavior_OpenOpen_to_js :
          vscode_DecorationRangeBehavior_OpenOpen -> Ojs.t =
          fun (x211 : [ `OpenOpen ]) ->
            match x211 with | `OpenOpen -> Ojs.int_to_js 0
        and vscode_DecorationRangeBehavior_ClosedClosed_of_js :
          Ojs.t -> vscode_DecorationRangeBehavior_ClosedClosed =
          fun (x215 : Ojs.t) ->
            let x216 = x215 in
            match Ojs.int_of_js x216 with
            | 1 -> `ClosedClosed
            | _ -> assert false
        and vscode_DecorationRangeBehavior_ClosedClosed_to_js :
          vscode_DecorationRangeBehavior_ClosedClosed -> Ojs.t =
          fun (x214 : [ `ClosedClosed ]) ->
            match x214 with | `ClosedClosed -> Ojs.int_to_js 1
        and vscode_DecorationRangeBehavior_OpenClosed_of_js :
          Ojs.t -> vscode_DecorationRangeBehavior_OpenClosed =
          fun (x218 : Ojs.t) ->
            let x219 = x218 in
            match Ojs.int_of_js x219 with
            | 2 -> `OpenClosed
            | _ -> assert false
        and vscode_DecorationRangeBehavior_OpenClosed_to_js :
          vscode_DecorationRangeBehavior_OpenClosed -> Ojs.t =
          fun (x217 : [ `OpenClosed ]) ->
            match x217 with | `OpenClosed -> Ojs.int_to_js 2
        and vscode_DecorationRangeBehavior_ClosedOpen_of_js :
          Ojs.t -> vscode_DecorationRangeBehavior_ClosedOpen =
          fun (x221 : Ojs.t) ->
            let x222 = x221 in
            match Ojs.int_of_js x222 with
            | 3 -> `ClosedOpen
            | _ -> assert false
        and vscode_DecorationRangeBehavior_ClosedOpen_to_js :
          vscode_DecorationRangeBehavior_ClosedOpen -> Ojs.t =
          fun (x220 : [ `ClosedOpen ]) ->
            match x220 with | `ClosedOpen -> Ojs.int_to_js 3
        and vscode_DecorationRenderOptions_of_js :
          Ojs.t -> vscode_DecorationRenderOptions = Obj.magic
        and vscode_DecorationRenderOptions_to_js :
          vscode_DecorationRenderOptions -> Ojs.t = Obj.magic
        and vscode_Definition_of_js : Ojs.t -> vscode_Definition =
          fun (x226 : Ojs.t) ->
            or_array_of_js vscode_Location_of_js vscode_Location_of_js x226
        and vscode_Definition_to_js : vscode_Definition -> Ojs.t =
          fun (x223 : (vscode_Location, vscode_Location) or_array) ->
            or_array_to_js vscode_Location_to_js vscode_Location_to_js x223
        and vscode_DefinitionLink_of_js : Ojs.t -> vscode_DefinitionLink =
          fun (x230 : Ojs.t) -> vscode_LocationLink_of_js x230
        and vscode_DefinitionLink_to_js : vscode_DefinitionLink -> Ojs.t =
          fun (x229 : vscode_LocationLink) -> vscode_LocationLink_to_js x229
        and vscode_DefinitionProvider_of_js :
          Ojs.t -> vscode_DefinitionProvider = Obj.magic
        and vscode_DefinitionProvider_to_js :
          vscode_DefinitionProvider -> Ojs.t = Obj.magic
        and vscode_Diagnostic_of_js : Ojs.t -> vscode_Diagnostic = Obj.magic
        and vscode_Diagnostic_to_js : vscode_Diagnostic -> Ojs.t = Obj.magic
        and vscode_DiagnosticChangeEvent_of_js :
          Ojs.t -> vscode_DiagnosticChangeEvent = Obj.magic
        and vscode_DiagnosticChangeEvent_to_js :
          vscode_DiagnosticChangeEvent -> Ojs.t = Obj.magic
        and vscode_DiagnosticCollection_of_js :
          Ojs.t -> vscode_DiagnosticCollection = Obj.magic
        and vscode_DiagnosticCollection_to_js :
          vscode_DiagnosticCollection -> Ojs.t = Obj.magic
        and vscode_DiagnosticRelatedInformation_of_js :
          Ojs.t -> vscode_DiagnosticRelatedInformation = Obj.magic
        and vscode_DiagnosticRelatedInformation_to_js :
          vscode_DiagnosticRelatedInformation -> Ojs.t = Obj.magic
        and vscode_DiagnosticSeverity_of_js :
          Ojs.t -> vscode_DiagnosticSeverity =
          fun (x232 : Ojs.t) ->
            let x233 = x232 in
            match Ojs.int_of_js x233 with
            | 0 -> `Error
            | 1 -> `Warning
            | 2 -> `Information
            | 3 -> `Hint
            | _ -> assert false
        and vscode_DiagnosticSeverity_to_js :
          vscode_DiagnosticSeverity -> Ojs.t =
          fun (x231 : [ `Error  | `Warning  | `Information  | `Hint ]) ->
            match x231 with
            | `Error -> Ojs.int_to_js 0
            | `Warning -> Ojs.int_to_js 1
            | `Information -> Ojs.int_to_js 2
            | `Hint -> Ojs.int_to_js 3
        and vscode_DiagnosticSeverity_Error_of_js :
          Ojs.t -> vscode_DiagnosticSeverity_Error =
          fun (x235 : Ojs.t) ->
            let x236 = x235 in
            match Ojs.int_of_js x236 with | 0 -> `Error | _ -> assert false
        and vscode_DiagnosticSeverity_Error_to_js :
          vscode_DiagnosticSeverity_Error -> Ojs.t =
          fun (x234 : [ `Error ]) ->
            match x234 with | `Error -> Ojs.int_to_js 0
        and vscode_DiagnosticSeverity_Warning_of_js :
          Ojs.t -> vscode_DiagnosticSeverity_Warning =
          fun (x238 : Ojs.t) ->
            let x239 = x238 in
            match Ojs.int_of_js x239 with | 1 -> `Warning | _ -> assert false
        and vscode_DiagnosticSeverity_Warning_to_js :
          vscode_DiagnosticSeverity_Warning -> Ojs.t =
          fun (x237 : [ `Warning ]) ->
            match x237 with | `Warning -> Ojs.int_to_js 1
        and vscode_DiagnosticSeverity_Information_of_js :
          Ojs.t -> vscode_DiagnosticSeverity_Information =
          fun (x241 : Ojs.t) ->
            let x242 = x241 in
            match Ojs.int_of_js x242 with
            | 2 -> `Information
            | _ -> assert false
        and vscode_DiagnosticSeverity_Information_to_js :
          vscode_DiagnosticSeverity_Information -> Ojs.t =
          fun (x240 : [ `Information ]) ->
            match x240 with | `Information -> Ojs.int_to_js 2
        and vscode_DiagnosticSeverity_Hint_of_js :
          Ojs.t -> vscode_DiagnosticSeverity_Hint =
          fun (x244 : Ojs.t) ->
            let x245 = x244 in
            match Ojs.int_of_js x245 with | 3 -> `Hint | _ -> assert false
        and vscode_DiagnosticSeverity_Hint_to_js :
          vscode_DiagnosticSeverity_Hint -> Ojs.t =
          fun (x243 : [ `Hint ]) ->
            match x243 with | `Hint -> Ojs.int_to_js 3
        and vscode_DiagnosticTag_of_js : Ojs.t -> vscode_DiagnosticTag =
          fun (x247 : Ojs.t) ->
            let x248 = x247 in
            match Ojs.int_of_js x248 with
            | 1 -> `Unnecessary
            | 2 -> `Deprecated
            | _ -> assert false
        and vscode_DiagnosticTag_to_js : vscode_DiagnosticTag -> Ojs.t =
          fun (x246 : [ `Unnecessary  | `Deprecated ]) ->
            match x246 with
            | `Unnecessary -> Ojs.int_to_js 1
            | `Deprecated -> Ojs.int_to_js 2
        and vscode_DiagnosticTag_Unnecessary_of_js :
          Ojs.t -> vscode_DiagnosticTag_Unnecessary =
          fun (x250 : Ojs.t) ->
            let x251 = x250 in
            match Ojs.int_of_js x251 with
            | 1 -> `Unnecessary
            | _ -> assert false
        and vscode_DiagnosticTag_Unnecessary_to_js :
          vscode_DiagnosticTag_Unnecessary -> Ojs.t =
          fun (x249 : [ `Unnecessary ]) ->
            match x249 with | `Unnecessary -> Ojs.int_to_js 1
        and vscode_DiagnosticTag_Deprecated_of_js :
          Ojs.t -> vscode_DiagnosticTag_Deprecated =
          fun (x253 : Ojs.t) ->
            let x254 = x253 in
            match Ojs.int_of_js x254 with
            | 2 -> `Deprecated
            | _ -> assert false
        and vscode_DiagnosticTag_Deprecated_to_js :
          vscode_DiagnosticTag_Deprecated -> Ojs.t =
          fun (x252 : [ `Deprecated ]) ->
            match x252 with | `Deprecated -> Ojs.int_to_js 2
        and vscode_Disposable_of_js : Ojs.t -> vscode_Disposable = Obj.magic
        and vscode_Disposable_to_js : vscode_Disposable -> Ojs.t = Obj.magic
        and vscode_DocumentColorProvider_of_js :
          Ojs.t -> vscode_DocumentColorProvider = Obj.magic
        and vscode_DocumentColorProvider_to_js :
          vscode_DocumentColorProvider -> Ojs.t = Obj.magic
        and vscode_DocumentFilter_of_js : Ojs.t -> vscode_DocumentFilter =
          Obj.magic
        and vscode_DocumentFilter_to_js : vscode_DocumentFilter -> Ojs.t =
          Obj.magic
        and vscode_DocumentFormattingEditProvider_of_js :
          Ojs.t -> vscode_DocumentFormattingEditProvider = Obj.magic
        and vscode_DocumentFormattingEditProvider_to_js :
          vscode_DocumentFormattingEditProvider -> Ojs.t = Obj.magic
        and vscode_DocumentHighlight_of_js :
          Ojs.t -> vscode_DocumentHighlight = Obj.magic
        and vscode_DocumentHighlight_to_js :
          vscode_DocumentHighlight -> Ojs.t = Obj.magic
        and vscode_DocumentHighlightKind_of_js :
          Ojs.t -> vscode_DocumentHighlightKind =
          fun (x256 : Ojs.t) ->
            let x257 = x256 in
            match Ojs.int_of_js x257 with
            | 0 -> `Text
            | 1 -> `Read
            | 2 -> `Write
            | _ -> assert false
        and vscode_DocumentHighlightKind_to_js :
          vscode_DocumentHighlightKind -> Ojs.t =
          fun (x255 : [ `Text  | `Read  | `Write ]) ->
            match x255 with
            | `Text -> Ojs.int_to_js 0
            | `Read -> Ojs.int_to_js 1
            | `Write -> Ojs.int_to_js 2
        and vscode_DocumentHighlightKind_Text_of_js :
          Ojs.t -> vscode_DocumentHighlightKind_Text =
          fun (x259 : Ojs.t) ->
            let x260 = x259 in
            match Ojs.int_of_js x260 with | 0 -> `Text | _ -> assert false
        and vscode_DocumentHighlightKind_Text_to_js :
          vscode_DocumentHighlightKind_Text -> Ojs.t =
          fun (x258 : [ `Text ]) ->
            match x258 with | `Text -> Ojs.int_to_js 0
        and vscode_DocumentHighlightKind_Read_of_js :
          Ojs.t -> vscode_DocumentHighlightKind_Read =
          fun (x262 : Ojs.t) ->
            let x263 = x262 in
            match Ojs.int_of_js x263 with | 1 -> `Read | _ -> assert false
        and vscode_DocumentHighlightKind_Read_to_js :
          vscode_DocumentHighlightKind_Read -> Ojs.t =
          fun (x261 : [ `Read ]) ->
            match x261 with | `Read -> Ojs.int_to_js 1
        and vscode_DocumentHighlightKind_Write_of_js :
          Ojs.t -> vscode_DocumentHighlightKind_Write =
          fun (x265 : Ojs.t) ->
            let x266 = x265 in
            match Ojs.int_of_js x266 with | 2 -> `Write | _ -> assert false
        and vscode_DocumentHighlightKind_Write_to_js :
          vscode_DocumentHighlightKind_Write -> Ojs.t =
          fun (x264 : [ `Write ]) ->
            match x264 with | `Write -> Ojs.int_to_js 2
        and vscode_DocumentHighlightProvider_of_js :
          Ojs.t -> vscode_DocumentHighlightProvider = Obj.magic
        and vscode_DocumentHighlightProvider_to_js :
          vscode_DocumentHighlightProvider -> Ojs.t = Obj.magic
        and vscode_DocumentLink_of_js : Ojs.t -> vscode_DocumentLink =
          Obj.magic
        and vscode_DocumentLink_to_js : vscode_DocumentLink -> Ojs.t =
          Obj.magic
        and vscode_DocumentLinkProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_DocumentLinkProvider =
          fun _T -> Obj.magic
        and vscode_DocumentLinkProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_DocumentLinkProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_DocumentRangeFormattingEditProvider_of_js :
          Ojs.t -> vscode_DocumentRangeFormattingEditProvider = Obj.magic
        and vscode_DocumentRangeFormattingEditProvider_to_js :
          vscode_DocumentRangeFormattingEditProvider -> Ojs.t = Obj.magic
        and vscode_DocumentRangeSemanticTokensProvider_of_js :
          Ojs.t -> vscode_DocumentRangeSemanticTokensProvider = Obj.magic
        and vscode_DocumentRangeSemanticTokensProvider_to_js :
          vscode_DocumentRangeSemanticTokensProvider -> Ojs.t = Obj.magic
        and vscode_DocumentSelector_of_js : Ojs.t -> vscode_DocumentSelector
          =
          fun (x273 : Ojs.t) ->
            or_string_of_js
              (fun (x274 : Ojs.t) ->
                 union2_of_js vscode_DocumentFilter_of_js
                   (fun (x276 : Ojs.t) ->
                      Ojs.list_of_js
                        (fun (x277 : Ojs.t) ->
                           or_string_of_js vscode_DocumentFilter_of_js x277)
                        x276) x274) x273
        and vscode_DocumentSelector_to_js : vscode_DocumentSelector -> Ojs.t
          =
          fun
            (x267 :
              (vscode_DocumentFilter, vscode_DocumentFilter or_string list)
                union2 or_string)
            ->
            or_string_to_js
              (fun
                 (x268 :
                   (vscode_DocumentFilter,
                     vscode_DocumentFilter or_string list) union2)
                 ->
                 union2_to_js vscode_DocumentFilter_to_js
                   (fun (x270 : vscode_DocumentFilter or_string list) ->
                      Ojs.list_to_js
                        (fun (x271 : vscode_DocumentFilter or_string) ->
                           or_string_to_js vscode_DocumentFilter_to_js x271)
                        x270) x268) x267
        and vscode_DocumentSemanticTokensProvider_of_js :
          Ojs.t -> vscode_DocumentSemanticTokensProvider = Obj.magic
        and vscode_DocumentSemanticTokensProvider_to_js :
          vscode_DocumentSemanticTokensProvider -> Ojs.t = Obj.magic
        and vscode_DocumentSymbol_of_js : Ojs.t -> vscode_DocumentSymbol =
          Obj.magic
        and vscode_DocumentSymbol_to_js : vscode_DocumentSymbol -> Ojs.t =
          Obj.magic
        and vscode_DocumentSymbolProvider_of_js :
          Ojs.t -> vscode_DocumentSymbolProvider = Obj.magic
        and vscode_DocumentSymbolProvider_to_js :
          vscode_DocumentSymbolProvider -> Ojs.t = Obj.magic
        and vscode_DocumentSymbolProviderMetadata_of_js :
          Ojs.t -> vscode_DocumentSymbolProviderMetadata = Obj.magic
        and vscode_DocumentSymbolProviderMetadata_to_js :
          vscode_DocumentSymbolProviderMetadata -> Ojs.t = Obj.magic
        and vscode_EndOfLine_of_js : Ojs.t -> vscode_EndOfLine =
          fun (x280 : Ojs.t) ->
            let x281 = x280 in
            match Ojs.int_of_js x281 with
            | 1 -> `LF
            | 2 -> `CRLF
            | _ -> assert false
        and vscode_EndOfLine_to_js : vscode_EndOfLine -> Ojs.t =
          fun (x279 : [ `LF  | `CRLF ]) ->
            match x279 with
            | `LF -> Ojs.int_to_js 1
            | `CRLF -> Ojs.int_to_js 2
        and vscode_EndOfLine_LF_of_js : Ojs.t -> vscode_EndOfLine_LF =
          fun (x283 : Ojs.t) ->
            let x284 = x283 in
            match Ojs.int_of_js x284 with | 1 -> `LF | _ -> assert false
        and vscode_EndOfLine_LF_to_js : vscode_EndOfLine_LF -> Ojs.t =
          fun (x282 : [ `LF ]) -> match x282 with | `LF -> Ojs.int_to_js 1
        and vscode_EndOfLine_CRLF_of_js : Ojs.t -> vscode_EndOfLine_CRLF =
          fun (x286 : Ojs.t) ->
            let x287 = x286 in
            match Ojs.int_of_js x287 with | 2 -> `CRLF | _ -> assert false
        and vscode_EndOfLine_CRLF_to_js : vscode_EndOfLine_CRLF -> Ojs.t =
          fun (x285 : [ `CRLF ]) ->
            match x285 with | `CRLF -> Ojs.int_to_js 2
        and vscode_EnterAction_of_js : Ojs.t -> vscode_EnterAction =
          Obj.magic
        and vscode_EnterAction_to_js : vscode_EnterAction -> Ojs.t =
          Obj.magic
        and vscode_EnvironmentVariableCollection_of_js :
          Ojs.t -> vscode_EnvironmentVariableCollection = Obj.magic
        and vscode_EnvironmentVariableCollection_to_js :
          vscode_EnvironmentVariableCollection -> Ojs.t = Obj.magic
        and vscode_EnvironmentVariableMutator_of_js :
          Ojs.t -> vscode_EnvironmentVariableMutator = Obj.magic
        and vscode_EnvironmentVariableMutator_to_js :
          vscode_EnvironmentVariableMutator -> Ojs.t = Obj.magic
        and vscode_EnvironmentVariableMutatorType_of_js :
          Ojs.t -> vscode_EnvironmentVariableMutatorType =
          fun (x289 : Ojs.t) ->
            let x290 = x289 in
            match Ojs.int_of_js x290 with
            | 1 -> `Replace
            | 2 -> `Append
            | 3 -> `Prepend
            | _ -> assert false
        and vscode_EnvironmentVariableMutatorType_to_js :
          vscode_EnvironmentVariableMutatorType -> Ojs.t =
          fun (x288 : [ `Replace  | `Append  | `Prepend ]) ->
            match x288 with
            | `Replace -> Ojs.int_to_js 1
            | `Append -> Ojs.int_to_js 2
            | `Prepend -> Ojs.int_to_js 3
        and vscode_EnvironmentVariableMutatorType_Replace_of_js :
          Ojs.t -> vscode_EnvironmentVariableMutatorType_Replace =
          fun (x292 : Ojs.t) ->
            let x293 = x292 in
            match Ojs.int_of_js x293 with | 1 -> `Replace | _ -> assert false
        and vscode_EnvironmentVariableMutatorType_Replace_to_js :
          vscode_EnvironmentVariableMutatorType_Replace -> Ojs.t =
          fun (x291 : [ `Replace ]) ->
            match x291 with | `Replace -> Ojs.int_to_js 1
        and vscode_EnvironmentVariableMutatorType_Append_of_js :
          Ojs.t -> vscode_EnvironmentVariableMutatorType_Append =
          fun (x295 : Ojs.t) ->
            let x296 = x295 in
            match Ojs.int_of_js x296 with | 2 -> `Append | _ -> assert false
        and vscode_EnvironmentVariableMutatorType_Append_to_js :
          vscode_EnvironmentVariableMutatorType_Append -> Ojs.t =
          fun (x294 : [ `Append ]) ->
            match x294 with | `Append -> Ojs.int_to_js 2
        and vscode_EnvironmentVariableMutatorType_Prepend_of_js :
          Ojs.t -> vscode_EnvironmentVariableMutatorType_Prepend =
          fun (x298 : Ojs.t) ->
            let x299 = x298 in
            match Ojs.int_of_js x299 with | 3 -> `Prepend | _ -> assert false
        and vscode_EnvironmentVariableMutatorType_Prepend_to_js :
          vscode_EnvironmentVariableMutatorType_Prepend -> Ojs.t =
          fun (x297 : [ `Prepend ]) ->
            match x297 with | `Prepend -> Ojs.int_to_js 3
        and vscode_EvaluatableExpression_of_js :
          Ojs.t -> vscode_EvaluatableExpression = Obj.magic
        and vscode_EvaluatableExpression_to_js :
          vscode_EvaluatableExpression -> Ojs.t = Obj.magic
        and vscode_EvaluatableExpressionProvider_of_js :
          Ojs.t -> vscode_EvaluatableExpressionProvider = Obj.magic
        and vscode_EvaluatableExpressionProvider_to_js :
          vscode_EvaluatableExpressionProvider -> Ojs.t = Obj.magic
        and vscode_Event_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_Event =
          fun _T -> Obj.magic
        and vscode_Event_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_Event -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_EventEmitter_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_EventEmitter =
          fun _T -> Obj.magic
        and vscode_EventEmitter_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_EventEmitter -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_Extension_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_Extension =
          fun _T -> Obj.magic
        and vscode_Extension_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_Extension -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_ExtensionContext_of_js : Ojs.t -> vscode_ExtensionContext
          = Obj.magic
        and vscode_ExtensionContext_to_js : vscode_ExtensionContext -> Ojs.t
          = Obj.magic
        and vscode_ExtensionKind_of_js : Ojs.t -> vscode_ExtensionKind =
          fun (x301 : Ojs.t) ->
            let x302 = x301 in
            match Ojs.int_of_js x302 with
            | 1 -> `UI
            | 2 -> `Workspace
            | _ -> assert false
        and vscode_ExtensionKind_to_js : vscode_ExtensionKind -> Ojs.t =
          fun (x300 : [ `UI  | `Workspace ]) ->
            match x300 with
            | `UI -> Ojs.int_to_js 1
            | `Workspace -> Ojs.int_to_js 2
        and vscode_ExtensionKind_UI_of_js : Ojs.t -> vscode_ExtensionKind_UI
          =
          fun (x304 : Ojs.t) ->
            let x305 = x304 in
            match Ojs.int_of_js x305 with | 1 -> `UI | _ -> assert false
        and vscode_ExtensionKind_UI_to_js : vscode_ExtensionKind_UI -> Ojs.t
          = fun (x303 : [ `UI ]) -> match x303 with | `UI -> Ojs.int_to_js 1
        and vscode_ExtensionKind_Workspace_of_js :
          Ojs.t -> vscode_ExtensionKind_Workspace =
          fun (x307 : Ojs.t) ->
            let x308 = x307 in
            match Ojs.int_of_js x308 with
            | 2 -> `Workspace
            | _ -> assert false
        and vscode_ExtensionKind_Workspace_to_js :
          vscode_ExtensionKind_Workspace -> Ojs.t =
          fun (x306 : [ `Workspace ]) ->
            match x306 with | `Workspace -> Ojs.int_to_js 2
        and vscode_ExtensionMode_of_js : Ojs.t -> vscode_ExtensionMode =
          fun (x310 : Ojs.t) ->
            let x311 = x310 in
            match Ojs.int_of_js x311 with
            | 1 -> `Production
            | 2 -> `Development
            | 3 -> `Test
            | _ -> assert false
        and vscode_ExtensionMode_to_js : vscode_ExtensionMode -> Ojs.t =
          fun (x309 : [ `Production  | `Development  | `Test ]) ->
            match x309 with
            | `Production -> Ojs.int_to_js 1
            | `Development -> Ojs.int_to_js 2
            | `Test -> Ojs.int_to_js 3
        and vscode_ExtensionMode_Production_of_js :
          Ojs.t -> vscode_ExtensionMode_Production =
          fun (x313 : Ojs.t) ->
            let x314 = x313 in
            match Ojs.int_of_js x314 with
            | 1 -> `Production
            | _ -> assert false
        and vscode_ExtensionMode_Production_to_js :
          vscode_ExtensionMode_Production -> Ojs.t =
          fun (x312 : [ `Production ]) ->
            match x312 with | `Production -> Ojs.int_to_js 1
        and vscode_ExtensionMode_Development_of_js :
          Ojs.t -> vscode_ExtensionMode_Development =
          fun (x316 : Ojs.t) ->
            let x317 = x316 in
            match Ojs.int_of_js x317 with
            | 2 -> `Development
            | _ -> assert false
        and vscode_ExtensionMode_Development_to_js :
          vscode_ExtensionMode_Development -> Ojs.t =
          fun (x315 : [ `Development ]) ->
            match x315 with | `Development -> Ojs.int_to_js 2
        and vscode_ExtensionMode_Test_of_js :
          Ojs.t -> vscode_ExtensionMode_Test =
          fun (x319 : Ojs.t) ->
            let x320 = x319 in
            match Ojs.int_of_js x320 with | 3 -> `Test | _ -> assert false
        and vscode_ExtensionMode_Test_to_js :
          vscode_ExtensionMode_Test -> Ojs.t =
          fun (x318 : [ `Test ]) ->
            match x318 with | `Test -> Ojs.int_to_js 3
        and vscode_ExtensionTerminalOptions_of_js :
          Ojs.t -> vscode_ExtensionTerminalOptions = Obj.magic
        and vscode_ExtensionTerminalOptions_to_js :
          vscode_ExtensionTerminalOptions -> Ojs.t = Obj.magic
        and vscode_FileChangeEvent_of_js : Ojs.t -> vscode_FileChangeEvent =
          Obj.magic
        and vscode_FileChangeEvent_to_js : vscode_FileChangeEvent -> Ojs.t =
          Obj.magic
        and vscode_FileChangeType_of_js : Ojs.t -> vscode_FileChangeType =
          fun (x322 : Ojs.t) ->
            let x323 = x322 in
            match Ojs.int_of_js x323 with
            | 1 -> `Changed
            | 2 -> `Created
            | 3 -> `Deleted
            | _ -> assert false
        and vscode_FileChangeType_to_js : vscode_FileChangeType -> Ojs.t =
          fun (x321 : [ `Changed  | `Created  | `Deleted ]) ->
            match x321 with
            | `Changed -> Ojs.int_to_js 1
            | `Created -> Ojs.int_to_js 2
            | `Deleted -> Ojs.int_to_js 3
        and vscode_FileChangeType_Changed_of_js :
          Ojs.t -> vscode_FileChangeType_Changed =
          fun (x325 : Ojs.t) ->
            let x326 = x325 in
            match Ojs.int_of_js x326 with | 1 -> `Changed | _ -> assert false
        and vscode_FileChangeType_Changed_to_js :
          vscode_FileChangeType_Changed -> Ojs.t =
          fun (x324 : [ `Changed ]) ->
            match x324 with | `Changed -> Ojs.int_to_js 1
        and vscode_FileChangeType_Created_of_js :
          Ojs.t -> vscode_FileChangeType_Created =
          fun (x328 : Ojs.t) ->
            let x329 = x328 in
            match Ojs.int_of_js x329 with | 2 -> `Created | _ -> assert false
        and vscode_FileChangeType_Created_to_js :
          vscode_FileChangeType_Created -> Ojs.t =
          fun (x327 : [ `Created ]) ->
            match x327 with | `Created -> Ojs.int_to_js 2
        and vscode_FileChangeType_Deleted_of_js :
          Ojs.t -> vscode_FileChangeType_Deleted =
          fun (x331 : Ojs.t) ->
            let x332 = x331 in
            match Ojs.int_of_js x332 with | 3 -> `Deleted | _ -> assert false
        and vscode_FileChangeType_Deleted_to_js :
          vscode_FileChangeType_Deleted -> Ojs.t =
          fun (x330 : [ `Deleted ]) ->
            match x330 with | `Deleted -> Ojs.int_to_js 3
        and vscode_FileCreateEvent_of_js : Ojs.t -> vscode_FileCreateEvent =
          Obj.magic
        and vscode_FileCreateEvent_to_js : vscode_FileCreateEvent -> Ojs.t =
          Obj.magic
        and vscode_FileDecoration_of_js : Ojs.t -> vscode_FileDecoration =
          Obj.magic
        and vscode_FileDecoration_to_js : vscode_FileDecoration -> Ojs.t =
          Obj.magic
        and vscode_FileDecorationProvider_of_js :
          Ojs.t -> vscode_FileDecorationProvider = Obj.magic
        and vscode_FileDecorationProvider_to_js :
          vscode_FileDecorationProvider -> Ojs.t = Obj.magic
        and vscode_FileDeleteEvent_of_js : Ojs.t -> vscode_FileDeleteEvent =
          Obj.magic
        and vscode_FileDeleteEvent_to_js : vscode_FileDeleteEvent -> Ojs.t =
          Obj.magic
        and vscode_FileRenameEvent_of_js : Ojs.t -> vscode_FileRenameEvent =
          Obj.magic
        and vscode_FileRenameEvent_to_js : vscode_FileRenameEvent -> Ojs.t =
          Obj.magic
        and vscode_FileStat_of_js : Ojs.t -> vscode_FileStat = Obj.magic
        and vscode_FileStat_to_js : vscode_FileStat -> Ojs.t = Obj.magic
        and vscode_FileSystem_of_js : Ojs.t -> vscode_FileSystem = Obj.magic
        and vscode_FileSystem_to_js : vscode_FileSystem -> Ojs.t = Obj.magic
        and vscode_FileSystemError_of_js : Ojs.t -> vscode_FileSystemError =
          Obj.magic
        and vscode_FileSystemError_to_js : vscode_FileSystemError -> Ojs.t =
          Obj.magic
        and vscode_FileSystemProvider_of_js :
          Ojs.t -> vscode_FileSystemProvider = Obj.magic
        and vscode_FileSystemProvider_to_js :
          vscode_FileSystemProvider -> Ojs.t = Obj.magic
        and vscode_FileSystemWatcher_of_js :
          Ojs.t -> vscode_FileSystemWatcher = Obj.magic
        and vscode_FileSystemWatcher_to_js :
          vscode_FileSystemWatcher -> Ojs.t = Obj.magic
        and vscode_FileType_of_js : Ojs.t -> vscode_FileType =
          fun (x334 : Ojs.t) ->
            let x335 = x334 in
            match Ojs.int_of_js x335 with
            | 0 -> `Unknown
            | 1 -> `File
            | 2 -> `Directory
            | 64 -> `SymbolicLink
            | _ -> assert false
        and vscode_FileType_to_js : vscode_FileType -> Ojs.t =
          fun (x333 : [ `Unknown  | `File  | `Directory  | `SymbolicLink ])
            ->
            match x333 with
            | `Unknown -> Ojs.int_to_js 0
            | `File -> Ojs.int_to_js 1
            | `Directory -> Ojs.int_to_js 2
            | `SymbolicLink -> Ojs.int_to_js 64
        and vscode_FileType_Unknown_of_js : Ojs.t -> vscode_FileType_Unknown
          =
          fun (x337 : Ojs.t) ->
            let x338 = x337 in
            match Ojs.int_of_js x338 with | 0 -> `Unknown | _ -> assert false
        and vscode_FileType_Unknown_to_js : vscode_FileType_Unknown -> Ojs.t
          =
          fun (x336 : [ `Unknown ]) ->
            match x336 with | `Unknown -> Ojs.int_to_js 0
        and vscode_FileType_File_of_js : Ojs.t -> vscode_FileType_File =
          fun (x340 : Ojs.t) ->
            let x341 = x340 in
            match Ojs.int_of_js x341 with | 1 -> `File | _ -> assert false
        and vscode_FileType_File_to_js : vscode_FileType_File -> Ojs.t =
          fun (x339 : [ `File ]) ->
            match x339 with | `File -> Ojs.int_to_js 1
        and vscode_FileType_Directory_of_js :
          Ojs.t -> vscode_FileType_Directory =
          fun (x343 : Ojs.t) ->
            let x344 = x343 in
            match Ojs.int_of_js x344 with
            | 2 -> `Directory
            | _ -> assert false
        and vscode_FileType_Directory_to_js :
          vscode_FileType_Directory -> Ojs.t =
          fun (x342 : [ `Directory ]) ->
            match x342 with | `Directory -> Ojs.int_to_js 2
        and vscode_FileType_SymbolicLink_of_js :
          Ojs.t -> vscode_FileType_SymbolicLink =
          fun (x346 : Ojs.t) ->
            let x347 = x346 in
            match Ojs.int_of_js x347 with
            | 64 -> `SymbolicLink
            | _ -> assert false
        and vscode_FileType_SymbolicLink_to_js :
          vscode_FileType_SymbolicLink -> Ojs.t =
          fun (x345 : [ `SymbolicLink ]) ->
            match x345 with | `SymbolicLink -> Ojs.int_to_js 64
        and vscode_FileWillCreateEvent_of_js :
          Ojs.t -> vscode_FileWillCreateEvent = Obj.magic
        and vscode_FileWillCreateEvent_to_js :
          vscode_FileWillCreateEvent -> Ojs.t = Obj.magic
        and vscode_FileWillDeleteEvent_of_js :
          Ojs.t -> vscode_FileWillDeleteEvent = Obj.magic
        and vscode_FileWillDeleteEvent_to_js :
          vscode_FileWillDeleteEvent -> Ojs.t = Obj.magic
        and vscode_FileWillRenameEvent_of_js :
          Ojs.t -> vscode_FileWillRenameEvent = Obj.magic
        and vscode_FileWillRenameEvent_to_js :
          vscode_FileWillRenameEvent -> Ojs.t = Obj.magic
        and vscode_FoldingContext_of_js : Ojs.t -> vscode_FoldingContext =
          Obj.magic
        and vscode_FoldingContext_to_js : vscode_FoldingContext -> Ojs.t =
          Obj.magic
        and vscode_FoldingRange_of_js : Ojs.t -> vscode_FoldingRange =
          Obj.magic
        and vscode_FoldingRange_to_js : vscode_FoldingRange -> Ojs.t =
          Obj.magic
        and vscode_FoldingRangeKind_of_js : Ojs.t -> vscode_FoldingRangeKind
          =
          fun (x349 : Ojs.t) ->
            let x350 = x349 in
            match Ojs.int_of_js x350 with
            | 1 -> `Comment
            | 2 -> `Imports
            | 3 -> `Region
            | _ -> assert false
        and vscode_FoldingRangeKind_to_js : vscode_FoldingRangeKind -> Ojs.t
          =
          fun (x348 : [ `Comment  | `Imports  | `Region ]) ->
            match x348 with
            | `Comment -> Ojs.int_to_js 1
            | `Imports -> Ojs.int_to_js 2
            | `Region -> Ojs.int_to_js 3
        and vscode_FoldingRangeKind_Comment_of_js :
          Ojs.t -> vscode_FoldingRangeKind_Comment =
          fun (x352 : Ojs.t) ->
            let x353 = x352 in
            match Ojs.int_of_js x353 with | 1 -> `Comment | _ -> assert false
        and vscode_FoldingRangeKind_Comment_to_js :
          vscode_FoldingRangeKind_Comment -> Ojs.t =
          fun (x351 : [ `Comment ]) ->
            match x351 with | `Comment -> Ojs.int_to_js 1
        and vscode_FoldingRangeKind_Imports_of_js :
          Ojs.t -> vscode_FoldingRangeKind_Imports =
          fun (x355 : Ojs.t) ->
            let x356 = x355 in
            match Ojs.int_of_js x356 with | 2 -> `Imports | _ -> assert false
        and vscode_FoldingRangeKind_Imports_to_js :
          vscode_FoldingRangeKind_Imports -> Ojs.t =
          fun (x354 : [ `Imports ]) ->
            match x354 with | `Imports -> Ojs.int_to_js 2
        and vscode_FoldingRangeKind_Region_of_js :
          Ojs.t -> vscode_FoldingRangeKind_Region =
          fun (x358 : Ojs.t) ->
            let x359 = x358 in
            match Ojs.int_of_js x359 with | 3 -> `Region | _ -> assert false
        and vscode_FoldingRangeKind_Region_to_js :
          vscode_FoldingRangeKind_Region -> Ojs.t =
          fun (x357 : [ `Region ]) ->
            match x357 with | `Region -> Ojs.int_to_js 3
        and vscode_FoldingRangeProvider_of_js :
          Ojs.t -> vscode_FoldingRangeProvider = Obj.magic
        and vscode_FoldingRangeProvider_to_js :
          vscode_FoldingRangeProvider -> Ojs.t = Obj.magic
        and vscode_FormattingOptions_of_js :
          Ojs.t -> vscode_FormattingOptions = Obj.magic
        and vscode_FormattingOptions_to_js :
          vscode_FormattingOptions -> Ojs.t = Obj.magic
        and vscode_FunctionBreakpoint_of_js :
          Ojs.t -> vscode_FunctionBreakpoint = Obj.magic
        and vscode_FunctionBreakpoint_to_js :
          vscode_FunctionBreakpoint -> Ojs.t = Obj.magic
        and vscode_GlobPattern_of_js : Ojs.t -> vscode_GlobPattern =
          fun (x362 : Ojs.t) ->
            or_string_of_js vscode_RelativePattern_of_js x362
        and vscode_GlobPattern_to_js : vscode_GlobPattern -> Ojs.t =
          fun (x360 : vscode_RelativePattern or_string) ->
            or_string_to_js vscode_RelativePattern_to_js x360
        and vscode_Hover_of_js : Ojs.t -> vscode_Hover = Obj.magic
        and vscode_Hover_to_js : vscode_Hover -> Ojs.t = Obj.magic
        and vscode_HoverProvider_of_js : Ojs.t -> vscode_HoverProvider =
          Obj.magic
        and vscode_HoverProvider_to_js : vscode_HoverProvider -> Ojs.t =
          Obj.magic
        and vscode_ImplementationProvider_of_js :
          Ojs.t -> vscode_ImplementationProvider = Obj.magic
        and vscode_ImplementationProvider_to_js :
          vscode_ImplementationProvider -> Ojs.t = Obj.magic
        and vscode_IndentAction_of_js : Ojs.t -> vscode_IndentAction =
          fun (x365 : Ojs.t) ->
            let x366 = x365 in
            match Ojs.int_of_js x366 with
            | 0 -> `None
            | 1 -> `Indent
            | 2 -> `IndentOutdent
            | 3 -> `Outdent
            | _ -> assert false
        and vscode_IndentAction_to_js : vscode_IndentAction -> Ojs.t =
          fun (x364 : [ `None  | `Indent  | `IndentOutdent  | `Outdent ]) ->
            match x364 with
            | `None -> Ojs.int_to_js 0
            | `Indent -> Ojs.int_to_js 1
            | `IndentOutdent -> Ojs.int_to_js 2
            | `Outdent -> Ojs.int_to_js 3
        and vscode_IndentAction_None_of_js :
          Ojs.t -> vscode_IndentAction_None =
          fun (x368 : Ojs.t) ->
            let x369 = x368 in
            match Ojs.int_of_js x369 with | 0 -> `None | _ -> assert false
        and vscode_IndentAction_None_to_js :
          vscode_IndentAction_None -> Ojs.t =
          fun (x367 : [ `None ]) ->
            match x367 with | `None -> Ojs.int_to_js 0
        and vscode_IndentAction_Indent_of_js :
          Ojs.t -> vscode_IndentAction_Indent =
          fun (x371 : Ojs.t) ->
            let x372 = x371 in
            match Ojs.int_of_js x372 with | 1 -> `Indent | _ -> assert false
        and vscode_IndentAction_Indent_to_js :
          vscode_IndentAction_Indent -> Ojs.t =
          fun (x370 : [ `Indent ]) ->
            match x370 with | `Indent -> Ojs.int_to_js 1
        and vscode_IndentAction_IndentOutdent_of_js :
          Ojs.t -> vscode_IndentAction_IndentOutdent =
          fun (x374 : Ojs.t) ->
            let x375 = x374 in
            match Ojs.int_of_js x375 with
            | 2 -> `IndentOutdent
            | _ -> assert false
        and vscode_IndentAction_IndentOutdent_to_js :
          vscode_IndentAction_IndentOutdent -> Ojs.t =
          fun (x373 : [ `IndentOutdent ]) ->
            match x373 with | `IndentOutdent -> Ojs.int_to_js 2
        and vscode_IndentAction_Outdent_of_js :
          Ojs.t -> vscode_IndentAction_Outdent =
          fun (x377 : Ojs.t) ->
            let x378 = x377 in
            match Ojs.int_of_js x378 with | 3 -> `Outdent | _ -> assert false
        and vscode_IndentAction_Outdent_to_js :
          vscode_IndentAction_Outdent -> Ojs.t =
          fun (x376 : [ `Outdent ]) ->
            match x376 with | `Outdent -> Ojs.int_to_js 3
        and vscode_IndentationRule_of_js : Ojs.t -> vscode_IndentationRule =
          Obj.magic
        and vscode_IndentationRule_to_js : vscode_IndentationRule -> Ojs.t =
          Obj.magic
        and vscode_InlineValue_of_js : Ojs.t -> vscode_InlineValue =
          fun (x383 : Ojs.t) ->
            union3_of_js vscode_InlineValueEvaluatableExpression_of_js
              vscode_InlineValueText_of_js
              vscode_InlineValueVariableLookup_of_js x383
        and vscode_InlineValue_to_js : vscode_InlineValue -> Ojs.t =
          fun
            (x379 :
              (vscode_InlineValueEvaluatableExpression,
                vscode_InlineValueText, vscode_InlineValueVariableLookup)
                union3)
            ->
            union3_to_js vscode_InlineValueEvaluatableExpression_to_js
              vscode_InlineValueText_to_js
              vscode_InlineValueVariableLookup_to_js x379
        and vscode_InlineValueContext_of_js :
          Ojs.t -> vscode_InlineValueContext = Obj.magic
        and vscode_InlineValueContext_to_js :
          vscode_InlineValueContext -> Ojs.t = Obj.magic
        and vscode_InlineValueEvaluatableExpression_of_js :
          Ojs.t -> vscode_InlineValueEvaluatableExpression = Obj.magic
        and vscode_InlineValueEvaluatableExpression_to_js :
          vscode_InlineValueEvaluatableExpression -> Ojs.t = Obj.magic
        and vscode_InlineValueText_of_js : Ojs.t -> vscode_InlineValueText =
          Obj.magic
        and vscode_InlineValueText_to_js : vscode_InlineValueText -> Ojs.t =
          Obj.magic
        and vscode_InlineValueVariableLookup_of_js :
          Ojs.t -> vscode_InlineValueVariableLookup = Obj.magic
        and vscode_InlineValueVariableLookup_to_js :
          vscode_InlineValueVariableLookup -> Ojs.t = Obj.magic
        and vscode_InlineValuesProvider_of_js :
          Ojs.t -> vscode_InlineValuesProvider = Obj.magic
        and vscode_InlineValuesProvider_to_js :
          vscode_InlineValuesProvider -> Ojs.t = Obj.magic
        and vscode_InputBox_of_js : Ojs.t -> vscode_InputBox = Obj.magic
        and vscode_InputBox_to_js : vscode_InputBox -> Ojs.t = Obj.magic
        and vscode_InputBoxOptions_of_js : Ojs.t -> vscode_InputBoxOptions =
          Obj.magic
        and vscode_InputBoxOptions_to_js : vscode_InputBoxOptions -> Ojs.t =
          Obj.magic
        and vscode_LanguageConfiguration_of_js :
          Ojs.t -> vscode_LanguageConfiguration = Obj.magic
        and vscode_LanguageConfiguration_to_js :
          vscode_LanguageConfiguration -> Ojs.t = Obj.magic
        and vscode_LinkedEditingRangeProvider_of_js :
          Ojs.t -> vscode_LinkedEditingRangeProvider = Obj.magic
        and vscode_LinkedEditingRangeProvider_to_js :
          vscode_LinkedEditingRangeProvider -> Ojs.t = Obj.magic
        and vscode_LinkedEditingRanges_of_js :
          Ojs.t -> vscode_LinkedEditingRanges = Obj.magic
        and vscode_LinkedEditingRanges_to_js :
          vscode_LinkedEditingRanges -> Ojs.t = Obj.magic
        and vscode_Location_of_js : Ojs.t -> vscode_Location = Obj.magic
        and vscode_Location_to_js : vscode_Location -> Ojs.t = Obj.magic
        and vscode_LocationLink_of_js : Ojs.t -> vscode_LocationLink =
          Obj.magic
        and vscode_LocationLink_to_js : vscode_LocationLink -> Ojs.t =
          Obj.magic
        and vscode_MarkdownString_of_js : Ojs.t -> vscode_MarkdownString =
          Obj.magic
        and vscode_MarkdownString_to_js : vscode_MarkdownString -> Ojs.t =
          Obj.magic
        and vscode_MarkedString_of_js : Ojs.t -> vscode_MarkedString =
          fun (x391 : Ojs.t) ->
            or_string_of_js
              (fun (x392 : Ojs.t) ->
                 union2_of_js vscode_MarkdownString_of_js
                   anonymous_interface_13_of_js x392) x391
        and vscode_MarkedString_to_js : vscode_MarkedString -> Ojs.t =
          fun
            (x387 :
              (vscode_MarkdownString, anonymous_interface_13) union2
                or_string)
            ->
            or_string_to_js
              (fun
                 (x388 :
                   (vscode_MarkdownString, anonymous_interface_13) union2)
                 ->
                 union2_to_js vscode_MarkdownString_to_js
                   anonymous_interface_13_to_js x388) x387
        and vscode_Memento_of_js : Ojs.t -> vscode_Memento = Obj.magic
        and vscode_Memento_to_js : vscode_Memento -> Ojs.t = Obj.magic
        and vscode_MessageItem_of_js : Ojs.t -> vscode_MessageItem =
          Obj.magic
        and vscode_MessageItem_to_js : vscode_MessageItem -> Ojs.t =
          Obj.magic
        and vscode_MessageOptions_of_js : Ojs.t -> vscode_MessageOptions =
          Obj.magic
        and vscode_MessageOptions_to_js : vscode_MessageOptions -> Ojs.t =
          Obj.magic
        and vscode_OnEnterRule_of_js : Ojs.t -> vscode_OnEnterRule =
          Obj.magic
        and vscode_OnEnterRule_to_js : vscode_OnEnterRule -> Ojs.t =
          Obj.magic
        and vscode_OnTypeFormattingEditProvider_of_js :
          Ojs.t -> vscode_OnTypeFormattingEditProvider = Obj.magic
        and vscode_OnTypeFormattingEditProvider_to_js :
          vscode_OnTypeFormattingEditProvider -> Ojs.t = Obj.magic
        and vscode_OpenDialogOptions_of_js :
          Ojs.t -> vscode_OpenDialogOptions = Obj.magic
        and vscode_OpenDialogOptions_to_js :
          vscode_OpenDialogOptions -> Ojs.t = Obj.magic
        and vscode_OutputChannel_of_js : Ojs.t -> vscode_OutputChannel =
          Obj.magic
        and vscode_OutputChannel_to_js : vscode_OutputChannel -> Ojs.t =
          Obj.magic
        and vscode_OverviewRulerLane_of_js :
          Ojs.t -> vscode_OverviewRulerLane =
          fun (x396 : Ojs.t) ->
            let x397 = x396 in
            match Ojs.int_of_js x397 with
            | 1 -> `Left
            | 2 -> `Center
            | 4 -> `Right
            | 7 -> `Full
            | _ -> assert false
        and vscode_OverviewRulerLane_to_js :
          vscode_OverviewRulerLane -> Ojs.t =
          fun (x395 : [ `Left  | `Center  | `Right  | `Full ]) ->
            match x395 with
            | `Left -> Ojs.int_to_js 1
            | `Center -> Ojs.int_to_js 2
            | `Right -> Ojs.int_to_js 4
            | `Full -> Ojs.int_to_js 7
        and vscode_OverviewRulerLane_Left_of_js :
          Ojs.t -> vscode_OverviewRulerLane_Left =
          fun (x399 : Ojs.t) ->
            let x400 = x399 in
            match Ojs.int_of_js x400 with | 1 -> `Left | _ -> assert false
        and vscode_OverviewRulerLane_Left_to_js :
          vscode_OverviewRulerLane_Left -> Ojs.t =
          fun (x398 : [ `Left ]) ->
            match x398 with | `Left -> Ojs.int_to_js 1
        and vscode_OverviewRulerLane_Center_of_js :
          Ojs.t -> vscode_OverviewRulerLane_Center =
          fun (x402 : Ojs.t) ->
            let x403 = x402 in
            match Ojs.int_of_js x403 with | 2 -> `Center | _ -> assert false
        and vscode_OverviewRulerLane_Center_to_js :
          vscode_OverviewRulerLane_Center -> Ojs.t =
          fun (x401 : [ `Center ]) ->
            match x401 with | `Center -> Ojs.int_to_js 2
        and vscode_OverviewRulerLane_Right_of_js :
          Ojs.t -> vscode_OverviewRulerLane_Right =
          fun (x405 : Ojs.t) ->
            let x406 = x405 in
            match Ojs.int_of_js x406 with | 4 -> `Right | _ -> assert false
        and vscode_OverviewRulerLane_Right_to_js :
          vscode_OverviewRulerLane_Right -> Ojs.t =
          fun (x404 : [ `Right ]) ->
            match x404 with | `Right -> Ojs.int_to_js 4
        and vscode_OverviewRulerLane_Full_of_js :
          Ojs.t -> vscode_OverviewRulerLane_Full =
          fun (x408 : Ojs.t) ->
            let x409 = x408 in
            match Ojs.int_of_js x409 with | 7 -> `Full | _ -> assert false
        and vscode_OverviewRulerLane_Full_to_js :
          vscode_OverviewRulerLane_Full -> Ojs.t =
          fun (x407 : [ `Full ]) ->
            match x407 with | `Full -> Ojs.int_to_js 7
        and vscode_ParameterInformation_of_js :
          Ojs.t -> vscode_ParameterInformation = Obj.magic
        and vscode_ParameterInformation_to_js :
          vscode_ParameterInformation -> Ojs.t = Obj.magic
        and vscode_Position_of_js : Ojs.t -> vscode_Position = Obj.magic
        and vscode_Position_to_js : vscode_Position -> Ojs.t = Obj.magic
        and vscode_ProcessExecution_of_js : Ojs.t -> vscode_ProcessExecution
          = Obj.magic
        and vscode_ProcessExecution_to_js : vscode_ProcessExecution -> Ojs.t
          = Obj.magic
        and vscode_ProcessExecutionOptions_of_js :
          Ojs.t -> vscode_ProcessExecutionOptions = Obj.magic
        and vscode_ProcessExecutionOptions_to_js :
          vscode_ProcessExecutionOptions -> Ojs.t = Obj.magic
        and vscode_Progress_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_Progress =
          fun _T -> Obj.magic
        and vscode_Progress_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_Progress -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_ProgressLocation_of_js : Ojs.t -> vscode_ProgressLocation
          =
          fun (x411 : Ojs.t) ->
            let x412 = x411 in
            match Ojs.int_of_js x412 with
            | 1 -> `SourceControl
            | 10 -> `Window
            | 15 -> `Notification
            | _ -> assert false
        and vscode_ProgressLocation_to_js : vscode_ProgressLocation -> Ojs.t
          =
          fun (x410 : [ `SourceControl  | `Window  | `Notification ]) ->
            match x410 with
            | `SourceControl -> Ojs.int_to_js 1
            | `Window -> Ojs.int_to_js 10
            | `Notification -> Ojs.int_to_js 15
        and vscode_ProgressLocation_SourceControl_of_js :
          Ojs.t -> vscode_ProgressLocation_SourceControl =
          fun (x414 : Ojs.t) ->
            let x415 = x414 in
            match Ojs.int_of_js x415 with
            | 1 -> `SourceControl
            | _ -> assert false
        and vscode_ProgressLocation_SourceControl_to_js :
          vscode_ProgressLocation_SourceControl -> Ojs.t =
          fun (x413 : [ `SourceControl ]) ->
            match x413 with | `SourceControl -> Ojs.int_to_js 1
        and vscode_ProgressLocation_Window_of_js :
          Ojs.t -> vscode_ProgressLocation_Window =
          fun (x417 : Ojs.t) ->
            let x418 = x417 in
            match Ojs.int_of_js x418 with | 10 -> `Window | _ -> assert false
        and vscode_ProgressLocation_Window_to_js :
          vscode_ProgressLocation_Window -> Ojs.t =
          fun (x416 : [ `Window ]) ->
            match x416 with | `Window -> Ojs.int_to_js 10
        and vscode_ProgressLocation_Notification_of_js :
          Ojs.t -> vscode_ProgressLocation_Notification =
          fun (x420 : Ojs.t) ->
            let x421 = x420 in
            match Ojs.int_of_js x421 with
            | 15 -> `Notification
            | _ -> assert false
        and vscode_ProgressLocation_Notification_to_js :
          vscode_ProgressLocation_Notification -> Ojs.t =
          fun (x419 : [ `Notification ]) ->
            match x419 with | `Notification -> Ojs.int_to_js 15
        and vscode_ProgressOptions_of_js : Ojs.t -> vscode_ProgressOptions =
          Obj.magic
        and vscode_ProgressOptions_to_js : vscode_ProgressOptions -> Ojs.t =
          Obj.magic
        and vscode_ProviderResult_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_ProviderResult = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x428 : Ojs.t) ->
              or_null_or_undefined_of_js
                (fun (x429 : Ojs.t) ->
                   union2_of_js __T_of_js
                     (fun (x431 : Ojs.t) ->
                        _Thenable_of_js
                          (fun (x432 : Ojs.t) ->
                             or_null_or_undefined_of_js __T_of_js x432) x431)
                     x429) x428
        and vscode_ProviderResult_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_ProviderResult -> Ojs.t = fun (type
          __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun
              (x422 :
                (__T, __T or_null_or_undefined _Thenable) union2
                  or_null_or_undefined)
              ->
              or_null_or_undefined_to_js
                (fun
                   (x423 : (__T, __T or_null_or_undefined _Thenable) union2)
                   ->
                   union2_to_js __T_to_js
                     (fun (x425 : __T or_null_or_undefined _Thenable) ->
                        _Thenable_to_js
                          (fun (x426 : __T or_null_or_undefined) ->
                             or_null_or_undefined_to_js __T_to_js x426) x425)
                     x423) x422
        and vscode_Pseudoterminal_of_js : Ojs.t -> vscode_Pseudoterminal =
          Obj.magic
        and vscode_Pseudoterminal_to_js : vscode_Pseudoterminal -> Ojs.t =
          Obj.magic
        and vscode_QuickDiffProvider_of_js :
          Ojs.t -> vscode_QuickDiffProvider = Obj.magic
        and vscode_QuickDiffProvider_to_js :
          vscode_QuickDiffProvider -> Ojs.t = Obj.magic
        and vscode_QuickInput_of_js : Ojs.t -> vscode_QuickInput = Obj.magic
        and vscode_QuickInput_to_js : vscode_QuickInput -> Ojs.t = Obj.magic
        and vscode_QuickInputButton_of_js : Ojs.t -> vscode_QuickInputButton
          = Obj.magic
        and vscode_QuickInputButton_to_js : vscode_QuickInputButton -> Ojs.t
          = Obj.magic
        and vscode_QuickInputButtons_of_js :
          Ojs.t -> vscode_QuickInputButtons = Obj.magic
        and vscode_QuickInputButtons_to_js :
          vscode_QuickInputButtons -> Ojs.t = Obj.magic
        and vscode_QuickPick_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_QuickPick =
          fun _T -> Obj.magic
        and vscode_QuickPick_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_QuickPick -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_QuickPickItem_of_js : Ojs.t -> vscode_QuickPickItem =
          Obj.magic
        and vscode_QuickPickItem_to_js : vscode_QuickPickItem -> Ojs.t =
          Obj.magic
        and vscode_QuickPickOptions_of_js : Ojs.t -> vscode_QuickPickOptions
          = Obj.magic
        and vscode_QuickPickOptions_to_js : vscode_QuickPickOptions -> Ojs.t
          = Obj.magic
        and vscode_Range_of_js : Ojs.t -> vscode_Range = Obj.magic
        and vscode_Range_to_js : vscode_Range -> Ojs.t = Obj.magic
        and vscode_ReferenceContext_of_js : Ojs.t -> vscode_ReferenceContext
          = Obj.magic
        and vscode_ReferenceContext_to_js : vscode_ReferenceContext -> Ojs.t
          = Obj.magic
        and vscode_ReferenceProvider_of_js :
          Ojs.t -> vscode_ReferenceProvider = Obj.magic
        and vscode_ReferenceProvider_to_js :
          vscode_ReferenceProvider -> Ojs.t = Obj.magic
        and vscode_RelativePattern_of_js : Ojs.t -> vscode_RelativePattern =
          Obj.magic
        and vscode_RelativePattern_to_js : vscode_RelativePattern -> Ojs.t =
          Obj.magic
        and vscode_RenameProvider_of_js : Ojs.t -> vscode_RenameProvider =
          Obj.magic
        and vscode_RenameProvider_to_js : vscode_RenameProvider -> Ojs.t =
          Obj.magic
        and vscode_RunOptions_of_js : Ojs.t -> vscode_RunOptions = Obj.magic
        and vscode_RunOptions_to_js : vscode_RunOptions -> Ojs.t = Obj.magic
        and vscode_SaveDialogOptions_of_js :
          Ojs.t -> vscode_SaveDialogOptions = Obj.magic
        and vscode_SaveDialogOptions_to_js :
          vscode_SaveDialogOptions -> Ojs.t = Obj.magic
        and vscode_SecretStorage_of_js : Ojs.t -> vscode_SecretStorage =
          Obj.magic
        and vscode_SecretStorage_to_js : vscode_SecretStorage -> Ojs.t =
          Obj.magic
        and vscode_SecretStorageChangeEvent_of_js :
          Ojs.t -> vscode_SecretStorageChangeEvent = Obj.magic
        and vscode_SecretStorageChangeEvent_to_js :
          vscode_SecretStorageChangeEvent -> Ojs.t = Obj.magic
        and vscode_Selection_of_js : Ojs.t -> vscode_Selection = Obj.magic
        and vscode_Selection_to_js : vscode_Selection -> Ojs.t = Obj.magic
        and vscode_SelectionRange_of_js : Ojs.t -> vscode_SelectionRange =
          Obj.magic
        and vscode_SelectionRange_to_js : vscode_SelectionRange -> Ojs.t =
          Obj.magic
        and vscode_SelectionRangeProvider_of_js :
          Ojs.t -> vscode_SelectionRangeProvider = Obj.magic
        and vscode_SelectionRangeProvider_to_js :
          vscode_SelectionRangeProvider -> Ojs.t = Obj.magic
        and vscode_SemanticTokens_of_js : Ojs.t -> vscode_SemanticTokens =
          Obj.magic
        and vscode_SemanticTokens_to_js : vscode_SemanticTokens -> Ojs.t =
          Obj.magic
        and vscode_SemanticTokensBuilder_of_js :
          Ojs.t -> vscode_SemanticTokensBuilder = Obj.magic
        and vscode_SemanticTokensBuilder_to_js :
          vscode_SemanticTokensBuilder -> Ojs.t = Obj.magic
        and vscode_SemanticTokensEdit_of_js :
          Ojs.t -> vscode_SemanticTokensEdit = Obj.magic
        and vscode_SemanticTokensEdit_to_js :
          vscode_SemanticTokensEdit -> Ojs.t = Obj.magic
        and vscode_SemanticTokensEdits_of_js :
          Ojs.t -> vscode_SemanticTokensEdits = Obj.magic
        and vscode_SemanticTokensEdits_to_js :
          vscode_SemanticTokensEdits -> Ojs.t = Obj.magic
        and vscode_SemanticTokensLegend_of_js :
          Ojs.t -> vscode_SemanticTokensLegend = Obj.magic
        and vscode_SemanticTokensLegend_to_js :
          vscode_SemanticTokensLegend -> Ojs.t = Obj.magic
        and vscode_ShellExecution_of_js : Ojs.t -> vscode_ShellExecution =
          Obj.magic
        and vscode_ShellExecution_to_js : vscode_ShellExecution -> Ojs.t =
          Obj.magic
        and vscode_ShellExecutionOptions_of_js :
          Ojs.t -> vscode_ShellExecutionOptions = Obj.magic
        and vscode_ShellExecutionOptions_to_js :
          vscode_ShellExecutionOptions -> Ojs.t = Obj.magic
        and vscode_ShellQuotedString_of_js :
          Ojs.t -> vscode_ShellQuotedString = Obj.magic
        and vscode_ShellQuotedString_to_js :
          vscode_ShellQuotedString -> Ojs.t = Obj.magic
        and vscode_ShellQuoting_of_js : Ojs.t -> vscode_ShellQuoting =
          fun (x435 : Ojs.t) ->
            let x436 = x435 in
            match Ojs.int_of_js x436 with
            | 1 -> `Escape
            | 2 -> `Strong
            | 3 -> `Weak
            | _ -> assert false
        and vscode_ShellQuoting_to_js : vscode_ShellQuoting -> Ojs.t =
          fun (x434 : [ `Escape  | `Strong  | `Weak ]) ->
            match x434 with
            | `Escape -> Ojs.int_to_js 1
            | `Strong -> Ojs.int_to_js 2
            | `Weak -> Ojs.int_to_js 3
        and vscode_ShellQuoting_Escape_of_js :
          Ojs.t -> vscode_ShellQuoting_Escape =
          fun (x438 : Ojs.t) ->
            let x439 = x438 in
            match Ojs.int_of_js x439 with | 1 -> `Escape | _ -> assert false
        and vscode_ShellQuoting_Escape_to_js :
          vscode_ShellQuoting_Escape -> Ojs.t =
          fun (x437 : [ `Escape ]) ->
            match x437 with | `Escape -> Ojs.int_to_js 1
        and vscode_ShellQuoting_Strong_of_js :
          Ojs.t -> vscode_ShellQuoting_Strong =
          fun (x441 : Ojs.t) ->
            let x442 = x441 in
            match Ojs.int_of_js x442 with | 2 -> `Strong | _ -> assert false
        and vscode_ShellQuoting_Strong_to_js :
          vscode_ShellQuoting_Strong -> Ojs.t =
          fun (x440 : [ `Strong ]) ->
            match x440 with | `Strong -> Ojs.int_to_js 2
        and vscode_ShellQuoting_Weak_of_js :
          Ojs.t -> vscode_ShellQuoting_Weak =
          fun (x444 : Ojs.t) ->
            let x445 = x444 in
            match Ojs.int_of_js x445 with | 3 -> `Weak | _ -> assert false
        and vscode_ShellQuoting_Weak_to_js :
          vscode_ShellQuoting_Weak -> Ojs.t =
          fun (x443 : [ `Weak ]) ->
            match x443 with | `Weak -> Ojs.int_to_js 3
        and vscode_ShellQuotingOptions_of_js :
          Ojs.t -> vscode_ShellQuotingOptions = Obj.magic
        and vscode_ShellQuotingOptions_to_js :
          vscode_ShellQuotingOptions -> Ojs.t = Obj.magic
        and vscode_SignatureHelp_of_js : Ojs.t -> vscode_SignatureHelp =
          Obj.magic
        and vscode_SignatureHelp_to_js : vscode_SignatureHelp -> Ojs.t =
          Obj.magic
        and vscode_SignatureHelpContext_of_js :
          Ojs.t -> vscode_SignatureHelpContext = Obj.magic
        and vscode_SignatureHelpContext_to_js :
          vscode_SignatureHelpContext -> Ojs.t = Obj.magic
        and vscode_SignatureHelpProvider_of_js :
          Ojs.t -> vscode_SignatureHelpProvider = Obj.magic
        and vscode_SignatureHelpProvider_to_js :
          vscode_SignatureHelpProvider -> Ojs.t = Obj.magic
        and vscode_SignatureHelpProviderMetadata_of_js :
          Ojs.t -> vscode_SignatureHelpProviderMetadata = Obj.magic
        and vscode_SignatureHelpProviderMetadata_to_js :
          vscode_SignatureHelpProviderMetadata -> Ojs.t = Obj.magic
        and vscode_SignatureHelpTriggerKind_of_js :
          Ojs.t -> vscode_SignatureHelpTriggerKind =
          fun (x447 : Ojs.t) ->
            let x448 = x447 in
            match Ojs.int_of_js x448 with
            | 1 -> `Invoke
            | 2 -> `TriggerCharacter
            | 3 -> `ContentChange
            | _ -> assert false
        and vscode_SignatureHelpTriggerKind_to_js :
          vscode_SignatureHelpTriggerKind -> Ojs.t =
          fun (x446 : [ `Invoke  | `TriggerCharacter  | `ContentChange ]) ->
            match x446 with
            | `Invoke -> Ojs.int_to_js 1
            | `TriggerCharacter -> Ojs.int_to_js 2
            | `ContentChange -> Ojs.int_to_js 3
        and vscode_SignatureHelpTriggerKind_Invoke_of_js :
          Ojs.t -> vscode_SignatureHelpTriggerKind_Invoke =
          fun (x450 : Ojs.t) ->
            let x451 = x450 in
            match Ojs.int_of_js x451 with | 1 -> `Invoke | _ -> assert false
        and vscode_SignatureHelpTriggerKind_Invoke_to_js :
          vscode_SignatureHelpTriggerKind_Invoke -> Ojs.t =
          fun (x449 : [ `Invoke ]) ->
            match x449 with | `Invoke -> Ojs.int_to_js 1
        and vscode_SignatureHelpTriggerKind_TriggerCharacter_of_js :
          Ojs.t -> vscode_SignatureHelpTriggerKind_TriggerCharacter =
          fun (x453 : Ojs.t) ->
            let x454 = x453 in
            match Ojs.int_of_js x454 with
            | 2 -> `TriggerCharacter
            | _ -> assert false
        and vscode_SignatureHelpTriggerKind_TriggerCharacter_to_js :
          vscode_SignatureHelpTriggerKind_TriggerCharacter -> Ojs.t =
          fun (x452 : [ `TriggerCharacter ]) ->
            match x452 with | `TriggerCharacter -> Ojs.int_to_js 2
        and vscode_SignatureHelpTriggerKind_ContentChange_of_js :
          Ojs.t -> vscode_SignatureHelpTriggerKind_ContentChange =
          fun (x456 : Ojs.t) ->
            let x457 = x456 in
            match Ojs.int_of_js x457 with
            | 3 -> `ContentChange
            | _ -> assert false
        and vscode_SignatureHelpTriggerKind_ContentChange_to_js :
          vscode_SignatureHelpTriggerKind_ContentChange -> Ojs.t =
          fun (x455 : [ `ContentChange ]) ->
            match x455 with | `ContentChange -> Ojs.int_to_js 3
        and vscode_SignatureInformation_of_js :
          Ojs.t -> vscode_SignatureInformation = Obj.magic
        and vscode_SignatureInformation_to_js :
          vscode_SignatureInformation -> Ojs.t = Obj.magic
        and vscode_SnippetString_of_js : Ojs.t -> vscode_SnippetString =
          Obj.magic
        and vscode_SnippetString_to_js : vscode_SnippetString -> Ojs.t =
          Obj.magic
        and vscode_SourceBreakpoint_of_js : Ojs.t -> vscode_SourceBreakpoint
          = Obj.magic
        and vscode_SourceBreakpoint_to_js : vscode_SourceBreakpoint -> Ojs.t
          = Obj.magic
        and vscode_SourceControl_of_js : Ojs.t -> vscode_SourceControl =
          Obj.magic
        and vscode_SourceControl_to_js : vscode_SourceControl -> Ojs.t =
          Obj.magic
        and vscode_SourceControlInputBox_of_js :
          Ojs.t -> vscode_SourceControlInputBox = Obj.magic
        and vscode_SourceControlInputBox_to_js :
          vscode_SourceControlInputBox -> Ojs.t = Obj.magic
        and vscode_SourceControlResourceDecorations_of_js :
          Ojs.t -> vscode_SourceControlResourceDecorations = Obj.magic
        and vscode_SourceControlResourceDecorations_to_js :
          vscode_SourceControlResourceDecorations -> Ojs.t = Obj.magic
        and vscode_SourceControlResourceGroup_of_js :
          Ojs.t -> vscode_SourceControlResourceGroup = Obj.magic
        and vscode_SourceControlResourceGroup_to_js :
          vscode_SourceControlResourceGroup -> Ojs.t = Obj.magic
        and vscode_SourceControlResourceState_of_js :
          Ojs.t -> vscode_SourceControlResourceState = Obj.magic
        and vscode_SourceControlResourceState_to_js :
          vscode_SourceControlResourceState -> Ojs.t = Obj.magic
        and vscode_SourceControlResourceThemableDecorations_of_js :
          Ojs.t -> vscode_SourceControlResourceThemableDecorations =
          Obj.magic
        and vscode_SourceControlResourceThemableDecorations_to_js :
          vscode_SourceControlResourceThemableDecorations -> Ojs.t =
          Obj.magic
        and vscode_StatusBarAlignment_of_js :
          Ojs.t -> vscode_StatusBarAlignment =
          fun (x459 : Ojs.t) ->
            let x460 = x459 in
            match Ojs.int_of_js x460 with
            | 1 -> `Left
            | 2 -> `Right
            | _ -> assert false
        and vscode_StatusBarAlignment_to_js :
          vscode_StatusBarAlignment -> Ojs.t =
          fun (x458 : [ `Left  | `Right ]) ->
            match x458 with
            | `Left -> Ojs.int_to_js 1
            | `Right -> Ojs.int_to_js 2
        and vscode_StatusBarAlignment_Left_of_js :
          Ojs.t -> vscode_StatusBarAlignment_Left =
          fun (x462 : Ojs.t) ->
            let x463 = x462 in
            match Ojs.int_of_js x463 with | 1 -> `Left | _ -> assert false
        and vscode_StatusBarAlignment_Left_to_js :
          vscode_StatusBarAlignment_Left -> Ojs.t =
          fun (x461 : [ `Left ]) ->
            match x461 with | `Left -> Ojs.int_to_js 1
        and vscode_StatusBarAlignment_Right_of_js :
          Ojs.t -> vscode_StatusBarAlignment_Right =
          fun (x465 : Ojs.t) ->
            let x466 = x465 in
            match Ojs.int_of_js x466 with | 2 -> `Right | _ -> assert false
        and vscode_StatusBarAlignment_Right_to_js :
          vscode_StatusBarAlignment_Right -> Ojs.t =
          fun (x464 : [ `Right ]) ->
            match x464 with | `Right -> Ojs.int_to_js 2
        and vscode_StatusBarItem_of_js : Ojs.t -> vscode_StatusBarItem =
          Obj.magic
        and vscode_StatusBarItem_to_js : vscode_StatusBarItem -> Ojs.t =
          Obj.magic
        and vscode_SymbolInformation_of_js :
          Ojs.t -> vscode_SymbolInformation = Obj.magic
        and vscode_SymbolInformation_to_js :
          vscode_SymbolInformation -> Ojs.t = Obj.magic
        and vscode_SymbolKind_of_js : Ojs.t -> vscode_SymbolKind =
          fun (x468 : Ojs.t) ->
            let x469 = x468 in
            match Ojs.int_of_js x469 with
            | 0 -> `File
            | 1 -> `Module
            | 2 -> `Namespace
            | 3 -> `Package
            | 4 -> `Class
            | 5 -> `Method
            | 6 -> `Property
            | 7 -> `Field
            | 8 -> `Constructor
            | 9 -> `Enum
            | 10 -> `Interface
            | 11 -> `Function
            | 12 -> `Variable
            | 13 -> `Constant
            | 14 -> `String
            | 15 -> `Number
            | 16 -> `Boolean
            | 17 -> `Array
            | 18 -> `Object
            | 19 -> `Key
            | 20 -> `Null
            | 21 -> `EnumMember
            | 22 -> `Struct
            | 23 -> `Event
            | 24 -> `Operator
            | 25 -> `TypeParameter
            | _ -> assert false
        and vscode_SymbolKind_to_js : vscode_SymbolKind -> Ojs.t =
          fun
            (x467 :
              [ `File  | `Module  | `Namespace  | `Package  | `Class 
              | `Method  | `Property  | `Field  | `Constructor  | `Enum 
              | `Interface  | `Function  | `Variable  | `Constant  | 
                `String 
              | `Number  | `Boolean  | `Array  | `Object  | `Key  | `Null 
              | `EnumMember  | `Struct  | `Event  | `Operator 
              | `TypeParameter ])
            ->
            match x467 with
            | `File -> Ojs.int_to_js 0
            | `Module -> Ojs.int_to_js 1
            | `Namespace -> Ojs.int_to_js 2
            | `Package -> Ojs.int_to_js 3
            | `Class -> Ojs.int_to_js 4
            | `Method -> Ojs.int_to_js 5
            | `Property -> Ojs.int_to_js 6
            | `Field -> Ojs.int_to_js 7
            | `Constructor -> Ojs.int_to_js 8
            | `Enum -> Ojs.int_to_js 9
            | `Interface -> Ojs.int_to_js 10
            | `Function -> Ojs.int_to_js 11
            | `Variable -> Ojs.int_to_js 12
            | `Constant -> Ojs.int_to_js 13
            | `String -> Ojs.int_to_js 14
            | `Number -> Ojs.int_to_js 15
            | `Boolean -> Ojs.int_to_js 16
            | `Array -> Ojs.int_to_js 17
            | `Object -> Ojs.int_to_js 18
            | `Key -> Ojs.int_to_js 19
            | `Null -> Ojs.int_to_js 20
            | `EnumMember -> Ojs.int_to_js 21
            | `Struct -> Ojs.int_to_js 22
            | `Event -> Ojs.int_to_js 23
            | `Operator -> Ojs.int_to_js 24
            | `TypeParameter -> Ojs.int_to_js 25
        and vscode_SymbolKind_File_of_js : Ojs.t -> vscode_SymbolKind_File =
          fun (x471 : Ojs.t) ->
            let x472 = x471 in
            match Ojs.int_of_js x472 with | 0 -> `File | _ -> assert false
        and vscode_SymbolKind_File_to_js : vscode_SymbolKind_File -> Ojs.t =
          fun (x470 : [ `File ]) ->
            match x470 with | `File -> Ojs.int_to_js 0
        and vscode_SymbolKind_Module_of_js :
          Ojs.t -> vscode_SymbolKind_Module =
          fun (x474 : Ojs.t) ->
            let x475 = x474 in
            match Ojs.int_of_js x475 with | 1 -> `Module | _ -> assert false
        and vscode_SymbolKind_Module_to_js :
          vscode_SymbolKind_Module -> Ojs.t =
          fun (x473 : [ `Module ]) ->
            match x473 with | `Module -> Ojs.int_to_js 1
        and vscode_SymbolKind_Namespace_of_js :
          Ojs.t -> vscode_SymbolKind_Namespace =
          fun (x477 : Ojs.t) ->
            let x478 = x477 in
            match Ojs.int_of_js x478 with
            | 2 -> `Namespace
            | _ -> assert false
        and vscode_SymbolKind_Namespace_to_js :
          vscode_SymbolKind_Namespace -> Ojs.t =
          fun (x476 : [ `Namespace ]) ->
            match x476 with | `Namespace -> Ojs.int_to_js 2
        and vscode_SymbolKind_Package_of_js :
          Ojs.t -> vscode_SymbolKind_Package =
          fun (x480 : Ojs.t) ->
            let x481 = x480 in
            match Ojs.int_of_js x481 with | 3 -> `Package | _ -> assert false
        and vscode_SymbolKind_Package_to_js :
          vscode_SymbolKind_Package -> Ojs.t =
          fun (x479 : [ `Package ]) ->
            match x479 with | `Package -> Ojs.int_to_js 3
        and vscode_SymbolKind_Class_of_js : Ojs.t -> vscode_SymbolKind_Class
          =
          fun (x483 : Ojs.t) ->
            let x484 = x483 in
            match Ojs.int_of_js x484 with | 4 -> `Class | _ -> assert false
        and vscode_SymbolKind_Class_to_js : vscode_SymbolKind_Class -> Ojs.t
          =
          fun (x482 : [ `Class ]) ->
            match x482 with | `Class -> Ojs.int_to_js 4
        and vscode_SymbolKind_Method_of_js :
          Ojs.t -> vscode_SymbolKind_Method =
          fun (x486 : Ojs.t) ->
            let x487 = x486 in
            match Ojs.int_of_js x487 with | 5 -> `Method | _ -> assert false
        and vscode_SymbolKind_Method_to_js :
          vscode_SymbolKind_Method -> Ojs.t =
          fun (x485 : [ `Method ]) ->
            match x485 with | `Method -> Ojs.int_to_js 5
        and vscode_SymbolKind_Property_of_js :
          Ojs.t -> vscode_SymbolKind_Property =
          fun (x489 : Ojs.t) ->
            let x490 = x489 in
            match Ojs.int_of_js x490 with
            | 6 -> `Property
            | _ -> assert false
        and vscode_SymbolKind_Property_to_js :
          vscode_SymbolKind_Property -> Ojs.t =
          fun (x488 : [ `Property ]) ->
            match x488 with | `Property -> Ojs.int_to_js 6
        and vscode_SymbolKind_Field_of_js : Ojs.t -> vscode_SymbolKind_Field
          =
          fun (x492 : Ojs.t) ->
            let x493 = x492 in
            match Ojs.int_of_js x493 with | 7 -> `Field | _ -> assert false
        and vscode_SymbolKind_Field_to_js : vscode_SymbolKind_Field -> Ojs.t
          =
          fun (x491 : [ `Field ]) ->
            match x491 with | `Field -> Ojs.int_to_js 7
        and vscode_SymbolKind_Constructor_of_js :
          Ojs.t -> vscode_SymbolKind_Constructor =
          fun (x495 : Ojs.t) ->
            let x496 = x495 in
            match Ojs.int_of_js x496 with
            | 8 -> `Constructor
            | _ -> assert false
        and vscode_SymbolKind_Constructor_to_js :
          vscode_SymbolKind_Constructor -> Ojs.t =
          fun (x494 : [ `Constructor ]) ->
            match x494 with | `Constructor -> Ojs.int_to_js 8
        and vscode_SymbolKind_Enum_of_js : Ojs.t -> vscode_SymbolKind_Enum =
          fun (x498 : Ojs.t) ->
            let x499 = x498 in
            match Ojs.int_of_js x499 with | 9 -> `Enum | _ -> assert false
        and vscode_SymbolKind_Enum_to_js : vscode_SymbolKind_Enum -> Ojs.t =
          fun (x497 : [ `Enum ]) ->
            match x497 with | `Enum -> Ojs.int_to_js 9
        and vscode_SymbolKind_Interface_of_js :
          Ojs.t -> vscode_SymbolKind_Interface =
          fun (x501 : Ojs.t) ->
            let x502 = x501 in
            match Ojs.int_of_js x502 with
            | 10 -> `Interface
            | _ -> assert false
        and vscode_SymbolKind_Interface_to_js :
          vscode_SymbolKind_Interface -> Ojs.t =
          fun (x500 : [ `Interface ]) ->
            match x500 with | `Interface -> Ojs.int_to_js 10
        and vscode_SymbolKind_Function_of_js :
          Ojs.t -> vscode_SymbolKind_Function =
          fun (x504 : Ojs.t) ->
            let x505 = x504 in
            match Ojs.int_of_js x505 with
            | 11 -> `Function
            | _ -> assert false
        and vscode_SymbolKind_Function_to_js :
          vscode_SymbolKind_Function -> Ojs.t =
          fun (x503 : [ `Function ]) ->
            match x503 with | `Function -> Ojs.int_to_js 11
        and vscode_SymbolKind_Variable_of_js :
          Ojs.t -> vscode_SymbolKind_Variable =
          fun (x507 : Ojs.t) ->
            let x508 = x507 in
            match Ojs.int_of_js x508 with
            | 12 -> `Variable
            | _ -> assert false
        and vscode_SymbolKind_Variable_to_js :
          vscode_SymbolKind_Variable -> Ojs.t =
          fun (x506 : [ `Variable ]) ->
            match x506 with | `Variable -> Ojs.int_to_js 12
        and vscode_SymbolKind_Constant_of_js :
          Ojs.t -> vscode_SymbolKind_Constant =
          fun (x510 : Ojs.t) ->
            let x511 = x510 in
            match Ojs.int_of_js x511 with
            | 13 -> `Constant
            | _ -> assert false
        and vscode_SymbolKind_Constant_to_js :
          vscode_SymbolKind_Constant -> Ojs.t =
          fun (x509 : [ `Constant ]) ->
            match x509 with | `Constant -> Ojs.int_to_js 13
        and vscode_SymbolKind_String_of_js :
          Ojs.t -> vscode_SymbolKind_String =
          fun (x513 : Ojs.t) ->
            let x514 = x513 in
            match Ojs.int_of_js x514 with | 14 -> `String | _ -> assert false
        and vscode_SymbolKind_String_to_js :
          vscode_SymbolKind_String -> Ojs.t =
          fun (x512 : [ `String ]) ->
            match x512 with | `String -> Ojs.int_to_js 14
        and vscode_SymbolKind_Number_of_js :
          Ojs.t -> vscode_SymbolKind_Number =
          fun (x516 : Ojs.t) ->
            let x517 = x516 in
            match Ojs.int_of_js x517 with | 15 -> `Number | _ -> assert false
        and vscode_SymbolKind_Number_to_js :
          vscode_SymbolKind_Number -> Ojs.t =
          fun (x515 : [ `Number ]) ->
            match x515 with | `Number -> Ojs.int_to_js 15
        and vscode_SymbolKind_Boolean_of_js :
          Ojs.t -> vscode_SymbolKind_Boolean =
          fun (x519 : Ojs.t) ->
            let x520 = x519 in
            match Ojs.int_of_js x520 with
            | 16 -> `Boolean
            | _ -> assert false
        and vscode_SymbolKind_Boolean_to_js :
          vscode_SymbolKind_Boolean -> Ojs.t =
          fun (x518 : [ `Boolean ]) ->
            match x518 with | `Boolean -> Ojs.int_to_js 16
        and vscode_SymbolKind_Array_of_js : Ojs.t -> vscode_SymbolKind_Array
          =
          fun (x522 : Ojs.t) ->
            let x523 = x522 in
            match Ojs.int_of_js x523 with | 17 -> `Array | _ -> assert false
        and vscode_SymbolKind_Array_to_js : vscode_SymbolKind_Array -> Ojs.t
          =
          fun (x521 : [ `Array ]) ->
            match x521 with | `Array -> Ojs.int_to_js 17
        and vscode_SymbolKind_Object_of_js :
          Ojs.t -> vscode_SymbolKind_Object =
          fun (x525 : Ojs.t) ->
            let x526 = x525 in
            match Ojs.int_of_js x526 with | 18 -> `Object | _ -> assert false
        and vscode_SymbolKind_Object_to_js :
          vscode_SymbolKind_Object -> Ojs.t =
          fun (x524 : [ `Object ]) ->
            match x524 with | `Object -> Ojs.int_to_js 18
        and vscode_SymbolKind_Key_of_js : Ojs.t -> vscode_SymbolKind_Key =
          fun (x528 : Ojs.t) ->
            let x529 = x528 in
            match Ojs.int_of_js x529 with | 19 -> `Key | _ -> assert false
        and vscode_SymbolKind_Key_to_js : vscode_SymbolKind_Key -> Ojs.t =
          fun (x527 : [ `Key ]) -> match x527 with | `Key -> Ojs.int_to_js 19
        and vscode_SymbolKind_Null_of_js : Ojs.t -> vscode_SymbolKind_Null =
          fun (x531 : Ojs.t) ->
            let x532 = x531 in
            match Ojs.int_of_js x532 with | 20 -> `Null | _ -> assert false
        and vscode_SymbolKind_Null_to_js : vscode_SymbolKind_Null -> Ojs.t =
          fun (x530 : [ `Null ]) ->
            match x530 with | `Null -> Ojs.int_to_js 20
        and vscode_SymbolKind_EnumMember_of_js :
          Ojs.t -> vscode_SymbolKind_EnumMember =
          fun (x534 : Ojs.t) ->
            let x535 = x534 in
            match Ojs.int_of_js x535 with
            | 21 -> `EnumMember
            | _ -> assert false
        and vscode_SymbolKind_EnumMember_to_js :
          vscode_SymbolKind_EnumMember -> Ojs.t =
          fun (x533 : [ `EnumMember ]) ->
            match x533 with | `EnumMember -> Ojs.int_to_js 21
        and vscode_SymbolKind_Struct_of_js :
          Ojs.t -> vscode_SymbolKind_Struct =
          fun (x537 : Ojs.t) ->
            let x538 = x537 in
            match Ojs.int_of_js x538 with | 22 -> `Struct | _ -> assert false
        and vscode_SymbolKind_Struct_to_js :
          vscode_SymbolKind_Struct -> Ojs.t =
          fun (x536 : [ `Struct ]) ->
            match x536 with | `Struct -> Ojs.int_to_js 22
        and vscode_SymbolKind_Event_of_js : Ojs.t -> vscode_SymbolKind_Event
          =
          fun (x540 : Ojs.t) ->
            let x541 = x540 in
            match Ojs.int_of_js x541 with | 23 -> `Event | _ -> assert false
        and vscode_SymbolKind_Event_to_js : vscode_SymbolKind_Event -> Ojs.t
          =
          fun (x539 : [ `Event ]) ->
            match x539 with | `Event -> Ojs.int_to_js 23
        and vscode_SymbolKind_Operator_of_js :
          Ojs.t -> vscode_SymbolKind_Operator =
          fun (x543 : Ojs.t) ->
            let x544 = x543 in
            match Ojs.int_of_js x544 with
            | 24 -> `Operator
            | _ -> assert false
        and vscode_SymbolKind_Operator_to_js :
          vscode_SymbolKind_Operator -> Ojs.t =
          fun (x542 : [ `Operator ]) ->
            match x542 with | `Operator -> Ojs.int_to_js 24
        and vscode_SymbolKind_TypeParameter_of_js :
          Ojs.t -> vscode_SymbolKind_TypeParameter =
          fun (x546 : Ojs.t) ->
            let x547 = x546 in
            match Ojs.int_of_js x547 with
            | 25 -> `TypeParameter
            | _ -> assert false
        and vscode_SymbolKind_TypeParameter_to_js :
          vscode_SymbolKind_TypeParameter -> Ojs.t =
          fun (x545 : [ `TypeParameter ]) ->
            match x545 with | `TypeParameter -> Ojs.int_to_js 25
        and vscode_SymbolTag_of_js : Ojs.t -> vscode_SymbolTag =
          fun (x549 : Ojs.t) ->
            let x550 = x549 in
            match Ojs.int_of_js x550 with
            | 1 -> `Deprecated
            | _ -> assert false
        and vscode_SymbolTag_to_js : vscode_SymbolTag -> Ojs.t =
          fun (x548 : [ `Deprecated ]) ->
            match x548 with | `Deprecated -> Ojs.int_to_js 1
        and vscode_SymbolTag_Deprecated_of_js :
          Ojs.t -> vscode_SymbolTag_Deprecated =
          fun (x552 : Ojs.t) ->
            let x553 = x552 in
            match Ojs.int_of_js x553 with
            | 1 -> `Deprecated
            | _ -> assert false
        and vscode_SymbolTag_Deprecated_to_js :
          vscode_SymbolTag_Deprecated -> Ojs.t =
          fun (x551 : [ `Deprecated ]) ->
            match x551 with | `Deprecated -> Ojs.int_to_js 1
        and vscode_Task_of_js : Ojs.t -> vscode_Task = Obj.magic
        and vscode_Task_to_js : vscode_Task -> Ojs.t = Obj.magic
        and vscode_TaskDefinition_of_js : Ojs.t -> vscode_TaskDefinition =
          Obj.magic
        and vscode_TaskDefinition_to_js : vscode_TaskDefinition -> Ojs.t =
          Obj.magic
        and vscode_TaskEndEvent_of_js : Ojs.t -> vscode_TaskEndEvent =
          Obj.magic
        and vscode_TaskEndEvent_to_js : vscode_TaskEndEvent -> Ojs.t =
          Obj.magic
        and vscode_TaskExecution_of_js : Ojs.t -> vscode_TaskExecution =
          Obj.magic
        and vscode_TaskExecution_to_js : vscode_TaskExecution -> Ojs.t =
          Obj.magic
        and vscode_TaskFilter_of_js : Ojs.t -> vscode_TaskFilter = Obj.magic
        and vscode_TaskFilter_to_js : vscode_TaskFilter -> Ojs.t = Obj.magic
        and vscode_TaskGroup_of_js : Ojs.t -> vscode_TaskGroup = Obj.magic
        and vscode_TaskGroup_to_js : vscode_TaskGroup -> Ojs.t = Obj.magic
        and vscode_TaskPanelKind_of_js : Ojs.t -> vscode_TaskPanelKind =
          fun (x555 : Ojs.t) ->
            let x556 = x555 in
            match Ojs.int_of_js x556 with
            | 1 -> `Shared
            | 2 -> `Dedicated
            | 3 -> `New
            | _ -> assert false
        and vscode_TaskPanelKind_to_js : vscode_TaskPanelKind -> Ojs.t =
          fun (x554 : [ `Shared  | `Dedicated  | `New ]) ->
            match x554 with
            | `Shared -> Ojs.int_to_js 1
            | `Dedicated -> Ojs.int_to_js 2
            | `New -> Ojs.int_to_js 3
        and vscode_TaskPanelKind_Shared_of_js :
          Ojs.t -> vscode_TaskPanelKind_Shared =
          fun (x558 : Ojs.t) ->
            let x559 = x558 in
            match Ojs.int_of_js x559 with | 1 -> `Shared | _ -> assert false
        and vscode_TaskPanelKind_Shared_to_js :
          vscode_TaskPanelKind_Shared -> Ojs.t =
          fun (x557 : [ `Shared ]) ->
            match x557 with | `Shared -> Ojs.int_to_js 1
        and vscode_TaskPanelKind_Dedicated_of_js :
          Ojs.t -> vscode_TaskPanelKind_Dedicated =
          fun (x561 : Ojs.t) ->
            let x562 = x561 in
            match Ojs.int_of_js x562 with
            | 2 -> `Dedicated
            | _ -> assert false
        and vscode_TaskPanelKind_Dedicated_to_js :
          vscode_TaskPanelKind_Dedicated -> Ojs.t =
          fun (x560 : [ `Dedicated ]) ->
            match x560 with | `Dedicated -> Ojs.int_to_js 2
        and vscode_TaskPanelKind_New_of_js :
          Ojs.t -> vscode_TaskPanelKind_New =
          fun (x564 : Ojs.t) ->
            let x565 = x564 in
            match Ojs.int_of_js x565 with | 3 -> `New | _ -> assert false
        and vscode_TaskPanelKind_New_to_js :
          vscode_TaskPanelKind_New -> Ojs.t =
          fun (x563 : [ `New ]) -> match x563 with | `New -> Ojs.int_to_js 3
        and vscode_TaskPresentationOptions_of_js :
          Ojs.t -> vscode_TaskPresentationOptions = Obj.magic
        and vscode_TaskPresentationOptions_to_js :
          vscode_TaskPresentationOptions -> Ojs.t = Obj.magic
        and vscode_TaskProcessEndEvent_of_js :
          Ojs.t -> vscode_TaskProcessEndEvent = Obj.magic
        and vscode_TaskProcessEndEvent_to_js :
          vscode_TaskProcessEndEvent -> Ojs.t = Obj.magic
        and vscode_TaskProcessStartEvent_of_js :
          Ojs.t -> vscode_TaskProcessStartEvent = Obj.magic
        and vscode_TaskProcessStartEvent_to_js :
          vscode_TaskProcessStartEvent -> Ojs.t = Obj.magic
        and vscode_TaskProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TaskProvider =
          fun _T -> Obj.magic
        and vscode_TaskProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_TaskProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_TaskRevealKind_of_js : Ojs.t -> vscode_TaskRevealKind =
          fun (x567 : Ojs.t) ->
            let x568 = x567 in
            match Ojs.int_of_js x568 with
            | 1 -> `Always
            | 2 -> `Silent
            | 3 -> `Never
            | _ -> assert false
        and vscode_TaskRevealKind_to_js : vscode_TaskRevealKind -> Ojs.t =
          fun (x566 : [ `Always  | `Silent  | `Never ]) ->
            match x566 with
            | `Always -> Ojs.int_to_js 1
            | `Silent -> Ojs.int_to_js 2
            | `Never -> Ojs.int_to_js 3
        and vscode_TaskRevealKind_Always_of_js :
          Ojs.t -> vscode_TaskRevealKind_Always =
          fun (x570 : Ojs.t) ->
            let x571 = x570 in
            match Ojs.int_of_js x571 with | 1 -> `Always | _ -> assert false
        and vscode_TaskRevealKind_Always_to_js :
          vscode_TaskRevealKind_Always -> Ojs.t =
          fun (x569 : [ `Always ]) ->
            match x569 with | `Always -> Ojs.int_to_js 1
        and vscode_TaskRevealKind_Silent_of_js :
          Ojs.t -> vscode_TaskRevealKind_Silent =
          fun (x573 : Ojs.t) ->
            let x574 = x573 in
            match Ojs.int_of_js x574 with | 2 -> `Silent | _ -> assert false
        and vscode_TaskRevealKind_Silent_to_js :
          vscode_TaskRevealKind_Silent -> Ojs.t =
          fun (x572 : [ `Silent ]) ->
            match x572 with | `Silent -> Ojs.int_to_js 2
        and vscode_TaskRevealKind_Never_of_js :
          Ojs.t -> vscode_TaskRevealKind_Never =
          fun (x576 : Ojs.t) ->
            let x577 = x576 in
            match Ojs.int_of_js x577 with | 3 -> `Never | _ -> assert false
        and vscode_TaskRevealKind_Never_to_js :
          vscode_TaskRevealKind_Never -> Ojs.t =
          fun (x575 : [ `Never ]) ->
            match x575 with | `Never -> Ojs.int_to_js 3
        and vscode_TaskScope_of_js : Ojs.t -> vscode_TaskScope =
          fun (x579 : Ojs.t) ->
            let x580 = x579 in
            match Ojs.int_of_js x580 with
            | 1 -> `Global
            | 2 -> `Workspace
            | _ -> assert false
        and vscode_TaskScope_to_js : vscode_TaskScope -> Ojs.t =
          fun (x578 : [ `Global  | `Workspace ]) ->
            match x578 with
            | `Global -> Ojs.int_to_js 1
            | `Workspace -> Ojs.int_to_js 2
        and vscode_TaskScope_Global_of_js : Ojs.t -> vscode_TaskScope_Global
          =
          fun (x582 : Ojs.t) ->
            let x583 = x582 in
            match Ojs.int_of_js x583 with | 1 -> `Global | _ -> assert false
        and vscode_TaskScope_Global_to_js : vscode_TaskScope_Global -> Ojs.t
          =
          fun (x581 : [ `Global ]) ->
            match x581 with | `Global -> Ojs.int_to_js 1
        and vscode_TaskScope_Workspace_of_js :
          Ojs.t -> vscode_TaskScope_Workspace =
          fun (x585 : Ojs.t) ->
            let x586 = x585 in
            match Ojs.int_of_js x586 with
            | 2 -> `Workspace
            | _ -> assert false
        and vscode_TaskScope_Workspace_to_js :
          vscode_TaskScope_Workspace -> Ojs.t =
          fun (x584 : [ `Workspace ]) ->
            match x584 with | `Workspace -> Ojs.int_to_js 2
        and vscode_TaskStartEvent_of_js : Ojs.t -> vscode_TaskStartEvent =
          Obj.magic
        and vscode_TaskStartEvent_to_js : vscode_TaskStartEvent -> Ojs.t =
          Obj.magic
        and vscode_Terminal_of_js : Ojs.t -> vscode_Terminal = Obj.magic
        and vscode_Terminal_to_js : vscode_Terminal -> Ojs.t = Obj.magic
        and vscode_TerminalDimensions_of_js :
          Ojs.t -> vscode_TerminalDimensions = Obj.magic
        and vscode_TerminalDimensions_to_js :
          vscode_TerminalDimensions -> Ojs.t = Obj.magic
        and vscode_TerminalExitStatus_of_js :
          Ojs.t -> vscode_TerminalExitStatus = Obj.magic
        and vscode_TerminalExitStatus_to_js :
          vscode_TerminalExitStatus -> Ojs.t = Obj.magic
        and vscode_TerminalLink_of_js : Ojs.t -> vscode_TerminalLink =
          Obj.magic
        and vscode_TerminalLink_to_js : vscode_TerminalLink -> Ojs.t =
          Obj.magic
        and vscode_TerminalLinkContext_of_js :
          Ojs.t -> vscode_TerminalLinkContext = Obj.magic
        and vscode_TerminalLinkContext_to_js :
          vscode_TerminalLinkContext -> Ojs.t = Obj.magic
        and vscode_TerminalLinkProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TerminalLinkProvider =
          fun _T -> Obj.magic
        and vscode_TerminalLinkProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_TerminalLinkProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_TerminalOptions_of_js : Ojs.t -> vscode_TerminalOptions =
          Obj.magic
        and vscode_TerminalOptions_to_js : vscode_TerminalOptions -> Ojs.t =
          Obj.magic
        and vscode_TextDocument_of_js : Ojs.t -> vscode_TextDocument =
          Obj.magic
        and vscode_TextDocument_to_js : vscode_TextDocument -> Ojs.t =
          Obj.magic
        and vscode_TextDocumentChangeEvent_of_js :
          Ojs.t -> vscode_TextDocumentChangeEvent = Obj.magic
        and vscode_TextDocumentChangeEvent_to_js :
          vscode_TextDocumentChangeEvent -> Ojs.t = Obj.magic
        and vscode_TextDocumentContentChangeEvent_of_js :
          Ojs.t -> vscode_TextDocumentContentChangeEvent = Obj.magic
        and vscode_TextDocumentContentChangeEvent_to_js :
          vscode_TextDocumentContentChangeEvent -> Ojs.t = Obj.magic
        and vscode_TextDocumentContentProvider_of_js :
          Ojs.t -> vscode_TextDocumentContentProvider = Obj.magic
        and vscode_TextDocumentContentProvider_to_js :
          vscode_TextDocumentContentProvider -> Ojs.t = Obj.magic
        and vscode_TextDocumentSaveReason_of_js :
          Ojs.t -> vscode_TextDocumentSaveReason =
          fun (x588 : Ojs.t) ->
            let x589 = x588 in
            match Ojs.int_of_js x589 with
            | 1 -> `Manual
            | 2 -> `AfterDelay
            | 3 -> `FocusOut
            | _ -> assert false
        and vscode_TextDocumentSaveReason_to_js :
          vscode_TextDocumentSaveReason -> Ojs.t =
          fun (x587 : [ `Manual  | `AfterDelay  | `FocusOut ]) ->
            match x587 with
            | `Manual -> Ojs.int_to_js 1
            | `AfterDelay -> Ojs.int_to_js 2
            | `FocusOut -> Ojs.int_to_js 3
        and vscode_TextDocumentSaveReason_Manual_of_js :
          Ojs.t -> vscode_TextDocumentSaveReason_Manual =
          fun (x591 : Ojs.t) ->
            let x592 = x591 in
            match Ojs.int_of_js x592 with | 1 -> `Manual | _ -> assert false
        and vscode_TextDocumentSaveReason_Manual_to_js :
          vscode_TextDocumentSaveReason_Manual -> Ojs.t =
          fun (x590 : [ `Manual ]) ->
            match x590 with | `Manual -> Ojs.int_to_js 1
        and vscode_TextDocumentSaveReason_AfterDelay_of_js :
          Ojs.t -> vscode_TextDocumentSaveReason_AfterDelay =
          fun (x594 : Ojs.t) ->
            let x595 = x594 in
            match Ojs.int_of_js x595 with
            | 2 -> `AfterDelay
            | _ -> assert false
        and vscode_TextDocumentSaveReason_AfterDelay_to_js :
          vscode_TextDocumentSaveReason_AfterDelay -> Ojs.t =
          fun (x593 : [ `AfterDelay ]) ->
            match x593 with | `AfterDelay -> Ojs.int_to_js 2
        and vscode_TextDocumentSaveReason_FocusOut_of_js :
          Ojs.t -> vscode_TextDocumentSaveReason_FocusOut =
          fun (x597 : Ojs.t) ->
            let x598 = x597 in
            match Ojs.int_of_js x598 with
            | 3 -> `FocusOut
            | _ -> assert false
        and vscode_TextDocumentSaveReason_FocusOut_to_js :
          vscode_TextDocumentSaveReason_FocusOut -> Ojs.t =
          fun (x596 : [ `FocusOut ]) ->
            match x596 with | `FocusOut -> Ojs.int_to_js 3
        and vscode_TextDocumentShowOptions_of_js :
          Ojs.t -> vscode_TextDocumentShowOptions = Obj.magic
        and vscode_TextDocumentShowOptions_to_js :
          vscode_TextDocumentShowOptions -> Ojs.t = Obj.magic
        and vscode_TextDocumentWillSaveEvent_of_js :
          Ojs.t -> vscode_TextDocumentWillSaveEvent = Obj.magic
        and vscode_TextDocumentWillSaveEvent_to_js :
          vscode_TextDocumentWillSaveEvent -> Ojs.t = Obj.magic
        and vscode_TextEdit_of_js : Ojs.t -> vscode_TextEdit = Obj.magic
        and vscode_TextEdit_to_js : vscode_TextEdit -> Ojs.t = Obj.magic
        and vscode_TextEditor_of_js : Ojs.t -> vscode_TextEditor = Obj.magic
        and vscode_TextEditor_to_js : vscode_TextEditor -> Ojs.t = Obj.magic
        and vscode_TextEditorCursorStyle_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle =
          fun (x600 : Ojs.t) ->
            let x601 = x600 in
            match Ojs.int_of_js x601 with
            | 1 -> `Line
            | 2 -> `Block
            | 3 -> `Underline
            | 4 -> `LineThin
            | 5 -> `BlockOutline
            | 6 -> `UnderlineThin
            | _ -> assert false
        and vscode_TextEditorCursorStyle_to_js :
          vscode_TextEditorCursorStyle -> Ojs.t =
          fun
            (x599 :
              [ `Line  | `Block  | `Underline  | `LineThin  | `BlockOutline 
              | `UnderlineThin ])
            ->
            match x599 with
            | `Line -> Ojs.int_to_js 1
            | `Block -> Ojs.int_to_js 2
            | `Underline -> Ojs.int_to_js 3
            | `LineThin -> Ojs.int_to_js 4
            | `BlockOutline -> Ojs.int_to_js 5
            | `UnderlineThin -> Ojs.int_to_js 6
        and vscode_TextEditorCursorStyle_Line_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle_Line =
          fun (x603 : Ojs.t) ->
            let x604 = x603 in
            match Ojs.int_of_js x604 with | 1 -> `Line | _ -> assert false
        and vscode_TextEditorCursorStyle_Line_to_js :
          vscode_TextEditorCursorStyle_Line -> Ojs.t =
          fun (x602 : [ `Line ]) ->
            match x602 with | `Line -> Ojs.int_to_js 1
        and vscode_TextEditorCursorStyle_Block_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle_Block =
          fun (x606 : Ojs.t) ->
            let x607 = x606 in
            match Ojs.int_of_js x607 with | 2 -> `Block | _ -> assert false
        and vscode_TextEditorCursorStyle_Block_to_js :
          vscode_TextEditorCursorStyle_Block -> Ojs.t =
          fun (x605 : [ `Block ]) ->
            match x605 with | `Block -> Ojs.int_to_js 2
        and vscode_TextEditorCursorStyle_Underline_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle_Underline =
          fun (x609 : Ojs.t) ->
            let x610 = x609 in
            match Ojs.int_of_js x610 with
            | 3 -> `Underline
            | _ -> assert false
        and vscode_TextEditorCursorStyle_Underline_to_js :
          vscode_TextEditorCursorStyle_Underline -> Ojs.t =
          fun (x608 : [ `Underline ]) ->
            match x608 with | `Underline -> Ojs.int_to_js 3
        and vscode_TextEditorCursorStyle_LineThin_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle_LineThin =
          fun (x612 : Ojs.t) ->
            let x613 = x612 in
            match Ojs.int_of_js x613 with
            | 4 -> `LineThin
            | _ -> assert false
        and vscode_TextEditorCursorStyle_LineThin_to_js :
          vscode_TextEditorCursorStyle_LineThin -> Ojs.t =
          fun (x611 : [ `LineThin ]) ->
            match x611 with | `LineThin -> Ojs.int_to_js 4
        and vscode_TextEditorCursorStyle_BlockOutline_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle_BlockOutline =
          fun (x615 : Ojs.t) ->
            let x616 = x615 in
            match Ojs.int_of_js x616 with
            | 5 -> `BlockOutline
            | _ -> assert false
        and vscode_TextEditorCursorStyle_BlockOutline_to_js :
          vscode_TextEditorCursorStyle_BlockOutline -> Ojs.t =
          fun (x614 : [ `BlockOutline ]) ->
            match x614 with | `BlockOutline -> Ojs.int_to_js 5
        and vscode_TextEditorCursorStyle_UnderlineThin_of_js :
          Ojs.t -> vscode_TextEditorCursorStyle_UnderlineThin =
          fun (x618 : Ojs.t) ->
            let x619 = x618 in
            match Ojs.int_of_js x619 with
            | 6 -> `UnderlineThin
            | _ -> assert false
        and vscode_TextEditorCursorStyle_UnderlineThin_to_js :
          vscode_TextEditorCursorStyle_UnderlineThin -> Ojs.t =
          fun (x617 : [ `UnderlineThin ]) ->
            match x617 with | `UnderlineThin -> Ojs.int_to_js 6
        and vscode_TextEditorDecorationType_of_js :
          Ojs.t -> vscode_TextEditorDecorationType = Obj.magic
        and vscode_TextEditorDecorationType_to_js :
          vscode_TextEditorDecorationType -> Ojs.t = Obj.magic
        and vscode_TextEditorEdit_of_js : Ojs.t -> vscode_TextEditorEdit =
          Obj.magic
        and vscode_TextEditorEdit_to_js : vscode_TextEditorEdit -> Ojs.t =
          Obj.magic
        and vscode_TextEditorLineNumbersStyle_of_js :
          Ojs.t -> vscode_TextEditorLineNumbersStyle =
          fun (x621 : Ojs.t) ->
            let x622 = x621 in
            match Ojs.int_of_js x622 with
            | 0 -> `Off
            | 1 -> `On
            | 2 -> `Relative
            | _ -> assert false
        and vscode_TextEditorLineNumbersStyle_to_js :
          vscode_TextEditorLineNumbersStyle -> Ojs.t =
          fun (x620 : [ `Off  | `On  | `Relative ]) ->
            match x620 with
            | `Off -> Ojs.int_to_js 0
            | `On -> Ojs.int_to_js 1
            | `Relative -> Ojs.int_to_js 2
        and vscode_TextEditorLineNumbersStyle_Off_of_js :
          Ojs.t -> vscode_TextEditorLineNumbersStyle_Off =
          fun (x624 : Ojs.t) ->
            let x625 = x624 in
            match Ojs.int_of_js x625 with | 0 -> `Off | _ -> assert false
        and vscode_TextEditorLineNumbersStyle_Off_to_js :
          vscode_TextEditorLineNumbersStyle_Off -> Ojs.t =
          fun (x623 : [ `Off ]) -> match x623 with | `Off -> Ojs.int_to_js 0
        and vscode_TextEditorLineNumbersStyle_On_of_js :
          Ojs.t -> vscode_TextEditorLineNumbersStyle_On =
          fun (x627 : Ojs.t) ->
            let x628 = x627 in
            match Ojs.int_of_js x628 with | 1 -> `On | _ -> assert false
        and vscode_TextEditorLineNumbersStyle_On_to_js :
          vscode_TextEditorLineNumbersStyle_On -> Ojs.t =
          fun (x626 : [ `On ]) -> match x626 with | `On -> Ojs.int_to_js 1
        and vscode_TextEditorLineNumbersStyle_Relative_of_js :
          Ojs.t -> vscode_TextEditorLineNumbersStyle_Relative =
          fun (x630 : Ojs.t) ->
            let x631 = x630 in
            match Ojs.int_of_js x631 with
            | 2 -> `Relative
            | _ -> assert false
        and vscode_TextEditorLineNumbersStyle_Relative_to_js :
          vscode_TextEditorLineNumbersStyle_Relative -> Ojs.t =
          fun (x629 : [ `Relative ]) ->
            match x629 with | `Relative -> Ojs.int_to_js 2
        and vscode_TextEditorOptions_of_js :
          Ojs.t -> vscode_TextEditorOptions = Obj.magic
        and vscode_TextEditorOptions_to_js :
          vscode_TextEditorOptions -> Ojs.t = Obj.magic
        and vscode_TextEditorOptionsChangeEvent_of_js :
          Ojs.t -> vscode_TextEditorOptionsChangeEvent = Obj.magic
        and vscode_TextEditorOptionsChangeEvent_to_js :
          vscode_TextEditorOptionsChangeEvent -> Ojs.t = Obj.magic
        and vscode_TextEditorRevealType_of_js :
          Ojs.t -> vscode_TextEditorRevealType =
          fun (x633 : Ojs.t) ->
            let x634 = x633 in
            match Ojs.int_of_js x634 with
            | 0 -> `Default
            | 1 -> `InCenter
            | 2 -> `InCenterIfOutsideViewport
            | 3 -> `AtTop
            | _ -> assert false
        and vscode_TextEditorRevealType_to_js :
          vscode_TextEditorRevealType -> Ojs.t =
          fun
            (x632 :
              [ `Default  | `InCenter  | `InCenterIfOutsideViewport 
              | `AtTop ])
            ->
            match x632 with
            | `Default -> Ojs.int_to_js 0
            | `InCenter -> Ojs.int_to_js 1
            | `InCenterIfOutsideViewport -> Ojs.int_to_js 2
            | `AtTop -> Ojs.int_to_js 3
        and vscode_TextEditorRevealType_Default_of_js :
          Ojs.t -> vscode_TextEditorRevealType_Default =
          fun (x636 : Ojs.t) ->
            let x637 = x636 in
            match Ojs.int_of_js x637 with | 0 -> `Default | _ -> assert false
        and vscode_TextEditorRevealType_Default_to_js :
          vscode_TextEditorRevealType_Default -> Ojs.t =
          fun (x635 : [ `Default ]) ->
            match x635 with | `Default -> Ojs.int_to_js 0
        and vscode_TextEditorRevealType_InCenter_of_js :
          Ojs.t -> vscode_TextEditorRevealType_InCenter =
          fun (x639 : Ojs.t) ->
            let x640 = x639 in
            match Ojs.int_of_js x640 with
            | 1 -> `InCenter
            | _ -> assert false
        and vscode_TextEditorRevealType_InCenter_to_js :
          vscode_TextEditorRevealType_InCenter -> Ojs.t =
          fun (x638 : [ `InCenter ]) ->
            match x638 with | `InCenter -> Ojs.int_to_js 1
        and vscode_TextEditorRevealType_InCenterIfOutsideViewport_of_js :
          Ojs.t -> vscode_TextEditorRevealType_InCenterIfOutsideViewport =
          fun (x642 : Ojs.t) ->
            let x643 = x642 in
            match Ojs.int_of_js x643 with
            | 2 -> `InCenterIfOutsideViewport
            | _ -> assert false
        and vscode_TextEditorRevealType_InCenterIfOutsideViewport_to_js :
          vscode_TextEditorRevealType_InCenterIfOutsideViewport -> Ojs.t =
          fun (x641 : [ `InCenterIfOutsideViewport ]) ->
            match x641 with | `InCenterIfOutsideViewport -> Ojs.int_to_js 2
        and vscode_TextEditorRevealType_AtTop_of_js :
          Ojs.t -> vscode_TextEditorRevealType_AtTop =
          fun (x645 : Ojs.t) ->
            let x646 = x645 in
            match Ojs.int_of_js x646 with | 3 -> `AtTop | _ -> assert false
        and vscode_TextEditorRevealType_AtTop_to_js :
          vscode_TextEditorRevealType_AtTop -> Ojs.t =
          fun (x644 : [ `AtTop ]) ->
            match x644 with | `AtTop -> Ojs.int_to_js 3
        and vscode_TextEditorSelectionChangeEvent_of_js :
          Ojs.t -> vscode_TextEditorSelectionChangeEvent = Obj.magic
        and vscode_TextEditorSelectionChangeEvent_to_js :
          vscode_TextEditorSelectionChangeEvent -> Ojs.t = Obj.magic
        and vscode_TextEditorSelectionChangeKind_of_js :
          Ojs.t -> vscode_TextEditorSelectionChangeKind =
          fun (x648 : Ojs.t) ->
            let x649 = x648 in
            match Ojs.int_of_js x649 with
            | 1 -> `Keyboard
            | 2 -> `Mouse
            | 3 -> `Command
            | _ -> assert false
        and vscode_TextEditorSelectionChangeKind_to_js :
          vscode_TextEditorSelectionChangeKind -> Ojs.t =
          fun (x647 : [ `Keyboard  | `Mouse  | `Command ]) ->
            match x647 with
            | `Keyboard -> Ojs.int_to_js 1
            | `Mouse -> Ojs.int_to_js 2
            | `Command -> Ojs.int_to_js 3
        and vscode_TextEditorSelectionChangeKind_Keyboard_of_js :
          Ojs.t -> vscode_TextEditorSelectionChangeKind_Keyboard =
          fun (x651 : Ojs.t) ->
            let x652 = x651 in
            match Ojs.int_of_js x652 with
            | 1 -> `Keyboard
            | _ -> assert false
        and vscode_TextEditorSelectionChangeKind_Keyboard_to_js :
          vscode_TextEditorSelectionChangeKind_Keyboard -> Ojs.t =
          fun (x650 : [ `Keyboard ]) ->
            match x650 with | `Keyboard -> Ojs.int_to_js 1
        and vscode_TextEditorSelectionChangeKind_Mouse_of_js :
          Ojs.t -> vscode_TextEditorSelectionChangeKind_Mouse =
          fun (x654 : Ojs.t) ->
            let x655 = x654 in
            match Ojs.int_of_js x655 with | 2 -> `Mouse | _ -> assert false
        and vscode_TextEditorSelectionChangeKind_Mouse_to_js :
          vscode_TextEditorSelectionChangeKind_Mouse -> Ojs.t =
          fun (x653 : [ `Mouse ]) ->
            match x653 with | `Mouse -> Ojs.int_to_js 2
        and vscode_TextEditorSelectionChangeKind_Command_of_js :
          Ojs.t -> vscode_TextEditorSelectionChangeKind_Command =
          fun (x657 : Ojs.t) ->
            let x658 = x657 in
            match Ojs.int_of_js x658 with | 3 -> `Command | _ -> assert false
        and vscode_TextEditorSelectionChangeKind_Command_to_js :
          vscode_TextEditorSelectionChangeKind_Command -> Ojs.t =
          fun (x656 : [ `Command ]) ->
            match x656 with | `Command -> Ojs.int_to_js 3
        and vscode_TextEditorViewColumnChangeEvent_of_js :
          Ojs.t -> vscode_TextEditorViewColumnChangeEvent = Obj.magic
        and vscode_TextEditorViewColumnChangeEvent_to_js :
          vscode_TextEditorViewColumnChangeEvent -> Ojs.t = Obj.magic
        and vscode_TextEditorVisibleRangesChangeEvent_of_js :
          Ojs.t -> vscode_TextEditorVisibleRangesChangeEvent = Obj.magic
        and vscode_TextEditorVisibleRangesChangeEvent_to_js :
          vscode_TextEditorVisibleRangesChangeEvent -> Ojs.t = Obj.magic
        and vscode_TextLine_of_js : Ojs.t -> vscode_TextLine = Obj.magic
        and vscode_TextLine_to_js : vscode_TextLine -> Ojs.t = Obj.magic
        and vscode_ThemableDecorationAttachmentRenderOptions_of_js :
          Ojs.t -> vscode_ThemableDecorationAttachmentRenderOptions =
          Obj.magic
        and vscode_ThemableDecorationAttachmentRenderOptions_to_js :
          vscode_ThemableDecorationAttachmentRenderOptions -> Ojs.t =
          Obj.magic
        and vscode_ThemableDecorationInstanceRenderOptions_of_js :
          Ojs.t -> vscode_ThemableDecorationInstanceRenderOptions = Obj.magic
        and vscode_ThemableDecorationInstanceRenderOptions_to_js :
          vscode_ThemableDecorationInstanceRenderOptions -> Ojs.t = Obj.magic
        and vscode_ThemableDecorationRenderOptions_of_js :
          Ojs.t -> vscode_ThemableDecorationRenderOptions = Obj.magic
        and vscode_ThemableDecorationRenderOptions_to_js :
          vscode_ThemableDecorationRenderOptions -> Ojs.t = Obj.magic
        and vscode_ThemeColor_of_js : Ojs.t -> vscode_ThemeColor = Obj.magic
        and vscode_ThemeColor_to_js : vscode_ThemeColor -> Ojs.t = Obj.magic
        and vscode_ThemeIcon_of_js : Ojs.t -> vscode_ThemeIcon = Obj.magic
        and vscode_ThemeIcon_to_js : vscode_ThemeIcon -> Ojs.t = Obj.magic
        and vscode_TreeDataProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TreeDataProvider =
          fun _T -> Obj.magic
        and vscode_TreeDataProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_TreeDataProvider -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_TreeItem_of_js : Ojs.t -> vscode_TreeItem = Obj.magic
        and vscode_TreeItem_to_js : vscode_TreeItem -> Ojs.t = Obj.magic
        and vscode_TreeItemCollapsibleState_of_js :
          Ojs.t -> vscode_TreeItemCollapsibleState =
          fun (x660 : Ojs.t) ->
            let x661 = x660 in
            match Ojs.int_of_js x661 with
            | 0 -> `None
            | 1 -> `Collapsed
            | 2 -> `Expanded
            | _ -> assert false
        and vscode_TreeItemCollapsibleState_to_js :
          vscode_TreeItemCollapsibleState -> Ojs.t =
          fun (x659 : [ `None  | `Collapsed  | `Expanded ]) ->
            match x659 with
            | `None -> Ojs.int_to_js 0
            | `Collapsed -> Ojs.int_to_js 1
            | `Expanded -> Ojs.int_to_js 2
        and vscode_TreeItemCollapsibleState_None_of_js :
          Ojs.t -> vscode_TreeItemCollapsibleState_None =
          fun (x663 : Ojs.t) ->
            let x664 = x663 in
            match Ojs.int_of_js x664 with | 0 -> `None | _ -> assert false
        and vscode_TreeItemCollapsibleState_None_to_js :
          vscode_TreeItemCollapsibleState_None -> Ojs.t =
          fun (x662 : [ `None ]) ->
            match x662 with | `None -> Ojs.int_to_js 0
        and vscode_TreeItemCollapsibleState_Collapsed_of_js :
          Ojs.t -> vscode_TreeItemCollapsibleState_Collapsed =
          fun (x666 : Ojs.t) ->
            let x667 = x666 in
            match Ojs.int_of_js x667 with
            | 1 -> `Collapsed
            | _ -> assert false
        and vscode_TreeItemCollapsibleState_Collapsed_to_js :
          vscode_TreeItemCollapsibleState_Collapsed -> Ojs.t =
          fun (x665 : [ `Collapsed ]) ->
            match x665 with | `Collapsed -> Ojs.int_to_js 1
        and vscode_TreeItemCollapsibleState_Expanded_of_js :
          Ojs.t -> vscode_TreeItemCollapsibleState_Expanded =
          fun (x669 : Ojs.t) ->
            let x670 = x669 in
            match Ojs.int_of_js x670 with
            | 2 -> `Expanded
            | _ -> assert false
        and vscode_TreeItemCollapsibleState_Expanded_to_js :
          vscode_TreeItemCollapsibleState_Expanded -> Ojs.t =
          fun (x668 : [ `Expanded ]) ->
            match x668 with | `Expanded -> Ojs.int_to_js 2
        and vscode_TreeItemLabel_of_js : Ojs.t -> vscode_TreeItemLabel =
          Obj.magic
        and vscode_TreeItemLabel_to_js : vscode_TreeItemLabel -> Ojs.t =
          Obj.magic
        and vscode_TreeView_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TreeView =
          fun _T -> Obj.magic
        and vscode_TreeView_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_TreeView -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_TreeViewExpansionEvent_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TreeViewExpansionEvent =
          fun _T -> Obj.magic
        and vscode_TreeViewExpansionEvent_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_TreeViewExpansionEvent -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_TreeViewOptions_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TreeViewOptions =
          fun _T -> Obj.magic
        and vscode_TreeViewOptions_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_TreeViewOptions -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_TreeViewSelectionChangeEvent_of_js :
          'T .
            (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_TreeViewSelectionChangeEvent
          = fun _T -> Obj.magic
        and vscode_TreeViewSelectionChangeEvent_to_js :
          'T .
            ('T -> Ojs.t) -> 'T vscode_TreeViewSelectionChangeEvent -> Ojs.t
          = fun _T -> Obj.magic
        and vscode_TreeViewVisibilityChangeEvent_of_js :
          Ojs.t -> vscode_TreeViewVisibilityChangeEvent = Obj.magic
        and vscode_TreeViewVisibilityChangeEvent_to_js :
          vscode_TreeViewVisibilityChangeEvent -> Ojs.t = Obj.magic
        and vscode_TypeDefinitionProvider_of_js :
          Ojs.t -> vscode_TypeDefinitionProvider = Obj.magic
        and vscode_TypeDefinitionProvider_to_js :
          vscode_TypeDefinitionProvider -> Ojs.t = Obj.magic
        and vscode_UIKind_of_js : Ojs.t -> vscode_UIKind =
          fun (x672 : Ojs.t) ->
            let x673 = x672 in
            match Ojs.int_of_js x673 with
            | 1 -> `Desktop
            | 2 -> `Web
            | _ -> assert false
        and vscode_UIKind_to_js : vscode_UIKind -> Ojs.t =
          fun (x671 : [ `Desktop  | `Web ]) ->
            match x671 with
            | `Desktop -> Ojs.int_to_js 1
            | `Web -> Ojs.int_to_js 2
        and vscode_UIKind_Desktop_of_js : Ojs.t -> vscode_UIKind_Desktop =
          fun (x675 : Ojs.t) ->
            let x676 = x675 in
            match Ojs.int_of_js x676 with | 1 -> `Desktop | _ -> assert false
        and vscode_UIKind_Desktop_to_js : vscode_UIKind_Desktop -> Ojs.t =
          fun (x674 : [ `Desktop ]) ->
            match x674 with | `Desktop -> Ojs.int_to_js 1
        and vscode_UIKind_Web_of_js : Ojs.t -> vscode_UIKind_Web =
          fun (x678 : Ojs.t) ->
            let x679 = x678 in
            match Ojs.int_of_js x679 with | 2 -> `Web | _ -> assert false
        and vscode_UIKind_Web_to_js : vscode_UIKind_Web -> Ojs.t =
          fun (x677 : [ `Web ]) -> match x677 with | `Web -> Ojs.int_to_js 2
        and vscode_Uri_of_js : Ojs.t -> vscode_Uri = Obj.magic
        and vscode_Uri_to_js : vscode_Uri -> Ojs.t = Obj.magic
        and vscode_UriHandler_of_js : Ojs.t -> vscode_UriHandler = Obj.magic
        and vscode_UriHandler_to_js : vscode_UriHandler -> Ojs.t = Obj.magic
        and vscode_ViewColumn_of_js : Ojs.t -> vscode_ViewColumn =
          fun (x681 : Ojs.t) ->
            let x682 = x681 in
            match Ojs.int_of_js x682 with
            | (-1) -> `Active
            | (-2) -> `Beside
            | 1 -> `One
            | 2 -> `Two
            | 3 -> `Three
            | 4 -> `Four
            | 5 -> `Five
            | 6 -> `Six
            | 7 -> `Seven
            | 8 -> `Eight
            | 9 -> `Nine
            | _ -> assert false
        and vscode_ViewColumn_to_js : vscode_ViewColumn -> Ojs.t =
          fun
            (x680 :
              [ `Active  | `Beside  | `One  | `Two  | `Three  | `Four 
              | `Five  | `Six  | `Seven  | `Eight  | `Nine ])
            ->
            match x680 with
            | `Active -> Ojs.int_to_js (-1)
            | `Beside -> Ojs.int_to_js (-2)
            | `One -> Ojs.int_to_js 1
            | `Two -> Ojs.int_to_js 2
            | `Three -> Ojs.int_to_js 3
            | `Four -> Ojs.int_to_js 4
            | `Five -> Ojs.int_to_js 5
            | `Six -> Ojs.int_to_js 6
            | `Seven -> Ojs.int_to_js 7
            | `Eight -> Ojs.int_to_js 8
            | `Nine -> Ojs.int_to_js 9
        and vscode_ViewColumn_Active_of_js :
          Ojs.t -> vscode_ViewColumn_Active =
          fun (x684 : Ojs.t) ->
            let x685 = x684 in
            match Ojs.int_of_js x685 with
            | (-1) -> `Active
            | _ -> assert false
        and vscode_ViewColumn_Active_to_js :
          vscode_ViewColumn_Active -> Ojs.t =
          fun (x683 : [ `Active ]) ->
            match x683 with | `Active -> Ojs.int_to_js (-1)
        and vscode_ViewColumn_Beside_of_js :
          Ojs.t -> vscode_ViewColumn_Beside =
          fun (x687 : Ojs.t) ->
            let x688 = x687 in
            match Ojs.int_of_js x688 with
            | (-2) -> `Beside
            | _ -> assert false
        and vscode_ViewColumn_Beside_to_js :
          vscode_ViewColumn_Beside -> Ojs.t =
          fun (x686 : [ `Beside ]) ->
            match x686 with | `Beside -> Ojs.int_to_js (-2)
        and vscode_ViewColumn_One_of_js : Ojs.t -> vscode_ViewColumn_One =
          fun (x690 : Ojs.t) ->
            let x691 = x690 in
            match Ojs.int_of_js x691 with | 1 -> `One | _ -> assert false
        and vscode_ViewColumn_One_to_js : vscode_ViewColumn_One -> Ojs.t =
          fun (x689 : [ `One ]) -> match x689 with | `One -> Ojs.int_to_js 1
        and vscode_ViewColumn_Two_of_js : Ojs.t -> vscode_ViewColumn_Two =
          fun (x693 : Ojs.t) ->
            let x694 = x693 in
            match Ojs.int_of_js x694 with | 2 -> `Two | _ -> assert false
        and vscode_ViewColumn_Two_to_js : vscode_ViewColumn_Two -> Ojs.t =
          fun (x692 : [ `Two ]) -> match x692 with | `Two -> Ojs.int_to_js 2
        and vscode_ViewColumn_Three_of_js : Ojs.t -> vscode_ViewColumn_Three
          =
          fun (x696 : Ojs.t) ->
            let x697 = x696 in
            match Ojs.int_of_js x697 with | 3 -> `Three | _ -> assert false
        and vscode_ViewColumn_Three_to_js : vscode_ViewColumn_Three -> Ojs.t
          =
          fun (x695 : [ `Three ]) ->
            match x695 with | `Three -> Ojs.int_to_js 3
        and vscode_ViewColumn_Four_of_js : Ojs.t -> vscode_ViewColumn_Four =
          fun (x699 : Ojs.t) ->
            let x700 = x699 in
            match Ojs.int_of_js x700 with | 4 -> `Four | _ -> assert false
        and vscode_ViewColumn_Four_to_js : vscode_ViewColumn_Four -> Ojs.t =
          fun (x698 : [ `Four ]) ->
            match x698 with | `Four -> Ojs.int_to_js 4
        and vscode_ViewColumn_Five_of_js : Ojs.t -> vscode_ViewColumn_Five =
          fun (x702 : Ojs.t) ->
            let x703 = x702 in
            match Ojs.int_of_js x703 with | 5 -> `Five | _ -> assert false
        and vscode_ViewColumn_Five_to_js : vscode_ViewColumn_Five -> Ojs.t =
          fun (x701 : [ `Five ]) ->
            match x701 with | `Five -> Ojs.int_to_js 5
        and vscode_ViewColumn_Six_of_js : Ojs.t -> vscode_ViewColumn_Six =
          fun (x705 : Ojs.t) ->
            let x706 = x705 in
            match Ojs.int_of_js x706 with | 6 -> `Six | _ -> assert false
        and vscode_ViewColumn_Six_to_js : vscode_ViewColumn_Six -> Ojs.t =
          fun (x704 : [ `Six ]) -> match x704 with | `Six -> Ojs.int_to_js 6
        and vscode_ViewColumn_Seven_of_js : Ojs.t -> vscode_ViewColumn_Seven
          =
          fun (x708 : Ojs.t) ->
            let x709 = x708 in
            match Ojs.int_of_js x709 with | 7 -> `Seven | _ -> assert false
        and vscode_ViewColumn_Seven_to_js : vscode_ViewColumn_Seven -> Ojs.t
          =
          fun (x707 : [ `Seven ]) ->
            match x707 with | `Seven -> Ojs.int_to_js 7
        and vscode_ViewColumn_Eight_of_js : Ojs.t -> vscode_ViewColumn_Eight
          =
          fun (x711 : Ojs.t) ->
            let x712 = x711 in
            match Ojs.int_of_js x712 with | 8 -> `Eight | _ -> assert false
        and vscode_ViewColumn_Eight_to_js : vscode_ViewColumn_Eight -> Ojs.t
          =
          fun (x710 : [ `Eight ]) ->
            match x710 with | `Eight -> Ojs.int_to_js 8
        and vscode_ViewColumn_Nine_of_js : Ojs.t -> vscode_ViewColumn_Nine =
          fun (x714 : Ojs.t) ->
            let x715 = x714 in
            match Ojs.int_of_js x715 with | 9 -> `Nine | _ -> assert false
        and vscode_ViewColumn_Nine_to_js : vscode_ViewColumn_Nine -> Ojs.t =
          fun (x713 : [ `Nine ]) ->
            match x713 with | `Nine -> Ojs.int_to_js 9
        and vscode_Webview_of_js : Ojs.t -> vscode_Webview = Obj.magic
        and vscode_Webview_to_js : vscode_Webview -> Ojs.t = Obj.magic
        and vscode_WebviewOptions_of_js : Ojs.t -> vscode_WebviewOptions =
          Obj.magic
        and vscode_WebviewOptions_to_js : vscode_WebviewOptions -> Ojs.t =
          Obj.magic
        and vscode_WebviewPanel_of_js : Ojs.t -> vscode_WebviewPanel =
          Obj.magic
        and vscode_WebviewPanel_to_js : vscode_WebviewPanel -> Ojs.t =
          Obj.magic
        and vscode_WebviewPanelOnDidChangeViewStateEvent_of_js :
          Ojs.t -> vscode_WebviewPanelOnDidChangeViewStateEvent = Obj.magic
        and vscode_WebviewPanelOnDidChangeViewStateEvent_to_js :
          vscode_WebviewPanelOnDidChangeViewStateEvent -> Ojs.t = Obj.magic
        and vscode_WebviewPanelOptions_of_js :
          Ojs.t -> vscode_WebviewPanelOptions = Obj.magic
        and vscode_WebviewPanelOptions_to_js :
          vscode_WebviewPanelOptions -> Ojs.t = Obj.magic
        and vscode_WebviewPanelSerializer_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_WebviewPanelSerializer =
          fun _T -> Obj.magic
        and vscode_WebviewPanelSerializer_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_WebviewPanelSerializer -> Ojs.t =
          fun _T -> Obj.magic
        and vscode_WebviewPortMapping_of_js :
          Ojs.t -> vscode_WebviewPortMapping = Obj.magic
        and vscode_WebviewPortMapping_to_js :
          vscode_WebviewPortMapping -> Ojs.t = Obj.magic
        and vscode_WebviewView_of_js : Ojs.t -> vscode_WebviewView =
          Obj.magic
        and vscode_WebviewView_to_js : vscode_WebviewView -> Ojs.t =
          Obj.magic
        and vscode_WebviewViewProvider_of_js :
          Ojs.t -> vscode_WebviewViewProvider = Obj.magic
        and vscode_WebviewViewProvider_to_js :
          vscode_WebviewViewProvider -> Ojs.t = Obj.magic
        and vscode_WebviewViewResolveContext_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_WebviewViewResolveContext
          = fun _T -> Obj.magic
        and vscode_WebviewViewResolveContext_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_WebviewViewResolveContext -> Ojs.t
          = fun _T -> Obj.magic
        and vscode_WindowState_of_js : Ojs.t -> vscode_WindowState =
          Obj.magic
        and vscode_WindowState_to_js : vscode_WindowState -> Ojs.t =
          Obj.magic
        and vscode_WorkspaceConfiguration_of_js :
          Ojs.t -> vscode_WorkspaceConfiguration = Obj.magic
        and vscode_WorkspaceConfiguration_to_js :
          vscode_WorkspaceConfiguration -> Ojs.t = Obj.magic
        and vscode_WorkspaceEdit_of_js : Ojs.t -> vscode_WorkspaceEdit =
          Obj.magic
        and vscode_WorkspaceEdit_to_js : vscode_WorkspaceEdit -> Ojs.t =
          Obj.magic
        and vscode_WorkspaceEditEntryMetadata_of_js :
          Ojs.t -> vscode_WorkspaceEditEntryMetadata = Obj.magic
        and vscode_WorkspaceEditEntryMetadata_to_js :
          vscode_WorkspaceEditEntryMetadata -> Ojs.t = Obj.magic
        and vscode_WorkspaceFolder_of_js : Ojs.t -> vscode_WorkspaceFolder =
          Obj.magic
        and vscode_WorkspaceFolder_to_js : vscode_WorkspaceFolder -> Ojs.t =
          Obj.magic
        and vscode_WorkspaceFolderPickOptions_of_js :
          Ojs.t -> vscode_WorkspaceFolderPickOptions = Obj.magic
        and vscode_WorkspaceFolderPickOptions_to_js :
          vscode_WorkspaceFolderPickOptions -> Ojs.t = Obj.magic
        and vscode_WorkspaceFoldersChangeEvent_of_js :
          Ojs.t -> vscode_WorkspaceFoldersChangeEvent = Obj.magic
        and vscode_WorkspaceFoldersChangeEvent_to_js :
          vscode_WorkspaceFoldersChangeEvent -> Ojs.t = Obj.magic
        and vscode_WorkspaceSymbolProvider_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T vscode_WorkspaceSymbolProvider =
          fun _T -> Obj.magic
        and vscode_WorkspaceSymbolProvider_to_js :
          'T . ('T -> Ojs.t) -> 'T vscode_WorkspaceSymbolProvider -> Ojs.t =
          fun _T -> Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
open Types
module AnonymousInterface0 =
  struct
    type t = anonymous_interface_0
    let rec t_of_js : Ojs.t -> t =
      fun (x717 : Ojs.t) -> anonymous_interface_0_of_js x717
    and t_to_js : t -> Ojs.t =
      fun (x716 : anonymous_interface_0) -> anonymous_interface_0_to_js x716
    let (get_autoClosingPairs : t -> anonymous_interface_20 list) =
      fun (x718 : t) ->
        Ojs.list_of_js anonymous_interface_20_of_js
          (Ojs.get_prop_ascii (t_to_js x718) "autoClosingPairs")
    let (set_autoClosingPairs : t -> anonymous_interface_20 list -> unit) =
      fun (x720 : t) ->
        fun (x721 : anonymous_interface_20 list) ->
          Ojs.set_prop_ascii (t_to_js x720) "autoClosingPairs"
            (Ojs.list_to_js anonymous_interface_20_to_js x721)
  end
module AnonymousInterface1 =
  struct
    type t = anonymous_interface_1
    let rec t_of_js : Ojs.t -> t =
      fun (x724 : Ojs.t) -> anonymous_interface_1_of_js x724
    and t_to_js : t -> Ojs.t =
      fun (x723 : anonymous_interface_1) -> anonymous_interface_1_to_js x723
    let (get_brackets : t -> any) =
      fun (x725 : t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js x725) "brackets")
    let (set_brackets : t -> any -> unit) =
      fun (x726 : t) ->
        fun (x727 : any) ->
          Ojs.set_prop_ascii (t_to_js x726) "brackets" (any_to_js x727)
    let (get_docComment : t -> anonymous_interface_31) =
      fun (x728 : t) ->
        anonymous_interface_31_of_js
          (Ojs.get_prop_ascii (t_to_js x728) "docComment")
    let (set_docComment : t -> anonymous_interface_31 -> unit) =
      fun (x729 : t) ->
        fun (x730 : anonymous_interface_31) ->
          Ojs.set_prop_ascii (t_to_js x729) "docComment"
            (anonymous_interface_31_to_js x730)
  end
module AnonymousInterface2 =
  struct
    type t = anonymous_interface_2
    let rec t_of_js : Ojs.t -> t =
      fun (x732 : Ojs.t) -> anonymous_interface_2_of_js x732
    and t_to_js : t -> Ojs.t =
      fun (x731 : anonymous_interface_2) -> anonymous_interface_2_to_js x731
    let (get_canPickMany : t -> [ `L_b_true ]) =
      fun (x733 : t) ->
        let x734 = Ojs.get_prop_ascii (t_to_js x733) "canPickMany" in
        match Ojs.bool_of_js x734 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_canPickMany : t -> [ `L_b_true ] -> unit) =
      fun (x735 : t) ->
        fun (x736 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x735) "canPickMany"
            (match x736 with | `L_b_true -> Ojs.string_to_js "LBTrue")
  end
module AnonymousInterface3 =
  struct
    type t = anonymous_interface_3
    let rec t_of_js : Ojs.t -> t =
      fun (x738 : Ojs.t) -> anonymous_interface_3_of_js x738
    and t_to_js : t -> Ojs.t =
      fun (x737 : anonymous_interface_3) -> anonymous_interface_3_to_js x737
    let (get_create : t -> bool) =
      fun (x739 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x739) "create")
    let (set_create : t -> bool -> unit) =
      fun (x740 : t) ->
        fun (x741 : bool) ->
          Ojs.set_prop_ascii (t_to_js x740) "create" (Ojs.bool_to_js x741)
    let (get_overwrite : t -> bool) =
      fun (x742 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x742) "overwrite")
    let (set_overwrite : t -> bool -> unit) =
      fun (x743 : t) ->
        fun (x744 : bool) ->
          Ojs.set_prop_ascii (t_to_js x743) "overwrite" (Ojs.bool_to_js x744)
  end
module AnonymousInterface4 =
  struct
    type t = anonymous_interface_4
    let rec t_of_js : Ojs.t -> t =
      fun (x746 : Ojs.t) -> anonymous_interface_4_of_js x746
    and t_to_js : t -> Ojs.t =
      fun (x745 : anonymous_interface_4) -> anonymous_interface_4_to_js x745
    let (get_createIfNone : t -> [ `L_b_true ]) =
      fun (x747 : t) ->
        let x748 = Ojs.get_prop_ascii (t_to_js x747) "createIfNone" in
        match Ojs.bool_of_js x748 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_createIfNone : t -> [ `L_b_true ] -> unit) =
      fun (x749 : t) ->
        fun (x750 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x749) "createIfNone"
            (match x750 with | `L_b_true -> Ojs.string_to_js "LBTrue")
  end
module AnonymousInterface5 =
  struct
    type t = anonymous_interface_5
    let rec t_of_js : Ojs.t -> t =
      fun (x752 : Ojs.t) -> anonymous_interface_5_of_js x752
    and t_to_js : t -> Ojs.t =
      fun (x751 : anonymous_interface_5) -> anonymous_interface_5_to_js x751
    let (dispose : t -> any) =
      fun (x753 : t) -> any_of_js (Ojs.call (t_to_js x753) "dispose" [||])
  end
module AnonymousInterface6 =
  struct
    type t = anonymous_interface_6
    let rec t_of_js : Ojs.t -> t =
      fun (x755 : Ojs.t) -> anonymous_interface_6_of_js x755
    and t_to_js : t -> Ojs.t =
      fun (x754 : anonymous_interface_6) -> anonymous_interface_6_to_js x754
    let (get_document : t -> vscode_TextDocument) =
      fun (x756 : t) ->
        vscode_TextDocument_of_js
          (Ojs.get_prop_ascii (t_to_js x756) "document")
    let (set_document : t -> vscode_TextDocument -> unit) =
      fun (x757 : t) ->
        fun (x758 : vscode_TextDocument) ->
          Ojs.set_prop_ascii (t_to_js x757) "document"
            (vscode_TextDocument_to_js x758)
    let (get_range : t -> vscode_Range) =
      fun (x759 : t) ->
        vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x759) "range")
    let (set_range : t -> vscode_Range -> unit) =
      fun (x760 : t) ->
        fun (x761 : vscode_Range) ->
          Ojs.set_prop_ascii (t_to_js x760) "range" (vscode_Range_to_js x761)
  end
module AnonymousInterface7 =
  struct
    type t = anonymous_interface_7
    let rec t_of_js : Ojs.t -> t =
      fun (x763 : Ojs.t) -> anonymous_interface_7_of_js x763
    and t_to_js : t -> Ojs.t =
      fun (x762 : anonymous_interface_7) -> anonymous_interface_7_to_js x762
    let (get_escapeChar : t -> string) =
      fun (x764 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x764) "escapeChar")
    let (set_escapeChar : t -> string -> unit) =
      fun (x765 : t) ->
        fun (x766 : string) ->
          Ojs.set_prop_ascii (t_to_js x765) "escapeChar"
            (Ojs.string_to_js x766)
    let (get_charsToEscape : t -> string) =
      fun (x767 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x767) "charsToEscape")
    let (set_charsToEscape : t -> string -> unit) =
      fun (x768 : t) ->
        fun (x769 : string) ->
          Ojs.set_prop_ascii (t_to_js x768) "charsToEscape"
            (Ojs.string_to_js x769)
  end
module AnonymousInterface8 =
  struct
    type t = anonymous_interface_8
    let rec t_of_js : Ojs.t -> t =
      fun (x771 : Ojs.t) -> anonymous_interface_8_of_js x771
    and t_to_js : t -> Ojs.t =
      fun (x770 : anonymous_interface_8) -> anonymous_interface_8_to_js x770
    let (get_inserting : t -> vscode_Range) =
      fun (x772 : t) ->
        vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x772) "inserting")
    let (set_inserting : t -> vscode_Range -> unit) =
      fun (x773 : t) ->
        fun (x774 : vscode_Range) ->
          Ojs.set_prop_ascii (t_to_js x773) "inserting"
            (vscode_Range_to_js x774)
    let (get_replacing : t -> vscode_Range) =
      fun (x775 : t) ->
        vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x775) "replacing")
    let (set_replacing : t -> vscode_Range -> unit) =
      fun (x776 : t) ->
        fun (x777 : vscode_Range) ->
          Ojs.set_prop_ascii (t_to_js x776) "replacing"
            (vscode_Range_to_js x777)
  end
module AnonymousInterface9 =
  struct
    type t = anonymous_interface_9
    let rec t_of_js : Ojs.t -> t =
      fun (x779 : Ojs.t) -> anonymous_interface_9_of_js x779
    and t_to_js : t -> Ojs.t =
      fun (x778 : anonymous_interface_9) -> anonymous_interface_9_to_js x778
    let (get_isCaseSensitive : t -> bool) =
      fun (x780 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x780) "isCaseSensitive")
    let (get_isReadonly : t -> bool) =
      fun (x781 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x781) "isReadonly")
  end
module AnonymousInterface10 =
  struct
    type t = anonymous_interface_10
    let rec t_of_js : Ojs.t -> t =
      fun (x783 : Ojs.t) -> anonymous_interface_10_of_js x783
    and t_to_js : t -> Ojs.t =
      fun (x782 : anonymous_interface_10) ->
        anonymous_interface_10_to_js x782
    let (get_key : t -> string) =
      fun (x784 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x784) "key")
    let (set_key : t -> string -> unit) =
      fun (x785 : t) ->
        fun (x786 : string) ->
          Ojs.set_prop_ascii (t_to_js x785) "key" (Ojs.string_to_js x786)
    let (get_defaultValue : t -> 'T) =
      fun (x787 : t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js x787) "defaultValue")
    let (set_defaultValue : t -> 'T -> unit) =
      fun (x788 : t) ->
        fun (x789 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x788) "defaultValue" (Obj.magic x789)
    let (get_globalValue : t -> 'T) =
      fun (x790 : t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js x790) "globalValue")
    let (set_globalValue : t -> 'T -> unit) =
      fun (x791 : t) ->
        fun (x792 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x791) "globalValue" (Obj.magic x792)
    let (get_workspaceValue : t -> 'T) =
      fun (x793 : t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js x793) "workspaceValue")
    let (set_workspaceValue : t -> 'T -> unit) =
      fun (x794 : t) ->
        fun (x795 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x794) "workspaceValue" (Obj.magic x795)
    let (get_workspaceFolderValue : t -> 'T) =
      fun (x796 : t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js x796) "workspaceFolderValue")
    let (set_workspaceFolderValue : t -> 'T -> unit) =
      fun (x797 : t) ->
        fun (x798 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x797) "workspaceFolderValue"
            (Obj.magic x798)
    let (get_defaultLanguageValue : t -> 'T) =
      fun (x799 : t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js x799) "defaultLanguageValue")
    let (set_defaultLanguageValue : t -> 'T -> unit) =
      fun (x800 : t) ->
        fun (x801 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x800) "defaultLanguageValue"
            (Obj.magic x801)
    let (get_globalLanguageValue : t -> 'T) =
      fun (x802 : t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js x802) "globalLanguageValue")
    let (set_globalLanguageValue : t -> 'T -> unit) =
      fun (x803 : t) ->
        fun (x804 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x803) "globalLanguageValue"
            (Obj.magic x804)
    let (get_workspaceLanguageValue : t -> 'T) =
      fun (x805 : t) ->
        Obj.magic
          (Ojs.get_prop_ascii (t_to_js x805) "workspaceLanguageValue")
    let (set_workspaceLanguageValue : t -> 'T -> unit) =
      fun (x806 : t) ->
        fun (x807 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x806) "workspaceLanguageValue"
            (Obj.magic x807)
    let (get_workspaceFolderLanguageValue : t -> 'T) =
      fun (x808 : t) ->
        Obj.magic
          (Ojs.get_prop_ascii (t_to_js x808) "workspaceFolderLanguageValue")
    let (set_workspaceFolderLanguageValue : t -> 'T -> unit) =
      fun (x809 : t) ->
        fun (x810 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x809) "workspaceFolderLanguageValue"
            (Obj.magic x810)
    let (get_languageIds : t -> string list) =
      fun (x811 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x811) "languageIds")
    let (set_languageIds : t -> string list -> unit) =
      fun (x813 : t) ->
        fun (x814 : string list) ->
          Ojs.set_prop_ascii (t_to_js x813) "languageIds"
            (Ojs.list_to_js Ojs.string_to_js x814)
  end
module AnonymousInterface11 =
  struct
    type t = anonymous_interface_11
    let rec t_of_js : Ojs.t -> t =
      fun (x817 : Ojs.t) -> anonymous_interface_11_of_js x817
    and t_to_js : t -> Ojs.t =
      fun (x816 : anonymous_interface_11) ->
        anonymous_interface_11_to_js x816
    let (get_kind : t -> vscode_CodeActionKind) =
      fun (x818 : t) ->
        vscode_CodeActionKind_of_js
          (Ojs.get_prop_ascii (t_to_js x818) "kind")
    let (get_command : t -> vscode_Command) =
      fun (x819 : t) ->
        vscode_Command_of_js (Ojs.get_prop_ascii (t_to_js x819) "command")
  end
module AnonymousInterface12 =
  struct
    type t = anonymous_interface_12
    let rec t_of_js : Ojs.t -> t =
      fun (x821 : Ojs.t) -> anonymous_interface_12_of_js x821
    and t_to_js : t -> Ojs.t =
      fun (x820 : anonymous_interface_12) ->
        anonymous_interface_12_to_js x820
    let (get_language : t -> string) =
      fun (x822 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x822) "language")
    let (set_language : t -> string -> unit) =
      fun (x823 : t) ->
        fun (x824 : string) ->
          Ojs.set_prop_ascii (t_to_js x823) "language"
            (Ojs.string_to_js x824)
    let (get_content : t -> string) =
      fun (x825 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x825) "content")
    let (set_content : t -> string -> unit) =
      fun (x826 : t) ->
        fun (x827 : string) ->
          Ojs.set_prop_ascii (t_to_js x826) "content" (Ojs.string_to_js x827)
  end
module AnonymousInterface13 =
  struct
    type t = anonymous_interface_13
    let rec t_of_js : Ojs.t -> t =
      fun (x829 : Ojs.t) -> anonymous_interface_13_of_js x829
    and t_to_js : t -> Ojs.t =
      fun (x828 : anonymous_interface_13) ->
        anonymous_interface_13_to_js x828
    let (get_language : t -> string) =
      fun (x830 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x830) "language")
    let (set_language : t -> string -> unit) =
      fun (x831 : t) ->
        fun (x832 : string) ->
          Ojs.set_prop_ascii (t_to_js x831) "language"
            (Ojs.string_to_js x832)
    let (get_value : t -> string) =
      fun (x833 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x833) "value")
    let (set_value : t -> string -> unit) =
      fun (x834 : t) ->
        fun (x835 : string) ->
          Ojs.set_prop_ascii (t_to_js x834) "value" (Ojs.string_to_js x835)
  end
module AnonymousInterface14 =
  struct
    type t = anonymous_interface_14
    let rec t_of_js : Ojs.t -> t =
      fun (x837 : Ojs.t) -> anonymous_interface_14_of_js x837
    and t_to_js : t -> Ojs.t =
      fun (x836 : anonymous_interface_14) ->
        anonymous_interface_14_to_js x836
    let (get_light : t -> vscode_Uri) =
      fun (x838 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x838) "light")
    let (set_light : t -> vscode_Uri -> unit) =
      fun (x839 : t) ->
        fun (x840 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x839) "light" (vscode_Uri_to_js x840)
    let (get_dark : t -> vscode_Uri) =
      fun (x841 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x841) "dark")
    let (set_dark : t -> vscode_Uri -> unit) =
      fun (x842 : t) ->
        fun (x843 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x842) "dark" (vscode_Uri_to_js x843)
  end
module AnonymousInterface15 =
  struct
    type t = anonymous_interface_15
    let rec t_of_js : Ojs.t -> t =
      fun (x845 : Ojs.t) -> anonymous_interface_15_of_js x845
    and t_to_js : t -> Ojs.t =
      fun (x844 : anonymous_interface_15) ->
        anonymous_interface_15_to_js x844
    let (get_light : t -> vscode_Uri or_string) =
      fun (x846 : t) ->
        or_string_of_js vscode_Uri_of_js
          (Ojs.get_prop_ascii (t_to_js x846) "light")
    let (set_light : t -> vscode_Uri or_string -> unit) =
      fun (x848 : t) ->
        fun (x849 : vscode_Uri or_string) ->
          Ojs.set_prop_ascii (t_to_js x848) "light"
            (or_string_to_js vscode_Uri_to_js x849)
    let (get_dark : t -> vscode_Uri or_string) =
      fun (x851 : t) ->
        or_string_of_js vscode_Uri_of_js
          (Ojs.get_prop_ascii (t_to_js x851) "dark")
    let (set_dark : t -> vscode_Uri or_string -> unit) =
      fun (x853 : t) ->
        fun (x854 : vscode_Uri or_string) ->
          Ojs.set_prop_ascii (t_to_js x853) "dark"
            (or_string_to_js vscode_Uri_to_js x854)
  end
module AnonymousInterface16 =
  struct
    type t = anonymous_interface_16
    let rec t_of_js : Ojs.t -> t =
      fun (x857 : Ojs.t) -> anonymous_interface_16_of_js x857
    and t_to_js : t -> Ojs.t =
      fun (x856 : anonymous_interface_16) ->
        anonymous_interface_16_to_js x856
    let (get_line : t -> float) =
      fun (x858 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x858) "line")
    let (set_line : t -> float -> unit) =
      fun (x859 : t) ->
        fun (x860 : float) ->
          Ojs.set_prop_ascii (t_to_js x859) "line" (Ojs.float_to_js x860)
    let (get_character : t -> float) =
      fun (x861 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x861) "character")
    let (set_character : t -> float -> unit) =
      fun (x862 : t) ->
        fun (x863 : float) ->
          Ojs.set_prop_ascii (t_to_js x862) "character"
            (Ojs.float_to_js x863)
  end
module AnonymousInterface17 =
  struct
    type t = anonymous_interface_17
    let rec t_of_js : Ojs.t -> t =
      fun (x865 : Ojs.t) -> anonymous_interface_17_of_js x865
    and t_to_js : t -> Ojs.t =
      fun (x864 : anonymous_interface_17) ->
        anonymous_interface_17_to_js x864
    let (get_lineDelta : t -> float) =
      fun (x866 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x866) "lineDelta")
    let (set_lineDelta : t -> float -> unit) =
      fun (x867 : t) ->
        fun (x868 : float) ->
          Ojs.set_prop_ascii (t_to_js x867) "lineDelta"
            (Ojs.float_to_js x868)
    let (get_characterDelta : t -> float) =
      fun (x869 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x869) "characterDelta")
    let (set_characterDelta : t -> float -> unit) =
      fun (x870 : t) ->
        fun (x871 : float) ->
          Ojs.set_prop_ascii (t_to_js x870) "characterDelta"
            (Ojs.float_to_js x871)
  end
module AnonymousInterface18 =
  struct
    type t = anonymous_interface_18
    let rec t_of_js : Ojs.t -> t =
      fun (x873 : Ojs.t) -> anonymous_interface_18_of_js x873
    and t_to_js : t -> Ojs.t =
      fun (x872 : anonymous_interface_18) ->
        anonymous_interface_18_to_js x872
    let (get_message : t -> string) =
      fun (x874 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x874) "message")
    let (set_message : t -> string -> unit) =
      fun (x875 : t) ->
        fun (x876 : string) ->
          Ojs.set_prop_ascii (t_to_js x875) "message" (Ojs.string_to_js x876)
    let (get_increment : t -> float) =
      fun (x877 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x877) "increment")
    let (set_increment : t -> float -> unit) =
      fun (x878 : t) ->
        fun (x879 : float) ->
          Ojs.set_prop_ascii (t_to_js x878) "increment"
            (Ojs.float_to_js x879)
  end
module AnonymousInterface19 =
  struct
    type t = anonymous_interface_19
    let rec t_of_js : Ojs.t -> t =
      fun (x881 : Ojs.t) -> anonymous_interface_19_of_js x881
    and t_to_js : t -> Ojs.t =
      fun (x880 : anonymous_interface_19) ->
        anonymous_interface_19_to_js x880
    let (get_oldUri : t -> vscode_Uri) =
      fun (x882 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x882) "oldUri")
    let (set_oldUri : t -> vscode_Uri -> unit) =
      fun (x883 : t) ->
        fun (x884 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x883) "oldUri" (vscode_Uri_to_js x884)
    let (get_newUri : t -> vscode_Uri) =
      fun (x885 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x885) "newUri")
    let (set_newUri : t -> vscode_Uri -> unit) =
      fun (x886 : t) ->
        fun (x887 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x886) "newUri" (vscode_Uri_to_js x887)
  end
module AnonymousInterface20 =
  struct
    type t = anonymous_interface_20
    let rec t_of_js : Ojs.t -> t =
      fun (x889 : Ojs.t) -> anonymous_interface_20_of_js x889
    and t_to_js : t -> Ojs.t =
      fun (x888 : anonymous_interface_20) ->
        anonymous_interface_20_to_js x888
    let (get_open : t -> string) =
      fun (x890 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x890) "open")
    let (set_open : t -> string -> unit) =
      fun (x891 : t) ->
        fun (x892 : string) ->
          Ojs.set_prop_ascii (t_to_js x891) "open" (Ojs.string_to_js x892)
    let (get_close : t -> string) =
      fun (x893 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x893) "close")
    let (set_close : t -> string -> unit) =
      fun (x894 : t) ->
        fun (x895 : string) ->
          Ojs.set_prop_ascii (t_to_js x894) "close" (Ojs.string_to_js x895)
    let (get_notIn : t -> string list) =
      fun (x896 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x896) "notIn")
    let (set_notIn : t -> string list -> unit) =
      fun (x898 : t) ->
        fun (x899 : string list) ->
          Ojs.set_prop_ascii (t_to_js x898) "notIn"
            (Ojs.list_to_js Ojs.string_to_js x899)
  end
module AnonymousInterface21 =
  struct
    type t = anonymous_interface_21
    let rec t_of_js : Ojs.t -> t =
      fun (x902 : Ojs.t) -> anonymous_interface_21_of_js x902
    and t_to_js : t -> Ojs.t =
      fun (x901 : anonymous_interface_21) ->
        anonymous_interface_21_to_js x901
    let (get_overwrite : t -> bool) =
      fun (x903 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x903) "overwrite")
    let (set_overwrite : t -> bool -> unit) =
      fun (x904 : t) ->
        fun (x905 : bool) ->
          Ojs.set_prop_ascii (t_to_js x904) "overwrite" (Ojs.bool_to_js x905)
  end
module AnonymousInterface22 =
  struct
    type t = anonymous_interface_22
    let rec t_of_js : Ojs.t -> t =
      fun (x907 : Ojs.t) -> anonymous_interface_22_of_js x907
    and t_to_js : t -> Ojs.t =
      fun (x906 : anonymous_interface_22) ->
        anonymous_interface_22_to_js x906
    let (get_overwrite : t -> bool) =
      fun (x908 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x908) "overwrite")
    let (set_overwrite : t -> bool -> unit) =
      fun (x909 : t) ->
        fun (x910 : bool) ->
          Ojs.set_prop_ascii (t_to_js x909) "overwrite" (Ojs.bool_to_js x910)
    let (get_ignoreIfExists : t -> bool) =
      fun (x911 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x911) "ignoreIfExists")
    let (set_ignoreIfExists : t -> bool -> unit) =
      fun (x912 : t) ->
        fun (x913 : bool) ->
          Ojs.set_prop_ascii (t_to_js x912) "ignoreIfExists"
            (Ojs.bool_to_js x913)
  end
module AnonymousInterface23 =
  struct
    type t = anonymous_interface_23
    let rec t_of_js : Ojs.t -> t =
      fun (x915 : Ojs.t) -> anonymous_interface_23_of_js x915
    and t_to_js : t -> Ojs.t =
      fun (x914 : anonymous_interface_23) ->
        anonymous_interface_23_to_js x914
    let (get_range : t -> vscode_Range) =
      fun (x916 : t) ->
        vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x916) "range")
    let (set_range : t -> vscode_Range -> unit) =
      fun (x917 : t) ->
        fun (x918 : vscode_Range) ->
          Ojs.set_prop_ascii (t_to_js x917) "range" (vscode_Range_to_js x918)
    let (get_placeholder : t -> string) =
      fun (x919 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x919) "placeholder")
    let (set_placeholder : t -> string -> unit) =
      fun (x920 : t) ->
        fun (x921 : string) ->
          Ojs.set_prop_ascii (t_to_js x920) "placeholder"
            (Ojs.string_to_js x921)
  end
module AnonymousInterface24 =
  struct
    type t = anonymous_interface_24
    let rec t_of_js : Ojs.t -> t =
      fun (x923 : Ojs.t) -> anonymous_interface_24_of_js x923
    and t_to_js : t -> Ojs.t =
      fun (x922 : anonymous_interface_24) ->
        anonymous_interface_24_to_js x922
    let (get_reason : t -> string) =
      fun (x924 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x924) "reason")
  end
module AnonymousInterface25 =
  struct
    type t = anonymous_interface_25
    let rec t_of_js : Ojs.t -> t =
      fun (x926 : Ojs.t) -> anonymous_interface_25_of_js x926
    and t_to_js : t -> Ojs.t =
      fun (x925 : anonymous_interface_25) ->
        anonymous_interface_25_to_js x925
    let (get_recursive : t -> bool) =
      fun (x927 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x927) "recursive")
    let (set_recursive : t -> bool -> unit) =
      fun (x928 : t) ->
        fun (x929 : bool) ->
          Ojs.set_prop_ascii (t_to_js x928) "recursive" (Ojs.bool_to_js x929)
  end
module AnonymousInterface26 =
  struct
    type t = anonymous_interface_26
    let rec t_of_js : Ojs.t -> t =
      fun (x931 : Ojs.t) -> anonymous_interface_26_of_js x931
    and t_to_js : t -> Ojs.t =
      fun (x930 : anonymous_interface_26) ->
        anonymous_interface_26_to_js x930
    let (get_recursive : t -> bool) =
      fun (x932 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x932) "recursive")
    let (set_recursive : t -> bool -> unit) =
      fun (x933 : t) ->
        fun (x934 : bool) ->
          Ojs.set_prop_ascii (t_to_js x933) "recursive" (Ojs.bool_to_js x934)
    let (get_excludes : t -> string list) =
      fun (x935 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x935) "excludes")
    let (set_excludes : t -> string list -> unit) =
      fun (x937 : t) ->
        fun (x938 : string list) ->
          Ojs.set_prop_ascii (t_to_js x937) "excludes"
            (Ojs.list_to_js Ojs.string_to_js x938)
  end
module AnonymousInterface27 =
  struct
    type t = anonymous_interface_27
    let rec t_of_js : Ojs.t -> t =
      fun (x941 : Ojs.t) -> anonymous_interface_27_of_js x941
    and t_to_js : t -> Ojs.t =
      fun (x940 : anonymous_interface_27) ->
        anonymous_interface_27_to_js x940
    let (get_recursive : t -> bool) =
      fun (x942 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x942) "recursive")
    let (set_recursive : t -> bool -> unit) =
      fun (x943 : t) ->
        fun (x944 : bool) ->
          Ojs.set_prop_ascii (t_to_js x943) "recursive" (Ojs.bool_to_js x944)
    let (get_ignoreIfNotExists : t -> bool) =
      fun (x945 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x945) "ignoreIfNotExists")
    let (set_ignoreIfNotExists : t -> bool -> unit) =
      fun (x946 : t) ->
        fun (x947 : bool) ->
          Ojs.set_prop_ascii (t_to_js x946) "ignoreIfNotExists"
            (Ojs.bool_to_js x947)
  end
module AnonymousInterface28 =
  struct
    type t = anonymous_interface_28
    let rec t_of_js : Ojs.t -> t =
      fun (x949 : Ojs.t) -> anonymous_interface_28_of_js x949
    and t_to_js : t -> Ojs.t =
      fun (x948 : anonymous_interface_28) ->
        anonymous_interface_28_to_js x948
    let (get_recursive : t -> bool) =
      fun (x950 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x950) "recursive")
    let (set_recursive : t -> bool -> unit) =
      fun (x951 : t) ->
        fun (x952 : bool) ->
          Ojs.set_prop_ascii (t_to_js x951) "recursive" (Ojs.bool_to_js x952)
    let (get_useTrash : t -> bool) =
      fun (x953 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x953) "useTrash")
    let (set_useTrash : t -> bool -> unit) =
      fun (x954 : t) ->
        fun (x955 : bool) ->
          Ojs.set_prop_ascii (t_to_js x954) "useTrash" (Ojs.bool_to_js x955)
  end
module AnonymousInterface29 =
  struct
    type t = anonymous_interface_29
    let rec t_of_js : Ojs.t -> t =
      fun (x957 : Ojs.t) -> anonymous_interface_29_of_js x957
    and t_to_js : t -> Ojs.t =
      fun (x956 : anonymous_interface_29) ->
        anonymous_interface_29_to_js x956
    let (get_retainContextWhenHidden : t -> bool) =
      fun (x958 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x958) "retainContextWhenHidden")
  end
module AnonymousInterface30 =
  struct
    type t = anonymous_interface_30
    let rec t_of_js : Ojs.t -> t =
      fun (x960 : Ojs.t) -> anonymous_interface_30_of_js x960
    and t_to_js : t -> Ojs.t =
      fun (x959 : anonymous_interface_30) ->
        anonymous_interface_30_to_js x959
    let (get_scheme : t -> string) =
      fun (x961 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x961) "scheme")
    let (set_scheme : t -> string -> unit) =
      fun (x962 : t) ->
        fun (x963 : string) ->
          Ojs.set_prop_ascii (t_to_js x962) "scheme" (Ojs.string_to_js x963)
    let (get_authority : t -> string) =
      fun (x964 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x964) "authority")
    let (set_authority : t -> string -> unit) =
      fun (x965 : t) ->
        fun (x966 : string) ->
          Ojs.set_prop_ascii (t_to_js x965) "authority"
            (Ojs.string_to_js x966)
    let (get_path : t -> string) =
      fun (x967 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x967) "path")
    let (set_path : t -> string -> unit) =
      fun (x968 : t) ->
        fun (x969 : string) ->
          Ojs.set_prop_ascii (t_to_js x968) "path" (Ojs.string_to_js x969)
    let (get_query : t -> string) =
      fun (x970 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x970) "query")
    let (set_query : t -> string -> unit) =
      fun (x971 : t) ->
        fun (x972 : string) ->
          Ojs.set_prop_ascii (t_to_js x971) "query" (Ojs.string_to_js x972)
    let (get_fragment : t -> string) =
      fun (x973 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x973) "fragment")
    let (set_fragment : t -> string -> unit) =
      fun (x974 : t) ->
        fun (x975 : string) ->
          Ojs.set_prop_ascii (t_to_js x974) "fragment"
            (Ojs.string_to_js x975)
  end
module AnonymousInterface31 =
  struct
    type t = anonymous_interface_31
    let rec t_of_js : Ojs.t -> t =
      fun (x977 : Ojs.t) -> anonymous_interface_31_of_js x977
    and t_to_js : t -> Ojs.t =
      fun (x976 : anonymous_interface_31) ->
        anonymous_interface_31_to_js x976
    let (get_scope : t -> string) =
      fun (x978 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x978) "scope")
    let (set_scope : t -> string -> unit) =
      fun (x979 : t) ->
        fun (x980 : string) ->
          Ojs.set_prop_ascii (t_to_js x979) "scope" (Ojs.string_to_js x980)
    let (get_open : t -> string) =
      fun (x981 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x981) "open")
    let (set_open : t -> string -> unit) =
      fun (x982 : t) ->
        fun (x983 : string) ->
          Ojs.set_prop_ascii (t_to_js x982) "open" (Ojs.string_to_js x983)
    let (get_lineStart : t -> string) =
      fun (x984 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x984) "lineStart")
    let (set_lineStart : t -> string -> unit) =
      fun (x985 : t) ->
        fun (x986 : string) ->
          Ojs.set_prop_ascii (t_to_js x985) "lineStart"
            (Ojs.string_to_js x986)
    let (get_close : t -> string) =
      fun (x987 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x987) "close")
    let (set_close : t -> string -> unit) =
      fun (x988 : t) ->
        fun (x989 : string) ->
          Ojs.set_prop_ascii (t_to_js x988) "close" (Ojs.string_to_js x989)
  end
module AnonymousInterface32 =
  struct
    type t = anonymous_interface_32
    let rec t_of_js : Ojs.t -> t =
      fun (x991 : Ojs.t) -> anonymous_interface_32_of_js x991
    and t_to_js : t -> Ojs.t =
      fun (x990 : anonymous_interface_32) ->
        anonymous_interface_32_to_js x990
    let (get_select : t -> bool) =
      fun (x992 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x992) "select")
    let (set_select : t -> bool -> unit) =
      fun (x993 : t) ->
        fun (x994 : bool) ->
          Ojs.set_prop_ascii (t_to_js x993) "select" (Ojs.bool_to_js x994)
    let (get_focus : t -> bool) =
      fun (x995 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x995) "focus")
    let (set_focus : t -> bool -> unit) =
      fun (x996 : t) ->
        fun (x997 : bool) ->
          Ojs.set_prop_ascii (t_to_js x996) "focus" (Ojs.bool_to_js x997)
    let (get_expand : t -> bool or_number) =
      fun (x998 : t) ->
        or_number_of_js Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x998) "expand")
    let (set_expand : t -> bool or_number -> unit) =
      fun (x1000 : t) ->
        fun (x1001 : bool or_number) ->
          Ojs.set_prop_ascii (t_to_js x1000) "expand"
            (or_number_to_js Ojs.bool_to_js x1001)
  end
module AnonymousInterface33 =
  struct
    type t = anonymous_interface_33
    let rec t_of_js : Ojs.t -> t =
      fun (x1004 : Ojs.t) -> anonymous_interface_33_of_js x1004
    and t_to_js : t -> Ojs.t =
      fun (x1003 : anonymous_interface_33) ->
        anonymous_interface_33_to_js x1003
    let (get_start : t -> vscode_Position) =
      fun (x1005 : t) ->
        vscode_Position_of_js (Ojs.get_prop_ascii (t_to_js x1005) "start")
    let (set_start : t -> vscode_Position -> unit) =
      fun (x1006 : t) ->
        fun (x1007 : vscode_Position) ->
          Ojs.set_prop_ascii (t_to_js x1006) "start"
            (vscode_Position_to_js x1007)
    let (get_end : t -> vscode_Position) =
      fun (x1008 : t) ->
        vscode_Position_of_js (Ojs.get_prop_ascii (t_to_js x1008) "end")
    let (set_end : t -> vscode_Position -> unit) =
      fun (x1009 : t) ->
        fun (x1010 : vscode_Position) ->
          Ojs.set_prop_ascii (t_to_js x1009) "end"
            (vscode_Position_to_js x1010)
  end
module AnonymousInterface34 =
  struct
    type t = anonymous_interface_34
    let rec t_of_js : Ojs.t -> t =
      fun (x1012 : Ojs.t) -> anonymous_interface_34_of_js x1012
    and t_to_js : t -> Ojs.t =
      fun (x1011 : anonymous_interface_34) ->
        anonymous_interface_34_to_js x1011
    let (get_undoStopBefore : t -> bool) =
      fun (x1013 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1013) "undoStopBefore")
    let (set_undoStopBefore : t -> bool -> unit) =
      fun (x1014 : t) ->
        fun (x1015 : bool) ->
          Ojs.set_prop_ascii (t_to_js x1014) "undoStopBefore"
            (Ojs.bool_to_js x1015)
    let (get_undoStopAfter : t -> bool) =
      fun (x1016 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1016) "undoStopAfter")
    let (set_undoStopAfter : t -> bool -> unit) =
      fun (x1017 : t) ->
        fun (x1018 : bool) ->
          Ojs.set_prop_ascii (t_to_js x1017) "undoStopAfter"
            (Ojs.bool_to_js x1018)
  end
module AnonymousInterface35 =
  struct
    type t = anonymous_interface_35
    let rec t_of_js : Ojs.t -> t =
      fun (x1020 : Ojs.t) -> anonymous_interface_35_of_js x1020
    and t_to_js : t -> Ojs.t =
      fun (x1019 : anonymous_interface_35) ->
        anonymous_interface_35_to_js x1019
    let (get_uri : t -> vscode_Uri) =
      fun (x1021 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x1021) "uri")
    let (set_uri : t -> vscode_Uri -> unit) =
      fun (x1022 : t) ->
        fun (x1023 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x1022) "uri" (vscode_Uri_to_js x1023)
    let (get_languageId : t -> string) =
      fun (x1024 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1024) "languageId")
    let (set_languageId : t -> string -> unit) =
      fun (x1025 : t) ->
        fun (x1026 : string) ->
          Ojs.set_prop_ascii (t_to_js x1025) "languageId"
            (Ojs.string_to_js x1026)
  end
module AnonymousInterface36 =
  struct
    type t = anonymous_interface_36
    let rec t_of_js : Ojs.t -> t =
      fun (x1028 : Ojs.t) -> anonymous_interface_36_of_js x1028
    and t_to_js : t -> Ojs.t =
      fun (x1027 : anonymous_interface_36) ->
        anonymous_interface_36_to_js x1027
    let (get_uri : t -> vscode_Uri) =
      fun (x1029 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x1029) "uri")
    let (set_uri : t -> vscode_Uri -> unit) =
      fun (x1030 : t) ->
        fun (x1031 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x1030) "uri" (vscode_Uri_to_js x1031)
    let (get_name : t -> string) =
      fun (x1032 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1032) "name")
    let (set_name : t -> string -> unit) =
      fun (x1033 : t) ->
        fun (x1034 : string) ->
          Ojs.set_prop_ascii (t_to_js x1033) "name" (Ojs.string_to_js x1034)
  end
module AnonymousInterface37 =
  struct
    type t = anonymous_interface_37
    let rec t_of_js : Ojs.t -> t =
      fun (x1036 : Ojs.t) -> anonymous_interface_37_of_js x1036
    and t_to_js : t -> Ojs.t =
      fun (x1035 : anonymous_interface_37) ->
        anonymous_interface_37_to_js x1035
    let (get_value : t -> string or_number) =
      fun (x1037 : t) ->
        or_number_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x1037) "value")
    let (set_value : t -> string or_number -> unit) =
      fun (x1039 : t) ->
        fun (x1040 : string or_number) ->
          Ojs.set_prop_ascii (t_to_js x1039) "value"
            (or_number_to_js Ojs.string_to_js x1040)
    let (get_target : t -> vscode_Uri) =
      fun (x1042 : t) ->
        vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x1042) "target")
    let (set_target : t -> vscode_Uri -> unit) =
      fun (x1043 : t) ->
        fun (x1044 : vscode_Uri) ->
          Ojs.set_prop_ascii (t_to_js x1043) "target"
            (vscode_Uri_to_js x1044)
  end
module AnonymousInterface38 =
  struct
    type t = anonymous_interface_38
    let rec t_of_js : Ojs.t -> t =
      fun (x1046 : Ojs.t) -> anonymous_interface_38_of_js x1046
    and t_to_js : t -> Ojs.t =
      fun (x1045 : anonymous_interface_38) ->
        anonymous_interface_38_to_js x1045
    let (get_viewColumn : t -> vscode_ViewColumn) =
      fun (x1047 : t) ->
        vscode_ViewColumn_of_js
          (Ojs.get_prop_ascii (t_to_js x1047) "viewColumn")
    let (set_viewColumn : t -> vscode_ViewColumn -> unit) =
      fun (x1048 : t) ->
        fun (x1049 : vscode_ViewColumn) ->
          Ojs.set_prop_ascii (t_to_js x1048) "viewColumn"
            (vscode_ViewColumn_to_js x1049)
    let (get_preserveFocus : t -> bool) =
      fun (x1050 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1050) "preserveFocus")
    let (set_preserveFocus : t -> bool -> unit) =
      fun (x1051 : t) ->
        fun (x1052 : bool) ->
          Ojs.set_prop_ascii (t_to_js x1051) "preserveFocus"
            (Ojs.bool_to_js x1052)
  end
module AnonymousInterface39 =
  struct
    type t = anonymous_interface_39
    let rec t_of_js : Ojs.t -> t =
      fun (x1054 : Ojs.t) -> anonymous_interface_39_of_js x1054
    and t_to_js : t -> Ojs.t =
      fun (x1053 : anonymous_interface_39) ->
        anonymous_interface_39_to_js x1053
    let (get_viewId : t -> string) =
      fun (x1055 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1055) "viewId")
    let (set_viewId : t -> string -> unit) =
      fun (x1056 : t) ->
        fun (x1057 : string) ->
          Ojs.set_prop_ascii (t_to_js x1056) "viewId"
            (Ojs.string_to_js x1057)
  end
module AnonymousInterface40 =
  struct
    type t = anonymous_interface_40
    let rec t_of_js : Ojs.t -> t =
      fun (x1059 : Ojs.t) -> anonymous_interface_40_of_js x1059
    and t_to_js : t -> Ojs.t =
      fun (x1058 : anonymous_interface_40) ->
        anonymous_interface_40_to_js x1058
    let (get_webviewOptions : t -> vscode_WebviewPanelOptions) =
      fun (x1060 : t) ->
        vscode_WebviewPanelOptions_of_js
          (Ojs.get_prop_ascii (t_to_js x1060) "webviewOptions")
    let (get_supportsMultipleEditorsPerDocument : t -> bool) =
      fun (x1061 : t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js x1061)
             "supportsMultipleEditorsPerDocument")
  end
module AnonymousInterface41 =
  struct
    type t = anonymous_interface_41
    let rec t_of_js : Ojs.t -> t =
      fun (x1063 : Ojs.t) -> anonymous_interface_41_of_js x1063
    and t_to_js : t -> Ojs.t =
      fun (x1062 : anonymous_interface_41) ->
        anonymous_interface_41_to_js x1062
    let (get_webviewOptions : t -> anonymous_interface_29) =
      fun (x1064 : t) ->
        anonymous_interface_29_of_js
          (Ojs.get_prop_ascii (t_to_js x1064) "webviewOptions")
  end
module AnonymousInterface42 =
  struct
    type t = anonymous_interface_42
    let rec t_of_js : Ojs.t -> t =
      fun (x1066 : Ojs.t) -> anonymous_interface_42_of_js x1066
    and t_to_js : t -> Ojs.t =
      fun (x1065 : anonymous_interface_42) ->
        anonymous_interface_42_to_js x1065
    let (dispose : t -> any) =
      fun (x1067 : t) -> any_of_js (Ojs.call (t_to_js x1067) "dispose" [||])
  end
module AnonymousInterface43 =
  struct
    type t = anonymous_interface_43
    let rec t_of_js : Ojs.t -> t =
      fun (x1069 : Ojs.t) -> anonymous_interface_43_of_js x1069
    and t_to_js : t -> Ojs.t =
      fun (x1068 : anonymous_interface_43) ->
        anonymous_interface_43_to_js x1068
    let (setKeysForSync : t -> keys:string list -> unit) =
      fun (x1072 : t) ->
        fun ~keys:(x1070 : string list) ->
          ignore
            (Ojs.call (t_to_js x1072) "setKeysForSync"
               [|(Ojs.list_to_js Ojs.string_to_js x1070)|])
  end
module AnonymousInterface44 =
  struct
    type t = anonymous_interface_44
    let rec t_of_js : Ojs.t -> t =
      fun (x1074 : Ojs.t) -> anonymous_interface_44_of_js x1074
    and t_to_js : t -> Ojs.t =
      fun (x1073 : anonymous_interface_44) ->
        anonymous_interface_44_to_js x1073
    let (get : t -> string -> string) =
      fun (x1075 : t) ->
        fun (x1076 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (t_to_js x1075) (Ojs.string_to_js x1076))
    let (set : t -> string -> string -> unit) =
      fun (x1077 : t) ->
        fun (x1078 : string) ->
          fun (x1079 : string) ->
            Ojs.set_prop (t_to_js x1077) (Ojs.string_to_js x1078)
              (Ojs.string_to_js x1079)
  end
module AnonymousInterface45 =
  struct
    type t = anonymous_interface_45
    let rec t_of_js : Ojs.t -> t =
      fun (x1081 : Ojs.t) -> anonymous_interface_45_of_js x1081
    and t_to_js : t -> Ojs.t =
      fun (x1080 : anonymous_interface_45) ->
        anonymous_interface_45_to_js x1080
    let (get : t -> string -> string or_null_or_undefined) =
      fun (x1082 : t) ->
        fun (x1083 : string) ->
          or_null_or_undefined_of_js Ojs.string_of_js
            (Ojs.get_prop (t_to_js x1082) (Ojs.string_to_js x1083))
    let (set : t -> string -> string or_null_or_undefined -> unit) =
      fun (x1085 : t) ->
        fun (x1086 : string) ->
          fun (x1087 : string or_null_or_undefined) ->
            Ojs.set_prop (t_to_js x1085) (Ojs.string_to_js x1086)
              (or_null_or_undefined_to_js Ojs.string_to_js x1087)
  end
module AnonymousInterface46 =
  struct
    type t = anonymous_interface_46
    let rec t_of_js : Ojs.t -> t =
      fun (x1090 : Ojs.t) -> anonymous_interface_46_of_js x1090
    and t_to_js : t -> Ojs.t =
      fun (x1089 : anonymous_interface_46) ->
        anonymous_interface_46_to_js x1089
    let (get : t -> string -> string list) =
      fun (x1091 : t) ->
        fun (x1092 : string) ->
          Ojs.list_of_js Ojs.string_of_js
            (Ojs.get_prop (t_to_js x1091) (Ojs.string_to_js x1092))
    let (set : t -> string -> string list -> unit) =
      fun (x1094 : t) ->
        fun (x1095 : string) ->
          fun (x1096 : string list) ->
            Ojs.set_prop (t_to_js x1094) (Ojs.string_to_js x1095)
              (Ojs.list_to_js Ojs.string_to_js x1096)
  end
module Vscode =
  struct
    let (version : string) =
      Ojs.string_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
           "version")
    module Command =
      struct
        type t = vscode_Command
        let rec t_of_js : Ojs.t -> t =
          fun (x1099 : Ojs.t) -> vscode_Command_of_js x1099
        and t_to_js : t -> Ojs.t =
          fun (x1098 : vscode_Command) -> vscode_Command_to_js x1098
        let (get_title : t -> string) =
          fun (x1100 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1100) "title")
        let (set_title : t -> string -> unit) =
          fun (x1101 : t) ->
            fun (x1102 : string) ->
              Ojs.set_prop_ascii (t_to_js x1101) "title"
                (Ojs.string_to_js x1102)
        let (get_command : t -> string) =
          fun (x1103 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1103) "command")
        let (set_command : t -> string -> unit) =
          fun (x1104 : t) ->
            fun (x1105 : string) ->
              Ojs.set_prop_ascii (t_to_js x1104) "command"
                (Ojs.string_to_js x1105)
        let (get_tooltip : t -> string) =
          fun (x1106 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1106) "tooltip")
        let (set_tooltip : t -> string -> unit) =
          fun (x1107 : t) ->
            fun (x1108 : string) ->
              Ojs.set_prop_ascii (t_to_js x1107) "tooltip"
                (Ojs.string_to_js x1108)
        let (get_arguments : t -> any list) =
          fun (x1109 : t) ->
            Ojs.list_of_js any_of_js
              (Ojs.get_prop_ascii (t_to_js x1109) "arguments")
        let (set_arguments : t -> any list -> unit) =
          fun (x1111 : t) ->
            fun (x1112 : any list) ->
              Ojs.set_prop_ascii (t_to_js x1111) "arguments"
                (Ojs.list_to_js any_to_js x1112)
      end
    module TextLine =
      struct
        type t = vscode_TextLine
        let rec t_of_js : Ojs.t -> t =
          fun (x1115 : Ojs.t) -> vscode_TextLine_of_js x1115
        and t_to_js : t -> Ojs.t =
          fun (x1114 : vscode_TextLine) -> vscode_TextLine_to_js x1114
        let (get_lineNumber : t -> float) =
          fun (x1116 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1116) "lineNumber")
        let (get_text : t -> string) =
          fun (x1117 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1117) "text")
        let (get_range : t -> vscode_Range) =
          fun (x1118 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x1118) "range")
        let (get_rangeIncludingLineBreak : t -> vscode_Range) =
          fun (x1119 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x1119) "rangeIncludingLineBreak")
        let (get_firstNonWhitespaceCharacterIndex : t -> float) =
          fun (x1120 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x1120)
                 "firstNonWhitespaceCharacterIndex")
        let (get_isEmptyOrWhitespace : t -> bool) =
          fun (x1121 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1121) "isEmptyOrWhitespace")
      end
    module TextDocument =
      struct
        type t = vscode_TextDocument
        let rec t_of_js : Ojs.t -> t =
          fun (x1123 : Ojs.t) -> vscode_TextDocument_of_js x1123
        and t_to_js : t -> Ojs.t =
          fun (x1122 : vscode_TextDocument) ->
            vscode_TextDocument_to_js x1122
        let (get_uri : t -> vscode_Uri) =
          fun (x1124 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x1124) "uri")
        let (get_fileName : t -> string) =
          fun (x1125 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1125) "fileName")
        let (get_isUntitled : t -> bool) =
          fun (x1126 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1126) "isUntitled")
        let (get_languageId : t -> string) =
          fun (x1127 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1127) "languageId")
        let (get_version : t -> float) =
          fun (x1128 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1128) "version")
        let (get_isDirty : t -> bool) =
          fun (x1129 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1129) "isDirty")
        let (get_isClosed : t -> bool) =
          fun (x1130 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1130) "isClosed")
        let (save : t -> bool _Thenable) =
          fun (x1131 : t) ->
            _Thenable_of_js Ojs.bool_of_js
              (Ojs.call (t_to_js x1131) "save" [||])
        let (get_eol : t -> vscode_EndOfLine) =
          fun (x1133 : t) ->
            vscode_EndOfLine_of_js (Ojs.get_prop_ascii (t_to_js x1133) "eol")
        let (get_lineCount : t -> float) =
          fun (x1134 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1134) "lineCount")
        let (lineAt : t -> line:float -> vscode_TextLine) =
          fun (x1136 : t) ->
            fun ~line:(x1135 : float) ->
              vscode_TextLine_of_js
                (Ojs.call (t_to_js x1136) "lineAt"
                   [|(Ojs.float_to_js x1135)|])
        let (lineAt' : t -> position:vscode_Position -> vscode_TextLine) =
          fun (x1138 : t) ->
            fun ~position:(x1137 : vscode_Position) ->
              vscode_TextLine_of_js
                (Ojs.call (t_to_js x1138) "lineAt"
                   [|(vscode_Position_to_js x1137)|])
        let (offsetAt : t -> position:vscode_Position -> float) =
          fun (x1140 : t) ->
            fun ~position:(x1139 : vscode_Position) ->
              Ojs.float_of_js
                (Ojs.call (t_to_js x1140) "offsetAt"
                   [|(vscode_Position_to_js x1139)|])
        let (positionAt : t -> offset:float -> vscode_Position) =
          fun (x1142 : t) ->
            fun ~offset:(x1141 : float) ->
              vscode_Position_of_js
                (Ojs.call (t_to_js x1142) "positionAt"
                   [|(Ojs.float_to_js x1141)|])
        let (getText : t -> ?range:vscode_Range -> unit -> string) =
          fun (x1146 : t) ->
            fun ?range:(x1143 : vscode_Range option) ->
              fun () ->
                Ojs.string_of_js
                  (let x1147 = t_to_js x1146 in
                   Ojs.call (Ojs.get_prop_ascii x1147 "getText") "apply"
                     [|x1147;((let x1144 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x1143 with
                                | Some x1145 ->
                                    ignore
                                      (Ojs.call x1144 "push"
                                         [|(vscode_Range_to_js x1145)|])
                                | None -> ());
                               x1144))|])
        let (getWordRangeAtPosition :
          t ->
            position:vscode_Position ->
              ?regex:regexp -> unit -> vscode_Range or_undefined)
          =
          fun (x1152 : t) ->
            fun ~position:(x1148 : vscode_Position) ->
              fun ?regex:(x1149 : regexp option) ->
                fun () ->
                  or_undefined_of_js vscode_Range_of_js
                    (let x1153 = t_to_js x1152 in
                     Ojs.call
                       (Ojs.get_prop_ascii x1153 "getWordRangeAtPosition")
                       "apply"
                       [|x1153;((let x1150 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1150 "push"
                                      [|(vscode_Position_to_js x1148)|]);
                                 (match x1149 with
                                  | Some x1151 ->
                                      ignore
                                        (Ojs.call x1150 "push"
                                           [|(regexp_to_js x1151)|])
                                  | None -> ());
                                 x1150))|])
        let (validateRange : t -> range:vscode_Range -> vscode_Range) =
          fun (x1156 : t) ->
            fun ~range:(x1155 : vscode_Range) ->
              vscode_Range_of_js
                (Ojs.call (t_to_js x1156) "validateRange"
                   [|(vscode_Range_to_js x1155)|])
        let (validatePosition :
          t -> position:vscode_Position -> vscode_Position) =
          fun (x1158 : t) ->
            fun ~position:(x1157 : vscode_Position) ->
              vscode_Position_of_js
                (Ojs.call (t_to_js x1158) "validatePosition"
                   [|(vscode_Position_to_js x1157)|])
      end
    module Position =
      struct
        type t = vscode_Position
        let rec t_of_js : Ojs.t -> t =
          fun (x1160 : Ojs.t) -> vscode_Position_of_js x1160
        and t_to_js : t -> Ojs.t =
          fun (x1159 : vscode_Position) -> vscode_Position_to_js x1159
        let (get_line : t -> float) =
          fun (x1161 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1161) "line")
        let (get_character : t -> float) =
          fun (x1162 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1162) "character")
        let (create : line:float -> character:float -> t) =
          fun ~line:(x1163 : float) ->
            fun ~character:(x1164 : float) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "Position")
                   [|(Ojs.float_to_js x1163);(Ojs.float_to_js x1164)|])
        let (isBefore : t -> other:t -> bool) =
          fun (x1166 : t) ->
            fun ~other:(x1165 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1166) "isBefore" [|(t_to_js x1165)|])
        let (isBeforeOrEqual : t -> other:t -> bool) =
          fun (x1168 : t) ->
            fun ~other:(x1167 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1168) "isBeforeOrEqual"
                   [|(t_to_js x1167)|])
        let (isAfter : t -> other:t -> bool) =
          fun (x1170 : t) ->
            fun ~other:(x1169 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1170) "isAfter" [|(t_to_js x1169)|])
        let (isAfterOrEqual : t -> other:t -> bool) =
          fun (x1172 : t) ->
            fun ~other:(x1171 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1172) "isAfterOrEqual"
                   [|(t_to_js x1171)|])
        let (isEqual : t -> other:t -> bool) =
          fun (x1174 : t) ->
            fun ~other:(x1173 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1174) "isEqual" [|(t_to_js x1173)|])
        let (compareTo : t -> other:t -> float) =
          fun (x1176 : t) ->
            fun ~other:(x1175 : t) ->
              Ojs.float_of_js
                (Ojs.call (t_to_js x1176) "compareTo" [|(t_to_js x1175)|])
        let (translate :
          t -> ?lineDelta:float -> ?characterDelta:float -> unit -> t) =
          fun (x1182 : t) ->
            fun ?lineDelta:(x1177 : float option) ->
              fun ?characterDelta:(x1178 : float option) ->
                fun () ->
                  t_of_js
                    (let x1183 = t_to_js x1182 in
                     Ojs.call (Ojs.get_prop_ascii x1183 "translate") "apply"
                       [|x1183;((let x1179 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x1177 with
                                  | Some x1181 ->
                                      ignore
                                        (Ojs.call x1179 "push"
                                           [|(Ojs.float_to_js x1181)|])
                                  | None -> ());
                                 (match x1178 with
                                  | Some x1180 ->
                                      ignore
                                        (Ojs.call x1179 "push"
                                           [|(Ojs.float_to_js x1180)|])
                                  | None -> ());
                                 x1179))|])
        let (translate' : t -> change:anonymous_interface_17 -> t) =
          fun (x1185 : t) ->
            fun ~change:(x1184 : anonymous_interface_17) ->
              t_of_js
                (Ojs.call (t_to_js x1185) "translate"
                   [|(anonymous_interface_17_to_js x1184)|])
        let (with_ : t -> ?line:float -> ?character:float -> unit -> t) =
          fun (x1191 : t) ->
            fun ?line:(x1186 : float option) ->
              fun ?character:(x1187 : float option) ->
                fun () ->
                  t_of_js
                    (let x1192 = t_to_js x1191 in
                     Ojs.call (Ojs.get_prop_ascii x1192 "with") "apply"
                       [|x1192;((let x1188 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x1186 with
                                  | Some x1190 ->
                                      ignore
                                        (Ojs.call x1188 "push"
                                           [|(Ojs.float_to_js x1190)|])
                                  | None -> ());
                                 (match x1187 with
                                  | Some x1189 ->
                                      ignore
                                        (Ojs.call x1188 "push"
                                           [|(Ojs.float_to_js x1189)|])
                                  | None -> ());
                                 x1188))|])
        let (with_' : t -> change:anonymous_interface_16 -> t) =
          fun (x1194 : t) ->
            fun ~change:(x1193 : anonymous_interface_16) ->
              t_of_js
                (Ojs.call (t_to_js x1194) "with"
                   [|(anonymous_interface_16_to_js x1193)|])
      end
    module Range =
      struct
        type t = vscode_Range
        let rec t_of_js : Ojs.t -> t =
          fun (x1196 : Ojs.t) -> vscode_Range_of_js x1196
        and t_to_js : t -> Ojs.t =
          fun (x1195 : vscode_Range) -> vscode_Range_to_js x1195
        let (get_start : t -> vscode_Position) =
          fun (x1197 : t) ->
            vscode_Position_of_js
              (Ojs.get_prop_ascii (t_to_js x1197) "start")
        let (get_end : t -> vscode_Position) =
          fun (x1198 : t) ->
            vscode_Position_of_js (Ojs.get_prop_ascii (t_to_js x1198) "end")
        let (create : start:vscode_Position -> end_:vscode_Position -> t) =
          fun ~start:(x1199 : vscode_Position) ->
            fun ~end_:(x1200 : vscode_Position) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "Range")
                   [|(vscode_Position_to_js x1199);(vscode_Position_to_js
                                                      x1200)|])
        let (create' :
          startLine:float ->
            startCharacter:float -> endLine:float -> endCharacter:float -> t)
          =
          fun ~startLine:(x1201 : float) ->
            fun ~startCharacter:(x1202 : float) ->
              fun ~endLine:(x1203 : float) ->
                fun ~endCharacter:(x1204 : float) ->
                  t_of_js
                    (Ojs.new_obj
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode") "Range")
                       [|(Ojs.float_to_js x1201);(Ojs.float_to_js x1202);(
                         Ojs.float_to_js x1203);(Ojs.float_to_js x1204)|])
        let (get_isEmpty : t -> bool) =
          fun (x1205 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1205) "isEmpty")
        let (set_isEmpty : t -> bool -> unit) =
          fun (x1206 : t) ->
            fun (x1207 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1206) "isEmpty"
                (Ojs.bool_to_js x1207)
        let (get_isSingleLine : t -> bool) =
          fun (x1208 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1208) "isSingleLine")
        let (set_isSingleLine : t -> bool -> unit) =
          fun (x1209 : t) ->
            fun (x1210 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1209) "isSingleLine"
                (Ojs.bool_to_js x1210)
        let (contains :
          t -> positionOrRange:(vscode_Position, t) union2 -> bool) =
          fun (x1214 : t) ->
            fun ~positionOrRange:(x1211 : (vscode_Position, t) union2) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1214) "contains"
                   [|(union2_to_js vscode_Position_to_js t_to_js x1211)|])
        let (isEqual : t -> other:t -> bool) =
          fun (x1216 : t) ->
            fun ~other:(x1215 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1216) "isEqual" [|(t_to_js x1215)|])
        let (intersection : t -> range:t -> t or_undefined) =
          fun (x1218 : t) ->
            fun ~range:(x1217 : t) ->
              or_undefined_of_js t_of_js
                (Ojs.call (t_to_js x1218) "intersection" [|(t_to_js x1217)|])
        let (union : t -> other:t -> t) =
          fun (x1221 : t) ->
            fun ~other:(x1220 : t) ->
              t_of_js (Ojs.call (t_to_js x1221) "union" [|(t_to_js x1220)|])
        let (with_ :
          t -> ?start:vscode_Position -> ?end_:vscode_Position -> unit -> t)
          =
          fun (x1227 : t) ->
            fun ?start:(x1222 : vscode_Position option) ->
              fun ?end_:(x1223 : vscode_Position option) ->
                fun () ->
                  t_of_js
                    (let x1228 = t_to_js x1227 in
                     Ojs.call (Ojs.get_prop_ascii x1228 "with") "apply"
                       [|x1228;((let x1224 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x1222 with
                                  | Some x1226 ->
                                      ignore
                                        (Ojs.call x1224 "push"
                                           [|(vscode_Position_to_js x1226)|])
                                  | None -> ());
                                 (match x1223 with
                                  | Some x1225 ->
                                      ignore
                                        (Ojs.call x1224 "push"
                                           [|(vscode_Position_to_js x1225)|])
                                  | None -> ());
                                 x1224))|])
        let (with_' : t -> change:anonymous_interface_33 -> t) =
          fun (x1230 : t) ->
            fun ~change:(x1229 : anonymous_interface_33) ->
              t_of_js
                (Ojs.call (t_to_js x1230) "with"
                   [|(anonymous_interface_33_to_js x1229)|])
      end
    module Selection =
      struct
        type t = vscode_Selection
        let rec t_of_js : Ojs.t -> t =
          fun (x1232 : Ojs.t) -> vscode_Selection_of_js x1232
        and t_to_js : t -> Ojs.t =
          fun (x1231 : vscode_Selection) -> vscode_Selection_to_js x1231
        let (get_anchor : t -> vscode_Position) =
          fun (x1233 : t) ->
            vscode_Position_of_js
              (Ojs.get_prop_ascii (t_to_js x1233) "anchor")
        let (set_anchor : t -> vscode_Position -> unit) =
          fun (x1234 : t) ->
            fun (x1235 : vscode_Position) ->
              Ojs.set_prop_ascii (t_to_js x1234) "anchor"
                (vscode_Position_to_js x1235)
        let (get_active : t -> vscode_Position) =
          fun (x1236 : t) ->
            vscode_Position_of_js
              (Ojs.get_prop_ascii (t_to_js x1236) "active")
        let (set_active : t -> vscode_Position -> unit) =
          fun (x1237 : t) ->
            fun (x1238 : vscode_Position) ->
              Ojs.set_prop_ascii (t_to_js x1237) "active"
                (vscode_Position_to_js x1238)
        let (create : anchor:vscode_Position -> active:vscode_Position -> t)
          =
          fun ~anchor:(x1239 : vscode_Position) ->
            fun ~active:(x1240 : vscode_Position) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "Selection")
                   [|(vscode_Position_to_js x1239);(vscode_Position_to_js
                                                      x1240)|])
        let (create' :
          anchorLine:float ->
            anchorCharacter:float ->
              activeLine:float -> activeCharacter:float -> t)
          =
          fun ~anchorLine:(x1241 : float) ->
            fun ~anchorCharacter:(x1242 : float) ->
              fun ~activeLine:(x1243 : float) ->
                fun ~activeCharacter:(x1244 : float) ->
                  t_of_js
                    (Ojs.new_obj
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "Selection")
                       [|(Ojs.float_to_js x1241);(Ojs.float_to_js x1242);(
                         Ojs.float_to_js x1243);(Ojs.float_to_js x1244)|])
        let (get_isReversed : t -> bool) =
          fun (x1245 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1245) "isReversed")
        let (set_isReversed : t -> bool -> unit) =
          fun (x1246 : t) ->
            fun (x1247 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1246) "isReversed"
                (Ojs.bool_to_js x1247)
        let (cast : t -> vscode_Range) =
          fun (x1248 : t) -> vscode_Range_of_js (t_to_js x1248)
      end
    module TextEditorSelectionChangeKind =
      struct
        type t = vscode_TextEditorSelectionChangeKind
        let rec t_of_js : Ojs.t -> t =
          fun (x1250 : Ojs.t) ->
            vscode_TextEditorSelectionChangeKind_of_js x1250
        and t_to_js : t -> Ojs.t =
          fun (x1249 : vscode_TextEditorSelectionChangeKind) ->
            vscode_TextEditorSelectionChangeKind_to_js x1249
      end
    module TextEditorSelectionChangeEvent =
      struct
        type t = vscode_TextEditorSelectionChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x1252 : Ojs.t) ->
            vscode_TextEditorSelectionChangeEvent_of_js x1252
        and t_to_js : t -> Ojs.t =
          fun (x1251 : vscode_TextEditorSelectionChangeEvent) ->
            vscode_TextEditorSelectionChangeEvent_to_js x1251
        let (get_textEditor : t -> vscode_TextEditor) =
          fun (x1253 : t) ->
            vscode_TextEditor_of_js
              (Ojs.get_prop_ascii (t_to_js x1253) "textEditor")
        let (get_selections : t -> vscode_Selection list) =
          fun (x1254 : t) ->
            Ojs.list_of_js vscode_Selection_of_js
              (Ojs.get_prop_ascii (t_to_js x1254) "selections")
        let (get_kind : t -> vscode_TextEditorSelectionChangeKind) =
          fun (x1256 : t) ->
            vscode_TextEditorSelectionChangeKind_of_js
              (Ojs.get_prop_ascii (t_to_js x1256) "kind")
      end
    module TextEditorVisibleRangesChangeEvent =
      struct
        type t = vscode_TextEditorVisibleRangesChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x1258 : Ojs.t) ->
            vscode_TextEditorVisibleRangesChangeEvent_of_js x1258
        and t_to_js : t -> Ojs.t =
          fun (x1257 : vscode_TextEditorVisibleRangesChangeEvent) ->
            vscode_TextEditorVisibleRangesChangeEvent_to_js x1257
        let (get_textEditor : t -> vscode_TextEditor) =
          fun (x1259 : t) ->
            vscode_TextEditor_of_js
              (Ojs.get_prop_ascii (t_to_js x1259) "textEditor")
        let (get_visibleRanges : t -> vscode_Range list) =
          fun (x1260 : t) ->
            Ojs.list_of_js vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x1260) "visibleRanges")
      end
    module TextEditorOptionsChangeEvent =
      struct
        type t = vscode_TextEditorOptionsChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x1263 : Ojs.t) ->
            vscode_TextEditorOptionsChangeEvent_of_js x1263
        and t_to_js : t -> Ojs.t =
          fun (x1262 : vscode_TextEditorOptionsChangeEvent) ->
            vscode_TextEditorOptionsChangeEvent_to_js x1262
        let (get_textEditor : t -> vscode_TextEditor) =
          fun (x1264 : t) ->
            vscode_TextEditor_of_js
              (Ojs.get_prop_ascii (t_to_js x1264) "textEditor")
        let (get_options : t -> vscode_TextEditorOptions) =
          fun (x1265 : t) ->
            vscode_TextEditorOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1265) "options")
      end
    module TextEditorViewColumnChangeEvent =
      struct
        type t = vscode_TextEditorViewColumnChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x1267 : Ojs.t) ->
            vscode_TextEditorViewColumnChangeEvent_of_js x1267
        and t_to_js : t -> Ojs.t =
          fun (x1266 : vscode_TextEditorViewColumnChangeEvent) ->
            vscode_TextEditorViewColumnChangeEvent_to_js x1266
        let (get_textEditor : t -> vscode_TextEditor) =
          fun (x1268 : t) ->
            vscode_TextEditor_of_js
              (Ojs.get_prop_ascii (t_to_js x1268) "textEditor")
        let (get_viewColumn : t -> vscode_ViewColumn) =
          fun (x1269 : t) ->
            vscode_ViewColumn_of_js
              (Ojs.get_prop_ascii (t_to_js x1269) "viewColumn")
      end
    module TextEditorCursorStyle =
      struct
        type t = vscode_TextEditorCursorStyle
        let rec t_of_js : Ojs.t -> t =
          fun (x1271 : Ojs.t) -> vscode_TextEditorCursorStyle_of_js x1271
        and t_to_js : t -> Ojs.t =
          fun (x1270 : vscode_TextEditorCursorStyle) ->
            vscode_TextEditorCursorStyle_to_js x1270
      end
    module TextEditorLineNumbersStyle =
      struct
        type t = vscode_TextEditorLineNumbersStyle
        let rec t_of_js : Ojs.t -> t =
          fun (x1273 : Ojs.t) ->
            vscode_TextEditorLineNumbersStyle_of_js x1273
        and t_to_js : t -> Ojs.t =
          fun (x1272 : vscode_TextEditorLineNumbersStyle) ->
            vscode_TextEditorLineNumbersStyle_to_js x1272
      end
    module TextEditorOptions =
      struct
        type t = vscode_TextEditorOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1275 : Ojs.t) -> vscode_TextEditorOptions_of_js x1275
        and t_to_js : t -> Ojs.t =
          fun (x1274 : vscode_TextEditorOptions) ->
            vscode_TextEditorOptions_to_js x1274
        let (get_tabSize : t -> string or_number) =
          fun (x1276 : t) ->
            or_number_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1276) "tabSize")
        let (set_tabSize : t -> string or_number -> unit) =
          fun (x1278 : t) ->
            fun (x1279 : string or_number) ->
              Ojs.set_prop_ascii (t_to_js x1278) "tabSize"
                (or_number_to_js Ojs.string_to_js x1279)
        let (get_insertSpaces : t -> bool or_string) =
          fun (x1281 : t) ->
            or_string_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1281) "insertSpaces")
        let (set_insertSpaces : t -> bool or_string -> unit) =
          fun (x1283 : t) ->
            fun (x1284 : bool or_string) ->
              Ojs.set_prop_ascii (t_to_js x1283) "insertSpaces"
                (or_string_to_js Ojs.bool_to_js x1284)
        let (get_cursorStyle : t -> vscode_TextEditorCursorStyle) =
          fun (x1286 : t) ->
            vscode_TextEditorCursorStyle_of_js
              (Ojs.get_prop_ascii (t_to_js x1286) "cursorStyle")
        let (set_cursorStyle : t -> vscode_TextEditorCursorStyle -> unit) =
          fun (x1287 : t) ->
            fun (x1288 : vscode_TextEditorCursorStyle) ->
              Ojs.set_prop_ascii (t_to_js x1287) "cursorStyle"
                (vscode_TextEditorCursorStyle_to_js x1288)
        let (get_lineNumbers : t -> vscode_TextEditorLineNumbersStyle) =
          fun (x1289 : t) ->
            vscode_TextEditorLineNumbersStyle_of_js
              (Ojs.get_prop_ascii (t_to_js x1289) "lineNumbers")
        let (set_lineNumbers :
          t -> vscode_TextEditorLineNumbersStyle -> unit) =
          fun (x1290 : t) ->
            fun (x1291 : vscode_TextEditorLineNumbersStyle) ->
              Ojs.set_prop_ascii (t_to_js x1290) "lineNumbers"
                (vscode_TextEditorLineNumbersStyle_to_js x1291)
      end
    module TextEditorDecorationType =
      struct
        type t = vscode_TextEditorDecorationType
        let rec t_of_js : Ojs.t -> t =
          fun (x1293 : Ojs.t) -> vscode_TextEditorDecorationType_of_js x1293
        and t_to_js : t -> Ojs.t =
          fun (x1292 : vscode_TextEditorDecorationType) ->
            vscode_TextEditorDecorationType_to_js x1292
        let (get_key : t -> string) =
          fun (x1294 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1294) "key")
        let (dispose : t -> unit) =
          fun (x1295 : t) -> ignore (Ojs.call (t_to_js x1295) "dispose" [||])
      end
    module TextEditorRevealType =
      struct
        type t = vscode_TextEditorRevealType
        let rec t_of_js : Ojs.t -> t =
          fun (x1297 : Ojs.t) -> vscode_TextEditorRevealType_of_js x1297
        and t_to_js : t -> Ojs.t =
          fun (x1296 : vscode_TextEditorRevealType) ->
            vscode_TextEditorRevealType_to_js x1296
      end
    module OverviewRulerLane =
      struct
        type t = vscode_OverviewRulerLane
        let rec t_of_js : Ojs.t -> t =
          fun (x1299 : Ojs.t) -> vscode_OverviewRulerLane_of_js x1299
        and t_to_js : t -> Ojs.t =
          fun (x1298 : vscode_OverviewRulerLane) ->
            vscode_OverviewRulerLane_to_js x1298
      end
    module DecorationRangeBehavior =
      struct
        type t = vscode_DecorationRangeBehavior
        let rec t_of_js : Ojs.t -> t =
          fun (x1301 : Ojs.t) -> vscode_DecorationRangeBehavior_of_js x1301
        and t_to_js : t -> Ojs.t =
          fun (x1300 : vscode_DecorationRangeBehavior) ->
            vscode_DecorationRangeBehavior_to_js x1300
      end
    module TextDocumentShowOptions =
      struct
        type t = vscode_TextDocumentShowOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1303 : Ojs.t) -> vscode_TextDocumentShowOptions_of_js x1303
        and t_to_js : t -> Ojs.t =
          fun (x1302 : vscode_TextDocumentShowOptions) ->
            vscode_TextDocumentShowOptions_to_js x1302
        let (get_viewColumn : t -> vscode_ViewColumn) =
          fun (x1304 : t) ->
            vscode_ViewColumn_of_js
              (Ojs.get_prop_ascii (t_to_js x1304) "viewColumn")
        let (set_viewColumn : t -> vscode_ViewColumn -> unit) =
          fun (x1305 : t) ->
            fun (x1306 : vscode_ViewColumn) ->
              Ojs.set_prop_ascii (t_to_js x1305) "viewColumn"
                (vscode_ViewColumn_to_js x1306)
        let (get_preserveFocus : t -> bool) =
          fun (x1307 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1307) "preserveFocus")
        let (set_preserveFocus : t -> bool -> unit) =
          fun (x1308 : t) ->
            fun (x1309 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1308) "preserveFocus"
                (Ojs.bool_to_js x1309)
        let (get_preview : t -> bool) =
          fun (x1310 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1310) "preview")
        let (set_preview : t -> bool -> unit) =
          fun (x1311 : t) ->
            fun (x1312 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1311) "preview"
                (Ojs.bool_to_js x1312)
        let (get_selection : t -> vscode_Range) =
          fun (x1313 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x1313) "selection")
        let (set_selection : t -> vscode_Range -> unit) =
          fun (x1314 : t) ->
            fun (x1315 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x1314) "selection"
                (vscode_Range_to_js x1315)
      end
    module ThemeColor =
      struct
        type t = vscode_ThemeColor
        let rec t_of_js : Ojs.t -> t =
          fun (x1317 : Ojs.t) -> vscode_ThemeColor_of_js x1317
        and t_to_js : t -> Ojs.t =
          fun (x1316 : vscode_ThemeColor) -> vscode_ThemeColor_to_js x1316
        let (create : id:string -> t) =
          fun ~id:(x1318 : string) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "ThemeColor") [|(Ojs.string_to_js x1318)|])
      end
    module ThemeIcon =
      struct
        type t = vscode_ThemeIcon
        let rec t_of_js : Ojs.t -> t =
          fun (x1320 : Ojs.t) -> vscode_ThemeIcon_of_js x1320
        and t_to_js : t -> Ojs.t =
          fun (x1319 : vscode_ThemeIcon) -> vscode_ThemeIcon_to_js x1319
        let (get_File : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "ThemeIcon") "File")
        let (get_Folder : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "ThemeIcon") "Folder")
        let (get_id : t -> string) =
          fun (x1321 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1321) "id")
        let (get_color : t -> vscode_ThemeColor) =
          fun (x1322 : t) ->
            vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1322) "color")
        let (create : id:string -> ?color:vscode_ThemeColor -> unit -> t) =
          fun ~id:(x1323 : string) ->
            fun ?color:(x1324 : vscode_ThemeColor option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "ThemeIcon")
                     (let x1325 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x1325 "push" [|(Ojs.string_to_js x1323)|]);
                      (match x1324 with
                       | Some x1326 ->
                           ignore
                             (Ojs.call x1325 "push"
                                [|(vscode_ThemeColor_to_js x1326)|])
                       | None -> ());
                      x1325))
      end
    module ThemableDecorationRenderOptions =
      struct
        type t = vscode_ThemableDecorationRenderOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1328 : Ojs.t) ->
            vscode_ThemableDecorationRenderOptions_of_js x1328
        and t_to_js : t -> Ojs.t =
          fun (x1327 : vscode_ThemableDecorationRenderOptions) ->
            vscode_ThemableDecorationRenderOptions_to_js x1327
        let (get_backgroundColor : t -> vscode_ThemeColor or_string) =
          fun (x1329 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1329) "backgroundColor")
        let (set_backgroundColor : t -> vscode_ThemeColor or_string -> unit)
          =
          fun (x1331 : t) ->
            fun (x1332 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1331) "backgroundColor"
                (or_string_to_js vscode_ThemeColor_to_js x1332)
        let (get_outline : t -> string) =
          fun (x1334 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1334) "outline")
        let (set_outline : t -> string -> unit) =
          fun (x1335 : t) ->
            fun (x1336 : string) ->
              Ojs.set_prop_ascii (t_to_js x1335) "outline"
                (Ojs.string_to_js x1336)
        let (get_outlineColor : t -> vscode_ThemeColor or_string) =
          fun (x1337 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1337) "outlineColor")
        let (set_outlineColor : t -> vscode_ThemeColor or_string -> unit) =
          fun (x1339 : t) ->
            fun (x1340 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1339) "outlineColor"
                (or_string_to_js vscode_ThemeColor_to_js x1340)
        let (get_outlineStyle : t -> string) =
          fun (x1342 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1342) "outlineStyle")
        let (set_outlineStyle : t -> string -> unit) =
          fun (x1343 : t) ->
            fun (x1344 : string) ->
              Ojs.set_prop_ascii (t_to_js x1343) "outlineStyle"
                (Ojs.string_to_js x1344)
        let (get_outlineWidth : t -> string) =
          fun (x1345 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1345) "outlineWidth")
        let (set_outlineWidth : t -> string -> unit) =
          fun (x1346 : t) ->
            fun (x1347 : string) ->
              Ojs.set_prop_ascii (t_to_js x1346) "outlineWidth"
                (Ojs.string_to_js x1347)
        let (get_border : t -> string) =
          fun (x1348 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1348) "border")
        let (set_border : t -> string -> unit) =
          fun (x1349 : t) ->
            fun (x1350 : string) ->
              Ojs.set_prop_ascii (t_to_js x1349) "border"
                (Ojs.string_to_js x1350)
        let (get_borderColor : t -> vscode_ThemeColor or_string) =
          fun (x1351 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1351) "borderColor")
        let (set_borderColor : t -> vscode_ThemeColor or_string -> unit) =
          fun (x1353 : t) ->
            fun (x1354 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1353) "borderColor"
                (or_string_to_js vscode_ThemeColor_to_js x1354)
        let (get_borderRadius : t -> string) =
          fun (x1356 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1356) "borderRadius")
        let (set_borderRadius : t -> string -> unit) =
          fun (x1357 : t) ->
            fun (x1358 : string) ->
              Ojs.set_prop_ascii (t_to_js x1357) "borderRadius"
                (Ojs.string_to_js x1358)
        let (get_borderSpacing : t -> string) =
          fun (x1359 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1359) "borderSpacing")
        let (set_borderSpacing : t -> string -> unit) =
          fun (x1360 : t) ->
            fun (x1361 : string) ->
              Ojs.set_prop_ascii (t_to_js x1360) "borderSpacing"
                (Ojs.string_to_js x1361)
        let (get_borderStyle : t -> string) =
          fun (x1362 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1362) "borderStyle")
        let (set_borderStyle : t -> string -> unit) =
          fun (x1363 : t) ->
            fun (x1364 : string) ->
              Ojs.set_prop_ascii (t_to_js x1363) "borderStyle"
                (Ojs.string_to_js x1364)
        let (get_borderWidth : t -> string) =
          fun (x1365 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1365) "borderWidth")
        let (set_borderWidth : t -> string -> unit) =
          fun (x1366 : t) ->
            fun (x1367 : string) ->
              Ojs.set_prop_ascii (t_to_js x1366) "borderWidth"
                (Ojs.string_to_js x1367)
        let (get_fontStyle : t -> string) =
          fun (x1368 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1368) "fontStyle")
        let (set_fontStyle : t -> string -> unit) =
          fun (x1369 : t) ->
            fun (x1370 : string) ->
              Ojs.set_prop_ascii (t_to_js x1369) "fontStyle"
                (Ojs.string_to_js x1370)
        let (get_fontWeight : t -> string) =
          fun (x1371 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1371) "fontWeight")
        let (set_fontWeight : t -> string -> unit) =
          fun (x1372 : t) ->
            fun (x1373 : string) ->
              Ojs.set_prop_ascii (t_to_js x1372) "fontWeight"
                (Ojs.string_to_js x1373)
        let (get_textDecoration : t -> string) =
          fun (x1374 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1374) "textDecoration")
        let (set_textDecoration : t -> string -> unit) =
          fun (x1375 : t) ->
            fun (x1376 : string) ->
              Ojs.set_prop_ascii (t_to_js x1375) "textDecoration"
                (Ojs.string_to_js x1376)
        let (get_cursor : t -> string) =
          fun (x1377 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1377) "cursor")
        let (set_cursor : t -> string -> unit) =
          fun (x1378 : t) ->
            fun (x1379 : string) ->
              Ojs.set_prop_ascii (t_to_js x1378) "cursor"
                (Ojs.string_to_js x1379)
        let (get_color : t -> vscode_ThemeColor or_string) =
          fun (x1380 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1380) "color")
        let (set_color : t -> vscode_ThemeColor or_string -> unit) =
          fun (x1382 : t) ->
            fun (x1383 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1382) "color"
                (or_string_to_js vscode_ThemeColor_to_js x1383)
        let (get_opacity : t -> string) =
          fun (x1385 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1385) "opacity")
        let (set_opacity : t -> string -> unit) =
          fun (x1386 : t) ->
            fun (x1387 : string) ->
              Ojs.set_prop_ascii (t_to_js x1386) "opacity"
                (Ojs.string_to_js x1387)
        let (get_letterSpacing : t -> string) =
          fun (x1388 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1388) "letterSpacing")
        let (set_letterSpacing : t -> string -> unit) =
          fun (x1389 : t) ->
            fun (x1390 : string) ->
              Ojs.set_prop_ascii (t_to_js x1389) "letterSpacing"
                (Ojs.string_to_js x1390)
        let (get_gutterIconPath : t -> vscode_Uri or_string) =
          fun (x1391 : t) ->
            or_string_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1391) "gutterIconPath")
        let (set_gutterIconPath : t -> vscode_Uri or_string -> unit) =
          fun (x1393 : t) ->
            fun (x1394 : vscode_Uri or_string) ->
              Ojs.set_prop_ascii (t_to_js x1393) "gutterIconPath"
                (or_string_to_js vscode_Uri_to_js x1394)
        let (get_gutterIconSize : t -> string) =
          fun (x1396 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1396) "gutterIconSize")
        let (set_gutterIconSize : t -> string -> unit) =
          fun (x1397 : t) ->
            fun (x1398 : string) ->
              Ojs.set_prop_ascii (t_to_js x1397) "gutterIconSize"
                (Ojs.string_to_js x1398)
        let (get_overviewRulerColor : t -> vscode_ThemeColor or_string) =
          fun (x1399 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1399) "overviewRulerColor")
        let (set_overviewRulerColor :
          t -> vscode_ThemeColor or_string -> unit) =
          fun (x1401 : t) ->
            fun (x1402 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1401) "overviewRulerColor"
                (or_string_to_js vscode_ThemeColor_to_js x1402)
        let (get_before :
          t -> vscode_ThemableDecorationAttachmentRenderOptions) =
          fun (x1404 : t) ->
            vscode_ThemableDecorationAttachmentRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1404) "before")
        let (set_before :
          t -> vscode_ThemableDecorationAttachmentRenderOptions -> unit) =
          fun (x1405 : t) ->
            fun (x1406 : vscode_ThemableDecorationAttachmentRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1405) "before"
                (vscode_ThemableDecorationAttachmentRenderOptions_to_js x1406)
        let (get_after :
          t -> vscode_ThemableDecorationAttachmentRenderOptions) =
          fun (x1407 : t) ->
            vscode_ThemableDecorationAttachmentRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1407) "after")
        let (set_after :
          t -> vscode_ThemableDecorationAttachmentRenderOptions -> unit) =
          fun (x1408 : t) ->
            fun (x1409 : vscode_ThemableDecorationAttachmentRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1408) "after"
                (vscode_ThemableDecorationAttachmentRenderOptions_to_js x1409)
      end
    module ThemableDecorationAttachmentRenderOptions =
      struct
        type t = vscode_ThemableDecorationAttachmentRenderOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1411 : Ojs.t) ->
            vscode_ThemableDecorationAttachmentRenderOptions_of_js x1411
        and t_to_js : t -> Ojs.t =
          fun (x1410 : vscode_ThemableDecorationAttachmentRenderOptions) ->
            vscode_ThemableDecorationAttachmentRenderOptions_to_js x1410
        let (get_contentText : t -> string) =
          fun (x1412 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1412) "contentText")
        let (set_contentText : t -> string -> unit) =
          fun (x1413 : t) ->
            fun (x1414 : string) ->
              Ojs.set_prop_ascii (t_to_js x1413) "contentText"
                (Ojs.string_to_js x1414)
        let (get_contentIconPath : t -> vscode_Uri or_string) =
          fun (x1415 : t) ->
            or_string_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1415) "contentIconPath")
        let (set_contentIconPath : t -> vscode_Uri or_string -> unit) =
          fun (x1417 : t) ->
            fun (x1418 : vscode_Uri or_string) ->
              Ojs.set_prop_ascii (t_to_js x1417) "contentIconPath"
                (or_string_to_js vscode_Uri_to_js x1418)
        let (get_border : t -> string) =
          fun (x1420 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1420) "border")
        let (set_border : t -> string -> unit) =
          fun (x1421 : t) ->
            fun (x1422 : string) ->
              Ojs.set_prop_ascii (t_to_js x1421) "border"
                (Ojs.string_to_js x1422)
        let (get_borderColor : t -> vscode_ThemeColor or_string) =
          fun (x1423 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1423) "borderColor")
        let (set_borderColor : t -> vscode_ThemeColor or_string -> unit) =
          fun (x1425 : t) ->
            fun (x1426 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1425) "borderColor"
                (or_string_to_js vscode_ThemeColor_to_js x1426)
        let (get_fontStyle : t -> string) =
          fun (x1428 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1428) "fontStyle")
        let (set_fontStyle : t -> string -> unit) =
          fun (x1429 : t) ->
            fun (x1430 : string) ->
              Ojs.set_prop_ascii (t_to_js x1429) "fontStyle"
                (Ojs.string_to_js x1430)
        let (get_fontWeight : t -> string) =
          fun (x1431 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1431) "fontWeight")
        let (set_fontWeight : t -> string -> unit) =
          fun (x1432 : t) ->
            fun (x1433 : string) ->
              Ojs.set_prop_ascii (t_to_js x1432) "fontWeight"
                (Ojs.string_to_js x1433)
        let (get_textDecoration : t -> string) =
          fun (x1434 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1434) "textDecoration")
        let (set_textDecoration : t -> string -> unit) =
          fun (x1435 : t) ->
            fun (x1436 : string) ->
              Ojs.set_prop_ascii (t_to_js x1435) "textDecoration"
                (Ojs.string_to_js x1436)
        let (get_color : t -> vscode_ThemeColor or_string) =
          fun (x1437 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1437) "color")
        let (set_color : t -> vscode_ThemeColor or_string -> unit) =
          fun (x1439 : t) ->
            fun (x1440 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1439) "color"
                (or_string_to_js vscode_ThemeColor_to_js x1440)
        let (get_backgroundColor : t -> vscode_ThemeColor or_string) =
          fun (x1442 : t) ->
            or_string_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x1442) "backgroundColor")
        let (set_backgroundColor : t -> vscode_ThemeColor or_string -> unit)
          =
          fun (x1444 : t) ->
            fun (x1445 : vscode_ThemeColor or_string) ->
              Ojs.set_prop_ascii (t_to_js x1444) "backgroundColor"
                (or_string_to_js vscode_ThemeColor_to_js x1445)
        let (get_margin : t -> string) =
          fun (x1447 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1447) "margin")
        let (set_margin : t -> string -> unit) =
          fun (x1448 : t) ->
            fun (x1449 : string) ->
              Ojs.set_prop_ascii (t_to_js x1448) "margin"
                (Ojs.string_to_js x1449)
        let (get_width : t -> string) =
          fun (x1450 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1450) "width")
        let (set_width : t -> string -> unit) =
          fun (x1451 : t) ->
            fun (x1452 : string) ->
              Ojs.set_prop_ascii (t_to_js x1451) "width"
                (Ojs.string_to_js x1452)
        let (get_height : t -> string) =
          fun (x1453 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1453) "height")
        let (set_height : t -> string -> unit) =
          fun (x1454 : t) ->
            fun (x1455 : string) ->
              Ojs.set_prop_ascii (t_to_js x1454) "height"
                (Ojs.string_to_js x1455)
      end
    module DecorationRenderOptions =
      struct
        type t = vscode_DecorationRenderOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1457 : Ojs.t) -> vscode_DecorationRenderOptions_of_js x1457
        and t_to_js : t -> Ojs.t =
          fun (x1456 : vscode_DecorationRenderOptions) ->
            vscode_DecorationRenderOptions_to_js x1456
        let (get_isWholeLine : t -> bool) =
          fun (x1458 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1458) "isWholeLine")
        let (set_isWholeLine : t -> bool -> unit) =
          fun (x1459 : t) ->
            fun (x1460 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1459) "isWholeLine"
                (Ojs.bool_to_js x1460)
        let (get_rangeBehavior : t -> vscode_DecorationRangeBehavior) =
          fun (x1461 : t) ->
            vscode_DecorationRangeBehavior_of_js
              (Ojs.get_prop_ascii (t_to_js x1461) "rangeBehavior")
        let (set_rangeBehavior : t -> vscode_DecorationRangeBehavior -> unit)
          =
          fun (x1462 : t) ->
            fun (x1463 : vscode_DecorationRangeBehavior) ->
              Ojs.set_prop_ascii (t_to_js x1462) "rangeBehavior"
                (vscode_DecorationRangeBehavior_to_js x1463)
        let (get_overviewRulerLane : t -> vscode_OverviewRulerLane) =
          fun (x1464 : t) ->
            vscode_OverviewRulerLane_of_js
              (Ojs.get_prop_ascii (t_to_js x1464) "overviewRulerLane")
        let (set_overviewRulerLane : t -> vscode_OverviewRulerLane -> unit) =
          fun (x1465 : t) ->
            fun (x1466 : vscode_OverviewRulerLane) ->
              Ojs.set_prop_ascii (t_to_js x1465) "overviewRulerLane"
                (vscode_OverviewRulerLane_to_js x1466)
        let (get_light : t -> vscode_ThemableDecorationRenderOptions) =
          fun (x1467 : t) ->
            vscode_ThemableDecorationRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1467) "light")
        let (set_light : t -> vscode_ThemableDecorationRenderOptions -> unit)
          =
          fun (x1468 : t) ->
            fun (x1469 : vscode_ThemableDecorationRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1468) "light"
                (vscode_ThemableDecorationRenderOptions_to_js x1469)
        let (get_dark : t -> vscode_ThemableDecorationRenderOptions) =
          fun (x1470 : t) ->
            vscode_ThemableDecorationRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1470) "dark")
        let (set_dark : t -> vscode_ThemableDecorationRenderOptions -> unit)
          =
          fun (x1471 : t) ->
            fun (x1472 : vscode_ThemableDecorationRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1471) "dark"
                (vscode_ThemableDecorationRenderOptions_to_js x1472)
        let (cast : t -> vscode_ThemableDecorationRenderOptions) =
          fun (x1473 : t) ->
            vscode_ThemableDecorationRenderOptions_of_js (t_to_js x1473)
      end
    module DecorationOptions =
      struct
        type t = vscode_DecorationOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1475 : Ojs.t) -> vscode_DecorationOptions_of_js x1475
        and t_to_js : t -> Ojs.t =
          fun (x1474 : vscode_DecorationOptions) ->
            vscode_DecorationOptions_to_js x1474
        let (get_range : t -> vscode_Range) =
          fun (x1476 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x1476) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x1477 : t) ->
            fun (x1478 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x1477) "range"
                (vscode_Range_to_js x1478)
        let (get_hoverMessage :
          t -> (vscode_MarkedString, vscode_MarkedString) or_array) =
          fun (x1479 : t) ->
            or_array_of_js vscode_MarkedString_of_js
              vscode_MarkedString_of_js
              (Ojs.get_prop_ascii (t_to_js x1479) "hoverMessage")
        let (set_hoverMessage :
          t -> (vscode_MarkedString, vscode_MarkedString) or_array -> unit) =
          fun (x1482 : t) ->
            fun (x1483 : (vscode_MarkedString, vscode_MarkedString) or_array)
              ->
              Ojs.set_prop_ascii (t_to_js x1482) "hoverMessage"
                (or_array_to_js vscode_MarkedString_to_js
                   vscode_MarkedString_to_js x1483)
        let (get_renderOptions : t -> vscode_DecorationInstanceRenderOptions)
          =
          fun (x1486 : t) ->
            vscode_DecorationInstanceRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1486) "renderOptions")
        let (set_renderOptions :
          t -> vscode_DecorationInstanceRenderOptions -> unit) =
          fun (x1487 : t) ->
            fun (x1488 : vscode_DecorationInstanceRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1487) "renderOptions"
                (vscode_DecorationInstanceRenderOptions_to_js x1488)
      end
    module ThemableDecorationInstanceRenderOptions =
      struct
        type t = vscode_ThemableDecorationInstanceRenderOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1490 : Ojs.t) ->
            vscode_ThemableDecorationInstanceRenderOptions_of_js x1490
        and t_to_js : t -> Ojs.t =
          fun (x1489 : vscode_ThemableDecorationInstanceRenderOptions) ->
            vscode_ThemableDecorationInstanceRenderOptions_to_js x1489
        let (get_before :
          t -> vscode_ThemableDecorationAttachmentRenderOptions) =
          fun (x1491 : t) ->
            vscode_ThemableDecorationAttachmentRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1491) "before")
        let (set_before :
          t -> vscode_ThemableDecorationAttachmentRenderOptions -> unit) =
          fun (x1492 : t) ->
            fun (x1493 : vscode_ThemableDecorationAttachmentRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1492) "before"
                (vscode_ThemableDecorationAttachmentRenderOptions_to_js x1493)
        let (get_after :
          t -> vscode_ThemableDecorationAttachmentRenderOptions) =
          fun (x1494 : t) ->
            vscode_ThemableDecorationAttachmentRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1494) "after")
        let (set_after :
          t -> vscode_ThemableDecorationAttachmentRenderOptions -> unit) =
          fun (x1495 : t) ->
            fun (x1496 : vscode_ThemableDecorationAttachmentRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1495) "after"
                (vscode_ThemableDecorationAttachmentRenderOptions_to_js x1496)
      end
    module DecorationInstanceRenderOptions =
      struct
        type t = vscode_DecorationInstanceRenderOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1498 : Ojs.t) ->
            vscode_DecorationInstanceRenderOptions_of_js x1498
        and t_to_js : t -> Ojs.t =
          fun (x1497 : vscode_DecorationInstanceRenderOptions) ->
            vscode_DecorationInstanceRenderOptions_to_js x1497
        let (get_light : t -> vscode_ThemableDecorationInstanceRenderOptions)
          =
          fun (x1499 : t) ->
            vscode_ThemableDecorationInstanceRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1499) "light")
        let (set_light :
          t -> vscode_ThemableDecorationInstanceRenderOptions -> unit) =
          fun (x1500 : t) ->
            fun (x1501 : vscode_ThemableDecorationInstanceRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1500) "light"
                (vscode_ThemableDecorationInstanceRenderOptions_to_js x1501)
        let (get_dark : t -> vscode_ThemableDecorationInstanceRenderOptions)
          =
          fun (x1502 : t) ->
            vscode_ThemableDecorationInstanceRenderOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1502) "dark")
        let (set_dark :
          t -> vscode_ThemableDecorationInstanceRenderOptions -> unit) =
          fun (x1503 : t) ->
            fun (x1504 : vscode_ThemableDecorationInstanceRenderOptions) ->
              Ojs.set_prop_ascii (t_to_js x1503) "dark"
                (vscode_ThemableDecorationInstanceRenderOptions_to_js x1504)
        let (cast : t -> vscode_ThemableDecorationInstanceRenderOptions) =
          fun (x1505 : t) ->
            vscode_ThemableDecorationInstanceRenderOptions_of_js
              (t_to_js x1505)
      end
    module TextEditor =
      struct
        type t = vscode_TextEditor
        let rec t_of_js : Ojs.t -> t =
          fun (x1507 : Ojs.t) -> vscode_TextEditor_of_js x1507
        and t_to_js : t -> Ojs.t =
          fun (x1506 : vscode_TextEditor) -> vscode_TextEditor_to_js x1506
        let (get_document : t -> vscode_TextDocument) =
          fun (x1508 : t) ->
            vscode_TextDocument_of_js
              (Ojs.get_prop_ascii (t_to_js x1508) "document")
        let (get_selection : t -> vscode_Selection) =
          fun (x1509 : t) ->
            vscode_Selection_of_js
              (Ojs.get_prop_ascii (t_to_js x1509) "selection")
        let (set_selection : t -> vscode_Selection -> unit) =
          fun (x1510 : t) ->
            fun (x1511 : vscode_Selection) ->
              Ojs.set_prop_ascii (t_to_js x1510) "selection"
                (vscode_Selection_to_js x1511)
        let (get_selections : t -> vscode_Selection list) =
          fun (x1512 : t) ->
            Ojs.list_of_js vscode_Selection_of_js
              (Ojs.get_prop_ascii (t_to_js x1512) "selections")
        let (set_selections : t -> vscode_Selection list -> unit) =
          fun (x1514 : t) ->
            fun (x1515 : vscode_Selection list) ->
              Ojs.set_prop_ascii (t_to_js x1514) "selections"
                (Ojs.list_to_js vscode_Selection_to_js x1515)
        let (get_visibleRanges : t -> vscode_Range list) =
          fun (x1517 : t) ->
            Ojs.list_of_js vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x1517) "visibleRanges")
        let (get_options : t -> vscode_TextEditorOptions) =
          fun (x1519 : t) ->
            vscode_TextEditorOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x1519) "options")
        let (set_options : t -> vscode_TextEditorOptions -> unit) =
          fun (x1520 : t) ->
            fun (x1521 : vscode_TextEditorOptions) ->
              Ojs.set_prop_ascii (t_to_js x1520) "options"
                (vscode_TextEditorOptions_to_js x1521)
        let (get_viewColumn : t -> vscode_ViewColumn) =
          fun (x1522 : t) ->
            vscode_ViewColumn_of_js
              (Ojs.get_prop_ascii (t_to_js x1522) "viewColumn")
        let (edit :
          t ->
            callback:(editBuilder:vscode_TextEditorEdit -> unit) ->
              ?options:anonymous_interface_34 -> unit -> bool _Thenable)
          =
          fun (x1528 : t) ->
            fun ~callback:(x1523 : editBuilder:vscode_TextEditorEdit -> unit)
              ->
              fun ?options:(x1524 : anonymous_interface_34 option) ->
                fun () ->
                  _Thenable_of_js Ojs.bool_of_js
                    (let x1529 = t_to_js x1528 in
                     Ojs.call (Ojs.get_prop_ascii x1529 "edit") "apply"
                       [|x1529;((let x1525 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1525 "push"
                                      [|(Ojs.fun_to_js 1
                                           (fun (x1527 : Ojs.t) ->
                                              x1523
                                                ~editBuilder:(vscode_TextEditorEdit_of_js
                                                                x1527)))|]);
                                 (match x1524 with
                                  | Some x1526 ->
                                      ignore
                                        (Ojs.call x1525 "push"
                                           [|(anonymous_interface_34_to_js
                                                x1526)|])
                                  | None -> ());
                                 x1525))|])
        let (insertSnippet :
          t ->
            snippet:vscode_SnippetString ->
              ?location:(vscode_Position, vscode_Range, vscode_Position list,
                vscode_Range list) union4 ->
                ?options:anonymous_interface_34 -> unit -> bool _Thenable)
          =
          fun (x1543 : t) ->
            fun ~snippet:(x1531 : vscode_SnippetString) ->
              fun
                ?location:(x1532 :
                            (vscode_Position, vscode_Range,
                              vscode_Position list, vscode_Range list) union4
                              option)
                ->
                fun ?options:(x1533 : anonymous_interface_34 option) ->
                  fun () ->
                    _Thenable_of_js Ojs.bool_of_js
                      (let x1544 = t_to_js x1543 in
                       Ojs.call (Ojs.get_prop_ascii x1544 "insertSnippet")
                         "apply"
                         [|x1544;((let x1534 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1534 "push"
                                        [|(vscode_SnippetString_to_js x1531)|]);
                                   (match x1532 with
                                    | Some x1536 ->
                                        ignore
                                          (Ojs.call x1534 "push"
                                             [|(union4_to_js
                                                  vscode_Position_to_js
                                                  vscode_Range_to_js
                                                  (fun
                                                     (x1539 :
                                                       vscode_Position list)
                                                     ->
                                                     Ojs.list_to_js
                                                       vscode_Position_to_js
                                                       x1539)
                                                  (fun
                                                     (x1541 :
                                                       vscode_Range list)
                                                     ->
                                                     Ojs.list_to_js
                                                       vscode_Range_to_js
                                                       x1541) x1536)|])
                                    | None -> ());
                                   (match x1533 with
                                    | Some x1535 ->
                                        ignore
                                          (Ojs.call x1534 "push"
                                             [|(anonymous_interface_34_to_js
                                                  x1535)|])
                                    | None -> ());
                                   x1534))|])
        let (setDecorations :
          t ->
            decorationType:vscode_TextEditorDecorationType ->
              rangesOrOptions:(vscode_DecorationOptions, vscode_Range) union2
                list -> unit)
          =
          fun (x1551 : t) ->
            fun ~decorationType:(x1546 : vscode_TextEditorDecorationType) ->
              fun
                ~rangesOrOptions:(x1547 :
                                   (vscode_DecorationOptions, vscode_Range)
                                     union2 list)
                ->
                ignore
                  (Ojs.call (t_to_js x1551) "setDecorations"
                     [|(vscode_TextEditorDecorationType_to_js x1546);(
                       Ojs.list_to_js
                         (fun
                            (x1548 :
                              (vscode_DecorationOptions, vscode_Range) union2)
                            ->
                            union2_to_js vscode_DecorationOptions_to_js
                              vscode_Range_to_js x1548) x1547)|])
        let (revealRange :
          t ->
            range:vscode_Range ->
              ?revealType:vscode_TextEditorRevealType -> unit -> unit)
          =
          fun (x1556 : t) ->
            fun ~range:(x1552 : vscode_Range) ->
              fun ?revealType:(x1553 : vscode_TextEditorRevealType option) ->
                fun () ->
                  ignore
                    (let x1557 = t_to_js x1556 in
                     Ojs.call (Ojs.get_prop_ascii x1557 "revealRange")
                       "apply"
                       [|x1557;((let x1554 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1554 "push"
                                      [|(vscode_Range_to_js x1552)|]);
                                 (match x1553 with
                                  | Some x1555 ->
                                      ignore
                                        (Ojs.call x1554 "push"
                                           [|(vscode_TextEditorRevealType_to_js
                                                x1555)|])
                                  | None -> ());
                                 x1554))|])
        let (show : t -> ?column:vscode_ViewColumn -> unit -> unit) =
          fun (x1561 : t) ->
            fun ?column:(x1558 : vscode_ViewColumn option) ->
              fun () ->
                ignore
                  (let x1562 = t_to_js x1561 in
                   Ojs.call (Ojs.get_prop_ascii x1562 "show") "apply"
                     [|x1562;((let x1559 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x1558 with
                                | Some x1560 ->
                                    ignore
                                      (Ojs.call x1559 "push"
                                         [|(vscode_ViewColumn_to_js x1560)|])
                                | None -> ());
                               x1559))|])
        let (hide : t -> unit) =
          fun (x1563 : t) -> ignore (Ojs.call (t_to_js x1563) "hide" [||])
      end
    module EndOfLine =
      struct
        type t = vscode_EndOfLine
        let rec t_of_js : Ojs.t -> t =
          fun (x1565 : Ojs.t) -> vscode_EndOfLine_of_js x1565
        and t_to_js : t -> Ojs.t =
          fun (x1564 : vscode_EndOfLine) -> vscode_EndOfLine_to_js x1564
      end
    module TextEditorEdit =
      struct
        type t = vscode_TextEditorEdit
        let rec t_of_js : Ojs.t -> t =
          fun (x1567 : Ojs.t) -> vscode_TextEditorEdit_of_js x1567
        and t_to_js : t -> Ojs.t =
          fun (x1566 : vscode_TextEditorEdit) ->
            vscode_TextEditorEdit_to_js x1566
        let (replace :
          t ->
            location:(vscode_Position, vscode_Range, vscode_Selection) union3
              -> value:string -> unit)
          =
          fun (x1573 : t) ->
            fun
              ~location:(x1568 :
                          (vscode_Position, vscode_Range, vscode_Selection)
                            union3)
              ->
              fun ~value:(x1572 : string) ->
                ignore
                  (Ojs.call (t_to_js x1573) "replace"
                     [|(union3_to_js vscode_Position_to_js vscode_Range_to_js
                          vscode_Selection_to_js x1568);(Ojs.string_to_js
                                                           x1572)|])
        let (insert : t -> location:vscode_Position -> value:string -> unit)
          =
          fun (x1576 : t) ->
            fun ~location:(x1574 : vscode_Position) ->
              fun ~value:(x1575 : string) ->
                ignore
                  (Ojs.call (t_to_js x1576) "insert"
                     [|(vscode_Position_to_js x1574);(Ojs.string_to_js x1575)|])
        let (delete :
          t -> location:(vscode_Range, vscode_Selection) union2 -> unit) =
          fun (x1580 : t) ->
            fun ~location:(x1577 : (vscode_Range, vscode_Selection) union2)
              ->
              ignore
                (Ojs.call (t_to_js x1580) "delete"
                   [|(union2_to_js vscode_Range_to_js vscode_Selection_to_js
                        x1577)|])
        let (setEndOfLine : t -> endOfLine:vscode_EndOfLine -> unit) =
          fun (x1582 : t) ->
            fun ~endOfLine:(x1581 : vscode_EndOfLine) ->
              ignore
                (Ojs.call (t_to_js x1582) "setEndOfLine"
                   [|(vscode_EndOfLine_to_js x1581)|])
      end
    module Uri =
      struct
        type t = vscode_Uri
        let rec t_of_js : Ojs.t -> t =
          fun (x1584 : Ojs.t) -> vscode_Uri_of_js x1584
        and t_to_js : t -> Ojs.t =
          fun (x1583 : vscode_Uri) -> vscode_Uri_to_js x1583
        let (parse : value:string -> ?strict:bool -> unit -> t) =
          fun ~value:(x1585 : string) ->
            fun ?strict:(x1586 : bool option) ->
              fun () ->
                t_of_js
                  (let x1589 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "Uri" in
                   Ojs.call (Ojs.get_prop_ascii x1589 "parse") "apply"
                     [|x1589;((let x1587 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1587 "push"
                                    [|(Ojs.string_to_js x1585)|]);
                               (match x1586 with
                                | Some x1588 ->
                                    ignore
                                      (Ojs.call x1587 "push"
                                         [|(Ojs.bool_to_js x1588)|])
                                | None -> ());
                               x1587))|])
        let (file : path:string -> t) =
          fun ~path:(x1590 : string) ->
            t_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "Uri") "file" [|(Ojs.string_to_js x1590)|])
        let (joinPath : base:t -> pathSegments:string list -> t) =
          fun ~base:(x1591 : t) ->
            fun ~pathSegments:(x1592 : string list) ->
              t_of_js
                (let x1595 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "Uri" in
                 Ojs.call (Ojs.get_prop_ascii x1595 "joinPath") "apply"
                   [|x1595;((let x1593 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1593 "push" [|(t_to_js x1591)|]);
                             List.iter
                               (fun (x1594 : string) ->
                                  ignore
                                    (Ojs.call x1593 "push"
                                       [|(Ojs.string_to_js x1594)|])) x1592;
                             x1593))|])
        let (create :
          scheme:string ->
            authority:string ->
              path:string -> query:string -> fragment:string -> t)
          =
          fun ~scheme:(x1596 : string) ->
            fun ~authority:(x1597 : string) ->
              fun ~path:(x1598 : string) ->
                fun ~query:(x1599 : string) ->
                  fun ~fragment:(x1600 : string) ->
                    t_of_js
                      (Ojs.new_obj
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "vscode") "Uri")
                         [|(Ojs.string_to_js x1596);(Ojs.string_to_js x1597);(
                           Ojs.string_to_js x1598);(Ojs.string_to_js x1599);(
                           Ojs.string_to_js x1600)|])
        let (get_scheme : t -> string) =
          fun (x1601 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1601) "scheme")
        let (get_authority : t -> string) =
          fun (x1602 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1602) "authority")
        let (get_path : t -> string) =
          fun (x1603 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1603) "path")
        let (get_query : t -> string) =
          fun (x1604 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1604) "query")
        let (get_fragment : t -> string) =
          fun (x1605 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1605) "fragment")
        let (get_fsPath : t -> string) =
          fun (x1606 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1606) "fsPath")
        let (with_ : t -> change:anonymous_interface_30 -> t) =
          fun (x1608 : t) ->
            fun ~change:(x1607 : anonymous_interface_30) ->
              t_of_js
                (Ojs.call (t_to_js x1608) "with"
                   [|(anonymous_interface_30_to_js x1607)|])
        let (toString : t -> ?skipEncoding:bool -> unit -> string) =
          fun (x1612 : t) ->
            fun ?skipEncoding:(x1609 : bool option) ->
              fun () ->
                Ojs.string_of_js
                  (let x1613 = t_to_js x1612 in
                   Ojs.call (Ojs.get_prop_ascii x1613 "toString") "apply"
                     [|x1613;((let x1610 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x1609 with
                                | Some x1611 ->
                                    ignore
                                      (Ojs.call x1610 "push"
                                         [|(Ojs.bool_to_js x1611)|])
                                | None -> ());
                               x1610))|])
        let (toJSON : t -> any) =
          fun (x1614 : t) ->
            any_of_js (Ojs.call (t_to_js x1614) "toJSON" [||])
      end
    module CancellationToken =
      struct
        type t = vscode_CancellationToken
        let rec t_of_js : Ojs.t -> t =
          fun (x1616 : Ojs.t) -> vscode_CancellationToken_of_js x1616
        and t_to_js : t -> Ojs.t =
          fun (x1615 : vscode_CancellationToken) ->
            vscode_CancellationToken_to_js x1615
        let (get_isCancellationRequested : t -> bool) =
          fun (x1617 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1617) "isCancellationRequested")
        let (set_isCancellationRequested : t -> bool -> unit) =
          fun (x1618 : t) ->
            fun (x1619 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1618) "isCancellationRequested"
                (Ojs.bool_to_js x1619)
        let (get_onCancellationRequested : t -> any vscode_Event) =
          fun (x1620 : t) ->
            vscode_Event_of_js any_of_js
              (Ojs.get_prop_ascii (t_to_js x1620) "onCancellationRequested")
        let (set_onCancellationRequested : t -> any vscode_Event -> unit) =
          fun (x1622 : t) ->
            fun (x1623 : any vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x1622) "onCancellationRequested"
                (vscode_Event_to_js any_to_js x1623)
      end
    module CancellationTokenSource =
      struct
        type t = vscode_CancellationTokenSource
        let rec t_of_js : Ojs.t -> t =
          fun (x1626 : Ojs.t) -> vscode_CancellationTokenSource_of_js x1626
        and t_to_js : t -> Ojs.t =
          fun (x1625 : vscode_CancellationTokenSource) ->
            vscode_CancellationTokenSource_to_js x1625
        let (get_token : t -> vscode_CancellationToken) =
          fun (x1627 : t) ->
            vscode_CancellationToken_of_js
              (Ojs.get_prop_ascii (t_to_js x1627) "token")
        let (set_token : t -> vscode_CancellationToken -> unit) =
          fun (x1628 : t) ->
            fun (x1629 : vscode_CancellationToken) ->
              Ojs.set_prop_ascii (t_to_js x1628) "token"
                (vscode_CancellationToken_to_js x1629)
        let (cancel : t -> unit) =
          fun (x1630 : t) -> ignore (Ojs.call (t_to_js x1630) "cancel" [||])
        let (dispose : t -> unit) =
          fun (x1631 : t) -> ignore (Ojs.call (t_to_js x1631) "dispose" [||])
      end
    module CancellationError =
      struct
        type t = vscode_CancellationError
        let rec t_of_js : Ojs.t -> t =
          fun (x1633 : Ojs.t) -> vscode_CancellationError_of_js x1633
        and t_to_js : t -> Ojs.t =
          fun (x1632 : vscode_CancellationError) ->
            vscode_CancellationError_to_js x1632
        let (create : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CancellationError") [||])
        let (cast : t -> Error.t) =
          fun (x1634 : t) -> Error.t_of_js (t_to_js x1634)
      end
    module Disposable =
      struct
        type t = vscode_Disposable
        let rec t_of_js : Ojs.t -> t =
          fun (x1636 : Ojs.t) -> vscode_Disposable_of_js x1636
        and t_to_js : t -> Ojs.t =
          fun (x1635 : vscode_Disposable) -> vscode_Disposable_to_js x1635
        let (from : disposableLikes:anonymous_interface_5 list -> t) =
          fun ~disposableLikes:(x1637 : anonymous_interface_5 list) ->
            t_of_js
              (let x1640 =
                 Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                   "Disposable" in
               Ojs.call (Ojs.get_prop_ascii x1640 "from") "apply"
                 [|x1640;((let x1638 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           List.iter
                             (fun (x1639 : anonymous_interface_5) ->
                                ignore
                                  (Ojs.call x1638 "push"
                                     [|(anonymous_interface_5_to_js x1639)|]))
                             x1637;
                           x1638))|])
        let (create : callOnDispose:untyped_function -> t) =
          fun ~callOnDispose:(x1641 : untyped_function) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "Disposable") [|(untyped_function_to_js x1641)|])
        let (dispose : t -> any) =
          fun (x1642 : t) ->
            any_of_js (Ojs.call (t_to_js x1642) "dispose" [||])
      end
    module Event =
      struct
        type 'T t = 'T vscode_Event
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x1645 : Ojs.t) -> vscode_Event_of_js __T_of_js x1645
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x1643 : __T vscode_Event) ->
              vscode_Event_to_js __T_to_js x1643
        let (apply :
          'T t ->
            listener:(e:'T -> any) ->
              ?thisArgs:any ->
                ?disposables:vscode_Disposable list ->
                  unit -> vscode_Disposable)
          =
          fun (x1655 : 'T t) ->
            fun ~listener:(x1647 : e:'T -> any) ->
              fun ?thisArgs:(x1648 : any option) ->
                fun ?disposables:(x1649 : vscode_Disposable list option) ->
                  fun () ->
                    vscode_Disposable_of_js
                      (Ojs.call (t_to_js Obj.magic x1655) "apply"
                         [|Ojs.null;((let x1650 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      ignore
                                        (Ojs.call x1650 "push"
                                           [|(Ojs.fun_to_js 1
                                                (fun (x1654 : Ojs.t) ->
                                                   any_to_js
                                                     (x1647
                                                        ~e:(Obj.magic x1654))))|]);
                                      (match x1648 with
                                       | Some x1653 ->
                                           ignore
                                             (Ojs.call x1650 "push"
                                                [|(any_to_js x1653)|])
                                       | None -> ());
                                      (match x1649 with
                                       | Some x1651 ->
                                           ignore
                                             (Ojs.call x1650 "push"
                                                [|(Ojs.list_to_js
                                                     vscode_Disposable_to_js
                                                     x1651)|])
                                       | None -> ());
                                      x1650))|])
      end
    module EventEmitter =
      struct
        type 'T t = 'T vscode_EventEmitter
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x1659 : Ojs.t) -> vscode_EventEmitter_of_js __T_of_js x1659
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x1657 : __T vscode_EventEmitter) ->
              vscode_EventEmitter_to_js __T_to_js x1657
        let (get_event : 'T t -> 'T vscode_Event) =
          fun (x1661 : 'T t) ->
            vscode_Event_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x1661) "event")
        let (set_event : 'T t -> 'T vscode_Event -> unit) =
          fun (x1664 : 'T t) ->
            fun (x1665 : 'T vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x1664) "event"
                (vscode_Event_to_js Obj.magic x1665)
        let (fire : 'T t -> data:'T -> unit) =
          fun (x1669 : 'T t) ->
            fun ~data:(x1668 : 'T) ->
              ignore
                (Ojs.call (t_to_js Obj.magic x1669) "fire"
                   [|(Obj.magic x1668)|])
        let (dispose : 'T t -> unit) =
          fun (x1671 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x1671) "dispose" [||])
      end
    module FileSystemWatcher =
      struct
        type t = vscode_FileSystemWatcher
        let rec t_of_js : Ojs.t -> t =
          fun (x1674 : Ojs.t) -> vscode_FileSystemWatcher_of_js x1674
        and t_to_js : t -> Ojs.t =
          fun (x1673 : vscode_FileSystemWatcher) ->
            vscode_FileSystemWatcher_to_js x1673
        let (get_ignoreCreateEvents : t -> bool) =
          fun (x1675 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1675) "ignoreCreateEvents")
        let (set_ignoreCreateEvents : t -> bool -> unit) =
          fun (x1676 : t) ->
            fun (x1677 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1676) "ignoreCreateEvents"
                (Ojs.bool_to_js x1677)
        let (get_ignoreChangeEvents : t -> bool) =
          fun (x1678 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1678) "ignoreChangeEvents")
        let (set_ignoreChangeEvents : t -> bool -> unit) =
          fun (x1679 : t) ->
            fun (x1680 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1679) "ignoreChangeEvents"
                (Ojs.bool_to_js x1680)
        let (get_ignoreDeleteEvents : t -> bool) =
          fun (x1681 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1681) "ignoreDeleteEvents")
        let (set_ignoreDeleteEvents : t -> bool -> unit) =
          fun (x1682 : t) ->
            fun (x1683 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1682) "ignoreDeleteEvents"
                (Ojs.bool_to_js x1683)
        let (get_onDidCreate : t -> vscode_Uri vscode_Event) =
          fun (x1684 : t) ->
            vscode_Event_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1684) "onDidCreate")
        let (set_onDidCreate : t -> vscode_Uri vscode_Event -> unit) =
          fun (x1686 : t) ->
            fun (x1687 : vscode_Uri vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x1686) "onDidCreate"
                (vscode_Event_to_js vscode_Uri_to_js x1687)
        let (get_onDidChange : t -> vscode_Uri vscode_Event) =
          fun (x1689 : t) ->
            vscode_Event_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1689) "onDidChange")
        let (set_onDidChange : t -> vscode_Uri vscode_Event -> unit) =
          fun (x1691 : t) ->
            fun (x1692 : vscode_Uri vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x1691) "onDidChange"
                (vscode_Event_to_js vscode_Uri_to_js x1692)
        let (get_onDidDelete : t -> vscode_Uri vscode_Event) =
          fun (x1694 : t) ->
            vscode_Event_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1694) "onDidDelete")
        let (set_onDidDelete : t -> vscode_Uri vscode_Event -> unit) =
          fun (x1696 : t) ->
            fun (x1697 : vscode_Uri vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x1696) "onDidDelete"
                (vscode_Event_to_js vscode_Uri_to_js x1697)
        let (cast : t -> vscode_Disposable) =
          fun (x1699 : t) -> vscode_Disposable_of_js (t_to_js x1699)
      end
    module TextDocumentContentProvider =
      struct
        type t = vscode_TextDocumentContentProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x1701 : Ojs.t) ->
            vscode_TextDocumentContentProvider_of_js x1701
        and t_to_js : t -> Ojs.t =
          fun (x1700 : vscode_TextDocumentContentProvider) ->
            vscode_TextDocumentContentProvider_to_js x1700
        let (get_onDidChange : t -> vscode_Uri vscode_Event) =
          fun (x1702 : t) ->
            vscode_Event_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1702) "onDidChange")
        let (set_onDidChange : t -> vscode_Uri vscode_Event -> unit) =
          fun (x1704 : t) ->
            fun (x1705 : vscode_Uri vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x1704) "onDidChange"
                (vscode_Event_to_js vscode_Uri_to_js x1705)
        let (provideTextDocumentContent :
          t ->
            uri:vscode_Uri ->
              token:vscode_CancellationToken -> string vscode_ProviderResult)
          =
          fun (x1709 : t) ->
            fun ~uri:(x1707 : vscode_Uri) ->
              fun ~token:(x1708 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Ojs.string_of_js
                  (Ojs.call (t_to_js x1709) "provideTextDocumentContent"
                     [|(vscode_Uri_to_js x1707);(vscode_CancellationToken_to_js
                                                   x1708)|])
      end
    module QuickPickItem =
      struct
        type t = vscode_QuickPickItem
        let rec t_of_js : Ojs.t -> t =
          fun (x1712 : Ojs.t) -> vscode_QuickPickItem_of_js x1712
        and t_to_js : t -> Ojs.t =
          fun (x1711 : vscode_QuickPickItem) ->
            vscode_QuickPickItem_to_js x1711
        let (get_label : t -> string) =
          fun (x1713 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1713) "label")
        let (set_label : t -> string -> unit) =
          fun (x1714 : t) ->
            fun (x1715 : string) ->
              Ojs.set_prop_ascii (t_to_js x1714) "label"
                (Ojs.string_to_js x1715)
        let (get_description : t -> string) =
          fun (x1716 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1716) "description")
        let (set_description : t -> string -> unit) =
          fun (x1717 : t) ->
            fun (x1718 : string) ->
              Ojs.set_prop_ascii (t_to_js x1717) "description"
                (Ojs.string_to_js x1718)
        let (get_detail : t -> string) =
          fun (x1719 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1719) "detail")
        let (set_detail : t -> string -> unit) =
          fun (x1720 : t) ->
            fun (x1721 : string) ->
              Ojs.set_prop_ascii (t_to_js x1720) "detail"
                (Ojs.string_to_js x1721)
        let (get_picked : t -> bool) =
          fun (x1722 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1722) "picked")
        let (set_picked : t -> bool -> unit) =
          fun (x1723 : t) ->
            fun (x1724 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1723) "picked"
                (Ojs.bool_to_js x1724)
        let (get_alwaysShow : t -> bool) =
          fun (x1725 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1725) "alwaysShow")
        let (set_alwaysShow : t -> bool -> unit) =
          fun (x1726 : t) ->
            fun (x1727 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1726) "alwaysShow"
                (Ojs.bool_to_js x1727)
      end
    module QuickPickOptions =
      struct
        type t = vscode_QuickPickOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1729 : Ojs.t) -> vscode_QuickPickOptions_of_js x1729
        and t_to_js : t -> Ojs.t =
          fun (x1728 : vscode_QuickPickOptions) ->
            vscode_QuickPickOptions_to_js x1728
        let (get_matchOnDescription : t -> bool) =
          fun (x1730 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1730) "matchOnDescription")
        let (set_matchOnDescription : t -> bool -> unit) =
          fun (x1731 : t) ->
            fun (x1732 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1731) "matchOnDescription"
                (Ojs.bool_to_js x1732)
        let (get_matchOnDetail : t -> bool) =
          fun (x1733 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1733) "matchOnDetail")
        let (set_matchOnDetail : t -> bool -> unit) =
          fun (x1734 : t) ->
            fun (x1735 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1734) "matchOnDetail"
                (Ojs.bool_to_js x1735)
        let (get_placeHolder : t -> string) =
          fun (x1736 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1736) "placeHolder")
        let (set_placeHolder : t -> string -> unit) =
          fun (x1737 : t) ->
            fun (x1738 : string) ->
              Ojs.set_prop_ascii (t_to_js x1737) "placeHolder"
                (Ojs.string_to_js x1738)
        let (get_ignoreFocusOut : t -> bool) =
          fun (x1739 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1739) "ignoreFocusOut")
        let (set_ignoreFocusOut : t -> bool -> unit) =
          fun (x1740 : t) ->
            fun (x1741 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1740) "ignoreFocusOut"
                (Ojs.bool_to_js x1741)
        let (get_canPickMany : t -> bool) =
          fun (x1742 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1742) "canPickMany")
        let (set_canPickMany : t -> bool -> unit) =
          fun (x1743 : t) ->
            fun (x1744 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1743) "canPickMany"
                (Ojs.bool_to_js x1744)
        let (onDidSelectItem :
          t -> item:vscode_QuickPickItem or_string -> any) =
          fun (x1747 : t) ->
            fun ~item:(x1745 : vscode_QuickPickItem or_string) ->
              any_of_js
                (Ojs.call (t_to_js x1747) "onDidSelectItem"
                   [|(or_string_to_js vscode_QuickPickItem_to_js x1745)|])
      end
    module WorkspaceFolderPickOptions =
      struct
        type t = vscode_WorkspaceFolderPickOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1749 : Ojs.t) ->
            vscode_WorkspaceFolderPickOptions_of_js x1749
        and t_to_js : t -> Ojs.t =
          fun (x1748 : vscode_WorkspaceFolderPickOptions) ->
            vscode_WorkspaceFolderPickOptions_to_js x1748
        let (get_placeHolder : t -> string) =
          fun (x1750 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1750) "placeHolder")
        let (set_placeHolder : t -> string -> unit) =
          fun (x1751 : t) ->
            fun (x1752 : string) ->
              Ojs.set_prop_ascii (t_to_js x1751) "placeHolder"
                (Ojs.string_to_js x1752)
        let (get_ignoreFocusOut : t -> bool) =
          fun (x1753 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1753) "ignoreFocusOut")
        let (set_ignoreFocusOut : t -> bool -> unit) =
          fun (x1754 : t) ->
            fun (x1755 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1754) "ignoreFocusOut"
                (Ojs.bool_to_js x1755)
      end
    module OpenDialogOptions =
      struct
        type t = vscode_OpenDialogOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1757 : Ojs.t) -> vscode_OpenDialogOptions_of_js x1757
        and t_to_js : t -> Ojs.t =
          fun (x1756 : vscode_OpenDialogOptions) ->
            vscode_OpenDialogOptions_to_js x1756
        let (get_defaultUri : t -> vscode_Uri) =
          fun (x1758 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1758) "defaultUri")
        let (set_defaultUri : t -> vscode_Uri -> unit) =
          fun (x1759 : t) ->
            fun (x1760 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x1759) "defaultUri"
                (vscode_Uri_to_js x1760)
        let (get_openLabel : t -> string) =
          fun (x1761 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1761) "openLabel")
        let (set_openLabel : t -> string -> unit) =
          fun (x1762 : t) ->
            fun (x1763 : string) ->
              Ojs.set_prop_ascii (t_to_js x1762) "openLabel"
                (Ojs.string_to_js x1763)
        let (get_canSelectFiles : t -> bool) =
          fun (x1764 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1764) "canSelectFiles")
        let (set_canSelectFiles : t -> bool -> unit) =
          fun (x1765 : t) ->
            fun (x1766 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1765) "canSelectFiles"
                (Ojs.bool_to_js x1766)
        let (get_canSelectFolders : t -> bool) =
          fun (x1767 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1767) "canSelectFolders")
        let (set_canSelectFolders : t -> bool -> unit) =
          fun (x1768 : t) ->
            fun (x1769 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1768) "canSelectFolders"
                (Ojs.bool_to_js x1769)
        let (get_canSelectMany : t -> bool) =
          fun (x1770 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1770) "canSelectMany")
        let (set_canSelectMany : t -> bool -> unit) =
          fun (x1771 : t) ->
            fun (x1772 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1771) "canSelectMany"
                (Ojs.bool_to_js x1772)
        let (get_filters : t -> anonymous_interface_46) =
          fun (x1773 : t) ->
            anonymous_interface_46_of_js
              (Ojs.get_prop_ascii (t_to_js x1773) "filters")
        let (set_filters : t -> anonymous_interface_46 -> unit) =
          fun (x1774 : t) ->
            fun (x1775 : anonymous_interface_46) ->
              Ojs.set_prop_ascii (t_to_js x1774) "filters"
                (anonymous_interface_46_to_js x1775)
        let (get_title : t -> string) =
          fun (x1776 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1776) "title")
        let (set_title : t -> string -> unit) =
          fun (x1777 : t) ->
            fun (x1778 : string) ->
              Ojs.set_prop_ascii (t_to_js x1777) "title"
                (Ojs.string_to_js x1778)
      end
    module SaveDialogOptions =
      struct
        type t = vscode_SaveDialogOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1780 : Ojs.t) -> vscode_SaveDialogOptions_of_js x1780
        and t_to_js : t -> Ojs.t =
          fun (x1779 : vscode_SaveDialogOptions) ->
            vscode_SaveDialogOptions_to_js x1779
        let (get_defaultUri : t -> vscode_Uri) =
          fun (x1781 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x1781) "defaultUri")
        let (set_defaultUri : t -> vscode_Uri -> unit) =
          fun (x1782 : t) ->
            fun (x1783 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x1782) "defaultUri"
                (vscode_Uri_to_js x1783)
        let (get_saveLabel : t -> string) =
          fun (x1784 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1784) "saveLabel")
        let (set_saveLabel : t -> string -> unit) =
          fun (x1785 : t) ->
            fun (x1786 : string) ->
              Ojs.set_prop_ascii (t_to_js x1785) "saveLabel"
                (Ojs.string_to_js x1786)
        let (get_filters : t -> anonymous_interface_46) =
          fun (x1787 : t) ->
            anonymous_interface_46_of_js
              (Ojs.get_prop_ascii (t_to_js x1787) "filters")
        let (set_filters : t -> anonymous_interface_46 -> unit) =
          fun (x1788 : t) ->
            fun (x1789 : anonymous_interface_46) ->
              Ojs.set_prop_ascii (t_to_js x1788) "filters"
                (anonymous_interface_46_to_js x1789)
        let (get_title : t -> string) =
          fun (x1790 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1790) "title")
        let (set_title : t -> string -> unit) =
          fun (x1791 : t) ->
            fun (x1792 : string) ->
              Ojs.set_prop_ascii (t_to_js x1791) "title"
                (Ojs.string_to_js x1792)
      end
    module MessageItem =
      struct
        type t = vscode_MessageItem
        let rec t_of_js : Ojs.t -> t =
          fun (x1794 : Ojs.t) -> vscode_MessageItem_of_js x1794
        and t_to_js : t -> Ojs.t =
          fun (x1793 : vscode_MessageItem) -> vscode_MessageItem_to_js x1793
        let (get_title : t -> string) =
          fun (x1795 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1795) "title")
        let (set_title : t -> string -> unit) =
          fun (x1796 : t) ->
            fun (x1797 : string) ->
              Ojs.set_prop_ascii (t_to_js x1796) "title"
                (Ojs.string_to_js x1797)
        let (get_isCloseAffordance : t -> bool) =
          fun (x1798 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1798) "isCloseAffordance")
        let (set_isCloseAffordance : t -> bool -> unit) =
          fun (x1799 : t) ->
            fun (x1800 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1799) "isCloseAffordance"
                (Ojs.bool_to_js x1800)
      end
    module MessageOptions =
      struct
        type t = vscode_MessageOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1802 : Ojs.t) -> vscode_MessageOptions_of_js x1802
        and t_to_js : t -> Ojs.t =
          fun (x1801 : vscode_MessageOptions) ->
            vscode_MessageOptions_to_js x1801
        let (get_modal : t -> bool) =
          fun (x1803 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1803) "modal")
        let (set_modal : t -> bool -> unit) =
          fun (x1804 : t) ->
            fun (x1805 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1804) "modal"
                (Ojs.bool_to_js x1805)
      end
    module InputBoxOptions =
      struct
        type t = vscode_InputBoxOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1807 : Ojs.t) -> vscode_InputBoxOptions_of_js x1807
        and t_to_js : t -> Ojs.t =
          fun (x1806 : vscode_InputBoxOptions) ->
            vscode_InputBoxOptions_to_js x1806
        let (get_value : t -> string) =
          fun (x1808 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1808) "value")
        let (set_value : t -> string -> unit) =
          fun (x1809 : t) ->
            fun (x1810 : string) ->
              Ojs.set_prop_ascii (t_to_js x1809) "value"
                (Ojs.string_to_js x1810)
        let (get_valueSelection : t -> (float * float)) =
          fun (x1811 : t) ->
            let x1812 = Ojs.get_prop_ascii (t_to_js x1811) "valueSelection" in
            ((Ojs.float_of_js (Ojs.array_get x1812 0)),
              (Ojs.float_of_js (Ojs.array_get x1812 1)))
        let (set_valueSelection : t -> (float * float) -> unit) =
          fun (x1813 : t) ->
            fun (x1814 : (float * float)) ->
              Ojs.set_prop_ascii (t_to_js x1813) "valueSelection"
                (let (x1815, x1816) = x1814 in
                 let x1817 = Ojs.array_make 2 in
                 Ojs.array_set x1817 0 (Ojs.float_to_js x1815);
                 Ojs.array_set x1817 1 (Ojs.float_to_js x1816);
                 x1817)
        let (get_prompt : t -> string) =
          fun (x1818 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1818) "prompt")
        let (set_prompt : t -> string -> unit) =
          fun (x1819 : t) ->
            fun (x1820 : string) ->
              Ojs.set_prop_ascii (t_to_js x1819) "prompt"
                (Ojs.string_to_js x1820)
        let (get_placeHolder : t -> string) =
          fun (x1821 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x1821) "placeHolder")
        let (set_placeHolder : t -> string -> unit) =
          fun (x1822 : t) ->
            fun (x1823 : string) ->
              Ojs.set_prop_ascii (t_to_js x1822) "placeHolder"
                (Ojs.string_to_js x1823)
        let (get_password : t -> bool) =
          fun (x1824 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1824) "password")
        let (set_password : t -> bool -> unit) =
          fun (x1825 : t) ->
            fun (x1826 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1825) "password"
                (Ojs.bool_to_js x1826)
        let (get_ignoreFocusOut : t -> bool) =
          fun (x1827 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x1827) "ignoreFocusOut")
        let (set_ignoreFocusOut : t -> bool -> unit) =
          fun (x1828 : t) ->
            fun (x1829 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1828) "ignoreFocusOut"
                (Ojs.bool_to_js x1829)
        let (validateInput :
          t ->
            value:string ->
              string or_null_or_undefined _Thenable or_string
                or_null_or_undefined)
          =
          fun (x1831 : t) ->
            fun ~value:(x1830 : string) ->
              or_null_or_undefined_of_js
                (fun (x1832 : Ojs.t) ->
                   or_string_of_js
                     (fun (x1833 : Ojs.t) ->
                        _Thenable_of_js
                          (fun (x1834 : Ojs.t) ->
                             or_null_or_undefined_of_js Ojs.string_of_js
                               x1834) x1833) x1832)
                (Ojs.call (t_to_js x1831) "validateInput"
                   [|(Ojs.string_to_js x1830)|])
      end
    module RelativePattern =
      struct
        type t = vscode_RelativePattern
        let rec t_of_js : Ojs.t -> t =
          fun (x1837 : Ojs.t) -> vscode_RelativePattern_of_js x1837
        and t_to_js : t -> Ojs.t =
          fun (x1836 : vscode_RelativePattern) ->
            vscode_RelativePattern_to_js x1836
        let (get_base : t -> string) =
          fun (x1838 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1838) "base")
        let (set_base : t -> string -> unit) =
          fun (x1839 : t) ->
            fun (x1840 : string) ->
              Ojs.set_prop_ascii (t_to_js x1839) "base"
                (Ojs.string_to_js x1840)
        let (get_pattern : t -> string) =
          fun (x1841 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1841) "pattern")
        let (set_pattern : t -> string -> unit) =
          fun (x1842 : t) ->
            fun (x1843 : string) ->
              Ojs.set_prop_ascii (t_to_js x1842) "pattern"
                (Ojs.string_to_js x1843)
        let (create :
          base:(vscode_Uri, vscode_WorkspaceFolder) union2 or_string ->
            pattern:string -> t)
          =
          fun
            ~base:(x1844 :
                    (vscode_Uri, vscode_WorkspaceFolder) union2 or_string)
            ->
            fun ~pattern:(x1848 : string) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "RelativePattern")
                   [|(or_string_to_js
                        (fun
                           (x1845 :
                             (vscode_Uri, vscode_WorkspaceFolder) union2)
                           ->
                           union2_to_js vscode_Uri_to_js
                             vscode_WorkspaceFolder_to_js x1845) x1844);(
                     Ojs.string_to_js x1848)|])
      end
    module GlobPattern =
      struct
        type t = vscode_GlobPattern
        let rec t_of_js : Ojs.t -> t =
          fun (x1850 : Ojs.t) -> vscode_GlobPattern_of_js x1850
        and t_to_js : t -> Ojs.t =
          fun (x1849 : vscode_GlobPattern) -> vscode_GlobPattern_to_js x1849
      end
    module DocumentFilter =
      struct
        type t = vscode_DocumentFilter
        let rec t_of_js : Ojs.t -> t =
          fun (x1852 : Ojs.t) -> vscode_DocumentFilter_of_js x1852
        and t_to_js : t -> Ojs.t =
          fun (x1851 : vscode_DocumentFilter) ->
            vscode_DocumentFilter_to_js x1851
        let (get_language : t -> string) =
          fun (x1853 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1853) "language")
        let (get_scheme : t -> string) =
          fun (x1854 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1854) "scheme")
        let (get_pattern : t -> vscode_GlobPattern) =
          fun (x1855 : t) ->
            vscode_GlobPattern_of_js
              (Ojs.get_prop_ascii (t_to_js x1855) "pattern")
      end
    module DocumentSelector =
      struct
        type t = vscode_DocumentSelector
        let rec t_of_js : Ojs.t -> t =
          fun (x1857 : Ojs.t) -> vscode_DocumentSelector_of_js x1857
        and t_to_js : t -> Ojs.t =
          fun (x1856 : vscode_DocumentSelector) ->
            vscode_DocumentSelector_to_js x1856
      end
    module ProviderResult =
      struct
        type 'T t = 'T vscode_ProviderResult
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x1860 : Ojs.t) ->
              vscode_ProviderResult_of_js __T_of_js x1860
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x1858 : __T vscode_ProviderResult) ->
              vscode_ProviderResult_to_js __T_to_js x1858
      end
    module CodeActionKind =
      struct
        type t = vscode_CodeActionKind
        let rec t_of_js : Ojs.t -> t =
          fun (x1863 : Ojs.t) -> vscode_CodeActionKind_of_js x1863
        and t_to_js : t -> Ojs.t =
          fun (x1862 : vscode_CodeActionKind) ->
            vscode_CodeActionKind_to_js x1862
        let (get_Empty : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "Empty")
        let (get_QuickFix : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "QuickFix")
        let (get_Refactor : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "Refactor")
        let (get_RefactorExtract : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "RefactorExtract")
        let (get_RefactorInline : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "RefactorInline")
        let (get_RefactorRewrite : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "RefactorRewrite")
        let (get_Source : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "Source")
        let (get_SourceOrganizeImports : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "SourceOrganizeImports")
        let (get_SourceFixAll : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") "SourceFixAll")
        let (create : value:string -> t) =
          fun ~value:(x1864 : string) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CodeActionKind") [|(Ojs.string_to_js x1864)|])
        let (get_value : t -> string) =
          fun (x1865 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1865) "value")
        let (append : t -> parts:string -> t) =
          fun (x1867 : t) ->
            fun ~parts:(x1866 : string) ->
              t_of_js
                (Ojs.call (t_to_js x1867) "append"
                   [|(Ojs.string_to_js x1866)|])
        let (intersects : t -> other:t -> bool) =
          fun (x1869 : t) ->
            fun ~other:(x1868 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1869) "intersects" [|(t_to_js x1868)|])
        let (contains : t -> other:t -> bool) =
          fun (x1871 : t) ->
            fun ~other:(x1870 : t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x1871) "contains" [|(t_to_js x1870)|])
      end
    module CodeActionTriggerKind =
      struct
        type t = vscode_CodeActionTriggerKind
        let rec t_of_js : Ojs.t -> t =
          fun (x1873 : Ojs.t) -> vscode_CodeActionTriggerKind_of_js x1873
        and t_to_js : t -> Ojs.t =
          fun (x1872 : vscode_CodeActionTriggerKind) ->
            vscode_CodeActionTriggerKind_to_js x1872
      end
    module CodeActionContext =
      struct
        type t = vscode_CodeActionContext
        let rec t_of_js : Ojs.t -> t =
          fun (x1875 : Ojs.t) -> vscode_CodeActionContext_of_js x1875
        and t_to_js : t -> Ojs.t =
          fun (x1874 : vscode_CodeActionContext) ->
            vscode_CodeActionContext_to_js x1874
        let (get_triggerKind : t -> vscode_CodeActionTriggerKind) =
          fun (x1876 : t) ->
            vscode_CodeActionTriggerKind_of_js
              (Ojs.get_prop_ascii (t_to_js x1876) "triggerKind")
        let (get_diagnostics : t -> vscode_Diagnostic list) =
          fun (x1877 : t) ->
            Ojs.list_of_js vscode_Diagnostic_of_js
              (Ojs.get_prop_ascii (t_to_js x1877) "diagnostics")
        let (get_only : t -> vscode_CodeActionKind) =
          fun (x1879 : t) ->
            vscode_CodeActionKind_of_js
              (Ojs.get_prop_ascii (t_to_js x1879) "only")
      end
    module CodeAction =
      struct
        type t = vscode_CodeAction
        let rec t_of_js : Ojs.t -> t =
          fun (x1881 : Ojs.t) -> vscode_CodeAction_of_js x1881
        and t_to_js : t -> Ojs.t =
          fun (x1880 : vscode_CodeAction) -> vscode_CodeAction_to_js x1880
        let (get_title : t -> string) =
          fun (x1882 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1882) "title")
        let (set_title : t -> string -> unit) =
          fun (x1883 : t) ->
            fun (x1884 : string) ->
              Ojs.set_prop_ascii (t_to_js x1883) "title"
                (Ojs.string_to_js x1884)
        let (get_edit : t -> vscode_WorkspaceEdit) =
          fun (x1885 : t) ->
            vscode_WorkspaceEdit_of_js
              (Ojs.get_prop_ascii (t_to_js x1885) "edit")
        let (set_edit : t -> vscode_WorkspaceEdit -> unit) =
          fun (x1886 : t) ->
            fun (x1887 : vscode_WorkspaceEdit) ->
              Ojs.set_prop_ascii (t_to_js x1886) "edit"
                (vscode_WorkspaceEdit_to_js x1887)
        let (get_diagnostics : t -> vscode_Diagnostic list) =
          fun (x1888 : t) ->
            Ojs.list_of_js vscode_Diagnostic_of_js
              (Ojs.get_prop_ascii (t_to_js x1888) "diagnostics")
        let (set_diagnostics : t -> vscode_Diagnostic list -> unit) =
          fun (x1890 : t) ->
            fun (x1891 : vscode_Diagnostic list) ->
              Ojs.set_prop_ascii (t_to_js x1890) "diagnostics"
                (Ojs.list_to_js vscode_Diagnostic_to_js x1891)
        let (get_command : t -> vscode_Command) =
          fun (x1893 : t) ->
            vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x1893) "command")
        let (set_command : t -> vscode_Command -> unit) =
          fun (x1894 : t) ->
            fun (x1895 : vscode_Command) ->
              Ojs.set_prop_ascii (t_to_js x1894) "command"
                (vscode_Command_to_js x1895)
        let (get_kind : t -> vscode_CodeActionKind) =
          fun (x1896 : t) ->
            vscode_CodeActionKind_of_js
              (Ojs.get_prop_ascii (t_to_js x1896) "kind")
        let (set_kind : t -> vscode_CodeActionKind -> unit) =
          fun (x1897 : t) ->
            fun (x1898 : vscode_CodeActionKind) ->
              Ojs.set_prop_ascii (t_to_js x1897) "kind"
                (vscode_CodeActionKind_to_js x1898)
        let (get_isPreferred : t -> bool) =
          fun (x1899 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1899) "isPreferred")
        let (set_isPreferred : t -> bool -> unit) =
          fun (x1900 : t) ->
            fun (x1901 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1900) "isPreferred"
                (Ojs.bool_to_js x1901)
        let (get_disabled : t -> anonymous_interface_24) =
          fun (x1902 : t) ->
            anonymous_interface_24_of_js
              (Ojs.get_prop_ascii (t_to_js x1902) "disabled")
        let (set_disabled : t -> anonymous_interface_24 -> unit) =
          fun (x1903 : t) ->
            fun (x1904 : anonymous_interface_24) ->
              Ojs.set_prop_ascii (t_to_js x1903) "disabled"
                (anonymous_interface_24_to_js x1904)
        let (create :
          title:string -> ?kind:vscode_CodeActionKind -> unit -> t) =
          fun ~title:(x1905 : string) ->
            fun ?kind:(x1906 : vscode_CodeActionKind option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "CodeAction")
                     (let x1907 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x1907 "push" [|(Ojs.string_to_js x1905)|]);
                      (match x1906 with
                       | Some x1908 ->
                           ignore
                             (Ojs.call x1907 "push"
                                [|(vscode_CodeActionKind_to_js x1908)|])
                       | None -> ());
                      x1907))
      end
    module CodeActionProvider =
      struct
        type 'T t = 'T vscode_CodeActionProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x1911 : Ojs.t) ->
              vscode_CodeActionProvider_of_js __T_of_js x1911
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x1909 : __T vscode_CodeActionProvider) ->
              vscode_CodeActionProvider_to_js __T_to_js x1909
        let (provideCodeActions :
          'T t ->
            document:vscode_TextDocument ->
              range:(vscode_Range, vscode_Selection) union2 ->
                context:vscode_CodeActionContext ->
                  token:vscode_CancellationToken ->
                    (vscode_Command, 'T) union2 list vscode_ProviderResult)
          =
          fun (x1919 : 'T t) ->
            fun ~document:(x1913 : vscode_TextDocument) ->
              fun ~range:(x1914 : (vscode_Range, vscode_Selection) union2) ->
                fun ~context:(x1917 : vscode_CodeActionContext) ->
                  fun ~token:(x1918 : vscode_CancellationToken) ->
                    vscode_ProviderResult_of_js
                      (fun (x1921 : Ojs.t) ->
                         Ojs.list_of_js
                           (fun (x1922 : Ojs.t) ->
                              union2_of_js vscode_Command_of_js Obj.magic
                                x1922) x1921)
                      (Ojs.call (t_to_js Obj.magic x1919)
                         "provideCodeActions"
                         [|(vscode_TextDocument_to_js x1913);(union2_to_js
                                                                vscode_Range_to_js
                                                                vscode_Selection_to_js
                                                                x1914);(
                           vscode_CodeActionContext_to_js x1917);(vscode_CancellationToken_to_js
                                                                    x1918)|])
        let (resolveCodeAction :
          'T t ->
            codeAction:'T ->
              token:vscode_CancellationToken -> 'T vscode_ProviderResult)
          =
          fun (x1927 : 'T t) ->
            fun ~codeAction:(x1925 : 'T) ->
              fun ~token:(x1926 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Obj.magic
                  (Ojs.call (t_to_js Obj.magic x1927) "resolveCodeAction"
                     [|(Obj.magic x1925);(vscode_CancellationToken_to_js
                                            x1926)|])
      end
    module CodeActionProviderMetadata =
      struct
        type t = vscode_CodeActionProviderMetadata
        let rec t_of_js : Ojs.t -> t =
          fun (x1931 : Ojs.t) ->
            vscode_CodeActionProviderMetadata_of_js x1931
        and t_to_js : t -> Ojs.t =
          fun (x1930 : vscode_CodeActionProviderMetadata) ->
            vscode_CodeActionProviderMetadata_to_js x1930
        let (get_providedCodeActionKinds : t -> vscode_CodeActionKind list) =
          fun (x1932 : t) ->
            Ojs.list_of_js vscode_CodeActionKind_of_js
              (Ojs.get_prop_ascii (t_to_js x1932) "providedCodeActionKinds")
        let (get_documentation : t -> anonymous_interface_11 list) =
          fun (x1934 : t) ->
            Ojs.list_of_js anonymous_interface_11_of_js
              (Ojs.get_prop_ascii (t_to_js x1934) "documentation")
      end
    module CodeLens =
      struct
        type t = vscode_CodeLens
        let rec t_of_js : Ojs.t -> t =
          fun (x1937 : Ojs.t) -> vscode_CodeLens_of_js x1937
        and t_to_js : t -> Ojs.t =
          fun (x1936 : vscode_CodeLens) -> vscode_CodeLens_to_js x1936
        let (get_range : t -> vscode_Range) =
          fun (x1938 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x1938) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x1939 : t) ->
            fun (x1940 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x1939) "range"
                (vscode_Range_to_js x1940)
        let (get_command : t -> vscode_Command) =
          fun (x1941 : t) ->
            vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x1941) "command")
        let (set_command : t -> vscode_Command -> unit) =
          fun (x1942 : t) ->
            fun (x1943 : vscode_Command) ->
              Ojs.set_prop_ascii (t_to_js x1942) "command"
                (vscode_Command_to_js x1943)
        let (get_isResolved : t -> bool) =
          fun (x1944 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1944) "isResolved")
        let (create :
          range:vscode_Range -> ?command:vscode_Command -> unit -> t) =
          fun ~range:(x1945 : vscode_Range) ->
            fun ?command:(x1946 : vscode_Command option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "CodeLens")
                     (let x1947 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x1947 "push" [|(vscode_Range_to_js x1945)|]);
                      (match x1946 with
                       | Some x1948 ->
                           ignore
                             (Ojs.call x1947 "push"
                                [|(vscode_Command_to_js x1948)|])
                       | None -> ());
                      x1947))
      end
    module CodeLensProvider =
      struct
        type 'T t = 'T vscode_CodeLensProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x1951 : Ojs.t) ->
              vscode_CodeLensProvider_of_js __T_of_js x1951
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x1949 : __T vscode_CodeLensProvider) ->
              vscode_CodeLensProvider_to_js __T_to_js x1949
        let (get_onDidChangeCodeLenses : 'T t -> unit vscode_Event) =
          fun (x1953 : 'T t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x1953)
                 "onDidChangeCodeLenses")
        let (set_onDidChangeCodeLenses : 'T t -> unit vscode_Event -> unit) =
          fun (x1956 : 'T t) ->
            fun (x1957 : unit vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x1956)
                "onDidChangeCodeLenses"
                (vscode_Event_to_js Ojs.unit_to_js x1957)
        let (provideCodeLenses :
          'T t ->
            document:vscode_TextDocument ->
              token:vscode_CancellationToken -> 'T list vscode_ProviderResult)
          =
          fun (x1962 : 'T t) ->
            fun ~document:(x1960 : vscode_TextDocument) ->
              fun ~token:(x1961 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x1964 : Ojs.t) -> Ojs.list_of_js Obj.magic x1964)
                  (Ojs.call (t_to_js Obj.magic x1962) "provideCodeLenses"
                     [|(vscode_TextDocument_to_js x1960);(vscode_CancellationToken_to_js
                                                            x1961)|])
        let (resolveCodeLens :
          'T t ->
            codeLens:'T ->
              token:vscode_CancellationToken -> 'T vscode_ProviderResult)
          =
          fun (x1968 : 'T t) ->
            fun ~codeLens:(x1966 : 'T) ->
              fun ~token:(x1967 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Obj.magic
                  (Ojs.call (t_to_js Obj.magic x1968) "resolveCodeLens"
                     [|(Obj.magic x1966);(vscode_CancellationToken_to_js
                                            x1967)|])
      end
    module DefinitionLink =
      struct
        type t = vscode_DefinitionLink
        let rec t_of_js : Ojs.t -> t =
          fun (x1972 : Ojs.t) -> vscode_DefinitionLink_of_js x1972
        and t_to_js : t -> Ojs.t =
          fun (x1971 : vscode_DefinitionLink) ->
            vscode_DefinitionLink_to_js x1971
      end
    module Definition =
      struct
        type t = vscode_Definition
        let rec t_of_js : Ojs.t -> t =
          fun (x1974 : Ojs.t) -> vscode_Definition_of_js x1974
        and t_to_js : t -> Ojs.t =
          fun (x1973 : vscode_Definition) -> vscode_Definition_to_js x1973
      end
    module DefinitionProvider =
      struct
        type t = vscode_DefinitionProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x1976 : Ojs.t) -> vscode_DefinitionProvider_of_js x1976
        and t_to_js : t -> Ojs.t =
          fun (x1975 : vscode_DefinitionProvider) ->
            vscode_DefinitionProvider_to_js x1975
        let (provideDefinition :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  (vscode_Definition, vscode_DefinitionLink) or_array
                    vscode_ProviderResult)
          =
          fun (x1980 : t) ->
            fun ~document:(x1977 : vscode_TextDocument) ->
              fun ~position:(x1978 : vscode_Position) ->
                fun ~token:(x1979 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x1981 : Ojs.t) ->
                       or_array_of_js vscode_Definition_of_js
                         vscode_DefinitionLink_of_js x1981)
                    (Ojs.call (t_to_js x1980) "provideDefinition"
                       [|(vscode_TextDocument_to_js x1977);(vscode_Position_to_js
                                                              x1978);(
                         vscode_CancellationToken_to_js x1979)|])
      end
    module ImplementationProvider =
      struct
        type t = vscode_ImplementationProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x1985 : Ojs.t) -> vscode_ImplementationProvider_of_js x1985
        and t_to_js : t -> Ojs.t =
          fun (x1984 : vscode_ImplementationProvider) ->
            vscode_ImplementationProvider_to_js x1984
        let (provideImplementation :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  (vscode_Definition, vscode_DefinitionLink) or_array
                    vscode_ProviderResult)
          =
          fun (x1989 : t) ->
            fun ~document:(x1986 : vscode_TextDocument) ->
              fun ~position:(x1987 : vscode_Position) ->
                fun ~token:(x1988 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x1990 : Ojs.t) ->
                       or_array_of_js vscode_Definition_of_js
                         vscode_DefinitionLink_of_js x1990)
                    (Ojs.call (t_to_js x1989) "provideImplementation"
                       [|(vscode_TextDocument_to_js x1986);(vscode_Position_to_js
                                                              x1987);(
                         vscode_CancellationToken_to_js x1988)|])
      end
    module TypeDefinitionProvider =
      struct
        type t = vscode_TypeDefinitionProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x1994 : Ojs.t) -> vscode_TypeDefinitionProvider_of_js x1994
        and t_to_js : t -> Ojs.t =
          fun (x1993 : vscode_TypeDefinitionProvider) ->
            vscode_TypeDefinitionProvider_to_js x1993
        let (provideTypeDefinition :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  (vscode_Definition, vscode_DefinitionLink) or_array
                    vscode_ProviderResult)
          =
          fun (x1998 : t) ->
            fun ~document:(x1995 : vscode_TextDocument) ->
              fun ~position:(x1996 : vscode_Position) ->
                fun ~token:(x1997 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x1999 : Ojs.t) ->
                       or_array_of_js vscode_Definition_of_js
                         vscode_DefinitionLink_of_js x1999)
                    (Ojs.call (t_to_js x1998) "provideTypeDefinition"
                       [|(vscode_TextDocument_to_js x1995);(vscode_Position_to_js
                                                              x1996);(
                         vscode_CancellationToken_to_js x1997)|])
      end
    module Declaration =
      struct
        type t = vscode_Declaration
        let rec t_of_js : Ojs.t -> t =
          fun (x2003 : Ojs.t) -> vscode_Declaration_of_js x2003
        and t_to_js : t -> Ojs.t =
          fun (x2002 : vscode_Declaration) -> vscode_Declaration_to_js x2002
      end
    module DeclarationProvider =
      struct
        type t = vscode_DeclarationProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2005 : Ojs.t) -> vscode_DeclarationProvider_of_js x2005
        and t_to_js : t -> Ojs.t =
          fun (x2004 : vscode_DeclarationProvider) ->
            vscode_DeclarationProvider_to_js x2004
        let (provideDeclaration :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  vscode_Declaration vscode_ProviderResult)
          =
          fun (x2009 : t) ->
            fun ~document:(x2006 : vscode_TextDocument) ->
              fun ~position:(x2007 : vscode_Position) ->
                fun ~token:(x2008 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js vscode_Declaration_of_js
                    (Ojs.call (t_to_js x2009) "provideDeclaration"
                       [|(vscode_TextDocument_to_js x2006);(vscode_Position_to_js
                                                              x2007);(
                         vscode_CancellationToken_to_js x2008)|])
      end
    module MarkdownString =
      struct
        type t = vscode_MarkdownString
        let rec t_of_js : Ojs.t -> t =
          fun (x2012 : Ojs.t) -> vscode_MarkdownString_of_js x2012
        and t_to_js : t -> Ojs.t =
          fun (x2011 : vscode_MarkdownString) ->
            vscode_MarkdownString_to_js x2011
        let (get_value : t -> string) =
          fun (x2013 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2013) "value")
        let (set_value : t -> string -> unit) =
          fun (x2014 : t) ->
            fun (x2015 : string) ->
              Ojs.set_prop_ascii (t_to_js x2014) "value"
                (Ojs.string_to_js x2015)
        let (get_isTrusted : t -> bool) =
          fun (x2016 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x2016) "isTrusted")
        let (set_isTrusted : t -> bool -> unit) =
          fun (x2017 : t) ->
            fun (x2018 : bool) ->
              Ojs.set_prop_ascii (t_to_js x2017) "isTrusted"
                (Ojs.bool_to_js x2018)
        let (get_supportThemeIcons : t -> bool) =
          fun (x2019 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x2019) "supportThemeIcons")
        let (create : ?value:string -> ?supportThemeIcons:bool -> unit -> t)
          =
          fun ?value:(x2020 : string option) ->
            fun ?supportThemeIcons:(x2021 : bool option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "MarkdownString")
                     (let x2022 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2020 with
                       | Some x2024 ->
                           ignore
                             (Ojs.call x2022 "push"
                                [|(Ojs.string_to_js x2024)|])
                       | None -> ());
                      (match x2021 with
                       | Some x2023 ->
                           ignore
                             (Ojs.call x2022 "push"
                                [|(Ojs.bool_to_js x2023)|])
                       | None -> ());
                      x2022))
        let (appendText : t -> value:string -> t) =
          fun (x2026 : t) ->
            fun ~value:(x2025 : string) ->
              t_of_js
                (Ojs.call (t_to_js x2026) "appendText"
                   [|(Ojs.string_to_js x2025)|])
        let (appendMarkdown : t -> value:string -> t) =
          fun (x2028 : t) ->
            fun ~value:(x2027 : string) ->
              t_of_js
                (Ojs.call (t_to_js x2028) "appendMarkdown"
                   [|(Ojs.string_to_js x2027)|])
        let (appendCodeblock :
          t -> value:string -> ?language:string -> unit -> t) =
          fun (x2033 : t) ->
            fun ~value:(x2029 : string) ->
              fun ?language:(x2030 : string option) ->
                fun () ->
                  t_of_js
                    (let x2034 = t_to_js x2033 in
                     Ojs.call (Ojs.get_prop_ascii x2034 "appendCodeblock")
                       "apply"
                       [|x2034;((let x2031 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2031 "push"
                                      [|(Ojs.string_to_js x2029)|]);
                                 (match x2030 with
                                  | Some x2032 ->
                                      ignore
                                        (Ojs.call x2031 "push"
                                           [|(Ojs.string_to_js x2032)|])
                                  | None -> ());
                                 x2031))|])
      end
    module MarkedString =
      struct
        type t = vscode_MarkedString
        let rec t_of_js : Ojs.t -> t =
          fun (x2036 : Ojs.t) -> vscode_MarkedString_of_js x2036
        and t_to_js : t -> Ojs.t =
          fun (x2035 : vscode_MarkedString) ->
            vscode_MarkedString_to_js x2035
      end
    module Hover =
      struct
        type t = vscode_Hover
        let rec t_of_js : Ojs.t -> t =
          fun (x2038 : Ojs.t) -> vscode_Hover_of_js x2038
        and t_to_js : t -> Ojs.t =
          fun (x2037 : vscode_Hover) -> vscode_Hover_to_js x2037
        let (get_contents : t -> vscode_MarkedString list) =
          fun (x2039 : t) ->
            Ojs.list_of_js vscode_MarkedString_of_js
              (Ojs.get_prop_ascii (t_to_js x2039) "contents")
        let (set_contents : t -> vscode_MarkedString list -> unit) =
          fun (x2041 : t) ->
            fun (x2042 : vscode_MarkedString list) ->
              Ojs.set_prop_ascii (t_to_js x2041) "contents"
                (Ojs.list_to_js vscode_MarkedString_to_js x2042)
        let (get_range : t -> vscode_Range) =
          fun (x2044 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2044) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2045 : t) ->
            fun (x2046 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2045) "range"
                (vscode_Range_to_js x2046)
        let (create :
          contents:(vscode_MarkedString, vscode_MarkedString) or_array ->
            ?range:vscode_Range -> unit -> t)
          =
          fun
            ~contents:(x2047 :
                        (vscode_MarkedString, vscode_MarkedString) or_array)
            ->
            fun ?range:(x2048 : vscode_Range option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "Hover")
                     (let x2049 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2049 "push"
                           [|(or_array_to_js vscode_MarkedString_to_js
                                vscode_MarkedString_to_js x2047)|]);
                      (match x2048 with
                       | Some x2050 ->
                           ignore
                             (Ojs.call x2049 "push"
                                [|(vscode_Range_to_js x2050)|])
                       | None -> ());
                      x2049))
      end
    module HoverProvider =
      struct
        type t = vscode_HoverProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2054 : Ojs.t) -> vscode_HoverProvider_of_js x2054
        and t_to_js : t -> Ojs.t =
          fun (x2053 : vscode_HoverProvider) ->
            vscode_HoverProvider_to_js x2053
        let (provideHover :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  vscode_Hover vscode_ProviderResult)
          =
          fun (x2058 : t) ->
            fun ~document:(x2055 : vscode_TextDocument) ->
              fun ~position:(x2056 : vscode_Position) ->
                fun ~token:(x2057 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js vscode_Hover_of_js
                    (Ojs.call (t_to_js x2058) "provideHover"
                       [|(vscode_TextDocument_to_js x2055);(vscode_Position_to_js
                                                              x2056);(
                         vscode_CancellationToken_to_js x2057)|])
      end
    module EvaluatableExpression =
      struct
        type t = vscode_EvaluatableExpression
        let rec t_of_js : Ojs.t -> t =
          fun (x2061 : Ojs.t) -> vscode_EvaluatableExpression_of_js x2061
        and t_to_js : t -> Ojs.t =
          fun (x2060 : vscode_EvaluatableExpression) ->
            vscode_EvaluatableExpression_to_js x2060
        let (get_range : t -> vscode_Range) =
          fun (x2062 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2062) "range")
        let (get_expression : t -> string) =
          fun (x2063 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2063) "expression")
        let (create : range:vscode_Range -> ?expression:string -> unit -> t)
          =
          fun ~range:(x2064 : vscode_Range) ->
            fun ?expression:(x2065 : string option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "EvaluatableExpression")
                     (let x2066 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2066 "push" [|(vscode_Range_to_js x2064)|]);
                      (match x2065 with
                       | Some x2067 ->
                           ignore
                             (Ojs.call x2066 "push"
                                [|(Ojs.string_to_js x2067)|])
                       | None -> ());
                      x2066))
      end
    module EvaluatableExpressionProvider =
      struct
        type t = vscode_EvaluatableExpressionProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2069 : Ojs.t) ->
            vscode_EvaluatableExpressionProvider_of_js x2069
        and t_to_js : t -> Ojs.t =
          fun (x2068 : vscode_EvaluatableExpressionProvider) ->
            vscode_EvaluatableExpressionProvider_to_js x2068
        let (provideEvaluatableExpression :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  vscode_EvaluatableExpression vscode_ProviderResult)
          =
          fun (x2073 : t) ->
            fun ~document:(x2070 : vscode_TextDocument) ->
              fun ~position:(x2071 : vscode_Position) ->
                fun ~token:(x2072 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    vscode_EvaluatableExpression_of_js
                    (Ojs.call (t_to_js x2073) "provideEvaluatableExpression"
                       [|(vscode_TextDocument_to_js x2070);(vscode_Position_to_js
                                                              x2071);(
                         vscode_CancellationToken_to_js x2072)|])
      end
    module InlineValueText =
      struct
        type t = vscode_InlineValueText
        let rec t_of_js : Ojs.t -> t =
          fun (x2076 : Ojs.t) -> vscode_InlineValueText_of_js x2076
        and t_to_js : t -> Ojs.t =
          fun (x2075 : vscode_InlineValueText) ->
            vscode_InlineValueText_to_js x2075
        let (get_range : t -> vscode_Range) =
          fun (x2077 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2077) "range")
        let (get_text : t -> string) =
          fun (x2078 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2078) "text")
        let (create : range:vscode_Range -> text:string -> t) =
          fun ~range:(x2079 : vscode_Range) ->
            fun ~text:(x2080 : string) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "InlineValueText")
                   [|(vscode_Range_to_js x2079);(Ojs.string_to_js x2080)|])
      end
    module InlineValueVariableLookup =
      struct
        type t = vscode_InlineValueVariableLookup
        let rec t_of_js : Ojs.t -> t =
          fun (x2082 : Ojs.t) -> vscode_InlineValueVariableLookup_of_js x2082
        and t_to_js : t -> Ojs.t =
          fun (x2081 : vscode_InlineValueVariableLookup) ->
            vscode_InlineValueVariableLookup_to_js x2081
        let (get_range : t -> vscode_Range) =
          fun (x2083 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2083) "range")
        let (get_variableName : t -> string) =
          fun (x2084 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2084) "variableName")
        let (get_caseSensitiveLookup : t -> bool) =
          fun (x2085 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x2085) "caseSensitiveLookup")
        let (create :
          range:vscode_Range ->
            ?variableName:string -> ?caseSensitiveLookup:bool -> unit -> t)
          =
          fun ~range:(x2086 : vscode_Range) ->
            fun ?variableName:(x2087 : string option) ->
              fun ?caseSensitiveLookup:(x2088 : bool option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "InlineValueVariableLookup")
                       (let x2089 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x2089 "push"
                             [|(vscode_Range_to_js x2086)|]);
                        (match x2087 with
                         | Some x2091 ->
                             ignore
                               (Ojs.call x2089 "push"
                                  [|(Ojs.string_to_js x2091)|])
                         | None -> ());
                        (match x2088 with
                         | Some x2090 ->
                             ignore
                               (Ojs.call x2089 "push"
                                  [|(Ojs.bool_to_js x2090)|])
                         | None -> ());
                        x2089))
      end
    module InlineValueEvaluatableExpression =
      struct
        type t = vscode_InlineValueEvaluatableExpression
        let rec t_of_js : Ojs.t -> t =
          fun (x2093 : Ojs.t) ->
            vscode_InlineValueEvaluatableExpression_of_js x2093
        and t_to_js : t -> Ojs.t =
          fun (x2092 : vscode_InlineValueEvaluatableExpression) ->
            vscode_InlineValueEvaluatableExpression_to_js x2092
        let (get_range : t -> vscode_Range) =
          fun (x2094 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2094) "range")
        let (get_expression : t -> string) =
          fun (x2095 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2095) "expression")
        let (create : range:vscode_Range -> ?expression:string -> unit -> t)
          =
          fun ~range:(x2096 : vscode_Range) ->
            fun ?expression:(x2097 : string option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "InlineValueEvaluatableExpression")
                     (let x2098 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2098 "push" [|(vscode_Range_to_js x2096)|]);
                      (match x2097 with
                       | Some x2099 ->
                           ignore
                             (Ojs.call x2098 "push"
                                [|(Ojs.string_to_js x2099)|])
                       | None -> ());
                      x2098))
      end
    module InlineValue =
      struct
        type t = vscode_InlineValue
        let rec t_of_js : Ojs.t -> t =
          fun (x2101 : Ojs.t) -> vscode_InlineValue_of_js x2101
        and t_to_js : t -> Ojs.t =
          fun (x2100 : vscode_InlineValue) -> vscode_InlineValue_to_js x2100
      end
    module InlineValueContext =
      struct
        type t = vscode_InlineValueContext
        let rec t_of_js : Ojs.t -> t =
          fun (x2103 : Ojs.t) -> vscode_InlineValueContext_of_js x2103
        and t_to_js : t -> Ojs.t =
          fun (x2102 : vscode_InlineValueContext) ->
            vscode_InlineValueContext_to_js x2102
        let (get_frameId : t -> float) =
          fun (x2104 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2104) "frameId")
        let (get_stoppedLocation : t -> vscode_Range) =
          fun (x2105 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x2105) "stoppedLocation")
      end
    module InlineValuesProvider =
      struct
        type t = vscode_InlineValuesProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2107 : Ojs.t) -> vscode_InlineValuesProvider_of_js x2107
        and t_to_js : t -> Ojs.t =
          fun (x2106 : vscode_InlineValuesProvider) ->
            vscode_InlineValuesProvider_to_js x2106
        let (get_onDidChangeInlineValues :
          t -> unit vscode_Event or_undefined) =
          fun (x2108 : t) ->
            or_undefined_of_js
              (fun (x2109 : Ojs.t) -> vscode_Event_of_js Ojs.unit_of_js x2109)
              (Ojs.get_prop_ascii (t_to_js x2108) "onDidChangeInlineValues")
        let (set_onDidChangeInlineValues :
          t -> unit vscode_Event or_undefined -> unit) =
          fun (x2111 : t) ->
            fun (x2112 : unit vscode_Event or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x2111) "onDidChangeInlineValues"
                (or_undefined_to_js
                   (fun (x2113 : unit vscode_Event) ->
                      vscode_Event_to_js Ojs.unit_to_js x2113) x2112)
        let (provideInlineValues :
          t ->
            document:vscode_TextDocument ->
              viewPort:vscode_Range ->
                context:vscode_InlineValueContext ->
                  token:vscode_CancellationToken ->
                    vscode_InlineValue list vscode_ProviderResult)
          =
          fun (x2119 : t) ->
            fun ~document:(x2115 : vscode_TextDocument) ->
              fun ~viewPort:(x2116 : vscode_Range) ->
                fun ~context:(x2117 : vscode_InlineValueContext) ->
                  fun ~token:(x2118 : vscode_CancellationToken) ->
                    vscode_ProviderResult_of_js
                      (fun (x2120 : Ojs.t) ->
                         Ojs.list_of_js vscode_InlineValue_of_js x2120)
                      (Ojs.call (t_to_js x2119) "provideInlineValues"
                         [|(vscode_TextDocument_to_js x2115);(vscode_Range_to_js
                                                                x2116);(
                           vscode_InlineValueContext_to_js x2117);(vscode_CancellationToken_to_js
                                                                    x2118)|])
      end
    module DocumentHighlightKind =
      struct
        type t = vscode_DocumentHighlightKind
        let rec t_of_js : Ojs.t -> t =
          fun (x2123 : Ojs.t) -> vscode_DocumentHighlightKind_of_js x2123
        and t_to_js : t -> Ojs.t =
          fun (x2122 : vscode_DocumentHighlightKind) ->
            vscode_DocumentHighlightKind_to_js x2122
      end
    module DocumentHighlight =
      struct
        type t = vscode_DocumentHighlight
        let rec t_of_js : Ojs.t -> t =
          fun (x2125 : Ojs.t) -> vscode_DocumentHighlight_of_js x2125
        and t_to_js : t -> Ojs.t =
          fun (x2124 : vscode_DocumentHighlight) ->
            vscode_DocumentHighlight_to_js x2124
        let (get_range : t -> vscode_Range) =
          fun (x2126 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2126) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2127 : t) ->
            fun (x2128 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2127) "range"
                (vscode_Range_to_js x2128)
        let (get_kind : t -> vscode_DocumentHighlightKind) =
          fun (x2129 : t) ->
            vscode_DocumentHighlightKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2129) "kind")
        let (set_kind : t -> vscode_DocumentHighlightKind -> unit) =
          fun (x2130 : t) ->
            fun (x2131 : vscode_DocumentHighlightKind) ->
              Ojs.set_prop_ascii (t_to_js x2130) "kind"
                (vscode_DocumentHighlightKind_to_js x2131)
        let (create :
          range:vscode_Range ->
            ?kind:vscode_DocumentHighlightKind -> unit -> t)
          =
          fun ~range:(x2132 : vscode_Range) ->
            fun ?kind:(x2133 : vscode_DocumentHighlightKind option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "DocumentHighlight")
                     (let x2134 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2134 "push" [|(vscode_Range_to_js x2132)|]);
                      (match x2133 with
                       | Some x2135 ->
                           ignore
                             (Ojs.call x2134 "push"
                                [|(vscode_DocumentHighlightKind_to_js x2135)|])
                       | None -> ());
                      x2134))
      end
    module DocumentHighlightProvider =
      struct
        type t = vscode_DocumentHighlightProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2137 : Ojs.t) -> vscode_DocumentHighlightProvider_of_js x2137
        and t_to_js : t -> Ojs.t =
          fun (x2136 : vscode_DocumentHighlightProvider) ->
            vscode_DocumentHighlightProvider_to_js x2136
        let (provideDocumentHighlights :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  vscode_DocumentHighlight list vscode_ProviderResult)
          =
          fun (x2141 : t) ->
            fun ~document:(x2138 : vscode_TextDocument) ->
              fun ~position:(x2139 : vscode_Position) ->
                fun ~token:(x2140 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2142 : Ojs.t) ->
                       Ojs.list_of_js vscode_DocumentHighlight_of_js x2142)
                    (Ojs.call (t_to_js x2141) "provideDocumentHighlights"
                       [|(vscode_TextDocument_to_js x2138);(vscode_Position_to_js
                                                              x2139);(
                         vscode_CancellationToken_to_js x2140)|])
      end
    module SymbolKind =
      struct
        type t = vscode_SymbolKind
        let rec t_of_js : Ojs.t -> t =
          fun (x2145 : Ojs.t) -> vscode_SymbolKind_of_js x2145
        and t_to_js : t -> Ojs.t =
          fun (x2144 : vscode_SymbolKind) -> vscode_SymbolKind_to_js x2144
      end
    module SymbolTag =
      struct
        type t = vscode_SymbolTag
        let rec t_of_js : Ojs.t -> t =
          fun (x2147 : Ojs.t) -> vscode_SymbolTag_of_js x2147
        and t_to_js : t -> Ojs.t =
          fun (x2146 : vscode_SymbolTag) -> vscode_SymbolTag_to_js x2146
      end
    module SymbolInformation =
      struct
        type t = vscode_SymbolInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x2149 : Ojs.t) -> vscode_SymbolInformation_of_js x2149
        and t_to_js : t -> Ojs.t =
          fun (x2148 : vscode_SymbolInformation) ->
            vscode_SymbolInformation_to_js x2148
        let (get_name : t -> string) =
          fun (x2150 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2150) "name")
        let (set_name : t -> string -> unit) =
          fun (x2151 : t) ->
            fun (x2152 : string) ->
              Ojs.set_prop_ascii (t_to_js x2151) "name"
                (Ojs.string_to_js x2152)
        let (get_containerName : t -> string) =
          fun (x2153 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2153) "containerName")
        let (set_containerName : t -> string -> unit) =
          fun (x2154 : t) ->
            fun (x2155 : string) ->
              Ojs.set_prop_ascii (t_to_js x2154) "containerName"
                (Ojs.string_to_js x2155)
        let (get_kind : t -> vscode_SymbolKind) =
          fun (x2156 : t) ->
            vscode_SymbolKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2156) "kind")
        let (set_kind : t -> vscode_SymbolKind -> unit) =
          fun (x2157 : t) ->
            fun (x2158 : vscode_SymbolKind) ->
              Ojs.set_prop_ascii (t_to_js x2157) "kind"
                (vscode_SymbolKind_to_js x2158)
        let (get_tags : t -> vscode_SymbolTag list) =
          fun (x2159 : t) ->
            Ojs.list_of_js vscode_SymbolTag_of_js
              (Ojs.get_prop_ascii (t_to_js x2159) "tags")
        let (set_tags : t -> vscode_SymbolTag list -> unit) =
          fun (x2161 : t) ->
            fun (x2162 : vscode_SymbolTag list) ->
              Ojs.set_prop_ascii (t_to_js x2161) "tags"
                (Ojs.list_to_js vscode_SymbolTag_to_js x2162)
        let (get_location : t -> vscode_Location) =
          fun (x2164 : t) ->
            vscode_Location_of_js
              (Ojs.get_prop_ascii (t_to_js x2164) "location")
        let (set_location : t -> vscode_Location -> unit) =
          fun (x2165 : t) ->
            fun (x2166 : vscode_Location) ->
              Ojs.set_prop_ascii (t_to_js x2165) "location"
                (vscode_Location_to_js x2166)
        let (create :
          name:string ->
            kind:vscode_SymbolKind ->
              containerName:string -> location:vscode_Location -> t)
          =
          fun ~name:(x2167 : string) ->
            fun ~kind:(x2168 : vscode_SymbolKind) ->
              fun ~containerName:(x2169 : string) ->
                fun ~location:(x2170 : vscode_Location) ->
                  t_of_js
                    (Ojs.new_obj
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "SymbolInformation")
                       [|(Ojs.string_to_js x2167);(vscode_SymbolKind_to_js
                                                     x2168);(Ojs.string_to_js
                                                               x2169);(
                         vscode_Location_to_js x2170)|])
        let (create' :
          name:string ->
            kind:vscode_SymbolKind ->
              range:vscode_Range ->
                ?uri:vscode_Uri -> ?containerName:string -> unit -> t)
          =
          fun ~name:(x2171 : string) ->
            fun ~kind:(x2172 : vscode_SymbolKind) ->
              fun ~range:(x2173 : vscode_Range) ->
                fun ?uri:(x2174 : vscode_Uri option) ->
                  fun ?containerName:(x2175 : string option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode")
                              "SymbolInformation")
                           (let x2176 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x2176 "push"
                                 [|(Ojs.string_to_js x2171)|]);
                            ignore
                              (Ojs.call x2176 "push"
                                 [|(vscode_SymbolKind_to_js x2172)|]);
                            ignore
                              (Ojs.call x2176 "push"
                                 [|(vscode_Range_to_js x2173)|]);
                            (match x2174 with
                             | Some x2178 ->
                                 ignore
                                   (Ojs.call x2176 "push"
                                      [|(vscode_Uri_to_js x2178)|])
                             | None -> ());
                            (match x2175 with
                             | Some x2177 ->
                                 ignore
                                   (Ojs.call x2176 "push"
                                      [|(Ojs.string_to_js x2177)|])
                             | None -> ());
                            x2176))
      end
    module DocumentSymbol =
      struct
        type t = vscode_DocumentSymbol
        let rec t_of_js : Ojs.t -> t =
          fun (x2180 : Ojs.t) -> vscode_DocumentSymbol_of_js x2180
        and t_to_js : t -> Ojs.t =
          fun (x2179 : vscode_DocumentSymbol) ->
            vscode_DocumentSymbol_to_js x2179
        let (get_name : t -> string) =
          fun (x2181 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2181) "name")
        let (set_name : t -> string -> unit) =
          fun (x2182 : t) ->
            fun (x2183 : string) ->
              Ojs.set_prop_ascii (t_to_js x2182) "name"
                (Ojs.string_to_js x2183)
        let (get_detail : t -> string) =
          fun (x2184 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2184) "detail")
        let (set_detail : t -> string -> unit) =
          fun (x2185 : t) ->
            fun (x2186 : string) ->
              Ojs.set_prop_ascii (t_to_js x2185) "detail"
                (Ojs.string_to_js x2186)
        let (get_kind : t -> vscode_SymbolKind) =
          fun (x2187 : t) ->
            vscode_SymbolKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2187) "kind")
        let (set_kind : t -> vscode_SymbolKind -> unit) =
          fun (x2188 : t) ->
            fun (x2189 : vscode_SymbolKind) ->
              Ojs.set_prop_ascii (t_to_js x2188) "kind"
                (vscode_SymbolKind_to_js x2189)
        let (get_tags : t -> vscode_SymbolTag list) =
          fun (x2190 : t) ->
            Ojs.list_of_js vscode_SymbolTag_of_js
              (Ojs.get_prop_ascii (t_to_js x2190) "tags")
        let (set_tags : t -> vscode_SymbolTag list -> unit) =
          fun (x2192 : t) ->
            fun (x2193 : vscode_SymbolTag list) ->
              Ojs.set_prop_ascii (t_to_js x2192) "tags"
                (Ojs.list_to_js vscode_SymbolTag_to_js x2193)
        let (get_range : t -> vscode_Range) =
          fun (x2195 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2195) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2196 : t) ->
            fun (x2197 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2196) "range"
                (vscode_Range_to_js x2197)
        let (get_selectionRange : t -> vscode_Range) =
          fun (x2198 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x2198) "selectionRange")
        let (set_selectionRange : t -> vscode_Range -> unit) =
          fun (x2199 : t) ->
            fun (x2200 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2199) "selectionRange"
                (vscode_Range_to_js x2200)
        let (get_children : t -> t list) =
          fun (x2201 : t) ->
            Ojs.list_of_js t_of_js
              (Ojs.get_prop_ascii (t_to_js x2201) "children")
        let (set_children : t -> t list -> unit) =
          fun (x2203 : t) ->
            fun (x2204 : t list) ->
              Ojs.set_prop_ascii (t_to_js x2203) "children"
                (Ojs.list_to_js t_to_js x2204)
        let (create :
          name:string ->
            detail:string ->
              kind:vscode_SymbolKind ->
                range:vscode_Range -> selectionRange:vscode_Range -> t)
          =
          fun ~name:(x2206 : string) ->
            fun ~detail:(x2207 : string) ->
              fun ~kind:(x2208 : vscode_SymbolKind) ->
                fun ~range:(x2209 : vscode_Range) ->
                  fun ~selectionRange:(x2210 : vscode_Range) ->
                    t_of_js
                      (Ojs.new_obj
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "vscode")
                            "DocumentSymbol")
                         [|(Ojs.string_to_js x2206);(Ojs.string_to_js x2207);(
                           vscode_SymbolKind_to_js x2208);(vscode_Range_to_js
                                                             x2209);(
                           vscode_Range_to_js x2210)|])
      end
    module DocumentSymbolProvider =
      struct
        type t = vscode_DocumentSymbolProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2212 : Ojs.t) -> vscode_DocumentSymbolProvider_of_js x2212
        and t_to_js : t -> Ojs.t =
          fun (x2211 : vscode_DocumentSymbolProvider) ->
            vscode_DocumentSymbolProvider_to_js x2211
        let (provideDocumentSymbols :
          t ->
            document:vscode_TextDocument ->
              token:vscode_CancellationToken ->
                [
                  `U_n_0 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_1 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_2 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_3 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_4 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_5 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_6 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_7 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_8 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_9 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_10 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_11 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_12 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_13 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_14 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_15 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_16 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_17 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_18 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_19 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_20 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_21 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_22 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_23 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_24 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 
                | `U_n_25 of
                    (vscode_DocumentSymbol, vscode_SymbolInformation) union2 ]
                  list vscode_ProviderResult)
          =
          fun (x2215 : t) ->
            fun ~document:(x2213 : vscode_TextDocument) ->
              fun ~token:(x2214 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x2216 : Ojs.t) ->
                     Ojs.list_of_js
                       (fun (x2217 : Ojs.t) ->
                          let x2218 = x2217 in
                          match Ojs.int_of_js
                                  (Ojs.get_prop_ascii x2218 "kind")
                          with
                          | 0 ->
                              `U_n_0
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 1 ->
                              `U_n_1
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 2 ->
                              `U_n_2
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 3 ->
                              `U_n_3
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 4 ->
                              `U_n_4
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 5 ->
                              `U_n_5
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 6 ->
                              `U_n_6
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 7 ->
                              `U_n_7
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 8 ->
                              `U_n_8
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 9 ->
                              `U_n_9
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 10 ->
                              `U_n_10
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 11 ->
                              `U_n_11
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 12 ->
                              `U_n_12
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 13 ->
                              `U_n_13
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 14 ->
                              `U_n_14
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 15 ->
                              `U_n_15
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 16 ->
                              `U_n_16
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 17 ->
                              `U_n_17
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 18 ->
                              `U_n_18
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 19 ->
                              `U_n_19
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 20 ->
                              `U_n_20
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 21 ->
                              `U_n_21
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 22 ->
                              `U_n_22
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 23 ->
                              `U_n_23
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 24 ->
                              `U_n_24
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | 25 ->
                              `U_n_25
                                (union2_of_js vscode_DocumentSymbol_of_js
                                   vscode_SymbolInformation_of_js x2218)
                          | _ -> assert false) x2216)
                  (Ojs.call (t_to_js x2215) "provideDocumentSymbols"
                     [|(vscode_TextDocument_to_js x2213);(vscode_CancellationToken_to_js
                                                            x2214)|])
      end
    module DocumentSymbolProviderMetadata =
      struct
        type t = vscode_DocumentSymbolProviderMetadata
        let rec t_of_js : Ojs.t -> t =
          fun (x2272 : Ojs.t) ->
            vscode_DocumentSymbolProviderMetadata_of_js x2272
        and t_to_js : t -> Ojs.t =
          fun (x2271 : vscode_DocumentSymbolProviderMetadata) ->
            vscode_DocumentSymbolProviderMetadata_to_js x2271
        let (get_label : t -> string) =
          fun (x2273 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2273) "label")
        let (set_label : t -> string -> unit) =
          fun (x2274 : t) ->
            fun (x2275 : string) ->
              Ojs.set_prop_ascii (t_to_js x2274) "label"
                (Ojs.string_to_js x2275)
      end
    module WorkspaceSymbolProvider =
      struct
        type 'T t = 'T vscode_WorkspaceSymbolProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x2278 : Ojs.t) ->
              vscode_WorkspaceSymbolProvider_of_js __T_of_js x2278
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x2276 : __T vscode_WorkspaceSymbolProvider) ->
              vscode_WorkspaceSymbolProvider_to_js __T_to_js x2276
        let (provideWorkspaceSymbols :
          'T t ->
            query:string ->
              token:vscode_CancellationToken -> 'T list vscode_ProviderResult)
          =
          fun (x2282 : 'T t) ->
            fun ~query:(x2280 : string) ->
              fun ~token:(x2281 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x2284 : Ojs.t) -> Ojs.list_of_js Obj.magic x2284)
                  (Ojs.call (t_to_js Obj.magic x2282)
                     "provideWorkspaceSymbols"
                     [|(Ojs.string_to_js x2280);(vscode_CancellationToken_to_js
                                                   x2281)|])
        let (resolveWorkspaceSymbol :
          'T t ->
            symbol:'T ->
              token:vscode_CancellationToken -> 'T vscode_ProviderResult)
          =
          fun (x2288 : 'T t) ->
            fun ~symbol:(x2286 : 'T) ->
              fun ~token:(x2287 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Obj.magic
                  (Ojs.call (t_to_js Obj.magic x2288)
                     "resolveWorkspaceSymbol"
                     [|(Obj.magic x2286);(vscode_CancellationToken_to_js
                                            x2287)|])
      end
    module ReferenceContext =
      struct
        type t = vscode_ReferenceContext
        let rec t_of_js : Ojs.t -> t =
          fun (x2292 : Ojs.t) -> vscode_ReferenceContext_of_js x2292
        and t_to_js : t -> Ojs.t =
          fun (x2291 : vscode_ReferenceContext) ->
            vscode_ReferenceContext_to_js x2291
        let (get_includeDeclaration : t -> bool) =
          fun (x2293 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x2293) "includeDeclaration")
        let (set_includeDeclaration : t -> bool -> unit) =
          fun (x2294 : t) ->
            fun (x2295 : bool) ->
              Ojs.set_prop_ascii (t_to_js x2294) "includeDeclaration"
                (Ojs.bool_to_js x2295)
      end
    module ReferenceProvider =
      struct
        type t = vscode_ReferenceProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2297 : Ojs.t) -> vscode_ReferenceProvider_of_js x2297
        and t_to_js : t -> Ojs.t =
          fun (x2296 : vscode_ReferenceProvider) ->
            vscode_ReferenceProvider_to_js x2296
        let (provideReferences :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                context:vscode_ReferenceContext ->
                  token:vscode_CancellationToken ->
                    vscode_Location list vscode_ProviderResult)
          =
          fun (x2302 : t) ->
            fun ~document:(x2298 : vscode_TextDocument) ->
              fun ~position:(x2299 : vscode_Position) ->
                fun ~context:(x2300 : vscode_ReferenceContext) ->
                  fun ~token:(x2301 : vscode_CancellationToken) ->
                    vscode_ProviderResult_of_js
                      (fun (x2303 : Ojs.t) ->
                         Ojs.list_of_js vscode_Location_of_js x2303)
                      (Ojs.call (t_to_js x2302) "provideReferences"
                         [|(vscode_TextDocument_to_js x2298);(vscode_Position_to_js
                                                                x2299);(
                           vscode_ReferenceContext_to_js x2300);(vscode_CancellationToken_to_js
                                                                   x2301)|])
      end
    module TextEdit =
      struct
        type t = vscode_TextEdit
        let rec t_of_js : Ojs.t -> t =
          fun (x2306 : Ojs.t) -> vscode_TextEdit_of_js x2306
        and t_to_js : t -> Ojs.t =
          fun (x2305 : vscode_TextEdit) -> vscode_TextEdit_to_js x2305
        let (replace : range:vscode_Range -> newText:string -> t) =
          fun ~range:(x2307 : vscode_Range) ->
            fun ~newText:(x2308 : string) ->
              t_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "TextEdit")
                   "replace"
                   [|(vscode_Range_to_js x2307);(Ojs.string_to_js x2308)|])
        let (insert : position:vscode_Position -> newText:string -> t) =
          fun ~position:(x2309 : vscode_Position) ->
            fun ~newText:(x2310 : string) ->
              t_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "TextEdit")
                   "insert"
                   [|(vscode_Position_to_js x2309);(Ojs.string_to_js x2310)|])
        let (delete : range:vscode_Range -> t) =
          fun ~range:(x2311 : vscode_Range) ->
            t_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "TextEdit") "delete" [|(vscode_Range_to_js x2311)|])
        let (setEndOfLine : eol:vscode_EndOfLine -> t) =
          fun ~eol:(x2312 : vscode_EndOfLine) ->
            t_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "TextEdit") "setEndOfLine"
                 [|(vscode_EndOfLine_to_js x2312)|])
        let (get_range : t -> vscode_Range) =
          fun (x2313 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2313) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2314 : t) ->
            fun (x2315 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2314) "range"
                (vscode_Range_to_js x2315)
        let (get_newText : t -> string) =
          fun (x2316 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2316) "newText")
        let (set_newText : t -> string -> unit) =
          fun (x2317 : t) ->
            fun (x2318 : string) ->
              Ojs.set_prop_ascii (t_to_js x2317) "newText"
                (Ojs.string_to_js x2318)
        let (get_newEol : t -> vscode_EndOfLine) =
          fun (x2319 : t) ->
            vscode_EndOfLine_of_js
              (Ojs.get_prop_ascii (t_to_js x2319) "newEol")
        let (set_newEol : t -> vscode_EndOfLine -> unit) =
          fun (x2320 : t) ->
            fun (x2321 : vscode_EndOfLine) ->
              Ojs.set_prop_ascii (t_to_js x2320) "newEol"
                (vscode_EndOfLine_to_js x2321)
        let (create : range:vscode_Range -> newText:string -> t) =
          fun ~range:(x2322 : vscode_Range) ->
            fun ~newText:(x2323 : string) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "TextEdit")
                   [|(vscode_Range_to_js x2322);(Ojs.string_to_js x2323)|])
      end
    module WorkspaceEditEntryMetadata =
      struct
        type t = vscode_WorkspaceEditEntryMetadata
        let rec t_of_js : Ojs.t -> t =
          fun (x2325 : Ojs.t) ->
            vscode_WorkspaceEditEntryMetadata_of_js x2325
        and t_to_js : t -> Ojs.t =
          fun (x2324 : vscode_WorkspaceEditEntryMetadata) ->
            vscode_WorkspaceEditEntryMetadata_to_js x2324
        let (get_needsConfirmation : t -> bool) =
          fun (x2326 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x2326) "needsConfirmation")
        let (set_needsConfirmation : t -> bool -> unit) =
          fun (x2327 : t) ->
            fun (x2328 : bool) ->
              Ojs.set_prop_ascii (t_to_js x2327) "needsConfirmation"
                (Ojs.bool_to_js x2328)
        let (get_label : t -> string) =
          fun (x2329 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2329) "label")
        let (set_label : t -> string -> unit) =
          fun (x2330 : t) ->
            fun (x2331 : string) ->
              Ojs.set_prop_ascii (t_to_js x2330) "label"
                (Ojs.string_to_js x2331)
        let (get_description : t -> string) =
          fun (x2332 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2332) "description")
        let (set_description : t -> string -> unit) =
          fun (x2333 : t) ->
            fun (x2334 : string) ->
              Ojs.set_prop_ascii (t_to_js x2333) "description"
                (Ojs.string_to_js x2334)
        let (get_iconPath :
          t -> (vscode_ThemeIcon, vscode_Uri, anonymous_interface_14) union3)
          =
          fun (x2335 : t) ->
            union3_of_js vscode_ThemeIcon_of_js vscode_Uri_of_js
              anonymous_interface_14_of_js
              (Ojs.get_prop_ascii (t_to_js x2335) "iconPath")
        let (set_iconPath :
          t ->
            (vscode_ThemeIcon, vscode_Uri, anonymous_interface_14) union3 ->
              unit)
          =
          fun (x2339 : t) ->
            fun
              (x2340 :
                (vscode_ThemeIcon, vscode_Uri, anonymous_interface_14) union3)
              ->
              Ojs.set_prop_ascii (t_to_js x2339) "iconPath"
                (union3_to_js vscode_ThemeIcon_to_js vscode_Uri_to_js
                   anonymous_interface_14_to_js x2340)
      end
    module WorkspaceEdit =
      struct
        type t = vscode_WorkspaceEdit
        let rec t_of_js : Ojs.t -> t =
          fun (x2345 : Ojs.t) -> vscode_WorkspaceEdit_of_js x2345
        and t_to_js : t -> Ojs.t =
          fun (x2344 : vscode_WorkspaceEdit) ->
            vscode_WorkspaceEdit_to_js x2344
        let (get_size : t -> float) =
          fun (x2346 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2346) "size")
        let (replace :
          t ->
            uri:vscode_Uri ->
              range:vscode_Range ->
                newText:string ->
                  ?metadata:vscode_WorkspaceEditEntryMetadata -> unit -> unit)
          =
          fun (x2353 : t) ->
            fun ~uri:(x2347 : vscode_Uri) ->
              fun ~range:(x2348 : vscode_Range) ->
                fun ~newText:(x2349 : string) ->
                  fun
                    ?metadata:(x2350 :
                                vscode_WorkspaceEditEntryMetadata option)
                    ->
                    fun () ->
                      ignore
                        (let x2354 = t_to_js x2353 in
                         Ojs.call (Ojs.get_prop_ascii x2354 "replace")
                           "apply"
                           [|x2354;((let x2351 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x2351 "push"
                                          [|(vscode_Uri_to_js x2347)|]);
                                     ignore
                                       (Ojs.call x2351 "push"
                                          [|(vscode_Range_to_js x2348)|]);
                                     ignore
                                       (Ojs.call x2351 "push"
                                          [|(Ojs.string_to_js x2349)|]);
                                     (match x2350 with
                                      | Some x2352 ->
                                          ignore
                                            (Ojs.call x2351 "push"
                                               [|(vscode_WorkspaceEditEntryMetadata_to_js
                                                    x2352)|])
                                      | None -> ());
                                     x2351))|])
        let (insert :
          t ->
            uri:vscode_Uri ->
              position:vscode_Position ->
                newText:string ->
                  ?metadata:vscode_WorkspaceEditEntryMetadata -> unit -> unit)
          =
          fun (x2361 : t) ->
            fun ~uri:(x2355 : vscode_Uri) ->
              fun ~position:(x2356 : vscode_Position) ->
                fun ~newText:(x2357 : string) ->
                  fun
                    ?metadata:(x2358 :
                                vscode_WorkspaceEditEntryMetadata option)
                    ->
                    fun () ->
                      ignore
                        (let x2362 = t_to_js x2361 in
                         Ojs.call (Ojs.get_prop_ascii x2362 "insert") "apply"
                           [|x2362;((let x2359 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x2359 "push"
                                          [|(vscode_Uri_to_js x2355)|]);
                                     ignore
                                       (Ojs.call x2359 "push"
                                          [|(vscode_Position_to_js x2356)|]);
                                     ignore
                                       (Ojs.call x2359 "push"
                                          [|(Ojs.string_to_js x2357)|]);
                                     (match x2358 with
                                      | Some x2360 ->
                                          ignore
                                            (Ojs.call x2359 "push"
                                               [|(vscode_WorkspaceEditEntryMetadata_to_js
                                                    x2360)|])
                                      | None -> ());
                                     x2359))|])
        let (delete :
          t ->
            uri:vscode_Uri ->
              range:vscode_Range ->
                ?metadata:vscode_WorkspaceEditEntryMetadata -> unit -> unit)
          =
          fun (x2368 : t) ->
            fun ~uri:(x2363 : vscode_Uri) ->
              fun ~range:(x2364 : vscode_Range) ->
                fun
                  ?metadata:(x2365 :
                              vscode_WorkspaceEditEntryMetadata option)
                  ->
                  fun () ->
                    ignore
                      (let x2369 = t_to_js x2368 in
                       Ojs.call (Ojs.get_prop_ascii x2369 "delete") "apply"
                         [|x2369;((let x2366 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2366 "push"
                                        [|(vscode_Uri_to_js x2363)|]);
                                   ignore
                                     (Ojs.call x2366 "push"
                                        [|(vscode_Range_to_js x2364)|]);
                                   (match x2365 with
                                    | Some x2367 ->
                                        ignore
                                          (Ojs.call x2366 "push"
                                             [|(vscode_WorkspaceEditEntryMetadata_to_js
                                                  x2367)|])
                                    | None -> ());
                                   x2366))|])
        let (has : t -> uri:vscode_Uri -> bool) =
          fun (x2371 : t) ->
            fun ~uri:(x2370 : vscode_Uri) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x2371) "has" [|(vscode_Uri_to_js x2370)|])
        let (set_ :
          t -> uri:vscode_Uri -> edits:vscode_TextEdit list -> unit) =
          fun (x2375 : t) ->
            fun ~uri:(x2372 : vscode_Uri) ->
              fun ~edits:(x2373 : vscode_TextEdit list) ->
                ignore
                  (Ojs.call (t_to_js x2375) "set"
                     [|(vscode_Uri_to_js x2372);(Ojs.list_to_js
                                                   vscode_TextEdit_to_js
                                                   x2373)|])
        let (get_ : t -> uri:vscode_Uri -> vscode_TextEdit list) =
          fun (x2377 : t) ->
            fun ~uri:(x2376 : vscode_Uri) ->
              Ojs.list_of_js vscode_TextEdit_of_js
                (Ojs.call (t_to_js x2377) "get" [|(vscode_Uri_to_js x2376)|])
        let (createFile :
          t ->
            uri:vscode_Uri ->
              ?options:anonymous_interface_22 ->
                ?metadata:vscode_WorkspaceEditEntryMetadata -> unit -> unit)
          =
          fun (x2385 : t) ->
            fun ~uri:(x2379 : vscode_Uri) ->
              fun ?options:(x2380 : anonymous_interface_22 option) ->
                fun
                  ?metadata:(x2381 :
                              vscode_WorkspaceEditEntryMetadata option)
                  ->
                  fun () ->
                    ignore
                      (let x2386 = t_to_js x2385 in
                       Ojs.call (Ojs.get_prop_ascii x2386 "createFile")
                         "apply"
                         [|x2386;((let x2382 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2382 "push"
                                        [|(vscode_Uri_to_js x2379)|]);
                                   (match x2380 with
                                    | Some x2384 ->
                                        ignore
                                          (Ojs.call x2382 "push"
                                             [|(anonymous_interface_22_to_js
                                                  x2384)|])
                                    | None -> ());
                                   (match x2381 with
                                    | Some x2383 ->
                                        ignore
                                          (Ojs.call x2382 "push"
                                             [|(vscode_WorkspaceEditEntryMetadata_to_js
                                                  x2383)|])
                                    | None -> ());
                                   x2382))|])
        let (deleteFile :
          t ->
            uri:vscode_Uri ->
              ?options:anonymous_interface_27 ->
                ?metadata:vscode_WorkspaceEditEntryMetadata -> unit -> unit)
          =
          fun (x2393 : t) ->
            fun ~uri:(x2387 : vscode_Uri) ->
              fun ?options:(x2388 : anonymous_interface_27 option) ->
                fun
                  ?metadata:(x2389 :
                              vscode_WorkspaceEditEntryMetadata option)
                  ->
                  fun () ->
                    ignore
                      (let x2394 = t_to_js x2393 in
                       Ojs.call (Ojs.get_prop_ascii x2394 "deleteFile")
                         "apply"
                         [|x2394;((let x2390 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2390 "push"
                                        [|(vscode_Uri_to_js x2387)|]);
                                   (match x2388 with
                                    | Some x2392 ->
                                        ignore
                                          (Ojs.call x2390 "push"
                                             [|(anonymous_interface_27_to_js
                                                  x2392)|])
                                    | None -> ());
                                   (match x2389 with
                                    | Some x2391 ->
                                        ignore
                                          (Ojs.call x2390 "push"
                                             [|(vscode_WorkspaceEditEntryMetadata_to_js
                                                  x2391)|])
                                    | None -> ());
                                   x2390))|])
        let (renameFile :
          t ->
            oldUri:vscode_Uri ->
              newUri:vscode_Uri ->
                ?options:anonymous_interface_22 ->
                  ?metadata:vscode_WorkspaceEditEntryMetadata -> unit -> unit)
          =
          fun (x2402 : t) ->
            fun ~oldUri:(x2395 : vscode_Uri) ->
              fun ~newUri:(x2396 : vscode_Uri) ->
                fun ?options:(x2397 : anonymous_interface_22 option) ->
                  fun
                    ?metadata:(x2398 :
                                vscode_WorkspaceEditEntryMetadata option)
                    ->
                    fun () ->
                      ignore
                        (let x2403 = t_to_js x2402 in
                         Ojs.call (Ojs.get_prop_ascii x2403 "renameFile")
                           "apply"
                           [|x2403;((let x2399 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x2399 "push"
                                          [|(vscode_Uri_to_js x2395)|]);
                                     ignore
                                       (Ojs.call x2399 "push"
                                          [|(vscode_Uri_to_js x2396)|]);
                                     (match x2397 with
                                      | Some x2401 ->
                                          ignore
                                            (Ojs.call x2399 "push"
                                               [|(anonymous_interface_22_to_js
                                                    x2401)|])
                                      | None -> ());
                                     (match x2398 with
                                      | Some x2400 ->
                                          ignore
                                            (Ojs.call x2399 "push"
                                               [|(vscode_WorkspaceEditEntryMetadata_to_js
                                                    x2400)|])
                                      | None -> ());
                                     x2399))|])
        let (entries : t -> (vscode_Uri * vscode_TextEdit list) list) =
          fun (x2404 : t) ->
            Ojs.list_of_js
              (fun (x2405 : Ojs.t) ->
                 let x2406 = x2405 in
                 ((vscode_Uri_of_js (Ojs.array_get x2406 0)),
                   (Ojs.list_of_js vscode_TextEdit_of_js
                      (Ojs.array_get x2406 1))))
              (Ojs.call (t_to_js x2404) "entries" [||])
      end
    module SnippetString =
      struct
        type t = vscode_SnippetString
        let rec t_of_js : Ojs.t -> t =
          fun (x2409 : Ojs.t) -> vscode_SnippetString_of_js x2409
        and t_to_js : t -> Ojs.t =
          fun (x2408 : vscode_SnippetString) ->
            vscode_SnippetString_to_js x2408
        let (get_value : t -> string) =
          fun (x2410 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2410) "value")
        let (set_value : t -> string -> unit) =
          fun (x2411 : t) ->
            fun (x2412 : string) ->
              Ojs.set_prop_ascii (t_to_js x2411) "value"
                (Ojs.string_to_js x2412)
        let (create : ?value:string -> unit -> t) =
          fun ?value:(x2413 : string option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "SnippetString")
                   (let x2414 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x2413 with
                     | Some x2415 ->
                         ignore
                           (Ojs.call x2414 "push"
                              [|(Ojs.string_to_js x2415)|])
                     | None -> ());
                    x2414))
        let (appendText : t -> string:string -> t) =
          fun (x2417 : t) ->
            fun ~string:(x2416 : string) ->
              t_of_js
                (Ojs.call (t_to_js x2417) "appendText"
                   [|(Ojs.string_to_js x2416)|])
        let (appendTabstop : t -> ?number:float -> unit -> t) =
          fun (x2421 : t) ->
            fun ?number:(x2418 : float option) ->
              fun () ->
                t_of_js
                  (let x2422 = t_to_js x2421 in
                   Ojs.call (Ojs.get_prop_ascii x2422 "appendTabstop")
                     "apply"
                     [|x2422;((let x2419 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2418 with
                                | Some x2420 ->
                                    ignore
                                      (Ojs.call x2419 "push"
                                         [|(Ojs.float_to_js x2420)|])
                                | None -> ());
                               x2419))|])
        let (appendPlaceholder :
          t ->
            value:(snippet:t -> any) or_string -> ?number:float -> unit -> t)
          =
          fun (x2429 : t) ->
            fun ~value:(x2423 : (snippet:t -> any) or_string) ->
              fun ?number:(x2424 : float option) ->
                fun () ->
                  t_of_js
                    (let x2430 = t_to_js x2429 in
                     Ojs.call (Ojs.get_prop_ascii x2430 "appendPlaceholder")
                       "apply"
                       [|x2430;((let x2425 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2425 "push"
                                      [|(or_string_to_js
                                           (fun (x2427 : snippet:t -> any) ->
                                              Ojs.fun_to_js 1
                                                (fun (x2428 : Ojs.t) ->
                                                   any_to_js
                                                     (x2427
                                                        ~snippet:(t_of_js
                                                                    x2428))))
                                           x2423)|]);
                                 (match x2424 with
                                  | Some x2426 ->
                                      ignore
                                        (Ojs.call x2425 "push"
                                           [|(Ojs.float_to_js x2426)|])
                                  | None -> ());
                                 x2425))|])
        let (appendChoice :
          t -> values:string list -> ?number:float -> unit -> t) =
          fun (x2436 : t) ->
            fun ~values:(x2431 : string list) ->
              fun ?number:(x2432 : float option) ->
                fun () ->
                  t_of_js
                    (let x2437 = t_to_js x2436 in
                     Ojs.call (Ojs.get_prop_ascii x2437 "appendChoice")
                       "apply"
                       [|x2437;((let x2433 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2433 "push"
                                      [|(Ojs.list_to_js Ojs.string_to_js
                                           x2431)|]);
                                 (match x2432 with
                                  | Some x2434 ->
                                      ignore
                                        (Ojs.call x2433 "push"
                                           [|(Ojs.float_to_js x2434)|])
                                  | None -> ());
                                 x2433))|])
        let (appendVariable :
          t -> name:string -> defaultValue:(snippet:t -> any) or_string -> t)
          =
          fun (x2442 : t) ->
            fun ~name:(x2438 : string) ->
              fun ~defaultValue:(x2439 : (snippet:t -> any) or_string) ->
                t_of_js
                  (Ojs.call (t_to_js x2442) "appendVariable"
                     [|(Ojs.string_to_js x2438);(or_string_to_js
                                                   (fun
                                                      (x2440 :
                                                        snippet:t -> any)
                                                      ->
                                                      Ojs.fun_to_js 1
                                                        (fun (x2441 : Ojs.t)
                                                           ->
                                                           any_to_js
                                                             (x2440
                                                                ~snippet:(
                                                                t_of_js x2441))))
                                                   x2439)|])
      end
    module RenameProvider =
      struct
        type t = vscode_RenameProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2444 : Ojs.t) -> vscode_RenameProvider_of_js x2444
        and t_to_js : t -> Ojs.t =
          fun (x2443 : vscode_RenameProvider) ->
            vscode_RenameProvider_to_js x2443
        let (provideRenameEdits :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                newName:string ->
                  token:vscode_CancellationToken ->
                    vscode_WorkspaceEdit vscode_ProviderResult)
          =
          fun (x2449 : t) ->
            fun ~document:(x2445 : vscode_TextDocument) ->
              fun ~position:(x2446 : vscode_Position) ->
                fun ~newName:(x2447 : string) ->
                  fun ~token:(x2448 : vscode_CancellationToken) ->
                    vscode_ProviderResult_of_js vscode_WorkspaceEdit_of_js
                      (Ojs.call (t_to_js x2449) "provideRenameEdits"
                         [|(vscode_TextDocument_to_js x2445);(vscode_Position_to_js
                                                                x2446);(
                           Ojs.string_to_js x2447);(vscode_CancellationToken_to_js
                                                      x2448)|])
        let (prepareRename :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  (vscode_Range, anonymous_interface_23) union2
                    vscode_ProviderResult)
          =
          fun (x2454 : t) ->
            fun ~document:(x2451 : vscode_TextDocument) ->
              fun ~position:(x2452 : vscode_Position) ->
                fun ~token:(x2453 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2455 : Ojs.t) ->
                       union2_of_js vscode_Range_of_js
                         anonymous_interface_23_of_js x2455)
                    (Ojs.call (t_to_js x2454) "prepareRename"
                       [|(vscode_TextDocument_to_js x2451);(vscode_Position_to_js
                                                              x2452);(
                         vscode_CancellationToken_to_js x2453)|])
      end
    module SemanticTokensLegend =
      struct
        type t = vscode_SemanticTokensLegend
        let rec t_of_js : Ojs.t -> t =
          fun (x2459 : Ojs.t) -> vscode_SemanticTokensLegend_of_js x2459
        and t_to_js : t -> Ojs.t =
          fun (x2458 : vscode_SemanticTokensLegend) ->
            vscode_SemanticTokensLegend_to_js x2458
        let (get_tokenTypes : t -> string list) =
          fun (x2460 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2460) "tokenTypes")
        let (get_tokenModifiers : t -> string list) =
          fun (x2462 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2462) "tokenModifiers")
        let (create :
          tokenTypes:string list -> ?tokenModifiers:string list -> unit -> t)
          =
          fun ~tokenTypes:(x2464 : string list) ->
            fun ?tokenModifiers:(x2465 : string list option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "SemanticTokensLegend")
                     (let x2466 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2466 "push"
                           [|(Ojs.list_to_js Ojs.string_to_js x2464)|]);
                      (match x2465 with
                       | Some x2467 ->
                           ignore
                             (Ojs.call x2466 "push"
                                [|(Ojs.list_to_js Ojs.string_to_js x2467)|])
                       | None -> ());
                      x2466))
      end
    module SemanticTokensBuilder =
      struct
        type t = vscode_SemanticTokensBuilder
        let rec t_of_js : Ojs.t -> t =
          fun (x2471 : Ojs.t) -> vscode_SemanticTokensBuilder_of_js x2471
        and t_to_js : t -> Ojs.t =
          fun (x2470 : vscode_SemanticTokensBuilder) ->
            vscode_SemanticTokensBuilder_to_js x2470
        let (create : ?legend:vscode_SemanticTokensLegend -> unit -> t) =
          fun ?legend:(x2472 : vscode_SemanticTokensLegend option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "SemanticTokensBuilder")
                   (let x2473 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x2472 with
                     | Some x2474 ->
                         ignore
                           (Ojs.call x2473 "push"
                              [|(vscode_SemanticTokensLegend_to_js x2474)|])
                     | None -> ());
                    x2473))
        let (push :
          t ->
            line:float ->
              char:float ->
                length:float ->
                  tokenType:float -> ?tokenModifiers:float -> unit -> unit)
          =
          fun (x2482 : t) ->
            fun ~line:(x2475 : float) ->
              fun ~char:(x2476 : float) ->
                fun ~length:(x2477 : float) ->
                  fun ~tokenType:(x2478 : float) ->
                    fun ?tokenModifiers:(x2479 : float option) ->
                      fun () ->
                        ignore
                          (let x2483 = t_to_js x2482 in
                           Ojs.call (Ojs.get_prop_ascii x2483 "push") "apply"
                             [|x2483;((let x2480 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       ignore
                                         (Ojs.call x2480 "push"
                                            [|(Ojs.float_to_js x2475)|]);
                                       ignore
                                         (Ojs.call x2480 "push"
                                            [|(Ojs.float_to_js x2476)|]);
                                       ignore
                                         (Ojs.call x2480 "push"
                                            [|(Ojs.float_to_js x2477)|]);
                                       ignore
                                         (Ojs.call x2480 "push"
                                            [|(Ojs.float_to_js x2478)|]);
                                       (match x2479 with
                                        | Some x2481 ->
                                            ignore
                                              (Ojs.call x2480 "push"
                                                 [|(Ojs.float_to_js x2481)|])
                                        | None -> ());
                                       x2480))|])
        let (push' :
          t ->
            range:vscode_Range ->
              tokenType:string -> ?tokenModifiers:string list -> unit -> unit)
          =
          fun (x2490 : t) ->
            fun ~range:(x2484 : vscode_Range) ->
              fun ~tokenType:(x2485 : string) ->
                fun ?tokenModifiers:(x2486 : string list option) ->
                  fun () ->
                    ignore
                      (let x2491 = t_to_js x2490 in
                       Ojs.call (Ojs.get_prop_ascii x2491 "push") "apply"
                         [|x2491;((let x2487 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x2487 "push"
                                        [|(vscode_Range_to_js x2484)|]);
                                   ignore
                                     (Ojs.call x2487 "push"
                                        [|(Ojs.string_to_js x2485)|]);
                                   (match x2486 with
                                    | Some x2488 ->
                                        ignore
                                          (Ojs.call x2487 "push"
                                             [|(Ojs.list_to_js
                                                  Ojs.string_to_js x2488)|])
                                    | None -> ());
                                   x2487))|])
        let (build : t -> ?resultId:string -> unit -> vscode_SemanticTokens)
          =
          fun (x2495 : t) ->
            fun ?resultId:(x2492 : string option) ->
              fun () ->
                vscode_SemanticTokens_of_js
                  (let x2496 = t_to_js x2495 in
                   Ojs.call (Ojs.get_prop_ascii x2496 "build") "apply"
                     [|x2496;((let x2493 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2492 with
                                | Some x2494 ->
                                    ignore
                                      (Ojs.call x2493 "push"
                                         [|(Ojs.string_to_js x2494)|])
                                | None -> ());
                               x2493))|])
      end
    module SemanticTokens =
      struct
        type t = vscode_SemanticTokens
        let rec t_of_js : Ojs.t -> t =
          fun (x2498 : Ojs.t) -> vscode_SemanticTokens_of_js x2498
        and t_to_js : t -> Ojs.t =
          fun (x2497 : vscode_SemanticTokens) ->
            vscode_SemanticTokens_to_js x2497
        let (get_resultId : t -> string) =
          fun (x2499 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2499) "resultId")
        let (get_data : t -> Uint32Array.t) =
          fun (x2500 : t) ->
            Uint32Array.t_of_js (Ojs.get_prop_ascii (t_to_js x2500) "data")
        let (create : data:Uint32Array.t -> ?resultId:string -> unit -> t) =
          fun ~data:(x2501 : Uint32Array.t) ->
            fun ?resultId:(x2502 : string option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "SemanticTokens")
                     (let x2503 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2503 "push"
                           [|(Uint32Array.t_to_js x2501)|]);
                      (match x2502 with
                       | Some x2504 ->
                           ignore
                             (Ojs.call x2503 "push"
                                [|(Ojs.string_to_js x2504)|])
                       | None -> ());
                      x2503))
      end
    module SemanticTokensEdits =
      struct
        type t = vscode_SemanticTokensEdits
        let rec t_of_js : Ojs.t -> t =
          fun (x2506 : Ojs.t) -> vscode_SemanticTokensEdits_of_js x2506
        and t_to_js : t -> Ojs.t =
          fun (x2505 : vscode_SemanticTokensEdits) ->
            vscode_SemanticTokensEdits_to_js x2505
        let (get_resultId : t -> string) =
          fun (x2507 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2507) "resultId")
        let (get_edits : t -> vscode_SemanticTokensEdit list) =
          fun (x2508 : t) ->
            Ojs.list_of_js vscode_SemanticTokensEdit_of_js
              (Ojs.get_prop_ascii (t_to_js x2508) "edits")
        let (create :
          edits:vscode_SemanticTokensEdit list ->
            ?resultId:string -> unit -> t)
          =
          fun ~edits:(x2510 : vscode_SemanticTokensEdit list) ->
            fun ?resultId:(x2511 : string option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "SemanticTokensEdits")
                     (let x2512 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2512 "push"
                           [|(Ojs.list_to_js vscode_SemanticTokensEdit_to_js
                                x2510)|]);
                      (match x2511 with
                       | Some x2513 ->
                           ignore
                             (Ojs.call x2512 "push"
                                [|(Ojs.string_to_js x2513)|])
                       | None -> ());
                      x2512))
      end
    module SemanticTokensEdit =
      struct
        type t = vscode_SemanticTokensEdit
        let rec t_of_js : Ojs.t -> t =
          fun (x2516 : Ojs.t) -> vscode_SemanticTokensEdit_of_js x2516
        and t_to_js : t -> Ojs.t =
          fun (x2515 : vscode_SemanticTokensEdit) ->
            vscode_SemanticTokensEdit_to_js x2515
        let (get_start : t -> float) =
          fun (x2517 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2517) "start")
        let (get_deleteCount : t -> float) =
          fun (x2518 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x2518) "deleteCount")
        let (get_data : t -> Uint32Array.t) =
          fun (x2519 : t) ->
            Uint32Array.t_of_js (Ojs.get_prop_ascii (t_to_js x2519) "data")
        let (create :
          start:float ->
            deleteCount:float -> ?data:Uint32Array.t -> unit -> t)
          =
          fun ~start:(x2520 : float) ->
            fun ~deleteCount:(x2521 : float) ->
              fun ?data:(x2522 : Uint32Array.t option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "SemanticTokensEdit")
                       (let x2523 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x2523 "push" [|(Ojs.float_to_js x2520)|]);
                        ignore
                          (Ojs.call x2523 "push" [|(Ojs.float_to_js x2521)|]);
                        (match x2522 with
                         | Some x2524 ->
                             ignore
                               (Ojs.call x2523 "push"
                                  [|(Uint32Array.t_to_js x2524)|])
                         | None -> ());
                        x2523))
      end
    module DocumentSemanticTokensProvider =
      struct
        type t = vscode_DocumentSemanticTokensProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2526 : Ojs.t) ->
            vscode_DocumentSemanticTokensProvider_of_js x2526
        and t_to_js : t -> Ojs.t =
          fun (x2525 : vscode_DocumentSemanticTokensProvider) ->
            vscode_DocumentSemanticTokensProvider_to_js x2525
        let (get_onDidChangeSemanticTokens : t -> unit vscode_Event) =
          fun (x2527 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x2527) "onDidChangeSemanticTokens")
        let (set_onDidChangeSemanticTokens : t -> unit vscode_Event -> unit)
          =
          fun (x2529 : t) ->
            fun (x2530 : unit vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x2529) "onDidChangeSemanticTokens"
                (vscode_Event_to_js Ojs.unit_to_js x2530)
        let (provideDocumentSemanticTokens :
          t ->
            document:vscode_TextDocument ->
              token:vscode_CancellationToken ->
                vscode_SemanticTokens vscode_ProviderResult)
          =
          fun (x2534 : t) ->
            fun ~document:(x2532 : vscode_TextDocument) ->
              fun ~token:(x2533 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js vscode_SemanticTokens_of_js
                  (Ojs.call (t_to_js x2534) "provideDocumentSemanticTokens"
                     [|(vscode_TextDocument_to_js x2532);(vscode_CancellationToken_to_js
                                                            x2533)|])
        let (provideDocumentSemanticTokensEdits :
          t ->
            document:vscode_TextDocument ->
              previousResultId:string ->
                token:vscode_CancellationToken ->
                  (vscode_SemanticTokens, vscode_SemanticTokensEdits) union2
                    vscode_ProviderResult)
          =
          fun (x2539 : t) ->
            fun ~document:(x2536 : vscode_TextDocument) ->
              fun ~previousResultId:(x2537 : string) ->
                fun ~token:(x2538 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2540 : Ojs.t) ->
                       union2_of_js vscode_SemanticTokens_of_js
                         vscode_SemanticTokensEdits_of_js x2540)
                    (Ojs.call (t_to_js x2539)
                       "provideDocumentSemanticTokensEdits"
                       [|(vscode_TextDocument_to_js x2536);(Ojs.string_to_js
                                                              x2537);(
                         vscode_CancellationToken_to_js x2538)|])
      end
    module DocumentRangeSemanticTokensProvider =
      struct
        type t = vscode_DocumentRangeSemanticTokensProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2544 : Ojs.t) ->
            vscode_DocumentRangeSemanticTokensProvider_of_js x2544
        and t_to_js : t -> Ojs.t =
          fun (x2543 : vscode_DocumentRangeSemanticTokensProvider) ->
            vscode_DocumentRangeSemanticTokensProvider_to_js x2543
        let (provideDocumentRangeSemanticTokens :
          t ->
            document:vscode_TextDocument ->
              range:vscode_Range ->
                token:vscode_CancellationToken ->
                  vscode_SemanticTokens vscode_ProviderResult)
          =
          fun (x2548 : t) ->
            fun ~document:(x2545 : vscode_TextDocument) ->
              fun ~range:(x2546 : vscode_Range) ->
                fun ~token:(x2547 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js vscode_SemanticTokens_of_js
                    (Ojs.call (t_to_js x2548)
                       "provideDocumentRangeSemanticTokens"
                       [|(vscode_TextDocument_to_js x2545);(vscode_Range_to_js
                                                              x2546);(
                         vscode_CancellationToken_to_js x2547)|])
      end
    module FormattingOptions =
      struct
        type t = vscode_FormattingOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x2551 : Ojs.t) -> vscode_FormattingOptions_of_js x2551
        and t_to_js : t -> Ojs.t =
          fun (x2550 : vscode_FormattingOptions) ->
            vscode_FormattingOptions_to_js x2550
        let (get_tabSize : t -> float) =
          fun (x2552 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2552) "tabSize")
        let (set_tabSize : t -> float -> unit) =
          fun (x2553 : t) ->
            fun (x2554 : float) ->
              Ojs.set_prop_ascii (t_to_js x2553) "tabSize"
                (Ojs.float_to_js x2554)
        let (get_insertSpaces : t -> bool) =
          fun (x2555 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x2555) "insertSpaces")
        let (set_insertSpaces : t -> bool -> unit) =
          fun (x2556 : t) ->
            fun (x2557 : bool) ->
              Ojs.set_prop_ascii (t_to_js x2556) "insertSpaces"
                (Ojs.bool_to_js x2557)
        let (get : t -> string -> bool or_string or_number) =
          fun (x2558 : t) ->
            fun (x2559 : string) ->
              or_number_of_js
                (fun (x2560 : Ojs.t) -> or_string_of_js Ojs.bool_of_js x2560)
                (Ojs.get_prop (t_to_js x2558) (Ojs.string_to_js x2559))
        let (set : t -> string -> bool or_string or_number -> unit) =
          fun (x2562 : t) ->
            fun (x2563 : string) ->
              fun (x2564 : bool or_string or_number) ->
                Ojs.set_prop (t_to_js x2562) (Ojs.string_to_js x2563)
                  (or_number_to_js
                     (fun (x2565 : bool or_string) ->
                        or_string_to_js Ojs.bool_to_js x2565) x2564)
      end
    module DocumentFormattingEditProvider =
      struct
        type t = vscode_DocumentFormattingEditProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2568 : Ojs.t) ->
            vscode_DocumentFormattingEditProvider_of_js x2568
        and t_to_js : t -> Ojs.t =
          fun (x2567 : vscode_DocumentFormattingEditProvider) ->
            vscode_DocumentFormattingEditProvider_to_js x2567
        let (provideDocumentFormattingEdits :
          t ->
            document:vscode_TextDocument ->
              options:vscode_FormattingOptions ->
                token:vscode_CancellationToken ->
                  vscode_TextEdit list vscode_ProviderResult)
          =
          fun (x2572 : t) ->
            fun ~document:(x2569 : vscode_TextDocument) ->
              fun ~options:(x2570 : vscode_FormattingOptions) ->
                fun ~token:(x2571 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2573 : Ojs.t) ->
                       Ojs.list_of_js vscode_TextEdit_of_js x2573)
                    (Ojs.call (t_to_js x2572)
                       "provideDocumentFormattingEdits"
                       [|(vscode_TextDocument_to_js x2569);(vscode_FormattingOptions_to_js
                                                              x2570);(
                         vscode_CancellationToken_to_js x2571)|])
      end
    module DocumentRangeFormattingEditProvider =
      struct
        type t = vscode_DocumentRangeFormattingEditProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2576 : Ojs.t) ->
            vscode_DocumentRangeFormattingEditProvider_of_js x2576
        and t_to_js : t -> Ojs.t =
          fun (x2575 : vscode_DocumentRangeFormattingEditProvider) ->
            vscode_DocumentRangeFormattingEditProvider_to_js x2575
        let (provideDocumentRangeFormattingEdits :
          t ->
            document:vscode_TextDocument ->
              range:vscode_Range ->
                options:vscode_FormattingOptions ->
                  token:vscode_CancellationToken ->
                    vscode_TextEdit list vscode_ProviderResult)
          =
          fun (x2581 : t) ->
            fun ~document:(x2577 : vscode_TextDocument) ->
              fun ~range:(x2578 : vscode_Range) ->
                fun ~options:(x2579 : vscode_FormattingOptions) ->
                  fun ~token:(x2580 : vscode_CancellationToken) ->
                    vscode_ProviderResult_of_js
                      (fun (x2582 : Ojs.t) ->
                         Ojs.list_of_js vscode_TextEdit_of_js x2582)
                      (Ojs.call (t_to_js x2581)
                         "provideDocumentRangeFormattingEdits"
                         [|(vscode_TextDocument_to_js x2577);(vscode_Range_to_js
                                                                x2578);(
                           vscode_FormattingOptions_to_js x2579);(vscode_CancellationToken_to_js
                                                                    x2580)|])
      end
    module OnTypeFormattingEditProvider =
      struct
        type t = vscode_OnTypeFormattingEditProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2585 : Ojs.t) ->
            vscode_OnTypeFormattingEditProvider_of_js x2585
        and t_to_js : t -> Ojs.t =
          fun (x2584 : vscode_OnTypeFormattingEditProvider) ->
            vscode_OnTypeFormattingEditProvider_to_js x2584
        let (provideOnTypeFormattingEdits :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                ch:string ->
                  options:vscode_FormattingOptions ->
                    token:vscode_CancellationToken ->
                      vscode_TextEdit list vscode_ProviderResult)
          =
          fun (x2591 : t) ->
            fun ~document:(x2586 : vscode_TextDocument) ->
              fun ~position:(x2587 : vscode_Position) ->
                fun ~ch:(x2588 : string) ->
                  fun ~options:(x2589 : vscode_FormattingOptions) ->
                    fun ~token:(x2590 : vscode_CancellationToken) ->
                      vscode_ProviderResult_of_js
                        (fun (x2592 : Ojs.t) ->
                           Ojs.list_of_js vscode_TextEdit_of_js x2592)
                        (Ojs.call (t_to_js x2591)
                           "provideOnTypeFormattingEdits"
                           [|(vscode_TextDocument_to_js x2586);(vscode_Position_to_js
                                                                  x2587);(
                             Ojs.string_to_js x2588);(vscode_FormattingOptions_to_js
                                                        x2589);(vscode_CancellationToken_to_js
                                                                  x2590)|])
      end
    module ParameterInformation =
      struct
        type t = vscode_ParameterInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x2595 : Ojs.t) -> vscode_ParameterInformation_of_js x2595
        and t_to_js : t -> Ojs.t =
          fun (x2594 : vscode_ParameterInformation) ->
            vscode_ParameterInformation_to_js x2594
        let (get_label : t -> (float * float) or_string) =
          fun (x2596 : t) ->
            or_string_of_js
              (fun (x2597 : Ojs.t) ->
                 let x2598 = x2597 in
                 ((Ojs.float_of_js (Ojs.array_get x2598 0)),
                   (Ojs.float_of_js (Ojs.array_get x2598 1))))
              (Ojs.get_prop_ascii (t_to_js x2596) "label")
        let (set_label : t -> (float * float) or_string -> unit) =
          fun (x2599 : t) ->
            fun (x2600 : (float * float) or_string) ->
              Ojs.set_prop_ascii (t_to_js x2599) "label"
                (or_string_to_js
                   (fun (x2601 : (float * float)) ->
                      let (x2602, x2603) = x2601 in
                      let x2604 = Ojs.array_make 2 in
                      Ojs.array_set x2604 0 (Ojs.float_to_js x2602);
                      Ojs.array_set x2604 1 (Ojs.float_to_js x2603);
                      x2604) x2600)
        let (get_documentation : t -> vscode_MarkdownString or_string) =
          fun (x2605 : t) ->
            or_string_of_js vscode_MarkdownString_of_js
              (Ojs.get_prop_ascii (t_to_js x2605) "documentation")
        let (set_documentation :
          t -> vscode_MarkdownString or_string -> unit) =
          fun (x2607 : t) ->
            fun (x2608 : vscode_MarkdownString or_string) ->
              Ojs.set_prop_ascii (t_to_js x2607) "documentation"
                (or_string_to_js vscode_MarkdownString_to_js x2608)
        let (create :
          label:(float * float) or_string ->
            ?documentation:vscode_MarkdownString or_string -> unit -> t)
          =
          fun ~label:(x2610 : (float * float) or_string) ->
            fun
              ?documentation:(x2611 : vscode_MarkdownString or_string option)
              ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "ParameterInformation")
                     (let x2612 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2612 "push"
                           [|(or_string_to_js
                                (fun (x2615 : (float * float)) ->
                                   let (x2616, x2617) = x2615 in
                                   let x2618 = Ojs.array_make 2 in
                                   Ojs.array_set x2618 0
                                     (Ojs.float_to_js x2616);
                                   Ojs.array_set x2618 1
                                     (Ojs.float_to_js x2617);
                                   x2618) x2610)|]);
                      (match x2611 with
                       | Some x2613 ->
                           ignore
                             (Ojs.call x2612 "push"
                                [|(or_string_to_js
                                     vscode_MarkdownString_to_js x2613)|])
                       | None -> ());
                      x2612))
      end
    module SignatureInformation =
      struct
        type t = vscode_SignatureInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x2620 : Ojs.t) -> vscode_SignatureInformation_of_js x2620
        and t_to_js : t -> Ojs.t =
          fun (x2619 : vscode_SignatureInformation) ->
            vscode_SignatureInformation_to_js x2619
        let (get_label : t -> string) =
          fun (x2621 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2621) "label")
        let (set_label : t -> string -> unit) =
          fun (x2622 : t) ->
            fun (x2623 : string) ->
              Ojs.set_prop_ascii (t_to_js x2622) "label"
                (Ojs.string_to_js x2623)
        let (get_documentation : t -> vscode_MarkdownString or_string) =
          fun (x2624 : t) ->
            or_string_of_js vscode_MarkdownString_of_js
              (Ojs.get_prop_ascii (t_to_js x2624) "documentation")
        let (set_documentation :
          t -> vscode_MarkdownString or_string -> unit) =
          fun (x2626 : t) ->
            fun (x2627 : vscode_MarkdownString or_string) ->
              Ojs.set_prop_ascii (t_to_js x2626) "documentation"
                (or_string_to_js vscode_MarkdownString_to_js x2627)
        let (get_parameters : t -> vscode_ParameterInformation list) =
          fun (x2629 : t) ->
            Ojs.list_of_js vscode_ParameterInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x2629) "parameters")
        let (set_parameters : t -> vscode_ParameterInformation list -> unit)
          =
          fun (x2631 : t) ->
            fun (x2632 : vscode_ParameterInformation list) ->
              Ojs.set_prop_ascii (t_to_js x2631) "parameters"
                (Ojs.list_to_js vscode_ParameterInformation_to_js x2632)
        let (get_activeParameter : t -> float) =
          fun (x2634 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x2634) "activeParameter")
        let (set_activeParameter : t -> float -> unit) =
          fun (x2635 : t) ->
            fun (x2636 : float) ->
              Ojs.set_prop_ascii (t_to_js x2635) "activeParameter"
                (Ojs.float_to_js x2636)
        let (create :
          label:string ->
            ?documentation:vscode_MarkdownString or_string -> unit -> t)
          =
          fun ~label:(x2637 : string) ->
            fun
              ?documentation:(x2638 : vscode_MarkdownString or_string option)
              ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "SignatureInformation")
                     (let x2639 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2639 "push" [|(Ojs.string_to_js x2637)|]);
                      (match x2638 with
                       | Some x2640 ->
                           ignore
                             (Ojs.call x2639 "push"
                                [|(or_string_to_js
                                     vscode_MarkdownString_to_js x2640)|])
                       | None -> ());
                      x2639))
      end
    module SignatureHelp =
      struct
        type t = vscode_SignatureHelp
        let rec t_of_js : Ojs.t -> t =
          fun (x2643 : Ojs.t) -> vscode_SignatureHelp_of_js x2643
        and t_to_js : t -> Ojs.t =
          fun (x2642 : vscode_SignatureHelp) ->
            vscode_SignatureHelp_to_js x2642
        let (get_signatures : t -> vscode_SignatureInformation list) =
          fun (x2644 : t) ->
            Ojs.list_of_js vscode_SignatureInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x2644) "signatures")
        let (set_signatures : t -> vscode_SignatureInformation list -> unit)
          =
          fun (x2646 : t) ->
            fun (x2647 : vscode_SignatureInformation list) ->
              Ojs.set_prop_ascii (t_to_js x2646) "signatures"
                (Ojs.list_to_js vscode_SignatureInformation_to_js x2647)
        let (get_activeSignature : t -> float) =
          fun (x2649 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x2649) "activeSignature")
        let (set_activeSignature : t -> float -> unit) =
          fun (x2650 : t) ->
            fun (x2651 : float) ->
              Ojs.set_prop_ascii (t_to_js x2650) "activeSignature"
                (Ojs.float_to_js x2651)
        let (get_activeParameter : t -> float) =
          fun (x2652 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x2652) "activeParameter")
        let (set_activeParameter : t -> float -> unit) =
          fun (x2653 : t) ->
            fun (x2654 : float) ->
              Ojs.set_prop_ascii (t_to_js x2653) "activeParameter"
                (Ojs.float_to_js x2654)
      end
    module SignatureHelpTriggerKind =
      struct
        type t = vscode_SignatureHelpTriggerKind
        let rec t_of_js : Ojs.t -> t =
          fun (x2656 : Ojs.t) -> vscode_SignatureHelpTriggerKind_of_js x2656
        and t_to_js : t -> Ojs.t =
          fun (x2655 : vscode_SignatureHelpTriggerKind) ->
            vscode_SignatureHelpTriggerKind_to_js x2655
      end
    module SignatureHelpContext =
      struct
        type t = vscode_SignatureHelpContext
        let rec t_of_js : Ojs.t -> t =
          fun (x2658 : Ojs.t) -> vscode_SignatureHelpContext_of_js x2658
        and t_to_js : t -> Ojs.t =
          fun (x2657 : vscode_SignatureHelpContext) ->
            vscode_SignatureHelpContext_to_js x2657
        let (get_triggerKind : t -> vscode_SignatureHelpTriggerKind) =
          fun (x2659 : t) ->
            vscode_SignatureHelpTriggerKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2659) "triggerKind")
        let (get_triggerCharacter : t -> string) =
          fun (x2660 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2660) "triggerCharacter")
        let (get_isRetrigger : t -> bool) =
          fun (x2661 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x2661) "isRetrigger")
        let (get_activeSignatureHelp : t -> vscode_SignatureHelp) =
          fun (x2662 : t) ->
            vscode_SignatureHelp_of_js
              (Ojs.get_prop_ascii (t_to_js x2662) "activeSignatureHelp")
      end
    module SignatureHelpProvider =
      struct
        type t = vscode_SignatureHelpProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2664 : Ojs.t) -> vscode_SignatureHelpProvider_of_js x2664
        and t_to_js : t -> Ojs.t =
          fun (x2663 : vscode_SignatureHelpProvider) ->
            vscode_SignatureHelpProvider_to_js x2663
        let (provideSignatureHelp :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  context:vscode_SignatureHelpContext ->
                    vscode_SignatureHelp vscode_ProviderResult)
          =
          fun (x2669 : t) ->
            fun ~document:(x2665 : vscode_TextDocument) ->
              fun ~position:(x2666 : vscode_Position) ->
                fun ~token:(x2667 : vscode_CancellationToken) ->
                  fun ~context:(x2668 : vscode_SignatureHelpContext) ->
                    vscode_ProviderResult_of_js vscode_SignatureHelp_of_js
                      (Ojs.call (t_to_js x2669) "provideSignatureHelp"
                         [|(vscode_TextDocument_to_js x2665);(vscode_Position_to_js
                                                                x2666);(
                           vscode_CancellationToken_to_js x2667);(vscode_SignatureHelpContext_to_js
                                                                    x2668)|])
      end
    module SignatureHelpProviderMetadata =
      struct
        type t = vscode_SignatureHelpProviderMetadata
        let rec t_of_js : Ojs.t -> t =
          fun (x2672 : Ojs.t) ->
            vscode_SignatureHelpProviderMetadata_of_js x2672
        and t_to_js : t -> Ojs.t =
          fun (x2671 : vscode_SignatureHelpProviderMetadata) ->
            vscode_SignatureHelpProviderMetadata_to_js x2671
        let (get_triggerCharacters : t -> string list) =
          fun (x2673 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2673) "triggerCharacters")
        let (get_retriggerCharacters : t -> string list) =
          fun (x2675 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2675) "retriggerCharacters")
      end
    module CompletionItemKind =
      struct
        type t = vscode_CompletionItemKind
        let rec t_of_js : Ojs.t -> t =
          fun (x2678 : Ojs.t) -> vscode_CompletionItemKind_of_js x2678
        and t_to_js : t -> Ojs.t =
          fun (x2677 : vscode_CompletionItemKind) ->
            vscode_CompletionItemKind_to_js x2677
      end
    module CompletionItemTag =
      struct
        type t = vscode_CompletionItemTag
        let rec t_of_js : Ojs.t -> t =
          fun (x2680 : Ojs.t) -> vscode_CompletionItemTag_of_js x2680
        and t_to_js : t -> Ojs.t =
          fun (x2679 : vscode_CompletionItemTag) ->
            vscode_CompletionItemTag_to_js x2679
      end
    module CompletionItem =
      struct
        type t = vscode_CompletionItem
        let rec t_of_js : Ojs.t -> t =
          fun (x2682 : Ojs.t) -> vscode_CompletionItem_of_js x2682
        and t_to_js : t -> Ojs.t =
          fun (x2681 : vscode_CompletionItem) ->
            vscode_CompletionItem_to_js x2681
        let (get_label : t -> string) =
          fun (x2683 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2683) "label")
        let (set_label : t -> string -> unit) =
          fun (x2684 : t) ->
            fun (x2685 : string) ->
              Ojs.set_prop_ascii (t_to_js x2684) "label"
                (Ojs.string_to_js x2685)
        let (get_kind : t -> vscode_CompletionItemKind) =
          fun (x2686 : t) ->
            vscode_CompletionItemKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2686) "kind")
        let (set_kind : t -> vscode_CompletionItemKind -> unit) =
          fun (x2687 : t) ->
            fun (x2688 : vscode_CompletionItemKind) ->
              Ojs.set_prop_ascii (t_to_js x2687) "kind"
                (vscode_CompletionItemKind_to_js x2688)
        let (get_tags : t -> vscode_CompletionItemTag list) =
          fun (x2689 : t) ->
            Ojs.list_of_js vscode_CompletionItemTag_of_js
              (Ojs.get_prop_ascii (t_to_js x2689) "tags")
        let (set_tags : t -> vscode_CompletionItemTag list -> unit) =
          fun (x2691 : t) ->
            fun (x2692 : vscode_CompletionItemTag list) ->
              Ojs.set_prop_ascii (t_to_js x2691) "tags"
                (Ojs.list_to_js vscode_CompletionItemTag_to_js x2692)
        let (get_detail : t -> string) =
          fun (x2694 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2694) "detail")
        let (set_detail : t -> string -> unit) =
          fun (x2695 : t) ->
            fun (x2696 : string) ->
              Ojs.set_prop_ascii (t_to_js x2695) "detail"
                (Ojs.string_to_js x2696)
        let (get_documentation : t -> vscode_MarkdownString or_string) =
          fun (x2697 : t) ->
            or_string_of_js vscode_MarkdownString_of_js
              (Ojs.get_prop_ascii (t_to_js x2697) "documentation")
        let (set_documentation :
          t -> vscode_MarkdownString or_string -> unit) =
          fun (x2699 : t) ->
            fun (x2700 : vscode_MarkdownString or_string) ->
              Ojs.set_prop_ascii (t_to_js x2699) "documentation"
                (or_string_to_js vscode_MarkdownString_to_js x2700)
        let (get_sortText : t -> string) =
          fun (x2702 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2702) "sortText")
        let (set_sortText : t -> string -> unit) =
          fun (x2703 : t) ->
            fun (x2704 : string) ->
              Ojs.set_prop_ascii (t_to_js x2703) "sortText"
                (Ojs.string_to_js x2704)
        let (get_filterText : t -> string) =
          fun (x2705 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2705) "filterText")
        let (set_filterText : t -> string -> unit) =
          fun (x2706 : t) ->
            fun (x2707 : string) ->
              Ojs.set_prop_ascii (t_to_js x2706) "filterText"
                (Ojs.string_to_js x2707)
        let (get_preselect : t -> bool) =
          fun (x2708 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x2708) "preselect")
        let (set_preselect : t -> bool -> unit) =
          fun (x2709 : t) ->
            fun (x2710 : bool) ->
              Ojs.set_prop_ascii (t_to_js x2709) "preselect"
                (Ojs.bool_to_js x2710)
        let (get_insertText : t -> vscode_SnippetString or_string) =
          fun (x2711 : t) ->
            or_string_of_js vscode_SnippetString_of_js
              (Ojs.get_prop_ascii (t_to_js x2711) "insertText")
        let (set_insertText : t -> vscode_SnippetString or_string -> unit) =
          fun (x2713 : t) ->
            fun (x2714 : vscode_SnippetString or_string) ->
              Ojs.set_prop_ascii (t_to_js x2713) "insertText"
                (or_string_to_js vscode_SnippetString_to_js x2714)
        let (get_range : t -> (vscode_Range, anonymous_interface_8) union2) =
          fun (x2716 : t) ->
            union2_of_js vscode_Range_of_js anonymous_interface_8_of_js
              (Ojs.get_prop_ascii (t_to_js x2716) "range")
        let (set_range :
          t -> (vscode_Range, anonymous_interface_8) union2 -> unit) =
          fun (x2719 : t) ->
            fun (x2720 : (vscode_Range, anonymous_interface_8) union2) ->
              Ojs.set_prop_ascii (t_to_js x2719) "range"
                (union2_to_js vscode_Range_to_js anonymous_interface_8_to_js
                   x2720)
        let (get_commitCharacters : t -> string list) =
          fun (x2723 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2723) "commitCharacters")
        let (set_commitCharacters : t -> string list -> unit) =
          fun (x2725 : t) ->
            fun (x2726 : string list) ->
              Ojs.set_prop_ascii (t_to_js x2725) "commitCharacters"
                (Ojs.list_to_js Ojs.string_to_js x2726)
        let (get_keepWhitespace : t -> bool) =
          fun (x2728 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x2728) "keepWhitespace")
        let (set_keepWhitespace : t -> bool -> unit) =
          fun (x2729 : t) ->
            fun (x2730 : bool) ->
              Ojs.set_prop_ascii (t_to_js x2729) "keepWhitespace"
                (Ojs.bool_to_js x2730)
        let (get_textEdit : t -> vscode_TextEdit) =
          fun (x2731 : t) ->
            vscode_TextEdit_of_js
              (Ojs.get_prop_ascii (t_to_js x2731) "textEdit")
        let (set_textEdit : t -> vscode_TextEdit -> unit) =
          fun (x2732 : t) ->
            fun (x2733 : vscode_TextEdit) ->
              Ojs.set_prop_ascii (t_to_js x2732) "textEdit"
                (vscode_TextEdit_to_js x2733)
        let (get_additionalTextEdits : t -> vscode_TextEdit list) =
          fun (x2734 : t) ->
            Ojs.list_of_js vscode_TextEdit_of_js
              (Ojs.get_prop_ascii (t_to_js x2734) "additionalTextEdits")
        let (set_additionalTextEdits : t -> vscode_TextEdit list -> unit) =
          fun (x2736 : t) ->
            fun (x2737 : vscode_TextEdit list) ->
              Ojs.set_prop_ascii (t_to_js x2736) "additionalTextEdits"
                (Ojs.list_to_js vscode_TextEdit_to_js x2737)
        let (get_command : t -> vscode_Command) =
          fun (x2739 : t) ->
            vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x2739) "command")
        let (set_command : t -> vscode_Command -> unit) =
          fun (x2740 : t) ->
            fun (x2741 : vscode_Command) ->
              Ojs.set_prop_ascii (t_to_js x2740) "command"
                (vscode_Command_to_js x2741)
        let (create :
          label:string -> ?kind:vscode_CompletionItemKind -> unit -> t) =
          fun ~label:(x2742 : string) ->
            fun ?kind:(x2743 : vscode_CompletionItemKind option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "CompletionItem")
                     (let x2744 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2744 "push" [|(Ojs.string_to_js x2742)|]);
                      (match x2743 with
                       | Some x2745 ->
                           ignore
                             (Ojs.call x2744 "push"
                                [|(vscode_CompletionItemKind_to_js x2745)|])
                       | None -> ());
                      x2744))
      end
    module CompletionList =
      struct
        type 'T t = 'T vscode_CompletionList
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x2748 : Ojs.t) ->
              vscode_CompletionList_of_js __T_of_js x2748
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x2746 : __T vscode_CompletionList) ->
              vscode_CompletionList_to_js __T_to_js x2746
        let (get_isIncomplete : 'T t -> bool) =
          fun (x2750 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x2750) "isIncomplete")
        let (set_isIncomplete : 'T t -> bool -> unit) =
          fun (x2752 : 'T t) ->
            fun (x2753 : bool) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x2752) "isIncomplete"
                (Ojs.bool_to_js x2753)
        let (get_items : 'T t -> 'T list) =
          fun (x2755 : 'T t) ->
            Ojs.list_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x2755) "items")
        let (set_items : 'T t -> 'T list -> unit) =
          fun (x2758 : 'T t) ->
            fun (x2759 : 'T list) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x2758) "items"
                (Ojs.list_to_js Obj.magic x2759)
        let (create : ?items:'T list -> ?isIncomplete:bool -> unit -> 'T t) =
          fun ?items:(x2762 : 'T list option) ->
            fun ?isIncomplete:(x2763 : bool option) ->
              fun () ->
                t_of_js Obj.magic
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "CompletionList")
                     (let x2764 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2762 with
                       | Some x2766 ->
                           ignore
                             (Ojs.call x2764 "push"
                                [|(Ojs.list_to_js Obj.magic x2766)|])
                       | None -> ());
                      (match x2763 with
                       | Some x2765 ->
                           ignore
                             (Ojs.call x2764 "push"
                                [|(Ojs.bool_to_js x2765)|])
                       | None -> ());
                      x2764))
      end
    module CompletionTriggerKind =
      struct
        type t = vscode_CompletionTriggerKind
        let rec t_of_js : Ojs.t -> t =
          fun (x2770 : Ojs.t) -> vscode_CompletionTriggerKind_of_js x2770
        and t_to_js : t -> Ojs.t =
          fun (x2769 : vscode_CompletionTriggerKind) ->
            vscode_CompletionTriggerKind_to_js x2769
      end
    module CompletionContext =
      struct
        type t = vscode_CompletionContext
        let rec t_of_js : Ojs.t -> t =
          fun (x2772 : Ojs.t) -> vscode_CompletionContext_of_js x2772
        and t_to_js : t -> Ojs.t =
          fun (x2771 : vscode_CompletionContext) ->
            vscode_CompletionContext_to_js x2771
        let (get_triggerKind : t -> vscode_CompletionTriggerKind) =
          fun (x2773 : t) ->
            vscode_CompletionTriggerKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2773) "triggerKind")
        let (get_triggerCharacter : t -> string) =
          fun (x2774 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x2774) "triggerCharacter")
      end
    module CompletionItemProvider =
      struct
        type 'T t = 'T vscode_CompletionItemProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x2777 : Ojs.t) ->
              vscode_CompletionItemProvider_of_js __T_of_js x2777
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x2775 : __T vscode_CompletionItemProvider) ->
              vscode_CompletionItemProvider_to_js __T_to_js x2775
        let (provideCompletionItems :
          'T t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  context:vscode_CompletionContext ->
                    ('T vscode_CompletionList, 'T) or_array
                      vscode_ProviderResult)
          =
          fun (x2783 : 'T t) ->
            fun ~document:(x2779 : vscode_TextDocument) ->
              fun ~position:(x2780 : vscode_Position) ->
                fun ~token:(x2781 : vscode_CancellationToken) ->
                  fun ~context:(x2782 : vscode_CompletionContext) ->
                    vscode_ProviderResult_of_js
                      (fun (x2785 : Ojs.t) ->
                         or_array_of_js
                           (fun (x2786 : Ojs.t) ->
                              vscode_CompletionList_of_js Obj.magic x2786)
                           Obj.magic x2785)
                      (Ojs.call (t_to_js Obj.magic x2783)
                         "provideCompletionItems"
                         [|(vscode_TextDocument_to_js x2779);(vscode_Position_to_js
                                                                x2780);(
                           vscode_CancellationToken_to_js x2781);(vscode_CompletionContext_to_js
                                                                    x2782)|])
        let (resolveCompletionItem :
          'T t ->
            item:'T ->
              token:vscode_CancellationToken -> 'T vscode_ProviderResult)
          =
          fun (x2791 : 'T t) ->
            fun ~item:(x2789 : 'T) ->
              fun ~token:(x2790 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Obj.magic
                  (Ojs.call (t_to_js Obj.magic x2791) "resolveCompletionItem"
                     [|(Obj.magic x2789);(vscode_CancellationToken_to_js
                                            x2790)|])
      end
    module DocumentLink =
      struct
        type t = vscode_DocumentLink
        let rec t_of_js : Ojs.t -> t =
          fun (x2795 : Ojs.t) -> vscode_DocumentLink_of_js x2795
        and t_to_js : t -> Ojs.t =
          fun (x2794 : vscode_DocumentLink) ->
            vscode_DocumentLink_to_js x2794
        let (get_range : t -> vscode_Range) =
          fun (x2796 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2796) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2797 : t) ->
            fun (x2798 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2797) "range"
                (vscode_Range_to_js x2798)
        let (get_target : t -> vscode_Uri) =
          fun (x2799 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x2799) "target")
        let (set_target : t -> vscode_Uri -> unit) =
          fun (x2800 : t) ->
            fun (x2801 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x2800) "target"
                (vscode_Uri_to_js x2801)
        let (get_tooltip : t -> string) =
          fun (x2802 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2802) "tooltip")
        let (set_tooltip : t -> string -> unit) =
          fun (x2803 : t) ->
            fun (x2804 : string) ->
              Ojs.set_prop_ascii (t_to_js x2803) "tooltip"
                (Ojs.string_to_js x2804)
        let (create : range:vscode_Range -> ?target:vscode_Uri -> unit -> t)
          =
          fun ~range:(x2805 : vscode_Range) ->
            fun ?target:(x2806 : vscode_Uri option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "DocumentLink")
                     (let x2807 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2807 "push" [|(vscode_Range_to_js x2805)|]);
                      (match x2806 with
                       | Some x2808 ->
                           ignore
                             (Ojs.call x2807 "push"
                                [|(vscode_Uri_to_js x2808)|])
                       | None -> ());
                      x2807))
      end
    module DocumentLinkProvider =
      struct
        type 'T t = 'T vscode_DocumentLinkProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x2811 : Ojs.t) ->
              vscode_DocumentLinkProvider_of_js __T_of_js x2811
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x2809 : __T vscode_DocumentLinkProvider) ->
              vscode_DocumentLinkProvider_to_js __T_to_js x2809
        let (provideDocumentLinks :
          'T t ->
            document:vscode_TextDocument ->
              token:vscode_CancellationToken -> 'T list vscode_ProviderResult)
          =
          fun (x2815 : 'T t) ->
            fun ~document:(x2813 : vscode_TextDocument) ->
              fun ~token:(x2814 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x2817 : Ojs.t) -> Ojs.list_of_js Obj.magic x2817)
                  (Ojs.call (t_to_js Obj.magic x2815) "provideDocumentLinks"
                     [|(vscode_TextDocument_to_js x2813);(vscode_CancellationToken_to_js
                                                            x2814)|])
        let (resolveDocumentLink :
          'T t ->
            link:'T ->
              token:vscode_CancellationToken -> 'T vscode_ProviderResult)
          =
          fun (x2821 : 'T t) ->
            fun ~link:(x2819 : 'T) ->
              fun ~token:(x2820 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Obj.magic
                  (Ojs.call (t_to_js Obj.magic x2821) "resolveDocumentLink"
                     [|(Obj.magic x2819);(vscode_CancellationToken_to_js
                                            x2820)|])
      end
    module Color =
      struct
        type t = vscode_Color
        let rec t_of_js : Ojs.t -> t =
          fun (x2825 : Ojs.t) -> vscode_Color_of_js x2825
        and t_to_js : t -> Ojs.t =
          fun (x2824 : vscode_Color) -> vscode_Color_to_js x2824
        let (get_red : t -> float) =
          fun (x2826 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2826) "red")
        let (get_green : t -> float) =
          fun (x2827 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2827) "green")
        let (get_blue : t -> float) =
          fun (x2828 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2828) "blue")
        let (get_alpha : t -> float) =
          fun (x2829 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2829) "alpha")
        let (create :
          red:float -> green:float -> blue:float -> alpha:float -> t) =
          fun ~red:(x2830 : float) ->
            fun ~green:(x2831 : float) ->
              fun ~blue:(x2832 : float) ->
                fun ~alpha:(x2833 : float) ->
                  t_of_js
                    (Ojs.new_obj
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode") "Color")
                       [|(Ojs.float_to_js x2830);(Ojs.float_to_js x2831);(
                         Ojs.float_to_js x2832);(Ojs.float_to_js x2833)|])
      end
    module ColorInformation =
      struct
        type t = vscode_ColorInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x2835 : Ojs.t) -> vscode_ColorInformation_of_js x2835
        and t_to_js : t -> Ojs.t =
          fun (x2834 : vscode_ColorInformation) ->
            vscode_ColorInformation_to_js x2834
        let (get_range : t -> vscode_Range) =
          fun (x2836 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2836) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2837 : t) ->
            fun (x2838 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2837) "range"
                (vscode_Range_to_js x2838)
        let (get_color : t -> vscode_Color) =
          fun (x2839 : t) ->
            vscode_Color_of_js (Ojs.get_prop_ascii (t_to_js x2839) "color")
        let (set_color : t -> vscode_Color -> unit) =
          fun (x2840 : t) ->
            fun (x2841 : vscode_Color) ->
              Ojs.set_prop_ascii (t_to_js x2840) "color"
                (vscode_Color_to_js x2841)
        let (create : range:vscode_Range -> color:vscode_Color -> t) =
          fun ~range:(x2842 : vscode_Range) ->
            fun ~color:(x2843 : vscode_Color) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "ColorInformation")
                   [|(vscode_Range_to_js x2842);(vscode_Color_to_js x2843)|])
      end
    module ColorPresentation =
      struct
        type t = vscode_ColorPresentation
        let rec t_of_js : Ojs.t -> t =
          fun (x2845 : Ojs.t) -> vscode_ColorPresentation_of_js x2845
        and t_to_js : t -> Ojs.t =
          fun (x2844 : vscode_ColorPresentation) ->
            vscode_ColorPresentation_to_js x2844
        let (get_label : t -> string) =
          fun (x2846 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2846) "label")
        let (set_label : t -> string -> unit) =
          fun (x2847 : t) ->
            fun (x2848 : string) ->
              Ojs.set_prop_ascii (t_to_js x2847) "label"
                (Ojs.string_to_js x2848)
        let (get_textEdit : t -> vscode_TextEdit) =
          fun (x2849 : t) ->
            vscode_TextEdit_of_js
              (Ojs.get_prop_ascii (t_to_js x2849) "textEdit")
        let (set_textEdit : t -> vscode_TextEdit -> unit) =
          fun (x2850 : t) ->
            fun (x2851 : vscode_TextEdit) ->
              Ojs.set_prop_ascii (t_to_js x2850) "textEdit"
                (vscode_TextEdit_to_js x2851)
        let (get_additionalTextEdits : t -> vscode_TextEdit list) =
          fun (x2852 : t) ->
            Ojs.list_of_js vscode_TextEdit_of_js
              (Ojs.get_prop_ascii (t_to_js x2852) "additionalTextEdits")
        let (set_additionalTextEdits : t -> vscode_TextEdit list -> unit) =
          fun (x2854 : t) ->
            fun (x2855 : vscode_TextEdit list) ->
              Ojs.set_prop_ascii (t_to_js x2854) "additionalTextEdits"
                (Ojs.list_to_js vscode_TextEdit_to_js x2855)
        let (create : label:string -> t) =
          fun ~label:(x2857 : string) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "ColorPresentation") [|(Ojs.string_to_js x2857)|])
      end
    module DocumentColorProvider =
      struct
        type t = vscode_DocumentColorProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2859 : Ojs.t) -> vscode_DocumentColorProvider_of_js x2859
        and t_to_js : t -> Ojs.t =
          fun (x2858 : vscode_DocumentColorProvider) ->
            vscode_DocumentColorProvider_to_js x2858
        let (provideDocumentColors :
          t ->
            document:vscode_TextDocument ->
              token:vscode_CancellationToken ->
                vscode_ColorInformation list vscode_ProviderResult)
          =
          fun (x2862 : t) ->
            fun ~document:(x2860 : vscode_TextDocument) ->
              fun ~token:(x2861 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x2863 : Ojs.t) ->
                     Ojs.list_of_js vscode_ColorInformation_of_js x2863)
                  (Ojs.call (t_to_js x2862) "provideDocumentColors"
                     [|(vscode_TextDocument_to_js x2860);(vscode_CancellationToken_to_js
                                                            x2861)|])
        let (provideColorPresentations :
          t ->
            color:vscode_Color ->
              context:anonymous_interface_6 ->
                token:vscode_CancellationToken ->
                  vscode_ColorPresentation list vscode_ProviderResult)
          =
          fun (x2868 : t) ->
            fun ~color:(x2865 : vscode_Color) ->
              fun ~context:(x2866 : anonymous_interface_6) ->
                fun ~token:(x2867 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2869 : Ojs.t) ->
                       Ojs.list_of_js vscode_ColorPresentation_of_js x2869)
                    (Ojs.call (t_to_js x2868) "provideColorPresentations"
                       [|(vscode_Color_to_js x2865);(anonymous_interface_6_to_js
                                                       x2866);(vscode_CancellationToken_to_js
                                                                 x2867)|])
      end
    module FoldingRange =
      struct
        type t = vscode_FoldingRange
        let rec t_of_js : Ojs.t -> t =
          fun (x2872 : Ojs.t) -> vscode_FoldingRange_of_js x2872
        and t_to_js : t -> Ojs.t =
          fun (x2871 : vscode_FoldingRange) ->
            vscode_FoldingRange_to_js x2871
        let (get_start : t -> float) =
          fun (x2873 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2873) "start")
        let (set_start : t -> float -> unit) =
          fun (x2874 : t) ->
            fun (x2875 : float) ->
              Ojs.set_prop_ascii (t_to_js x2874) "start"
                (Ojs.float_to_js x2875)
        let (get_end : t -> float) =
          fun (x2876 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2876) "end")
        let (set_end : t -> float -> unit) =
          fun (x2877 : t) ->
            fun (x2878 : float) ->
              Ojs.set_prop_ascii (t_to_js x2877) "end"
                (Ojs.float_to_js x2878)
        let (get_kind : t -> vscode_FoldingRangeKind) =
          fun (x2879 : t) ->
            vscode_FoldingRangeKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2879) "kind")
        let (set_kind : t -> vscode_FoldingRangeKind -> unit) =
          fun (x2880 : t) ->
            fun (x2881 : vscode_FoldingRangeKind) ->
              Ojs.set_prop_ascii (t_to_js x2880) "kind"
                (vscode_FoldingRangeKind_to_js x2881)
        let (create :
          start:float ->
            end_:float -> ?kind:vscode_FoldingRangeKind -> unit -> t)
          =
          fun ~start:(x2882 : float) ->
            fun ~end_:(x2883 : float) ->
              fun ?kind:(x2884 : vscode_FoldingRangeKind option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "FoldingRange")
                       (let x2885 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x2885 "push" [|(Ojs.float_to_js x2882)|]);
                        ignore
                          (Ojs.call x2885 "push" [|(Ojs.float_to_js x2883)|]);
                        (match x2884 with
                         | Some x2886 ->
                             ignore
                               (Ojs.call x2885 "push"
                                  [|(vscode_FoldingRangeKind_to_js x2886)|])
                         | None -> ());
                        x2885))
      end
    module FoldingRangeKind =
      struct
        type t = vscode_FoldingRangeKind
        let rec t_of_js : Ojs.t -> t =
          fun (x2888 : Ojs.t) -> vscode_FoldingRangeKind_of_js x2888
        and t_to_js : t -> Ojs.t =
          fun (x2887 : vscode_FoldingRangeKind) ->
            vscode_FoldingRangeKind_to_js x2887
      end
    module FoldingContext =
      struct
        type t = vscode_FoldingContext
        let rec t_of_js : Ojs.t -> t =
          fun (x2890 : Ojs.t) -> vscode_FoldingContext_of_js x2890
        and t_to_js : t -> Ojs.t =
          fun (x2889 : vscode_FoldingContext) ->
            vscode_FoldingContext_to_js x2889
      end
    module FoldingRangeProvider =
      struct
        type t = vscode_FoldingRangeProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2892 : Ojs.t) -> vscode_FoldingRangeProvider_of_js x2892
        and t_to_js : t -> Ojs.t =
          fun (x2891 : vscode_FoldingRangeProvider) ->
            vscode_FoldingRangeProvider_to_js x2891
        let (get_onDidChangeFoldingRanges : t -> unit vscode_Event) =
          fun (x2893 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x2893) "onDidChangeFoldingRanges")
        let (set_onDidChangeFoldingRanges : t -> unit vscode_Event -> unit) =
          fun (x2895 : t) ->
            fun (x2896 : unit vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x2895) "onDidChangeFoldingRanges"
                (vscode_Event_to_js Ojs.unit_to_js x2896)
        let (provideFoldingRanges :
          t ->
            document:vscode_TextDocument ->
              context:vscode_FoldingContext ->
                token:vscode_CancellationToken ->
                  vscode_FoldingRange list vscode_ProviderResult)
          =
          fun (x2901 : t) ->
            fun ~document:(x2898 : vscode_TextDocument) ->
              fun ~context:(x2899 : vscode_FoldingContext) ->
                fun ~token:(x2900 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2902 : Ojs.t) ->
                       Ojs.list_of_js vscode_FoldingRange_of_js x2902)
                    (Ojs.call (t_to_js x2901) "provideFoldingRanges"
                       [|(vscode_TextDocument_to_js x2898);(vscode_FoldingContext_to_js
                                                              x2899);(
                         vscode_CancellationToken_to_js x2900)|])
      end
    module SelectionRange =
      struct
        type t = vscode_SelectionRange
        let rec t_of_js : Ojs.t -> t =
          fun (x2905 : Ojs.t) -> vscode_SelectionRange_of_js x2905
        and t_to_js : t -> Ojs.t =
          fun (x2904 : vscode_SelectionRange) ->
            vscode_SelectionRange_to_js x2904
        let (get_range : t -> vscode_Range) =
          fun (x2906 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2906) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2907 : t) ->
            fun (x2908 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2907) "range"
                (vscode_Range_to_js x2908)
        let (get_parent : t -> t) =
          fun (x2909 : t) ->
            t_of_js (Ojs.get_prop_ascii (t_to_js x2909) "parent")
        let (set_parent : t -> t -> unit) =
          fun (x2910 : t) ->
            fun (x2911 : t) ->
              Ojs.set_prop_ascii (t_to_js x2910) "parent" (t_to_js x2911)
        let (create : range:vscode_Range -> ?parent:t -> unit -> t) =
          fun ~range:(x2912 : vscode_Range) ->
            fun ?parent:(x2913 : t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "SelectionRange")
                     (let x2914 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2914 "push" [|(vscode_Range_to_js x2912)|]);
                      (match x2913 with
                       | Some x2915 ->
                           ignore (Ojs.call x2914 "push" [|(t_to_js x2915)|])
                       | None -> ());
                      x2914))
      end
    module SelectionRangeProvider =
      struct
        type t = vscode_SelectionRangeProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2917 : Ojs.t) -> vscode_SelectionRangeProvider_of_js x2917
        and t_to_js : t -> Ojs.t =
          fun (x2916 : vscode_SelectionRangeProvider) ->
            vscode_SelectionRangeProvider_to_js x2916
        let (provideSelectionRanges :
          t ->
            document:vscode_TextDocument ->
              positions:vscode_Position list ->
                token:vscode_CancellationToken ->
                  vscode_SelectionRange list vscode_ProviderResult)
          =
          fun (x2922 : t) ->
            fun ~document:(x2918 : vscode_TextDocument) ->
              fun ~positions:(x2919 : vscode_Position list) ->
                fun ~token:(x2921 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2923 : Ojs.t) ->
                       Ojs.list_of_js vscode_SelectionRange_of_js x2923)
                    (Ojs.call (t_to_js x2922) "provideSelectionRanges"
                       [|(vscode_TextDocument_to_js x2918);(Ojs.list_to_js
                                                              vscode_Position_to_js
                                                              x2919);(
                         vscode_CancellationToken_to_js x2921)|])
      end
    module CallHierarchyItem =
      struct
        type t = vscode_CallHierarchyItem
        let rec t_of_js : Ojs.t -> t =
          fun (x2926 : Ojs.t) -> vscode_CallHierarchyItem_of_js x2926
        and t_to_js : t -> Ojs.t =
          fun (x2925 : vscode_CallHierarchyItem) ->
            vscode_CallHierarchyItem_to_js x2925
        let (get_name : t -> string) =
          fun (x2927 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2927) "name")
        let (set_name : t -> string -> unit) =
          fun (x2928 : t) ->
            fun (x2929 : string) ->
              Ojs.set_prop_ascii (t_to_js x2928) "name"
                (Ojs.string_to_js x2929)
        let (get_kind : t -> vscode_SymbolKind) =
          fun (x2930 : t) ->
            vscode_SymbolKind_of_js
              (Ojs.get_prop_ascii (t_to_js x2930) "kind")
        let (set_kind : t -> vscode_SymbolKind -> unit) =
          fun (x2931 : t) ->
            fun (x2932 : vscode_SymbolKind) ->
              Ojs.set_prop_ascii (t_to_js x2931) "kind"
                (vscode_SymbolKind_to_js x2932)
        let (get_tags : t -> vscode_SymbolTag list) =
          fun (x2933 : t) ->
            Ojs.list_of_js vscode_SymbolTag_of_js
              (Ojs.get_prop_ascii (t_to_js x2933) "tags")
        let (set_tags : t -> vscode_SymbolTag list -> unit) =
          fun (x2935 : t) ->
            fun (x2936 : vscode_SymbolTag list) ->
              Ojs.set_prop_ascii (t_to_js x2935) "tags"
                (Ojs.list_to_js vscode_SymbolTag_to_js x2936)
        let (get_detail : t -> string) =
          fun (x2938 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x2938) "detail")
        let (set_detail : t -> string -> unit) =
          fun (x2939 : t) ->
            fun (x2940 : string) ->
              Ojs.set_prop_ascii (t_to_js x2939) "detail"
                (Ojs.string_to_js x2940)
        let (get_uri : t -> vscode_Uri) =
          fun (x2941 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x2941) "uri")
        let (set_uri : t -> vscode_Uri -> unit) =
          fun (x2942 : t) ->
            fun (x2943 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x2942) "uri"
                (vscode_Uri_to_js x2943)
        let (get_range : t -> vscode_Range) =
          fun (x2944 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x2944) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x2945 : t) ->
            fun (x2946 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2945) "range"
                (vscode_Range_to_js x2946)
        let (get_selectionRange : t -> vscode_Range) =
          fun (x2947 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x2947) "selectionRange")
        let (set_selectionRange : t -> vscode_Range -> unit) =
          fun (x2948 : t) ->
            fun (x2949 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x2948) "selectionRange"
                (vscode_Range_to_js x2949)
        let (create :
          kind:vscode_SymbolKind ->
            name:string ->
              detail:string ->
                uri:vscode_Uri ->
                  range:vscode_Range -> selectionRange:vscode_Range -> t)
          =
          fun ~kind:(x2950 : vscode_SymbolKind) ->
            fun ~name:(x2951 : string) ->
              fun ~detail:(x2952 : string) ->
                fun ~uri:(x2953 : vscode_Uri) ->
                  fun ~range:(x2954 : vscode_Range) ->
                    fun ~selectionRange:(x2955 : vscode_Range) ->
                      t_of_js
                        (Ojs.new_obj
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode")
                              "CallHierarchyItem")
                           [|(vscode_SymbolKind_to_js x2950);(Ojs.string_to_js
                                                                x2951);(
                             Ojs.string_to_js x2952);(vscode_Uri_to_js x2953);(
                             vscode_Range_to_js x2954);(vscode_Range_to_js
                                                          x2955)|])
      end
    module CallHierarchyIncomingCall =
      struct
        type t = vscode_CallHierarchyIncomingCall
        let rec t_of_js : Ojs.t -> t =
          fun (x2957 : Ojs.t) -> vscode_CallHierarchyIncomingCall_of_js x2957
        and t_to_js : t -> Ojs.t =
          fun (x2956 : vscode_CallHierarchyIncomingCall) ->
            vscode_CallHierarchyIncomingCall_to_js x2956
        let (get_from : t -> vscode_CallHierarchyItem) =
          fun (x2958 : t) ->
            vscode_CallHierarchyItem_of_js
              (Ojs.get_prop_ascii (t_to_js x2958) "from")
        let (set_from : t -> vscode_CallHierarchyItem -> unit) =
          fun (x2959 : t) ->
            fun (x2960 : vscode_CallHierarchyItem) ->
              Ojs.set_prop_ascii (t_to_js x2959) "from"
                (vscode_CallHierarchyItem_to_js x2960)
        let (get_fromRanges : t -> vscode_Range list) =
          fun (x2961 : t) ->
            Ojs.list_of_js vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x2961) "fromRanges")
        let (set_fromRanges : t -> vscode_Range list -> unit) =
          fun (x2963 : t) ->
            fun (x2964 : vscode_Range list) ->
              Ojs.set_prop_ascii (t_to_js x2963) "fromRanges"
                (Ojs.list_to_js vscode_Range_to_js x2964)
        let (create :
          item:vscode_CallHierarchyItem -> fromRanges:vscode_Range list -> t)
          =
          fun ~item:(x2966 : vscode_CallHierarchyItem) ->
            fun ~fromRanges:(x2967 : vscode_Range list) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "CallHierarchyIncomingCall")
                   [|(vscode_CallHierarchyItem_to_js x2966);(Ojs.list_to_js
                                                               vscode_Range_to_js
                                                               x2967)|])
      end
    module CallHierarchyOutgoingCall =
      struct
        type t = vscode_CallHierarchyOutgoingCall
        let rec t_of_js : Ojs.t -> t =
          fun (x2970 : Ojs.t) -> vscode_CallHierarchyOutgoingCall_of_js x2970
        and t_to_js : t -> Ojs.t =
          fun (x2969 : vscode_CallHierarchyOutgoingCall) ->
            vscode_CallHierarchyOutgoingCall_to_js x2969
        let (get_to : t -> vscode_CallHierarchyItem) =
          fun (x2971 : t) ->
            vscode_CallHierarchyItem_of_js
              (Ojs.get_prop_ascii (t_to_js x2971) "to")
        let (set_to : t -> vscode_CallHierarchyItem -> unit) =
          fun (x2972 : t) ->
            fun (x2973 : vscode_CallHierarchyItem) ->
              Ojs.set_prop_ascii (t_to_js x2972) "to"
                (vscode_CallHierarchyItem_to_js x2973)
        let (get_fromRanges : t -> vscode_Range list) =
          fun (x2974 : t) ->
            Ojs.list_of_js vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x2974) "fromRanges")
        let (set_fromRanges : t -> vscode_Range list -> unit) =
          fun (x2976 : t) ->
            fun (x2977 : vscode_Range list) ->
              Ojs.set_prop_ascii (t_to_js x2976) "fromRanges"
                (Ojs.list_to_js vscode_Range_to_js x2977)
        let (create :
          item:vscode_CallHierarchyItem -> fromRanges:vscode_Range list -> t)
          =
          fun ~item:(x2979 : vscode_CallHierarchyItem) ->
            fun ~fromRanges:(x2980 : vscode_Range list) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "CallHierarchyOutgoingCall")
                   [|(vscode_CallHierarchyItem_to_js x2979);(Ojs.list_to_js
                                                               vscode_Range_to_js
                                                               x2980)|])
      end
    module CallHierarchyProvider =
      struct
        type t = vscode_CallHierarchyProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x2983 : Ojs.t) -> vscode_CallHierarchyProvider_of_js x2983
        and t_to_js : t -> Ojs.t =
          fun (x2982 : vscode_CallHierarchyProvider) ->
            vscode_CallHierarchyProvider_to_js x2982
        let (prepareCallHierarchy :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  (vscode_CallHierarchyItem, vscode_CallHierarchyItem)
                    or_array vscode_ProviderResult)
          =
          fun (x2987 : t) ->
            fun ~document:(x2984 : vscode_TextDocument) ->
              fun ~position:(x2985 : vscode_Position) ->
                fun ~token:(x2986 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    (fun (x2988 : Ojs.t) ->
                       or_array_of_js vscode_CallHierarchyItem_of_js
                         vscode_CallHierarchyItem_of_js x2988)
                    (Ojs.call (t_to_js x2987) "prepareCallHierarchy"
                       [|(vscode_TextDocument_to_js x2984);(vscode_Position_to_js
                                                              x2985);(
                         vscode_CancellationToken_to_js x2986)|])
        let (provideCallHierarchyIncomingCalls :
          t ->
            item:vscode_CallHierarchyItem ->
              token:vscode_CancellationToken ->
                vscode_CallHierarchyIncomingCall list vscode_ProviderResult)
          =
          fun (x2993 : t) ->
            fun ~item:(x2991 : vscode_CallHierarchyItem) ->
              fun ~token:(x2992 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x2994 : Ojs.t) ->
                     Ojs.list_of_js vscode_CallHierarchyIncomingCall_of_js
                       x2994)
                  (Ojs.call (t_to_js x2993)
                     "provideCallHierarchyIncomingCalls"
                     [|(vscode_CallHierarchyItem_to_js x2991);(vscode_CancellationToken_to_js
                                                                 x2992)|])
        let (provideCallHierarchyOutgoingCalls :
          t ->
            item:vscode_CallHierarchyItem ->
              token:vscode_CancellationToken ->
                vscode_CallHierarchyOutgoingCall list vscode_ProviderResult)
          =
          fun (x2998 : t) ->
            fun ~item:(x2996 : vscode_CallHierarchyItem) ->
              fun ~token:(x2997 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x2999 : Ojs.t) ->
                     Ojs.list_of_js vscode_CallHierarchyOutgoingCall_of_js
                       x2999)
                  (Ojs.call (t_to_js x2998)
                     "provideCallHierarchyOutgoingCalls"
                     [|(vscode_CallHierarchyItem_to_js x2996);(vscode_CancellationToken_to_js
                                                                 x2997)|])
      end
    module LinkedEditingRanges =
      struct
        type t = vscode_LinkedEditingRanges
        let rec t_of_js : Ojs.t -> t =
          fun (x3002 : Ojs.t) -> vscode_LinkedEditingRanges_of_js x3002
        and t_to_js : t -> Ojs.t =
          fun (x3001 : vscode_LinkedEditingRanges) ->
            vscode_LinkedEditingRanges_to_js x3001
        let (create :
          ranges:vscode_Range list -> ?wordPattern:regexp -> unit -> t) =
          fun ~ranges:(x3003 : vscode_Range list) ->
            fun ?wordPattern:(x3004 : regexp option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "LinkedEditingRanges")
                     (let x3005 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3005 "push"
                           [|(Ojs.list_to_js vscode_Range_to_js x3003)|]);
                      (match x3004 with
                       | Some x3006 ->
                           ignore
                             (Ojs.call x3005 "push" [|(regexp_to_js x3006)|])
                       | None -> ());
                      x3005))
        let (get_ranges : t -> vscode_Range list) =
          fun (x3008 : t) ->
            Ojs.list_of_js vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x3008) "ranges")
        let (get_wordPattern : t -> regexp) =
          fun (x3010 : t) ->
            regexp_of_js (Ojs.get_prop_ascii (t_to_js x3010) "wordPattern")
      end
    module LinkedEditingRangeProvider =
      struct
        type t = vscode_LinkedEditingRangeProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x3012 : Ojs.t) ->
            vscode_LinkedEditingRangeProvider_of_js x3012
        and t_to_js : t -> Ojs.t =
          fun (x3011 : vscode_LinkedEditingRangeProvider) ->
            vscode_LinkedEditingRangeProvider_to_js x3011
        let (provideLinkedEditingRanges :
          t ->
            document:vscode_TextDocument ->
              position:vscode_Position ->
                token:vscode_CancellationToken ->
                  vscode_LinkedEditingRanges vscode_ProviderResult)
          =
          fun (x3016 : t) ->
            fun ~document:(x3013 : vscode_TextDocument) ->
              fun ~position:(x3014 : vscode_Position) ->
                fun ~token:(x3015 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js
                    vscode_LinkedEditingRanges_of_js
                    (Ojs.call (t_to_js x3016) "provideLinkedEditingRanges"
                       [|(vscode_TextDocument_to_js x3013);(vscode_Position_to_js
                                                              x3014);(
                         vscode_CancellationToken_to_js x3015)|])
      end
    module CharacterPair =
      struct
        type t = vscode_CharacterPair
        let rec t_of_js : Ojs.t -> t =
          fun (x3019 : Ojs.t) -> vscode_CharacterPair_of_js x3019
        and t_to_js : t -> Ojs.t =
          fun (x3018 : vscode_CharacterPair) ->
            vscode_CharacterPair_to_js x3018
      end
    module CommentRule =
      struct
        type t = vscode_CommentRule
        let rec t_of_js : Ojs.t -> t =
          fun (x3021 : Ojs.t) -> vscode_CommentRule_of_js x3021
        and t_to_js : t -> Ojs.t =
          fun (x3020 : vscode_CommentRule) -> vscode_CommentRule_to_js x3020
        let (get_lineComment : t -> string) =
          fun (x3022 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3022) "lineComment")
        let (set_lineComment : t -> string -> unit) =
          fun (x3023 : t) ->
            fun (x3024 : string) ->
              Ojs.set_prop_ascii (t_to_js x3023) "lineComment"
                (Ojs.string_to_js x3024)
        let (get_blockComment : t -> vscode_CharacterPair) =
          fun (x3025 : t) ->
            vscode_CharacterPair_of_js
              (Ojs.get_prop_ascii (t_to_js x3025) "blockComment")
        let (set_blockComment : t -> vscode_CharacterPair -> unit) =
          fun (x3026 : t) ->
            fun (x3027 : vscode_CharacterPair) ->
              Ojs.set_prop_ascii (t_to_js x3026) "blockComment"
                (vscode_CharacterPair_to_js x3027)
      end
    module IndentationRule =
      struct
        type t = vscode_IndentationRule
        let rec t_of_js : Ojs.t -> t =
          fun (x3029 : Ojs.t) -> vscode_IndentationRule_of_js x3029
        and t_to_js : t -> Ojs.t =
          fun (x3028 : vscode_IndentationRule) ->
            vscode_IndentationRule_to_js x3028
        let (get_decreaseIndentPattern : t -> regexp) =
          fun (x3030 : t) ->
            regexp_of_js
              (Ojs.get_prop_ascii (t_to_js x3030) "decreaseIndentPattern")
        let (set_decreaseIndentPattern : t -> regexp -> unit) =
          fun (x3031 : t) ->
            fun (x3032 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3031) "decreaseIndentPattern"
                (regexp_to_js x3032)
        let (get_increaseIndentPattern : t -> regexp) =
          fun (x3033 : t) ->
            regexp_of_js
              (Ojs.get_prop_ascii (t_to_js x3033) "increaseIndentPattern")
        let (set_increaseIndentPattern : t -> regexp -> unit) =
          fun (x3034 : t) ->
            fun (x3035 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3034) "increaseIndentPattern"
                (regexp_to_js x3035)
        let (get_indentNextLinePattern : t -> regexp) =
          fun (x3036 : t) ->
            regexp_of_js
              (Ojs.get_prop_ascii (t_to_js x3036) "indentNextLinePattern")
        let (set_indentNextLinePattern : t -> regexp -> unit) =
          fun (x3037 : t) ->
            fun (x3038 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3037) "indentNextLinePattern"
                (regexp_to_js x3038)
        let (get_unIndentedLinePattern : t -> regexp) =
          fun (x3039 : t) ->
            regexp_of_js
              (Ojs.get_prop_ascii (t_to_js x3039) "unIndentedLinePattern")
        let (set_unIndentedLinePattern : t -> regexp -> unit) =
          fun (x3040 : t) ->
            fun (x3041 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3040) "unIndentedLinePattern"
                (regexp_to_js x3041)
      end
    module IndentAction =
      struct
        type t = vscode_IndentAction
        let rec t_of_js : Ojs.t -> t =
          fun (x3043 : Ojs.t) -> vscode_IndentAction_of_js x3043
        and t_to_js : t -> Ojs.t =
          fun (x3042 : vscode_IndentAction) ->
            vscode_IndentAction_to_js x3042
      end
    module EnterAction =
      struct
        type t = vscode_EnterAction
        let rec t_of_js : Ojs.t -> t =
          fun (x3045 : Ojs.t) -> vscode_EnterAction_of_js x3045
        and t_to_js : t -> Ojs.t =
          fun (x3044 : vscode_EnterAction) -> vscode_EnterAction_to_js x3044
        let (get_indentAction : t -> vscode_IndentAction) =
          fun (x3046 : t) ->
            vscode_IndentAction_of_js
              (Ojs.get_prop_ascii (t_to_js x3046) "indentAction")
        let (set_indentAction : t -> vscode_IndentAction -> unit) =
          fun (x3047 : t) ->
            fun (x3048 : vscode_IndentAction) ->
              Ojs.set_prop_ascii (t_to_js x3047) "indentAction"
                (vscode_IndentAction_to_js x3048)
        let (get_appendText : t -> string) =
          fun (x3049 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3049) "appendText")
        let (set_appendText : t -> string -> unit) =
          fun (x3050 : t) ->
            fun (x3051 : string) ->
              Ojs.set_prop_ascii (t_to_js x3050) "appendText"
                (Ojs.string_to_js x3051)
        let (get_removeText : t -> float) =
          fun (x3052 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3052) "removeText")
        let (set_removeText : t -> float -> unit) =
          fun (x3053 : t) ->
            fun (x3054 : float) ->
              Ojs.set_prop_ascii (t_to_js x3053) "removeText"
                (Ojs.float_to_js x3054)
      end
    module OnEnterRule =
      struct
        type t = vscode_OnEnterRule
        let rec t_of_js : Ojs.t -> t =
          fun (x3056 : Ojs.t) -> vscode_OnEnterRule_of_js x3056
        and t_to_js : t -> Ojs.t =
          fun (x3055 : vscode_OnEnterRule) -> vscode_OnEnterRule_to_js x3055
        let (get_beforeText : t -> regexp) =
          fun (x3057 : t) ->
            regexp_of_js (Ojs.get_prop_ascii (t_to_js x3057) "beforeText")
        let (set_beforeText : t -> regexp -> unit) =
          fun (x3058 : t) ->
            fun (x3059 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3058) "beforeText"
                (regexp_to_js x3059)
        let (get_afterText : t -> regexp) =
          fun (x3060 : t) ->
            regexp_of_js (Ojs.get_prop_ascii (t_to_js x3060) "afterText")
        let (set_afterText : t -> regexp -> unit) =
          fun (x3061 : t) ->
            fun (x3062 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3061) "afterText"
                (regexp_to_js x3062)
        let (get_previousLineText : t -> regexp) =
          fun (x3063 : t) ->
            regexp_of_js
              (Ojs.get_prop_ascii (t_to_js x3063) "previousLineText")
        let (set_previousLineText : t -> regexp -> unit) =
          fun (x3064 : t) ->
            fun (x3065 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3064) "previousLineText"
                (regexp_to_js x3065)
        let (get_action : t -> vscode_EnterAction) =
          fun (x3066 : t) ->
            vscode_EnterAction_of_js
              (Ojs.get_prop_ascii (t_to_js x3066) "action")
        let (set_action : t -> vscode_EnterAction -> unit) =
          fun (x3067 : t) ->
            fun (x3068 : vscode_EnterAction) ->
              Ojs.set_prop_ascii (t_to_js x3067) "action"
                (vscode_EnterAction_to_js x3068)
      end
    module LanguageConfiguration =
      struct
        type t = vscode_LanguageConfiguration
        let rec t_of_js : Ojs.t -> t =
          fun (x3070 : Ojs.t) -> vscode_LanguageConfiguration_of_js x3070
        and t_to_js : t -> Ojs.t =
          fun (x3069 : vscode_LanguageConfiguration) ->
            vscode_LanguageConfiguration_to_js x3069
        let (get_comments : t -> vscode_CommentRule) =
          fun (x3071 : t) ->
            vscode_CommentRule_of_js
              (Ojs.get_prop_ascii (t_to_js x3071) "comments")
        let (set_comments : t -> vscode_CommentRule -> unit) =
          fun (x3072 : t) ->
            fun (x3073 : vscode_CommentRule) ->
              Ojs.set_prop_ascii (t_to_js x3072) "comments"
                (vscode_CommentRule_to_js x3073)
        let (get_brackets : t -> vscode_CharacterPair list) =
          fun (x3074 : t) ->
            Ojs.list_of_js vscode_CharacterPair_of_js
              (Ojs.get_prop_ascii (t_to_js x3074) "brackets")
        let (set_brackets : t -> vscode_CharacterPair list -> unit) =
          fun (x3076 : t) ->
            fun (x3077 : vscode_CharacterPair list) ->
              Ojs.set_prop_ascii (t_to_js x3076) "brackets"
                (Ojs.list_to_js vscode_CharacterPair_to_js x3077)
        let (get_wordPattern : t -> regexp) =
          fun (x3079 : t) ->
            regexp_of_js (Ojs.get_prop_ascii (t_to_js x3079) "wordPattern")
        let (set_wordPattern : t -> regexp -> unit) =
          fun (x3080 : t) ->
            fun (x3081 : regexp) ->
              Ojs.set_prop_ascii (t_to_js x3080) "wordPattern"
                (regexp_to_js x3081)
        let (get_indentationRules : t -> vscode_IndentationRule) =
          fun (x3082 : t) ->
            vscode_IndentationRule_of_js
              (Ojs.get_prop_ascii (t_to_js x3082) "indentationRules")
        let (set_indentationRules : t -> vscode_IndentationRule -> unit) =
          fun (x3083 : t) ->
            fun (x3084 : vscode_IndentationRule) ->
              Ojs.set_prop_ascii (t_to_js x3083) "indentationRules"
                (vscode_IndentationRule_to_js x3084)
        let (get_onEnterRules : t -> vscode_OnEnterRule list) =
          fun (x3085 : t) ->
            Ojs.list_of_js vscode_OnEnterRule_of_js
              (Ojs.get_prop_ascii (t_to_js x3085) "onEnterRules")
        let (set_onEnterRules : t -> vscode_OnEnterRule list -> unit) =
          fun (x3087 : t) ->
            fun (x3088 : vscode_OnEnterRule list) ->
              Ojs.set_prop_ascii (t_to_js x3087) "onEnterRules"
                (Ojs.list_to_js vscode_OnEnterRule_to_js x3088)
        let (get___electricCharacterSupport : t -> anonymous_interface_1) =
          fun (x3090 : t) ->
            anonymous_interface_1_of_js
              (Ojs.get_prop_ascii (t_to_js x3090)
                 "__electricCharacterSupport")
        let (set___electricCharacterSupport :
          t -> anonymous_interface_1 -> unit) =
          fun (x3091 : t) ->
            fun (x3092 : anonymous_interface_1) ->
              Ojs.set_prop_ascii (t_to_js x3091) "__electricCharacterSupport"
                (anonymous_interface_1_to_js x3092)
        let (get___characterPairSupport : t -> anonymous_interface_0) =
          fun (x3093 : t) ->
            anonymous_interface_0_of_js
              (Ojs.get_prop_ascii (t_to_js x3093) "__characterPairSupport")
        let (set___characterPairSupport : t -> anonymous_interface_0 -> unit)
          =
          fun (x3094 : t) ->
            fun (x3095 : anonymous_interface_0) ->
              Ojs.set_prop_ascii (t_to_js x3094) "__characterPairSupport"
                (anonymous_interface_0_to_js x3095)
      end
    module ConfigurationTarget =
      struct
        type t = vscode_ConfigurationTarget
        let rec t_of_js : Ojs.t -> t =
          fun (x3097 : Ojs.t) -> vscode_ConfigurationTarget_of_js x3097
        and t_to_js : t -> Ojs.t =
          fun (x3096 : vscode_ConfigurationTarget) ->
            vscode_ConfigurationTarget_to_js x3096
      end
    module WorkspaceConfiguration =
      struct
        type t = vscode_WorkspaceConfiguration
        let rec t_of_js : Ojs.t -> t =
          fun (x3099 : Ojs.t) -> vscode_WorkspaceConfiguration_of_js x3099
        and t_to_js : t -> Ojs.t =
          fun (x3098 : vscode_WorkspaceConfiguration) ->
            vscode_WorkspaceConfiguration_to_js x3098
        let (get_ : t -> section:string -> 'T or_undefined) =
          fun (x3101 : t) ->
            fun ~section:(x3100 : string) ->
              or_undefined_of_js Obj.magic
                (Ojs.call (t_to_js x3101) "get" [|(Ojs.string_to_js x3100)|])
        let (get_' : t -> section:string -> defaultValue:'T -> 'T) =
          fun (x3105 : t) ->
            fun ~section:(x3103 : string) ->
              fun ~defaultValue:(x3104 : 'T) ->
                Obj.magic
                  (Ojs.call (t_to_js x3105) "get"
                     [|(Ojs.string_to_js x3103);(Obj.magic x3104)|])
        let (has : t -> section:string -> bool) =
          fun (x3107 : t) ->
            fun ~section:(x3106 : string) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x3107) "has" [|(Ojs.string_to_js x3106)|])
        let (inspect :
          t -> section:string -> anonymous_interface_10 or_undefined) =
          fun (x3109 : t) ->
            fun ~section:(x3108 : string) ->
              or_undefined_of_js anonymous_interface_10_of_js
                (Ojs.call (t_to_js x3109) "inspect"
                   [|(Ojs.string_to_js x3108)|])
        let (update :
          t ->
            section:string ->
              value:any ->
                ?configurationTarget:vscode_ConfigurationTarget or_boolean ->
                  ?overrideInLanguage:bool -> unit -> unit _Thenable)
          =
          fun (x3119 : t) ->
            fun ~section:(x3111 : string) ->
              fun ~value:(x3112 : any) ->
                fun
                  ?configurationTarget:(x3113 :
                                         vscode_ConfigurationTarget
                                           or_boolean option)
                  ->
                  fun ?overrideInLanguage:(x3114 : bool option) ->
                    fun () ->
                      _Thenable_of_js Ojs.unit_of_js
                        (let x3120 = t_to_js x3119 in
                         Ojs.call (Ojs.get_prop_ascii x3120 "update") "apply"
                           [|x3120;((let x3115 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x3115 "push"
                                          [|(Ojs.string_to_js x3111)|]);
                                     ignore
                                       (Ojs.call x3115 "push"
                                          [|(any_to_js x3112)|]);
                                     (match x3113 with
                                      | Some x3117 ->
                                          ignore
                                            (Ojs.call x3115 "push"
                                               [|(or_boolean_to_js
                                                    vscode_ConfigurationTarget_to_js
                                                    x3117)|])
                                      | None -> ());
                                     (match x3114 with
                                      | Some x3116 ->
                                          ignore
                                            (Ojs.call x3115 "push"
                                               [|(Ojs.bool_to_js x3116)|])
                                      | None -> ());
                                     x3115))|])
        let (get : t -> string -> any) =
          fun (x3122 : t) ->
            fun (x3123 : string) ->
              any_of_js
                (Ojs.get_prop (t_to_js x3122) (Ojs.string_to_js x3123))
      end
    module Location =
      struct
        type t = vscode_Location
        let rec t_of_js : Ojs.t -> t =
          fun (x3125 : Ojs.t) -> vscode_Location_of_js x3125
        and t_to_js : t -> Ojs.t =
          fun (x3124 : vscode_Location) -> vscode_Location_to_js x3124
        let (get_uri : t -> vscode_Uri) =
          fun (x3126 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x3126) "uri")
        let (set_uri : t -> vscode_Uri -> unit) =
          fun (x3127 : t) ->
            fun (x3128 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x3127) "uri"
                (vscode_Uri_to_js x3128)
        let (get_range : t -> vscode_Range) =
          fun (x3129 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x3129) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x3130 : t) ->
            fun (x3131 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x3130) "range"
                (vscode_Range_to_js x3131)
        let (create :
          uri:vscode_Uri ->
            rangeOrPosition:(vscode_Position, vscode_Range) union2 -> t)
          =
          fun ~uri:(x3132 : vscode_Uri) ->
            fun
              ~rangeOrPosition:(x3133 :
                                 (vscode_Position, vscode_Range) union2)
              ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "Location")
                   [|(vscode_Uri_to_js x3132);(union2_to_js
                                                 vscode_Position_to_js
                                                 vscode_Range_to_js x3133)|])
      end
    module LocationLink =
      struct
        type t = vscode_LocationLink
        let rec t_of_js : Ojs.t -> t =
          fun (x3137 : Ojs.t) -> vscode_LocationLink_of_js x3137
        and t_to_js : t -> Ojs.t =
          fun (x3136 : vscode_LocationLink) ->
            vscode_LocationLink_to_js x3136
        let (get_originSelectionRange : t -> vscode_Range) =
          fun (x3138 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x3138) "originSelectionRange")
        let (set_originSelectionRange : t -> vscode_Range -> unit) =
          fun (x3139 : t) ->
            fun (x3140 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x3139) "originSelectionRange"
                (vscode_Range_to_js x3140)
        let (get_targetUri : t -> vscode_Uri) =
          fun (x3141 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x3141) "targetUri")
        let (set_targetUri : t -> vscode_Uri -> unit) =
          fun (x3142 : t) ->
            fun (x3143 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x3142) "targetUri"
                (vscode_Uri_to_js x3143)
        let (get_targetRange : t -> vscode_Range) =
          fun (x3144 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x3144) "targetRange")
        let (set_targetRange : t -> vscode_Range -> unit) =
          fun (x3145 : t) ->
            fun (x3146 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x3145) "targetRange"
                (vscode_Range_to_js x3146)
        let (get_targetSelectionRange : t -> vscode_Range) =
          fun (x3147 : t) ->
            vscode_Range_of_js
              (Ojs.get_prop_ascii (t_to_js x3147) "targetSelectionRange")
        let (set_targetSelectionRange : t -> vscode_Range -> unit) =
          fun (x3148 : t) ->
            fun (x3149 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x3148) "targetSelectionRange"
                (vscode_Range_to_js x3149)
      end
    module DiagnosticChangeEvent =
      struct
        type t = vscode_DiagnosticChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3151 : Ojs.t) -> vscode_DiagnosticChangeEvent_of_js x3151
        and t_to_js : t -> Ojs.t =
          fun (x3150 : vscode_DiagnosticChangeEvent) ->
            vscode_DiagnosticChangeEvent_to_js x3150
        let (get_uris : t -> vscode_Uri list) =
          fun (x3152 : t) ->
            Ojs.list_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x3152) "uris")
      end
    module DiagnosticSeverity =
      struct
        type t = vscode_DiagnosticSeverity
        let rec t_of_js : Ojs.t -> t =
          fun (x3155 : Ojs.t) -> vscode_DiagnosticSeverity_of_js x3155
        and t_to_js : t -> Ojs.t =
          fun (x3154 : vscode_DiagnosticSeverity) ->
            vscode_DiagnosticSeverity_to_js x3154
      end
    module DiagnosticRelatedInformation =
      struct
        type t = vscode_DiagnosticRelatedInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x3157 : Ojs.t) ->
            vscode_DiagnosticRelatedInformation_of_js x3157
        and t_to_js : t -> Ojs.t =
          fun (x3156 : vscode_DiagnosticRelatedInformation) ->
            vscode_DiagnosticRelatedInformation_to_js x3156
        let (get_location : t -> vscode_Location) =
          fun (x3158 : t) ->
            vscode_Location_of_js
              (Ojs.get_prop_ascii (t_to_js x3158) "location")
        let (set_location : t -> vscode_Location -> unit) =
          fun (x3159 : t) ->
            fun (x3160 : vscode_Location) ->
              Ojs.set_prop_ascii (t_to_js x3159) "location"
                (vscode_Location_to_js x3160)
        let (get_message : t -> string) =
          fun (x3161 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3161) "message")
        let (set_message : t -> string -> unit) =
          fun (x3162 : t) ->
            fun (x3163 : string) ->
              Ojs.set_prop_ascii (t_to_js x3162) "message"
                (Ojs.string_to_js x3163)
        let (create : location:vscode_Location -> message:string -> t) =
          fun ~location:(x3164 : vscode_Location) ->
            fun ~message:(x3165 : string) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "DiagnosticRelatedInformation")
                   [|(vscode_Location_to_js x3164);(Ojs.string_to_js x3165)|])
      end
    module DiagnosticTag =
      struct
        type t = vscode_DiagnosticTag
        let rec t_of_js : Ojs.t -> t =
          fun (x3167 : Ojs.t) -> vscode_DiagnosticTag_of_js x3167
        and t_to_js : t -> Ojs.t =
          fun (x3166 : vscode_DiagnosticTag) ->
            vscode_DiagnosticTag_to_js x3166
      end
    module Diagnostic =
      struct
        type t = vscode_Diagnostic
        let rec t_of_js : Ojs.t -> t =
          fun (x3169 : Ojs.t) -> vscode_Diagnostic_of_js x3169
        and t_to_js : t -> Ojs.t =
          fun (x3168 : vscode_Diagnostic) -> vscode_Diagnostic_to_js x3168
        let (get_range : t -> vscode_Range) =
          fun (x3170 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x3170) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x3171 : t) ->
            fun (x3172 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x3171) "range"
                (vscode_Range_to_js x3172)
        let (get_message : t -> string) =
          fun (x3173 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3173) "message")
        let (set_message : t -> string -> unit) =
          fun (x3174 : t) ->
            fun (x3175 : string) ->
              Ojs.set_prop_ascii (t_to_js x3174) "message"
                (Ojs.string_to_js x3175)
        let (get_severity : t -> vscode_DiagnosticSeverity) =
          fun (x3176 : t) ->
            vscode_DiagnosticSeverity_of_js
              (Ojs.get_prop_ascii (t_to_js x3176) "severity")
        let (set_severity : t -> vscode_DiagnosticSeverity -> unit) =
          fun (x3177 : t) ->
            fun (x3178 : vscode_DiagnosticSeverity) ->
              Ojs.set_prop_ascii (t_to_js x3177) "severity"
                (vscode_DiagnosticSeverity_to_js x3178)
        let (get_source : t -> string) =
          fun (x3179 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3179) "source")
        let (set_source : t -> string -> unit) =
          fun (x3180 : t) ->
            fun (x3181 : string) ->
              Ojs.set_prop_ascii (t_to_js x3180) "source"
                (Ojs.string_to_js x3181)
        let (get_code : t -> anonymous_interface_37 or_string or_number) =
          fun (x3182 : t) ->
            or_number_of_js
              (fun (x3183 : Ojs.t) ->
                 or_string_of_js anonymous_interface_37_of_js x3183)
              (Ojs.get_prop_ascii (t_to_js x3182) "code")
        let (set_code :
          t -> anonymous_interface_37 or_string or_number -> unit) =
          fun (x3185 : t) ->
            fun (x3186 : anonymous_interface_37 or_string or_number) ->
              Ojs.set_prop_ascii (t_to_js x3185) "code"
                (or_number_to_js
                   (fun (x3187 : anonymous_interface_37 or_string) ->
                      or_string_to_js anonymous_interface_37_to_js x3187)
                   x3186)
        let (get_relatedInformation :
          t -> vscode_DiagnosticRelatedInformation list) =
          fun (x3189 : t) ->
            Ojs.list_of_js vscode_DiagnosticRelatedInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x3189) "relatedInformation")
        let (set_relatedInformation :
          t -> vscode_DiagnosticRelatedInformation list -> unit) =
          fun (x3191 : t) ->
            fun (x3192 : vscode_DiagnosticRelatedInformation list) ->
              Ojs.set_prop_ascii (t_to_js x3191) "relatedInformation"
                (Ojs.list_to_js vscode_DiagnosticRelatedInformation_to_js
                   x3192)
        let (get_tags : t -> vscode_DiagnosticTag list) =
          fun (x3194 : t) ->
            Ojs.list_of_js vscode_DiagnosticTag_of_js
              (Ojs.get_prop_ascii (t_to_js x3194) "tags")
        let (set_tags : t -> vscode_DiagnosticTag list -> unit) =
          fun (x3196 : t) ->
            fun (x3197 : vscode_DiagnosticTag list) ->
              Ojs.set_prop_ascii (t_to_js x3196) "tags"
                (Ojs.list_to_js vscode_DiagnosticTag_to_js x3197)
        let (create :
          range:vscode_Range ->
            message:string ->
              ?severity:vscode_DiagnosticSeverity -> unit -> t)
          =
          fun ~range:(x3199 : vscode_Range) ->
            fun ~message:(x3200 : string) ->
              fun ?severity:(x3201 : vscode_DiagnosticSeverity option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "Diagnostic")
                       (let x3202 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x3202 "push"
                             [|(vscode_Range_to_js x3199)|]);
                        ignore
                          (Ojs.call x3202 "push" [|(Ojs.string_to_js x3200)|]);
                        (match x3201 with
                         | Some x3203 ->
                             ignore
                               (Ojs.call x3202 "push"
                                  [|(vscode_DiagnosticSeverity_to_js x3203)|])
                         | None -> ());
                        x3202))
      end
    module DiagnosticCollection =
      struct
        type t = vscode_DiagnosticCollection
        let rec t_of_js : Ojs.t -> t =
          fun (x3205 : Ojs.t) -> vscode_DiagnosticCollection_of_js x3205
        and t_to_js : t -> Ojs.t =
          fun (x3204 : vscode_DiagnosticCollection) ->
            vscode_DiagnosticCollection_to_js x3204
        let (get_name : t -> string) =
          fun (x3206 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3206) "name")
        let (set_ :
          t ->
            uri:vscode_Uri ->
              diagnostics:vscode_Diagnostic list or_undefined -> unit)
          =
          fun (x3211 : t) ->
            fun ~uri:(x3207 : vscode_Uri) ->
              fun ~diagnostics:(x3208 : vscode_Diagnostic list or_undefined)
                ->
                ignore
                  (Ojs.call (t_to_js x3211) "set"
                     [|(vscode_Uri_to_js x3207);(or_undefined_to_js
                                                   (fun
                                                      (x3209 :
                                                        vscode_Diagnostic
                                                          list)
                                                      ->
                                                      Ojs.list_to_js
                                                        vscode_Diagnostic_to_js
                                                        x3209) x3208)|])
        let (set_' :
          t ->
            entries:(vscode_Uri * vscode_Diagnostic list or_undefined) list
              -> unit)
          =
          fun (x3219 : t) ->
            fun
              ~entries:(x3212 :
                         (vscode_Uri * vscode_Diagnostic list or_undefined)
                           list)
              ->
              ignore
                (Ojs.call (t_to_js x3219) "set"
                   [|(Ojs.list_to_js
                        (fun
                           (x3213 :
                             (vscode_Uri * vscode_Diagnostic list
                               or_undefined))
                           ->
                           let (x3214, x3215) = x3213 in
                           let x3216 = Ojs.array_make 2 in
                           Ojs.array_set x3216 0 (vscode_Uri_to_js x3214);
                           Ojs.array_set x3216 1
                             (or_undefined_to_js
                                (fun (x3217 : vscode_Diagnostic list) ->
                                   Ojs.list_to_js vscode_Diagnostic_to_js
                                     x3217) x3215);
                           x3216) x3212)|])
        let (delete : t -> uri:vscode_Uri -> unit) =
          fun (x3221 : t) ->
            fun ~uri:(x3220 : vscode_Uri) ->
              ignore
                (Ojs.call (t_to_js x3221) "delete"
                   [|(vscode_Uri_to_js x3220)|])
        let (clear : t -> unit) =
          fun (x3222 : t) -> ignore (Ojs.call (t_to_js x3222) "clear" [||])
        let (forEach :
          t ->
            callback:(uri:vscode_Uri ->
                        diagnostics:vscode_Diagnostic list ->
                          collection:t -> any)
              -> ?thisArg:any -> unit -> unit)
          =
          fun (x3231 : t) ->
            fun
              ~callback:(x3223 :
                          uri:vscode_Uri ->
                            diagnostics:vscode_Diagnostic list ->
                              collection:t -> any)
              ->
              fun ?thisArg:(x3224 : any option) ->
                fun () ->
                  ignore
                    (let x3232 = t_to_js x3231 in
                     Ojs.call (Ojs.get_prop_ascii x3232 "forEach") "apply"
                       [|x3232;((let x3225 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x3225 "push"
                                      [|(Ojs.fun_to_js 3
                                           (fun (x3227 : Ojs.t) ->
                                              fun (x3228 : Ojs.t) ->
                                                fun (x3230 : Ojs.t) ->
                                                  any_to_js
                                                    (x3223
                                                       ~uri:(vscode_Uri_of_js
                                                               x3227)
                                                       ~diagnostics:(
                                                       Ojs.list_of_js
                                                         vscode_Diagnostic_of_js
                                                         x3228)
                                                       ~collection:(t_of_js
                                                                    x3230))))|]);
                                 (match x3224 with
                                  | Some x3226 ->
                                      ignore
                                        (Ojs.call x3225 "push"
                                           [|(any_to_js x3226)|])
                                  | None -> ());
                                 x3225))|])
        let (get_ :
          t -> uri:vscode_Uri -> vscode_Diagnostic list or_undefined) =
          fun (x3234 : t) ->
            fun ~uri:(x3233 : vscode_Uri) ->
              or_undefined_of_js
                (fun (x3235 : Ojs.t) ->
                   Ojs.list_of_js vscode_Diagnostic_of_js x3235)
                (Ojs.call (t_to_js x3234) "get" [|(vscode_Uri_to_js x3233)|])
        let (has : t -> uri:vscode_Uri -> bool) =
          fun (x3238 : t) ->
            fun ~uri:(x3237 : vscode_Uri) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x3238) "has" [|(vscode_Uri_to_js x3237)|])
        let (dispose : t -> unit) =
          fun (x3239 : t) -> ignore (Ojs.call (t_to_js x3239) "dispose" [||])
      end
    module ViewColumn =
      struct
        type t = vscode_ViewColumn
        let rec t_of_js : Ojs.t -> t =
          fun (x3241 : Ojs.t) -> vscode_ViewColumn_of_js x3241
        and t_to_js : t -> Ojs.t =
          fun (x3240 : vscode_ViewColumn) -> vscode_ViewColumn_to_js x3240
      end
    module OutputChannel =
      struct
        type t = vscode_OutputChannel
        let rec t_of_js : Ojs.t -> t =
          fun (x3243 : Ojs.t) -> vscode_OutputChannel_of_js x3243
        and t_to_js : t -> Ojs.t =
          fun (x3242 : vscode_OutputChannel) ->
            vscode_OutputChannel_to_js x3242
        let (get_name : t -> string) =
          fun (x3244 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3244) "name")
        let (append : t -> value:string -> unit) =
          fun (x3246 : t) ->
            fun ~value:(x3245 : string) ->
              ignore
                (Ojs.call (t_to_js x3246) "append"
                   [|(Ojs.string_to_js x3245)|])
        let (appendLine : t -> value:string -> unit) =
          fun (x3248 : t) ->
            fun ~value:(x3247 : string) ->
              ignore
                (Ojs.call (t_to_js x3248) "appendLine"
                   [|(Ojs.string_to_js x3247)|])
        let (clear : t -> unit) =
          fun (x3249 : t) -> ignore (Ojs.call (t_to_js x3249) "clear" [||])
        let (show : t -> ?preserveFocus:bool -> unit -> unit) =
          fun (x3253 : t) ->
            fun ?preserveFocus:(x3250 : bool option) ->
              fun () ->
                ignore
                  (let x3254 = t_to_js x3253 in
                   Ojs.call (Ojs.get_prop_ascii x3254 "show") "apply"
                     [|x3254;((let x3251 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3250 with
                                | Some x3252 ->
                                    ignore
                                      (Ojs.call x3251 "push"
                                         [|(Ojs.bool_to_js x3252)|])
                                | None -> ());
                               x3251))|])
        let (show' :
          t ->
            ?column:vscode_ViewColumn -> ?preserveFocus:bool -> unit -> unit)
          =
          fun (x3260 : t) ->
            fun ?column:(x3255 : vscode_ViewColumn option) ->
              fun ?preserveFocus:(x3256 : bool option) ->
                fun () ->
                  ignore
                    (let x3261 = t_to_js x3260 in
                     Ojs.call (Ojs.get_prop_ascii x3261 "show") "apply"
                       [|x3261;((let x3257 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x3255 with
                                  | Some x3259 ->
                                      ignore
                                        (Ojs.call x3257 "push"
                                           [|(vscode_ViewColumn_to_js x3259)|])
                                  | None -> ());
                                 (match x3256 with
                                  | Some x3258 ->
                                      ignore
                                        (Ojs.call x3257 "push"
                                           [|(Ojs.bool_to_js x3258)|])
                                  | None -> ());
                                 x3257))|])
        let (hide : t -> unit) =
          fun (x3262 : t) -> ignore (Ojs.call (t_to_js x3262) "hide" [||])
        let (dispose : t -> unit) =
          fun (x3263 : t) -> ignore (Ojs.call (t_to_js x3263) "dispose" [||])
      end
    module AccessibilityInformation =
      struct
        type t = vscode_AccessibilityInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x3265 : Ojs.t) -> vscode_AccessibilityInformation_of_js x3265
        and t_to_js : t -> Ojs.t =
          fun (x3264 : vscode_AccessibilityInformation) ->
            vscode_AccessibilityInformation_to_js x3264
        let (get_label : t -> string) =
          fun (x3266 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3266) "label")
        let (set_label : t -> string -> unit) =
          fun (x3267 : t) ->
            fun (x3268 : string) ->
              Ojs.set_prop_ascii (t_to_js x3267) "label"
                (Ojs.string_to_js x3268)
        let (get_role : t -> string) =
          fun (x3269 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3269) "role")
        let (set_role : t -> string -> unit) =
          fun (x3270 : t) ->
            fun (x3271 : string) ->
              Ojs.set_prop_ascii (t_to_js x3270) "role"
                (Ojs.string_to_js x3271)
      end
    module StatusBarAlignment =
      struct
        type t = vscode_StatusBarAlignment
        let rec t_of_js : Ojs.t -> t =
          fun (x3273 : Ojs.t) -> vscode_StatusBarAlignment_of_js x3273
        and t_to_js : t -> Ojs.t =
          fun (x3272 : vscode_StatusBarAlignment) ->
            vscode_StatusBarAlignment_to_js x3272
      end
    module StatusBarItem =
      struct
        type t = vscode_StatusBarItem
        let rec t_of_js : Ojs.t -> t =
          fun (x3275 : Ojs.t) -> vscode_StatusBarItem_of_js x3275
        and t_to_js : t -> Ojs.t =
          fun (x3274 : vscode_StatusBarItem) ->
            vscode_StatusBarItem_to_js x3274
        let (get_alignment : t -> vscode_StatusBarAlignment) =
          fun (x3276 : t) ->
            vscode_StatusBarAlignment_of_js
              (Ojs.get_prop_ascii (t_to_js x3276) "alignment")
        let (get_priority : t -> float) =
          fun (x3277 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3277) "priority")
        let (get_text : t -> string) =
          fun (x3278 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3278) "text")
        let (set_text : t -> string -> unit) =
          fun (x3279 : t) ->
            fun (x3280 : string) ->
              Ojs.set_prop_ascii (t_to_js x3279) "text"
                (Ojs.string_to_js x3280)
        let (get_tooltip : t -> string or_undefined) =
          fun (x3281 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3281) "tooltip")
        let (set_tooltip : t -> string or_undefined -> unit) =
          fun (x3283 : t) ->
            fun (x3284 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x3283) "tooltip"
                (or_undefined_to_js Ojs.string_to_js x3284)
        let (get_color : t -> vscode_ThemeColor or_string or_undefined) =
          fun (x3286 : t) ->
            or_undefined_of_js
              (fun (x3287 : Ojs.t) ->
                 or_string_of_js vscode_ThemeColor_of_js x3287)
              (Ojs.get_prop_ascii (t_to_js x3286) "color")
        let (set_color :
          t -> vscode_ThemeColor or_string or_undefined -> unit) =
          fun (x3289 : t) ->
            fun (x3290 : vscode_ThemeColor or_string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x3289) "color"
                (or_undefined_to_js
                   (fun (x3291 : vscode_ThemeColor or_string) ->
                      or_string_to_js vscode_ThemeColor_to_js x3291) x3290)
        let (get_backgroundColor : t -> vscode_ThemeColor or_undefined) =
          fun (x3293 : t) ->
            or_undefined_of_js vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x3293) "backgroundColor")
        let (set_backgroundColor :
          t -> vscode_ThemeColor or_undefined -> unit) =
          fun (x3295 : t) ->
            fun (x3296 : vscode_ThemeColor or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x3295) "backgroundColor"
                (or_undefined_to_js vscode_ThemeColor_to_js x3296)
        let (get_command : t -> vscode_Command or_string or_undefined) =
          fun (x3298 : t) ->
            or_undefined_of_js
              (fun (x3299 : Ojs.t) ->
                 or_string_of_js vscode_Command_of_js x3299)
              (Ojs.get_prop_ascii (t_to_js x3298) "command")
        let (set_command :
          t -> vscode_Command or_string or_undefined -> unit) =
          fun (x3301 : t) ->
            fun (x3302 : vscode_Command or_string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x3301) "command"
                (or_undefined_to_js
                   (fun (x3303 : vscode_Command or_string) ->
                      or_string_to_js vscode_Command_to_js x3303) x3302)
        let (get_accessibilityInformation :
          t -> vscode_AccessibilityInformation) =
          fun (x3305 : t) ->
            vscode_AccessibilityInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x3305) "accessibilityInformation")
        let (set_accessibilityInformation :
          t -> vscode_AccessibilityInformation -> unit) =
          fun (x3306 : t) ->
            fun (x3307 : vscode_AccessibilityInformation) ->
              Ojs.set_prop_ascii (t_to_js x3306) "accessibilityInformation"
                (vscode_AccessibilityInformation_to_js x3307)
        let (show : t -> unit) =
          fun (x3308 : t) -> ignore (Ojs.call (t_to_js x3308) "show" [||])
        let (hide : t -> unit) =
          fun (x3309 : t) -> ignore (Ojs.call (t_to_js x3309) "hide" [||])
        let (dispose : t -> unit) =
          fun (x3310 : t) -> ignore (Ojs.call (t_to_js x3310) "dispose" [||])
      end
    module Progress =
      struct
        type 'T t = 'T vscode_Progress
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x3313 : Ojs.t) -> vscode_Progress_of_js __T_of_js x3313
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x3311 : __T vscode_Progress) ->
              vscode_Progress_to_js __T_to_js x3311
        let (report : 'T t -> value:'T -> unit) =
          fun (x3316 : 'T t) ->
            fun ~value:(x3315 : 'T) ->
              ignore
                (Ojs.call (t_to_js Obj.magic x3316) "report"
                   [|(Obj.magic x3315)|])
      end
    module Terminal =
      struct
        type t = vscode_Terminal
        let rec t_of_js : Ojs.t -> t =
          fun (x3319 : Ojs.t) -> vscode_Terminal_of_js x3319
        and t_to_js : t -> Ojs.t =
          fun (x3318 : vscode_Terminal) -> vscode_Terminal_to_js x3318
        let (get_name : t -> string) =
          fun (x3320 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3320) "name")
        let (get_processId : t -> float or_undefined _Thenable) =
          fun (x3321 : t) ->
            _Thenable_of_js
              (fun (x3322 : Ojs.t) ->
                 or_undefined_of_js Ojs.float_of_js x3322)
              (Ojs.get_prop_ascii (t_to_js x3321) "processId")
        let (get_creationOptions :
          t ->
            (vscode_ExtensionTerminalOptions, vscode_TerminalOptions) union2
              Readonly.t)
          =
          fun (x3324 : t) ->
            Readonly.t_of_js
              (fun (x3325 : Ojs.t) ->
                 union2_of_js vscode_ExtensionTerminalOptions_of_js
                   vscode_TerminalOptions_of_js x3325)
              (Ojs.get_prop_ascii (t_to_js x3324) "creationOptions")
        let (get_exitStatus : t -> vscode_TerminalExitStatus or_undefined) =
          fun (x3328 : t) ->
            or_undefined_of_js vscode_TerminalExitStatus_of_js
              (Ojs.get_prop_ascii (t_to_js x3328) "exitStatus")
        let (sendText : t -> text:string -> ?addNewLine:bool -> unit -> unit)
          =
          fun (x3334 : t) ->
            fun ~text:(x3330 : string) ->
              fun ?addNewLine:(x3331 : bool option) ->
                fun () ->
                  ignore
                    (let x3335 = t_to_js x3334 in
                     Ojs.call (Ojs.get_prop_ascii x3335 "sendText") "apply"
                       [|x3335;((let x3332 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x3332 "push"
                                      [|(Ojs.string_to_js x3330)|]);
                                 (match x3331 with
                                  | Some x3333 ->
                                      ignore
                                        (Ojs.call x3332 "push"
                                           [|(Ojs.bool_to_js x3333)|])
                                  | None -> ());
                                 x3332))|])
        let (show : t -> ?preserveFocus:bool -> unit -> unit) =
          fun (x3339 : t) ->
            fun ?preserveFocus:(x3336 : bool option) ->
              fun () ->
                ignore
                  (let x3340 = t_to_js x3339 in
                   Ojs.call (Ojs.get_prop_ascii x3340 "show") "apply"
                     [|x3340;((let x3337 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3336 with
                                | Some x3338 ->
                                    ignore
                                      (Ojs.call x3337 "push"
                                         [|(Ojs.bool_to_js x3338)|])
                                | None -> ());
                               x3337))|])
        let (hide : t -> unit) =
          fun (x3341 : t) -> ignore (Ojs.call (t_to_js x3341) "hide" [||])
        let (dispose : t -> unit) =
          fun (x3342 : t) -> ignore (Ojs.call (t_to_js x3342) "dispose" [||])
      end
    module TerminalLinkContext =
      struct
        type t = vscode_TerminalLinkContext
        let rec t_of_js : Ojs.t -> t =
          fun (x3344 : Ojs.t) -> vscode_TerminalLinkContext_of_js x3344
        and t_to_js : t -> Ojs.t =
          fun (x3343 : vscode_TerminalLinkContext) ->
            vscode_TerminalLinkContext_to_js x3343
        let (get_line : t -> string) =
          fun (x3345 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3345) "line")
        let (set_line : t -> string -> unit) =
          fun (x3346 : t) ->
            fun (x3347 : string) ->
              Ojs.set_prop_ascii (t_to_js x3346) "line"
                (Ojs.string_to_js x3347)
        let (get_terminal : t -> vscode_Terminal) =
          fun (x3348 : t) ->
            vscode_Terminal_of_js
              (Ojs.get_prop_ascii (t_to_js x3348) "terminal")
        let (set_terminal : t -> vscode_Terminal -> unit) =
          fun (x3349 : t) ->
            fun (x3350 : vscode_Terminal) ->
              Ojs.set_prop_ascii (t_to_js x3349) "terminal"
                (vscode_Terminal_to_js x3350)
      end
    module TerminalLinkProvider =
      struct
        type 'T t = 'T vscode_TerminalLinkProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x3353 : Ojs.t) ->
              vscode_TerminalLinkProvider_of_js __T_of_js x3353
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x3351 : __T vscode_TerminalLinkProvider) ->
              vscode_TerminalLinkProvider_to_js __T_to_js x3351
        let (provideTerminalLinks :
          'T t ->
            context:vscode_TerminalLinkContext ->
              token:vscode_CancellationToken -> 'T list vscode_ProviderResult)
          =
          fun (x3357 : 'T t) ->
            fun ~context:(x3355 : vscode_TerminalLinkContext) ->
              fun ~token:(x3356 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x3359 : Ojs.t) -> Ojs.list_of_js Obj.magic x3359)
                  (Ojs.call (t_to_js Obj.magic x3357) "provideTerminalLinks"
                     [|(vscode_TerminalLinkContext_to_js x3355);(vscode_CancellationToken_to_js
                                                                   x3356)|])
        let (handleTerminalLink :
          'T t -> link:'T -> unit vscode_ProviderResult) =
          fun (x3362 : 'T t) ->
            fun ~link:(x3361 : 'T) ->
              vscode_ProviderResult_of_js Ojs.unit_of_js
                (Ojs.call (t_to_js Obj.magic x3362) "handleTerminalLink"
                   [|(Obj.magic x3361)|])
      end
    module TerminalLink =
      struct
        type t = vscode_TerminalLink
        let rec t_of_js : Ojs.t -> t =
          fun (x3366 : Ojs.t) -> vscode_TerminalLink_of_js x3366
        and t_to_js : t -> Ojs.t =
          fun (x3365 : vscode_TerminalLink) ->
            vscode_TerminalLink_to_js x3365
        let (get_startIndex : t -> float) =
          fun (x3367 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3367) "startIndex")
        let (set_startIndex : t -> float -> unit) =
          fun (x3368 : t) ->
            fun (x3369 : float) ->
              Ojs.set_prop_ascii (t_to_js x3368) "startIndex"
                (Ojs.float_to_js x3369)
        let (get_length : t -> float) =
          fun (x3370 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3370) "length")
        let (set_length : t -> float -> unit) =
          fun (x3371 : t) ->
            fun (x3372 : float) ->
              Ojs.set_prop_ascii (t_to_js x3371) "length"
                (Ojs.float_to_js x3372)
        let (get_tooltip : t -> string) =
          fun (x3373 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3373) "tooltip")
        let (set_tooltip : t -> string -> unit) =
          fun (x3374 : t) ->
            fun (x3375 : string) ->
              Ojs.set_prop_ascii (t_to_js x3374) "tooltip"
                (Ojs.string_to_js x3375)
      end
    module FileDecoration =
      struct
        type t = vscode_FileDecoration
        let rec t_of_js : Ojs.t -> t =
          fun (x3377 : Ojs.t) -> vscode_FileDecoration_of_js x3377
        and t_to_js : t -> Ojs.t =
          fun (x3376 : vscode_FileDecoration) ->
            vscode_FileDecoration_to_js x3376
        let (get_badge : t -> string) =
          fun (x3378 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3378) "badge")
        let (set_badge : t -> string -> unit) =
          fun (x3379 : t) ->
            fun (x3380 : string) ->
              Ojs.set_prop_ascii (t_to_js x3379) "badge"
                (Ojs.string_to_js x3380)
        let (get_tooltip : t -> string) =
          fun (x3381 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3381) "tooltip")
        let (set_tooltip : t -> string -> unit) =
          fun (x3382 : t) ->
            fun (x3383 : string) ->
              Ojs.set_prop_ascii (t_to_js x3382) "tooltip"
                (Ojs.string_to_js x3383)
        let (get_color : t -> vscode_ThemeColor) =
          fun (x3384 : t) ->
            vscode_ThemeColor_of_js
              (Ojs.get_prop_ascii (t_to_js x3384) "color")
        let (set_color : t -> vscode_ThemeColor -> unit) =
          fun (x3385 : t) ->
            fun (x3386 : vscode_ThemeColor) ->
              Ojs.set_prop_ascii (t_to_js x3385) "color"
                (vscode_ThemeColor_to_js x3386)
        let (get_propagate : t -> bool) =
          fun (x3387 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3387) "propagate")
        let (set_propagate : t -> bool -> unit) =
          fun (x3388 : t) ->
            fun (x3389 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3388) "propagate"
                (Ojs.bool_to_js x3389)
        let (create :
          ?badge:string ->
            ?tooltip:string -> ?color:vscode_ThemeColor -> unit -> t)
          =
          fun ?badge:(x3390 : string option) ->
            fun ?tooltip:(x3391 : string option) ->
              fun ?color:(x3392 : vscode_ThemeColor option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "FileDecoration")
                       (let x3393 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x3390 with
                         | Some x3396 ->
                             ignore
                               (Ojs.call x3393 "push"
                                  [|(Ojs.string_to_js x3396)|])
                         | None -> ());
                        (match x3391 with
                         | Some x3395 ->
                             ignore
                               (Ojs.call x3393 "push"
                                  [|(Ojs.string_to_js x3395)|])
                         | None -> ());
                        (match x3392 with
                         | Some x3394 ->
                             ignore
                               (Ojs.call x3393 "push"
                                  [|(vscode_ThemeColor_to_js x3394)|])
                         | None -> ());
                        x3393))
      end
    module FileDecorationProvider =
      struct
        type t = vscode_FileDecorationProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x3398 : Ojs.t) -> vscode_FileDecorationProvider_of_js x3398
        and t_to_js : t -> Ojs.t =
          fun (x3397 : vscode_FileDecorationProvider) ->
            vscode_FileDecorationProvider_to_js x3397
        let (get_onDidChangeFileDecorations :
          t -> (vscode_Uri, vscode_Uri) or_array or_undefined vscode_Event) =
          fun (x3399 : t) ->
            vscode_Event_of_js
              (fun (x3400 : Ojs.t) ->
                 or_undefined_of_js
                   (fun (x3401 : Ojs.t) ->
                      or_array_of_js vscode_Uri_of_js vscode_Uri_of_js x3401)
                   x3400)
              (Ojs.get_prop_ascii (t_to_js x3399)
                 "onDidChangeFileDecorations")
        let (set_onDidChangeFileDecorations :
          t ->
            (vscode_Uri, vscode_Uri) or_array or_undefined vscode_Event ->
              unit)
          =
          fun (x3404 : t) ->
            fun
              (x3405 :
                (vscode_Uri, vscode_Uri) or_array or_undefined vscode_Event)
              ->
              Ojs.set_prop_ascii (t_to_js x3404) "onDidChangeFileDecorations"
                (vscode_Event_to_js
                   (fun
                      (x3406 :
                        (vscode_Uri, vscode_Uri) or_array or_undefined)
                      ->
                      or_undefined_to_js
                        (fun (x3407 : (vscode_Uri, vscode_Uri) or_array) ->
                           or_array_to_js vscode_Uri_to_js vscode_Uri_to_js
                             x3407) x3406) x3405)
        let (provideFileDecoration :
          t ->
            uri:vscode_Uri ->
              token:vscode_CancellationToken ->
                vscode_FileDecoration vscode_ProviderResult)
          =
          fun (x3412 : t) ->
            fun ~uri:(x3410 : vscode_Uri) ->
              fun ~token:(x3411 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js vscode_FileDecoration_of_js
                  (Ojs.call (t_to_js x3412) "provideFileDecoration"
                     [|(vscode_Uri_to_js x3410);(vscode_CancellationToken_to_js
                                                   x3411)|])
      end
    module ExtensionKind =
      struct
        type t = vscode_ExtensionKind
        let rec t_of_js : Ojs.t -> t =
          fun (x3415 : Ojs.t) -> vscode_ExtensionKind_of_js x3415
        and t_to_js : t -> Ojs.t =
          fun (x3414 : vscode_ExtensionKind) ->
            vscode_ExtensionKind_to_js x3414
      end
    module Extension =
      struct
        type 'T t = 'T vscode_Extension
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x3418 : Ojs.t) -> vscode_Extension_of_js __T_of_js x3418
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x3416 : __T vscode_Extension) ->
              vscode_Extension_to_js __T_to_js x3416
        let (get_id : 'T t -> string) =
          fun (x3420 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3420) "id")
        let (get_extensionUri : 'T t -> vscode_Uri) =
          fun (x3422 : 'T t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3422) "extensionUri")
        let (get_extensionPath : 'T t -> string) =
          fun (x3424 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3424) "extensionPath")
        let (get_isActive : 'T t -> bool) =
          fun (x3426 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3426) "isActive")
        let (get_packageJSON : 'T t -> any) =
          fun (x3428 : 'T t) ->
            any_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3428) "packageJSON")
        let (get_extensionKind : 'T t -> vscode_ExtensionKind) =
          fun (x3430 : 'T t) ->
            vscode_ExtensionKind_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3430) "extensionKind")
        let (set_extensionKind : 'T t -> vscode_ExtensionKind -> unit) =
          fun (x3432 : 'T t) ->
            fun (x3433 : vscode_ExtensionKind) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x3432) "extensionKind"
                (vscode_ExtensionKind_to_js x3433)
        let (get_exports : 'T t -> 'T) =
          fun (x3435 : 'T t) ->
            Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x3435) "exports")
        let (activate : 'T t -> 'T _Thenable) =
          fun (x3437 : 'T t) ->
            _Thenable_of_js Obj.magic
              (Ojs.call (t_to_js Obj.magic x3437) "activate" [||])
      end
    module ExtensionMode =
      struct
        type t = vscode_ExtensionMode
        let rec t_of_js : Ojs.t -> t =
          fun (x3441 : Ojs.t) -> vscode_ExtensionMode_of_js x3441
        and t_to_js : t -> Ojs.t =
          fun (x3440 : vscode_ExtensionMode) ->
            vscode_ExtensionMode_to_js x3440
      end
    module ExtensionContext =
      struct
        type t = vscode_ExtensionContext
        let rec t_of_js : Ojs.t -> t =
          fun (x3443 : Ojs.t) -> vscode_ExtensionContext_of_js x3443
        and t_to_js : t -> Ojs.t =
          fun (x3442 : vscode_ExtensionContext) ->
            vscode_ExtensionContext_to_js x3442
        let (get_subscriptions : t -> anonymous_interface_42 list) =
          fun (x3444 : t) ->
            Ojs.list_of_js anonymous_interface_42_of_js
              (Ojs.get_prop_ascii (t_to_js x3444) "subscriptions")
        let (get_workspaceState : t -> vscode_Memento) =
          fun (x3446 : t) ->
            vscode_Memento_of_js
              (Ojs.get_prop_ascii (t_to_js x3446) "workspaceState")
        let (get_globalState :
          t -> (vscode_Memento, anonymous_interface_43) intersection2) =
          fun (x3447 : t) ->
            intersection2_of_js vscode_Memento_of_js
              anonymous_interface_43_of_js
              (Ojs.get_prop_ascii (t_to_js x3447) "globalState")
        let (get_secrets : t -> vscode_SecretStorage) =
          fun (x3450 : t) ->
            vscode_SecretStorage_of_js
              (Ojs.get_prop_ascii (t_to_js x3450) "secrets")
        let (get_extensionUri : t -> vscode_Uri) =
          fun (x3451 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x3451) "extensionUri")
        let (get_extensionPath : t -> string) =
          fun (x3452 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3452) "extensionPath")
        let (get_environmentVariableCollection :
          t -> vscode_EnvironmentVariableCollection) =
          fun (x3453 : t) ->
            vscode_EnvironmentVariableCollection_of_js
              (Ojs.get_prop_ascii (t_to_js x3453)
                 "environmentVariableCollection")
        let (asAbsolutePath : t -> relativePath:string -> string) =
          fun (x3455 : t) ->
            fun ~relativePath:(x3454 : string) ->
              Ojs.string_of_js
                (Ojs.call (t_to_js x3455) "asAbsolutePath"
                   [|(Ojs.string_to_js x3454)|])
        let (get_storageUri : t -> vscode_Uri or_undefined) =
          fun (x3456 : t) ->
            or_undefined_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x3456) "storageUri")
        let (get_storagePath : t -> string or_undefined) =
          fun (x3458 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3458) "storagePath")
        let (get_globalStorageUri : t -> vscode_Uri) =
          fun (x3460 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x3460) "globalStorageUri")
        let (get_globalStoragePath : t -> string) =
          fun (x3461 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3461) "globalStoragePath")
        let (get_logUri : t -> vscode_Uri) =
          fun (x3462 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x3462) "logUri")
        let (get_logPath : t -> string) =
          fun (x3463 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3463) "logPath")
        let (get_extensionMode : t -> vscode_ExtensionMode) =
          fun (x3464 : t) ->
            vscode_ExtensionMode_of_js
              (Ojs.get_prop_ascii (t_to_js x3464) "extensionMode")
        let (get_extension : t -> any vscode_Extension) =
          fun (x3465 : t) ->
            vscode_Extension_of_js any_of_js
              (Ojs.get_prop_ascii (t_to_js x3465) "extension")
      end
    module Memento =
      struct
        type t = vscode_Memento
        let rec t_of_js : Ojs.t -> t =
          fun (x3468 : Ojs.t) -> vscode_Memento_of_js x3468
        and t_to_js : t -> Ojs.t =
          fun (x3467 : vscode_Memento) -> vscode_Memento_to_js x3467
        let (get_ : t -> key:string -> 'T or_undefined) =
          fun (x3470 : t) ->
            fun ~key:(x3469 : string) ->
              or_undefined_of_js Obj.magic
                (Ojs.call (t_to_js x3470) "get" [|(Ojs.string_to_js x3469)|])
        let (get_' : t -> key:string -> defaultValue:'T -> 'T) =
          fun (x3474 : t) ->
            fun ~key:(x3472 : string) ->
              fun ~defaultValue:(x3473 : 'T) ->
                Obj.magic
                  (Ojs.call (t_to_js x3474) "get"
                     [|(Ojs.string_to_js x3472);(Obj.magic x3473)|])
        let (update : t -> key:string -> value:any -> unit _Thenable) =
          fun (x3477 : t) ->
            fun ~key:(x3475 : string) ->
              fun ~value:(x3476 : any) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js x3477) "update"
                     [|(Ojs.string_to_js x3475);(any_to_js x3476)|])
      end
    module SecretStorageChangeEvent =
      struct
        type t = vscode_SecretStorageChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3480 : Ojs.t) -> vscode_SecretStorageChangeEvent_of_js x3480
        and t_to_js : t -> Ojs.t =
          fun (x3479 : vscode_SecretStorageChangeEvent) ->
            vscode_SecretStorageChangeEvent_to_js x3479
        let (get_key : t -> string) =
          fun (x3481 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3481) "key")
      end
    module SecretStorage =
      struct
        type t = vscode_SecretStorage
        let rec t_of_js : Ojs.t -> t =
          fun (x3483 : Ojs.t) -> vscode_SecretStorage_of_js x3483
        and t_to_js : t -> Ojs.t =
          fun (x3482 : vscode_SecretStorage) ->
            vscode_SecretStorage_to_js x3482
        let (get_ : t -> key:string -> string or_undefined _Thenable) =
          fun (x3485 : t) ->
            fun ~key:(x3484 : string) ->
              _Thenable_of_js
                (fun (x3486 : Ojs.t) ->
                   or_undefined_of_js Ojs.string_of_js x3486)
                (Ojs.call (t_to_js x3485) "get" [|(Ojs.string_to_js x3484)|])
        let (store : t -> key:string -> value:string -> unit _Thenable) =
          fun (x3490 : t) ->
            fun ~key:(x3488 : string) ->
              fun ~value:(x3489 : string) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js x3490) "store"
                     [|(Ojs.string_to_js x3488);(Ojs.string_to_js x3489)|])
        let (delete : t -> key:string -> unit _Thenable) =
          fun (x3493 : t) ->
            fun ~key:(x3492 : string) ->
              _Thenable_of_js Ojs.unit_of_js
                (Ojs.call (t_to_js x3493) "delete"
                   [|(Ojs.string_to_js x3492)|])
        let (get_onDidChange :
          t -> vscode_SecretStorageChangeEvent vscode_Event) =
          fun (x3495 : t) ->
            vscode_Event_of_js vscode_SecretStorageChangeEvent_of_js
              (Ojs.get_prop_ascii (t_to_js x3495) "onDidChange")
        let (set_onDidChange :
          t -> vscode_SecretStorageChangeEvent vscode_Event -> unit) =
          fun (x3497 : t) ->
            fun (x3498 : vscode_SecretStorageChangeEvent vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x3497) "onDidChange"
                (vscode_Event_to_js vscode_SecretStorageChangeEvent_to_js
                   x3498)
      end
    module ColorThemeKind =
      struct
        type t = vscode_ColorThemeKind
        let rec t_of_js : Ojs.t -> t =
          fun (x3501 : Ojs.t) -> vscode_ColorThemeKind_of_js x3501
        and t_to_js : t -> Ojs.t =
          fun (x3500 : vscode_ColorThemeKind) ->
            vscode_ColorThemeKind_to_js x3500
      end
    module ColorTheme =
      struct
        type t = vscode_ColorTheme
        let rec t_of_js : Ojs.t -> t =
          fun (x3503 : Ojs.t) -> vscode_ColorTheme_of_js x3503
        and t_to_js : t -> Ojs.t =
          fun (x3502 : vscode_ColorTheme) -> vscode_ColorTheme_to_js x3502
        let (get_kind : t -> vscode_ColorThemeKind) =
          fun (x3504 : t) ->
            vscode_ColorThemeKind_of_js
              (Ojs.get_prop_ascii (t_to_js x3504) "kind")
      end
    module TaskRevealKind =
      struct
        type t = vscode_TaskRevealKind
        let rec t_of_js : Ojs.t -> t =
          fun (x3506 : Ojs.t) -> vscode_TaskRevealKind_of_js x3506
        and t_to_js : t -> Ojs.t =
          fun (x3505 : vscode_TaskRevealKind) ->
            vscode_TaskRevealKind_to_js x3505
      end
    module TaskPanelKind =
      struct
        type t = vscode_TaskPanelKind
        let rec t_of_js : Ojs.t -> t =
          fun (x3508 : Ojs.t) -> vscode_TaskPanelKind_of_js x3508
        and t_to_js : t -> Ojs.t =
          fun (x3507 : vscode_TaskPanelKind) ->
            vscode_TaskPanelKind_to_js x3507
      end
    module TaskPresentationOptions =
      struct
        type t = vscode_TaskPresentationOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3510 : Ojs.t) -> vscode_TaskPresentationOptions_of_js x3510
        and t_to_js : t -> Ojs.t =
          fun (x3509 : vscode_TaskPresentationOptions) ->
            vscode_TaskPresentationOptions_to_js x3509
        let (get_reveal : t -> vscode_TaskRevealKind) =
          fun (x3511 : t) ->
            vscode_TaskRevealKind_of_js
              (Ojs.get_prop_ascii (t_to_js x3511) "reveal")
        let (set_reveal : t -> vscode_TaskRevealKind -> unit) =
          fun (x3512 : t) ->
            fun (x3513 : vscode_TaskRevealKind) ->
              Ojs.set_prop_ascii (t_to_js x3512) "reveal"
                (vscode_TaskRevealKind_to_js x3513)
        let (get_echo : t -> bool) =
          fun (x3514 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3514) "echo")
        let (set_echo : t -> bool -> unit) =
          fun (x3515 : t) ->
            fun (x3516 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3515) "echo"
                (Ojs.bool_to_js x3516)
        let (get_focus : t -> bool) =
          fun (x3517 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3517) "focus")
        let (set_focus : t -> bool -> unit) =
          fun (x3518 : t) ->
            fun (x3519 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3518) "focus"
                (Ojs.bool_to_js x3519)
        let (get_panel : t -> vscode_TaskPanelKind) =
          fun (x3520 : t) ->
            vscode_TaskPanelKind_of_js
              (Ojs.get_prop_ascii (t_to_js x3520) "panel")
        let (set_panel : t -> vscode_TaskPanelKind -> unit) =
          fun (x3521 : t) ->
            fun (x3522 : vscode_TaskPanelKind) ->
              Ojs.set_prop_ascii (t_to_js x3521) "panel"
                (vscode_TaskPanelKind_to_js x3522)
        let (get_showReuseMessage : t -> bool) =
          fun (x3523 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3523) "showReuseMessage")
        let (set_showReuseMessage : t -> bool -> unit) =
          fun (x3524 : t) ->
            fun (x3525 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3524) "showReuseMessage"
                (Ojs.bool_to_js x3525)
        let (get_clear : t -> bool) =
          fun (x3526 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x3526) "clear")
        let (set_clear : t -> bool -> unit) =
          fun (x3527 : t) ->
            fun (x3528 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3527) "clear"
                (Ojs.bool_to_js x3528)
      end
    module TaskGroup =
      struct
        type t = vscode_TaskGroup
        let rec t_of_js : Ojs.t -> t =
          fun (x3530 : Ojs.t) -> vscode_TaskGroup_of_js x3530
        and t_to_js : t -> Ojs.t =
          fun (x3529 : vscode_TaskGroup) -> vscode_TaskGroup_to_js x3529
        let (get_Clean : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "TaskGroup") "Clean")
        let (set_Clean : t -> unit) =
          fun (x3531 : t) ->
            Ojs.set_prop_ascii
              (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                 "TaskGroup") "Clean" (t_to_js x3531)
        let (get_Build : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "TaskGroup") "Build")
        let (set_Build : t -> unit) =
          fun (x3532 : t) ->
            Ojs.set_prop_ascii
              (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                 "TaskGroup") "Build" (t_to_js x3532)
        let (get_Rebuild : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "TaskGroup") "Rebuild")
        let (set_Rebuild : t -> unit) =
          fun (x3533 : t) ->
            Ojs.set_prop_ascii
              (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                 "TaskGroup") "Rebuild" (t_to_js x3533)
        let (get_Test : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "TaskGroup") "Test")
        let (set_Test : t -> unit) =
          fun (x3534 : t) ->
            Ojs.set_prop_ascii
              (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                 "TaskGroup") "Test" (t_to_js x3534)
        let (create : id:string -> label:string -> t) =
          fun ~id:(x3535 : string) ->
            fun ~label:(x3536 : string) ->
              t_of_js
                (Ojs.new_obj
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "TaskGroup")
                   [|(Ojs.string_to_js x3535);(Ojs.string_to_js x3536)|])
      end
    module TaskDefinition =
      struct
        type t = vscode_TaskDefinition
        let rec t_of_js : Ojs.t -> t =
          fun (x3538 : Ojs.t) -> vscode_TaskDefinition_of_js x3538
        and t_to_js : t -> Ojs.t =
          fun (x3537 : vscode_TaskDefinition) ->
            vscode_TaskDefinition_to_js x3537
        let (get_type : t -> string) =
          fun (x3539 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3539) "type")
        let (get : t -> string -> any) =
          fun (x3540 : t) ->
            fun (x3541 : string) ->
              any_of_js
                (Ojs.get_prop (t_to_js x3540) (Ojs.string_to_js x3541))
        let (set : t -> string -> any -> unit) =
          fun (x3542 : t) ->
            fun (x3543 : string) ->
              fun (x3544 : any) ->
                Ojs.set_prop (t_to_js x3542) (Ojs.string_to_js x3543)
                  (any_to_js x3544)
      end
    module ProcessExecutionOptions =
      struct
        type t = vscode_ProcessExecutionOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3546 : Ojs.t) -> vscode_ProcessExecutionOptions_of_js x3546
        and t_to_js : t -> Ojs.t =
          fun (x3545 : vscode_ProcessExecutionOptions) ->
            vscode_ProcessExecutionOptions_to_js x3545
        let (get_cwd : t -> string) =
          fun (x3547 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3547) "cwd")
        let (set_cwd : t -> string -> unit) =
          fun (x3548 : t) ->
            fun (x3549 : string) ->
              Ojs.set_prop_ascii (t_to_js x3548) "cwd"
                (Ojs.string_to_js x3549)
        let (get_env : t -> anonymous_interface_44) =
          fun (x3550 : t) ->
            anonymous_interface_44_of_js
              (Ojs.get_prop_ascii (t_to_js x3550) "env")
        let (set_env : t -> anonymous_interface_44 -> unit) =
          fun (x3551 : t) ->
            fun (x3552 : anonymous_interface_44) ->
              Ojs.set_prop_ascii (t_to_js x3551) "env"
                (anonymous_interface_44_to_js x3552)
      end
    module ProcessExecution =
      struct
        type t = vscode_ProcessExecution
        let rec t_of_js : Ojs.t -> t =
          fun (x3554 : Ojs.t) -> vscode_ProcessExecution_of_js x3554
        and t_to_js : t -> Ojs.t =
          fun (x3553 : vscode_ProcessExecution) ->
            vscode_ProcessExecution_to_js x3553
        let (create :
          process:string ->
            ?options:vscode_ProcessExecutionOptions -> unit -> t)
          =
          fun ~process:(x3555 : string) ->
            fun ?options:(x3556 : vscode_ProcessExecutionOptions option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "ProcessExecution")
                     (let x3557 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3557 "push" [|(Ojs.string_to_js x3555)|]);
                      (match x3556 with
                       | Some x3558 ->
                           ignore
                             (Ojs.call x3557 "push"
                                [|(vscode_ProcessExecutionOptions_to_js x3558)|])
                       | None -> ());
                      x3557))
        let (create' :
          process:string ->
            args:string list ->
              ?options:vscode_ProcessExecutionOptions -> unit -> t)
          =
          fun ~process:(x3559 : string) ->
            fun ~args:(x3560 : string list) ->
              fun ?options:(x3561 : vscode_ProcessExecutionOptions option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "ProcessExecution")
                       (let x3562 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x3562 "push" [|(Ojs.string_to_js x3559)|]);
                        ignore
                          (Ojs.call x3562 "push"
                             [|(Ojs.list_to_js Ojs.string_to_js x3560)|]);
                        (match x3561 with
                         | Some x3563 ->
                             ignore
                               (Ojs.call x3562 "push"
                                  [|(vscode_ProcessExecutionOptions_to_js
                                       x3563)|])
                         | None -> ());
                        x3562))
        let (get_process : t -> string) =
          fun (x3565 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3565) "process")
        let (set_process : t -> string -> unit) =
          fun (x3566 : t) ->
            fun (x3567 : string) ->
              Ojs.set_prop_ascii (t_to_js x3566) "process"
                (Ojs.string_to_js x3567)
        let (get_args : t -> string list) =
          fun (x3568 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3568) "args")
        let (set_args : t -> string list -> unit) =
          fun (x3570 : t) ->
            fun (x3571 : string list) ->
              Ojs.set_prop_ascii (t_to_js x3570) "args"
                (Ojs.list_to_js Ojs.string_to_js x3571)
        let (get_options : t -> vscode_ProcessExecutionOptions) =
          fun (x3573 : t) ->
            vscode_ProcessExecutionOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x3573) "options")
        let (set_options : t -> vscode_ProcessExecutionOptions -> unit) =
          fun (x3574 : t) ->
            fun (x3575 : vscode_ProcessExecutionOptions) ->
              Ojs.set_prop_ascii (t_to_js x3574) "options"
                (vscode_ProcessExecutionOptions_to_js x3575)
      end
    module ShellQuotingOptions =
      struct
        type t = vscode_ShellQuotingOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3577 : Ojs.t) -> vscode_ShellQuotingOptions_of_js x3577
        and t_to_js : t -> Ojs.t =
          fun (x3576 : vscode_ShellQuotingOptions) ->
            vscode_ShellQuotingOptions_to_js x3576
        let (get_escape : t -> anonymous_interface_7 or_string) =
          fun (x3578 : t) ->
            or_string_of_js anonymous_interface_7_of_js
              (Ojs.get_prop_ascii (t_to_js x3578) "escape")
        let (set_escape : t -> anonymous_interface_7 or_string -> unit) =
          fun (x3580 : t) ->
            fun (x3581 : anonymous_interface_7 or_string) ->
              Ojs.set_prop_ascii (t_to_js x3580) "escape"
                (or_string_to_js anonymous_interface_7_to_js x3581)
        let (get_strong : t -> string) =
          fun (x3583 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3583) "strong")
        let (set_strong : t -> string -> unit) =
          fun (x3584 : t) ->
            fun (x3585 : string) ->
              Ojs.set_prop_ascii (t_to_js x3584) "strong"
                (Ojs.string_to_js x3585)
        let (get_weak : t -> string) =
          fun (x3586 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3586) "weak")
        let (set_weak : t -> string -> unit) =
          fun (x3587 : t) ->
            fun (x3588 : string) ->
              Ojs.set_prop_ascii (t_to_js x3587) "weak"
                (Ojs.string_to_js x3588)
      end
    module ShellExecutionOptions =
      struct
        type t = vscode_ShellExecutionOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3590 : Ojs.t) -> vscode_ShellExecutionOptions_of_js x3590
        and t_to_js : t -> Ojs.t =
          fun (x3589 : vscode_ShellExecutionOptions) ->
            vscode_ShellExecutionOptions_to_js x3589
        let (get_executable : t -> string) =
          fun (x3591 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3591) "executable")
        let (set_executable : t -> string -> unit) =
          fun (x3592 : t) ->
            fun (x3593 : string) ->
              Ojs.set_prop_ascii (t_to_js x3592) "executable"
                (Ojs.string_to_js x3593)
        let (get_shellArgs : t -> string list) =
          fun (x3594 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3594) "shellArgs")
        let (set_shellArgs : t -> string list -> unit) =
          fun (x3596 : t) ->
            fun (x3597 : string list) ->
              Ojs.set_prop_ascii (t_to_js x3596) "shellArgs"
                (Ojs.list_to_js Ojs.string_to_js x3597)
        let (get_shellQuoting : t -> vscode_ShellQuotingOptions) =
          fun (x3599 : t) ->
            vscode_ShellQuotingOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x3599) "shellQuoting")
        let (set_shellQuoting : t -> vscode_ShellQuotingOptions -> unit) =
          fun (x3600 : t) ->
            fun (x3601 : vscode_ShellQuotingOptions) ->
              Ojs.set_prop_ascii (t_to_js x3600) "shellQuoting"
                (vscode_ShellQuotingOptions_to_js x3601)
        let (get_cwd : t -> string) =
          fun (x3602 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3602) "cwd")
        let (set_cwd : t -> string -> unit) =
          fun (x3603 : t) ->
            fun (x3604 : string) ->
              Ojs.set_prop_ascii (t_to_js x3603) "cwd"
                (Ojs.string_to_js x3604)
        let (get_env : t -> anonymous_interface_44) =
          fun (x3605 : t) ->
            anonymous_interface_44_of_js
              (Ojs.get_prop_ascii (t_to_js x3605) "env")
        let (set_env : t -> anonymous_interface_44 -> unit) =
          fun (x3606 : t) ->
            fun (x3607 : anonymous_interface_44) ->
              Ojs.set_prop_ascii (t_to_js x3606) "env"
                (anonymous_interface_44_to_js x3607)
      end
    module ShellQuoting =
      struct
        type t = vscode_ShellQuoting
        let rec t_of_js : Ojs.t -> t =
          fun (x3609 : Ojs.t) -> vscode_ShellQuoting_of_js x3609
        and t_to_js : t -> Ojs.t =
          fun (x3608 : vscode_ShellQuoting) ->
            vscode_ShellQuoting_to_js x3608
      end
    module ShellQuotedString =
      struct
        type t = vscode_ShellQuotedString
        let rec t_of_js : Ojs.t -> t =
          fun (x3611 : Ojs.t) -> vscode_ShellQuotedString_of_js x3611
        and t_to_js : t -> Ojs.t =
          fun (x3610 : vscode_ShellQuotedString) ->
            vscode_ShellQuotedString_to_js x3610
        let (get_value : t -> string) =
          fun (x3612 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3612) "value")
        let (set_value : t -> string -> unit) =
          fun (x3613 : t) ->
            fun (x3614 : string) ->
              Ojs.set_prop_ascii (t_to_js x3613) "value"
                (Ojs.string_to_js x3614)
        let (get_quoting : t -> vscode_ShellQuoting) =
          fun (x3615 : t) ->
            vscode_ShellQuoting_of_js
              (Ojs.get_prop_ascii (t_to_js x3615) "quoting")
        let (set_quoting : t -> vscode_ShellQuoting -> unit) =
          fun (x3616 : t) ->
            fun (x3617 : vscode_ShellQuoting) ->
              Ojs.set_prop_ascii (t_to_js x3616) "quoting"
                (vscode_ShellQuoting_to_js x3617)
      end
    module ShellExecution =
      struct
        type t = vscode_ShellExecution
        let rec t_of_js : Ojs.t -> t =
          fun (x3619 : Ojs.t) -> vscode_ShellExecution_of_js x3619
        and t_to_js : t -> Ojs.t =
          fun (x3618 : vscode_ShellExecution) ->
            vscode_ShellExecution_to_js x3618
        let (create :
          commandLine:string ->
            ?options:vscode_ShellExecutionOptions -> unit -> t)
          =
          fun ~commandLine:(x3620 : string) ->
            fun ?options:(x3621 : vscode_ShellExecutionOptions option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "ShellExecution")
                     (let x3622 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3622 "push" [|(Ojs.string_to_js x3620)|]);
                      (match x3621 with
                       | Some x3623 ->
                           ignore
                             (Ojs.call x3622 "push"
                                [|(vscode_ShellExecutionOptions_to_js x3623)|])
                       | None -> ());
                      x3622))
        let (create' :
          command:vscode_ShellQuotedString or_string ->
            args:vscode_ShellQuotedString or_string list ->
              ?options:vscode_ShellExecutionOptions -> unit -> t)
          =
          fun ~command:(x3624 : vscode_ShellQuotedString or_string) ->
            fun ~args:(x3625 : vscode_ShellQuotedString or_string list) ->
              fun ?options:(x3626 : vscode_ShellExecutionOptions option) ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "ShellExecution")
                       (let x3627 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x3627 "push"
                             [|(or_string_to_js
                                  vscode_ShellQuotedString_to_js x3624)|]);
                        ignore
                          (Ojs.call x3627 "push"
                             [|(Ojs.list_to_js
                                  (fun
                                     (x3629 :
                                       vscode_ShellQuotedString or_string)
                                     ->
                                     or_string_to_js
                                       vscode_ShellQuotedString_to_js x3629)
                                  x3625)|]);
                        (match x3626 with
                         | Some x3628 ->
                             ignore
                               (Ojs.call x3627 "push"
                                  [|(vscode_ShellExecutionOptions_to_js x3628)|])
                         | None -> ());
                        x3627))
        let (get_commandLine : t -> string or_undefined) =
          fun (x3632 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3632) "commandLine")
        let (set_commandLine : t -> string or_undefined -> unit) =
          fun (x3634 : t) ->
            fun (x3635 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x3634) "commandLine"
                (or_undefined_to_js Ojs.string_to_js x3635)
        let (get_command : t -> vscode_ShellQuotedString or_string) =
          fun (x3637 : t) ->
            or_string_of_js vscode_ShellQuotedString_of_js
              (Ojs.get_prop_ascii (t_to_js x3637) "command")
        let (set_command : t -> vscode_ShellQuotedString or_string -> unit) =
          fun (x3639 : t) ->
            fun (x3640 : vscode_ShellQuotedString or_string) ->
              Ojs.set_prop_ascii (t_to_js x3639) "command"
                (or_string_to_js vscode_ShellQuotedString_to_js x3640)
        let (get_args : t -> vscode_ShellQuotedString or_string list) =
          fun (x3642 : t) ->
            Ojs.list_of_js
              (fun (x3643 : Ojs.t) ->
                 or_string_of_js vscode_ShellQuotedString_of_js x3643)
              (Ojs.get_prop_ascii (t_to_js x3642) "args")
        let (set_args : t -> vscode_ShellQuotedString or_string list -> unit)
          =
          fun (x3645 : t) ->
            fun (x3646 : vscode_ShellQuotedString or_string list) ->
              Ojs.set_prop_ascii (t_to_js x3645) "args"
                (Ojs.list_to_js
                   (fun (x3647 : vscode_ShellQuotedString or_string) ->
                      or_string_to_js vscode_ShellQuotedString_to_js x3647)
                   x3646)
        let (get_options : t -> vscode_ShellExecutionOptions) =
          fun (x3649 : t) ->
            vscode_ShellExecutionOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x3649) "options")
        let (set_options : t -> vscode_ShellExecutionOptions -> unit) =
          fun (x3650 : t) ->
            fun (x3651 : vscode_ShellExecutionOptions) ->
              Ojs.set_prop_ascii (t_to_js x3650) "options"
                (vscode_ShellExecutionOptions_to_js x3651)
      end
    module CustomExecution =
      struct
        type t = vscode_CustomExecution
        let rec t_of_js : Ojs.t -> t =
          fun (x3653 : Ojs.t) -> vscode_CustomExecution_of_js x3653
        and t_to_js : t -> Ojs.t =
          fun (x3652 : vscode_CustomExecution) ->
            vscode_CustomExecution_to_js x3652
        let (create :
          callback:(resolvedDefinition:vscode_TaskDefinition ->
                      vscode_Pseudoterminal _Thenable)
            -> t)
          =
          fun
            ~callback:(x3654 :
                        resolvedDefinition:vscode_TaskDefinition ->
                          vscode_Pseudoterminal _Thenable)
            ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "CustomExecution")
                 [|(Ojs.fun_to_js 1
                      (fun (x3655 : Ojs.t) ->
                         _Thenable_to_js vscode_Pseudoterminal_to_js
                           (x3654
                              ~resolvedDefinition:(vscode_TaskDefinition_of_js
                                                     x3655))))|])
      end
    module TaskScope =
      struct
        type t = vscode_TaskScope
        let rec t_of_js : Ojs.t -> t =
          fun (x3658 : Ojs.t) -> vscode_TaskScope_of_js x3658
        and t_to_js : t -> Ojs.t =
          fun (x3657 : vscode_TaskScope) -> vscode_TaskScope_to_js x3657
      end
    module RunOptions =
      struct
        type t = vscode_RunOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3660 : Ojs.t) -> vscode_RunOptions_of_js x3660
        and t_to_js : t -> Ojs.t =
          fun (x3659 : vscode_RunOptions) -> vscode_RunOptions_to_js x3659
        let (get_reevaluateOnRerun : t -> bool) =
          fun (x3661 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3661) "reevaluateOnRerun")
        let (set_reevaluateOnRerun : t -> bool -> unit) =
          fun (x3662 : t) ->
            fun (x3663 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3662) "reevaluateOnRerun"
                (Ojs.bool_to_js x3663)
      end
    module Task =
      struct
        type t = vscode_Task
        let rec t_of_js : Ojs.t -> t =
          fun (x3665 : Ojs.t) -> vscode_Task_of_js x3665
        and t_to_js : t -> Ojs.t =
          fun (x3664 : vscode_Task) -> vscode_Task_to_js x3664
        let (create :
          taskDefinition:vscode_TaskDefinition ->
            scope:((vscode_TaskScope_Global, vscode_TaskScope_Workspace,
                     vscode_WorkspaceFolder) union3,
              [ `Global  | `Workspace ]) or_enum ->
              name:string ->
                source:string ->
                  ?execution:(vscode_CustomExecution,
                    vscode_ProcessExecution, vscode_ShellExecution) union3 ->
                    ?problemMatchers:string list or_string -> unit -> t)
          =
          fun ~taskDefinition:(x3666 : vscode_TaskDefinition) ->
            fun
              ~scope:(x3667 :
                       ((vscode_TaskScope_Global, vscode_TaskScope_Workspace,
                          vscode_WorkspaceFolder) union3,
                         [ `Global  | `Workspace ]) or_enum)
              ->
              fun ~name:(x3668 : string) ->
                fun ~source:(x3669 : string) ->
                  fun
                    ?execution:(x3670 :
                                 (vscode_CustomExecution,
                                   vscode_ProcessExecution,
                                   vscode_ShellExecution) union3 option)
                    ->
                    fun
                      ?problemMatchers:(x3671 : string list or_string option)
                      ->
                      fun () ->
                        t_of_js
                          (Ojs.new_obj_arr
                             (Ojs.get_prop_ascii
                                (Ojs.get_prop_ascii Ojs.global "vscode")
                                "Task")
                             (let x3672 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x3672 "push"
                                   [|(vscode_TaskDefinition_to_js x3666)|]);
                              ignore
                                (Ojs.call x3672 "push"
                                   [|(or_enum_to_js
                                        (fun
                                           (x3680 :
                                             (vscode_TaskScope_Global,
                                               vscode_TaskScope_Workspace,
                                               vscode_WorkspaceFolder) union3)
                                           ->
                                           union3_to_js
                                             vscode_TaskScope_Global_to_js
                                             vscode_TaskScope_Workspace_to_js
                                             vscode_WorkspaceFolder_to_js
                                             x3680)
                                        (fun
                                           (x3684 :
                                             [ `Global  | `Workspace ])
                                           ->
                                           match x3684 with
                                           | `Global ->
                                               Ojs.string_to_js "Global"
                                           | `Workspace ->
                                               Ojs.string_to_js "Workspace")
                                        x3667)|]);
                              ignore
                                (Ojs.call x3672 "push"
                                   [|(Ojs.string_to_js x3668)|]);
                              ignore
                                (Ojs.call x3672 "push"
                                   [|(Ojs.string_to_js x3669)|]);
                              (match x3670 with
                               | Some x3676 ->
                                   ignore
                                     (Ojs.call x3672 "push"
                                        [|(union3_to_js
                                             vscode_CustomExecution_to_js
                                             vscode_ProcessExecution_to_js
                                             vscode_ShellExecution_to_js
                                             x3676)|])
                               | None -> ());
                              (match x3671 with
                               | Some x3673 ->
                                   ignore
                                     (Ojs.call x3672 "push"
                                        [|(or_string_to_js
                                             (fun (x3674 : string list) ->
                                                Ojs.list_to_js
                                                  Ojs.string_to_js x3674)
                                             x3673)|])
                               | None -> ());
                              x3672))
        let (create' :
          taskDefinition:vscode_TaskDefinition ->
            name:string ->
              source:string ->
                ?execution:(vscode_ProcessExecution, vscode_ShellExecution)
                  union2 ->
                  ?problemMatchers:string list or_string -> unit -> t)
          =
          fun ~taskDefinition:(x3685 : vscode_TaskDefinition) ->
            fun ~name:(x3686 : string) ->
              fun ~source:(x3687 : string) ->
                fun
                  ?execution:(x3688 :
                               (vscode_ProcessExecution,
                                 vscode_ShellExecution) union2 option)
                  ->
                  fun ?problemMatchers:(x3689 : string list or_string option)
                    ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode") "Task")
                           (let x3690 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x3690 "push"
                                 [|(vscode_TaskDefinition_to_js x3685)|]);
                            ignore
                              (Ojs.call x3690 "push"
                                 [|(Ojs.string_to_js x3686)|]);
                            ignore
                              (Ojs.call x3690 "push"
                                 [|(Ojs.string_to_js x3687)|]);
                            (match x3688 with
                             | Some x3694 ->
                                 ignore
                                   (Ojs.call x3690 "push"
                                      [|(union2_to_js
                                           vscode_ProcessExecution_to_js
                                           vscode_ShellExecution_to_js x3694)|])
                             | None -> ());
                            (match x3689 with
                             | Some x3691 ->
                                 ignore
                                   (Ojs.call x3690 "push"
                                      [|(or_string_to_js
                                           (fun (x3692 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x3692) x3691)|])
                             | None -> ());
                            x3690))
        let (get_definition : t -> vscode_TaskDefinition) =
          fun (x3697 : t) ->
            vscode_TaskDefinition_of_js
              (Ojs.get_prop_ascii (t_to_js x3697) "definition")
        let (set_definition : t -> vscode_TaskDefinition -> unit) =
          fun (x3698 : t) ->
            fun (x3699 : vscode_TaskDefinition) ->
              Ojs.set_prop_ascii (t_to_js x3698) "definition"
                (vscode_TaskDefinition_to_js x3699)
        let (get_scope :
          t ->
            ((vscode_TaskScope_Global, vscode_TaskScope_Workspace,
               vscode_WorkspaceFolder) union3,
              [ `Global  | `Workspace ]) or_enum)
          =
          fun (x3700 : t) ->
            or_enum_of_js
              (fun (x3701 : Ojs.t) ->
                 union3_of_js vscode_TaskScope_Global_of_js
                   vscode_TaskScope_Workspace_of_js
                   vscode_WorkspaceFolder_of_js x3701)
              (fun (x3705 : Ojs.t) ->
                 let x3706 = x3705 in
                 match Ojs.int_of_js x3706 with
                 | 1 -> `Global
                 | 2 -> `Workspace
                 | _ -> assert false)
              (Ojs.get_prop_ascii (t_to_js x3700) "scope")
        let (get_name : t -> string) =
          fun (x3707 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3707) "name")
        let (set_name : t -> string -> unit) =
          fun (x3708 : t) ->
            fun (x3709 : string) ->
              Ojs.set_prop_ascii (t_to_js x3708) "name"
                (Ojs.string_to_js x3709)
        let (get_detail : t -> string) =
          fun (x3710 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3710) "detail")
        let (set_detail : t -> string -> unit) =
          fun (x3711 : t) ->
            fun (x3712 : string) ->
              Ojs.set_prop_ascii (t_to_js x3711) "detail"
                (Ojs.string_to_js x3712)
        let (get_execution :
          t ->
            (vscode_CustomExecution, vscode_ProcessExecution,
              vscode_ShellExecution) union3)
          =
          fun (x3713 : t) ->
            union3_of_js vscode_CustomExecution_of_js
              vscode_ProcessExecution_of_js vscode_ShellExecution_of_js
              (Ojs.get_prop_ascii (t_to_js x3713) "execution")
        let (set_execution :
          t ->
            (vscode_CustomExecution, vscode_ProcessExecution,
              vscode_ShellExecution) union3 -> unit)
          =
          fun (x3717 : t) ->
            fun
              (x3718 :
                (vscode_CustomExecution, vscode_ProcessExecution,
                  vscode_ShellExecution) union3)
              ->
              Ojs.set_prop_ascii (t_to_js x3717) "execution"
                (union3_to_js vscode_CustomExecution_to_js
                   vscode_ProcessExecution_to_js vscode_ShellExecution_to_js
                   x3718)
        let (get_isBackground : t -> bool) =
          fun (x3722 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3722) "isBackground")
        let (set_isBackground : t -> bool -> unit) =
          fun (x3723 : t) ->
            fun (x3724 : bool) ->
              Ojs.set_prop_ascii (t_to_js x3723) "isBackground"
                (Ojs.bool_to_js x3724)
        let (get_source : t -> string) =
          fun (x3725 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3725) "source")
        let (set_source : t -> string -> unit) =
          fun (x3726 : t) ->
            fun (x3727 : string) ->
              Ojs.set_prop_ascii (t_to_js x3726) "source"
                (Ojs.string_to_js x3727)
        let (get_group : t -> vscode_TaskGroup) =
          fun (x3728 : t) ->
            vscode_TaskGroup_of_js
              (Ojs.get_prop_ascii (t_to_js x3728) "group")
        let (set_group : t -> vscode_TaskGroup -> unit) =
          fun (x3729 : t) ->
            fun (x3730 : vscode_TaskGroup) ->
              Ojs.set_prop_ascii (t_to_js x3729) "group"
                (vscode_TaskGroup_to_js x3730)
        let (get_presentationOptions : t -> vscode_TaskPresentationOptions) =
          fun (x3731 : t) ->
            vscode_TaskPresentationOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x3731) "presentationOptions")
        let (set_presentationOptions :
          t -> vscode_TaskPresentationOptions -> unit) =
          fun (x3732 : t) ->
            fun (x3733 : vscode_TaskPresentationOptions) ->
              Ojs.set_prop_ascii (t_to_js x3732) "presentationOptions"
                (vscode_TaskPresentationOptions_to_js x3733)
        let (get_problemMatchers : t -> string list) =
          fun (x3734 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x3734) "problemMatchers")
        let (set_problemMatchers : t -> string list -> unit) =
          fun (x3736 : t) ->
            fun (x3737 : string list) ->
              Ojs.set_prop_ascii (t_to_js x3736) "problemMatchers"
                (Ojs.list_to_js Ojs.string_to_js x3737)
        let (get_runOptions : t -> vscode_RunOptions) =
          fun (x3739 : t) ->
            vscode_RunOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x3739) "runOptions")
        let (set_runOptions : t -> vscode_RunOptions -> unit) =
          fun (x3740 : t) ->
            fun (x3741 : vscode_RunOptions) ->
              Ojs.set_prop_ascii (t_to_js x3740) "runOptions"
                (vscode_RunOptions_to_js x3741)
      end
    module TaskProvider =
      struct
        type 'T t = 'T vscode_TaskProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x3744 : Ojs.t) -> vscode_TaskProvider_of_js __T_of_js x3744
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x3742 : __T vscode_TaskProvider) ->
              vscode_TaskProvider_to_js __T_to_js x3742
        let (provideTasks :
          'T t ->
            token:vscode_CancellationToken -> 'T list vscode_ProviderResult)
          =
          fun (x3747 : 'T t) ->
            fun ~token:(x3746 : vscode_CancellationToken) ->
              vscode_ProviderResult_of_js
                (fun (x3749 : Ojs.t) -> Ojs.list_of_js Obj.magic x3749)
                (Ojs.call (t_to_js Obj.magic x3747) "provideTasks"
                   [|(vscode_CancellationToken_to_js x3746)|])
        let (resolveTask :
          'T t ->
            task:'T ->
              token:vscode_CancellationToken -> 'T vscode_ProviderResult)
          =
          fun (x3753 : 'T t) ->
            fun ~task:(x3751 : 'T) ->
              fun ~token:(x3752 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js Obj.magic
                  (Ojs.call (t_to_js Obj.magic x3753) "resolveTask"
                     [|(Obj.magic x3751);(vscode_CancellationToken_to_js
                                            x3752)|])
      end
    module TaskExecution =
      struct
        type t = vscode_TaskExecution
        let rec t_of_js : Ojs.t -> t =
          fun (x3757 : Ojs.t) -> vscode_TaskExecution_of_js x3757
        and t_to_js : t -> Ojs.t =
          fun (x3756 : vscode_TaskExecution) ->
            vscode_TaskExecution_to_js x3756
        let (get_task : t -> vscode_Task) =
          fun (x3758 : t) ->
            vscode_Task_of_js (Ojs.get_prop_ascii (t_to_js x3758) "task")
        let (set_task : t -> vscode_Task -> unit) =
          fun (x3759 : t) ->
            fun (x3760 : vscode_Task) ->
              Ojs.set_prop_ascii (t_to_js x3759) "task"
                (vscode_Task_to_js x3760)
        let (terminate : t -> unit) =
          fun (x3761 : t) ->
            ignore (Ojs.call (t_to_js x3761) "terminate" [||])
      end
    module TaskStartEvent =
      struct
        type t = vscode_TaskStartEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3763 : Ojs.t) -> vscode_TaskStartEvent_of_js x3763
        and t_to_js : t -> Ojs.t =
          fun (x3762 : vscode_TaskStartEvent) ->
            vscode_TaskStartEvent_to_js x3762
        let (get_execution : t -> vscode_TaskExecution) =
          fun (x3764 : t) ->
            vscode_TaskExecution_of_js
              (Ojs.get_prop_ascii (t_to_js x3764) "execution")
      end
    module TaskEndEvent =
      struct
        type t = vscode_TaskEndEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3766 : Ojs.t) -> vscode_TaskEndEvent_of_js x3766
        and t_to_js : t -> Ojs.t =
          fun (x3765 : vscode_TaskEndEvent) ->
            vscode_TaskEndEvent_to_js x3765
        let (get_execution : t -> vscode_TaskExecution) =
          fun (x3767 : t) ->
            vscode_TaskExecution_of_js
              (Ojs.get_prop_ascii (t_to_js x3767) "execution")
      end
    module TaskProcessStartEvent =
      struct
        type t = vscode_TaskProcessStartEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3769 : Ojs.t) -> vscode_TaskProcessStartEvent_of_js x3769
        and t_to_js : t -> Ojs.t =
          fun (x3768 : vscode_TaskProcessStartEvent) ->
            vscode_TaskProcessStartEvent_to_js x3768
        let (get_execution : t -> vscode_TaskExecution) =
          fun (x3770 : t) ->
            vscode_TaskExecution_of_js
              (Ojs.get_prop_ascii (t_to_js x3770) "execution")
        let (get_processId : t -> float) =
          fun (x3771 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3771) "processId")
      end
    module TaskProcessEndEvent =
      struct
        type t = vscode_TaskProcessEndEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3773 : Ojs.t) -> vscode_TaskProcessEndEvent_of_js x3773
        and t_to_js : t -> Ojs.t =
          fun (x3772 : vscode_TaskProcessEndEvent) ->
            vscode_TaskProcessEndEvent_to_js x3772
        let (get_execution : t -> vscode_TaskExecution) =
          fun (x3774 : t) ->
            vscode_TaskExecution_of_js
              (Ojs.get_prop_ascii (t_to_js x3774) "execution")
        let (get_exitCode : t -> float or_undefined) =
          fun (x3775 : t) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x3775) "exitCode")
      end
    module TaskFilter =
      struct
        type t = vscode_TaskFilter
        let rec t_of_js : Ojs.t -> t =
          fun (x3778 : Ojs.t) -> vscode_TaskFilter_of_js x3778
        and t_to_js : t -> Ojs.t =
          fun (x3777 : vscode_TaskFilter) -> vscode_TaskFilter_to_js x3777
        let (get_version : t -> string) =
          fun (x3779 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3779) "version")
        let (set_version : t -> string -> unit) =
          fun (x3780 : t) ->
            fun (x3781 : string) ->
              Ojs.set_prop_ascii (t_to_js x3780) "version"
                (Ojs.string_to_js x3781)
        let (get_type : t -> string) =
          fun (x3782 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3782) "type")
        let (set_type : t -> string -> unit) =
          fun (x3783 : t) ->
            fun (x3784 : string) ->
              Ojs.set_prop_ascii (t_to_js x3783) "type"
                (Ojs.string_to_js x3784)
      end
    module Tasks =
      struct
        let (registerTaskProvider :
          type_:string ->
            provider:vscode_Task vscode_TaskProvider -> vscode_Disposable)
          =
          fun ~type_:(x3785 : string) ->
            fun ~provider:(x3786 : vscode_Task vscode_TaskProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "tasks")
                   "registerTaskProvider"
                   [|(Ojs.string_to_js x3785);(vscode_TaskProvider_to_js
                                                 vscode_Task_to_js x3786)|])
        let (fetchTasks :
          ?filter:vscode_TaskFilter -> unit -> vscode_Task list _Thenable) =
          fun ?filter:(x3788 : vscode_TaskFilter option) ->
            fun () ->
              _Thenable_of_js
                (fun (x3792 : Ojs.t) ->
                   Ojs.list_of_js vscode_Task_of_js x3792)
                (let x3791 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "tasks" in
                 Ojs.call (Ojs.get_prop_ascii x3791 "fetchTasks") "apply"
                   [|x3791;((let x3789 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3788 with
                              | Some x3790 ->
                                  ignore
                                    (Ojs.call x3789 "push"
                                       [|(vscode_TaskFilter_to_js x3790)|])
                              | None -> ());
                             x3789))|])
        let (executeTask :
          task:vscode_Task -> vscode_TaskExecution _Thenable) =
          fun ~task:(x3794 : vscode_Task) ->
            _Thenable_of_js vscode_TaskExecution_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "tasks") "executeTask" [|(vscode_Task_to_js x3794)|])
        let (taskExecutions : vscode_TaskExecution list) =
          Ojs.list_of_js vscode_TaskExecution_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "tasks") "taskExecutions")
        let (onDidStartTask : vscode_TaskStartEvent vscode_Event) =
          vscode_Event_of_js vscode_TaskStartEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "tasks") "onDidStartTask")
        let (onDidEndTask : vscode_TaskEndEvent vscode_Event) =
          vscode_Event_of_js vscode_TaskEndEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "tasks") "onDidEndTask")
        let (onDidStartTaskProcess :
          vscode_TaskProcessStartEvent vscode_Event) =
          vscode_Event_of_js vscode_TaskProcessStartEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "tasks") "onDidStartTaskProcess")
        let (onDidEndTaskProcess : vscode_TaskProcessEndEvent vscode_Event) =
          vscode_Event_of_js vscode_TaskProcessEndEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "tasks") "onDidEndTaskProcess")
      end
    module FileType =
      struct
        type t = vscode_FileType
        let rec t_of_js : Ojs.t -> t =
          fun (x3802 : Ojs.t) -> vscode_FileType_of_js x3802
        and t_to_js : t -> Ojs.t =
          fun (x3801 : vscode_FileType) -> vscode_FileType_to_js x3801
      end
    module FileStat =
      struct
        type t = vscode_FileStat
        let rec t_of_js : Ojs.t -> t =
          fun (x3804 : Ojs.t) -> vscode_FileStat_of_js x3804
        and t_to_js : t -> Ojs.t =
          fun (x3803 : vscode_FileStat) -> vscode_FileStat_to_js x3803
        let (get_type : t -> vscode_FileType) =
          fun (x3805 : t) ->
            vscode_FileType_of_js (Ojs.get_prop_ascii (t_to_js x3805) "type")
        let (set_type : t -> vscode_FileType -> unit) =
          fun (x3806 : t) ->
            fun (x3807 : vscode_FileType) ->
              Ojs.set_prop_ascii (t_to_js x3806) "type"
                (vscode_FileType_to_js x3807)
        let (get_ctime : t -> float) =
          fun (x3808 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3808) "ctime")
        let (set_ctime : t -> float -> unit) =
          fun (x3809 : t) ->
            fun (x3810 : float) ->
              Ojs.set_prop_ascii (t_to_js x3809) "ctime"
                (Ojs.float_to_js x3810)
        let (get_mtime : t -> float) =
          fun (x3811 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3811) "mtime")
        let (set_mtime : t -> float -> unit) =
          fun (x3812 : t) ->
            fun (x3813 : float) ->
              Ojs.set_prop_ascii (t_to_js x3812) "mtime"
                (Ojs.float_to_js x3813)
        let (get_size : t -> float) =
          fun (x3814 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3814) "size")
        let (set_size : t -> float -> unit) =
          fun (x3815 : t) ->
            fun (x3816 : float) ->
              Ojs.set_prop_ascii (t_to_js x3815) "size"
                (Ojs.float_to_js x3816)
      end
    module FileSystemError =
      struct
        type t = vscode_FileSystemError
        let rec t_of_js : Ojs.t -> t =
          fun (x3818 : Ojs.t) -> vscode_FileSystemError_of_js x3818
        and t_to_js : t -> Ojs.t =
          fun (x3817 : vscode_FileSystemError) ->
            vscode_FileSystemError_to_js x3817
        let (fileNotFound : ?messageOrUri:vscode_Uri or_string -> unit -> t)
          =
          fun ?messageOrUri:(x3819 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (let x3823 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode")
                     "FileSystemError" in
                 Ojs.call (Ojs.get_prop_ascii x3823 "FileNotFound") "apply"
                   [|x3823;((let x3820 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3819 with
                              | Some x3821 ->
                                  ignore
                                    (Ojs.call x3820 "push"
                                       [|(or_string_to_js vscode_Uri_to_js
                                            x3821)|])
                              | None -> ());
                             x3820))|])
        let (fileExists : ?messageOrUri:vscode_Uri or_string -> unit -> t) =
          fun ?messageOrUri:(x3824 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (let x3828 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode")
                     "FileSystemError" in
                 Ojs.call (Ojs.get_prop_ascii x3828 "FileExists") "apply"
                   [|x3828;((let x3825 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3824 with
                              | Some x3826 ->
                                  ignore
                                    (Ojs.call x3825 "push"
                                       [|(or_string_to_js vscode_Uri_to_js
                                            x3826)|])
                              | None -> ());
                             x3825))|])
        let (fileNotADirectory :
          ?messageOrUri:vscode_Uri or_string -> unit -> t) =
          fun ?messageOrUri:(x3829 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (let x3833 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode")
                     "FileSystemError" in
                 Ojs.call (Ojs.get_prop_ascii x3833 "FileNotADirectory")
                   "apply"
                   [|x3833;((let x3830 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3829 with
                              | Some x3831 ->
                                  ignore
                                    (Ojs.call x3830 "push"
                                       [|(or_string_to_js vscode_Uri_to_js
                                            x3831)|])
                              | None -> ());
                             x3830))|])
        let (fileIsADirectory :
          ?messageOrUri:vscode_Uri or_string -> unit -> t) =
          fun ?messageOrUri:(x3834 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (let x3838 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode")
                     "FileSystemError" in
                 Ojs.call (Ojs.get_prop_ascii x3838 "FileIsADirectory")
                   "apply"
                   [|x3838;((let x3835 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3834 with
                              | Some x3836 ->
                                  ignore
                                    (Ojs.call x3835 "push"
                                       [|(or_string_to_js vscode_Uri_to_js
                                            x3836)|])
                              | None -> ());
                             x3835))|])
        let (noPermissions : ?messageOrUri:vscode_Uri or_string -> unit -> t)
          =
          fun ?messageOrUri:(x3839 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (let x3843 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode")
                     "FileSystemError" in
                 Ojs.call (Ojs.get_prop_ascii x3843 "NoPermissions") "apply"
                   [|x3843;((let x3840 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3839 with
                              | Some x3841 ->
                                  ignore
                                    (Ojs.call x3840 "push"
                                       [|(or_string_to_js vscode_Uri_to_js
                                            x3841)|])
                              | None -> ());
                             x3840))|])
        let (unavailable : ?messageOrUri:vscode_Uri or_string -> unit -> t) =
          fun ?messageOrUri:(x3844 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (let x3848 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode")
                     "FileSystemError" in
                 Ojs.call (Ojs.get_prop_ascii x3848 "Unavailable") "apply"
                   [|x3848;((let x3845 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3844 with
                              | Some x3846 ->
                                  ignore
                                    (Ojs.call x3845 "push"
                                       [|(or_string_to_js vscode_Uri_to_js
                                            x3846)|])
                              | None -> ());
                             x3845))|])
        let (create : ?messageOrUri:vscode_Uri or_string -> unit -> t) =
          fun ?messageOrUri:(x3849 : vscode_Uri or_string option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode")
                      "FileSystemError")
                   (let x3850 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x3849 with
                     | Some x3851 ->
                         ignore
                           (Ojs.call x3850 "push"
                              [|(or_string_to_js vscode_Uri_to_js x3851)|])
                     | None -> ());
                    x3850))
        let (get_code : t -> string) =
          fun (x3853 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3853) "code")
        let (cast : t -> Error.t) =
          fun (x3854 : t) -> Error.t_of_js (t_to_js x3854)
      end
    module FileChangeType =
      struct
        type t = vscode_FileChangeType
        let rec t_of_js : Ojs.t -> t =
          fun (x3856 : Ojs.t) -> vscode_FileChangeType_of_js x3856
        and t_to_js : t -> Ojs.t =
          fun (x3855 : vscode_FileChangeType) ->
            vscode_FileChangeType_to_js x3855
      end
    module FileChangeEvent =
      struct
        type t = vscode_FileChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x3858 : Ojs.t) -> vscode_FileChangeEvent_of_js x3858
        and t_to_js : t -> Ojs.t =
          fun (x3857 : vscode_FileChangeEvent) ->
            vscode_FileChangeEvent_to_js x3857
        let (get_type : t -> vscode_FileChangeType) =
          fun (x3859 : t) ->
            vscode_FileChangeType_of_js
              (Ojs.get_prop_ascii (t_to_js x3859) "type")
        let (get_uri : t -> vscode_Uri) =
          fun (x3860 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x3860) "uri")
      end
    module FileSystemProvider =
      struct
        type t = vscode_FileSystemProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x3862 : Ojs.t) -> vscode_FileSystemProvider_of_js x3862
        and t_to_js : t -> Ojs.t =
          fun (x3861 : vscode_FileSystemProvider) ->
            vscode_FileSystemProvider_to_js x3861
        let (get_onDidChangeFile :
          t -> vscode_FileChangeEvent list vscode_Event) =
          fun (x3863 : t) ->
            vscode_Event_of_js
              (fun (x3864 : Ojs.t) ->
                 Ojs.list_of_js vscode_FileChangeEvent_of_js x3864)
              (Ojs.get_prop_ascii (t_to_js x3863) "onDidChangeFile")
        let (watch :
          t ->
            uri:vscode_Uri ->
              options:anonymous_interface_26 -> vscode_Disposable)
          =
          fun (x3868 : t) ->
            fun ~uri:(x3866 : vscode_Uri) ->
              fun ~options:(x3867 : anonymous_interface_26) ->
                vscode_Disposable_of_js
                  (Ojs.call (t_to_js x3868) "watch"
                     [|(vscode_Uri_to_js x3866);(anonymous_interface_26_to_js
                                                   x3867)|])
        let (stat :
          t ->
            uri:vscode_Uri ->
              (vscode_FileStat, vscode_FileStat _Thenable) union2)
          =
          fun (x3870 : t) ->
            fun ~uri:(x3869 : vscode_Uri) ->
              union2_of_js vscode_FileStat_of_js
                (fun (x3872 : Ojs.t) ->
                   _Thenable_of_js vscode_FileStat_of_js x3872)
                (Ojs.call (t_to_js x3870) "stat" [|(vscode_Uri_to_js x3869)|])
        let (readDirectory :
          t ->
            uri:vscode_Uri ->
              ((string * vscode_FileType) list _Thenable,
                (string * vscode_FileType)) or_array)
          =
          fun (x3875 : t) ->
            fun ~uri:(x3874 : vscode_Uri) ->
              or_array_of_js
                (fun (x3876 : Ojs.t) ->
                   _Thenable_of_js
                     (fun (x3877 : Ojs.t) ->
                        Ojs.list_of_js
                          (fun (x3878 : Ojs.t) ->
                             let x3879 = x3878 in
                             ((Ojs.string_of_js (Ojs.array_get x3879 0)),
                               (vscode_FileType_of_js (Ojs.array_get x3879 1))))
                          x3877) x3876)
                (fun (x3880 : Ojs.t) ->
                   let x3881 = x3880 in
                   ((Ojs.string_of_js (Ojs.array_get x3881 0)),
                     (vscode_FileType_of_js (Ojs.array_get x3881 1))))
                (Ojs.call (t_to_js x3875) "readDirectory"
                   [|(vscode_Uri_to_js x3874)|])
        let (createDirectory :
          t -> uri:vscode_Uri -> (unit, unit _Thenable) union2) =
          fun (x3883 : t) ->
            fun ~uri:(x3882 : vscode_Uri) ->
              union2_of_js Ojs.unit_of_js
                (fun (x3885 : Ojs.t) -> _Thenable_of_js Ojs.unit_of_js x3885)
                (Ojs.call (t_to_js x3883) "createDirectory"
                   [|(vscode_Uri_to_js x3882)|])
        let (readFile :
          t ->
            uri:vscode_Uri -> (Uint8Array.t, Uint8Array.t _Thenable) union2)
          =
          fun (x3888 : t) ->
            fun ~uri:(x3887 : vscode_Uri) ->
              union2_of_js Uint8Array.t_of_js
                (fun (x3890 : Ojs.t) ->
                   _Thenable_of_js Uint8Array.t_of_js x3890)
                (Ojs.call (t_to_js x3888) "readFile"
                   [|(vscode_Uri_to_js x3887)|])
        let (writeFile :
          t ->
            uri:vscode_Uri ->
              content:Uint8Array.t ->
                options:anonymous_interface_3 ->
                  (unit, unit _Thenable) union2)
          =
          fun (x3895 : t) ->
            fun ~uri:(x3892 : vscode_Uri) ->
              fun ~content:(x3893 : Uint8Array.t) ->
                fun ~options:(x3894 : anonymous_interface_3) ->
                  union2_of_js Ojs.unit_of_js
                    (fun (x3897 : Ojs.t) ->
                       _Thenable_of_js Ojs.unit_of_js x3897)
                    (Ojs.call (t_to_js x3895) "writeFile"
                       [|(vscode_Uri_to_js x3892);(Uint8Array.t_to_js x3893);(
                         anonymous_interface_3_to_js x3894)|])
        let (delete :
          t ->
            uri:vscode_Uri ->
              options:anonymous_interface_25 -> (unit, unit _Thenable) union2)
          =
          fun (x3901 : t) ->
            fun ~uri:(x3899 : vscode_Uri) ->
              fun ~options:(x3900 : anonymous_interface_25) ->
                union2_of_js Ojs.unit_of_js
                  (fun (x3903 : Ojs.t) ->
                     _Thenable_of_js Ojs.unit_of_js x3903)
                  (Ojs.call (t_to_js x3901) "delete"
                     [|(vscode_Uri_to_js x3899);(anonymous_interface_25_to_js
                                                   x3900)|])
        let (rename :
          t ->
            oldUri:vscode_Uri ->
              newUri:vscode_Uri ->
                options:anonymous_interface_21 ->
                  (unit, unit _Thenable) union2)
          =
          fun (x3908 : t) ->
            fun ~oldUri:(x3905 : vscode_Uri) ->
              fun ~newUri:(x3906 : vscode_Uri) ->
                fun ~options:(x3907 : anonymous_interface_21) ->
                  union2_of_js Ojs.unit_of_js
                    (fun (x3910 : Ojs.t) ->
                       _Thenable_of_js Ojs.unit_of_js x3910)
                    (Ojs.call (t_to_js x3908) "rename"
                       [|(vscode_Uri_to_js x3905);(vscode_Uri_to_js x3906);(
                         anonymous_interface_21_to_js x3907)|])
        let (copy :
          t ->
            source:vscode_Uri ->
              destination:vscode_Uri ->
                options:anonymous_interface_21 ->
                  (unit, unit _Thenable) union2)
          =
          fun (x3915 : t) ->
            fun ~source:(x3912 : vscode_Uri) ->
              fun ~destination:(x3913 : vscode_Uri) ->
                fun ~options:(x3914 : anonymous_interface_21) ->
                  union2_of_js Ojs.unit_of_js
                    (fun (x3917 : Ojs.t) ->
                       _Thenable_of_js Ojs.unit_of_js x3917)
                    (Ojs.call (t_to_js x3915) "copy"
                       [|(vscode_Uri_to_js x3912);(vscode_Uri_to_js x3913);(
                         anonymous_interface_21_to_js x3914)|])
      end
    module FileSystem =
      struct
        type t = vscode_FileSystem
        let rec t_of_js : Ojs.t -> t =
          fun (x3920 : Ojs.t) -> vscode_FileSystem_of_js x3920
        and t_to_js : t -> Ojs.t =
          fun (x3919 : vscode_FileSystem) -> vscode_FileSystem_to_js x3919
        let (stat : t -> uri:vscode_Uri -> vscode_FileStat _Thenable) =
          fun (x3922 : t) ->
            fun ~uri:(x3921 : vscode_Uri) ->
              _Thenable_of_js vscode_FileStat_of_js
                (Ojs.call (t_to_js x3922) "stat" [|(vscode_Uri_to_js x3921)|])
        let (readDirectory :
          t -> uri:vscode_Uri -> (string * vscode_FileType) list _Thenable) =
          fun (x3925 : t) ->
            fun ~uri:(x3924 : vscode_Uri) ->
              _Thenable_of_js
                (fun (x3926 : Ojs.t) ->
                   Ojs.list_of_js
                     (fun (x3927 : Ojs.t) ->
                        let x3928 = x3927 in
                        ((Ojs.string_of_js (Ojs.array_get x3928 0)),
                          (vscode_FileType_of_js (Ojs.array_get x3928 1))))
                     x3926)
                (Ojs.call (t_to_js x3925) "readDirectory"
                   [|(vscode_Uri_to_js x3924)|])
        let (createDirectory : t -> uri:vscode_Uri -> unit _Thenable) =
          fun (x3930 : t) ->
            fun ~uri:(x3929 : vscode_Uri) ->
              _Thenable_of_js Ojs.unit_of_js
                (Ojs.call (t_to_js x3930) "createDirectory"
                   [|(vscode_Uri_to_js x3929)|])
        let (readFile : t -> uri:vscode_Uri -> Uint8Array.t _Thenable) =
          fun (x3933 : t) ->
            fun ~uri:(x3932 : vscode_Uri) ->
              _Thenable_of_js Uint8Array.t_of_js
                (Ojs.call (t_to_js x3933) "readFile"
                   [|(vscode_Uri_to_js x3932)|])
        let (writeFile :
          t -> uri:vscode_Uri -> content:Uint8Array.t -> unit _Thenable) =
          fun (x3937 : t) ->
            fun ~uri:(x3935 : vscode_Uri) ->
              fun ~content:(x3936 : Uint8Array.t) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js x3937) "writeFile"
                     [|(vscode_Uri_to_js x3935);(Uint8Array.t_to_js x3936)|])
        let (delete :
          t ->
            uri:vscode_Uri ->
              ?options:anonymous_interface_28 -> unit -> unit _Thenable)
          =
          fun (x3943 : t) ->
            fun ~uri:(x3939 : vscode_Uri) ->
              fun ?options:(x3940 : anonymous_interface_28 option) ->
                fun () ->
                  _Thenable_of_js Ojs.unit_of_js
                    (let x3944 = t_to_js x3943 in
                     Ojs.call (Ojs.get_prop_ascii x3944 "delete") "apply"
                       [|x3944;((let x3941 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x3941 "push"
                                      [|(vscode_Uri_to_js x3939)|]);
                                 (match x3940 with
                                  | Some x3942 ->
                                      ignore
                                        (Ojs.call x3941 "push"
                                           [|(anonymous_interface_28_to_js
                                                x3942)|])
                                  | None -> ());
                                 x3941))|])
        let (rename :
          t ->
            source:vscode_Uri ->
              target:vscode_Uri ->
                ?options:anonymous_interface_21 -> unit -> unit _Thenable)
          =
          fun (x3951 : t) ->
            fun ~source:(x3946 : vscode_Uri) ->
              fun ~target:(x3947 : vscode_Uri) ->
                fun ?options:(x3948 : anonymous_interface_21 option) ->
                  fun () ->
                    _Thenable_of_js Ojs.unit_of_js
                      (let x3952 = t_to_js x3951 in
                       Ojs.call (Ojs.get_prop_ascii x3952 "rename") "apply"
                         [|x3952;((let x3949 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x3949 "push"
                                        [|(vscode_Uri_to_js x3946)|]);
                                   ignore
                                     (Ojs.call x3949 "push"
                                        [|(vscode_Uri_to_js x3947)|]);
                                   (match x3948 with
                                    | Some x3950 ->
                                        ignore
                                          (Ojs.call x3949 "push"
                                             [|(anonymous_interface_21_to_js
                                                  x3950)|])
                                    | None -> ());
                                   x3949))|])
        let (copy :
          t ->
            source:vscode_Uri ->
              target:vscode_Uri ->
                ?options:anonymous_interface_21 -> unit -> unit _Thenable)
          =
          fun (x3959 : t) ->
            fun ~source:(x3954 : vscode_Uri) ->
              fun ~target:(x3955 : vscode_Uri) ->
                fun ?options:(x3956 : anonymous_interface_21 option) ->
                  fun () ->
                    _Thenable_of_js Ojs.unit_of_js
                      (let x3960 = t_to_js x3959 in
                       Ojs.call (Ojs.get_prop_ascii x3960 "copy") "apply"
                         [|x3960;((let x3957 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x3957 "push"
                                        [|(vscode_Uri_to_js x3954)|]);
                                   ignore
                                     (Ojs.call x3957 "push"
                                        [|(vscode_Uri_to_js x3955)|]);
                                   (match x3956 with
                                    | Some x3958 ->
                                        ignore
                                          (Ojs.call x3957 "push"
                                             [|(anonymous_interface_21_to_js
                                                  x3958)|])
                                    | None -> ());
                                   x3957))|])
        let (isWritableFileSystem : t -> scheme:string -> bool or_undefined)
          =
          fun (x3963 : t) ->
            fun ~scheme:(x3962 : string) ->
              or_undefined_of_js Ojs.bool_of_js
                (Ojs.call (t_to_js x3963) "isWritableFileSystem"
                   [|(Ojs.string_to_js x3962)|])
      end
    module WebviewPortMapping =
      struct
        type t = vscode_WebviewPortMapping
        let rec t_of_js : Ojs.t -> t =
          fun (x3966 : Ojs.t) -> vscode_WebviewPortMapping_of_js x3966
        and t_to_js : t -> Ojs.t =
          fun (x3965 : vscode_WebviewPortMapping) ->
            vscode_WebviewPortMapping_to_js x3965
        let (get_webviewPort : t -> float) =
          fun (x3967 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x3967) "webviewPort")
        let (get_extensionHostPort : t -> float) =
          fun (x3968 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x3968) "extensionHostPort")
      end
    module WebviewOptions =
      struct
        type t = vscode_WebviewOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3970 : Ojs.t) -> vscode_WebviewOptions_of_js x3970
        and t_to_js : t -> Ojs.t =
          fun (x3969 : vscode_WebviewOptions) ->
            vscode_WebviewOptions_to_js x3969
        let (get_enableScripts : t -> bool) =
          fun (x3971 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3971) "enableScripts")
        let (get_enableCommandUris : t -> bool) =
          fun (x3972 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3972) "enableCommandUris")
        let (get_localResourceRoots : t -> vscode_Uri list) =
          fun (x3973 : t) ->
            Ojs.list_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x3973) "localResourceRoots")
        let (get_portMapping : t -> vscode_WebviewPortMapping list) =
          fun (x3975 : t) ->
            Ojs.list_of_js vscode_WebviewPortMapping_of_js
              (Ojs.get_prop_ascii (t_to_js x3975) "portMapping")
      end
    module Webview =
      struct
        type t = vscode_Webview
        let rec t_of_js : Ojs.t -> t =
          fun (x3978 : Ojs.t) -> vscode_Webview_of_js x3978
        and t_to_js : t -> Ojs.t =
          fun (x3977 : vscode_Webview) -> vscode_Webview_to_js x3977
        let (get_options : t -> vscode_WebviewOptions) =
          fun (x3979 : t) ->
            vscode_WebviewOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x3979) "options")
        let (set_options : t -> vscode_WebviewOptions -> unit) =
          fun (x3980 : t) ->
            fun (x3981 : vscode_WebviewOptions) ->
              Ojs.set_prop_ascii (t_to_js x3980) "options"
                (vscode_WebviewOptions_to_js x3981)
        let (get_html : t -> string) =
          fun (x3982 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3982) "html")
        let (set_html : t -> string -> unit) =
          fun (x3983 : t) ->
            fun (x3984 : string) ->
              Ojs.set_prop_ascii (t_to_js x3983) "html"
                (Ojs.string_to_js x3984)
        let (get_onDidReceiveMessage : t -> any vscode_Event) =
          fun (x3985 : t) ->
            vscode_Event_of_js any_of_js
              (Ojs.get_prop_ascii (t_to_js x3985) "onDidReceiveMessage")
        let (postMessage : t -> message:any -> bool _Thenable) =
          fun (x3988 : t) ->
            fun ~message:(x3987 : any) ->
              _Thenable_of_js Ojs.bool_of_js
                (Ojs.call (t_to_js x3988) "postMessage" [|(any_to_js x3987)|])
        let (asWebviewUri : t -> localResource:vscode_Uri -> vscode_Uri) =
          fun (x3991 : t) ->
            fun ~localResource:(x3990 : vscode_Uri) ->
              vscode_Uri_of_js
                (Ojs.call (t_to_js x3991) "asWebviewUri"
                   [|(vscode_Uri_to_js x3990)|])
        let (get_cspSource : t -> string) =
          fun (x3992 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3992) "cspSource")
      end
    module WebviewPanelOptions =
      struct
        type t = vscode_WebviewPanelOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x3994 : Ojs.t) -> vscode_WebviewPanelOptions_of_js x3994
        and t_to_js : t -> Ojs.t =
          fun (x3993 : vscode_WebviewPanelOptions) ->
            vscode_WebviewPanelOptions_to_js x3993
        let (get_enableFindWidget : t -> bool) =
          fun (x3995 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3995) "enableFindWidget")
        let (get_retainContextWhenHidden : t -> bool) =
          fun (x3996 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x3996) "retainContextWhenHidden")
      end
    module WebviewPanel =
      struct
        type t = vscode_WebviewPanel
        let rec t_of_js : Ojs.t -> t =
          fun (x3998 : Ojs.t) -> vscode_WebviewPanel_of_js x3998
        and t_to_js : t -> Ojs.t =
          fun (x3997 : vscode_WebviewPanel) ->
            vscode_WebviewPanel_to_js x3997
        let (get_viewType : t -> string) =
          fun (x3999 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x3999) "viewType")
        let (get_title : t -> string) =
          fun (x4000 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4000) "title")
        let (set_title : t -> string -> unit) =
          fun (x4001 : t) ->
            fun (x4002 : string) ->
              Ojs.set_prop_ascii (t_to_js x4001) "title"
                (Ojs.string_to_js x4002)
        let (get_iconPath : t -> (vscode_Uri, anonymous_interface_14) union2)
          =
          fun (x4003 : t) ->
            union2_of_js vscode_Uri_of_js anonymous_interface_14_of_js
              (Ojs.get_prop_ascii (t_to_js x4003) "iconPath")
        let (set_iconPath :
          t -> (vscode_Uri, anonymous_interface_14) union2 -> unit) =
          fun (x4006 : t) ->
            fun (x4007 : (vscode_Uri, anonymous_interface_14) union2) ->
              Ojs.set_prop_ascii (t_to_js x4006) "iconPath"
                (union2_to_js vscode_Uri_to_js anonymous_interface_14_to_js
                   x4007)
        let (get_webview : t -> vscode_Webview) =
          fun (x4010 : t) ->
            vscode_Webview_of_js
              (Ojs.get_prop_ascii (t_to_js x4010) "webview")
        let (get_options : t -> vscode_WebviewPanelOptions) =
          fun (x4011 : t) ->
            vscode_WebviewPanelOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x4011) "options")
        let (get_viewColumn : t -> vscode_ViewColumn) =
          fun (x4012 : t) ->
            vscode_ViewColumn_of_js
              (Ojs.get_prop_ascii (t_to_js x4012) "viewColumn")
        let (get_active : t -> bool) =
          fun (x4013 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4013) "active")
        let (get_visible : t -> bool) =
          fun (x4014 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4014) "visible")
        let (get_onDidChangeViewState :
          t -> vscode_WebviewPanelOnDidChangeViewStateEvent vscode_Event) =
          fun (x4015 : t) ->
            vscode_Event_of_js
              vscode_WebviewPanelOnDidChangeViewStateEvent_of_js
              (Ojs.get_prop_ascii (t_to_js x4015) "onDidChangeViewState")
        let (get_onDidDispose : t -> unit vscode_Event) =
          fun (x4017 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x4017) "onDidDispose")
        let (reveal :
          t ->
            ?viewColumn:vscode_ViewColumn ->
              ?preserveFocus:bool -> unit -> unit)
          =
          fun (x4024 : t) ->
            fun ?viewColumn:(x4019 : vscode_ViewColumn option) ->
              fun ?preserveFocus:(x4020 : bool option) ->
                fun () ->
                  ignore
                    (let x4025 = t_to_js x4024 in
                     Ojs.call (Ojs.get_prop_ascii x4025 "reveal") "apply"
                       [|x4025;((let x4021 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x4019 with
                                  | Some x4023 ->
                                      ignore
                                        (Ojs.call x4021 "push"
                                           [|(vscode_ViewColumn_to_js x4023)|])
                                  | None -> ());
                                 (match x4020 with
                                  | Some x4022 ->
                                      ignore
                                        (Ojs.call x4021 "push"
                                           [|(Ojs.bool_to_js x4022)|])
                                  | None -> ());
                                 x4021))|])
        let (dispose : t -> any) =
          fun (x4026 : t) ->
            any_of_js (Ojs.call (t_to_js x4026) "dispose" [||])
      end
    module WebviewPanelOnDidChangeViewStateEvent =
      struct
        type t = vscode_WebviewPanelOnDidChangeViewStateEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x4028 : Ojs.t) ->
            vscode_WebviewPanelOnDidChangeViewStateEvent_of_js x4028
        and t_to_js : t -> Ojs.t =
          fun (x4027 : vscode_WebviewPanelOnDidChangeViewStateEvent) ->
            vscode_WebviewPanelOnDidChangeViewStateEvent_to_js x4027
        let (get_webviewPanel : t -> vscode_WebviewPanel) =
          fun (x4029 : t) ->
            vscode_WebviewPanel_of_js
              (Ojs.get_prop_ascii (t_to_js x4029) "webviewPanel")
      end
    module WebviewPanelSerializer =
      struct
        type 'T t = 'T vscode_WebviewPanelSerializer
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4032 : Ojs.t) ->
              vscode_WebviewPanelSerializer_of_js __T_of_js x4032
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4030 : __T vscode_WebviewPanelSerializer) ->
              vscode_WebviewPanelSerializer_to_js __T_to_js x4030
        let (deserializeWebviewPanel :
          'T t ->
            webviewPanel:vscode_WebviewPanel -> state:'T -> unit _Thenable)
          =
          fun (x4036 : 'T t) ->
            fun ~webviewPanel:(x4034 : vscode_WebviewPanel) ->
              fun ~state:(x4035 : 'T) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js Obj.magic x4036)
                     "deserializeWebviewPanel"
                     [|(vscode_WebviewPanel_to_js x4034);(Obj.magic x4035)|])
      end
    module WebviewView =
      struct
        type t = vscode_WebviewView
        let rec t_of_js : Ojs.t -> t =
          fun (x4040 : Ojs.t) -> vscode_WebviewView_of_js x4040
        and t_to_js : t -> Ojs.t =
          fun (x4039 : vscode_WebviewView) -> vscode_WebviewView_to_js x4039
        let (get_viewType : t -> string) =
          fun (x4041 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4041) "viewType")
        let (get_webview : t -> vscode_Webview) =
          fun (x4042 : t) ->
            vscode_Webview_of_js
              (Ojs.get_prop_ascii (t_to_js x4042) "webview")
        let (get_title : t -> string) =
          fun (x4043 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4043) "title")
        let (set_title : t -> string -> unit) =
          fun (x4044 : t) ->
            fun (x4045 : string) ->
              Ojs.set_prop_ascii (t_to_js x4044) "title"
                (Ojs.string_to_js x4045)
        let (get_description : t -> string) =
          fun (x4046 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4046) "description")
        let (set_description : t -> string -> unit) =
          fun (x4047 : t) ->
            fun (x4048 : string) ->
              Ojs.set_prop_ascii (t_to_js x4047) "description"
                (Ojs.string_to_js x4048)
        let (get_onDidDispose : t -> unit vscode_Event) =
          fun (x4049 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x4049) "onDidDispose")
        let (get_visible : t -> bool) =
          fun (x4051 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4051) "visible")
        let (get_onDidChangeVisibility : t -> unit vscode_Event) =
          fun (x4052 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x4052) "onDidChangeVisibility")
        let (show : t -> ?preserveFocus:bool -> unit -> unit) =
          fun (x4057 : t) ->
            fun ?preserveFocus:(x4054 : bool option) ->
              fun () ->
                ignore
                  (let x4058 = t_to_js x4057 in
                   Ojs.call (Ojs.get_prop_ascii x4058 "show") "apply"
                     [|x4058;((let x4055 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4054 with
                                | Some x4056 ->
                                    ignore
                                      (Ojs.call x4055 "push"
                                         [|(Ojs.bool_to_js x4056)|])
                                | None -> ());
                               x4055))|])
      end
    module WebviewViewResolveContext =
      struct
        type 'T t = 'T vscode_WebviewViewResolveContext
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4061 : Ojs.t) ->
              vscode_WebviewViewResolveContext_of_js __T_of_js x4061
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4059 : __T vscode_WebviewViewResolveContext) ->
              vscode_WebviewViewResolveContext_to_js __T_to_js x4059
        let (get_state : 'T t -> 'T or_undefined) =
          fun (x4063 : 'T t) ->
            or_undefined_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4063) "state")
      end
    module WebviewViewProvider =
      struct
        type t = vscode_WebviewViewProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x4067 : Ojs.t) -> vscode_WebviewViewProvider_of_js x4067
        and t_to_js : t -> Ojs.t =
          fun (x4066 : vscode_WebviewViewProvider) ->
            vscode_WebviewViewProvider_to_js x4066
        let (resolveWebviewView :
          t ->
            webviewView:vscode_WebviewView ->
              context:unknown vscode_WebviewViewResolveContext ->
                token:vscode_CancellationToken ->
                  (unit, unit _Thenable) union2)
          =
          fun (x4072 : t) ->
            fun ~webviewView:(x4068 : vscode_WebviewView) ->
              fun ~context:(x4069 : unknown vscode_WebviewViewResolveContext)
                ->
                fun ~token:(x4071 : vscode_CancellationToken) ->
                  union2_of_js Ojs.unit_of_js
                    (fun (x4074 : Ojs.t) ->
                       _Thenable_of_js Ojs.unit_of_js x4074)
                    (Ojs.call (t_to_js x4072) "resolveWebviewView"
                       [|(vscode_WebviewView_to_js x4068);(vscode_WebviewViewResolveContext_to_js
                                                             unknown_to_js
                                                             x4069);(
                         vscode_CancellationToken_to_js x4071)|])
      end
    module CustomTextEditorProvider =
      struct
        type t = vscode_CustomTextEditorProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x4077 : Ojs.t) -> vscode_CustomTextEditorProvider_of_js x4077
        and t_to_js : t -> Ojs.t =
          fun (x4076 : vscode_CustomTextEditorProvider) ->
            vscode_CustomTextEditorProvider_to_js x4076
        let (resolveCustomTextEditor :
          t ->
            document:vscode_TextDocument ->
              webviewPanel:vscode_WebviewPanel ->
                token:vscode_CancellationToken ->
                  (unit, unit _Thenable) union2)
          =
          fun (x4081 : t) ->
            fun ~document:(x4078 : vscode_TextDocument) ->
              fun ~webviewPanel:(x4079 : vscode_WebviewPanel) ->
                fun ~token:(x4080 : vscode_CancellationToken) ->
                  union2_of_js Ojs.unit_of_js
                    (fun (x4083 : Ojs.t) ->
                       _Thenable_of_js Ojs.unit_of_js x4083)
                    (Ojs.call (t_to_js x4081) "resolveCustomTextEditor"
                       [|(vscode_TextDocument_to_js x4078);(vscode_WebviewPanel_to_js
                                                              x4079);(
                         vscode_CancellationToken_to_js x4080)|])
      end
    module CustomDocument =
      struct
        type t = vscode_CustomDocument
        let rec t_of_js : Ojs.t -> t =
          fun (x4086 : Ojs.t) -> vscode_CustomDocument_of_js x4086
        and t_to_js : t -> Ojs.t =
          fun (x4085 : vscode_CustomDocument) ->
            vscode_CustomDocument_to_js x4085
        let (get_uri : t -> vscode_Uri) =
          fun (x4087 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x4087) "uri")
        let (dispose : t -> unit) =
          fun (x4088 : t) -> ignore (Ojs.call (t_to_js x4088) "dispose" [||])
      end
    module CustomDocumentEditEvent =
      struct
        type 'T t = 'T vscode_CustomDocumentEditEvent
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4091 : Ojs.t) ->
              vscode_CustomDocumentEditEvent_of_js __T_of_js x4091
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4089 : __T vscode_CustomDocumentEditEvent) ->
              vscode_CustomDocumentEditEvent_to_js __T_to_js x4089
        let (get_document : 'T t -> 'T) =
          fun (x4093 : 'T t) ->
            Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4093) "document")
        let (undo : 'T t -> (unit, unit _Thenable) union2) =
          fun (x4095 : 'T t) ->
            union2_of_js Ojs.unit_of_js
              (fun (x4098 : Ojs.t) -> _Thenable_of_js Ojs.unit_of_js x4098)
              (Ojs.call (t_to_js Obj.magic x4095) "undo" [||])
        let (redo : 'T t -> (unit, unit _Thenable) union2) =
          fun (x4100 : 'T t) ->
            union2_of_js Ojs.unit_of_js
              (fun (x4103 : Ojs.t) -> _Thenable_of_js Ojs.unit_of_js x4103)
              (Ojs.call (t_to_js Obj.magic x4100) "redo" [||])
        let (get_label : 'T t -> string) =
          fun (x4105 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4105) "label")
      end
    module CustomDocumentContentChangeEvent =
      struct
        type 'T t = 'T vscode_CustomDocumentContentChangeEvent
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4109 : Ojs.t) ->
              vscode_CustomDocumentContentChangeEvent_of_js __T_of_js x4109
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4107 : __T vscode_CustomDocumentContentChangeEvent) ->
              vscode_CustomDocumentContentChangeEvent_to_js __T_to_js x4107
        let (get_document : 'T t -> 'T) =
          fun (x4111 : 'T t) ->
            Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4111) "document")
      end
    module CustomDocumentBackup =
      struct
        type t = vscode_CustomDocumentBackup
        let rec t_of_js : Ojs.t -> t =
          fun (x4114 : Ojs.t) -> vscode_CustomDocumentBackup_of_js x4114
        and t_to_js : t -> Ojs.t =
          fun (x4113 : vscode_CustomDocumentBackup) ->
            vscode_CustomDocumentBackup_to_js x4113
        let (get_id : t -> string) =
          fun (x4115 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4115) "id")
        let (delete : t -> unit) =
          fun (x4116 : t) -> ignore (Ojs.call (t_to_js x4116) "delete" [||])
      end
    module CustomDocumentBackupContext =
      struct
        type t = vscode_CustomDocumentBackupContext
        let rec t_of_js : Ojs.t -> t =
          fun (x4118 : Ojs.t) ->
            vscode_CustomDocumentBackupContext_of_js x4118
        and t_to_js : t -> Ojs.t =
          fun (x4117 : vscode_CustomDocumentBackupContext) ->
            vscode_CustomDocumentBackupContext_to_js x4117
        let (get_destination : t -> vscode_Uri) =
          fun (x4119 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x4119) "destination")
      end
    module CustomDocumentOpenContext =
      struct
        type t = vscode_CustomDocumentOpenContext
        let rec t_of_js : Ojs.t -> t =
          fun (x4121 : Ojs.t) -> vscode_CustomDocumentOpenContext_of_js x4121
        and t_to_js : t -> Ojs.t =
          fun (x4120 : vscode_CustomDocumentOpenContext) ->
            vscode_CustomDocumentOpenContext_to_js x4120
        let (get_backupId : t -> string) =
          fun (x4122 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4122) "backupId")
        let (get_untitledDocumentData : t -> Uint8Array.t) =
          fun (x4123 : t) ->
            Uint8Array.t_of_js
              (Ojs.get_prop_ascii (t_to_js x4123) "untitledDocumentData")
      end
    module CustomReadonlyEditorProvider =
      struct
        type 'T t = 'T vscode_CustomReadonlyEditorProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4126 : Ojs.t) ->
              vscode_CustomReadonlyEditorProvider_of_js __T_of_js x4126
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4124 : __T vscode_CustomReadonlyEditorProvider) ->
              vscode_CustomReadonlyEditorProvider_to_js __T_to_js x4124
        let (openCustomDocument :
          'T t ->
            uri:vscode_Uri ->
              openContext:vscode_CustomDocumentOpenContext ->
                token:vscode_CancellationToken -> ('T, 'T _Thenable) union2)
          =
          fun (x4131 : 'T t) ->
            fun ~uri:(x4128 : vscode_Uri) ->
              fun ~openContext:(x4129 : vscode_CustomDocumentOpenContext) ->
                fun ~token:(x4130 : vscode_CancellationToken) ->
                  union2_of_js Obj.magic
                    (fun (x4134 : Ojs.t) -> _Thenable_of_js Obj.magic x4134)
                    (Ojs.call (t_to_js Obj.magic x4131) "openCustomDocument"
                       [|(vscode_Uri_to_js x4128);(vscode_CustomDocumentOpenContext_to_js
                                                     x4129);(vscode_CancellationToken_to_js
                                                               x4130)|])
        let (resolveCustomEditor :
          'T t ->
            document:'T ->
              webviewPanel:vscode_WebviewPanel ->
                token:vscode_CancellationToken ->
                  (unit, unit _Thenable) union2)
          =
          fun (x4139 : 'T t) ->
            fun ~document:(x4136 : 'T) ->
              fun ~webviewPanel:(x4137 : vscode_WebviewPanel) ->
                fun ~token:(x4138 : vscode_CancellationToken) ->
                  union2_of_js Ojs.unit_of_js
                    (fun (x4142 : Ojs.t) ->
                       _Thenable_of_js Ojs.unit_of_js x4142)
                    (Ojs.call (t_to_js Obj.magic x4139) "resolveCustomEditor"
                       [|(Obj.magic x4136);(vscode_WebviewPanel_to_js x4137);(
                         vscode_CancellationToken_to_js x4138)|])
      end
    module CustomEditorProvider =
      struct
        type 'T t = 'T vscode_CustomEditorProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4146 : Ojs.t) ->
              vscode_CustomEditorProvider_of_js __T_of_js x4146
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4144 : __T vscode_CustomEditorProvider) ->
              vscode_CustomEditorProvider_to_js __T_to_js x4144
        let (get_onDidChangeCustomDocument :
          'T t ->
            ('T vscode_CustomDocumentContentChangeEvent vscode_Event,
              'T vscode_CustomDocumentEditEvent vscode_Event) union2)
          =
          fun (x4148 : 'T t) ->
            union2_of_js
              (fun (x4150 : Ojs.t) ->
                 vscode_Event_of_js
                   (fun (x4151 : Ojs.t) ->
                      vscode_CustomDocumentContentChangeEvent_of_js Obj.magic
                        x4151) x4150)
              (fun (x4153 : Ojs.t) ->
                 vscode_Event_of_js
                   (fun (x4154 : Ojs.t) ->
                      vscode_CustomDocumentEditEvent_of_js Obj.magic x4154)
                   x4153)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4148)
                 "onDidChangeCustomDocument")
        let (saveCustomDocument :
          'T t ->
            document:'T ->
              cancellation:vscode_CancellationToken -> unit _Thenable)
          =
          fun (x4158 : 'T t) ->
            fun ~document:(x4156 : 'T) ->
              fun ~cancellation:(x4157 : vscode_CancellationToken) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js Obj.magic x4158) "saveCustomDocument"
                     [|(Obj.magic x4156);(vscode_CancellationToken_to_js
                                            x4157)|])
        let (saveCustomDocumentAs :
          'T t ->
            document:'T ->
              destination:vscode_Uri ->
                cancellation:vscode_CancellationToken -> unit _Thenable)
          =
          fun (x4164 : 'T t) ->
            fun ~document:(x4161 : 'T) ->
              fun ~destination:(x4162 : vscode_Uri) ->
                fun ~cancellation:(x4163 : vscode_CancellationToken) ->
                  _Thenable_of_js Ojs.unit_of_js
                    (Ojs.call (t_to_js Obj.magic x4164)
                       "saveCustomDocumentAs"
                       [|(Obj.magic x4161);(vscode_Uri_to_js x4162);(
                         vscode_CancellationToken_to_js x4163)|])
        let (revertCustomDocument :
          'T t ->
            document:'T ->
              cancellation:vscode_CancellationToken -> unit _Thenable)
          =
          fun (x4169 : 'T t) ->
            fun ~document:(x4167 : 'T) ->
              fun ~cancellation:(x4168 : vscode_CancellationToken) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js Obj.magic x4169) "revertCustomDocument"
                     [|(Obj.magic x4167);(vscode_CancellationToken_to_js
                                            x4168)|])
        let (backupCustomDocument :
          'T t ->
            document:'T ->
              context:vscode_CustomDocumentBackupContext ->
                cancellation:vscode_CancellationToken ->
                  vscode_CustomDocumentBackup _Thenable)
          =
          fun (x4175 : 'T t) ->
            fun ~document:(x4172 : 'T) ->
              fun ~context:(x4173 : vscode_CustomDocumentBackupContext) ->
                fun ~cancellation:(x4174 : vscode_CancellationToken) ->
                  _Thenable_of_js vscode_CustomDocumentBackup_of_js
                    (Ojs.call (t_to_js Obj.magic x4175)
                       "backupCustomDocument"
                       [|(Obj.magic x4172);(vscode_CustomDocumentBackupContext_to_js
                                              x4173);(vscode_CancellationToken_to_js
                                                        x4174)|])
        let (cast : 'T t -> 'T vscode_CustomReadonlyEditorProvider) =
          fun (x4178 : 'T t) ->
            vscode_CustomReadonlyEditorProvider_of_js Obj.magic
              (t_to_js Obj.magic x4178)
      end
    module Clipboard =
      struct
        type t = vscode_Clipboard
        let rec t_of_js : Ojs.t -> t =
          fun (x4182 : Ojs.t) -> vscode_Clipboard_of_js x4182
        and t_to_js : t -> Ojs.t =
          fun (x4181 : vscode_Clipboard) -> vscode_Clipboard_to_js x4181
        let (readText : t -> string _Thenable) =
          fun (x4183 : t) ->
            _Thenable_of_js Ojs.string_of_js
              (Ojs.call (t_to_js x4183) "readText" [||])
        let (writeText : t -> value:string -> unit _Thenable) =
          fun (x4186 : t) ->
            fun ~value:(x4185 : string) ->
              _Thenable_of_js Ojs.unit_of_js
                (Ojs.call (t_to_js x4186) "writeText"
                   [|(Ojs.string_to_js x4185)|])
      end
    module UIKind =
      struct
        type t = vscode_UIKind
        let rec t_of_js : Ojs.t -> t =
          fun (x4189 : Ojs.t) -> vscode_UIKind_of_js x4189
        and t_to_js : t -> Ojs.t =
          fun (x4188 : vscode_UIKind) -> vscode_UIKind_to_js x4188
      end
    module Env =
      struct
        let (appName : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "appName")
        let (appRoot : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "appRoot")
        let (uriScheme : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "uriScheme")
        let (language : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "language")
        let (clipboard : vscode_Clipboard) =
          vscode_Clipboard_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "clipboard")
        let (machineId : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "machineId")
        let (sessionId : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "sessionId")
        let (isNewAppInstall : bool) =
          Ojs.bool_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "isNewAppInstall")
        let (isTelemetryEnabled : bool) =
          Ojs.bool_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "isTelemetryEnabled")
        let (onDidChangeTelemetryEnabled : bool vscode_Event) =
          vscode_Event_of_js Ojs.bool_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "onDidChangeTelemetryEnabled")
        let (remoteName : string or_undefined) =
          or_undefined_of_js Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "remoteName")
        let (shell : string) =
          Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "shell")
        let (uiKind : vscode_UIKind) =
          vscode_UIKind_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "env") "uiKind")
        let (openExternal : target:vscode_Uri -> bool _Thenable) =
          fun ~target:(x4192 : vscode_Uri) ->
            _Thenable_of_js Ojs.bool_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "env") "openExternal" [|(vscode_Uri_to_js x4192)|])
        let (asExternalUri : target:vscode_Uri -> vscode_Uri _Thenable) =
          fun ~target:(x4194 : vscode_Uri) ->
            _Thenable_of_js vscode_Uri_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "env") "asExternalUri" [|(vscode_Uri_to_js x4194)|])
      end
    module Commands =
      struct
        let (registerCommand :
          command:string ->
            callback:(args:any list -> any) ->
              ?thisArg:any -> unit -> vscode_Disposable)
          =
          fun ~command:(x4196 : string) ->
            fun ~callback:(x4197 : args:any list -> any) ->
              fun ?thisArg:(x4198 : any option) ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x4203 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "commands" in
                     Ojs.call (Ojs.get_prop_ascii x4203 "registerCommand")
                       "apply"
                       [|x4203;((let x4199 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4199 "push"
                                      [|(Ojs.string_to_js x4196)|]);
                                 ignore
                                   (Ojs.call x4199 "push"
                                      [|(Ojs.fun_to_js_args
                                           (fun (x4201 : _) ->
                                              any_to_js
                                                (x4197
                                                   ~args:(Ojs.list_of_js_from
                                                            any_of_js x4201 0))))|]);
                                 (match x4198 with
                                  | Some x4200 ->
                                      ignore
                                        (Ojs.call x4199 "push"
                                           [|(any_to_js x4200)|])
                                  | None -> ());
                                 x4199))|])
        let (registerTextEditorCommand :
          command:string ->
            callback:(textEditor:vscode_TextEditor ->
                        edit:vscode_TextEditorEdit -> args:any list -> unit)
              -> ?thisArg:any -> unit -> vscode_Disposable)
          =
          fun ~command:(x4204 : string) ->
            fun
              ~callback:(x4205 :
                          textEditor:vscode_TextEditor ->
                            edit:vscode_TextEditorEdit ->
                              args:any list -> unit)
              ->
              fun ?thisArg:(x4206 : any option) ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x4211 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "commands" in
                     Ojs.call
                       (Ojs.get_prop_ascii x4211 "registerTextEditorCommand")
                       "apply"
                       [|x4211;((let x4207 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4207 "push"
                                      [|(Ojs.string_to_js x4204)|]);
                                 ignore
                                   (Ojs.call x4207 "push"
                                      [|(Ojs.fun_to_js_args
                                           (fun (x4209 : _) ->
                                              x4205
                                                ~textEditor:(vscode_TextEditor_of_js
                                                               (Ojs.array_get
                                                                  x4209 0))
                                                ~edit:(vscode_TextEditorEdit_of_js
                                                         (Ojs.array_get x4209
                                                            1))
                                                ~args:(Ojs.list_of_js_from
                                                         any_of_js x4209 2)))|]);
                                 (match x4206 with
                                  | Some x4208 ->
                                      ignore
                                        (Ojs.call x4207 "push"
                                           [|(any_to_js x4208)|])
                                  | None -> ());
                                 x4207))|])
        let (executeCommand :
          command:string -> rest:any list -> 'T or_undefined _Thenable) =
          fun ~command:(x4212 : string) ->
            fun ~rest:(x4213 : any list) ->
              _Thenable_of_js
                (fun (x4217 : Ojs.t) -> or_undefined_of_js Obj.magic x4217)
                (let x4216 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "commands" in
                 Ojs.call (Ojs.get_prop_ascii x4216 "executeCommand") "apply"
                   [|x4216;((let x4214 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4214 "push"
                                  [|(Ojs.string_to_js x4212)|]);
                             List.iter
                               (fun (x4215 : any) ->
                                  ignore
                                    (Ojs.call x4214 "push"
                                       [|(any_to_js x4215)|])) x4213;
                             x4214))|])
        let (getCommands :
          ?filterInternal:bool -> unit -> string list _Thenable) =
          fun ?filterInternal:(x4219 : bool option) ->
            fun () ->
              _Thenable_of_js
                (fun (x4223 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x4223)
                (let x4222 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "commands" in
                 Ojs.call (Ojs.get_prop_ascii x4222 "getCommands") "apply"
                   [|x4222;((let x4220 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4219 with
                              | Some x4221 ->
                                  ignore
                                    (Ojs.call x4220 "push"
                                       [|(Ojs.bool_to_js x4221)|])
                              | None -> ());
                             x4220))|])
      end
    module WindowState =
      struct
        type t = vscode_WindowState
        let rec t_of_js : Ojs.t -> t =
          fun (x4226 : Ojs.t) -> vscode_WindowState_of_js x4226
        and t_to_js : t -> Ojs.t =
          fun (x4225 : vscode_WindowState) -> vscode_WindowState_to_js x4225
        let (get_focused : t -> bool) =
          fun (x4227 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4227) "focused")
      end
    module UriHandler =
      struct
        type t = vscode_UriHandler
        let rec t_of_js : Ojs.t -> t =
          fun (x4229 : Ojs.t) -> vscode_UriHandler_of_js x4229
        and t_to_js : t -> Ojs.t =
          fun (x4228 : vscode_UriHandler) -> vscode_UriHandler_to_js x4228
        let (handleUri : t -> uri:vscode_Uri -> unit vscode_ProviderResult) =
          fun (x4231 : t) ->
            fun ~uri:(x4230 : vscode_Uri) ->
              vscode_ProviderResult_of_js Ojs.unit_of_js
                (Ojs.call (t_to_js x4231) "handleUri"
                   [|(vscode_Uri_to_js x4230)|])
      end
    module Window =
      struct
        let (activeTextEditor : vscode_TextEditor or_undefined) =
          or_undefined_of_js vscode_TextEditor_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "activeTextEditor")
        let (visibleTextEditors : vscode_TextEditor list) =
          Ojs.list_of_js vscode_TextEditor_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "visibleTextEditors")
        let (onDidChangeActiveTextEditor :
          vscode_TextEditor or_undefined vscode_Event) =
          vscode_Event_of_js
            (fun (x4235 : Ojs.t) ->
               or_undefined_of_js vscode_TextEditor_of_js x4235)
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeActiveTextEditor")
        let (onDidChangeVisibleTextEditors :
          vscode_TextEditor list vscode_Event) =
          vscode_Event_of_js
            (fun (x4237 : Ojs.t) ->
               Ojs.list_of_js vscode_TextEditor_of_js x4237)
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeVisibleTextEditors")
        let (onDidChangeTextEditorSelection :
          vscode_TextEditorSelectionChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_TextEditorSelectionChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeTextEditorSelection")
        let (onDidChangeTextEditorVisibleRanges :
          vscode_TextEditorVisibleRangesChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_TextEditorVisibleRangesChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeTextEditorVisibleRanges")
        let (onDidChangeTextEditorOptions :
          vscode_TextEditorOptionsChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_TextEditorOptionsChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeTextEditorOptions")
        let (onDidChangeTextEditorViewColumn :
          vscode_TextEditorViewColumnChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_TextEditorViewColumnChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeTextEditorViewColumn")
        let (terminals : vscode_Terminal list) =
          Ojs.list_of_js vscode_Terminal_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "terminals")
        let (activeTerminal : vscode_Terminal or_undefined) =
          or_undefined_of_js vscode_Terminal_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "activeTerminal")
        let (onDidChangeActiveTerminal :
          vscode_Terminal or_undefined vscode_Event) =
          vscode_Event_of_js
            (fun (x4245 : Ojs.t) ->
               or_undefined_of_js vscode_Terminal_of_js x4245)
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeActiveTerminal")
        let (onDidOpenTerminal : vscode_Terminal vscode_Event) =
          vscode_Event_of_js vscode_Terminal_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidOpenTerminal")
        let (onDidCloseTerminal : vscode_Terminal vscode_Event) =
          vscode_Event_of_js vscode_Terminal_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidCloseTerminal")
        let (state : vscode_WindowState) =
          vscode_WindowState_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "state")
        let (onDidChangeWindowState : vscode_WindowState vscode_Event) =
          vscode_Event_of_js vscode_WindowState_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeWindowState")
        let (showTextDocument :
          document:vscode_TextDocument ->
            ?column:vscode_ViewColumn ->
              ?preserveFocus:bool -> unit -> vscode_TextEditor _Thenable)
          =
          fun ~document:(x4250 : vscode_TextDocument) ->
            fun ?column:(x4251 : vscode_ViewColumn option) ->
              fun ?preserveFocus:(x4252 : bool option) ->
                fun () ->
                  _Thenable_of_js vscode_TextEditor_of_js
                    (let x4256 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call (Ojs.get_prop_ascii x4256 "showTextDocument")
                       "apply"
                       [|x4256;((let x4253 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4253 "push"
                                      [|(vscode_TextDocument_to_js x4250)|]);
                                 (match x4251 with
                                  | Some x4255 ->
                                      ignore
                                        (Ojs.call x4253 "push"
                                           [|(vscode_ViewColumn_to_js x4255)|])
                                  | None -> ());
                                 (match x4252 with
                                  | Some x4254 ->
                                      ignore
                                        (Ojs.call x4253 "push"
                                           [|(Ojs.bool_to_js x4254)|])
                                  | None -> ());
                                 x4253))|])
        let (showTextDocument :
          document:vscode_TextDocument ->
            ?options:vscode_TextDocumentShowOptions ->
              unit -> vscode_TextEditor _Thenable)
          =
          fun ~document:(x4258 : vscode_TextDocument) ->
            fun ?options:(x4259 : vscode_TextDocumentShowOptions option) ->
              fun () ->
                _Thenable_of_js vscode_TextEditor_of_js
                  (let x4262 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4262 "showTextDocument")
                     "apply"
                     [|x4262;((let x4260 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4260 "push"
                                    [|(vscode_TextDocument_to_js x4258)|]);
                               (match x4259 with
                                | Some x4261 ->
                                    ignore
                                      (Ojs.call x4260 "push"
                                         [|(vscode_TextDocumentShowOptions_to_js
                                              x4261)|])
                                | None -> ());
                               x4260))|])
        let (showTextDocument :
          uri:vscode_Uri ->
            ?options:vscode_TextDocumentShowOptions ->
              unit -> vscode_TextEditor _Thenable)
          =
          fun ~uri:(x4264 : vscode_Uri) ->
            fun ?options:(x4265 : vscode_TextDocumentShowOptions option) ->
              fun () ->
                _Thenable_of_js vscode_TextEditor_of_js
                  (let x4268 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4268 "showTextDocument")
                     "apply"
                     [|x4268;((let x4266 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4266 "push"
                                    [|(vscode_Uri_to_js x4264)|]);
                               (match x4265 with
                                | Some x4267 ->
                                    ignore
                                      (Ojs.call x4266 "push"
                                         [|(vscode_TextDocumentShowOptions_to_js
                                              x4267)|])
                                | None -> ());
                               x4266))|])
        let (createTextEditorDecorationType :
          options:vscode_DecorationRenderOptions ->
            vscode_TextEditorDecorationType)
          =
          fun ~options:(x4270 : vscode_DecorationRenderOptions) ->
            vscode_TextEditorDecorationType_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "createTextEditorDecorationType"
                 [|(vscode_DecorationRenderOptions_to_js x4270)|])
        let (showInformationMessage :
          message:string ->
            items:string list -> string or_undefined _Thenable)
          =
          fun ~message:(x4271 : string) ->
            fun ~items:(x4272 : string list) ->
              _Thenable_of_js
                (fun (x4276 : Ojs.t) ->
                   or_undefined_of_js Ojs.string_of_js x4276)
                (let x4275 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4275 "showInformationMessage")
                   "apply"
                   [|x4275;((let x4273 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4273 "push"
                                  [|(Ojs.string_to_js x4271)|]);
                             List.iter
                               (fun (x4274 : string) ->
                                  ignore
                                    (Ojs.call x4273 "push"
                                       [|(Ojs.string_to_js x4274)|])) x4272;
                             x4273))|])
        let (showInformationMessage :
          message:string ->
            options:vscode_MessageOptions ->
              items:string list -> string or_undefined _Thenable)
          =
          fun ~message:(x4278 : string) ->
            fun ~options:(x4279 : vscode_MessageOptions) ->
              fun ~items:(x4280 : string list) ->
                _Thenable_of_js
                  (fun (x4284 : Ojs.t) ->
                     or_undefined_of_js Ojs.string_of_js x4284)
                  (let x4283 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call
                     (Ojs.get_prop_ascii x4283 "showInformationMessage")
                     "apply"
                     [|x4283;((let x4281 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4281 "push"
                                    [|(Ojs.string_to_js x4278)|]);
                               ignore
                                 (Ojs.call x4281 "push"
                                    [|(vscode_MessageOptions_to_js x4279)|]);
                               List.iter
                                 (fun (x4282 : string) ->
                                    ignore
                                      (Ojs.call x4281 "push"
                                         [|(Ojs.string_to_js x4282)|])) x4280;
                               x4281))|])
        let (showInformationMessage :
          message:string -> items:'T list -> 'T or_undefined _Thenable) =
          fun ~message:(x4286 : string) ->
            fun ~items:(x4287 : 'T list) ->
              _Thenable_of_js
                (fun (x4291 : Ojs.t) -> or_undefined_of_js Obj.magic x4291)
                (let x4290 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4290 "showInformationMessage")
                   "apply"
                   [|x4290;((let x4288 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4288 "push"
                                  [|(Ojs.string_to_js x4286)|]);
                             List.iter
                               (fun (x4289 : 'T) ->
                                  ignore
                                    (Ojs.call x4288 "push"
                                       [|(Obj.magic x4289)|])) x4287;
                             x4288))|])
        let (showInformationMessage :
          message:string ->
            options:vscode_MessageOptions ->
              items:'T list -> 'T or_undefined _Thenable)
          =
          fun ~message:(x4293 : string) ->
            fun ~options:(x4294 : vscode_MessageOptions) ->
              fun ~items:(x4295 : 'T list) ->
                _Thenable_of_js
                  (fun (x4299 : Ojs.t) -> or_undefined_of_js Obj.magic x4299)
                  (let x4298 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call
                     (Ojs.get_prop_ascii x4298 "showInformationMessage")
                     "apply"
                     [|x4298;((let x4296 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4296 "push"
                                    [|(Ojs.string_to_js x4293)|]);
                               ignore
                                 (Ojs.call x4296 "push"
                                    [|(vscode_MessageOptions_to_js x4294)|]);
                               List.iter
                                 (fun (x4297 : 'T) ->
                                    ignore
                                      (Ojs.call x4296 "push"
                                         [|(Obj.magic x4297)|])) x4295;
                               x4296))|])
        let (showWarningMessage :
          message:string ->
            items:string list -> string or_undefined _Thenable)
          =
          fun ~message:(x4301 : string) ->
            fun ~items:(x4302 : string list) ->
              _Thenable_of_js
                (fun (x4306 : Ojs.t) ->
                   or_undefined_of_js Ojs.string_of_js x4306)
                (let x4305 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4305 "showWarningMessage")
                   "apply"
                   [|x4305;((let x4303 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4303 "push"
                                  [|(Ojs.string_to_js x4301)|]);
                             List.iter
                               (fun (x4304 : string) ->
                                  ignore
                                    (Ojs.call x4303 "push"
                                       [|(Ojs.string_to_js x4304)|])) x4302;
                             x4303))|])
        let (showWarningMessage :
          message:string ->
            options:vscode_MessageOptions ->
              items:string list -> string or_undefined _Thenable)
          =
          fun ~message:(x4308 : string) ->
            fun ~options:(x4309 : vscode_MessageOptions) ->
              fun ~items:(x4310 : string list) ->
                _Thenable_of_js
                  (fun (x4314 : Ojs.t) ->
                     or_undefined_of_js Ojs.string_of_js x4314)
                  (let x4313 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4313 "showWarningMessage")
                     "apply"
                     [|x4313;((let x4311 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4311 "push"
                                    [|(Ojs.string_to_js x4308)|]);
                               ignore
                                 (Ojs.call x4311 "push"
                                    [|(vscode_MessageOptions_to_js x4309)|]);
                               List.iter
                                 (fun (x4312 : string) ->
                                    ignore
                                      (Ojs.call x4311 "push"
                                         [|(Ojs.string_to_js x4312)|])) x4310;
                               x4311))|])
        let (showWarningMessage :
          message:string -> items:'T list -> 'T or_undefined _Thenable) =
          fun ~message:(x4316 : string) ->
            fun ~items:(x4317 : 'T list) ->
              _Thenable_of_js
                (fun (x4321 : Ojs.t) -> or_undefined_of_js Obj.magic x4321)
                (let x4320 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4320 "showWarningMessage")
                   "apply"
                   [|x4320;((let x4318 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4318 "push"
                                  [|(Ojs.string_to_js x4316)|]);
                             List.iter
                               (fun (x4319 : 'T) ->
                                  ignore
                                    (Ojs.call x4318 "push"
                                       [|(Obj.magic x4319)|])) x4317;
                             x4318))|])
        let (showWarningMessage :
          message:string ->
            options:vscode_MessageOptions ->
              items:'T list -> 'T or_undefined _Thenable)
          =
          fun ~message:(x4323 : string) ->
            fun ~options:(x4324 : vscode_MessageOptions) ->
              fun ~items:(x4325 : 'T list) ->
                _Thenable_of_js
                  (fun (x4329 : Ojs.t) -> or_undefined_of_js Obj.magic x4329)
                  (let x4328 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4328 "showWarningMessage")
                     "apply"
                     [|x4328;((let x4326 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4326 "push"
                                    [|(Ojs.string_to_js x4323)|]);
                               ignore
                                 (Ojs.call x4326 "push"
                                    [|(vscode_MessageOptions_to_js x4324)|]);
                               List.iter
                                 (fun (x4327 : 'T) ->
                                    ignore
                                      (Ojs.call x4326 "push"
                                         [|(Obj.magic x4327)|])) x4325;
                               x4326))|])
        let (showErrorMessage :
          message:string ->
            items:string list -> string or_undefined _Thenable)
          =
          fun ~message:(x4331 : string) ->
            fun ~items:(x4332 : string list) ->
              _Thenable_of_js
                (fun (x4336 : Ojs.t) ->
                   or_undefined_of_js Ojs.string_of_js x4336)
                (let x4335 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4335 "showErrorMessage")
                   "apply"
                   [|x4335;((let x4333 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4333 "push"
                                  [|(Ojs.string_to_js x4331)|]);
                             List.iter
                               (fun (x4334 : string) ->
                                  ignore
                                    (Ojs.call x4333 "push"
                                       [|(Ojs.string_to_js x4334)|])) x4332;
                             x4333))|])
        let (showErrorMessage :
          message:string ->
            options:vscode_MessageOptions ->
              items:string list -> string or_undefined _Thenable)
          =
          fun ~message:(x4338 : string) ->
            fun ~options:(x4339 : vscode_MessageOptions) ->
              fun ~items:(x4340 : string list) ->
                _Thenable_of_js
                  (fun (x4344 : Ojs.t) ->
                     or_undefined_of_js Ojs.string_of_js x4344)
                  (let x4343 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4343 "showErrorMessage")
                     "apply"
                     [|x4343;((let x4341 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4341 "push"
                                    [|(Ojs.string_to_js x4338)|]);
                               ignore
                                 (Ojs.call x4341 "push"
                                    [|(vscode_MessageOptions_to_js x4339)|]);
                               List.iter
                                 (fun (x4342 : string) ->
                                    ignore
                                      (Ojs.call x4341 "push"
                                         [|(Ojs.string_to_js x4342)|])) x4340;
                               x4341))|])
        let (showErrorMessage :
          message:string -> items:'T list -> 'T or_undefined _Thenable) =
          fun ~message:(x4346 : string) ->
            fun ~items:(x4347 : 'T list) ->
              _Thenable_of_js
                (fun (x4351 : Ojs.t) -> or_undefined_of_js Obj.magic x4351)
                (let x4350 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4350 "showErrorMessage")
                   "apply"
                   [|x4350;((let x4348 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4348 "push"
                                  [|(Ojs.string_to_js x4346)|]);
                             List.iter
                               (fun (x4349 : 'T) ->
                                  ignore
                                    (Ojs.call x4348 "push"
                                       [|(Obj.magic x4349)|])) x4347;
                             x4348))|])
        let (showErrorMessage :
          message:string ->
            options:vscode_MessageOptions ->
              items:'T list -> 'T or_undefined _Thenable)
          =
          fun ~message:(x4353 : string) ->
            fun ~options:(x4354 : vscode_MessageOptions) ->
              fun ~items:(x4355 : 'T list) ->
                _Thenable_of_js
                  (fun (x4359 : Ojs.t) -> or_undefined_of_js Obj.magic x4359)
                  (let x4358 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4358 "showErrorMessage")
                     "apply"
                     [|x4358;((let x4356 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4356 "push"
                                    [|(Ojs.string_to_js x4353)|]);
                               ignore
                                 (Ojs.call x4356 "push"
                                    [|(vscode_MessageOptions_to_js x4354)|]);
                               List.iter
                                 (fun (x4357 : 'T) ->
                                    ignore
                                      (Ojs.call x4356 "push"
                                         [|(Obj.magic x4357)|])) x4355;
                               x4356))|])
        let (showQuickPick :
          items:(string list _Thenable, string) or_array ->
            options:(vscode_QuickPickOptions, anonymous_interface_2)
              intersection2 ->
              ?token:vscode_CancellationToken ->
                unit -> string list or_undefined _Thenable)
          =
          fun ~items:(x4361 : (string list _Thenable, string) or_array) ->
            fun
              ~options:(x4362 :
                         (vscode_QuickPickOptions, anonymous_interface_2)
                           intersection2)
              ->
              fun ?token:(x4363 : vscode_CancellationToken option) ->
                fun () ->
                  _Thenable_of_js
                    (fun (x4373 : Ojs.t) ->
                       or_undefined_of_js
                         (fun (x4374 : Ojs.t) ->
                            Ojs.list_of_js Ojs.string_of_js x4374) x4373)
                    (let x4372 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call (Ojs.get_prop_ascii x4372 "showQuickPick")
                       "apply"
                       [|x4372;((let x4364 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4364 "push"
                                      [|(or_array_to_js
                                           (fun
                                              (x4368 : string list _Thenable)
                                              ->
                                              _Thenable_to_js
                                                (fun (x4369 : string list) ->
                                                   Ojs.list_to_js
                                                     Ojs.string_to_js x4369)
                                                x4368) Ojs.string_to_js x4361)|]);
                                 ignore
                                   (Ojs.call x4364 "push"
                                      [|(intersection2_to_js
                                           vscode_QuickPickOptions_to_js
                                           anonymous_interface_2_to_js x4362)|]);
                                 (match x4363 with
                                  | Some x4365 ->
                                      ignore
                                        (Ojs.call x4364 "push"
                                           [|(vscode_CancellationToken_to_js
                                                x4365)|])
                                  | None -> ());
                                 x4364))|])
        let (showQuickPick :
          items:(string list _Thenable, string) or_array ->
            ?options:vscode_QuickPickOptions ->
              ?token:vscode_CancellationToken ->
                unit -> string or_undefined _Thenable)
          =
          fun ~items:(x4376 : (string list _Thenable, string) or_array) ->
            fun ?options:(x4377 : vscode_QuickPickOptions option) ->
              fun ?token:(x4378 : vscode_CancellationToken option) ->
                fun () ->
                  _Thenable_of_js
                    (fun (x4387 : Ojs.t) ->
                       or_undefined_of_js Ojs.string_of_js x4387)
                    (let x4386 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call (Ojs.get_prop_ascii x4386 "showQuickPick")
                       "apply"
                       [|x4386;((let x4379 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4379 "push"
                                      [|(or_array_to_js
                                           (fun
                                              (x4382 : string list _Thenable)
                                              ->
                                              _Thenable_to_js
                                                (fun (x4383 : string list) ->
                                                   Ojs.list_to_js
                                                     Ojs.string_to_js x4383)
                                                x4382) Ojs.string_to_js x4376)|]);
                                 (match x4377 with
                                  | Some x4381 ->
                                      ignore
                                        (Ojs.call x4379 "push"
                                           [|(vscode_QuickPickOptions_to_js
                                                x4381)|])
                                  | None -> ());
                                 (match x4378 with
                                  | Some x4380 ->
                                      ignore
                                        (Ojs.call x4379 "push"
                                           [|(vscode_CancellationToken_to_js
                                                x4380)|])
                                  | None -> ());
                                 x4379))|])
        let (showQuickPick :
          items:('T list _Thenable, 'T) or_array ->
            options:(vscode_QuickPickOptions, anonymous_interface_2)
              intersection2 ->
              ?token:vscode_CancellationToken ->
                unit -> 'T list or_undefined _Thenable)
          =
          fun ~items:(x4389 : ('T list _Thenable, 'T) or_array) ->
            fun
              ~options:(x4390 :
                         (vscode_QuickPickOptions, anonymous_interface_2)
                           intersection2)
              ->
              fun ?token:(x4391 : vscode_CancellationToken option) ->
                fun () ->
                  _Thenable_of_js
                    (fun (x4401 : Ojs.t) ->
                       or_undefined_of_js
                         (fun (x4402 : Ojs.t) ->
                            Ojs.list_of_js Obj.magic x4402) x4401)
                    (let x4400 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call (Ojs.get_prop_ascii x4400 "showQuickPick")
                       "apply"
                       [|x4400;((let x4392 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4392 "push"
                                      [|(or_array_to_js
                                           (fun (x4396 : 'T list _Thenable)
                                              ->
                                              _Thenable_to_js
                                                (fun (x4397 : 'T list) ->
                                                   Ojs.list_to_js Obj.magic
                                                     x4397) x4396) Obj.magic
                                           x4389)|]);
                                 ignore
                                   (Ojs.call x4392 "push"
                                      [|(intersection2_to_js
                                           vscode_QuickPickOptions_to_js
                                           anonymous_interface_2_to_js x4390)|]);
                                 (match x4391 with
                                  | Some x4393 ->
                                      ignore
                                        (Ojs.call x4392 "push"
                                           [|(vscode_CancellationToken_to_js
                                                x4393)|])
                                  | None -> ());
                                 x4392))|])
        let (showQuickPick :
          items:('T list _Thenable, 'T) or_array ->
            ?options:vscode_QuickPickOptions ->
              ?token:vscode_CancellationToken ->
                unit -> 'T or_undefined _Thenable)
          =
          fun ~items:(x4404 : ('T list _Thenable, 'T) or_array) ->
            fun ?options:(x4405 : vscode_QuickPickOptions option) ->
              fun ?token:(x4406 : vscode_CancellationToken option) ->
                fun () ->
                  _Thenable_of_js
                    (fun (x4415 : Ojs.t) ->
                       or_undefined_of_js Obj.magic x4415)
                    (let x4414 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call (Ojs.get_prop_ascii x4414 "showQuickPick")
                       "apply"
                       [|x4414;((let x4407 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4407 "push"
                                      [|(or_array_to_js
                                           (fun (x4410 : 'T list _Thenable)
                                              ->
                                              _Thenable_to_js
                                                (fun (x4411 : 'T list) ->
                                                   Ojs.list_to_js Obj.magic
                                                     x4411) x4410) Obj.magic
                                           x4404)|]);
                                 (match x4405 with
                                  | Some x4409 ->
                                      ignore
                                        (Ojs.call x4407 "push"
                                           [|(vscode_QuickPickOptions_to_js
                                                x4409)|])
                                  | None -> ());
                                 (match x4406 with
                                  | Some x4408 ->
                                      ignore
                                        (Ojs.call x4407 "push"
                                           [|(vscode_CancellationToken_to_js
                                                x4408)|])
                                  | None -> ());
                                 x4407))|])
        let (showWorkspaceFolderPick :
          ?options:vscode_WorkspaceFolderPickOptions ->
            unit -> vscode_WorkspaceFolder or_undefined _Thenable)
          =
          fun ?options:(x4417 : vscode_WorkspaceFolderPickOptions option) ->
            fun () ->
              _Thenable_of_js
                (fun (x4421 : Ojs.t) ->
                   or_undefined_of_js vscode_WorkspaceFolder_of_js x4421)
                (let x4420 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call
                   (Ojs.get_prop_ascii x4420 "showWorkspaceFolderPick")
                   "apply"
                   [|x4420;((let x4418 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4417 with
                              | Some x4419 ->
                                  ignore
                                    (Ojs.call x4418 "push"
                                       [|(vscode_WorkspaceFolderPickOptions_to_js
                                            x4419)|])
                              | None -> ());
                             x4418))|])
        let (showOpenDialog :
          ?options:vscode_OpenDialogOptions ->
            unit -> vscode_Uri list or_undefined _Thenable)
          =
          fun ?options:(x4423 : vscode_OpenDialogOptions option) ->
            fun () ->
              _Thenable_of_js
                (fun (x4427 : Ojs.t) ->
                   or_undefined_of_js
                     (fun (x4428 : Ojs.t) ->
                        Ojs.list_of_js vscode_Uri_of_js x4428) x4427)
                (let x4426 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4426 "showOpenDialog") "apply"
                   [|x4426;((let x4424 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4423 with
                              | Some x4425 ->
                                  ignore
                                    (Ojs.call x4424 "push"
                                       [|(vscode_OpenDialogOptions_to_js
                                            x4425)|])
                              | None -> ());
                             x4424))|])
        let (showSaveDialog :
          ?options:vscode_SaveDialogOptions ->
            unit -> vscode_Uri or_undefined _Thenable)
          =
          fun ?options:(x4430 : vscode_SaveDialogOptions option) ->
            fun () ->
              _Thenable_of_js
                (fun (x4434 : Ojs.t) ->
                   or_undefined_of_js vscode_Uri_of_js x4434)
                (let x4433 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                 Ojs.call (Ojs.get_prop_ascii x4433 "showSaveDialog") "apply"
                   [|x4433;((let x4431 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4430 with
                              | Some x4432 ->
                                  ignore
                                    (Ojs.call x4431 "push"
                                       [|(vscode_SaveDialogOptions_to_js
                                            x4432)|])
                              | None -> ());
                             x4431))|])
        let (showInputBox :
          ?options:vscode_InputBoxOptions ->
            ?token:vscode_CancellationToken ->
              unit -> string or_undefined _Thenable)
          =
          fun ?options:(x4436 : vscode_InputBoxOptions option) ->
            fun ?token:(x4437 : vscode_CancellationToken option) ->
              fun () ->
                _Thenable_of_js
                  (fun (x4442 : Ojs.t) ->
                     or_undefined_of_js Ojs.string_of_js x4442)
                  (let x4441 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4441 "showInputBox") "apply"
                     [|x4441;((let x4438 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4436 with
                                | Some x4440 ->
                                    ignore
                                      (Ojs.call x4438 "push"
                                         [|(vscode_InputBoxOptions_to_js
                                              x4440)|])
                                | None -> ());
                               (match x4437 with
                                | Some x4439 ->
                                    ignore
                                      (Ojs.call x4438 "push"
                                         [|(vscode_CancellationToken_to_js
                                              x4439)|])
                                | None -> ());
                               x4438))|])
        let (createQuickPick : unit -> 'T vscode_QuickPick) =
          fun () ->
            vscode_QuickPick_of_js Obj.magic
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "createQuickPick" [||])
        let (createInputBox : unit -> vscode_InputBox) =
          fun () ->
            vscode_InputBox_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "createInputBox" [||])
        let (createOutputChannel : name:string -> vscode_OutputChannel) =
          fun ~name:(x4445 : string) ->
            vscode_OutputChannel_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "createOutputChannel"
                 [|(Ojs.string_to_js x4445)|])
        let (createWebviewPanel :
          viewType:string ->
            title:string ->
              showOptions:((vscode_ViewColumn, anonymous_interface_38) union2,
                [ `Active  | `Beside  | `Eight  | `Five  | `Four  | `Nine 
                | `One  | `Seven  | `Six  | `Three  | `Two ]) or_enum ->
                ?options:(vscode_WebviewPanelOptions, vscode_WebviewOptions)
                  intersection2 -> unit -> vscode_WebviewPanel)
          =
          fun ~viewType:(x4446 : string) ->
            fun ~title:(x4447 : string) ->
              fun
                ~showOptions:(x4448 :
                               ((vscode_ViewColumn, anonymous_interface_38)
                                  union2,
                                 [ `Active  | `Beside  | `Eight  | `Five 
                                 | `Four  | `Nine  | `One  | `Seven  | 
                                   `Six 
                                 | `Three  | `Two ]) or_enum)
                ->
                fun
                  ?options:(x4449 :
                             (vscode_WebviewPanelOptions,
                               vscode_WebviewOptions) intersection2 option)
                  ->
                  fun () ->
                    vscode_WebviewPanel_of_js
                      (let x4458 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                       Ojs.call
                         (Ojs.get_prop_ascii x4458 "createWebviewPanel")
                         "apply"
                         [|x4458;((let x4450 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x4450 "push"
                                        [|(Ojs.string_to_js x4446)|]);
                                   ignore
                                     (Ojs.call x4450 "push"
                                        [|(Ojs.string_to_js x4447)|]);
                                   ignore
                                     (Ojs.call x4450 "push"
                                        [|(or_enum_to_js
                                             (fun
                                                (x4454 :
                                                  (vscode_ViewColumn,
                                                    anonymous_interface_38)
                                                    union2)
                                                ->
                                                union2_to_js
                                                  vscode_ViewColumn_to_js
                                                  anonymous_interface_38_to_js
                                                  x4454)
                                             (fun
                                                (x4457 :
                                                  [ `Active  | `Beside 
                                                  | `Eight  | `Five  | 
                                                    `Four 
                                                  | `Nine  | `One  | 
                                                    `Seven 
                                                  | `Six  | `Three  | 
                                                    `Two ])
                                                ->
                                                match x4457 with
                                                | `Active ->
                                                    Ojs.string_to_js "Active"
                                                | `Beside ->
                                                    Ojs.string_to_js "Beside"
                                                | `Eight ->
                                                    Ojs.string_to_js "Eight"
                                                | `Five ->
                                                    Ojs.string_to_js "Five"
                                                | `Four ->
                                                    Ojs.string_to_js "Four"
                                                | `Nine ->
                                                    Ojs.string_to_js "Nine"
                                                | `One ->
                                                    Ojs.string_to_js "One"
                                                | `Seven ->
                                                    Ojs.string_to_js "Seven"
                                                | `Six ->
                                                    Ojs.string_to_js "Six"
                                                | `Three ->
                                                    Ojs.string_to_js "Three"
                                                | `Two ->
                                                    Ojs.string_to_js "Two")
                                             x4448)|]);
                                   (match x4449 with
                                    | Some x4451 ->
                                        ignore
                                          (Ojs.call x4450 "push"
                                             [|(intersection2_to_js
                                                  vscode_WebviewPanelOptions_to_js
                                                  vscode_WebviewOptions_to_js
                                                  x4451)|])
                                    | None -> ());
                                   x4450))|])
        let (setStatusBarMessage :
          text:string -> hideAfterTimeout:float -> vscode_Disposable) =
          fun ~text:(x4459 : string) ->
            fun ~hideAfterTimeout:(x4460 : float) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "setStatusBarMessage"
                   [|(Ojs.string_to_js x4459);(Ojs.float_to_js x4460)|])
        let (setStatusBarMessage :
          text:string -> hideWhenDone:any _Thenable -> vscode_Disposable) =
          fun ~text:(x4461 : string) ->
            fun ~hideWhenDone:(x4462 : any _Thenable) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "setStatusBarMessage"
                   [|(Ojs.string_to_js x4461);(_Thenable_to_js any_to_js
                                                 x4462)|])
        let (setStatusBarMessage : text:string -> vscode_Disposable) =
          fun ~text:(x4464 : string) ->
            vscode_Disposable_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "setStatusBarMessage"
                 [|(Ojs.string_to_js x4464)|])
        let (withScmProgress :
          task:(progress:float vscode_Progress -> 'R _Thenable) ->
            'R _Thenable)
          =
          fun ~task:(x4465 : progress:float vscode_Progress -> 'R _Thenable)
            ->
            _Thenable_of_js Obj.magic
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "withScmProgress"
                 [|(Ojs.fun_to_js 1
                      (fun (x4466 : Ojs.t) ->
                         _Thenable_to_js Obj.magic
                           (x4465
                              ~progress:(vscode_Progress_of_js
                                           Ojs.float_of_js x4466))))|])
        let (withProgress :
          options:vscode_ProgressOptions ->
            task:(progress:anonymous_interface_18 vscode_Progress ->
                    token:vscode_CancellationToken -> 'R _Thenable)
              -> 'R _Thenable)
          =
          fun ~options:(x4470 : vscode_ProgressOptions) ->
            fun
              ~task:(x4471 :
                      progress:anonymous_interface_18 vscode_Progress ->
                        token:vscode_CancellationToken -> 'R _Thenable)
              ->
              _Thenable_of_js Obj.magic
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "withProgress"
                   [|(vscode_ProgressOptions_to_js x4470);(Ojs.fun_to_js 2
                                                             (fun
                                                                (x4472 :
                                                                  Ojs.t)
                                                                ->
                                                                fun
                                                                  (x4474 :
                                                                    Ojs.t)
                                                                  ->
                                                                  _Thenable_to_js
                                                                    Obj.magic
                                                                    (
                                                                    x4471
                                                                    ~progress:(
                                                                    vscode_Progress_of_js
                                                                    anonymous_interface_18_of_js
                                                                    x4472)
                                                                    ~token:(
                                                                    vscode_CancellationToken_of_js
                                                                    x4474))))|])
        let (createStatusBarItem :
          ?alignment:vscode_StatusBarAlignment ->
            ?priority:float -> unit -> vscode_StatusBarItem)
          =
          fun ?alignment:(x4477 : vscode_StatusBarAlignment option) ->
            fun ?priority:(x4478 : float option) ->
              fun () ->
                vscode_StatusBarItem_of_js
                  (let x4482 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                   Ojs.call (Ojs.get_prop_ascii x4482 "createStatusBarItem")
                     "apply"
                     [|x4482;((let x4479 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4477 with
                                | Some x4481 ->
                                    ignore
                                      (Ojs.call x4479 "push"
                                         [|(vscode_StatusBarAlignment_to_js
                                              x4481)|])
                                | None -> ());
                               (match x4478 with
                                | Some x4480 ->
                                    ignore
                                      (Ojs.call x4479 "push"
                                         [|(Ojs.float_to_js x4480)|])
                                | None -> ());
                               x4479))|])
        let (createTerminal :
          ?name:string ->
            ?shellPath:string ->
              ?shellArgs:string list or_string -> unit -> vscode_Terminal)
          =
          fun ?name:(x4483 : string option) ->
            fun ?shellPath:(x4484 : string option) ->
              fun ?shellArgs:(x4485 : string list or_string option) ->
                fun () ->
                  vscode_Terminal_of_js
                    (let x4492 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call (Ojs.get_prop_ascii x4492 "createTerminal")
                       "apply"
                       [|x4492;((let x4486 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x4483 with
                                  | Some x4491 ->
                                      ignore
                                        (Ojs.call x4486 "push"
                                           [|(Ojs.string_to_js x4491)|])
                                  | None -> ());
                                 (match x4484 with
                                  | Some x4490 ->
                                      ignore
                                        (Ojs.call x4486 "push"
                                           [|(Ojs.string_to_js x4490)|])
                                  | None -> ());
                                 (match x4485 with
                                  | Some x4487 ->
                                      ignore
                                        (Ojs.call x4486 "push"
                                           [|(or_string_to_js
                                                (fun (x4488 : string list) ->
                                                   Ojs.list_to_js
                                                     Ojs.string_to_js x4488)
                                                x4487)|])
                                  | None -> ());
                                 x4486))|])
        let (createTerminal :
          options:vscode_TerminalOptions -> vscode_Terminal) =
          fun ~options:(x4493 : vscode_TerminalOptions) ->
            vscode_Terminal_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "createTerminal"
                 [|(vscode_TerminalOptions_to_js x4493)|])
        let (createTerminal :
          options:vscode_ExtensionTerminalOptions -> vscode_Terminal) =
          fun ~options:(x4494 : vscode_ExtensionTerminalOptions) ->
            vscode_Terminal_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "createTerminal"
                 [|(vscode_ExtensionTerminalOptions_to_js x4494)|])
        let (registerTreeDataProvider :
          viewId:string ->
            treeDataProvider:'T vscode_TreeDataProvider -> vscode_Disposable)
          =
          fun ~viewId:(x4495 : string) ->
            fun ~treeDataProvider:(x4496 : 'T vscode_TreeDataProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "registerTreeDataProvider"
                   [|(Ojs.string_to_js x4495);(vscode_TreeDataProvider_to_js
                                                 Obj.magic x4496)|])
        let (createTreeView :
          viewId:string ->
            options:'T vscode_TreeViewOptions -> 'T vscode_TreeView)
          =
          fun ~viewId:(x4498 : string) ->
            fun ~options:(x4499 : 'T vscode_TreeViewOptions) ->
              vscode_TreeView_of_js Obj.magic
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "createTreeView"
                   [|(Ojs.string_to_js x4498);(vscode_TreeViewOptions_to_js
                                                 Obj.magic x4499)|])
        let (registerUriHandler :
          handler:vscode_UriHandler -> vscode_Disposable) =
          fun ~handler:(x4502 : vscode_UriHandler) ->
            vscode_Disposable_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "registerUriHandler"
                 [|(vscode_UriHandler_to_js x4502)|])
        let (registerWebviewPanelSerializer :
          viewType:string ->
            serializer:unknown vscode_WebviewPanelSerializer ->
              vscode_Disposable)
          =
          fun ~viewType:(x4503 : string) ->
            fun ~serializer:(x4504 : unknown vscode_WebviewPanelSerializer)
              ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "window")
                   "registerWebviewPanelSerializer"
                   [|(Ojs.string_to_js x4503);(vscode_WebviewPanelSerializer_to_js
                                                 unknown_to_js x4504)|])
        let (registerWebviewViewProvider :
          viewId:string ->
            provider:vscode_WebviewViewProvider ->
              ?options:anonymous_interface_41 -> unit -> vscode_Disposable)
          =
          fun ~viewId:(x4506 : string) ->
            fun ~provider:(x4507 : vscode_WebviewViewProvider) ->
              fun ?options:(x4508 : anonymous_interface_41 option) ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x4511 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call
                       (Ojs.get_prop_ascii x4511
                          "registerWebviewViewProvider") "apply"
                       [|x4511;((let x4509 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4509 "push"
                                      [|(Ojs.string_to_js x4506)|]);
                                 ignore
                                   (Ojs.call x4509 "push"
                                      [|(vscode_WebviewViewProvider_to_js
                                           x4507)|]);
                                 (match x4508 with
                                  | Some x4510 ->
                                      ignore
                                        (Ojs.call x4509 "push"
                                           [|(anonymous_interface_41_to_js
                                                x4510)|])
                                  | None -> ());
                                 x4509))|])
        let (registerCustomEditorProvider :
          viewType:string ->
            provider:(vscode_CustomDocument vscode_CustomEditorProvider,
              vscode_CustomDocument vscode_CustomReadonlyEditorProvider,
              vscode_CustomTextEditorProvider) union3 ->
              ?options:anonymous_interface_40 -> unit -> vscode_Disposable)
          =
          fun ~viewType:(x4512 : string) ->
            fun
              ~provider:(x4513 :
                          (vscode_CustomDocument vscode_CustomEditorProvider,
                            vscode_CustomDocument
                              vscode_CustomReadonlyEditorProvider,
                            vscode_CustomTextEditorProvider) union3)
              ->
              fun ?options:(x4514 : anonymous_interface_40 option) ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x4522 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "window" in
                     Ojs.call
                       (Ojs.get_prop_ascii x4522
                          "registerCustomEditorProvider") "apply"
                       [|x4522;((let x4515 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4515 "push"
                                      [|(Ojs.string_to_js x4512)|]);
                                 ignore
                                   (Ojs.call x4515 "push"
                                      [|(union3_to_js
                                           (fun
                                              (x4517 :
                                                vscode_CustomDocument
                                                  vscode_CustomEditorProvider)
                                              ->
                                              vscode_CustomEditorProvider_to_js
                                                vscode_CustomDocument_to_js
                                                x4517)
                                           (fun
                                              (x4519 :
                                                vscode_CustomDocument
                                                  vscode_CustomReadonlyEditorProvider)
                                              ->
                                              vscode_CustomReadonlyEditorProvider_to_js
                                                vscode_CustomDocument_to_js
                                                x4519)
                                           vscode_CustomTextEditorProvider_to_js
                                           x4513)|]);
                                 (match x4514 with
                                  | Some x4516 ->
                                      ignore
                                        (Ojs.call x4515 "push"
                                           [|(anonymous_interface_40_to_js
                                                x4516)|])
                                  | None -> ());
                                 x4515))|])
        let (registerTerminalLinkProvider :
          provider:vscode_TerminalLink vscode_TerminalLinkProvider ->
            vscode_Disposable)
          =
          fun
            ~provider:(x4523 :
                        vscode_TerminalLink vscode_TerminalLinkProvider)
            ->
            vscode_Disposable_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "registerTerminalLinkProvider"
                 [|(vscode_TerminalLinkProvider_to_js
                      vscode_TerminalLink_to_js x4523)|])
        let (registerFileDecorationProvider :
          provider:vscode_FileDecorationProvider -> vscode_Disposable) =
          fun ~provider:(x4525 : vscode_FileDecorationProvider) ->
            vscode_Disposable_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "window") "registerFileDecorationProvider"
                 [|(vscode_FileDecorationProvider_to_js x4525)|])
        let (activeColorTheme : vscode_ColorTheme) =
          vscode_ColorTheme_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "activeColorTheme")
        let (onDidChangeActiveColorTheme : vscode_ColorTheme vscode_Event) =
          vscode_Event_of_js vscode_ColorTheme_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "window") "onDidChangeActiveColorTheme")
      end
    module TreeViewOptions =
      struct
        type 'T t = 'T vscode_TreeViewOptions
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4529 : Ojs.t) ->
              vscode_TreeViewOptions_of_js __T_of_js x4529
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4527 : __T vscode_TreeViewOptions) ->
              vscode_TreeViewOptions_to_js __T_to_js x4527
        let (get_treeDataProvider : 'T t -> 'T vscode_TreeDataProvider) =
          fun (x4531 : 'T t) ->
            vscode_TreeDataProvider_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4531)
                 "treeDataProvider")
        let (set_treeDataProvider :
          'T t -> 'T vscode_TreeDataProvider -> unit) =
          fun (x4534 : 'T t) ->
            fun (x4535 : 'T vscode_TreeDataProvider) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4534) "treeDataProvider"
                (vscode_TreeDataProvider_to_js Obj.magic x4535)
        let (get_showCollapseAll : 'T t -> bool) =
          fun (x4538 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4538) "showCollapseAll")
        let (set_showCollapseAll : 'T t -> bool -> unit) =
          fun (x4540 : 'T t) ->
            fun (x4541 : bool) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4540) "showCollapseAll"
                (Ojs.bool_to_js x4541)
        let (get_canSelectMany : 'T t -> bool) =
          fun (x4543 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4543) "canSelectMany")
        let (set_canSelectMany : 'T t -> bool -> unit) =
          fun (x4545 : 'T t) ->
            fun (x4546 : bool) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4545) "canSelectMany"
                (Ojs.bool_to_js x4546)
      end
    module TreeViewExpansionEvent =
      struct
        type 'T t = 'T vscode_TreeViewExpansionEvent
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4550 : Ojs.t) ->
              vscode_TreeViewExpansionEvent_of_js __T_of_js x4550
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4548 : __T vscode_TreeViewExpansionEvent) ->
              vscode_TreeViewExpansionEvent_to_js __T_to_js x4548
        let (get_element : 'T t -> 'T) =
          fun (x4552 : 'T t) ->
            Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4552) "element")
      end
    module TreeViewSelectionChangeEvent =
      struct
        type 'T t = 'T vscode_TreeViewSelectionChangeEvent
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4556 : Ojs.t) ->
              vscode_TreeViewSelectionChangeEvent_of_js __T_of_js x4556
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4554 : __T vscode_TreeViewSelectionChangeEvent) ->
              vscode_TreeViewSelectionChangeEvent_to_js __T_to_js x4554
        let (get_selection : 'T t -> 'T list) =
          fun (x4558 : 'T t) ->
            Ojs.list_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4558) "selection")
      end
    module TreeViewVisibilityChangeEvent =
      struct
        type t = vscode_TreeViewVisibilityChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x4562 : Ojs.t) ->
            vscode_TreeViewVisibilityChangeEvent_of_js x4562
        and t_to_js : t -> Ojs.t =
          fun (x4561 : vscode_TreeViewVisibilityChangeEvent) ->
            vscode_TreeViewVisibilityChangeEvent_to_js x4561
        let (get_visible : t -> bool) =
          fun (x4563 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4563) "visible")
      end
    module TreeView =
      struct
        type 'T t = 'T vscode_TreeView
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4566 : Ojs.t) -> vscode_TreeView_of_js __T_of_js x4566
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4564 : __T vscode_TreeView) ->
              vscode_TreeView_to_js __T_to_js x4564
        let (get_onDidExpandElement :
          'T t -> 'T vscode_TreeViewExpansionEvent vscode_Event) =
          fun (x4568 : 'T t) ->
            vscode_Event_of_js
              (fun (x4570 : Ojs.t) ->
                 vscode_TreeViewExpansionEvent_of_js Obj.magic x4570)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4568)
                 "onDidExpandElement")
        let (get_onDidCollapseElement :
          'T t -> 'T vscode_TreeViewExpansionEvent vscode_Event) =
          fun (x4572 : 'T t) ->
            vscode_Event_of_js
              (fun (x4574 : Ojs.t) ->
                 vscode_TreeViewExpansionEvent_of_js Obj.magic x4574)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4572)
                 "onDidCollapseElement")
        let (get_selection : 'T t -> 'T list) =
          fun (x4576 : 'T t) ->
            Ojs.list_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4576) "selection")
        let (get_onDidChangeSelection :
          'T t -> 'T vscode_TreeViewSelectionChangeEvent vscode_Event) =
          fun (x4579 : 'T t) ->
            vscode_Event_of_js
              (fun (x4581 : Ojs.t) ->
                 vscode_TreeViewSelectionChangeEvent_of_js Obj.magic x4581)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4579)
                 "onDidChangeSelection")
        let (get_visible : 'T t -> bool) =
          fun (x4583 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4583) "visible")
        let (get_onDidChangeVisibility :
          'T t -> vscode_TreeViewVisibilityChangeEvent vscode_Event) =
          fun (x4585 : 'T t) ->
            vscode_Event_of_js vscode_TreeViewVisibilityChangeEvent_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4585)
                 "onDidChangeVisibility")
        let (get_message : 'T t -> string) =
          fun (x4588 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4588) "message")
        let (set_message : 'T t -> string -> unit) =
          fun (x4590 : 'T t) ->
            fun (x4591 : string) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4590) "message"
                (Ojs.string_to_js x4591)
        let (get_title : 'T t -> string) =
          fun (x4593 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4593) "title")
        let (set_title : 'T t -> string -> unit) =
          fun (x4595 : 'T t) ->
            fun (x4596 : string) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4595) "title"
                (Ojs.string_to_js x4596)
        let (get_description : 'T t -> string) =
          fun (x4598 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4598) "description")
        let (set_description : 'T t -> string -> unit) =
          fun (x4600 : 'T t) ->
            fun (x4601 : string) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4600) "description"
                (Ojs.string_to_js x4601)
        let (reveal :
          'T t ->
            element:'T ->
              ?options:anonymous_interface_32 -> unit -> unit _Thenable)
          =
          fun (x4607 : 'T t) ->
            fun ~element:(x4603 : 'T) ->
              fun ?options:(x4604 : anonymous_interface_32 option) ->
                fun () ->
                  _Thenable_of_js Ojs.unit_of_js
                    (let x4609 = t_to_js Obj.magic x4607 in
                     Ojs.call (Ojs.get_prop_ascii x4609 "reveal") "apply"
                       [|x4609;((let x4605 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4605 "push"
                                      [|(Obj.magic x4603)|]);
                                 (match x4604 with
                                  | Some x4606 ->
                                      ignore
                                        (Ojs.call x4605 "push"
                                           [|(anonymous_interface_32_to_js
                                                x4606)|])
                                  | None -> ());
                                 x4605))|])
        let (cast : 'T t -> vscode_Disposable) =
          fun (x4611 : 'T t) ->
            vscode_Disposable_of_js (t_to_js Obj.magic x4611)
      end
    module TreeDataProvider =
      struct
        type 'T t = 'T vscode_TreeDataProvider
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4615 : Ojs.t) ->
              vscode_TreeDataProvider_of_js __T_of_js x4615
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4613 : __T vscode_TreeDataProvider) ->
              vscode_TreeDataProvider_to_js __T_to_js x4613
        let (get_onDidChangeTreeData :
          'T t -> ('T, unit) union2 or_null_or_undefined vscode_Event) =
          fun (x4617 : 'T t) ->
            vscode_Event_of_js
              (fun (x4619 : Ojs.t) ->
                 or_null_or_undefined_of_js
                   (fun (x4620 : Ojs.t) ->
                      union2_of_js Obj.magic Ojs.unit_of_js x4620) x4619)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4617)
                 "onDidChangeTreeData")
        let (set_onDidChangeTreeData :
          'T t -> ('T, unit) union2 or_null_or_undefined vscode_Event -> unit)
          =
          fun (x4623 : 'T t) ->
            fun (x4624 : ('T, unit) union2 or_null_or_undefined vscode_Event)
              ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4623)
                "onDidChangeTreeData"
                (vscode_Event_to_js
                   (fun (x4625 : ('T, unit) union2 or_null_or_undefined) ->
                      or_null_or_undefined_to_js
                        (fun (x4626 : ('T, unit) union2) ->
                           union2_to_js Obj.magic Ojs.unit_to_js x4626) x4625)
                   x4624)
        let (getTreeItem :
          'T t ->
            element:'T -> (vscode_TreeItem, vscode_TreeItem _Thenable) union2)
          =
          fun (x4631 : 'T t) ->
            fun ~element:(x4630 : 'T) ->
              union2_of_js vscode_TreeItem_of_js
                (fun (x4634 : Ojs.t) ->
                   _Thenable_of_js vscode_TreeItem_of_js x4634)
                (Ojs.call (t_to_js Obj.magic x4631) "getTreeItem"
                   [|(Obj.magic x4630)|])
        let (getChildren :
          'T t -> ?element:'T -> unit -> 'T list vscode_ProviderResult) =
          fun (x4639 : 'T t) ->
            fun ?element:(x4636 : 'T option) ->
              fun () ->
                vscode_ProviderResult_of_js
                  (fun (x4642 : Ojs.t) -> Ojs.list_of_js Obj.magic x4642)
                  (let x4641 = t_to_js Obj.magic x4639 in
                   Ojs.call (Ojs.get_prop_ascii x4641 "getChildren") "apply"
                     [|x4641;((let x4637 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4636 with
                                | Some x4638 ->
                                    ignore
                                      (Ojs.call x4637 "push"
                                         [|(Obj.magic x4638)|])
                                | None -> ());
                               x4637))|])
        let (getParent : 'T t -> element:'T -> 'T vscode_ProviderResult) =
          fun (x4645 : 'T t) ->
            fun ~element:(x4644 : 'T) ->
              vscode_ProviderResult_of_js Obj.magic
                (Ojs.call (t_to_js Obj.magic x4645) "getParent"
                   [|(Obj.magic x4644)|])
        let (resolveTreeItem :
          'T t ->
            item:vscode_TreeItem ->
              element:'T ->
                token:vscode_CancellationToken ->
                  vscode_TreeItem vscode_ProviderResult)
          =
          fun (x4651 : 'T t) ->
            fun ~item:(x4648 : vscode_TreeItem) ->
              fun ~element:(x4649 : 'T) ->
                fun ~token:(x4650 : vscode_CancellationToken) ->
                  vscode_ProviderResult_of_js vscode_TreeItem_of_js
                    (Ojs.call (t_to_js Obj.magic x4651) "resolveTreeItem"
                       [|(vscode_TreeItem_to_js x4648);(Obj.magic x4649);(
                         vscode_CancellationToken_to_js x4650)|])
      end
    module TreeItem =
      struct
        type t = vscode_TreeItem
        let rec t_of_js : Ojs.t -> t =
          fun (x4655 : Ojs.t) -> vscode_TreeItem_of_js x4655
        and t_to_js : t -> Ojs.t =
          fun (x4654 : vscode_TreeItem) -> vscode_TreeItem_to_js x4654
        let (get_label : t -> vscode_TreeItemLabel or_string) =
          fun (x4656 : t) ->
            or_string_of_js vscode_TreeItemLabel_of_js
              (Ojs.get_prop_ascii (t_to_js x4656) "label")
        let (set_label : t -> vscode_TreeItemLabel or_string -> unit) =
          fun (x4658 : t) ->
            fun (x4659 : vscode_TreeItemLabel or_string) ->
              Ojs.set_prop_ascii (t_to_js x4658) "label"
                (or_string_to_js vscode_TreeItemLabel_to_js x4659)
        let (get_id : t -> string) =
          fun (x4661 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4661) "id")
        let (set_id : t -> string -> unit) =
          fun (x4662 : t) ->
            fun (x4663 : string) ->
              Ojs.set_prop_ascii (t_to_js x4662) "id"
                (Ojs.string_to_js x4663)
        let (get_iconPath :
          t ->
            (vscode_ThemeIcon, vscode_Uri, anonymous_interface_15) union3
              or_string)
          =
          fun (x4664 : t) ->
            or_string_of_js
              (fun (x4665 : Ojs.t) ->
                 union3_of_js vscode_ThemeIcon_of_js vscode_Uri_of_js
                   anonymous_interface_15_of_js x4665)
              (Ojs.get_prop_ascii (t_to_js x4664) "iconPath")
        let (set_iconPath :
          t ->
            (vscode_ThemeIcon, vscode_Uri, anonymous_interface_15) union3
              or_string -> unit)
          =
          fun (x4669 : t) ->
            fun
              (x4670 :
                (vscode_ThemeIcon, vscode_Uri, anonymous_interface_15) union3
                  or_string)
              ->
              Ojs.set_prop_ascii (t_to_js x4669) "iconPath"
                (or_string_to_js
                   (fun
                      (x4671 :
                        (vscode_ThemeIcon, vscode_Uri,
                          anonymous_interface_15) union3)
                      ->
                      union3_to_js vscode_ThemeIcon_to_js vscode_Uri_to_js
                        anonymous_interface_15_to_js x4671) x4670)
        let (get_description : t -> bool or_string) =
          fun (x4675 : t) ->
            or_string_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x4675) "description")
        let (set_description : t -> bool or_string -> unit) =
          fun (x4677 : t) ->
            fun (x4678 : bool or_string) ->
              Ojs.set_prop_ascii (t_to_js x4677) "description"
                (or_string_to_js Ojs.bool_to_js x4678)
        let (get_resourceUri : t -> vscode_Uri) =
          fun (x4680 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x4680) "resourceUri")
        let (set_resourceUri : t -> vscode_Uri -> unit) =
          fun (x4681 : t) ->
            fun (x4682 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x4681) "resourceUri"
                (vscode_Uri_to_js x4682)
        let (get_tooltip : t -> vscode_MarkdownString or_string or_undefined)
          =
          fun (x4683 : t) ->
            or_undefined_of_js
              (fun (x4684 : Ojs.t) ->
                 or_string_of_js vscode_MarkdownString_of_js x4684)
              (Ojs.get_prop_ascii (t_to_js x4683) "tooltip")
        let (set_tooltip :
          t -> vscode_MarkdownString or_string or_undefined -> unit) =
          fun (x4686 : t) ->
            fun (x4687 : vscode_MarkdownString or_string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x4686) "tooltip"
                (or_undefined_to_js
                   (fun (x4688 : vscode_MarkdownString or_string) ->
                      or_string_to_js vscode_MarkdownString_to_js x4688)
                   x4687)
        let (get_command : t -> vscode_Command) =
          fun (x4690 : t) ->
            vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x4690) "command")
        let (set_command : t -> vscode_Command -> unit) =
          fun (x4691 : t) ->
            fun (x4692 : vscode_Command) ->
              Ojs.set_prop_ascii (t_to_js x4691) "command"
                (vscode_Command_to_js x4692)
        let (get_collapsibleState : t -> vscode_TreeItemCollapsibleState) =
          fun (x4693 : t) ->
            vscode_TreeItemCollapsibleState_of_js
              (Ojs.get_prop_ascii (t_to_js x4693) "collapsibleState")
        let (set_collapsibleState :
          t -> vscode_TreeItemCollapsibleState -> unit) =
          fun (x4694 : t) ->
            fun (x4695 : vscode_TreeItemCollapsibleState) ->
              Ojs.set_prop_ascii (t_to_js x4694) "collapsibleState"
                (vscode_TreeItemCollapsibleState_to_js x4695)
        let (get_contextValue : t -> string) =
          fun (x4696 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4696) "contextValue")
        let (set_contextValue : t -> string -> unit) =
          fun (x4697 : t) ->
            fun (x4698 : string) ->
              Ojs.set_prop_ascii (t_to_js x4697) "contextValue"
                (Ojs.string_to_js x4698)
        let (get_accessibilityInformation :
          t -> vscode_AccessibilityInformation) =
          fun (x4699 : t) ->
            vscode_AccessibilityInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x4699) "accessibilityInformation")
        let (set_accessibilityInformation :
          t -> vscode_AccessibilityInformation -> unit) =
          fun (x4700 : t) ->
            fun (x4701 : vscode_AccessibilityInformation) ->
              Ojs.set_prop_ascii (t_to_js x4700) "accessibilityInformation"
                (vscode_AccessibilityInformation_to_js x4701)
        let (create :
          label:vscode_TreeItemLabel or_string ->
            ?collapsibleState:vscode_TreeItemCollapsibleState -> unit -> t)
          =
          fun ~label:(x4702 : vscode_TreeItemLabel or_string) ->
            fun
              ?collapsibleState:(x4703 :
                                  vscode_TreeItemCollapsibleState option)
              ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "TreeItem")
                     (let x4704 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x4704 "push"
                           [|(or_string_to_js vscode_TreeItemLabel_to_js
                                x4702)|]);
                      (match x4703 with
                       | Some x4705 ->
                           ignore
                             (Ojs.call x4704 "push"
                                [|(vscode_TreeItemCollapsibleState_to_js
                                     x4705)|])
                       | None -> ());
                      x4704))
        let (create' :
          resourceUri:vscode_Uri ->
            ?collapsibleState:vscode_TreeItemCollapsibleState -> unit -> t)
          =
          fun ~resourceUri:(x4707 : vscode_Uri) ->
            fun
              ?collapsibleState:(x4708 :
                                  vscode_TreeItemCollapsibleState option)
              ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "TreeItem")
                     (let x4709 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x4709 "push" [|(vscode_Uri_to_js x4707)|]);
                      (match x4708 with
                       | Some x4710 ->
                           ignore
                             (Ojs.call x4709 "push"
                                [|(vscode_TreeItemCollapsibleState_to_js
                                     x4710)|])
                       | None -> ());
                      x4709))
      end
    module TreeItemCollapsibleState =
      struct
        type t = vscode_TreeItemCollapsibleState
        let rec t_of_js : Ojs.t -> t =
          fun (x4712 : Ojs.t) -> vscode_TreeItemCollapsibleState_of_js x4712
        and t_to_js : t -> Ojs.t =
          fun (x4711 : vscode_TreeItemCollapsibleState) ->
            vscode_TreeItemCollapsibleState_to_js x4711
      end
    module TreeItemLabel =
      struct
        type t = vscode_TreeItemLabel
        let rec t_of_js : Ojs.t -> t =
          fun (x4714 : Ojs.t) -> vscode_TreeItemLabel_of_js x4714
        and t_to_js : t -> Ojs.t =
          fun (x4713 : vscode_TreeItemLabel) ->
            vscode_TreeItemLabel_to_js x4713
        let (get_label : t -> string) =
          fun (x4715 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4715) "label")
        let (set_label : t -> string -> unit) =
          fun (x4716 : t) ->
            fun (x4717 : string) ->
              Ojs.set_prop_ascii (t_to_js x4716) "label"
                (Ojs.string_to_js x4717)
        let (get_highlights : t -> (float * float) list) =
          fun (x4718 : t) ->
            Ojs.list_of_js
              (fun (x4719 : Ojs.t) ->
                 let x4720 = x4719 in
                 ((Ojs.float_of_js (Ojs.array_get x4720 0)),
                   (Ojs.float_of_js (Ojs.array_get x4720 1))))
              (Ojs.get_prop_ascii (t_to_js x4718) "highlights")
        let (set_highlights : t -> (float * float) list -> unit) =
          fun (x4721 : t) ->
            fun (x4722 : (float * float) list) ->
              Ojs.set_prop_ascii (t_to_js x4721) "highlights"
                (Ojs.list_to_js
                   (fun (x4723 : (float * float)) ->
                      let (x4724, x4725) = x4723 in
                      let x4726 = Ojs.array_make 2 in
                      Ojs.array_set x4726 0 (Ojs.float_to_js x4724);
                      Ojs.array_set x4726 1 (Ojs.float_to_js x4725);
                      x4726) x4722)
      end
    module TerminalOptions =
      struct
        type t = vscode_TerminalOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4728 : Ojs.t) -> vscode_TerminalOptions_of_js x4728
        and t_to_js : t -> Ojs.t =
          fun (x4727 : vscode_TerminalOptions) ->
            vscode_TerminalOptions_to_js x4727
        let (get_name : t -> string) =
          fun (x4729 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4729) "name")
        let (set_name : t -> string -> unit) =
          fun (x4730 : t) ->
            fun (x4731 : string) ->
              Ojs.set_prop_ascii (t_to_js x4730) "name"
                (Ojs.string_to_js x4731)
        let (get_shellPath : t -> string) =
          fun (x4732 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4732) "shellPath")
        let (set_shellPath : t -> string -> unit) =
          fun (x4733 : t) ->
            fun (x4734 : string) ->
              Ojs.set_prop_ascii (t_to_js x4733) "shellPath"
                (Ojs.string_to_js x4734)
        let (get_shellArgs : t -> string list or_string) =
          fun (x4735 : t) ->
            or_string_of_js
              (fun (x4736 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x4736)
              (Ojs.get_prop_ascii (t_to_js x4735) "shellArgs")
        let (set_shellArgs : t -> string list or_string -> unit) =
          fun (x4738 : t) ->
            fun (x4739 : string list or_string) ->
              Ojs.set_prop_ascii (t_to_js x4738) "shellArgs"
                (or_string_to_js
                   (fun (x4740 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x4740) x4739)
        let (get_cwd : t -> vscode_Uri or_string) =
          fun (x4742 : t) ->
            or_string_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x4742) "cwd")
        let (set_cwd : t -> vscode_Uri or_string -> unit) =
          fun (x4744 : t) ->
            fun (x4745 : vscode_Uri or_string) ->
              Ojs.set_prop_ascii (t_to_js x4744) "cwd"
                (or_string_to_js vscode_Uri_to_js x4745)
        let (get_env : t -> anonymous_interface_45) =
          fun (x4747 : t) ->
            anonymous_interface_45_of_js
              (Ojs.get_prop_ascii (t_to_js x4747) "env")
        let (set_env : t -> anonymous_interface_45 -> unit) =
          fun (x4748 : t) ->
            fun (x4749 : anonymous_interface_45) ->
              Ojs.set_prop_ascii (t_to_js x4748) "env"
                (anonymous_interface_45_to_js x4749)
        let (get_strictEnv : t -> bool) =
          fun (x4750 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4750) "strictEnv")
        let (set_strictEnv : t -> bool -> unit) =
          fun (x4751 : t) ->
            fun (x4752 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4751) "strictEnv"
                (Ojs.bool_to_js x4752)
        let (get_hideFromUser : t -> bool) =
          fun (x4753 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x4753) "hideFromUser")
        let (set_hideFromUser : t -> bool -> unit) =
          fun (x4754 : t) ->
            fun (x4755 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4754) "hideFromUser"
                (Ojs.bool_to_js x4755)
      end
    module ExtensionTerminalOptions =
      struct
        type t = vscode_ExtensionTerminalOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4757 : Ojs.t) -> vscode_ExtensionTerminalOptions_of_js x4757
        and t_to_js : t -> Ojs.t =
          fun (x4756 : vscode_ExtensionTerminalOptions) ->
            vscode_ExtensionTerminalOptions_to_js x4756
        let (get_name : t -> string) =
          fun (x4758 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4758) "name")
        let (set_name : t -> string -> unit) =
          fun (x4759 : t) ->
            fun (x4760 : string) ->
              Ojs.set_prop_ascii (t_to_js x4759) "name"
                (Ojs.string_to_js x4760)
        let (get_pty : t -> vscode_Pseudoterminal) =
          fun (x4761 : t) ->
            vscode_Pseudoterminal_of_js
              (Ojs.get_prop_ascii (t_to_js x4761) "pty")
        let (set_pty : t -> vscode_Pseudoterminal -> unit) =
          fun (x4762 : t) ->
            fun (x4763 : vscode_Pseudoterminal) ->
              Ojs.set_prop_ascii (t_to_js x4762) "pty"
                (vscode_Pseudoterminal_to_js x4763)
      end
    module Pseudoterminal =
      struct
        type t = vscode_Pseudoterminal
        let rec t_of_js : Ojs.t -> t =
          fun (x4765 : Ojs.t) -> vscode_Pseudoterminal_of_js x4765
        and t_to_js : t -> Ojs.t =
          fun (x4764 : vscode_Pseudoterminal) ->
            vscode_Pseudoterminal_to_js x4764
        let (get_onDidWrite : t -> string vscode_Event) =
          fun (x4766 : t) ->
            vscode_Event_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4766) "onDidWrite")
        let (set_onDidWrite : t -> string vscode_Event -> unit) =
          fun (x4768 : t) ->
            fun (x4769 : string vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x4768) "onDidWrite"
                (vscode_Event_to_js Ojs.string_to_js x4769)
        let (get_onDidOverrideDimensions :
          t -> vscode_TerminalDimensions or_undefined vscode_Event) =
          fun (x4771 : t) ->
            vscode_Event_of_js
              (fun (x4772 : Ojs.t) ->
                 or_undefined_of_js vscode_TerminalDimensions_of_js x4772)
              (Ojs.get_prop_ascii (t_to_js x4771) "onDidOverrideDimensions")
        let (set_onDidOverrideDimensions :
          t -> vscode_TerminalDimensions or_undefined vscode_Event -> unit) =
          fun (x4774 : t) ->
            fun (x4775 : vscode_TerminalDimensions or_undefined vscode_Event)
              ->
              Ojs.set_prop_ascii (t_to_js x4774) "onDidOverrideDimensions"
                (vscode_Event_to_js
                   (fun (x4776 : vscode_TerminalDimensions or_undefined) ->
                      or_undefined_to_js vscode_TerminalDimensions_to_js
                        x4776) x4775)
        let (get_onDidClose : t -> unit or_number vscode_Event) =
          fun (x4778 : t) ->
            vscode_Event_of_js
              (fun (x4779 : Ojs.t) -> or_number_of_js Ojs.unit_of_js x4779)
              (Ojs.get_prop_ascii (t_to_js x4778) "onDidClose")
        let (set_onDidClose : t -> unit or_number vscode_Event -> unit) =
          fun (x4781 : t) ->
            fun (x4782 : unit or_number vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x4781) "onDidClose"
                (vscode_Event_to_js
                   (fun (x4783 : unit or_number) ->
                      or_number_to_js Ojs.unit_to_js x4783) x4782)
        let (open_ :
          t ->
            initialDimensions:vscode_TerminalDimensions or_undefined -> unit)
          =
          fun (x4787 : t) ->
            fun
              ~initialDimensions:(x4785 :
                                   vscode_TerminalDimensions or_undefined)
              ->
              ignore
                (Ojs.call (t_to_js x4787) "open"
                   [|(or_undefined_to_js vscode_TerminalDimensions_to_js
                        x4785)|])
        let (close : t -> unit) =
          fun (x4788 : t) -> ignore (Ojs.call (t_to_js x4788) "close" [||])
        let (handleInput : t -> data:string -> unit) =
          fun (x4790 : t) ->
            fun ~data:(x4789 : string) ->
              ignore
                (Ojs.call (t_to_js x4790) "handleInput"
                   [|(Ojs.string_to_js x4789)|])
        let (setDimensions :
          t -> dimensions:vscode_TerminalDimensions -> unit) =
          fun (x4792 : t) ->
            fun ~dimensions:(x4791 : vscode_TerminalDimensions) ->
              ignore
                (Ojs.call (t_to_js x4792) "setDimensions"
                   [|(vscode_TerminalDimensions_to_js x4791)|])
      end
    module TerminalDimensions =
      struct
        type t = vscode_TerminalDimensions
        let rec t_of_js : Ojs.t -> t =
          fun (x4794 : Ojs.t) -> vscode_TerminalDimensions_of_js x4794
        and t_to_js : t -> Ojs.t =
          fun (x4793 : vscode_TerminalDimensions) ->
            vscode_TerminalDimensions_to_js x4793
        let (get_columns : t -> float) =
          fun (x4795 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4795) "columns")
        let (get_rows : t -> float) =
          fun (x4796 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4796) "rows")
      end
    module TerminalExitStatus =
      struct
        type t = vscode_TerminalExitStatus
        let rec t_of_js : Ojs.t -> t =
          fun (x4798 : Ojs.t) -> vscode_TerminalExitStatus_of_js x4798
        and t_to_js : t -> Ojs.t =
          fun (x4797 : vscode_TerminalExitStatus) ->
            vscode_TerminalExitStatus_to_js x4797
        let (get_code : t -> float or_undefined) =
          fun (x4799 : t) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4799) "code")
      end
    module EnvironmentVariableMutatorType =
      struct
        type t = vscode_EnvironmentVariableMutatorType
        let rec t_of_js : Ojs.t -> t =
          fun (x4802 : Ojs.t) ->
            vscode_EnvironmentVariableMutatorType_of_js x4802
        and t_to_js : t -> Ojs.t =
          fun (x4801 : vscode_EnvironmentVariableMutatorType) ->
            vscode_EnvironmentVariableMutatorType_to_js x4801
      end
    module EnvironmentVariableMutator =
      struct
        type t = vscode_EnvironmentVariableMutator
        let rec t_of_js : Ojs.t -> t =
          fun (x4804 : Ojs.t) ->
            vscode_EnvironmentVariableMutator_of_js x4804
        and t_to_js : t -> Ojs.t =
          fun (x4803 : vscode_EnvironmentVariableMutator) ->
            vscode_EnvironmentVariableMutator_to_js x4803
        let (get_type : t -> vscode_EnvironmentVariableMutatorType) =
          fun (x4805 : t) ->
            vscode_EnvironmentVariableMutatorType_of_js
              (Ojs.get_prop_ascii (t_to_js x4805) "type")
        let (get_value : t -> string) =
          fun (x4806 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4806) "value")
      end
    module EnvironmentVariableCollection =
      struct
        type t = vscode_EnvironmentVariableCollection
        let rec t_of_js : Ojs.t -> t =
          fun (x4808 : Ojs.t) ->
            vscode_EnvironmentVariableCollection_of_js x4808
        and t_to_js : t -> Ojs.t =
          fun (x4807 : vscode_EnvironmentVariableCollection) ->
            vscode_EnvironmentVariableCollection_to_js x4807
        let (get_persistent : t -> bool) =
          fun (x4809 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4809) "persistent")
        let (set_persistent : t -> bool -> unit) =
          fun (x4810 : t) ->
            fun (x4811 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4810) "persistent"
                (Ojs.bool_to_js x4811)
        let (replace : t -> variable:string -> value:string -> unit) =
          fun (x4814 : t) ->
            fun ~variable:(x4812 : string) ->
              fun ~value:(x4813 : string) ->
                ignore
                  (Ojs.call (t_to_js x4814) "replace"
                     [|(Ojs.string_to_js x4812);(Ojs.string_to_js x4813)|])
        let (append : t -> variable:string -> value:string -> unit) =
          fun (x4817 : t) ->
            fun ~variable:(x4815 : string) ->
              fun ~value:(x4816 : string) ->
                ignore
                  (Ojs.call (t_to_js x4817) "append"
                     [|(Ojs.string_to_js x4815);(Ojs.string_to_js x4816)|])
        let (prepend : t -> variable:string -> value:string -> unit) =
          fun (x4820 : t) ->
            fun ~variable:(x4818 : string) ->
              fun ~value:(x4819 : string) ->
                ignore
                  (Ojs.call (t_to_js x4820) "prepend"
                     [|(Ojs.string_to_js x4818);(Ojs.string_to_js x4819)|])
        let (get_ :
          t ->
            variable:string -> vscode_EnvironmentVariableMutator or_undefined)
          =
          fun (x4822 : t) ->
            fun ~variable:(x4821 : string) ->
              or_undefined_of_js vscode_EnvironmentVariableMutator_of_js
                (Ojs.call (t_to_js x4822) "get" [|(Ojs.string_to_js x4821)|])
        let (forEach :
          t ->
            callback:(variable:string ->
                        mutator:vscode_EnvironmentVariableMutator ->
                          collection:t -> any)
              -> ?thisArg:any -> unit -> unit)
          =
          fun (x4831 : t) ->
            fun
              ~callback:(x4824 :
                          variable:string ->
                            mutator:vscode_EnvironmentVariableMutator ->
                              collection:t -> any)
              ->
              fun ?thisArg:(x4825 : any option) ->
                fun () ->
                  ignore
                    (let x4832 = t_to_js x4831 in
                     Ojs.call (Ojs.get_prop_ascii x4832 "forEach") "apply"
                       [|x4832;((let x4826 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x4826 "push"
                                      [|(Ojs.fun_to_js 3
                                           (fun (x4828 : Ojs.t) ->
                                              fun (x4829 : Ojs.t) ->
                                                fun (x4830 : Ojs.t) ->
                                                  any_to_js
                                                    (x4824
                                                       ~variable:(Ojs.string_of_js
                                                                    x4828)
                                                       ~mutator:(vscode_EnvironmentVariableMutator_of_js
                                                                   x4829)
                                                       ~collection:(t_of_js
                                                                    x4830))))|]);
                                 (match x4825 with
                                  | Some x4827 ->
                                      ignore
                                        (Ojs.call x4826 "push"
                                           [|(any_to_js x4827)|])
                                  | None -> ());
                                 x4826))|])
        let (delete : t -> variable:string -> unit) =
          fun (x4834 : t) ->
            fun ~variable:(x4833 : string) ->
              ignore
                (Ojs.call (t_to_js x4834) "delete"
                   [|(Ojs.string_to_js x4833)|])
        let (clear : t -> unit) =
          fun (x4835 : t) -> ignore (Ojs.call (t_to_js x4835) "clear" [||])
      end
    module ProgressLocation =
      struct
        type t = vscode_ProgressLocation
        let rec t_of_js : Ojs.t -> t =
          fun (x4837 : Ojs.t) -> vscode_ProgressLocation_of_js x4837
        and t_to_js : t -> Ojs.t =
          fun (x4836 : vscode_ProgressLocation) ->
            vscode_ProgressLocation_to_js x4836
      end
    module ProgressOptions =
      struct
        type t = vscode_ProgressOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4839 : Ojs.t) -> vscode_ProgressOptions_of_js x4839
        and t_to_js : t -> Ojs.t =
          fun (x4838 : vscode_ProgressOptions) ->
            vscode_ProgressOptions_to_js x4838
        let (get_location :
          t ->
            ((vscode_ProgressLocation, anonymous_interface_39) union2,
              [ `Notification  | `SourceControl  | `Window ]) or_enum)
          =
          fun (x4840 : t) ->
            or_enum_of_js
              (fun (x4841 : Ojs.t) ->
                 union2_of_js vscode_ProgressLocation_of_js
                   anonymous_interface_39_of_js x4841)
              (fun (x4844 : Ojs.t) ->
                 let x4845 = x4844 in
                 match Ojs.int_of_js x4845 with
                 | 15 -> `Notification
                 | 1 -> `SourceControl
                 | 10 -> `Window
                 | _ -> assert false)
              (Ojs.get_prop_ascii (t_to_js x4840) "location")
        let (set_location :
          t ->
            ((vscode_ProgressLocation, anonymous_interface_39) union2,
              [ `Notification  | `SourceControl  | `Window ]) or_enum -> 
              unit)
          =
          fun (x4846 : t) ->
            fun
              (x4847 :
                ((vscode_ProgressLocation, anonymous_interface_39) union2,
                  [ `Notification  | `SourceControl  | `Window ]) or_enum)
              ->
              Ojs.set_prop_ascii (t_to_js x4846) "location"
                (or_enum_to_js
                   (fun
                      (x4848 :
                        (vscode_ProgressLocation, anonymous_interface_39)
                          union2)
                      ->
                      union2_to_js vscode_ProgressLocation_to_js
                        anonymous_interface_39_to_js x4848)
                   (fun
                      (x4851 :
                        [ `Notification  | `SourceControl  | `Window ])
                      ->
                      match x4851 with
                      | `Notification -> Ojs.string_to_js "Notification"
                      | `SourceControl -> Ojs.string_to_js "SourceControl"
                      | `Window -> Ojs.string_to_js "Window") x4847)
        let (get_title : t -> string) =
          fun (x4852 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4852) "title")
        let (set_title : t -> string -> unit) =
          fun (x4853 : t) ->
            fun (x4854 : string) ->
              Ojs.set_prop_ascii (t_to_js x4853) "title"
                (Ojs.string_to_js x4854)
        let (get_cancellable : t -> bool) =
          fun (x4855 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4855) "cancellable")
        let (set_cancellable : t -> bool -> unit) =
          fun (x4856 : t) ->
            fun (x4857 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4856) "cancellable"
                (Ojs.bool_to_js x4857)
      end
    module QuickInput =
      struct
        type t = vscode_QuickInput
        let rec t_of_js : Ojs.t -> t =
          fun (x4859 : Ojs.t) -> vscode_QuickInput_of_js x4859
        and t_to_js : t -> Ojs.t =
          fun (x4858 : vscode_QuickInput) -> vscode_QuickInput_to_js x4858
        let (get_title : t -> string or_undefined) =
          fun (x4860 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4860) "title")
        let (set_title : t -> string or_undefined -> unit) =
          fun (x4862 : t) ->
            fun (x4863 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x4862) "title"
                (or_undefined_to_js Ojs.string_to_js x4863)
        let (get_step : t -> float or_undefined) =
          fun (x4865 : t) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4865) "step")
        let (set_step : t -> float or_undefined -> unit) =
          fun (x4867 : t) ->
            fun (x4868 : float or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x4867) "step"
                (or_undefined_to_js Ojs.float_to_js x4868)
        let (get_totalSteps : t -> float or_undefined) =
          fun (x4870 : t) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4870) "totalSteps")
        let (set_totalSteps : t -> float or_undefined -> unit) =
          fun (x4872 : t) ->
            fun (x4873 : float or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x4872) "totalSteps"
                (or_undefined_to_js Ojs.float_to_js x4873)
        let (get_enabled : t -> bool) =
          fun (x4875 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4875) "enabled")
        let (set_enabled : t -> bool -> unit) =
          fun (x4876 : t) ->
            fun (x4877 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4876) "enabled"
                (Ojs.bool_to_js x4877)
        let (get_busy : t -> bool) =
          fun (x4878 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4878) "busy")
        let (set_busy : t -> bool -> unit) =
          fun (x4879 : t) ->
            fun (x4880 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4879) "busy"
                (Ojs.bool_to_js x4880)
        let (get_ignoreFocusOut : t -> bool) =
          fun (x4881 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x4881) "ignoreFocusOut")
        let (set_ignoreFocusOut : t -> bool -> unit) =
          fun (x4882 : t) ->
            fun (x4883 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4882) "ignoreFocusOut"
                (Ojs.bool_to_js x4883)
        let (show : t -> unit) =
          fun (x4884 : t) -> ignore (Ojs.call (t_to_js x4884) "show" [||])
        let (hide : t -> unit) =
          fun (x4885 : t) -> ignore (Ojs.call (t_to_js x4885) "hide" [||])
        let (get_onDidHide : t -> unit vscode_Event) =
          fun (x4886 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x4886) "onDidHide")
        let (set_onDidHide : t -> unit vscode_Event -> unit) =
          fun (x4888 : t) ->
            fun (x4889 : unit vscode_Event) ->
              Ojs.set_prop_ascii (t_to_js x4888) "onDidHide"
                (vscode_Event_to_js Ojs.unit_to_js x4889)
        let (dispose : t -> unit) =
          fun (x4891 : t) -> ignore (Ojs.call (t_to_js x4891) "dispose" [||])
      end
    module QuickPick =
      struct
        type 'T t = 'T vscode_QuickPick
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x4894 : Ojs.t) -> vscode_QuickPick_of_js __T_of_js x4894
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x4892 : __T vscode_QuickPick) ->
              vscode_QuickPick_to_js __T_to_js x4892
        let (get_value : 'T t -> string) =
          fun (x4896 : 'T t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4896) "value")
        let (set_value : 'T t -> string -> unit) =
          fun (x4898 : 'T t) ->
            fun (x4899 : string) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4898) "value"
                (Ojs.string_to_js x4899)
        let (get_placeholder : 'T t -> string or_undefined) =
          fun (x4901 : 'T t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4901) "placeholder")
        let (set_placeholder : 'T t -> string or_undefined -> unit) =
          fun (x4904 : 'T t) ->
            fun (x4905 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4904) "placeholder"
                (or_undefined_to_js Ojs.string_to_js x4905)
        let (get_onDidChangeValue : 'T t -> string vscode_Event) =
          fun (x4908 : 'T t) ->
            vscode_Event_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4908)
                 "onDidChangeValue")
        let (get_onDidAccept : 'T t -> unit vscode_Event) =
          fun (x4911 : 'T t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4911) "onDidAccept")
        let (get_buttons : 'T t -> vscode_QuickInputButton list) =
          fun (x4914 : 'T t) ->
            Ojs.list_of_js vscode_QuickInputButton_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4914) "buttons")
        let (set_buttons : 'T t -> vscode_QuickInputButton list -> unit) =
          fun (x4917 : 'T t) ->
            fun (x4918 : vscode_QuickInputButton list) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4917) "buttons"
                (Ojs.list_to_js vscode_QuickInputButton_to_js x4918)
        let (get_onDidTriggerButton :
          'T t -> vscode_QuickInputButton vscode_Event) =
          fun (x4921 : 'T t) ->
            vscode_Event_of_js vscode_QuickInputButton_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4921)
                 "onDidTriggerButton")
        let (get_items : 'T t -> 'T list) =
          fun (x4924 : 'T t) ->
            Ojs.list_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4924) "items")
        let (set_items : 'T t -> 'T list -> unit) =
          fun (x4927 : 'T t) ->
            fun (x4928 : 'T list) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4927) "items"
                (Ojs.list_to_js Obj.magic x4928)
        let (get_canSelectMany : 'T t -> bool) =
          fun (x4931 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4931) "canSelectMany")
        let (set_canSelectMany : 'T t -> bool -> unit) =
          fun (x4933 : 'T t) ->
            fun (x4934 : bool) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4933) "canSelectMany"
                (Ojs.bool_to_js x4934)
        let (get_matchOnDescription : 'T t -> bool) =
          fun (x4936 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4936)
                 "matchOnDescription")
        let (set_matchOnDescription : 'T t -> bool -> unit) =
          fun (x4938 : 'T t) ->
            fun (x4939 : bool) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4938)
                "matchOnDescription" (Ojs.bool_to_js x4939)
        let (get_matchOnDetail : 'T t -> bool) =
          fun (x4941 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4941) "matchOnDetail")
        let (set_matchOnDetail : 'T t -> bool -> unit) =
          fun (x4943 : 'T t) ->
            fun (x4944 : bool) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4943) "matchOnDetail"
                (Ojs.bool_to_js x4944)
        let (get_activeItems : 'T t -> 'T list) =
          fun (x4946 : 'T t) ->
            Ojs.list_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4946) "activeItems")
        let (set_activeItems : 'T t -> 'T list -> unit) =
          fun (x4949 : 'T t) ->
            fun (x4950 : 'T list) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4949) "activeItems"
                (Ojs.list_to_js Obj.magic x4950)
        let (get_onDidChangeActive : 'T t -> 'T list vscode_Event) =
          fun (x4953 : 'T t) ->
            vscode_Event_of_js
              (fun (x4955 : Ojs.t) -> Ojs.list_of_js Obj.magic x4955)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4953)
                 "onDidChangeActive")
        let (get_selectedItems : 'T t -> 'T list) =
          fun (x4957 : 'T t) ->
            Ojs.list_of_js Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4957) "selectedItems")
        let (set_selectedItems : 'T t -> 'T list -> unit) =
          fun (x4960 : 'T t) ->
            fun (x4961 : 'T list) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4960) "selectedItems"
                (Ojs.list_to_js Obj.magic x4961)
        let (get_onDidChangeSelection : 'T t -> 'T list vscode_Event) =
          fun (x4964 : 'T t) ->
            vscode_Event_of_js
              (fun (x4966 : Ojs.t) -> Ojs.list_of_js Obj.magic x4966)
              (Ojs.get_prop_ascii (t_to_js Obj.magic x4964)
                 "onDidChangeSelection")
        let (cast : 'T t -> vscode_QuickInput) =
          fun (x4968 : 'T t) ->
            vscode_QuickInput_of_js (t_to_js Obj.magic x4968)
      end
    module InputBox =
      struct
        type t = vscode_InputBox
        let rec t_of_js : Ojs.t -> t =
          fun (x4971 : Ojs.t) -> vscode_InputBox_of_js x4971
        and t_to_js : t -> Ojs.t =
          fun (x4970 : vscode_InputBox) -> vscode_InputBox_to_js x4970
        let (get_value : t -> string) =
          fun (x4972 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4972) "value")
        let (set_value : t -> string -> unit) =
          fun (x4973 : t) ->
            fun (x4974 : string) ->
              Ojs.set_prop_ascii (t_to_js x4973) "value"
                (Ojs.string_to_js x4974)
        let (get_placeholder : t -> string or_undefined) =
          fun (x4975 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4975) "placeholder")
        let (set_placeholder : t -> string or_undefined -> unit) =
          fun (x4977 : t) ->
            fun (x4978 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x4977) "placeholder"
                (or_undefined_to_js Ojs.string_to_js x4978)
        let (get_password : t -> bool) =
          fun (x4980 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4980) "password")
        let (set_password : t -> bool -> unit) =
          fun (x4981 : t) ->
            fun (x4982 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4981) "password"
                (Ojs.bool_to_js x4982)
        let (get_onDidChangeValue : t -> string vscode_Event) =
          fun (x4983 : t) ->
            vscode_Event_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4983) "onDidChangeValue")
        let (get_onDidAccept : t -> unit vscode_Event) =
          fun (x4985 : t) ->
            vscode_Event_of_js Ojs.unit_of_js
              (Ojs.get_prop_ascii (t_to_js x4985) "onDidAccept")
        let (get_buttons : t -> vscode_QuickInputButton list) =
          fun (x4987 : t) ->
            Ojs.list_of_js vscode_QuickInputButton_of_js
              (Ojs.get_prop_ascii (t_to_js x4987) "buttons")
        let (set_buttons : t -> vscode_QuickInputButton list -> unit) =
          fun (x4989 : t) ->
            fun (x4990 : vscode_QuickInputButton list) ->
              Ojs.set_prop_ascii (t_to_js x4989) "buttons"
                (Ojs.list_to_js vscode_QuickInputButton_to_js x4990)
        let (get_onDidTriggerButton :
          t -> vscode_QuickInputButton vscode_Event) =
          fun (x4992 : t) ->
            vscode_Event_of_js vscode_QuickInputButton_of_js
              (Ojs.get_prop_ascii (t_to_js x4992) "onDidTriggerButton")
        let (get_prompt : t -> string or_undefined) =
          fun (x4994 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4994) "prompt")
        let (set_prompt : t -> string or_undefined -> unit) =
          fun (x4996 : t) ->
            fun (x4997 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x4996) "prompt"
                (or_undefined_to_js Ojs.string_to_js x4997)
        let (get_validationMessage : t -> string or_undefined) =
          fun (x4999 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4999) "validationMessage")
        let (set_validationMessage : t -> string or_undefined -> unit) =
          fun (x5001 : t) ->
            fun (x5002 : string or_undefined) ->
              Ojs.set_prop_ascii (t_to_js x5001) "validationMessage"
                (or_undefined_to_js Ojs.string_to_js x5002)
        let (cast : t -> vscode_QuickInput) =
          fun (x5004 : t) -> vscode_QuickInput_of_js (t_to_js x5004)
      end
    module QuickInputButton =
      struct
        type t = vscode_QuickInputButton
        let rec t_of_js : Ojs.t -> t =
          fun (x5006 : Ojs.t) -> vscode_QuickInputButton_of_js x5006
        and t_to_js : t -> Ojs.t =
          fun (x5005 : vscode_QuickInputButton) ->
            vscode_QuickInputButton_to_js x5005
        let (get_iconPath :
          t -> (vscode_ThemeIcon, vscode_Uri, anonymous_interface_14) union3)
          =
          fun (x5007 : t) ->
            union3_of_js vscode_ThemeIcon_of_js vscode_Uri_of_js
              anonymous_interface_14_of_js
              (Ojs.get_prop_ascii (t_to_js x5007) "iconPath")
        let (get_tooltip : t -> string or_undefined) =
          fun (x5011 : t) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5011) "tooltip")
      end
    module QuickInputButtons =
      struct
        type t = vscode_QuickInputButtons
        let rec t_of_js : Ojs.t -> t =
          fun (x5014 : Ojs.t) -> vscode_QuickInputButtons_of_js x5014
        and t_to_js : t -> Ojs.t =
          fun (x5013 : vscode_QuickInputButtons) ->
            vscode_QuickInputButtons_to_js x5013
        let (get_Back : unit -> vscode_QuickInputButton) =
          fun () ->
            vscode_QuickInputButton_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "QuickInputButtons") "Back")
        let (create : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "QuickInputButtons") [||])
      end
    module TextDocumentContentChangeEvent =
      struct
        type t = vscode_TextDocumentContentChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5016 : Ojs.t) ->
            vscode_TextDocumentContentChangeEvent_of_js x5016
        and t_to_js : t -> Ojs.t =
          fun (x5015 : vscode_TextDocumentContentChangeEvent) ->
            vscode_TextDocumentContentChangeEvent_to_js x5015
        let (get_range : t -> vscode_Range) =
          fun (x5017 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x5017) "range")
        let (get_rangeOffset : t -> float) =
          fun (x5018 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x5018) "rangeOffset")
        let (get_rangeLength : t -> float) =
          fun (x5019 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x5019) "rangeLength")
        let (get_text : t -> string) =
          fun (x5020 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5020) "text")
      end
    module TextDocumentChangeEvent =
      struct
        type t = vscode_TextDocumentChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5022 : Ojs.t) -> vscode_TextDocumentChangeEvent_of_js x5022
        and t_to_js : t -> Ojs.t =
          fun (x5021 : vscode_TextDocumentChangeEvent) ->
            vscode_TextDocumentChangeEvent_to_js x5021
        let (get_document : t -> vscode_TextDocument) =
          fun (x5023 : t) ->
            vscode_TextDocument_of_js
              (Ojs.get_prop_ascii (t_to_js x5023) "document")
        let (get_contentChanges :
          t -> vscode_TextDocumentContentChangeEvent list) =
          fun (x5024 : t) ->
            Ojs.list_of_js vscode_TextDocumentContentChangeEvent_of_js
              (Ojs.get_prop_ascii (t_to_js x5024) "contentChanges")
      end
    module TextDocumentSaveReason =
      struct
        type t = vscode_TextDocumentSaveReason
        let rec t_of_js : Ojs.t -> t =
          fun (x5027 : Ojs.t) -> vscode_TextDocumentSaveReason_of_js x5027
        and t_to_js : t -> Ojs.t =
          fun (x5026 : vscode_TextDocumentSaveReason) ->
            vscode_TextDocumentSaveReason_to_js x5026
      end
    module TextDocumentWillSaveEvent =
      struct
        type t = vscode_TextDocumentWillSaveEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5029 : Ojs.t) -> vscode_TextDocumentWillSaveEvent_of_js x5029
        and t_to_js : t -> Ojs.t =
          fun (x5028 : vscode_TextDocumentWillSaveEvent) ->
            vscode_TextDocumentWillSaveEvent_to_js x5028
        let (get_document : t -> vscode_TextDocument) =
          fun (x5030 : t) ->
            vscode_TextDocument_of_js
              (Ojs.get_prop_ascii (t_to_js x5030) "document")
        let (get_reason : t -> vscode_TextDocumentSaveReason) =
          fun (x5031 : t) ->
            vscode_TextDocumentSaveReason_of_js
              (Ojs.get_prop_ascii (t_to_js x5031) "reason")
        let (waitUntil :
          t -> thenable:vscode_TextEdit list _Thenable -> unit) =
          fun (x5035 : t) ->
            fun ~thenable:(x5032 : vscode_TextEdit list _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5035) "waitUntil"
                   [|(_Thenable_to_js
                        (fun (x5033 : vscode_TextEdit list) ->
                           Ojs.list_to_js vscode_TextEdit_to_js x5033) x5032)|])
        let (waitUntil' : t -> thenable:any _Thenable -> unit) =
          fun (x5038 : t) ->
            fun ~thenable:(x5036 : any _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5038) "waitUntil"
                   [|(_Thenable_to_js any_to_js x5036)|])
      end
    module FileWillCreateEvent =
      struct
        type t = vscode_FileWillCreateEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5040 : Ojs.t) -> vscode_FileWillCreateEvent_of_js x5040
        and t_to_js : t -> Ojs.t =
          fun (x5039 : vscode_FileWillCreateEvent) ->
            vscode_FileWillCreateEvent_to_js x5039
        let (get_files : t -> vscode_Uri list) =
          fun (x5041 : t) ->
            Ojs.list_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5041) "files")
        let (waitUntil :
          t -> thenable:vscode_WorkspaceEdit _Thenable -> unit) =
          fun (x5045 : t) ->
            fun ~thenable:(x5043 : vscode_WorkspaceEdit _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5045) "waitUntil"
                   [|(_Thenable_to_js vscode_WorkspaceEdit_to_js x5043)|])
        let (waitUntil' : t -> thenable:any _Thenable -> unit) =
          fun (x5048 : t) ->
            fun ~thenable:(x5046 : any _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5048) "waitUntil"
                   [|(_Thenable_to_js any_to_js x5046)|])
      end
    module FileCreateEvent =
      struct
        type t = vscode_FileCreateEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5050 : Ojs.t) -> vscode_FileCreateEvent_of_js x5050
        and t_to_js : t -> Ojs.t =
          fun (x5049 : vscode_FileCreateEvent) ->
            vscode_FileCreateEvent_to_js x5049
        let (get_files : t -> vscode_Uri list) =
          fun (x5051 : t) ->
            Ojs.list_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5051) "files")
      end
    module FileWillDeleteEvent =
      struct
        type t = vscode_FileWillDeleteEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5054 : Ojs.t) -> vscode_FileWillDeleteEvent_of_js x5054
        and t_to_js : t -> Ojs.t =
          fun (x5053 : vscode_FileWillDeleteEvent) ->
            vscode_FileWillDeleteEvent_to_js x5053
        let (get_files : t -> vscode_Uri list) =
          fun (x5055 : t) ->
            Ojs.list_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5055) "files")
        let (waitUntil :
          t -> thenable:vscode_WorkspaceEdit _Thenable -> unit) =
          fun (x5059 : t) ->
            fun ~thenable:(x5057 : vscode_WorkspaceEdit _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5059) "waitUntil"
                   [|(_Thenable_to_js vscode_WorkspaceEdit_to_js x5057)|])
        let (waitUntil' : t -> thenable:any _Thenable -> unit) =
          fun (x5062 : t) ->
            fun ~thenable:(x5060 : any _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5062) "waitUntil"
                   [|(_Thenable_to_js any_to_js x5060)|])
      end
    module FileDeleteEvent =
      struct
        type t = vscode_FileDeleteEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5064 : Ojs.t) -> vscode_FileDeleteEvent_of_js x5064
        and t_to_js : t -> Ojs.t =
          fun (x5063 : vscode_FileDeleteEvent) ->
            vscode_FileDeleteEvent_to_js x5063
        let (get_files : t -> vscode_Uri list) =
          fun (x5065 : t) ->
            Ojs.list_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5065) "files")
      end
    module FileWillRenameEvent =
      struct
        type t = vscode_FileWillRenameEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5068 : Ojs.t) -> vscode_FileWillRenameEvent_of_js x5068
        and t_to_js : t -> Ojs.t =
          fun (x5067 : vscode_FileWillRenameEvent) ->
            vscode_FileWillRenameEvent_to_js x5067
        let (get_files : t -> anonymous_interface_19 list) =
          fun (x5069 : t) ->
            Ojs.list_of_js anonymous_interface_19_of_js
              (Ojs.get_prop_ascii (t_to_js x5069) "files")
        let (waitUntil :
          t -> thenable:vscode_WorkspaceEdit _Thenable -> unit) =
          fun (x5073 : t) ->
            fun ~thenable:(x5071 : vscode_WorkspaceEdit _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5073) "waitUntil"
                   [|(_Thenable_to_js vscode_WorkspaceEdit_to_js x5071)|])
        let (waitUntil' : t -> thenable:any _Thenable -> unit) =
          fun (x5076 : t) ->
            fun ~thenable:(x5074 : any _Thenable) ->
              ignore
                (Ojs.call (t_to_js x5076) "waitUntil"
                   [|(_Thenable_to_js any_to_js x5074)|])
      end
    module FileRenameEvent =
      struct
        type t = vscode_FileRenameEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5078 : Ojs.t) -> vscode_FileRenameEvent_of_js x5078
        and t_to_js : t -> Ojs.t =
          fun (x5077 : vscode_FileRenameEvent) ->
            vscode_FileRenameEvent_to_js x5077
        let (get_files : t -> anonymous_interface_19 list) =
          fun (x5079 : t) ->
            Ojs.list_of_js anonymous_interface_19_of_js
              (Ojs.get_prop_ascii (t_to_js x5079) "files")
      end
    module WorkspaceFoldersChangeEvent =
      struct
        type t = vscode_WorkspaceFoldersChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5082 : Ojs.t) ->
            vscode_WorkspaceFoldersChangeEvent_of_js x5082
        and t_to_js : t -> Ojs.t =
          fun (x5081 : vscode_WorkspaceFoldersChangeEvent) ->
            vscode_WorkspaceFoldersChangeEvent_to_js x5081
        let (get_added : t -> vscode_WorkspaceFolder list) =
          fun (x5083 : t) ->
            Ojs.list_of_js vscode_WorkspaceFolder_of_js
              (Ojs.get_prop_ascii (t_to_js x5083) "added")
        let (get_removed : t -> vscode_WorkspaceFolder list) =
          fun (x5085 : t) ->
            Ojs.list_of_js vscode_WorkspaceFolder_of_js
              (Ojs.get_prop_ascii (t_to_js x5085) "removed")
      end
    module WorkspaceFolder =
      struct
        type t = vscode_WorkspaceFolder
        let rec t_of_js : Ojs.t -> t =
          fun (x5088 : Ojs.t) -> vscode_WorkspaceFolder_of_js x5088
        and t_to_js : t -> Ojs.t =
          fun (x5087 : vscode_WorkspaceFolder) ->
            vscode_WorkspaceFolder_to_js x5087
        let (get_uri : t -> vscode_Uri) =
          fun (x5089 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x5089) "uri")
        let (get_name : t -> string) =
          fun (x5090 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5090) "name")
        let (get_index : t -> float) =
          fun (x5091 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x5091) "index")
      end
    module Workspace =
      struct
        let (fs : vscode_FileSystem) =
          vscode_FileSystem_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "fs")
        let (rootPath : string or_undefined) =
          or_undefined_of_js Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "rootPath")
        let (workspaceFolders : vscode_WorkspaceFolder list or_undefined) =
          or_undefined_of_js
            (fun (x5093 : Ojs.t) ->
               Ojs.list_of_js vscode_WorkspaceFolder_of_js x5093)
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "workspaceFolders")
        let (name : string or_undefined) =
          or_undefined_of_js Ojs.string_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "name")
        let (workspaceFile : vscode_Uri or_undefined) =
          or_undefined_of_js vscode_Uri_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "workspaceFile")
        let (onDidChangeWorkspaceFolders :
          vscode_WorkspaceFoldersChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_WorkspaceFoldersChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidChangeWorkspaceFolders")
        let (getWorkspaceFolder :
          uri:vscode_Uri -> vscode_WorkspaceFolder or_undefined) =
          fun ~uri:(x5098 : vscode_Uri) ->
            or_undefined_of_js vscode_WorkspaceFolder_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "workspace") "getWorkspaceFolder"
                 [|(vscode_Uri_to_js x5098)|])
        let (asRelativePath :
          pathOrUri:vscode_Uri or_string ->
            ?includeWorkspaceFolder:bool -> unit -> string)
          =
          fun ~pathOrUri:(x5100 : vscode_Uri or_string) ->
            fun ?includeWorkspaceFolder:(x5101 : bool option) ->
              fun () ->
                Ojs.string_of_js
                  (let x5105 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "workspace" in
                   Ojs.call (Ojs.get_prop_ascii x5105 "asRelativePath")
                     "apply"
                     [|x5105;((let x5102 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5102 "push"
                                    [|(or_string_to_js vscode_Uri_to_js x5100)|]);
                               (match x5101 with
                                | Some x5103 ->
                                    ignore
                                      (Ojs.call x5102 "push"
                                         [|(Ojs.bool_to_js x5103)|])
                                | None -> ());
                               x5102))|])
        let (updateWorkspaceFolders :
          start:float ->
            deleteCount:float or_null_or_undefined ->
              workspaceFoldersToAdd:anonymous_interface_36 list -> bool)
          =
          fun ~start:(x5106 : float) ->
            fun ~deleteCount:(x5107 : float or_null_or_undefined) ->
              fun
                ~workspaceFoldersToAdd:(x5108 : anonymous_interface_36 list)
                ->
                Ojs.bool_of_js
                  (let x5112 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "workspace" in
                   Ojs.call
                     (Ojs.get_prop_ascii x5112 "updateWorkspaceFolders")
                     "apply"
                     [|x5112;((let x5109 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5109 "push"
                                    [|(Ojs.float_to_js x5106)|]);
                               ignore
                                 (Ojs.call x5109 "push"
                                    [|(or_null_or_undefined_to_js
                                         Ojs.float_to_js x5107)|]);
                               List.iter
                                 (fun (x5110 : anonymous_interface_36) ->
                                    ignore
                                      (Ojs.call x5109 "push"
                                         [|(anonymous_interface_36_to_js
                                              x5110)|])) x5108;
                               x5109))|])
        let (createFileSystemWatcher :
          globPattern:vscode_GlobPattern ->
            ?ignoreCreateEvents:bool ->
              ?ignoreChangeEvents:bool ->
                ?ignoreDeleteEvents:bool -> unit -> vscode_FileSystemWatcher)
          =
          fun ~globPattern:(x5113 : vscode_GlobPattern) ->
            fun ?ignoreCreateEvents:(x5114 : bool option) ->
              fun ?ignoreChangeEvents:(x5115 : bool option) ->
                fun ?ignoreDeleteEvents:(x5116 : bool option) ->
                  fun () ->
                    vscode_FileSystemWatcher_of_js
                      (let x5121 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode")
                           "workspace" in
                       Ojs.call
                         (Ojs.get_prop_ascii x5121 "createFileSystemWatcher")
                         "apply"
                         [|x5121;((let x5117 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x5117 "push"
                                        [|(vscode_GlobPattern_to_js x5113)|]);
                                   (match x5114 with
                                    | Some x5120 ->
                                        ignore
                                          (Ojs.call x5117 "push"
                                             [|(Ojs.bool_to_js x5120)|])
                                    | None -> ());
                                   (match x5115 with
                                    | Some x5119 ->
                                        ignore
                                          (Ojs.call x5117 "push"
                                             [|(Ojs.bool_to_js x5119)|])
                                    | None -> ());
                                   (match x5116 with
                                    | Some x5118 ->
                                        ignore
                                          (Ojs.call x5117 "push"
                                             [|(Ojs.bool_to_js x5118)|])
                                    | None -> ());
                                   x5117))|])
        let (findFiles :
          include_:vscode_GlobPattern ->
            ?exclude:vscode_GlobPattern or_null ->
              ?maxResults:float ->
                ?token:vscode_CancellationToken ->
                  unit -> vscode_Uri list _Thenable)
          =
          fun ~include_:(x5122 : vscode_GlobPattern) ->
            fun ?exclude:(x5123 : vscode_GlobPattern or_null option) ->
              fun ?maxResults:(x5124 : float option) ->
                fun ?token:(x5125 : vscode_CancellationToken option) ->
                  fun () ->
                    _Thenable_of_js
                      (fun (x5132 : Ojs.t) ->
                         Ojs.list_of_js vscode_Uri_of_js x5132)
                      (let x5131 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode")
                           "workspace" in
                       Ojs.call (Ojs.get_prop_ascii x5131 "findFiles")
                         "apply"
                         [|x5131;((let x5126 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x5126 "push"
                                        [|(vscode_GlobPattern_to_js x5122)|]);
                                   (match x5123 with
                                    | Some x5129 ->
                                        ignore
                                          (Ojs.call x5126 "push"
                                             [|(or_null_to_js
                                                  vscode_GlobPattern_to_js
                                                  x5129)|])
                                    | None -> ());
                                   (match x5124 with
                                    | Some x5128 ->
                                        ignore
                                          (Ojs.call x5126 "push"
                                             [|(Ojs.float_to_js x5128)|])
                                    | None -> ());
                                   (match x5125 with
                                    | Some x5127 ->
                                        ignore
                                          (Ojs.call x5126 "push"
                                             [|(vscode_CancellationToken_to_js
                                                  x5127)|])
                                    | None -> ());
                                   x5126))|])
        let (saveAll : ?includeUntitled:bool -> unit -> bool _Thenable) =
          fun ?includeUntitled:(x5134 : bool option) ->
            fun () ->
              _Thenable_of_js Ojs.bool_of_js
                (let x5137 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "workspace" in
                 Ojs.call (Ojs.get_prop_ascii x5137 "saveAll") "apply"
                   [|x5137;((let x5135 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5134 with
                              | Some x5136 ->
                                  ignore
                                    (Ojs.call x5135 "push"
                                       [|(Ojs.bool_to_js x5136)|])
                              | None -> ());
                             x5135))|])
        let (applyEdit : edit:vscode_WorkspaceEdit -> bool _Thenable) =
          fun ~edit:(x5139 : vscode_WorkspaceEdit) ->
            _Thenable_of_js Ojs.bool_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "workspace") "applyEdit"
                 [|(vscode_WorkspaceEdit_to_js x5139)|])
        let (textDocuments : vscode_TextDocument list) =
          Ojs.list_of_js vscode_TextDocument_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "textDocuments")
        let (openTextDocument :
          uri:vscode_Uri -> vscode_TextDocument _Thenable) =
          fun ~uri:(x5142 : vscode_Uri) ->
            _Thenable_of_js vscode_TextDocument_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "workspace") "openTextDocument"
                 [|(vscode_Uri_to_js x5142)|])
        let (openTextDocument :
          fileName:string -> vscode_TextDocument _Thenable) =
          fun ~fileName:(x5144 : string) ->
            _Thenable_of_js vscode_TextDocument_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "workspace") "openTextDocument"
                 [|(Ojs.string_to_js x5144)|])
        let (openTextDocument :
          ?options:anonymous_interface_12 ->
            unit -> vscode_TextDocument _Thenable)
          =
          fun ?options:(x5146 : anonymous_interface_12 option) ->
            fun () ->
              _Thenable_of_js vscode_TextDocument_of_js
                (let x5149 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "workspace" in
                 Ojs.call (Ojs.get_prop_ascii x5149 "openTextDocument")
                   "apply"
                   [|x5149;((let x5147 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5146 with
                              | Some x5148 ->
                                  ignore
                                    (Ojs.call x5147 "push"
                                       [|(anonymous_interface_12_to_js x5148)|])
                              | None -> ());
                             x5147))|])
        let (registerTextDocumentContentProvider :
          scheme:string ->
            provider:vscode_TextDocumentContentProvider -> vscode_Disposable)
          =
          fun ~scheme:(x5151 : string) ->
            fun ~provider:(x5152 : vscode_TextDocumentContentProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "workspace")
                   "registerTextDocumentContentProvider"
                   [|(Ojs.string_to_js x5151);(vscode_TextDocumentContentProvider_to_js
                                                 x5152)|])
        let (onDidOpenTextDocument : vscode_TextDocument vscode_Event) =
          vscode_Event_of_js vscode_TextDocument_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidOpenTextDocument")
        let (onDidCloseTextDocument : vscode_TextDocument vscode_Event) =
          vscode_Event_of_js vscode_TextDocument_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidCloseTextDocument")
        let (onDidChangeTextDocument :
          vscode_TextDocumentChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_TextDocumentChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidChangeTextDocument")
        let (onWillSaveTextDocument :
          vscode_TextDocumentWillSaveEvent vscode_Event) =
          vscode_Event_of_js vscode_TextDocumentWillSaveEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onWillSaveTextDocument")
        let (onDidSaveTextDocument : vscode_TextDocument vscode_Event) =
          vscode_Event_of_js vscode_TextDocument_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidSaveTextDocument")
        let (onWillCreateFiles : vscode_FileWillCreateEvent vscode_Event) =
          vscode_Event_of_js vscode_FileWillCreateEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onWillCreateFiles")
        let (onDidCreateFiles : vscode_FileCreateEvent vscode_Event) =
          vscode_Event_of_js vscode_FileCreateEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidCreateFiles")
        let (onWillDeleteFiles : vscode_FileWillDeleteEvent vscode_Event) =
          vscode_Event_of_js vscode_FileWillDeleteEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onWillDeleteFiles")
        let (onDidDeleteFiles : vscode_FileDeleteEvent vscode_Event) =
          vscode_Event_of_js vscode_FileDeleteEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidDeleteFiles")
        let (onWillRenameFiles : vscode_FileWillRenameEvent vscode_Event) =
          vscode_Event_of_js vscode_FileWillRenameEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onWillRenameFiles")
        let (onDidRenameFiles : vscode_FileRenameEvent vscode_Event) =
          vscode_Event_of_js vscode_FileRenameEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidRenameFiles")
        let (getConfiguration :
          ?section:string or_undefined ->
            ?scope:vscode_ConfigurationScope or_null ->
              unit -> vscode_WorkspaceConfiguration)
          =
          fun ?section:(x5164 : string or_undefined option) ->
            fun ?scope:(x5165 : vscode_ConfigurationScope or_null option) ->
              fun () ->
                vscode_WorkspaceConfiguration_of_js
                  (let x5171 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "workspace" in
                   Ojs.call (Ojs.get_prop_ascii x5171 "getConfiguration")
                     "apply"
                     [|x5171;((let x5166 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x5164 with
                                | Some x5169 ->
                                    ignore
                                      (Ojs.call x5166 "push"
                                         [|(or_undefined_to_js
                                              Ojs.string_to_js x5169)|])
                                | None -> ());
                               (match x5165 with
                                | Some x5167 ->
                                    ignore
                                      (Ojs.call x5166 "push"
                                         [|(or_null_to_js
                                              vscode_ConfigurationScope_to_js
                                              x5167)|])
                                | None -> ());
                               x5166))|])
        let (onDidChangeConfiguration :
          vscode_ConfigurationChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_ConfigurationChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "workspace") "onDidChangeConfiguration")
        let (registerTaskProvider :
          type_:string ->
            provider:vscode_Task vscode_TaskProvider -> vscode_Disposable)
          =
          fun ~type_:(x5173 : string) ->
            fun ~provider:(x5174 : vscode_Task vscode_TaskProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "workspace")
                   "registerTaskProvider"
                   [|(Ojs.string_to_js x5173);(vscode_TaskProvider_to_js
                                                 vscode_Task_to_js x5174)|])
        let (registerFileSystemProvider :
          scheme:string ->
            provider:vscode_FileSystemProvider ->
              ?options:anonymous_interface_9 -> unit -> vscode_Disposable)
          =
          fun ~scheme:(x5176 : string) ->
            fun ~provider:(x5177 : vscode_FileSystemProvider) ->
              fun ?options:(x5178 : anonymous_interface_9 option) ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x5181 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "workspace" in
                     Ojs.call
                       (Ojs.get_prop_ascii x5181 "registerFileSystemProvider")
                       "apply"
                       [|x5181;((let x5179 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5179 "push"
                                      [|(Ojs.string_to_js x5176)|]);
                                 ignore
                                   (Ojs.call x5179 "push"
                                      [|(vscode_FileSystemProvider_to_js
                                           x5177)|]);
                                 (match x5178 with
                                  | Some x5180 ->
                                      ignore
                                        (Ojs.call x5179 "push"
                                           [|(anonymous_interface_9_to_js
                                                x5180)|])
                                  | None -> ());
                                 x5179))|])
      end
    module ConfigurationScope =
      struct
        type t = vscode_ConfigurationScope
        let rec t_of_js : Ojs.t -> t =
          fun (x5183 : Ojs.t) -> vscode_ConfigurationScope_of_js x5183
        and t_to_js : t -> Ojs.t =
          fun (x5182 : vscode_ConfigurationScope) ->
            vscode_ConfigurationScope_to_js x5182
      end
    module ConfigurationChangeEvent =
      struct
        type t = vscode_ConfigurationChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5185 : Ojs.t) -> vscode_ConfigurationChangeEvent_of_js x5185
        and t_to_js : t -> Ojs.t =
          fun (x5184 : vscode_ConfigurationChangeEvent) ->
            vscode_ConfigurationChangeEvent_to_js x5184
        let (affectsConfiguration :
          t ->
            section:string ->
              ?scope:vscode_ConfigurationScope -> unit -> bool)
          =
          fun (x5190 : t) ->
            fun ~section:(x5186 : string) ->
              fun ?scope:(x5187 : vscode_ConfigurationScope option) ->
                fun () ->
                  Ojs.bool_of_js
                    (let x5191 = t_to_js x5190 in
                     Ojs.call
                       (Ojs.get_prop_ascii x5191 "affectsConfiguration")
                       "apply"
                       [|x5191;((let x5188 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5188 "push"
                                      [|(Ojs.string_to_js x5186)|]);
                                 (match x5187 with
                                  | Some x5189 ->
                                      ignore
                                        (Ojs.call x5188 "push"
                                           [|(vscode_ConfigurationScope_to_js
                                                x5189)|])
                                  | None -> ());
                                 x5188))|])
      end
    module Languages =
      struct
        let (getLanguages : unit -> string list _Thenable) =
          fun () ->
            _Thenable_of_js
              (fun (x5192 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x5192)
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "languages") "getLanguages" [||])
        let (setTextDocumentLanguage :
          document:vscode_TextDocument ->
            languageId:string -> vscode_TextDocument _Thenable)
          =
          fun ~document:(x5194 : vscode_TextDocument) ->
            fun ~languageId:(x5195 : string) ->
              _Thenable_of_js vscode_TextDocument_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "setTextDocumentLanguage"
                   [|(vscode_TextDocument_to_js x5194);(Ojs.string_to_js
                                                          x5195)|])
        let (match_ :
          selector:vscode_DocumentSelector ->
            document:vscode_TextDocument -> float)
          =
          fun ~selector:(x5197 : vscode_DocumentSelector) ->
            fun ~document:(x5198 : vscode_TextDocument) ->
              Ojs.float_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "match"
                   [|(vscode_DocumentSelector_to_js x5197);(vscode_TextDocument_to_js
                                                              x5198)|])
        let (onDidChangeDiagnostics :
          vscode_DiagnosticChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_DiagnosticChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "languages") "onDidChangeDiagnostics")
        let (getDiagnostics : resource:vscode_Uri -> vscode_Diagnostic list)
          =
          fun ~resource:(x5200 : vscode_Uri) ->
            Ojs.list_of_js vscode_Diagnostic_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "languages") "getDiagnostics"
                 [|(vscode_Uri_to_js x5200)|])
        let (getDiagnostics :
          unit -> (vscode_Uri * vscode_Diagnostic list) list) =
          fun () ->
            Ojs.list_of_js
              (fun (x5202 : Ojs.t) ->
                 let x5203 = x5202 in
                 ((vscode_Uri_of_js (Ojs.array_get x5203 0)),
                   (Ojs.list_of_js vscode_Diagnostic_of_js
                      (Ojs.array_get x5203 1))))
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "languages") "getDiagnostics" [||])
        let (createDiagnosticCollection :
          ?name:string -> unit -> vscode_DiagnosticCollection) =
          fun ?name:(x5205 : string option) ->
            fun () ->
              vscode_DiagnosticCollection_of_js
                (let x5208 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "languages" in
                 Ojs.call
                   (Ojs.get_prop_ascii x5208 "createDiagnosticCollection")
                   "apply"
                   [|x5208;((let x5206 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5205 with
                              | Some x5207 ->
                                  ignore
                                    (Ojs.call x5206 "push"
                                       [|(Ojs.string_to_js x5207)|])
                              | None -> ());
                             x5206))|])
        let (registerCompletionItemProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_CompletionItem vscode_CompletionItemProvider ->
              triggerCharacters:string list -> vscode_Disposable)
          =
          fun ~selector:(x5209 : vscode_DocumentSelector) ->
            fun
              ~provider:(x5210 :
                          vscode_CompletionItem vscode_CompletionItemProvider)
              ->
              fun ~triggerCharacters:(x5211 : string list) ->
                vscode_Disposable_of_js
                  (let x5215 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "languages" in
                   Ojs.call
                     (Ojs.get_prop_ascii x5215
                        "registerCompletionItemProvider") "apply"
                     [|x5215;((let x5212 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5212 "push"
                                    [|(vscode_DocumentSelector_to_js x5209)|]);
                               ignore
                                 (Ojs.call x5212 "push"
                                    [|(vscode_CompletionItemProvider_to_js
                                         vscode_CompletionItem_to_js x5210)|]);
                               List.iter
                                 (fun (x5213 : string) ->
                                    ignore
                                      (Ojs.call x5212 "push"
                                         [|(Ojs.string_to_js x5213)|])) x5211;
                               x5212))|])
        let (registerCodeActionsProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_CodeAction vscode_CodeActionProvider ->
              ?metadata:vscode_CodeActionProviderMetadata ->
                unit -> vscode_Disposable)
          =
          fun ~selector:(x5216 : vscode_DocumentSelector) ->
            fun
              ~provider:(x5217 : vscode_CodeAction vscode_CodeActionProvider)
              ->
              fun
                ?metadata:(x5218 : vscode_CodeActionProviderMetadata option)
                ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x5222 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "languages" in
                     Ojs.call
                       (Ojs.get_prop_ascii x5222
                          "registerCodeActionsProvider") "apply"
                       [|x5222;((let x5219 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5219 "push"
                                      [|(vscode_DocumentSelector_to_js x5216)|]);
                                 ignore
                                   (Ojs.call x5219 "push"
                                      [|(vscode_CodeActionProvider_to_js
                                           vscode_CodeAction_to_js x5217)|]);
                                 (match x5218 with
                                  | Some x5220 ->
                                      ignore
                                        (Ojs.call x5219 "push"
                                           [|(vscode_CodeActionProviderMetadata_to_js
                                                x5220)|])
                                  | None -> ());
                                 x5219))|])
        let (registerCodeLensProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_CodeLens vscode_CodeLensProvider ->
              vscode_Disposable)
          =
          fun ~selector:(x5223 : vscode_DocumentSelector) ->
            fun ~provider:(x5224 : vscode_CodeLens vscode_CodeLensProvider)
              ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerCodeLensProvider"
                   [|(vscode_DocumentSelector_to_js x5223);(vscode_CodeLensProvider_to_js
                                                              vscode_CodeLens_to_js
                                                              x5224)|])
        let (registerDefinitionProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DefinitionProvider -> vscode_Disposable)
          =
          fun ~selector:(x5226 : vscode_DocumentSelector) ->
            fun ~provider:(x5227 : vscode_DefinitionProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerDefinitionProvider"
                   [|(vscode_DocumentSelector_to_js x5226);(vscode_DefinitionProvider_to_js
                                                              x5227)|])
        let (registerImplementationProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_ImplementationProvider -> vscode_Disposable)
          =
          fun ~selector:(x5228 : vscode_DocumentSelector) ->
            fun ~provider:(x5229 : vscode_ImplementationProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerImplementationProvider"
                   [|(vscode_DocumentSelector_to_js x5228);(vscode_ImplementationProvider_to_js
                                                              x5229)|])
        let (registerTypeDefinitionProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_TypeDefinitionProvider -> vscode_Disposable)
          =
          fun ~selector:(x5230 : vscode_DocumentSelector) ->
            fun ~provider:(x5231 : vscode_TypeDefinitionProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerTypeDefinitionProvider"
                   [|(vscode_DocumentSelector_to_js x5230);(vscode_TypeDefinitionProvider_to_js
                                                              x5231)|])
        let (registerDeclarationProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DeclarationProvider -> vscode_Disposable)
          =
          fun ~selector:(x5232 : vscode_DocumentSelector) ->
            fun ~provider:(x5233 : vscode_DeclarationProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerDeclarationProvider"
                   [|(vscode_DocumentSelector_to_js x5232);(vscode_DeclarationProvider_to_js
                                                              x5233)|])
        let (registerHoverProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_HoverProvider -> vscode_Disposable)
          =
          fun ~selector:(x5234 : vscode_DocumentSelector) ->
            fun ~provider:(x5235 : vscode_HoverProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerHoverProvider"
                   [|(vscode_DocumentSelector_to_js x5234);(vscode_HoverProvider_to_js
                                                              x5235)|])
        let (registerEvaluatableExpressionProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_EvaluatableExpressionProvider ->
              vscode_Disposable)
          =
          fun ~selector:(x5236 : vscode_DocumentSelector) ->
            fun ~provider:(x5237 : vscode_EvaluatableExpressionProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerEvaluatableExpressionProvider"
                   [|(vscode_DocumentSelector_to_js x5236);(vscode_EvaluatableExpressionProvider_to_js
                                                              x5237)|])
        let (registerInlineValuesProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_InlineValuesProvider -> vscode_Disposable)
          =
          fun ~selector:(x5238 : vscode_DocumentSelector) ->
            fun ~provider:(x5239 : vscode_InlineValuesProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerInlineValuesProvider"
                   [|(vscode_DocumentSelector_to_js x5238);(vscode_InlineValuesProvider_to_js
                                                              x5239)|])
        let (registerDocumentHighlightProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentHighlightProvider -> vscode_Disposable)
          =
          fun ~selector:(x5240 : vscode_DocumentSelector) ->
            fun ~provider:(x5241 : vscode_DocumentHighlightProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerDocumentHighlightProvider"
                   [|(vscode_DocumentSelector_to_js x5240);(vscode_DocumentHighlightProvider_to_js
                                                              x5241)|])
        let (registerDocumentSymbolProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentSymbolProvider ->
              ?metaData:vscode_DocumentSymbolProviderMetadata ->
                unit -> vscode_Disposable)
          =
          fun ~selector:(x5242 : vscode_DocumentSelector) ->
            fun ~provider:(x5243 : vscode_DocumentSymbolProvider) ->
              fun
                ?metaData:(x5244 :
                            vscode_DocumentSymbolProviderMetadata option)
                ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x5247 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "languages" in
                     Ojs.call
                       (Ojs.get_prop_ascii x5247
                          "registerDocumentSymbolProvider") "apply"
                       [|x5247;((let x5245 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5245 "push"
                                      [|(vscode_DocumentSelector_to_js x5242)|]);
                                 ignore
                                   (Ojs.call x5245 "push"
                                      [|(vscode_DocumentSymbolProvider_to_js
                                           x5243)|]);
                                 (match x5244 with
                                  | Some x5246 ->
                                      ignore
                                        (Ojs.call x5245 "push"
                                           [|(vscode_DocumentSymbolProviderMetadata_to_js
                                                x5246)|])
                                  | None -> ());
                                 x5245))|])
        let (registerWorkspaceSymbolProvider :
          provider:vscode_SymbolInformation vscode_WorkspaceSymbolProvider ->
            vscode_Disposable)
          =
          fun
            ~provider:(x5248 :
                        vscode_SymbolInformation
                          vscode_WorkspaceSymbolProvider)
            ->
            vscode_Disposable_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "languages") "registerWorkspaceSymbolProvider"
                 [|(vscode_WorkspaceSymbolProvider_to_js
                      vscode_SymbolInformation_to_js x5248)|])
        let (registerReferenceProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_ReferenceProvider -> vscode_Disposable)
          =
          fun ~selector:(x5250 : vscode_DocumentSelector) ->
            fun ~provider:(x5251 : vscode_ReferenceProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerReferenceProvider"
                   [|(vscode_DocumentSelector_to_js x5250);(vscode_ReferenceProvider_to_js
                                                              x5251)|])
        let (registerRenameProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_RenameProvider -> vscode_Disposable)
          =
          fun ~selector:(x5252 : vscode_DocumentSelector) ->
            fun ~provider:(x5253 : vscode_RenameProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerRenameProvider"
                   [|(vscode_DocumentSelector_to_js x5252);(vscode_RenameProvider_to_js
                                                              x5253)|])
        let (registerDocumentSemanticTokensProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentSemanticTokensProvider ->
              legend:vscode_SemanticTokensLegend -> vscode_Disposable)
          =
          fun ~selector:(x5254 : vscode_DocumentSelector) ->
            fun ~provider:(x5255 : vscode_DocumentSemanticTokensProvider) ->
              fun ~legend:(x5256 : vscode_SemanticTokensLegend) ->
                vscode_Disposable_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                     "registerDocumentSemanticTokensProvider"
                     [|(vscode_DocumentSelector_to_js x5254);(vscode_DocumentSemanticTokensProvider_to_js
                                                                x5255);(
                       vscode_SemanticTokensLegend_to_js x5256)|])
        let (registerDocumentRangeSemanticTokensProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentRangeSemanticTokensProvider ->
              legend:vscode_SemanticTokensLegend -> vscode_Disposable)
          =
          fun ~selector:(x5257 : vscode_DocumentSelector) ->
            fun
              ~provider:(x5258 : vscode_DocumentRangeSemanticTokensProvider)
              ->
              fun ~legend:(x5259 : vscode_SemanticTokensLegend) ->
                vscode_Disposable_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                     "registerDocumentRangeSemanticTokensProvider"
                     [|(vscode_DocumentSelector_to_js x5257);(vscode_DocumentRangeSemanticTokensProvider_to_js
                                                                x5258);(
                       vscode_SemanticTokensLegend_to_js x5259)|])
        let (registerDocumentFormattingEditProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentFormattingEditProvider ->
              vscode_Disposable)
          =
          fun ~selector:(x5260 : vscode_DocumentSelector) ->
            fun ~provider:(x5261 : vscode_DocumentFormattingEditProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerDocumentFormattingEditProvider"
                   [|(vscode_DocumentSelector_to_js x5260);(vscode_DocumentFormattingEditProvider_to_js
                                                              x5261)|])
        let (registerDocumentRangeFormattingEditProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentRangeFormattingEditProvider ->
              vscode_Disposable)
          =
          fun ~selector:(x5262 : vscode_DocumentSelector) ->
            fun
              ~provider:(x5263 : vscode_DocumentRangeFormattingEditProvider)
              ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerDocumentRangeFormattingEditProvider"
                   [|(vscode_DocumentSelector_to_js x5262);(vscode_DocumentRangeFormattingEditProvider_to_js
                                                              x5263)|])
        let (registerOnTypeFormattingEditProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_OnTypeFormattingEditProvider ->
              firstTriggerCharacter:string ->
                moreTriggerCharacter:string list -> vscode_Disposable)
          =
          fun ~selector:(x5264 : vscode_DocumentSelector) ->
            fun ~provider:(x5265 : vscode_OnTypeFormattingEditProvider) ->
              fun ~firstTriggerCharacter:(x5266 : string) ->
                fun ~moreTriggerCharacter:(x5267 : string list) ->
                  vscode_Disposable_of_js
                    (let x5270 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "languages" in
                     Ojs.call
                       (Ojs.get_prop_ascii x5270
                          "registerOnTypeFormattingEditProvider") "apply"
                       [|x5270;((let x5268 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5268 "push"
                                      [|(vscode_DocumentSelector_to_js x5264)|]);
                                 ignore
                                   (Ojs.call x5268 "push"
                                      [|(vscode_OnTypeFormattingEditProvider_to_js
                                           x5265)|]);
                                 ignore
                                   (Ojs.call x5268 "push"
                                      [|(Ojs.string_to_js x5266)|]);
                                 List.iter
                                   (fun (x5269 : string) ->
                                      ignore
                                        (Ojs.call x5268 "push"
                                           [|(Ojs.string_to_js x5269)|]))
                                   x5267;
                                 x5268))|])
        let (registerSignatureHelpProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_SignatureHelpProvider ->
              triggerCharacters:string list -> vscode_Disposable)
          =
          fun ~selector:(x5271 : vscode_DocumentSelector) ->
            fun ~provider:(x5272 : vscode_SignatureHelpProvider) ->
              fun ~triggerCharacters:(x5273 : string list) ->
                vscode_Disposable_of_js
                  (let x5276 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "languages" in
                   Ojs.call
                     (Ojs.get_prop_ascii x5276
                        "registerSignatureHelpProvider") "apply"
                     [|x5276;((let x5274 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5274 "push"
                                    [|(vscode_DocumentSelector_to_js x5271)|]);
                               ignore
                                 (Ojs.call x5274 "push"
                                    [|(vscode_SignatureHelpProvider_to_js
                                         x5272)|]);
                               List.iter
                                 (fun (x5275 : string) ->
                                    ignore
                                      (Ojs.call x5274 "push"
                                         [|(Ojs.string_to_js x5275)|])) x5273;
                               x5274))|])
        let (registerSignatureHelpProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_SignatureHelpProvider ->
              metadata:vscode_SignatureHelpProviderMetadata ->
                vscode_Disposable)
          =
          fun ~selector:(x5277 : vscode_DocumentSelector) ->
            fun ~provider:(x5278 : vscode_SignatureHelpProvider) ->
              fun ~metadata:(x5279 : vscode_SignatureHelpProviderMetadata) ->
                vscode_Disposable_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                     "registerSignatureHelpProvider"
                     [|(vscode_DocumentSelector_to_js x5277);(vscode_SignatureHelpProvider_to_js
                                                                x5278);(
                       vscode_SignatureHelpProviderMetadata_to_js x5279)|])
        let (registerDocumentLinkProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentLink vscode_DocumentLinkProvider ->
              vscode_Disposable)
          =
          fun ~selector:(x5280 : vscode_DocumentSelector) ->
            fun
              ~provider:(x5281 :
                          vscode_DocumentLink vscode_DocumentLinkProvider)
              ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerDocumentLinkProvider"
                   [|(vscode_DocumentSelector_to_js x5280);(vscode_DocumentLinkProvider_to_js
                                                              vscode_DocumentLink_to_js
                                                              x5281)|])
        let (registerColorProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_DocumentColorProvider -> vscode_Disposable)
          =
          fun ~selector:(x5283 : vscode_DocumentSelector) ->
            fun ~provider:(x5284 : vscode_DocumentColorProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerColorProvider"
                   [|(vscode_DocumentSelector_to_js x5283);(vscode_DocumentColorProvider_to_js
                                                              x5284)|])
        let (registerFoldingRangeProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_FoldingRangeProvider -> vscode_Disposable)
          =
          fun ~selector:(x5285 : vscode_DocumentSelector) ->
            fun ~provider:(x5286 : vscode_FoldingRangeProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerFoldingRangeProvider"
                   [|(vscode_DocumentSelector_to_js x5285);(vscode_FoldingRangeProvider_to_js
                                                              x5286)|])
        let (registerSelectionRangeProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_SelectionRangeProvider -> vscode_Disposable)
          =
          fun ~selector:(x5287 : vscode_DocumentSelector) ->
            fun ~provider:(x5288 : vscode_SelectionRangeProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerSelectionRangeProvider"
                   [|(vscode_DocumentSelector_to_js x5287);(vscode_SelectionRangeProvider_to_js
                                                              x5288)|])
        let (registerCallHierarchyProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_CallHierarchyProvider -> vscode_Disposable)
          =
          fun ~selector:(x5289 : vscode_DocumentSelector) ->
            fun ~provider:(x5290 : vscode_CallHierarchyProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerCallHierarchyProvider"
                   [|(vscode_DocumentSelector_to_js x5289);(vscode_CallHierarchyProvider_to_js
                                                              x5290)|])
        let (registerLinkedEditingRangeProvider :
          selector:vscode_DocumentSelector ->
            provider:vscode_LinkedEditingRangeProvider -> vscode_Disposable)
          =
          fun ~selector:(x5291 : vscode_DocumentSelector) ->
            fun ~provider:(x5292 : vscode_LinkedEditingRangeProvider) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "registerLinkedEditingRangeProvider"
                   [|(vscode_DocumentSelector_to_js x5291);(vscode_LinkedEditingRangeProvider_to_js
                                                              x5292)|])
        let (setLanguageConfiguration :
          language:string ->
            configuration:vscode_LanguageConfiguration -> vscode_Disposable)
          =
          fun ~language:(x5293 : string) ->
            fun ~configuration:(x5294 : vscode_LanguageConfiguration) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "languages")
                   "setLanguageConfiguration"
                   [|(Ojs.string_to_js x5293);(vscode_LanguageConfiguration_to_js
                                                 x5294)|])
      end
    module SourceControlInputBox =
      struct
        type t = vscode_SourceControlInputBox
        let rec t_of_js : Ojs.t -> t =
          fun (x5296 : Ojs.t) -> vscode_SourceControlInputBox_of_js x5296
        and t_to_js : t -> Ojs.t =
          fun (x5295 : vscode_SourceControlInputBox) ->
            vscode_SourceControlInputBox_to_js x5295
        let (get_value : t -> string) =
          fun (x5297 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5297) "value")
        let (set_value : t -> string -> unit) =
          fun (x5298 : t) ->
            fun (x5299 : string) ->
              Ojs.set_prop_ascii (t_to_js x5298) "value"
                (Ojs.string_to_js x5299)
        let (get_placeholder : t -> string) =
          fun (x5300 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5300) "placeholder")
        let (set_placeholder : t -> string -> unit) =
          fun (x5301 : t) ->
            fun (x5302 : string) ->
              Ojs.set_prop_ascii (t_to_js x5301) "placeholder"
                (Ojs.string_to_js x5302)
        let (get_visible : t -> bool) =
          fun (x5303 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x5303) "visible")
        let (set_visible : t -> bool -> unit) =
          fun (x5304 : t) ->
            fun (x5305 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5304) "visible"
                (Ojs.bool_to_js x5305)
      end
    module QuickDiffProvider =
      struct
        type t = vscode_QuickDiffProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x5307 : Ojs.t) -> vscode_QuickDiffProvider_of_js x5307
        and t_to_js : t -> Ojs.t =
          fun (x5306 : vscode_QuickDiffProvider) ->
            vscode_QuickDiffProvider_to_js x5306
        let (provideOriginalResource :
          t ->
            uri:vscode_Uri ->
              token:vscode_CancellationToken ->
                vscode_Uri vscode_ProviderResult)
          =
          fun (x5310 : t) ->
            fun ~uri:(x5308 : vscode_Uri) ->
              fun ~token:(x5309 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js vscode_Uri_of_js
                  (Ojs.call (t_to_js x5310) "provideOriginalResource"
                     [|(vscode_Uri_to_js x5308);(vscode_CancellationToken_to_js
                                                   x5309)|])
      end
    module SourceControlResourceThemableDecorations =
      struct
        type t = vscode_SourceControlResourceThemableDecorations
        let rec t_of_js : Ojs.t -> t =
          fun (x5313 : Ojs.t) ->
            vscode_SourceControlResourceThemableDecorations_of_js x5313
        and t_to_js : t -> Ojs.t =
          fun (x5312 : vscode_SourceControlResourceThemableDecorations) ->
            vscode_SourceControlResourceThemableDecorations_to_js x5312
        let (get_iconPath : t -> vscode_Uri or_string) =
          fun (x5314 : t) ->
            or_string_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5314) "iconPath")
      end
    module SourceControlResourceDecorations =
      struct
        type t = vscode_SourceControlResourceDecorations
        let rec t_of_js : Ojs.t -> t =
          fun (x5317 : Ojs.t) ->
            vscode_SourceControlResourceDecorations_of_js x5317
        and t_to_js : t -> Ojs.t =
          fun (x5316 : vscode_SourceControlResourceDecorations) ->
            vscode_SourceControlResourceDecorations_to_js x5316
        let (get_strikeThrough : t -> bool) =
          fun (x5318 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x5318) "strikeThrough")
        let (get_faded : t -> bool) =
          fun (x5319 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x5319) "faded")
        let (get_tooltip : t -> string) =
          fun (x5320 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5320) "tooltip")
        let (get_light :
          t -> vscode_SourceControlResourceThemableDecorations) =
          fun (x5321 : t) ->
            vscode_SourceControlResourceThemableDecorations_of_js
              (Ojs.get_prop_ascii (t_to_js x5321) "light")
        let (get_dark : t -> vscode_SourceControlResourceThemableDecorations)
          =
          fun (x5322 : t) ->
            vscode_SourceControlResourceThemableDecorations_of_js
              (Ojs.get_prop_ascii (t_to_js x5322) "dark")
        let (cast : t -> vscode_SourceControlResourceThemableDecorations) =
          fun (x5323 : t) ->
            vscode_SourceControlResourceThemableDecorations_of_js
              (t_to_js x5323)
      end
    module SourceControlResourceState =
      struct
        type t = vscode_SourceControlResourceState
        let rec t_of_js : Ojs.t -> t =
          fun (x5325 : Ojs.t) ->
            vscode_SourceControlResourceState_of_js x5325
        and t_to_js : t -> Ojs.t =
          fun (x5324 : vscode_SourceControlResourceState) ->
            vscode_SourceControlResourceState_to_js x5324
        let (get_resourceUri : t -> vscode_Uri) =
          fun (x5326 : t) ->
            vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5326) "resourceUri")
        let (get_command : t -> vscode_Command) =
          fun (x5327 : t) ->
            vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x5327) "command")
        let (get_decorations : t -> vscode_SourceControlResourceDecorations)
          =
          fun (x5328 : t) ->
            vscode_SourceControlResourceDecorations_of_js
              (Ojs.get_prop_ascii (t_to_js x5328) "decorations")
        let (get_contextValue : t -> string) =
          fun (x5329 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5329) "contextValue")
      end
    module SourceControlResourceGroup =
      struct
        type t = vscode_SourceControlResourceGroup
        let rec t_of_js : Ojs.t -> t =
          fun (x5331 : Ojs.t) ->
            vscode_SourceControlResourceGroup_of_js x5331
        and t_to_js : t -> Ojs.t =
          fun (x5330 : vscode_SourceControlResourceGroup) ->
            vscode_SourceControlResourceGroup_to_js x5330
        let (get_id : t -> string) =
          fun (x5332 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5332) "id")
        let (get_label : t -> string) =
          fun (x5333 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5333) "label")
        let (set_label : t -> string -> unit) =
          fun (x5334 : t) ->
            fun (x5335 : string) ->
              Ojs.set_prop_ascii (t_to_js x5334) "label"
                (Ojs.string_to_js x5335)
        let (get_hideWhenEmpty : t -> bool) =
          fun (x5336 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x5336) "hideWhenEmpty")
        let (set_hideWhenEmpty : t -> bool -> unit) =
          fun (x5337 : t) ->
            fun (x5338 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5337) "hideWhenEmpty"
                (Ojs.bool_to_js x5338)
        let (get_resourceStates :
          t -> vscode_SourceControlResourceState list) =
          fun (x5339 : t) ->
            Ojs.list_of_js vscode_SourceControlResourceState_of_js
              (Ojs.get_prop_ascii (t_to_js x5339) "resourceStates")
        let (set_resourceStates :
          t -> vscode_SourceControlResourceState list -> unit) =
          fun (x5341 : t) ->
            fun (x5342 : vscode_SourceControlResourceState list) ->
              Ojs.set_prop_ascii (t_to_js x5341) "resourceStates"
                (Ojs.list_to_js vscode_SourceControlResourceState_to_js x5342)
        let (dispose : t -> unit) =
          fun (x5344 : t) -> ignore (Ojs.call (t_to_js x5344) "dispose" [||])
      end
    module SourceControl =
      struct
        type t = vscode_SourceControl
        let rec t_of_js : Ojs.t -> t =
          fun (x5346 : Ojs.t) -> vscode_SourceControl_of_js x5346
        and t_to_js : t -> Ojs.t =
          fun (x5345 : vscode_SourceControl) ->
            vscode_SourceControl_to_js x5345
        let (get_id : t -> string) =
          fun (x5347 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5347) "id")
        let (get_label : t -> string) =
          fun (x5348 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5348) "label")
        let (get_rootUri : t -> vscode_Uri or_undefined) =
          fun (x5349 : t) ->
            or_undefined_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5349) "rootUri")
        let (get_inputBox : t -> vscode_SourceControlInputBox) =
          fun (x5351 : t) ->
            vscode_SourceControlInputBox_of_js
              (Ojs.get_prop_ascii (t_to_js x5351) "inputBox")
        let (get_count : t -> float) =
          fun (x5352 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x5352) "count")
        let (set_count : t -> float -> unit) =
          fun (x5353 : t) ->
            fun (x5354 : float) ->
              Ojs.set_prop_ascii (t_to_js x5353) "count"
                (Ojs.float_to_js x5354)
        let (get_quickDiffProvider : t -> vscode_QuickDiffProvider) =
          fun (x5355 : t) ->
            vscode_QuickDiffProvider_of_js
              (Ojs.get_prop_ascii (t_to_js x5355) "quickDiffProvider")
        let (set_quickDiffProvider : t -> vscode_QuickDiffProvider -> unit) =
          fun (x5356 : t) ->
            fun (x5357 : vscode_QuickDiffProvider) ->
              Ojs.set_prop_ascii (t_to_js x5356) "quickDiffProvider"
                (vscode_QuickDiffProvider_to_js x5357)
        let (get_commitTemplate : t -> string) =
          fun (x5358 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5358) "commitTemplate")
        let (set_commitTemplate : t -> string -> unit) =
          fun (x5359 : t) ->
            fun (x5360 : string) ->
              Ojs.set_prop_ascii (t_to_js x5359) "commitTemplate"
                (Ojs.string_to_js x5360)
        let (get_acceptInputCommand : t -> vscode_Command) =
          fun (x5361 : t) ->
            vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x5361) "acceptInputCommand")
        let (set_acceptInputCommand : t -> vscode_Command -> unit) =
          fun (x5362 : t) ->
            fun (x5363 : vscode_Command) ->
              Ojs.set_prop_ascii (t_to_js x5362) "acceptInputCommand"
                (vscode_Command_to_js x5363)
        let (get_statusBarCommands : t -> vscode_Command list) =
          fun (x5364 : t) ->
            Ojs.list_of_js vscode_Command_of_js
              (Ojs.get_prop_ascii (t_to_js x5364) "statusBarCommands")
        let (set_statusBarCommands : t -> vscode_Command list -> unit) =
          fun (x5366 : t) ->
            fun (x5367 : vscode_Command list) ->
              Ojs.set_prop_ascii (t_to_js x5366) "statusBarCommands"
                (Ojs.list_to_js vscode_Command_to_js x5367)
        let (createResourceGroup :
          t -> id:string -> label:string -> vscode_SourceControlResourceGroup)
          =
          fun (x5371 : t) ->
            fun ~id:(x5369 : string) ->
              fun ~label:(x5370 : string) ->
                vscode_SourceControlResourceGroup_of_js
                  (Ojs.call (t_to_js x5371) "createResourceGroup"
                     [|(Ojs.string_to_js x5369);(Ojs.string_to_js x5370)|])
        let (dispose : t -> unit) =
          fun (x5372 : t) -> ignore (Ojs.call (t_to_js x5372) "dispose" [||])
      end
    module Scm =
      struct
        let (inputBox : vscode_SourceControlInputBox) =
          vscode_SourceControlInputBox_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "scm") "inputBox")
        let (createSourceControl :
          id:string ->
            label:string ->
              ?rootUri:vscode_Uri -> unit -> vscode_SourceControl)
          =
          fun ~id:(x5373 : string) ->
            fun ~label:(x5374 : string) ->
              fun ?rootUri:(x5375 : vscode_Uri option) ->
                fun () ->
                  vscode_SourceControl_of_js
                    (let x5378 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "scm" in
                     Ojs.call
                       (Ojs.get_prop_ascii x5378 "createSourceControl")
                       "apply"
                       [|x5378;((let x5376 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5376 "push"
                                      [|(Ojs.string_to_js x5373)|]);
                                 ignore
                                   (Ojs.call x5376 "push"
                                      [|(Ojs.string_to_js x5374)|]);
                                 (match x5375 with
                                  | Some x5377 ->
                                      ignore
                                        (Ojs.call x5376 "push"
                                           [|(vscode_Uri_to_js x5377)|])
                                  | None -> ());
                                 x5376))|])
      end
    module DebugProtocolMessage =
      struct
        type t = vscode_DebugProtocolMessage
        let rec t_of_js : Ojs.t -> t =
          fun (x5380 : Ojs.t) -> vscode_DebugProtocolMessage_of_js x5380
        and t_to_js : t -> Ojs.t =
          fun (x5379 : vscode_DebugProtocolMessage) ->
            vscode_DebugProtocolMessage_to_js x5379
      end
    module DebugProtocolSource =
      struct
        type t = vscode_DebugProtocolSource
        let rec t_of_js : Ojs.t -> t =
          fun (x5382 : Ojs.t) -> vscode_DebugProtocolSource_of_js x5382
        and t_to_js : t -> Ojs.t =
          fun (x5381 : vscode_DebugProtocolSource) ->
            vscode_DebugProtocolSource_to_js x5381
      end
    module DebugProtocolBreakpoint =
      struct
        type t = vscode_DebugProtocolBreakpoint
        let rec t_of_js : Ojs.t -> t =
          fun (x5384 : Ojs.t) -> vscode_DebugProtocolBreakpoint_of_js x5384
        and t_to_js : t -> Ojs.t =
          fun (x5383 : vscode_DebugProtocolBreakpoint) ->
            vscode_DebugProtocolBreakpoint_to_js x5383
      end
    module DebugConfiguration =
      struct
        type t = vscode_DebugConfiguration
        let rec t_of_js : Ojs.t -> t =
          fun (x5386 : Ojs.t) -> vscode_DebugConfiguration_of_js x5386
        and t_to_js : t -> Ojs.t =
          fun (x5385 : vscode_DebugConfiguration) ->
            vscode_DebugConfiguration_to_js x5385
        let (get_type : t -> string) =
          fun (x5387 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5387) "type")
        let (set_type : t -> string -> unit) =
          fun (x5388 : t) ->
            fun (x5389 : string) ->
              Ojs.set_prop_ascii (t_to_js x5388) "type"
                (Ojs.string_to_js x5389)
        let (get_name : t -> string) =
          fun (x5390 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5390) "name")
        let (set_name : t -> string -> unit) =
          fun (x5391 : t) ->
            fun (x5392 : string) ->
              Ojs.set_prop_ascii (t_to_js x5391) "name"
                (Ojs.string_to_js x5392)
        let (get_request : t -> string) =
          fun (x5393 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5393) "request")
        let (set_request : t -> string -> unit) =
          fun (x5394 : t) ->
            fun (x5395 : string) ->
              Ojs.set_prop_ascii (t_to_js x5394) "request"
                (Ojs.string_to_js x5395)
        let (get : t -> string -> any) =
          fun (x5396 : t) ->
            fun (x5397 : string) ->
              any_of_js
                (Ojs.get_prop (t_to_js x5396) (Ojs.string_to_js x5397))
        let (set : t -> string -> any -> unit) =
          fun (x5398 : t) ->
            fun (x5399 : string) ->
              fun (x5400 : any) ->
                Ojs.set_prop (t_to_js x5398) (Ojs.string_to_js x5399)
                  (any_to_js x5400)
      end
    module DebugSession =
      struct
        type t = vscode_DebugSession
        let rec t_of_js : Ojs.t -> t =
          fun (x5402 : Ojs.t) -> vscode_DebugSession_of_js x5402
        and t_to_js : t -> Ojs.t =
          fun (x5401 : vscode_DebugSession) ->
            vscode_DebugSession_to_js x5401
        let (get_id : t -> string) =
          fun (x5403 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5403) "id")
        let (get_type : t -> string) =
          fun (x5404 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5404) "type")
        let (get_name : t -> string) =
          fun (x5405 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5405) "name")
        let (set_name : t -> string -> unit) =
          fun (x5406 : t) ->
            fun (x5407 : string) ->
              Ojs.set_prop_ascii (t_to_js x5406) "name"
                (Ojs.string_to_js x5407)
        let (get_workspaceFolder : t -> vscode_WorkspaceFolder or_undefined)
          =
          fun (x5408 : t) ->
            or_undefined_of_js vscode_WorkspaceFolder_of_js
              (Ojs.get_prop_ascii (t_to_js x5408) "workspaceFolder")
        let (get_configuration : t -> vscode_DebugConfiguration) =
          fun (x5410 : t) ->
            vscode_DebugConfiguration_of_js
              (Ojs.get_prop_ascii (t_to_js x5410) "configuration")
        let (customRequest :
          t -> command:string -> ?args:any -> unit -> any _Thenable) =
          fun (x5415 : t) ->
            fun ~command:(x5411 : string) ->
              fun ?args:(x5412 : any option) ->
                fun () ->
                  _Thenable_of_js any_of_js
                    (let x5416 = t_to_js x5415 in
                     Ojs.call (Ojs.get_prop_ascii x5416 "customRequest")
                       "apply"
                       [|x5416;((let x5413 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5413 "push"
                                      [|(Ojs.string_to_js x5411)|]);
                                 (match x5412 with
                                  | Some x5414 ->
                                      ignore
                                        (Ojs.call x5413 "push"
                                           [|(any_to_js x5414)|])
                                  | None -> ());
                                 x5413))|])
        let (getDebugProtocolBreakpoint :
          t ->
            breakpoint:vscode_Breakpoint ->
              vscode_DebugProtocolBreakpoint or_undefined _Thenable)
          =
          fun (x5419 : t) ->
            fun ~breakpoint:(x5418 : vscode_Breakpoint) ->
              _Thenable_of_js
                (fun (x5420 : Ojs.t) ->
                   or_undefined_of_js vscode_DebugProtocolBreakpoint_of_js
                     x5420)
                (Ojs.call (t_to_js x5419) "getDebugProtocolBreakpoint"
                   [|(vscode_Breakpoint_to_js x5418)|])
      end
    module DebugSessionCustomEvent =
      struct
        type t = vscode_DebugSessionCustomEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5423 : Ojs.t) -> vscode_DebugSessionCustomEvent_of_js x5423
        and t_to_js : t -> Ojs.t =
          fun (x5422 : vscode_DebugSessionCustomEvent) ->
            vscode_DebugSessionCustomEvent_to_js x5422
        let (get_session : t -> vscode_DebugSession) =
          fun (x5424 : t) ->
            vscode_DebugSession_of_js
              (Ojs.get_prop_ascii (t_to_js x5424) "session")
        let (get_event : t -> string) =
          fun (x5425 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5425) "event")
        let (get_body : t -> any) =
          fun (x5426 : t) ->
            any_of_js (Ojs.get_prop_ascii (t_to_js x5426) "body")
      end
    module DebugConfigurationProvider =
      struct
        type t = vscode_DebugConfigurationProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x5428 : Ojs.t) ->
            vscode_DebugConfigurationProvider_of_js x5428
        and t_to_js : t -> Ojs.t =
          fun (x5427 : vscode_DebugConfigurationProvider) ->
            vscode_DebugConfigurationProvider_to_js x5427
        let (provideDebugConfigurations :
          t ->
            folder:vscode_WorkspaceFolder or_undefined ->
              ?token:vscode_CancellationToken ->
                unit -> vscode_DebugConfiguration list vscode_ProviderResult)
          =
          fun (x5434 : t) ->
            fun ~folder:(x5429 : vscode_WorkspaceFolder or_undefined) ->
              fun ?token:(x5430 : vscode_CancellationToken option) ->
                fun () ->
                  vscode_ProviderResult_of_js
                    (fun (x5436 : Ojs.t) ->
                       Ojs.list_of_js vscode_DebugConfiguration_of_js x5436)
                    (let x5435 = t_to_js x5434 in
                     Ojs.call
                       (Ojs.get_prop_ascii x5435 "provideDebugConfigurations")
                       "apply"
                       [|x5435;((let x5431 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5431 "push"
                                      [|(or_undefined_to_js
                                           vscode_WorkspaceFolder_to_js x5429)|]);
                                 (match x5430 with
                                  | Some x5432 ->
                                      ignore
                                        (Ojs.call x5431 "push"
                                           [|(vscode_CancellationToken_to_js
                                                x5432)|])
                                  | None -> ());
                                 x5431))|])
        let (resolveDebugConfiguration :
          t ->
            folder:vscode_WorkspaceFolder or_undefined ->
              debugConfiguration:vscode_DebugConfiguration ->
                ?token:vscode_CancellationToken ->
                  unit -> vscode_DebugConfiguration vscode_ProviderResult)
          =
          fun (x5444 : t) ->
            fun ~folder:(x5438 : vscode_WorkspaceFolder or_undefined) ->
              fun ~debugConfiguration:(x5439 : vscode_DebugConfiguration) ->
                fun ?token:(x5440 : vscode_CancellationToken option) ->
                  fun () ->
                    vscode_ProviderResult_of_js
                      vscode_DebugConfiguration_of_js
                      (let x5445 = t_to_js x5444 in
                       Ojs.call
                         (Ojs.get_prop_ascii x5445
                            "resolveDebugConfiguration") "apply"
                         [|x5445;((let x5441 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x5441 "push"
                                        [|(or_undefined_to_js
                                             vscode_WorkspaceFolder_to_js
                                             x5438)|]);
                                   ignore
                                     (Ojs.call x5441 "push"
                                        [|(vscode_DebugConfiguration_to_js
                                             x5439)|]);
                                   (match x5440 with
                                    | Some x5442 ->
                                        ignore
                                          (Ojs.call x5441 "push"
                                             [|(vscode_CancellationToken_to_js
                                                  x5442)|])
                                    | None -> ());
                                   x5441))|])
        let (resolveDebugConfigurationWithSubstitutedVariables :
          t ->
            folder:vscode_WorkspaceFolder or_undefined ->
              debugConfiguration:vscode_DebugConfiguration ->
                ?token:vscode_CancellationToken ->
                  unit -> vscode_DebugConfiguration vscode_ProviderResult)
          =
          fun (x5453 : t) ->
            fun ~folder:(x5447 : vscode_WorkspaceFolder or_undefined) ->
              fun ~debugConfiguration:(x5448 : vscode_DebugConfiguration) ->
                fun ?token:(x5449 : vscode_CancellationToken option) ->
                  fun () ->
                    vscode_ProviderResult_of_js
                      vscode_DebugConfiguration_of_js
                      (let x5454 = t_to_js x5453 in
                       Ojs.call
                         (Ojs.get_prop_ascii x5454
                            "resolveDebugConfigurationWithSubstitutedVariables")
                         "apply"
                         [|x5454;((let x5450 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x5450 "push"
                                        [|(or_undefined_to_js
                                             vscode_WorkspaceFolder_to_js
                                             x5447)|]);
                                   ignore
                                     (Ojs.call x5450 "push"
                                        [|(vscode_DebugConfiguration_to_js
                                             x5448)|]);
                                   (match x5449 with
                                    | Some x5451 ->
                                        ignore
                                          (Ojs.call x5450 "push"
                                             [|(vscode_CancellationToken_to_js
                                                  x5451)|])
                                    | None -> ());
                                   x5450))|])
      end
    module DebugAdapterExecutable =
      struct
        type t = vscode_DebugAdapterExecutable
        let rec t_of_js : Ojs.t -> t =
          fun (x5457 : Ojs.t) -> vscode_DebugAdapterExecutable_of_js x5457
        and t_to_js : t -> Ojs.t =
          fun (x5456 : vscode_DebugAdapterExecutable) ->
            vscode_DebugAdapterExecutable_to_js x5456
        let (create :
          command:string ->
            ?args:string list ->
              ?options:vscode_DebugAdapterExecutableOptions -> unit -> t)
          =
          fun ~command:(x5458 : string) ->
            fun ?args:(x5459 : string list option) ->
              fun
                ?options:(x5460 :
                           vscode_DebugAdapterExecutableOptions option)
                ->
                fun () ->
                  t_of_js
                    (Ojs.new_obj_arr
                       (Ojs.get_prop_ascii
                          (Ojs.get_prop_ascii Ojs.global "vscode")
                          "DebugAdapterExecutable")
                       (let x5461 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x5461 "push" [|(Ojs.string_to_js x5458)|]);
                        (match x5459 with
                         | Some x5463 ->
                             ignore
                               (Ojs.call x5461 "push"
                                  [|(Ojs.list_to_js Ojs.string_to_js x5463)|])
                         | None -> ());
                        (match x5460 with
                         | Some x5462 ->
                             ignore
                               (Ojs.call x5461 "push"
                                  [|(vscode_DebugAdapterExecutableOptions_to_js
                                       x5462)|])
                         | None -> ());
                        x5461))
        let (get_command : t -> string) =
          fun (x5465 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5465) "command")
        let (get_args : t -> string list) =
          fun (x5466 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5466) "args")
        let (get_options : t -> vscode_DebugAdapterExecutableOptions) =
          fun (x5468 : t) ->
            vscode_DebugAdapterExecutableOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x5468) "options")
      end
    module DebugAdapterExecutableOptions =
      struct
        type t = vscode_DebugAdapterExecutableOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x5470 : Ojs.t) ->
            vscode_DebugAdapterExecutableOptions_of_js x5470
        and t_to_js : t -> Ojs.t =
          fun (x5469 : vscode_DebugAdapterExecutableOptions) ->
            vscode_DebugAdapterExecutableOptions_to_js x5469
        let (get_env : t -> anonymous_interface_44) =
          fun (x5471 : t) ->
            anonymous_interface_44_of_js
              (Ojs.get_prop_ascii (t_to_js x5471) "env")
        let (set_env : t -> anonymous_interface_44 -> unit) =
          fun (x5472 : t) ->
            fun (x5473 : anonymous_interface_44) ->
              Ojs.set_prop_ascii (t_to_js x5472) "env"
                (anonymous_interface_44_to_js x5473)
        let (get_cwd : t -> string) =
          fun (x5474 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5474) "cwd")
        let (set_cwd : t -> string -> unit) =
          fun (x5475 : t) ->
            fun (x5476 : string) ->
              Ojs.set_prop_ascii (t_to_js x5475) "cwd"
                (Ojs.string_to_js x5476)
      end
    module DebugAdapterServer =
      struct
        type t = vscode_DebugAdapterServer
        let rec t_of_js : Ojs.t -> t =
          fun (x5478 : Ojs.t) -> vscode_DebugAdapterServer_of_js x5478
        and t_to_js : t -> Ojs.t =
          fun (x5477 : vscode_DebugAdapterServer) ->
            vscode_DebugAdapterServer_to_js x5477
        let (get_port : t -> float) =
          fun (x5479 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x5479) "port")
        let (get_host : t -> string) =
          fun (x5480 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5480) "host")
        let (create : port:float -> ?host:string -> unit -> t) =
          fun ~port:(x5481 : float) ->
            fun ?host:(x5482 : string option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "DebugAdapterServer")
                     (let x5483 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x5483 "push" [|(Ojs.float_to_js x5481)|]);
                      (match x5482 with
                       | Some x5484 ->
                           ignore
                             (Ojs.call x5483 "push"
                                [|(Ojs.string_to_js x5484)|])
                       | None -> ());
                      x5483))
      end
    module DebugAdapterNamedPipeServer =
      struct
        type t = vscode_DebugAdapterNamedPipeServer
        let rec t_of_js : Ojs.t -> t =
          fun (x5486 : Ojs.t) ->
            vscode_DebugAdapterNamedPipeServer_of_js x5486
        and t_to_js : t -> Ojs.t =
          fun (x5485 : vscode_DebugAdapterNamedPipeServer) ->
            vscode_DebugAdapterNamedPipeServer_to_js x5485
        let (get_path : t -> string) =
          fun (x5487 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5487) "path")
        let (create : path:string -> t) =
          fun ~path:(x5488 : string) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "DebugAdapterNamedPipeServer")
                 [|(Ojs.string_to_js x5488)|])
      end
    module DebugAdapter =
      struct
        type t = vscode_DebugAdapter
        let rec t_of_js : Ojs.t -> t =
          fun (x5490 : Ojs.t) -> vscode_DebugAdapter_of_js x5490
        and t_to_js : t -> Ojs.t =
          fun (x5489 : vscode_DebugAdapter) ->
            vscode_DebugAdapter_to_js x5489
        let (get_onDidSendMessage :
          t -> vscode_DebugProtocolMessage vscode_Event) =
          fun (x5491 : t) ->
            vscode_Event_of_js vscode_DebugProtocolMessage_of_js
              (Ojs.get_prop_ascii (t_to_js x5491) "onDidSendMessage")
        let (handleMessage :
          t -> message:vscode_DebugProtocolMessage -> unit) =
          fun (x5494 : t) ->
            fun ~message:(x5493 : vscode_DebugProtocolMessage) ->
              ignore
                (Ojs.call (t_to_js x5494) "handleMessage"
                   [|(vscode_DebugProtocolMessage_to_js x5493)|])
        let (cast : t -> vscode_Disposable) =
          fun (x5495 : t) -> vscode_Disposable_of_js (t_to_js x5495)
      end
    module DebugAdapterInlineImplementation =
      struct
        type t = vscode_DebugAdapterInlineImplementation
        let rec t_of_js : Ojs.t -> t =
          fun (x5497 : Ojs.t) ->
            vscode_DebugAdapterInlineImplementation_of_js x5497
        and t_to_js : t -> Ojs.t =
          fun (x5496 : vscode_DebugAdapterInlineImplementation) ->
            vscode_DebugAdapterInlineImplementation_to_js x5496
        let (create : implementation:vscode_DebugAdapter -> t) =
          fun ~implementation:(x5498 : vscode_DebugAdapter) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "DebugAdapterInlineImplementation")
                 [|(vscode_DebugAdapter_to_js x5498)|])
      end
    module DebugAdapterDescriptor =
      struct
        type t = vscode_DebugAdapterDescriptor
        let rec t_of_js : Ojs.t -> t =
          fun (x5500 : Ojs.t) -> vscode_DebugAdapterDescriptor_of_js x5500
        and t_to_js : t -> Ojs.t =
          fun (x5499 : vscode_DebugAdapterDescriptor) ->
            vscode_DebugAdapterDescriptor_to_js x5499
      end
    module DebugAdapterDescriptorFactory =
      struct
        type t = vscode_DebugAdapterDescriptorFactory
        let rec t_of_js : Ojs.t -> t =
          fun (x5502 : Ojs.t) ->
            vscode_DebugAdapterDescriptorFactory_of_js x5502
        and t_to_js : t -> Ojs.t =
          fun (x5501 : vscode_DebugAdapterDescriptorFactory) ->
            vscode_DebugAdapterDescriptorFactory_to_js x5501
        let (createDebugAdapterDescriptor :
          t ->
            session:vscode_DebugSession ->
              executable:vscode_DebugAdapterExecutable or_undefined ->
                vscode_DebugAdapterDescriptor vscode_ProviderResult)
          =
          fun (x5506 : t) ->
            fun ~session:(x5503 : vscode_DebugSession) ->
              fun
                ~executable:(x5504 :
                              vscode_DebugAdapterExecutable or_undefined)
                ->
                vscode_ProviderResult_of_js
                  vscode_DebugAdapterDescriptor_of_js
                  (Ojs.call (t_to_js x5506) "createDebugAdapterDescriptor"
                     [|(vscode_DebugSession_to_js x5503);(or_undefined_to_js
                                                            vscode_DebugAdapterExecutable_to_js
                                                            x5504)|])
      end
    module DebugAdapterTracker =
      struct
        type t = vscode_DebugAdapterTracker
        let rec t_of_js : Ojs.t -> t =
          fun (x5509 : Ojs.t) -> vscode_DebugAdapterTracker_of_js x5509
        and t_to_js : t -> Ojs.t =
          fun (x5508 : vscode_DebugAdapterTracker) ->
            vscode_DebugAdapterTracker_to_js x5508
        let (onWillStartSession : t -> unit) =
          fun (x5510 : t) ->
            ignore (Ojs.call (t_to_js x5510) "onWillStartSession" [||])
        let (onWillReceiveMessage : t -> message:any -> unit) =
          fun (x5512 : t) ->
            fun ~message:(x5511 : any) ->
              ignore
                (Ojs.call (t_to_js x5512) "onWillReceiveMessage"
                   [|(any_to_js x5511)|])
        let (onDidSendMessage : t -> message:any -> unit) =
          fun (x5514 : t) ->
            fun ~message:(x5513 : any) ->
              ignore
                (Ojs.call (t_to_js x5514) "onDidSendMessage"
                   [|(any_to_js x5513)|])
        let (onWillStopSession : t -> unit) =
          fun (x5515 : t) ->
            ignore (Ojs.call (t_to_js x5515) "onWillStopSession" [||])
        let (onError : t -> error:Error.t -> unit) =
          fun (x5517 : t) ->
            fun ~error:(x5516 : Error.t) ->
              ignore
                (Ojs.call (t_to_js x5517) "onError" [|(Error.t_to_js x5516)|])
        let (onExit :
          t -> code:float or_undefined -> signal:string or_undefined -> unit)
          =
          fun (x5522 : t) ->
            fun ~code:(x5518 : float or_undefined) ->
              fun ~signal:(x5520 : string or_undefined) ->
                ignore
                  (Ojs.call (t_to_js x5522) "onExit"
                     [|(or_undefined_to_js Ojs.float_to_js x5518);(or_undefined_to_js
                                                                    Ojs.string_to_js
                                                                    x5520)|])
      end
    module DebugAdapterTrackerFactory =
      struct
        type t = vscode_DebugAdapterTrackerFactory
        let rec t_of_js : Ojs.t -> t =
          fun (x5524 : Ojs.t) ->
            vscode_DebugAdapterTrackerFactory_of_js x5524
        and t_to_js : t -> Ojs.t =
          fun (x5523 : vscode_DebugAdapterTrackerFactory) ->
            vscode_DebugAdapterTrackerFactory_to_js x5523
        let (createDebugAdapterTracker :
          t ->
            session:vscode_DebugSession ->
              vscode_DebugAdapterTracker vscode_ProviderResult)
          =
          fun (x5526 : t) ->
            fun ~session:(x5525 : vscode_DebugSession) ->
              vscode_ProviderResult_of_js vscode_DebugAdapterTracker_of_js
                (Ojs.call (t_to_js x5526) "createDebugAdapterTracker"
                   [|(vscode_DebugSession_to_js x5525)|])
      end
    module DebugConsole =
      struct
        type t = vscode_DebugConsole
        let rec t_of_js : Ojs.t -> t =
          fun (x5529 : Ojs.t) -> vscode_DebugConsole_of_js x5529
        and t_to_js : t -> Ojs.t =
          fun (x5528 : vscode_DebugConsole) ->
            vscode_DebugConsole_to_js x5528
        let (append : t -> value:string -> unit) =
          fun (x5531 : t) ->
            fun ~value:(x5530 : string) ->
              ignore
                (Ojs.call (t_to_js x5531) "append"
                   [|(Ojs.string_to_js x5530)|])
        let (appendLine : t -> value:string -> unit) =
          fun (x5533 : t) ->
            fun ~value:(x5532 : string) ->
              ignore
                (Ojs.call (t_to_js x5533) "appendLine"
                   [|(Ojs.string_to_js x5532)|])
      end
    module BreakpointsChangeEvent =
      struct
        type t = vscode_BreakpointsChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5535 : Ojs.t) -> vscode_BreakpointsChangeEvent_of_js x5535
        and t_to_js : t -> Ojs.t =
          fun (x5534 : vscode_BreakpointsChangeEvent) ->
            vscode_BreakpointsChangeEvent_to_js x5534
        let (get_added : t -> vscode_Breakpoint list) =
          fun (x5536 : t) ->
            Ojs.list_of_js vscode_Breakpoint_of_js
              (Ojs.get_prop_ascii (t_to_js x5536) "added")
        let (get_removed : t -> vscode_Breakpoint list) =
          fun (x5538 : t) ->
            Ojs.list_of_js vscode_Breakpoint_of_js
              (Ojs.get_prop_ascii (t_to_js x5538) "removed")
        let (get_changed : t -> vscode_Breakpoint list) =
          fun (x5540 : t) ->
            Ojs.list_of_js vscode_Breakpoint_of_js
              (Ojs.get_prop_ascii (t_to_js x5540) "changed")
      end
    module Breakpoint =
      struct
        type t = vscode_Breakpoint
        let rec t_of_js : Ojs.t -> t =
          fun (x5543 : Ojs.t) -> vscode_Breakpoint_of_js x5543
        and t_to_js : t -> Ojs.t =
          fun (x5542 : vscode_Breakpoint) -> vscode_Breakpoint_to_js x5542
        let (get_id : t -> string) =
          fun (x5544 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5544) "id")
        let (get_enabled : t -> bool) =
          fun (x5545 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x5545) "enabled")
        let (get_condition : t -> string) =
          fun (x5546 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5546) "condition")
        let (get_hitCondition : t -> string) =
          fun (x5547 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5547) "hitCondition")
        let (get_logMessage : t -> string) =
          fun (x5548 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5548) "logMessage")
        let (create :
          ?enabled:bool ->
            ?condition:string ->
              ?hitCondition:string -> ?logMessage:string -> unit -> t)
          =
          fun ?enabled:(x5549 : bool option) ->
            fun ?condition:(x5550 : string option) ->
              fun ?hitCondition:(x5551 : string option) ->
                fun ?logMessage:(x5552 : string option) ->
                  fun () ->
                    t_of_js
                      (Ojs.new_obj_arr
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "vscode")
                            "Breakpoint")
                         (let x5553 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x5549 with
                           | Some x5557 ->
                               ignore
                                 (Ojs.call x5553 "push"
                                    [|(Ojs.bool_to_js x5557)|])
                           | None -> ());
                          (match x5550 with
                           | Some x5556 ->
                               ignore
                                 (Ojs.call x5553 "push"
                                    [|(Ojs.string_to_js x5556)|])
                           | None -> ());
                          (match x5551 with
                           | Some x5555 ->
                               ignore
                                 (Ojs.call x5553 "push"
                                    [|(Ojs.string_to_js x5555)|])
                           | None -> ());
                          (match x5552 with
                           | Some x5554 ->
                               ignore
                                 (Ojs.call x5553 "push"
                                    [|(Ojs.string_to_js x5554)|])
                           | None -> ());
                          x5553))
      end
    module SourceBreakpoint =
      struct
        type t = vscode_SourceBreakpoint
        let rec t_of_js : Ojs.t -> t =
          fun (x5559 : Ojs.t) -> vscode_SourceBreakpoint_of_js x5559
        and t_to_js : t -> Ojs.t =
          fun (x5558 : vscode_SourceBreakpoint) ->
            vscode_SourceBreakpoint_to_js x5558
        let (get_location : t -> vscode_Location) =
          fun (x5560 : t) ->
            vscode_Location_of_js
              (Ojs.get_prop_ascii (t_to_js x5560) "location")
        let (create :
          location:vscode_Location ->
            ?enabled:bool ->
              ?condition:string ->
                ?hitCondition:string -> ?logMessage:string -> unit -> t)
          =
          fun ~location:(x5561 : vscode_Location) ->
            fun ?enabled:(x5562 : bool option) ->
              fun ?condition:(x5563 : string option) ->
                fun ?hitCondition:(x5564 : string option) ->
                  fun ?logMessage:(x5565 : string option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode")
                              "SourceBreakpoint")
                           (let x5566 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x5566 "push"
                                 [|(vscode_Location_to_js x5561)|]);
                            (match x5562 with
                             | Some x5570 ->
                                 ignore
                                   (Ojs.call x5566 "push"
                                      [|(Ojs.bool_to_js x5570)|])
                             | None -> ());
                            (match x5563 with
                             | Some x5569 ->
                                 ignore
                                   (Ojs.call x5566 "push"
                                      [|(Ojs.string_to_js x5569)|])
                             | None -> ());
                            (match x5564 with
                             | Some x5568 ->
                                 ignore
                                   (Ojs.call x5566 "push"
                                      [|(Ojs.string_to_js x5568)|])
                             | None -> ());
                            (match x5565 with
                             | Some x5567 ->
                                 ignore
                                   (Ojs.call x5566 "push"
                                      [|(Ojs.string_to_js x5567)|])
                             | None -> ());
                            x5566))
        let (cast : t -> vscode_Breakpoint) =
          fun (x5571 : t) -> vscode_Breakpoint_of_js (t_to_js x5571)
      end
    module FunctionBreakpoint =
      struct
        type t = vscode_FunctionBreakpoint
        let rec t_of_js : Ojs.t -> t =
          fun (x5573 : Ojs.t) -> vscode_FunctionBreakpoint_of_js x5573
        and t_to_js : t -> Ojs.t =
          fun (x5572 : vscode_FunctionBreakpoint) ->
            vscode_FunctionBreakpoint_to_js x5572
        let (get_functionName : t -> string) =
          fun (x5574 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5574) "functionName")
        let (create :
          functionName:string ->
            ?enabled:bool ->
              ?condition:string ->
                ?hitCondition:string -> ?logMessage:string -> unit -> t)
          =
          fun ~functionName:(x5575 : string) ->
            fun ?enabled:(x5576 : bool option) ->
              fun ?condition:(x5577 : string option) ->
                fun ?hitCondition:(x5578 : string option) ->
                  fun ?logMessage:(x5579 : string option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii
                              (Ojs.get_prop_ascii Ojs.global "vscode")
                              "FunctionBreakpoint")
                           (let x5580 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x5580 "push"
                                 [|(Ojs.string_to_js x5575)|]);
                            (match x5576 with
                             | Some x5584 ->
                                 ignore
                                   (Ojs.call x5580 "push"
                                      [|(Ojs.bool_to_js x5584)|])
                             | None -> ());
                            (match x5577 with
                             | Some x5583 ->
                                 ignore
                                   (Ojs.call x5580 "push"
                                      [|(Ojs.string_to_js x5583)|])
                             | None -> ());
                            (match x5578 with
                             | Some x5582 ->
                                 ignore
                                   (Ojs.call x5580 "push"
                                      [|(Ojs.string_to_js x5582)|])
                             | None -> ());
                            (match x5579 with
                             | Some x5581 ->
                                 ignore
                                   (Ojs.call x5580 "push"
                                      [|(Ojs.string_to_js x5581)|])
                             | None -> ());
                            x5580))
        let (cast : t -> vscode_Breakpoint) =
          fun (x5585 : t) -> vscode_Breakpoint_of_js (t_to_js x5585)
      end
    module DebugConsoleMode =
      struct
        type t = vscode_DebugConsoleMode
        let rec t_of_js : Ojs.t -> t =
          fun (x5587 : Ojs.t) -> vscode_DebugConsoleMode_of_js x5587
        and t_to_js : t -> Ojs.t =
          fun (x5586 : vscode_DebugConsoleMode) ->
            vscode_DebugConsoleMode_to_js x5586
      end
    module DebugSessionOptions =
      struct
        type t = vscode_DebugSessionOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x5589 : Ojs.t) -> vscode_DebugSessionOptions_of_js x5589
        and t_to_js : t -> Ojs.t =
          fun (x5588 : vscode_DebugSessionOptions) ->
            vscode_DebugSessionOptions_to_js x5588
        let (get_parentSession : t -> vscode_DebugSession) =
          fun (x5590 : t) ->
            vscode_DebugSession_of_js
              (Ojs.get_prop_ascii (t_to_js x5590) "parentSession")
        let (set_parentSession : t -> vscode_DebugSession -> unit) =
          fun (x5591 : t) ->
            fun (x5592 : vscode_DebugSession) ->
              Ojs.set_prop_ascii (t_to_js x5591) "parentSession"
                (vscode_DebugSession_to_js x5592)
        let (get_consoleMode : t -> vscode_DebugConsoleMode) =
          fun (x5593 : t) ->
            vscode_DebugConsoleMode_of_js
              (Ojs.get_prop_ascii (t_to_js x5593) "consoleMode")
        let (set_consoleMode : t -> vscode_DebugConsoleMode -> unit) =
          fun (x5594 : t) ->
            fun (x5595 : vscode_DebugConsoleMode) ->
              Ojs.set_prop_ascii (t_to_js x5594) "consoleMode"
                (vscode_DebugConsoleMode_to_js x5595)
        let (get_noDebug : t -> bool) =
          fun (x5596 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x5596) "noDebug")
        let (set_noDebug : t -> bool -> unit) =
          fun (x5597 : t) ->
            fun (x5598 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5597) "noDebug"
                (Ojs.bool_to_js x5598)
        let (get_compact : t -> bool) =
          fun (x5599 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x5599) "compact")
        let (set_compact : t -> bool -> unit) =
          fun (x5600 : t) ->
            fun (x5601 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5600) "compact"
                (Ojs.bool_to_js x5601)
      end
    module DebugConfigurationProviderTriggerKind =
      struct
        type t = vscode_DebugConfigurationProviderTriggerKind
        let rec t_of_js : Ojs.t -> t =
          fun (x5603 : Ojs.t) ->
            vscode_DebugConfigurationProviderTriggerKind_of_js x5603
        and t_to_js : t -> Ojs.t =
          fun (x5602 : vscode_DebugConfigurationProviderTriggerKind) ->
            vscode_DebugConfigurationProviderTriggerKind_to_js x5602
      end
    module Debug =
      struct
        let (activeDebugSession : vscode_DebugSession or_undefined) =
          or_undefined_of_js vscode_DebugSession_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "activeDebugSession")
        let (activeDebugConsole : vscode_DebugConsole) =
          vscode_DebugConsole_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "activeDebugConsole")
        let (breakpoints : vscode_Breakpoint list) =
          Ojs.list_of_js vscode_Breakpoint_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "breakpoints")
        let (onDidChangeActiveDebugSession :
          vscode_DebugSession or_undefined vscode_Event) =
          vscode_Event_of_js
            (fun (x5606 : Ojs.t) ->
               or_undefined_of_js vscode_DebugSession_of_js x5606)
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "onDidChangeActiveDebugSession")
        let (onDidStartDebugSession : vscode_DebugSession vscode_Event) =
          vscode_Event_of_js vscode_DebugSession_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "onDidStartDebugSession")
        let (onDidReceiveDebugSessionCustomEvent :
          vscode_DebugSessionCustomEvent vscode_Event) =
          vscode_Event_of_js vscode_DebugSessionCustomEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "onDidReceiveDebugSessionCustomEvent")
        let (onDidTerminateDebugSession : vscode_DebugSession vscode_Event) =
          vscode_Event_of_js vscode_DebugSession_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "onDidTerminateDebugSession")
        let (onDidChangeBreakpoints :
          vscode_BreakpointsChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_BreakpointsChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "debug") "onDidChangeBreakpoints")
        let (registerDebugConfigurationProvider :
          debugType:string ->
            provider:vscode_DebugConfigurationProvider ->
              ?triggerKind:vscode_DebugConfigurationProviderTriggerKind ->
                unit -> vscode_Disposable)
          =
          fun ~debugType:(x5612 : string) ->
            fun ~provider:(x5613 : vscode_DebugConfigurationProvider) ->
              fun
                ?triggerKind:(x5614 :
                               vscode_DebugConfigurationProviderTriggerKind
                                 option)
                ->
                fun () ->
                  vscode_Disposable_of_js
                    (let x5617 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "debug" in
                     Ojs.call
                       (Ojs.get_prop_ascii x5617
                          "registerDebugConfigurationProvider") "apply"
                       [|x5617;((let x5615 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5615 "push"
                                      [|(Ojs.string_to_js x5612)|]);
                                 ignore
                                   (Ojs.call x5615 "push"
                                      [|(vscode_DebugConfigurationProvider_to_js
                                           x5613)|]);
                                 (match x5614 with
                                  | Some x5616 ->
                                      ignore
                                        (Ojs.call x5615 "push"
                                           [|(vscode_DebugConfigurationProviderTriggerKind_to_js
                                                x5616)|])
                                  | None -> ());
                                 x5615))|])
        let (registerDebugAdapterDescriptorFactory :
          debugType:string ->
            factory:vscode_DebugAdapterDescriptorFactory -> vscode_Disposable)
          =
          fun ~debugType:(x5618 : string) ->
            fun ~factory:(x5619 : vscode_DebugAdapterDescriptorFactory) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "debug")
                   "registerDebugAdapterDescriptorFactory"
                   [|(Ojs.string_to_js x5618);(vscode_DebugAdapterDescriptorFactory_to_js
                                                 x5619)|])
        let (registerDebugAdapterTrackerFactory :
          debugType:string ->
            factory:vscode_DebugAdapterTrackerFactory -> vscode_Disposable)
          =
          fun ~debugType:(x5620 : string) ->
            fun ~factory:(x5621 : vscode_DebugAdapterTrackerFactory) ->
              vscode_Disposable_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "debug")
                   "registerDebugAdapterTrackerFactory"
                   [|(Ojs.string_to_js x5620);(vscode_DebugAdapterTrackerFactory_to_js
                                                 x5621)|])
        let (startDebugging :
          folder:vscode_WorkspaceFolder or_undefined ->
            nameOrConfiguration:vscode_DebugConfiguration or_string ->
              ?parentSessionOrOptions:(vscode_DebugSession,
                vscode_DebugSessionOptions) union2 -> unit -> bool _Thenable)
          =
          fun ~folder:(x5622 : vscode_WorkspaceFolder or_undefined) ->
            fun
              ~nameOrConfiguration:(x5623 :
                                     vscode_DebugConfiguration or_string)
              ->
              fun
                ?parentSessionOrOptions:(x5624 :
                                          (vscode_DebugSession,
                                            vscode_DebugSessionOptions)
                                            union2 option)
                ->
                fun () ->
                  _Thenable_of_js Ojs.bool_of_js
                    (let x5631 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode") "debug" in
                     Ojs.call (Ojs.get_prop_ascii x5631 "startDebugging")
                       "apply"
                       [|x5631;((let x5625 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5625 "push"
                                      [|(or_undefined_to_js
                                           vscode_WorkspaceFolder_to_js x5622)|]);
                                 ignore
                                   (Ojs.call x5625 "push"
                                      [|(or_string_to_js
                                           vscode_DebugConfiguration_to_js
                                           x5623)|]);
                                 (match x5624 with
                                  | Some x5626 ->
                                      ignore
                                        (Ojs.call x5625 "push"
                                           [|(union2_to_js
                                                vscode_DebugSession_to_js
                                                vscode_DebugSessionOptions_to_js
                                                x5626)|])
                                  | None -> ());
                                 x5625))|])
        let (stopDebugging :
          ?session:vscode_DebugSession -> unit -> unit _Thenable) =
          fun ?session:(x5633 : vscode_DebugSession option) ->
            fun () ->
              _Thenable_of_js Ojs.unit_of_js
                (let x5636 =
                   Ojs.get_prop_ascii
                     (Ojs.get_prop_ascii Ojs.global "vscode") "debug" in
                 Ojs.call (Ojs.get_prop_ascii x5636 "stopDebugging") "apply"
                   [|x5636;((let x5634 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5633 with
                              | Some x5635 ->
                                  ignore
                                    (Ojs.call x5634 "push"
                                       [|(vscode_DebugSession_to_js x5635)|])
                              | None -> ());
                             x5634))|])
        let (addBreakpoints : breakpoints:vscode_Breakpoint list -> unit) =
          fun ~breakpoints:(x5638 : vscode_Breakpoint list) ->
            ignore
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "debug") "addBreakpoints"
                 [|(Ojs.list_to_js vscode_Breakpoint_to_js x5638)|])
        let (removeBreakpoints : breakpoints:vscode_Breakpoint list -> unit)
          =
          fun ~breakpoints:(x5640 : vscode_Breakpoint list) ->
            ignore
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "debug") "removeBreakpoints"
                 [|(Ojs.list_to_js vscode_Breakpoint_to_js x5640)|])
        let (asDebugSourceUri :
          source:vscode_DebugProtocolSource ->
            ?session:vscode_DebugSession -> unit -> vscode_Uri)
          =
          fun ~source:(x5642 : vscode_DebugProtocolSource) ->
            fun ?session:(x5643 : vscode_DebugSession option) ->
              fun () ->
                vscode_Uri_of_js
                  (let x5646 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "vscode") "debug" in
                   Ojs.call (Ojs.get_prop_ascii x5646 "asDebugSourceUri")
                     "apply"
                     [|x5646;((let x5644 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5644 "push"
                                    [|(vscode_DebugProtocolSource_to_js x5642)|]);
                               (match x5643 with
                                | Some x5645 ->
                                    ignore
                                      (Ojs.call x5644 "push"
                                         [|(vscode_DebugSession_to_js x5645)|])
                                | None -> ());
                               x5644))|])
      end
    module Extensions =
      struct
        let (getExtension :
          extensionId:string -> any vscode_Extension or_undefined) =
          fun ~extensionId:(x5647 : string) ->
            or_undefined_of_js
              (fun (x5648 : Ojs.t) -> vscode_Extension_of_js any_of_js x5648)
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "extensions") "getExtension" [|(Ojs.string_to_js x5647)|])
        let (getExtension :
          extensionId:string -> 'T vscode_Extension or_undefined) =
          fun ~extensionId:(x5650 : string) ->
            or_undefined_of_js
              (fun (x5651 : Ojs.t) -> vscode_Extension_of_js Obj.magic x5651)
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                    "extensions") "getExtension" [|(Ojs.string_to_js x5650)|])
        let (all : any vscode_Extension list) =
          Ojs.list_of_js
            (fun (x5653 : Ojs.t) -> vscode_Extension_of_js any_of_js x5653)
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "extensions") "all")
        let (onDidChange : unit vscode_Event) =
          vscode_Event_of_js Ojs.unit_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "extensions") "onDidChange")
      end
    module CommentThreadCollapsibleState =
      struct
        type t = vscode_CommentThreadCollapsibleState
        let rec t_of_js : Ojs.t -> t =
          fun (x5657 : Ojs.t) ->
            vscode_CommentThreadCollapsibleState_of_js x5657
        and t_to_js : t -> Ojs.t =
          fun (x5656 : vscode_CommentThreadCollapsibleState) ->
            vscode_CommentThreadCollapsibleState_to_js x5656
      end
    module CommentMode =
      struct
        type t = vscode_CommentMode
        let rec t_of_js : Ojs.t -> t =
          fun (x5659 : Ojs.t) -> vscode_CommentMode_of_js x5659
        and t_to_js : t -> Ojs.t =
          fun (x5658 : vscode_CommentMode) -> vscode_CommentMode_to_js x5658
      end
    module CommentThread =
      struct
        type t = vscode_CommentThread
        let rec t_of_js : Ojs.t -> t =
          fun (x5661 : Ojs.t) -> vscode_CommentThread_of_js x5661
        and t_to_js : t -> Ojs.t =
          fun (x5660 : vscode_CommentThread) ->
            vscode_CommentThread_to_js x5660
        let (get_uri : t -> vscode_Uri) =
          fun (x5662 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x5662) "uri")
        let (get_range : t -> vscode_Range) =
          fun (x5663 : t) ->
            vscode_Range_of_js (Ojs.get_prop_ascii (t_to_js x5663) "range")
        let (set_range : t -> vscode_Range -> unit) =
          fun (x5664 : t) ->
            fun (x5665 : vscode_Range) ->
              Ojs.set_prop_ascii (t_to_js x5664) "range"
                (vscode_Range_to_js x5665)
        let (get_comments : t -> vscode_Comment list) =
          fun (x5666 : t) ->
            Ojs.list_of_js vscode_Comment_of_js
              (Ojs.get_prop_ascii (t_to_js x5666) "comments")
        let (set_comments : t -> vscode_Comment list -> unit) =
          fun (x5668 : t) ->
            fun (x5669 : vscode_Comment list) ->
              Ojs.set_prop_ascii (t_to_js x5668) "comments"
                (Ojs.list_to_js vscode_Comment_to_js x5669)
        let (get_collapsibleState :
          t -> vscode_CommentThreadCollapsibleState) =
          fun (x5671 : t) ->
            vscode_CommentThreadCollapsibleState_of_js
              (Ojs.get_prop_ascii (t_to_js x5671) "collapsibleState")
        let (set_collapsibleState :
          t -> vscode_CommentThreadCollapsibleState -> unit) =
          fun (x5672 : t) ->
            fun (x5673 : vscode_CommentThreadCollapsibleState) ->
              Ojs.set_prop_ascii (t_to_js x5672) "collapsibleState"
                (vscode_CommentThreadCollapsibleState_to_js x5673)
        let (get_canReply : t -> bool) =
          fun (x5674 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x5674) "canReply")
        let (set_canReply : t -> bool -> unit) =
          fun (x5675 : t) ->
            fun (x5676 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5675) "canReply"
                (Ojs.bool_to_js x5676)
        let (get_contextValue : t -> string) =
          fun (x5677 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5677) "contextValue")
        let (set_contextValue : t -> string -> unit) =
          fun (x5678 : t) ->
            fun (x5679 : string) ->
              Ojs.set_prop_ascii (t_to_js x5678) "contextValue"
                (Ojs.string_to_js x5679)
        let (get_label : t -> string) =
          fun (x5680 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5680) "label")
        let (set_label : t -> string -> unit) =
          fun (x5681 : t) ->
            fun (x5682 : string) ->
              Ojs.set_prop_ascii (t_to_js x5681) "label"
                (Ojs.string_to_js x5682)
        let (dispose : t -> unit) =
          fun (x5683 : t) -> ignore (Ojs.call (t_to_js x5683) "dispose" [||])
      end
    module CommentAuthorInformation =
      struct
        type t = vscode_CommentAuthorInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x5685 : Ojs.t) -> vscode_CommentAuthorInformation_of_js x5685
        and t_to_js : t -> Ojs.t =
          fun (x5684 : vscode_CommentAuthorInformation) ->
            vscode_CommentAuthorInformation_to_js x5684
        let (get_name : t -> string) =
          fun (x5686 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5686) "name")
        let (set_name : t -> string -> unit) =
          fun (x5687 : t) ->
            fun (x5688 : string) ->
              Ojs.set_prop_ascii (t_to_js x5687) "name"
                (Ojs.string_to_js x5688)
        let (get_iconPath : t -> vscode_Uri) =
          fun (x5689 : t) ->
            vscode_Uri_of_js (Ojs.get_prop_ascii (t_to_js x5689) "iconPath")
        let (set_iconPath : t -> vscode_Uri -> unit) =
          fun (x5690 : t) ->
            fun (x5691 : vscode_Uri) ->
              Ojs.set_prop_ascii (t_to_js x5690) "iconPath"
                (vscode_Uri_to_js x5691)
      end
    module CommentReaction =
      struct
        type t = vscode_CommentReaction
        let rec t_of_js : Ojs.t -> t =
          fun (x5693 : Ojs.t) -> vscode_CommentReaction_of_js x5693
        and t_to_js : t -> Ojs.t =
          fun (x5692 : vscode_CommentReaction) ->
            vscode_CommentReaction_to_js x5692
        let (get_label : t -> string) =
          fun (x5694 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5694) "label")
        let (get_iconPath : t -> vscode_Uri or_string) =
          fun (x5695 : t) ->
            or_string_of_js vscode_Uri_of_js
              (Ojs.get_prop_ascii (t_to_js x5695) "iconPath")
        let (get_count : t -> float) =
          fun (x5697 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x5697) "count")
        let (get_authorHasReacted : t -> bool) =
          fun (x5698 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x5698) "authorHasReacted")
      end
    module Comment =
      struct
        type t = vscode_Comment
        let rec t_of_js : Ojs.t -> t =
          fun (x5700 : Ojs.t) -> vscode_Comment_of_js x5700
        and t_to_js : t -> Ojs.t =
          fun (x5699 : vscode_Comment) -> vscode_Comment_to_js x5699
        let (get_body : t -> vscode_MarkdownString or_string) =
          fun (x5701 : t) ->
            or_string_of_js vscode_MarkdownString_of_js
              (Ojs.get_prop_ascii (t_to_js x5701) "body")
        let (set_body : t -> vscode_MarkdownString or_string -> unit) =
          fun (x5703 : t) ->
            fun (x5704 : vscode_MarkdownString or_string) ->
              Ojs.set_prop_ascii (t_to_js x5703) "body"
                (or_string_to_js vscode_MarkdownString_to_js x5704)
        let (get_mode : t -> vscode_CommentMode) =
          fun (x5706 : t) ->
            vscode_CommentMode_of_js
              (Ojs.get_prop_ascii (t_to_js x5706) "mode")
        let (set_mode : t -> vscode_CommentMode -> unit) =
          fun (x5707 : t) ->
            fun (x5708 : vscode_CommentMode) ->
              Ojs.set_prop_ascii (t_to_js x5707) "mode"
                (vscode_CommentMode_to_js x5708)
        let (get_author : t -> vscode_CommentAuthorInformation) =
          fun (x5709 : t) ->
            vscode_CommentAuthorInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x5709) "author")
        let (set_author : t -> vscode_CommentAuthorInformation -> unit) =
          fun (x5710 : t) ->
            fun (x5711 : vscode_CommentAuthorInformation) ->
              Ojs.set_prop_ascii (t_to_js x5710) "author"
                (vscode_CommentAuthorInformation_to_js x5711)
        let (get_contextValue : t -> string) =
          fun (x5712 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5712) "contextValue")
        let (set_contextValue : t -> string -> unit) =
          fun (x5713 : t) ->
            fun (x5714 : string) ->
              Ojs.set_prop_ascii (t_to_js x5713) "contextValue"
                (Ojs.string_to_js x5714)
        let (get_reactions : t -> vscode_CommentReaction list) =
          fun (x5715 : t) ->
            Ojs.list_of_js vscode_CommentReaction_of_js
              (Ojs.get_prop_ascii (t_to_js x5715) "reactions")
        let (set_reactions : t -> vscode_CommentReaction list -> unit) =
          fun (x5717 : t) ->
            fun (x5718 : vscode_CommentReaction list) ->
              Ojs.set_prop_ascii (t_to_js x5717) "reactions"
                (Ojs.list_to_js vscode_CommentReaction_to_js x5718)
        let (get_label : t -> string) =
          fun (x5720 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5720) "label")
        let (set_label : t -> string -> unit) =
          fun (x5721 : t) ->
            fun (x5722 : string) ->
              Ojs.set_prop_ascii (t_to_js x5721) "label"
                (Ojs.string_to_js x5722)
      end
    module CommentReply =
      struct
        type t = vscode_CommentReply
        let rec t_of_js : Ojs.t -> t =
          fun (x5724 : Ojs.t) -> vscode_CommentReply_of_js x5724
        and t_to_js : t -> Ojs.t =
          fun (x5723 : vscode_CommentReply) ->
            vscode_CommentReply_to_js x5723
        let (get_thread : t -> vscode_CommentThread) =
          fun (x5725 : t) ->
            vscode_CommentThread_of_js
              (Ojs.get_prop_ascii (t_to_js x5725) "thread")
        let (set_thread : t -> vscode_CommentThread -> unit) =
          fun (x5726 : t) ->
            fun (x5727 : vscode_CommentThread) ->
              Ojs.set_prop_ascii (t_to_js x5726) "thread"
                (vscode_CommentThread_to_js x5727)
        let (get_text : t -> string) =
          fun (x5728 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5728) "text")
        let (set_text : t -> string -> unit) =
          fun (x5729 : t) ->
            fun (x5730 : string) ->
              Ojs.set_prop_ascii (t_to_js x5729) "text"
                (Ojs.string_to_js x5730)
      end
    module CommentingRangeProvider =
      struct
        type t = vscode_CommentingRangeProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x5732 : Ojs.t) -> vscode_CommentingRangeProvider_of_js x5732
        and t_to_js : t -> Ojs.t =
          fun (x5731 : vscode_CommentingRangeProvider) ->
            vscode_CommentingRangeProvider_to_js x5731
        let (provideCommentingRanges :
          t ->
            document:vscode_TextDocument ->
              token:vscode_CancellationToken ->
                vscode_Range list vscode_ProviderResult)
          =
          fun (x5735 : t) ->
            fun ~document:(x5733 : vscode_TextDocument) ->
              fun ~token:(x5734 : vscode_CancellationToken) ->
                vscode_ProviderResult_of_js
                  (fun (x5736 : Ojs.t) ->
                     Ojs.list_of_js vscode_Range_of_js x5736)
                  (Ojs.call (t_to_js x5735) "provideCommentingRanges"
                     [|(vscode_TextDocument_to_js x5733);(vscode_CancellationToken_to_js
                                                            x5734)|])
      end
    module CommentOptions =
      struct
        type t = vscode_CommentOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x5739 : Ojs.t) -> vscode_CommentOptions_of_js x5739
        and t_to_js : t -> Ojs.t =
          fun (x5738 : vscode_CommentOptions) ->
            vscode_CommentOptions_to_js x5738
        let (get_prompt : t -> string) =
          fun (x5740 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5740) "prompt")
        let (set_prompt : t -> string -> unit) =
          fun (x5741 : t) ->
            fun (x5742 : string) ->
              Ojs.set_prop_ascii (t_to_js x5741) "prompt"
                (Ojs.string_to_js x5742)
        let (get_placeHolder : t -> string) =
          fun (x5743 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5743) "placeHolder")
        let (set_placeHolder : t -> string -> unit) =
          fun (x5744 : t) ->
            fun (x5745 : string) ->
              Ojs.set_prop_ascii (t_to_js x5744) "placeHolder"
                (Ojs.string_to_js x5745)
      end
    module CommentController =
      struct
        type t = vscode_CommentController
        let rec t_of_js : Ojs.t -> t =
          fun (x5747 : Ojs.t) -> vscode_CommentController_of_js x5747
        and t_to_js : t -> Ojs.t =
          fun (x5746 : vscode_CommentController) ->
            vscode_CommentController_to_js x5746
        let (get_id : t -> string) =
          fun (x5748 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5748) "id")
        let (get_label : t -> string) =
          fun (x5749 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5749) "label")
        let (get_options : t -> vscode_CommentOptions) =
          fun (x5750 : t) ->
            vscode_CommentOptions_of_js
              (Ojs.get_prop_ascii (t_to_js x5750) "options")
        let (set_options : t -> vscode_CommentOptions -> unit) =
          fun (x5751 : t) ->
            fun (x5752 : vscode_CommentOptions) ->
              Ojs.set_prop_ascii (t_to_js x5751) "options"
                (vscode_CommentOptions_to_js x5752)
        let (get_commentingRangeProvider :
          t -> vscode_CommentingRangeProvider) =
          fun (x5753 : t) ->
            vscode_CommentingRangeProvider_of_js
              (Ojs.get_prop_ascii (t_to_js x5753) "commentingRangeProvider")
        let (set_commentingRangeProvider :
          t -> vscode_CommentingRangeProvider -> unit) =
          fun (x5754 : t) ->
            fun (x5755 : vscode_CommentingRangeProvider) ->
              Ojs.set_prop_ascii (t_to_js x5754) "commentingRangeProvider"
                (vscode_CommentingRangeProvider_to_js x5755)
        let (createCommentThread :
          t ->
            uri:vscode_Uri ->
              range:vscode_Range ->
                comments:vscode_Comment list -> vscode_CommentThread)
          =
          fun (x5760 : t) ->
            fun ~uri:(x5756 : vscode_Uri) ->
              fun ~range:(x5757 : vscode_Range) ->
                fun ~comments:(x5758 : vscode_Comment list) ->
                  vscode_CommentThread_of_js
                    (Ojs.call (t_to_js x5760) "createCommentThread"
                       [|(vscode_Uri_to_js x5756);(vscode_Range_to_js x5757);(
                         Ojs.list_to_js vscode_Comment_to_js x5758)|])
        let (reactionHandler :
          t ->
            comment:vscode_Comment ->
              reaction:vscode_CommentReaction -> unit _Thenable)
          =
          fun (x5763 : t) ->
            fun ~comment:(x5761 : vscode_Comment) ->
              fun ~reaction:(x5762 : vscode_CommentReaction) ->
                _Thenable_of_js Ojs.unit_of_js
                  (Ojs.call (t_to_js x5763) "reactionHandler"
                     [|(vscode_Comment_to_js x5761);(vscode_CommentReaction_to_js
                                                       x5762)|])
        let (dispose : t -> unit) =
          fun (x5765 : t) -> ignore (Ojs.call (t_to_js x5765) "dispose" [||])
      end
    module Comments =
      struct
        let (createCommentController :
          id:string -> label:string -> vscode_CommentController) =
          fun ~id:(x5766 : string) ->
            fun ~label:(x5767 : string) ->
              vscode_CommentController_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "vscode") "comments")
                   "createCommentController"
                   [|(Ojs.string_to_js x5766);(Ojs.string_to_js x5767)|])
      end
    module AuthenticationSession =
      struct
        type t = vscode_AuthenticationSession
        let rec t_of_js : Ojs.t -> t =
          fun (x5769 : Ojs.t) -> vscode_AuthenticationSession_of_js x5769
        and t_to_js : t -> Ojs.t =
          fun (x5768 : vscode_AuthenticationSession) ->
            vscode_AuthenticationSession_to_js x5768
        let (get_id : t -> string) =
          fun (x5770 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5770) "id")
        let (get_accessToken : t -> string) =
          fun (x5771 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5771) "accessToken")
        let (get_account :
          t -> vscode_AuthenticationSessionAccountInformation) =
          fun (x5772 : t) ->
            vscode_AuthenticationSessionAccountInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x5772) "account")
        let (get_scopes : t -> string list) =
          fun (x5773 : t) ->
            Ojs.list_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x5773) "scopes")
      end
    module AuthenticationSessionAccountInformation =
      struct
        type t = vscode_AuthenticationSessionAccountInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x5776 : Ojs.t) ->
            vscode_AuthenticationSessionAccountInformation_of_js x5776
        and t_to_js : t -> Ojs.t =
          fun (x5775 : vscode_AuthenticationSessionAccountInformation) ->
            vscode_AuthenticationSessionAccountInformation_to_js x5775
        let (get_id : t -> string) =
          fun (x5777 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5777) "id")
        let (get_label : t -> string) =
          fun (x5778 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5778) "label")
      end
    module AuthenticationGetSessionOptions =
      struct
        type t = vscode_AuthenticationGetSessionOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x5780 : Ojs.t) ->
            vscode_AuthenticationGetSessionOptions_of_js x5780
        and t_to_js : t -> Ojs.t =
          fun (x5779 : vscode_AuthenticationGetSessionOptions) ->
            vscode_AuthenticationGetSessionOptions_to_js x5779
        let (get_createIfNone : t -> bool) =
          fun (x5781 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x5781) "createIfNone")
        let (set_createIfNone : t -> bool -> unit) =
          fun (x5782 : t) ->
            fun (x5783 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5782) "createIfNone"
                (Ojs.bool_to_js x5783)
        let (get_clearSessionPreference : t -> bool) =
          fun (x5784 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x5784) "clearSessionPreference")
        let (set_clearSessionPreference : t -> bool -> unit) =
          fun (x5785 : t) ->
            fun (x5786 : bool) ->
              Ojs.set_prop_ascii (t_to_js x5785) "clearSessionPreference"
                (Ojs.bool_to_js x5786)
      end
    module AuthenticationProviderInformation =
      struct
        type t = vscode_AuthenticationProviderInformation
        let rec t_of_js : Ojs.t -> t =
          fun (x5788 : Ojs.t) ->
            vscode_AuthenticationProviderInformation_of_js x5788
        and t_to_js : t -> Ojs.t =
          fun (x5787 : vscode_AuthenticationProviderInformation) ->
            vscode_AuthenticationProviderInformation_to_js x5787
        let (get_id : t -> string) =
          fun (x5789 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5789) "id")
        let (get_label : t -> string) =
          fun (x5790 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x5790) "label")
      end
    module AuthenticationSessionsChangeEvent =
      struct
        type t = vscode_AuthenticationSessionsChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5792 : Ojs.t) ->
            vscode_AuthenticationSessionsChangeEvent_of_js x5792
        and t_to_js : t -> Ojs.t =
          fun (x5791 : vscode_AuthenticationSessionsChangeEvent) ->
            vscode_AuthenticationSessionsChangeEvent_to_js x5791
        let (get_provider : t -> vscode_AuthenticationProviderInformation) =
          fun (x5793 : t) ->
            vscode_AuthenticationProviderInformation_of_js
              (Ojs.get_prop_ascii (t_to_js x5793) "provider")
      end
    module AuthenticationProviderOptions =
      struct
        type t = vscode_AuthenticationProviderOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x5795 : Ojs.t) ->
            vscode_AuthenticationProviderOptions_of_js x5795
        and t_to_js : t -> Ojs.t =
          fun (x5794 : vscode_AuthenticationProviderOptions) ->
            vscode_AuthenticationProviderOptions_to_js x5794
        let (get_supportsMultipleAccounts : t -> bool) =
          fun (x5796 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x5796) "supportsMultipleAccounts")
      end
    module AuthenticationProviderAuthenticationSessionsChangeEvent =
      struct
        type t =
          vscode_AuthenticationProviderAuthenticationSessionsChangeEvent
        let rec t_of_js : Ojs.t -> t =
          fun (x5798 : Ojs.t) ->
            vscode_AuthenticationProviderAuthenticationSessionsChangeEvent_of_js
              x5798
        and t_to_js : t -> Ojs.t =
          fun
            (x5797 :
              vscode_AuthenticationProviderAuthenticationSessionsChangeEvent)
            ->
            vscode_AuthenticationProviderAuthenticationSessionsChangeEvent_to_js
              x5797
        let (get_added : t -> vscode_AuthenticationSession list) =
          fun (x5799 : t) ->
            Ojs.list_of_js vscode_AuthenticationSession_of_js
              (Ojs.get_prop_ascii (t_to_js x5799) "added")
        let (get_removed : t -> vscode_AuthenticationSession list) =
          fun (x5801 : t) ->
            Ojs.list_of_js vscode_AuthenticationSession_of_js
              (Ojs.get_prop_ascii (t_to_js x5801) "removed")
        let (get_changed : t -> vscode_AuthenticationSession list) =
          fun (x5803 : t) ->
            Ojs.list_of_js vscode_AuthenticationSession_of_js
              (Ojs.get_prop_ascii (t_to_js x5803) "changed")
      end
    module AuthenticationProvider =
      struct
        type t = vscode_AuthenticationProvider
        let rec t_of_js : Ojs.t -> t =
          fun (x5806 : Ojs.t) -> vscode_AuthenticationProvider_of_js x5806
        and t_to_js : t -> Ojs.t =
          fun (x5805 : vscode_AuthenticationProvider) ->
            vscode_AuthenticationProvider_to_js x5805
        let (get_onDidChangeSessions :
          t ->
            vscode_AuthenticationProviderAuthenticationSessionsChangeEvent
              vscode_Event)
          =
          fun (x5807 : t) ->
            vscode_Event_of_js
              vscode_AuthenticationProviderAuthenticationSessionsChangeEvent_of_js
              (Ojs.get_prop_ascii (t_to_js x5807) "onDidChangeSessions")
        let (getSessions :
          t ->
            ?scopes:string list ->
              unit -> vscode_AuthenticationSession list _Thenable)
          =
          fun (x5813 : t) ->
            fun ?scopes:(x5809 : string list option) ->
              fun () ->
                _Thenable_of_js
                  (fun (x5815 : Ojs.t) ->
                     Ojs.list_of_js vscode_AuthenticationSession_of_js x5815)
                  (let x5814 = t_to_js x5813 in
                   Ojs.call (Ojs.get_prop_ascii x5814 "getSessions") "apply"
                     [|x5814;((let x5810 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x5809 with
                                | Some x5811 ->
                                    ignore
                                      (Ojs.call x5810 "push"
                                         [|(Ojs.list_to_js Ojs.string_to_js
                                              x5811)|])
                                | None -> ());
                               x5810))|])
        let (createSession :
          t -> scopes:string list -> vscode_AuthenticationSession _Thenable)
          =
          fun (x5819 : t) ->
            fun ~scopes:(x5817 : string list) ->
              _Thenable_of_js vscode_AuthenticationSession_of_js
                (Ojs.call (t_to_js x5819) "createSession"
                   [|(Ojs.list_to_js Ojs.string_to_js x5817)|])
        let (removeSession : t -> sessionId:string -> unit _Thenable) =
          fun (x5822 : t) ->
            fun ~sessionId:(x5821 : string) ->
              _Thenable_of_js Ojs.unit_of_js
                (Ojs.call (t_to_js x5822) "removeSession"
                   [|(Ojs.string_to_js x5821)|])
      end
    module Authentication =
      struct
        let (getSession :
          providerId:string ->
            scopes:string list ->
              options:(vscode_AuthenticationGetSessionOptions,
                anonymous_interface_4) intersection2 ->
                vscode_AuthenticationSession _Thenable)
          =
          fun ~providerId:(x5824 : string) ->
            fun ~scopes:(x5825 : string list) ->
              fun
                ~options:(x5827 :
                           (vscode_AuthenticationGetSessionOptions,
                             anonymous_interface_4) intersection2)
                ->
                _Thenable_of_js vscode_AuthenticationSession_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "vscode")
                        "authentication") "getSession"
                     [|(Ojs.string_to_js x5824);(Ojs.list_to_js
                                                   Ojs.string_to_js x5825);(
                       intersection2_to_js
                         vscode_AuthenticationGetSessionOptions_to_js
                         anonymous_interface_4_to_js x5827)|])
        let (getSession :
          providerId:string ->
            scopes:string list ->
              ?options:vscode_AuthenticationGetSessionOptions ->
                unit -> vscode_AuthenticationSession or_undefined _Thenable)
          =
          fun ~providerId:(x5831 : string) ->
            fun ~scopes:(x5832 : string list) ->
              fun
                ?options:(x5833 :
                           vscode_AuthenticationGetSessionOptions option)
                ->
                fun () ->
                  _Thenable_of_js
                    (fun (x5838 : Ojs.t) ->
                       or_undefined_of_js vscode_AuthenticationSession_of_js
                         x5838)
                    (let x5837 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "vscode")
                         "authentication" in
                     Ojs.call (Ojs.get_prop_ascii x5837 "getSession") "apply"
                       [|x5837;((let x5834 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5834 "push"
                                      [|(Ojs.string_to_js x5831)|]);
                                 ignore
                                   (Ojs.call x5834 "push"
                                      [|(Ojs.list_to_js Ojs.string_to_js
                                           x5832)|]);
                                 (match x5833 with
                                  | Some x5835 ->
                                      ignore
                                        (Ojs.call x5834 "push"
                                           [|(vscode_AuthenticationGetSessionOptions_to_js
                                                x5835)|])
                                  | None -> ());
                                 x5834))|])
        let (onDidChangeSessions :
          vscode_AuthenticationSessionsChangeEvent vscode_Event) =
          vscode_Event_of_js vscode_AuthenticationSessionsChangeEvent_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "vscode")
                  "authentication") "onDidChangeSessions")
        let (registerAuthenticationProvider :
          id:string ->
            label:string ->
              provider:vscode_AuthenticationProvider ->
                ?options:vscode_AuthenticationProviderOptions ->
                  unit -> vscode_Disposable)
          =
          fun ~id:(x5841 : string) ->
            fun ~label:(x5842 : string) ->
              fun ~provider:(x5843 : vscode_AuthenticationProvider) ->
                fun
                  ?options:(x5844 :
                             vscode_AuthenticationProviderOptions option)
                  ->
                  fun () ->
                    vscode_Disposable_of_js
                      (let x5847 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "vscode")
                           "authentication" in
                       Ojs.call
                         (Ojs.get_prop_ascii x5847
                            "registerAuthenticationProvider") "apply"
                         [|x5847;((let x5845 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x5845 "push"
                                        [|(Ojs.string_to_js x5841)|]);
                                   ignore
                                     (Ojs.call x5845 "push"
                                        [|(Ojs.string_to_js x5842)|]);
                                   ignore
                                     (Ojs.call x5845 "push"
                                        [|(vscode_AuthenticationProvider_to_js
                                             x5843)|]);
                                   (match x5844 with
                                    | Some x5846 ->
                                        ignore
                                          (Ojs.call x5845 "push"
                                             [|(vscode_AuthenticationProviderOptions_to_js
                                                  x5846)|])
                                    | None -> ());
                                   x5845))|])
      end
  end
module Thenable =
  struct
    type 'T t = 'T _Thenable
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5850 : Ojs.t) -> _Thenable_of_js __T_of_js x5850
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5848 : __T _Thenable) -> _Thenable_to_js __T_to_js x5848
    let (then_ :
      'T t ->
        ?onfulfilled:(value:'T -> ('TResult, 'TResult t) union2) ->
          ?onrejected:(reason:any -> ('TResult, 'TResult t) union2) ->
            unit -> 'TResult t)
      =
      fun (x5865 : 'T t) ->
        fun
          ?onfulfilled:(x5852 :
                         (value:'T -> ('TResult, 'TResult t) union2) option)
          ->
          fun
            ?onrejected:(x5853 :
                          (reason:any -> ('TResult, 'TResult t) union2)
                            option)
            ->
            fun () ->
              t_of_js Obj.magic
                (let x5867 = t_to_js Obj.magic x5865 in
                 Ojs.call (Ojs.get_prop_ascii x5867 "then") "apply"
                   [|x5867;((let x5854 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5852 with
                              | Some x5860 ->
                                  ignore
                                    (Ojs.call x5854 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x5861 : Ojs.t) ->
                                               union2_to_js Obj.magic
                                                 (fun (x5863 : 'TResult t) ->
                                                    t_to_js Obj.magic x5863)
                                                 (x5860
                                                    ~value:(Obj.magic x5861))))|])
                              | None -> ());
                             (match x5853 with
                              | Some x5855 ->
                                  ignore
                                    (Ojs.call x5854 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x5856 : Ojs.t) ->
                                               union2_to_js Obj.magic
                                                 (fun (x5858 : 'TResult t) ->
                                                    t_to_js Obj.magic x5858)
                                                 (x5855
                                                    ~reason:(any_of_js x5856))))|])
                              | None -> ());
                             x5854))|])
    let (then_' :
      'T t ->
        ?onfulfilled:(value:'T -> ('TResult, 'TResult t) union2) ->
          ?onrejected:(reason:any -> unit) -> unit -> 'TResult t)
      =
      fun (x5879 : 'T t) ->
        fun
          ?onfulfilled:(x5869 :
                         (value:'T -> ('TResult, 'TResult t) union2) option)
          ->
          fun ?onrejected:(x5870 : (reason:any -> unit) option) ->
            fun () ->
              t_of_js Obj.magic
                (let x5881 = t_to_js Obj.magic x5879 in
                 Ojs.call (Ojs.get_prop_ascii x5881 "then") "apply"
                   [|x5881;((let x5871 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5869 with
                              | Some x5874 ->
                                  ignore
                                    (Ojs.call x5871 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x5875 : Ojs.t) ->
                                               union2_to_js Obj.magic
                                                 (fun (x5877 : 'TResult t) ->
                                                    t_to_js Obj.magic x5877)
                                                 (x5874
                                                    ~value:(Obj.magic x5875))))|])
                              | None -> ());
                             (match x5870 with
                              | Some x5872 ->
                                  ignore
                                    (Ojs.call x5871 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x5873 : Ojs.t) ->
                                               x5872
                                                 ~reason:(any_of_js x5873)))|])
                              | None -> ());
                             x5871))|])
  end
