[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2020
open Node_globals
module Internal =
  struct
    module AnonymousInterfaces =
      struct
        type anonymous_interface_0 = [ `anonymous_interface_0 ] intf
        let rec anonymous_interface_0_of_js : Ojs.t -> anonymous_interface_0
          = Obj.magic
        and anonymous_interface_0_to_js : anonymous_interface_0 -> Ojs.t =
          Obj.magic
        type anonymous_interface_1 = [ `anonymous_interface_1 ] intf
        let rec anonymous_interface_1_of_js : Ojs.t -> anonymous_interface_1
          = Obj.magic
        and anonymous_interface_1_to_js : anonymous_interface_1 -> Ojs.t =
          Obj.magic
        type anonymous_interface_2 = [ `anonymous_interface_2 ] intf
        let rec anonymous_interface_2_of_js : Ojs.t -> anonymous_interface_2
          = Obj.magic
        and anonymous_interface_2_to_js : anonymous_interface_2 -> Ojs.t =
          Obj.magic
        type anonymous_interface_3 = [ `anonymous_interface_3 ] intf
        let rec anonymous_interface_3_of_js : Ojs.t -> anonymous_interface_3
          = Obj.magic
        and anonymous_interface_3_to_js : anonymous_interface_3 -> Ojs.t =
          Obj.magic
        type anonymous_interface_4 = [ `anonymous_interface_4 ] intf
        let rec anonymous_interface_4_of_js : Ojs.t -> anonymous_interface_4
          = Obj.magic
        and anonymous_interface_4_to_js : anonymous_interface_4 -> Ojs.t =
          Obj.magic
        type anonymous_interface_5 = [ `anonymous_interface_5 ] intf
        let rec anonymous_interface_5_of_js : Ojs.t -> anonymous_interface_5
          = Obj.magic
        and anonymous_interface_5_to_js : anonymous_interface_5 -> Ojs.t =
          Obj.magic
        type anonymous_interface_6 = [ `anonymous_interface_6 ] intf
        let rec anonymous_interface_6_of_js : Ojs.t -> anonymous_interface_6
          = Obj.magic
        and anonymous_interface_6_to_js : anonymous_interface_6 -> Ojs.t =
          Obj.magic
        type anonymous_interface_7 = [ `anonymous_interface_7 ] intf
        let rec anonymous_interface_7_of_js : Ojs.t -> anonymous_interface_7
          = Obj.magic
        and anonymous_interface_7_to_js : anonymous_interface_7 -> Ojs.t =
          Obj.magic
        type anonymous_interface_8 = [ `anonymous_interface_8 ] intf
        let rec anonymous_interface_8_of_js : Ojs.t -> anonymous_interface_8
          = Obj.magic
        and anonymous_interface_8_to_js : anonymous_interface_8 -> Ojs.t =
          Obj.magic
        type anonymous_interface_9 = [ `anonymous_interface_9 ] intf
        let rec anonymous_interface_9_of_js : Ojs.t -> anonymous_interface_9
          = Obj.magic
        and anonymous_interface_9_to_js : anonymous_interface_9 -> Ojs.t =
          Obj.magic
        type anonymous_interface_10 = [ `anonymous_interface_10 ] intf
        let rec anonymous_interface_10_of_js :
          Ojs.t -> anonymous_interface_10 = Obj.magic
        and anonymous_interface_10_to_js : anonymous_interface_10 -> Ojs.t =
          Obj.magic
        type anonymous_interface_11 = [ `anonymous_interface_11 ] intf
        let rec anonymous_interface_11_of_js :
          Ojs.t -> anonymous_interface_11 = Obj.magic
        and anonymous_interface_11_to_js : anonymous_interface_11 -> Ojs.t =
          Obj.magic
        type anonymous_interface_12 = [ `anonymous_interface_12 ] intf
        let rec anonymous_interface_12_of_js :
          Ojs.t -> anonymous_interface_12 = Obj.magic
        and anonymous_interface_12_to_js : anonymous_interface_12 -> Ojs.t =
          Obj.magic
        type anonymous_interface_13 = [ `anonymous_interface_13 ] intf
        let rec anonymous_interface_13_of_js :
          Ojs.t -> anonymous_interface_13 = Obj.magic
        and anonymous_interface_13_to_js : anonymous_interface_13 -> Ojs.t =
          Obj.magic
        type anonymous_interface_14 = [ `anonymous_interface_14 ] intf
        let rec anonymous_interface_14_of_js :
          Ojs.t -> anonymous_interface_14 = Obj.magic
        and anonymous_interface_14_to_js : anonymous_interface_14 -> Ojs.t =
          Obj.magic
        type anonymous_interface_15 = [ `anonymous_interface_15 ] intf
        let rec anonymous_interface_15_of_js :
          Ojs.t -> anonymous_interface_15 = Obj.magic
        and anonymous_interface_15_to_js : anonymous_interface_15 -> Ojs.t =
          Obj.magic
        type anonymous_interface_16 = [ `anonymous_interface_16 ] intf
        let rec anonymous_interface_16_of_js :
          Ojs.t -> anonymous_interface_16 = Obj.magic
        and anonymous_interface_16_to_js : anonymous_interface_16 -> Ojs.t =
          Obj.magic
        type anonymous_interface_17 = [ `anonymous_interface_17 ] intf
        let rec anonymous_interface_17_of_js :
          Ojs.t -> anonymous_interface_17 = Obj.magic
        and anonymous_interface_17_to_js : anonymous_interface_17 -> Ojs.t =
          Obj.magic
        type anonymous_interface_18 = [ `anonymous_interface_18 ] intf
        let rec anonymous_interface_18_of_js :
          Ojs.t -> anonymous_interface_18 = Obj.magic
        and anonymous_interface_18_to_js : anonymous_interface_18 -> Ojs.t =
          Obj.magic
        type anonymous_interface_19 = [ `anonymous_interface_19 ] intf
        let rec anonymous_interface_19_of_js :
          Ojs.t -> anonymous_interface_19 = Obj.magic
        and anonymous_interface_19_to_js : anonymous_interface_19 -> Ojs.t =
          Obj.magic
        type anonymous_interface_20 = [ `anonymous_interface_20 ] intf
        let rec anonymous_interface_20_of_js :
          Ojs.t -> anonymous_interface_20 = Obj.magic
        and anonymous_interface_20_to_js : anonymous_interface_20 -> Ojs.t =
          Obj.magic
      end
    module Types =
      struct
        open AnonymousInterfaces
        type fs_BaseEncodingOptions = [ `Fs_BaseEncodingOptions ] intf
        and fs_BigIntOptions = [ `Fs_BigIntOptions ] intf
        and fs_BigIntStats =
          [ `Fs_BigIntStats  | `Fs_StatsBase of bigint ] intf
        and fs_BigIntStats =
          [ `Fs_BigIntStats  | `Fs_StatsBase of bigint ] intf
        and fs_BufferEncodingOption =
          (anonymous_interface_7, [ `buffer ]) or_enum
        and fs_Dir = [ `Fs_Dir ] intf
        and fs_Dirent = [ `Fs_Dirent ] intf
        and fs_FSWatcher = [ `Fs_FSWatcher ] intf
        and fs_MakeDirectoryOptions = [ `Fs_MakeDirectoryOptions ] intf
        and fs_Mode = string or_number
        and fs_NoParamCallback = [ `Fs_NoParamCallback ] intf
        and fs_OpenDirOptions = [ `Fs_OpenDirOptions ] intf
        and fs_OpenMode = string or_number
        and fs_PathLike = (Buffer.t_0, URL.t_0) union2 or_string
        and fs_ReadStream = [ `Fs_ReadStream ] intf
        and fs_ReadSyncOptions = [ `Fs_ReadSyncOptions ] intf
        and fs_ReadVResult = [ `Fs_ReadVResult ] intf
        and fs_RmDirOptions = [ `Fs_RmDirOptions ] intf
        and fs_RmOptions = [ `Fs_RmOptions ] intf
        and fs_StatOptions = [ `Fs_StatOptions ] intf
        and fs_Stats = [ `Fs_Stats  | `Fs_StatsBase of float ] intf
        and fs_Stats = [ `Fs_Stats  | `Fs_StatsBase of float ] intf
        and 'T fs_StatsBase = [ `Fs_StatsBase of 'T ] intf
        and fs_WriteFileOptions =
          (fs_BaseEncodingOptions, anonymous_interface_15) intersection2
            or_string or_null
        and fs_WriteStream = [ `Fs_WriteStream ] intf
        and fs_WriteVResult = [ `Fs_WriteVResult ] intf
        and fs_symlink_Type = [ `dir  | `file  | `junction ]
        let rec fs_BaseEncodingOptions_of_js :
          Ojs.t -> fs_BaseEncodingOptions = Obj.magic
        and fs_BaseEncodingOptions_to_js : fs_BaseEncodingOptions -> Ojs.t =
          Obj.magic
        and fs_BigIntOptions_of_js : Ojs.t -> fs_BigIntOptions = Obj.magic
        and fs_BigIntOptions_to_js : fs_BigIntOptions -> Ojs.t = Obj.magic
        and fs_BigIntStats_of_js : Ojs.t -> fs_BigIntStats = Obj.magic
        and fs_BigIntStats_to_js : fs_BigIntStats -> Ojs.t = Obj.magic
        and fs_BigIntStats_of_js : Ojs.t -> fs_BigIntStats = Obj.magic
        and fs_BigIntStats_to_js : fs_BigIntStats -> Ojs.t = Obj.magic
        and fs_BufferEncodingOption_of_js : Ojs.t -> fs_BufferEncodingOption
          =
          fun (x4 : Ojs.t) ->
            or_enum_of_js anonymous_interface_7_of_js
              (fun (x6 : Ojs.t) ->
                 let x7 = x6 in
                 match Ojs.string_of_js x7 with
                 | "buffer" -> `buffer
                 | _ -> assert false) x4
        and fs_BufferEncodingOption_to_js : fs_BufferEncodingOption -> Ojs.t
          =
          fun (x1 : (anonymous_interface_7, [ `buffer ]) or_enum) ->
            or_enum_to_js anonymous_interface_7_to_js
              (fun (x3 : [ `buffer ]) ->
                 match x3 with | `buffer -> Ojs.string_to_js "buffer") x1
        and fs_Dir_of_js : Ojs.t -> fs_Dir = Obj.magic
        and fs_Dir_to_js : fs_Dir -> Ojs.t = Obj.magic
        and fs_Dirent_of_js : Ojs.t -> fs_Dirent = Obj.magic
        and fs_Dirent_to_js : fs_Dirent -> Ojs.t = Obj.magic
        and fs_FSWatcher_of_js : Ojs.t -> fs_FSWatcher = Obj.magic
        and fs_FSWatcher_to_js : fs_FSWatcher -> Ojs.t = Obj.magic
        and fs_MakeDirectoryOptions_of_js : Ojs.t -> fs_MakeDirectoryOptions
          = Obj.magic
        and fs_MakeDirectoryOptions_to_js : fs_MakeDirectoryOptions -> Ojs.t
          = Obj.magic
        and fs_Mode_of_js : Ojs.t -> fs_Mode =
          fun (x10 : Ojs.t) -> or_number_of_js Ojs.string_of_js x10
        and fs_Mode_to_js : fs_Mode -> Ojs.t =
          fun (x8 : string or_number) -> or_number_to_js Ojs.string_to_js x8
        and fs_NoParamCallback_of_js : Ojs.t -> fs_NoParamCallback =
          Obj.magic
        and fs_NoParamCallback_to_js : fs_NoParamCallback -> Ojs.t =
          Obj.magic
        and fs_OpenDirOptions_of_js : Ojs.t -> fs_OpenDirOptions = Obj.magic
        and fs_OpenDirOptions_to_js : fs_OpenDirOptions -> Ojs.t = Obj.magic
        and fs_OpenMode_of_js : Ojs.t -> fs_OpenMode =
          fun (x14 : Ojs.t) -> or_number_of_js Ojs.string_of_js x14
        and fs_OpenMode_to_js : fs_OpenMode -> Ojs.t =
          fun (x12 : string or_number) ->
            or_number_to_js Ojs.string_to_js x12
        and fs_PathLike_of_js : Ojs.t -> fs_PathLike =
          fun (x20 : Ojs.t) ->
            or_string_of_js
              (fun (x21 : Ojs.t) ->
                 union2_of_js Buffer.t_0_of_js URL.t_0_of_js x21) x20
        and fs_PathLike_to_js : fs_PathLike -> Ojs.t =
          fun (x16 : (Buffer.t_0, URL.t_0) union2 or_string) ->
            or_string_to_js
              (fun (x17 : (Buffer.t_0, URL.t_0) union2) ->
                 union2_to_js Buffer.t_0_to_js URL.t_0_to_js x17) x16
        and fs_ReadStream_of_js : Ojs.t -> fs_ReadStream = Obj.magic
        and fs_ReadStream_to_js : fs_ReadStream -> Ojs.t = Obj.magic
        and fs_ReadSyncOptions_of_js : Ojs.t -> fs_ReadSyncOptions =
          Obj.magic
        and fs_ReadSyncOptions_to_js : fs_ReadSyncOptions -> Ojs.t =
          Obj.magic
        and fs_ReadVResult_of_js : Ojs.t -> fs_ReadVResult = Obj.magic
        and fs_ReadVResult_to_js : fs_ReadVResult -> Ojs.t = Obj.magic
        and fs_RmDirOptions_of_js : Ojs.t -> fs_RmDirOptions = Obj.magic
        and fs_RmDirOptions_to_js : fs_RmDirOptions -> Ojs.t = Obj.magic
        and fs_RmOptions_of_js : Ojs.t -> fs_RmOptions = Obj.magic
        and fs_RmOptions_to_js : fs_RmOptions -> Ojs.t = Obj.magic
        and fs_StatOptions_of_js : Ojs.t -> fs_StatOptions = Obj.magic
        and fs_StatOptions_to_js : fs_StatOptions -> Ojs.t = Obj.magic
        and fs_Stats_of_js : Ojs.t -> fs_Stats = Obj.magic
        and fs_Stats_to_js : fs_Stats -> Ojs.t = Obj.magic
        and fs_Stats_of_js : Ojs.t -> fs_Stats = Obj.magic
        and fs_Stats_to_js : fs_Stats -> Ojs.t = Obj.magic
        and fs_StatsBase_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T fs_StatsBase =
          fun _T -> Obj.magic
        and fs_StatsBase_to_js :
          'T . ('T -> Ojs.t) -> 'T fs_StatsBase -> Ojs.t =
          fun _T -> Obj.magic
        and fs_WriteFileOptions_of_js : Ojs.t -> fs_WriteFileOptions =
          fun (x29 : Ojs.t) ->
            or_null_of_js
              (fun (x30 : Ojs.t) ->
                 or_string_of_js
                   (fun (x31 : Ojs.t) ->
                      intersection2_of_js fs_BaseEncodingOptions_of_js
                        anonymous_interface_15_of_js x31) x30) x29
        and fs_WriteFileOptions_to_js : fs_WriteFileOptions -> Ojs.t =
          fun
            (x24 :
              (fs_BaseEncodingOptions, anonymous_interface_15) intersection2
                or_string or_null)
            ->
            or_null_to_js
              (fun
                 (x25 :
                   (fs_BaseEncodingOptions, anonymous_interface_15)
                     intersection2 or_string)
                 ->
                 or_string_to_js
                   (fun
                      (x26 :
                        (fs_BaseEncodingOptions, anonymous_interface_15)
                          intersection2)
                      ->
                      intersection2_to_js fs_BaseEncodingOptions_to_js
                        anonymous_interface_15_to_js x26) x25) x24
        and fs_WriteStream_of_js : Ojs.t -> fs_WriteStream = Obj.magic
        and fs_WriteStream_to_js : fs_WriteStream -> Ojs.t = Obj.magic
        and fs_WriteVResult_of_js : Ojs.t -> fs_WriteVResult = Obj.magic
        and fs_WriteVResult_to_js : fs_WriteVResult -> Ojs.t = Obj.magic
        and fs_symlink_Type_of_js : Ojs.t -> fs_symlink_Type =
          fun (x35 : Ojs.t) ->
            let x36 = x35 in
            match Ojs.string_of_js x36 with
            | "dir" -> `dir
            | "file" -> `file
            | "junction" -> `junction
            | _ -> assert false
        and fs_symlink_Type_to_js : fs_symlink_Type -> Ojs.t =
          fun (x34 : [ `dir  | `file  | `junction ]) ->
            match x34 with
            | `dir -> Ojs.string_to_js "dir"
            | `file -> Ojs.string_to_js "file"
            | `junction -> Ojs.string_to_js "junction"
      end
  end
open Internal
open AnonymousInterfaces
open Types
module AnonymousInterface0 =
  struct
    type t = anonymous_interface_0
    let rec t_of_js : Ojs.t -> t =
      fun (x38 : Ojs.t) -> anonymous_interface_0_of_js x38
    and t_to_js : t -> Ojs.t =
      fun (x37 : anonymous_interface_0) -> anonymous_interface_0_to_js x37
    let (get_bigint : t -> [ `L_b_false ]) =
      fun (x39 : t) ->
        let x40 = Ojs.get_prop_ascii (t_to_js x39) "bigint" in
        match Ojs.bool_of_js x40 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_bigint : t -> [ `L_b_false ] -> unit) =
      fun (x41 : t) ->
        fun (x42 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (t_to_js x41) "bigint"
            (match x42 with | `L_b_false -> Ojs.string_to_js "LBFalse")
  end
module AnonymousInterface1 =
  struct
    type t = anonymous_interface_1
    let rec t_of_js : Ojs.t -> t =
      fun (x44 : Ojs.t) -> anonymous_interface_1_of_js x44
    and t_to_js : t -> Ojs.t =
      fun (x43 : anonymous_interface_1) -> anonymous_interface_1_to_js x43
    let (get_bigint : t -> [ `L_b_true ]) =
      fun (x45 : t) ->
        let x46 = Ojs.get_prop_ascii (t_to_js x45) "bigint" in
        match Ojs.bool_of_js x46 with | true -> `L_b_true | _ -> assert false
    let (set_bigint : t -> [ `L_b_true ] -> unit) =
      fun (x47 : t) ->
        fun (x48 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x47) "bigint"
            (match x48 with | `L_b_true -> Ojs.string_to_js "LBTrue")
  end
module AnonymousInterface2 =
  struct
    type t = anonymous_interface_2
    let rec t_of_js : Ojs.t -> t =
      fun (x50 : Ojs.t) -> anonymous_interface_2_of_js x50
    and t_to_js : t -> Ojs.t =
      fun (x49 : anonymous_interface_2) -> anonymous_interface_2_to_js x49
    let (get_bytesRead : t -> float) =
      fun (x51 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x51) "bytesRead")
    let (set_bytesRead : t -> float -> unit) =
      fun (x52 : t) ->
        fun (x53 : float) ->
          Ojs.set_prop_ascii (t_to_js x52) "bytesRead" (Ojs.float_to_js x53)
    let (get_buffer : t -> 'TBuffer) =
      fun (x54 : t) -> Obj.magic (Ojs.get_prop_ascii (t_to_js x54) "buffer")
    let (set_buffer : t -> 'TBuffer -> unit) =
      fun (x55 : t) ->
        fun (x56 : 'TBuffer) ->
          Ojs.set_prop_ascii (t_to_js x55) "buffer" (Obj.magic x56)
  end
module AnonymousInterface3 =
  struct
    type t = anonymous_interface_3
    let rec t_of_js : Ojs.t -> t =
      fun (x58 : Ojs.t) -> anonymous_interface_3_of_js x58
    and t_to_js : t -> Ojs.t =
      fun (x57 : anonymous_interface_3) -> anonymous_interface_3_to_js x57
    let (get_bytesWritten : t -> float) =
      fun (x59 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x59) "bytesWritten")
    let (set_bytesWritten : t -> float -> unit) =
      fun (x60 : t) ->
        fun (x61 : float) ->
          Ojs.set_prop_ascii (t_to_js x60) "bytesWritten"
            (Ojs.float_to_js x61)
    let (get_buffer : t -> 'TBuffer) =
      fun (x62 : t) -> Obj.magic (Ojs.get_prop_ascii (t_to_js x62) "buffer")
    let (set_buffer : t -> 'TBuffer -> unit) =
      fun (x63 : t) ->
        fun (x64 : 'TBuffer) ->
          Ojs.set_prop_ascii (t_to_js x63) "buffer" (Obj.magic x64)
  end
module AnonymousInterface4 =
  struct
    type t = anonymous_interface_4
    let rec t_of_js : Ojs.t -> t =
      fun (x66 : Ojs.t) -> anonymous_interface_4_of_js x66
    and t_to_js : t -> Ojs.t =
      fun (x65 : anonymous_interface_4) -> anonymous_interface_4_to_js x65
    let (get_bytesWritten : t -> float) =
      fun (x67 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x67) "bytesWritten")
    let (set_bytesWritten : t -> float -> unit) =
      fun (x68 : t) ->
        fun (x69 : float) ->
          Ojs.set_prop_ascii (t_to_js x68) "bytesWritten"
            (Ojs.float_to_js x69)
    let (get_buffer : t -> string) =
      fun (x70 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x70) "buffer")
    let (set_buffer : t -> string -> unit) =
      fun (x71 : t) ->
        fun (x72 : string) ->
          Ojs.set_prop_ascii (t_to_js x71) "buffer" (Ojs.string_to_js x72)
  end
module AnonymousInterface5 =
  struct
    type t = anonymous_interface_5
    let rec t_of_js : Ojs.t -> t =
      fun (x74 : Ojs.t) -> anonymous_interface_5_of_js x74
    and t_to_js : t -> Ojs.t =
      fun (x73 : anonymous_interface_5) -> anonymous_interface_5_to_js x73
    let (get_encoding : t -> BufferEncoding.t_0) =
      fun (x75 : t) ->
        BufferEncoding.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x75) "encoding")
    let (set_encoding : t -> BufferEncoding.t_0 -> unit) =
      fun (x76 : t) ->
        fun (x77 : BufferEncoding.t_0) ->
          Ojs.set_prop_ascii (t_to_js x76) "encoding"
            (BufferEncoding.t_0_to_js x77)
    let (get_flag : t -> string) =
      fun (x78 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x78) "flag")
    let (set_flag : t -> string -> unit) =
      fun (x79 : t) ->
        fun (x80 : string) ->
          Ojs.set_prop_ascii (t_to_js x79) "flag" (Ojs.string_to_js x80)
  end
module AnonymousInterface6 =
  struct
    type t = anonymous_interface_6
    let rec t_of_js : Ojs.t -> t =
      fun (x82 : Ojs.t) -> anonymous_interface_6_of_js x82
    and t_to_js : t -> Ojs.t =
      fun (x81 : anonymous_interface_6) -> anonymous_interface_6_to_js x81
    let (get_encoding : t -> never or_null) =
      fun (x83 : t) ->
        or_null_of_js never_of_js
          (Ojs.get_prop_ascii (t_to_js x83) "encoding")
    let (set_encoding : t -> never or_null -> unit) =
      fun (x85 : t) ->
        fun (x86 : never or_null) ->
          Ojs.set_prop_ascii (t_to_js x85) "encoding"
            (or_null_to_js never_to_js x86)
    let (get_flag : t -> string) =
      fun (x88 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x88) "flag")
    let (set_flag : t -> string -> unit) =
      fun (x89 : t) ->
        fun (x90 : string) ->
          Ojs.set_prop_ascii (t_to_js x89) "flag" (Ojs.string_to_js x90)
  end
module AnonymousInterface7 =
  struct
    type t = anonymous_interface_7
    let rec t_of_js : Ojs.t -> t =
      fun (x92 : Ojs.t) -> anonymous_interface_7_of_js x92
    and t_to_js : t -> Ojs.t =
      fun (x91 : anonymous_interface_7) -> anonymous_interface_7_to_js x91
    let (get_encoding : t -> [ `buffer ]) =
      fun (x93 : t) ->
        let x94 = Ojs.get_prop_ascii (t_to_js x93) "encoding" in
        match Ojs.string_of_js x94 with
        | "buffer" -> `buffer
        | _ -> assert false
    let (set_encoding : t -> [ `buffer ] -> unit) =
      fun (x95 : t) ->
        fun (x96 : [ `buffer ]) ->
          Ojs.set_prop_ascii (t_to_js x95) "encoding"
            (match x96 with | `buffer -> Ojs.string_to_js "buffer")
  end
module AnonymousInterface8 =
  struct
    type t = anonymous_interface_8
    let rec t_of_js : Ojs.t -> t =
      fun (x98 : Ojs.t) -> anonymous_interface_8_of_js x98
    and t_to_js : t -> Ojs.t =
      fun (x97 : anonymous_interface_8) -> anonymous_interface_8_to_js x97
    let (get_encoding : t -> [ `buffer ]) =
      fun (x99 : t) ->
        let x100 = Ojs.get_prop_ascii (t_to_js x99) "encoding" in
        match Ojs.string_of_js x100 with
        | "buffer" -> `buffer
        | _ -> assert false
    let (set_encoding : t -> [ `buffer ] -> unit) =
      fun (x101 : t) ->
        fun (x102 : [ `buffer ]) ->
          Ojs.set_prop_ascii (t_to_js x101) "encoding"
            (match x102 with | `buffer -> Ojs.string_to_js "buffer")
    let (get_persistent : t -> bool) =
      fun (x103 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x103) "persistent")
    let (set_persistent : t -> bool -> unit) =
      fun (x104 : t) ->
        fun (x105 : bool) ->
          Ojs.set_prop_ascii (t_to_js x104) "persistent"
            (Ojs.bool_to_js x105)
    let (get_recursive : t -> bool) =
      fun (x106 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x106) "recursive")
    let (set_recursive : t -> bool -> unit) =
      fun (x107 : t) ->
        fun (x108 : bool) ->
          Ojs.set_prop_ascii (t_to_js x107) "recursive" (Ojs.bool_to_js x108)
  end
module AnonymousInterface9 =
  struct
    type t = anonymous_interface_9
    let rec t_of_js : Ojs.t -> t =
      fun (x110 : Ojs.t) -> anonymous_interface_9_of_js x110
    and t_to_js : t -> Ojs.t =
      fun (x109 : anonymous_interface_9) -> anonymous_interface_9_to_js x109
    let (get_encoding : t -> [ `buffer ]) =
      fun (x111 : t) ->
        let x112 = Ojs.get_prop_ascii (t_to_js x111) "encoding" in
        match Ojs.string_of_js x112 with
        | "buffer" -> `buffer
        | _ -> assert false
    let (set_encoding : t -> [ `buffer ] -> unit) =
      fun (x113 : t) ->
        fun (x114 : [ `buffer ]) ->
          Ojs.set_prop_ascii (t_to_js x113) "encoding"
            (match x114 with | `buffer -> Ojs.string_to_js "buffer")
    let (get_withFileTypes : t -> [ `L_b_false ]) =
      fun (x115 : t) ->
        let x116 = Ojs.get_prop_ascii (t_to_js x115) "withFileTypes" in
        match Ojs.bool_of_js x116 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_withFileTypes : t -> [ `L_b_false ] -> unit) =
      fun (x117 : t) ->
        fun (x118 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (t_to_js x117) "withFileTypes"
            (match x118 with | `L_b_false -> Ojs.string_to_js "LBFalse")
  end
module AnonymousInterface10 =
  struct
    type t = anonymous_interface_10
    let rec t_of_js : Ojs.t -> t =
      fun (x120 : Ojs.t) -> anonymous_interface_10_of_js x120
    and t_to_js : t -> Ojs.t =
      fun (x119 : anonymous_interface_10) ->
        anonymous_interface_10_to_js x119
    let (get_encoding : t -> BufferEncoding.t_0 or_null) =
      fun (x121 : t) ->
        or_null_of_js BufferEncoding.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x121) "encoding")
    let (set_encoding : t -> BufferEncoding.t_0 or_null -> unit) =
      fun (x123 : t) ->
        fun (x124 : BufferEncoding.t_0 or_null) ->
          Ojs.set_prop_ascii (t_to_js x123) "encoding"
            (or_null_to_js BufferEncoding.t_0_to_js x124)
    let (get_persistent : t -> bool) =
      fun (x126 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x126) "persistent")
    let (set_persistent : t -> bool -> unit) =
      fun (x127 : t) ->
        fun (x128 : bool) ->
          Ojs.set_prop_ascii (t_to_js x127) "persistent"
            (Ojs.bool_to_js x128)
    let (get_recursive : t -> bool) =
      fun (x129 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x129) "recursive")
    let (set_recursive : t -> bool -> unit) =
      fun (x130 : t) ->
        fun (x131 : bool) ->
          Ojs.set_prop_ascii (t_to_js x130) "recursive" (Ojs.bool_to_js x131)
  end
module AnonymousInterface11 =
  struct
    type t = anonymous_interface_11
    let rec t_of_js : Ojs.t -> t =
      fun (x133 : Ojs.t) -> anonymous_interface_11_of_js x133
    and t_to_js : t -> Ojs.t =
      fun (x132 : anonymous_interface_11) ->
        anonymous_interface_11_to_js x132
    let (get_encoding : t -> BufferEncoding.t_0 or_null) =
      fun (x134 : t) ->
        or_null_of_js BufferEncoding.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x134) "encoding")
    let (set_encoding : t -> BufferEncoding.t_0 or_null -> unit) =
      fun (x136 : t) ->
        fun (x137 : BufferEncoding.t_0 or_null) ->
          Ojs.set_prop_ascii (t_to_js x136) "encoding"
            (or_null_to_js BufferEncoding.t_0_to_js x137)
    let (get_withFileTypes : t -> [ `L_b_false ]) =
      fun (x139 : t) ->
        let x140 = Ojs.get_prop_ascii (t_to_js x139) "withFileTypes" in
        match Ojs.bool_of_js x140 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_withFileTypes : t -> [ `L_b_false ] -> unit) =
      fun (x141 : t) ->
        fun (x142 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (t_to_js x141) "withFileTypes"
            (match x142 with | `L_b_false -> Ojs.string_to_js "LBFalse")
  end
module AnonymousInterface12 =
  struct
    type t = anonymous_interface_12
    let rec t_of_js : Ojs.t -> t =
      fun (x144 : Ojs.t) -> anonymous_interface_12_of_js x144
    and t_to_js : t -> Ojs.t =
      fun (x143 : anonymous_interface_12) ->
        anonymous_interface_12_to_js x143
    let (get_flag : t -> string) =
      fun (x145 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x145) "flag")
    let (set_flag : t -> string -> unit) =
      fun (x146 : t) ->
        fun (x147 : string) ->
          Ojs.set_prop_ascii (t_to_js x146) "flag" (Ojs.string_to_js x147)
  end
module AnonymousInterface13 =
  struct
    type t = anonymous_interface_13
    let rec t_of_js : Ojs.t -> t =
      fun (x149 : Ojs.t) -> anonymous_interface_13_of_js x149
    and t_to_js : t -> Ojs.t =
      fun (x148 : anonymous_interface_13) ->
        anonymous_interface_13_to_js x148
    let (get_flags : t -> string) =
      fun (x150 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x150) "flags")
    let (set_flags : t -> string -> unit) =
      fun (x151 : t) ->
        fun (x152 : string) ->
          Ojs.set_prop_ascii (t_to_js x151) "flags" (Ojs.string_to_js x152)
    let (get_encoding : t -> BufferEncoding.t_0) =
      fun (x153 : t) ->
        BufferEncoding.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x153) "encoding")
    let (set_encoding : t -> BufferEncoding.t_0 -> unit) =
      fun (x154 : t) ->
        fun (x155 : BufferEncoding.t_0) ->
          Ojs.set_prop_ascii (t_to_js x154) "encoding"
            (BufferEncoding.t_0_to_js x155)
    let (get_fd : t -> float) =
      fun (x156 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x156) "fd")
    let (set_fd : t -> float -> unit) =
      fun (x157 : t) ->
        fun (x158 : float) ->
          Ojs.set_prop_ascii (t_to_js x157) "fd" (Ojs.float_to_js x158)
    let (get_mode : t -> float) =
      fun (x159 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x159) "mode")
    let (set_mode : t -> float -> unit) =
      fun (x160 : t) ->
        fun (x161 : float) ->
          Ojs.set_prop_ascii (t_to_js x160) "mode" (Ojs.float_to_js x161)
    let (get_autoClose : t -> bool) =
      fun (x162 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x162) "autoClose")
    let (set_autoClose : t -> bool -> unit) =
      fun (x163 : t) ->
        fun (x164 : bool) ->
          Ojs.set_prop_ascii (t_to_js x163) "autoClose" (Ojs.bool_to_js x164)
    let (get_emitClose : t -> bool) =
      fun (x165 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x165) "emitClose")
    let (set_emitClose : t -> bool -> unit) =
      fun (x166 : t) ->
        fun (x167 : bool) ->
          Ojs.set_prop_ascii (t_to_js x166) "emitClose" (Ojs.bool_to_js x167)
    let (get_start : t -> float) =
      fun (x168 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x168) "start")
    let (set_start : t -> float -> unit) =
      fun (x169 : t) ->
        fun (x170 : float) ->
          Ojs.set_prop_ascii (t_to_js x169) "start" (Ojs.float_to_js x170)
    let (get_end : t -> float) =
      fun (x171 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x171) "end")
    let (set_end : t -> float -> unit) =
      fun (x172 : t) ->
        fun (x173 : float) ->
          Ojs.set_prop_ascii (t_to_js x172) "end" (Ojs.float_to_js x173)
    let (get_highWaterMark : t -> float) =
      fun (x174 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x174) "highWaterMark")
    let (set_highWaterMark : t -> float -> unit) =
      fun (x175 : t) ->
        fun (x176 : float) ->
          Ojs.set_prop_ascii (t_to_js x175) "highWaterMark"
            (Ojs.float_to_js x176)
  end
module AnonymousInterface14 =
  struct
    type t = anonymous_interface_14
    let rec t_of_js : Ojs.t -> t =
      fun (x178 : Ojs.t) -> anonymous_interface_14_of_js x178
    and t_to_js : t -> Ojs.t =
      fun (x177 : anonymous_interface_14) ->
        anonymous_interface_14_to_js x177
    let (get_flags : t -> string) =
      fun (x179 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x179) "flags")
    let (set_flags : t -> string -> unit) =
      fun (x180 : t) ->
        fun (x181 : string) ->
          Ojs.set_prop_ascii (t_to_js x180) "flags" (Ojs.string_to_js x181)
    let (get_encoding : t -> BufferEncoding.t_0) =
      fun (x182 : t) ->
        BufferEncoding.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x182) "encoding")
    let (set_encoding : t -> BufferEncoding.t_0 -> unit) =
      fun (x183 : t) ->
        fun (x184 : BufferEncoding.t_0) ->
          Ojs.set_prop_ascii (t_to_js x183) "encoding"
            (BufferEncoding.t_0_to_js x184)
    let (get_fd : t -> float) =
      fun (x185 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x185) "fd")
    let (set_fd : t -> float -> unit) =
      fun (x186 : t) ->
        fun (x187 : float) ->
          Ojs.set_prop_ascii (t_to_js x186) "fd" (Ojs.float_to_js x187)
    let (get_mode : t -> float) =
      fun (x188 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x188) "mode")
    let (set_mode : t -> float -> unit) =
      fun (x189 : t) ->
        fun (x190 : float) ->
          Ojs.set_prop_ascii (t_to_js x189) "mode" (Ojs.float_to_js x190)
    let (get_autoClose : t -> bool) =
      fun (x191 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x191) "autoClose")
    let (set_autoClose : t -> bool -> unit) =
      fun (x192 : t) ->
        fun (x193 : bool) ->
          Ojs.set_prop_ascii (t_to_js x192) "autoClose" (Ojs.bool_to_js x193)
    let (get_emitClose : t -> bool) =
      fun (x194 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x194) "emitClose")
    let (set_emitClose : t -> bool -> unit) =
      fun (x195 : t) ->
        fun (x196 : bool) ->
          Ojs.set_prop_ascii (t_to_js x195) "emitClose" (Ojs.bool_to_js x196)
    let (get_start : t -> float) =
      fun (x197 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x197) "start")
    let (set_start : t -> float -> unit) =
      fun (x198 : t) ->
        fun (x199 : float) ->
          Ojs.set_prop_ascii (t_to_js x198) "start" (Ojs.float_to_js x199)
    let (get_highWaterMark : t -> float) =
      fun (x200 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x200) "highWaterMark")
    let (set_highWaterMark : t -> float -> unit) =
      fun (x201 : t) ->
        fun (x202 : float) ->
          Ojs.set_prop_ascii (t_to_js x201) "highWaterMark"
            (Ojs.float_to_js x202)
  end
module AnonymousInterface15 =
  struct
    type t = anonymous_interface_15
    let rec t_of_js : Ojs.t -> t =
      fun (x204 : Ojs.t) -> anonymous_interface_15_of_js x204
    and t_to_js : t -> Ojs.t =
      fun (x203 : anonymous_interface_15) ->
        anonymous_interface_15_to_js x203
    let (get_mode : t -> fs_Mode) =
      fun (x205 : t) ->
        fs_Mode_of_js (Ojs.get_prop_ascii (t_to_js x205) "mode")
    let (set_mode : t -> fs_Mode -> unit) =
      fun (x206 : t) ->
        fun (x207 : fs_Mode) ->
          Ojs.set_prop_ascii (t_to_js x206) "mode" (fs_Mode_to_js x207)
    let (get_flag : t -> string) =
      fun (x208 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x208) "flag")
    let (set_flag : t -> string -> unit) =
      fun (x209 : t) ->
        fun (x210 : string) ->
          Ojs.set_prop_ascii (t_to_js x209) "flag" (Ojs.string_to_js x210)
  end
module AnonymousInterface16 =
  struct
    type t = anonymous_interface_16
    let rec t_of_js : Ojs.t -> t =
      fun (x212 : Ojs.t) -> anonymous_interface_16_of_js x212
    and t_to_js : t -> Ojs.t =
      fun (x211 : anonymous_interface_16) ->
        anonymous_interface_16_to_js x211
    let (get_persistent : t -> bool) =
      fun (x213 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x213) "persistent")
    let (set_persistent : t -> bool -> unit) =
      fun (x214 : t) ->
        fun (x215 : bool) ->
          Ojs.set_prop_ascii (t_to_js x214) "persistent"
            (Ojs.bool_to_js x215)
    let (get_interval : t -> float) =
      fun (x216 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x216) "interval")
    let (set_interval : t -> float -> unit) =
      fun (x217 : t) ->
        fun (x218 : float) ->
          Ojs.set_prop_ascii (t_to_js x217) "interval" (Ojs.float_to_js x218)
  end
module AnonymousInterface17 =
  struct
    type t = anonymous_interface_17
    let rec t_of_js : Ojs.t -> t =
      fun (x220 : Ojs.t) -> anonymous_interface_17_of_js x220
    and t_to_js : t -> Ojs.t =
      fun (x219 : anonymous_interface_17) ->
        anonymous_interface_17_to_js x219
    let (get_recursive : t -> [ `L_b_false ]) =
      fun (x221 : t) ->
        let x222 = Ojs.get_prop_ascii (t_to_js x221) "recursive" in
        match Ojs.bool_of_js x222 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_recursive : t -> [ `L_b_false ] -> unit) =
      fun (x223 : t) ->
        fun (x224 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (t_to_js x223) "recursive"
            (match x224 with | `L_b_false -> Ojs.string_to_js "LBFalse")
  end
module AnonymousInterface18 =
  struct
    type t = anonymous_interface_18
    let rec t_of_js : Ojs.t -> t =
      fun (x226 : Ojs.t) -> anonymous_interface_18_of_js x226
    and t_to_js : t -> Ojs.t =
      fun (x225 : anonymous_interface_18) ->
        anonymous_interface_18_to_js x225
    let (get_recursive : t -> [ `L_b_true ]) =
      fun (x227 : t) ->
        let x228 = Ojs.get_prop_ascii (t_to_js x227) "recursive" in
        match Ojs.bool_of_js x228 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_recursive : t -> [ `L_b_true ] -> unit) =
      fun (x229 : t) ->
        fun (x230 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x229) "recursive"
            (match x230 with | `L_b_true -> Ojs.string_to_js "LBTrue")
  end
module AnonymousInterface19 =
  struct
    type t = anonymous_interface_19
    let rec t_of_js : Ojs.t -> t =
      fun (x232 : Ojs.t) -> anonymous_interface_19_of_js x232
    and t_to_js : t -> Ojs.t =
      fun (x231 : anonymous_interface_19) ->
        anonymous_interface_19_to_js x231
    let (get_withFileTypes : t -> [ `L_b_false ]) =
      fun (x233 : t) ->
        let x234 = Ojs.get_prop_ascii (t_to_js x233) "withFileTypes" in
        match Ojs.bool_of_js x234 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_withFileTypes : t -> [ `L_b_false ] -> unit) =
      fun (x235 : t) ->
        fun (x236 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (t_to_js x235) "withFileTypes"
            (match x236 with | `L_b_false -> Ojs.string_to_js "LBFalse")
  end
module AnonymousInterface20 =
  struct
    type t = anonymous_interface_20
    let rec t_of_js : Ojs.t -> t =
      fun (x238 : Ojs.t) -> anonymous_interface_20_of_js x238
    and t_to_js : t -> Ojs.t =
      fun (x237 : anonymous_interface_20) ->
        anonymous_interface_20_to_js x237
    let (get_withFileTypes : t -> [ `L_b_true ]) =
      fun (x239 : t) ->
        let x240 = Ojs.get_prop_ascii (t_to_js x239) "withFileTypes" in
        match Ojs.bool_of_js x240 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_withFileTypes : t -> [ `L_b_true ] -> unit) =
      fun (x241 : t) ->
        fun (x242 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x241) "withFileTypes"
            (match x242 with | `L_b_true -> Ojs.string_to_js "LBTrue")
  end
module Node_fs = struct  end
module Fs =
  struct
    module PathLike =
      struct
        type t = fs_PathLike
        let rec t_of_js : Ojs.t -> t =
          fun (x244 : Ojs.t) -> fs_PathLike_of_js x244
        and t_to_js : t -> Ojs.t =
          fun (x243 : fs_PathLike) -> fs_PathLike_to_js x243
      end
    module NoParamCallback =
      struct
        type t = fs_NoParamCallback
        let rec t_of_js : Ojs.t -> t =
          fun (x246 : Ojs.t) -> fs_NoParamCallback_of_js x246
        and t_to_js : t -> Ojs.t =
          fun (x245 : fs_NoParamCallback) -> fs_NoParamCallback_to_js x245
        let (apply : t -> err:NodeJS.ErrnoException.t_0 or_null -> unit) =
          fun (x249 : t) ->
            fun ~err:(x247 : NodeJS.ErrnoException.t_0 or_null) ->
              ignore
                (Ojs.apply (t_to_js x249)
                   [|(or_null_to_js NodeJS.ErrnoException.t_0_to_js x247)|])
      end
    module BufferEncodingOption =
      struct
        type t = fs_BufferEncodingOption
        let rec t_of_js : Ojs.t -> t =
          fun (x251 : Ojs.t) -> fs_BufferEncodingOption_of_js x251
        and t_to_js : t -> Ojs.t =
          fun (x250 : fs_BufferEncodingOption) ->
            fs_BufferEncodingOption_to_js x250
      end
    module BaseEncodingOptions =
      struct
        type t = fs_BaseEncodingOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x253 : Ojs.t) -> fs_BaseEncodingOptions_of_js x253
        and t_to_js : t -> Ojs.t =
          fun (x252 : fs_BaseEncodingOptions) ->
            fs_BaseEncodingOptions_to_js x252
        let (get_encoding : t -> BufferEncoding.t_0 or_null) =
          fun (x254 : t) ->
            or_null_of_js BufferEncoding.t_0_of_js
              (Ojs.get_prop_ascii (t_to_js x254) "encoding")
        let (set_encoding : t -> BufferEncoding.t_0 or_null -> unit) =
          fun (x256 : t) ->
            fun (x257 : BufferEncoding.t_0 or_null) ->
              Ojs.set_prop_ascii (t_to_js x256) "encoding"
                (or_null_to_js BufferEncoding.t_0_to_js x257)
      end
    module OpenMode =
      struct
        type t = fs_OpenMode
        let rec t_of_js : Ojs.t -> t =
          fun (x260 : Ojs.t) -> fs_OpenMode_of_js x260
        and t_to_js : t -> Ojs.t =
          fun (x259 : fs_OpenMode) -> fs_OpenMode_to_js x259
      end
    module Mode =
      struct
        type t = fs_Mode
        let rec t_of_js : Ojs.t -> t =
          fun (x262 : Ojs.t) -> fs_Mode_of_js x262
        and t_to_js : t -> Ojs.t = fun (x261 : fs_Mode) -> fs_Mode_to_js x261
      end
    module StatsBase =
      struct
        type 'T t = 'T fs_StatsBase
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x265 : Ojs.t) -> fs_StatsBase_of_js __T_of_js x265
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x263 : __T fs_StatsBase) ->
              fs_StatsBase_to_js __T_to_js x263
        let (isFile : 'T t -> bool) =
          fun (x267 : 'T t) ->
            Ojs.bool_of_js (Ojs.call (t_to_js Obj.magic x267) "isFile" [||])
        let (isDirectory : 'T t -> bool) =
          fun (x269 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js Obj.magic x269) "isDirectory" [||])
        let (isBlockDevice : 'T t -> bool) =
          fun (x271 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js Obj.magic x271) "isBlockDevice" [||])
        let (isCharacterDevice : 'T t -> bool) =
          fun (x273 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js Obj.magic x273) "isCharacterDevice" [||])
        let (isSymbolicLink : 'T t -> bool) =
          fun (x275 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js Obj.magic x275) "isSymbolicLink" [||])
        let (isFIFO : 'T t -> bool) =
          fun (x277 : 'T t) ->
            Ojs.bool_of_js (Ojs.call (t_to_js Obj.magic x277) "isFIFO" [||])
        let (isSocket : 'T t -> bool) =
          fun (x279 : 'T t) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js Obj.magic x279) "isSocket" [||])
        let (get_dev : 'T t -> 'T) =
          fun (x281 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x281) "dev")
        let (set_dev : 'T t -> 'T -> unit) =
          fun (x283 : 'T t) ->
            fun (x284 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x283) "dev"
                (Obj.magic x284)
        let (get_ino : 'T t -> 'T) =
          fun (x286 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x286) "ino")
        let (set_ino : 'T t -> 'T -> unit) =
          fun (x288 : 'T t) ->
            fun (x289 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x288) "ino"
                (Obj.magic x289)
        let (get_mode : 'T t -> 'T) =
          fun (x291 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x291) "mode")
        let (set_mode : 'T t -> 'T -> unit) =
          fun (x293 : 'T t) ->
            fun (x294 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x293) "mode"
                (Obj.magic x294)
        let (get_nlink : 'T t -> 'T) =
          fun (x296 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x296) "nlink")
        let (set_nlink : 'T t -> 'T -> unit) =
          fun (x298 : 'T t) ->
            fun (x299 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x298) "nlink"
                (Obj.magic x299)
        let (get_uid : 'T t -> 'T) =
          fun (x301 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x301) "uid")
        let (set_uid : 'T t -> 'T -> unit) =
          fun (x303 : 'T t) ->
            fun (x304 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x303) "uid"
                (Obj.magic x304)
        let (get_gid : 'T t -> 'T) =
          fun (x306 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x306) "gid")
        let (set_gid : 'T t -> 'T -> unit) =
          fun (x308 : 'T t) ->
            fun (x309 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x308) "gid"
                (Obj.magic x309)
        let (get_rdev : 'T t -> 'T) =
          fun (x311 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x311) "rdev")
        let (set_rdev : 'T t -> 'T -> unit) =
          fun (x313 : 'T t) ->
            fun (x314 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x313) "rdev"
                (Obj.magic x314)
        let (get_size : 'T t -> 'T) =
          fun (x316 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x316) "size")
        let (set_size : 'T t -> 'T -> unit) =
          fun (x318 : 'T t) ->
            fun (x319 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x318) "size"
                (Obj.magic x319)
        let (get_blksize : 'T t -> 'T) =
          fun (x321 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x321) "blksize")
        let (set_blksize : 'T t -> 'T -> unit) =
          fun (x323 : 'T t) ->
            fun (x324 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x323) "blksize"
                (Obj.magic x324)
        let (get_blocks : 'T t -> 'T) =
          fun (x326 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x326) "blocks")
        let (set_blocks : 'T t -> 'T -> unit) =
          fun (x328 : 'T t) ->
            fun (x329 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x328) "blocks"
                (Obj.magic x329)
        let (get_atimeMs : 'T t -> 'T) =
          fun (x331 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x331) "atimeMs")
        let (set_atimeMs : 'T t -> 'T -> unit) =
          fun (x333 : 'T t) ->
            fun (x334 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x333) "atimeMs"
                (Obj.magic x334)
        let (get_mtimeMs : 'T t -> 'T) =
          fun (x336 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x336) "mtimeMs")
        let (set_mtimeMs : 'T t -> 'T -> unit) =
          fun (x338 : 'T t) ->
            fun (x339 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x338) "mtimeMs"
                (Obj.magic x339)
        let (get_ctimeMs : 'T t -> 'T) =
          fun (x341 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x341) "ctimeMs")
        let (set_ctimeMs : 'T t -> 'T -> unit) =
          fun (x343 : 'T t) ->
            fun (x344 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x343) "ctimeMs"
                (Obj.magic x344)
        let (get_birthtimeMs : 'T t -> 'T) =
          fun (x346 : 'T t) ->
            Obj.magic
              (Ojs.get_prop_ascii (t_to_js Obj.magic x346) "birthtimeMs")
        let (set_birthtimeMs : 'T t -> 'T -> unit) =
          fun (x348 : 'T t) ->
            fun (x349 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x348) "birthtimeMs"
                (Obj.magic x349)
        let (get_atime : 'T t -> Date.t) =
          fun (x351 : 'T t) ->
            Date.t_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x351) "atime")
        let (set_atime : 'T t -> Date.t -> unit) =
          fun (x353 : 'T t) ->
            fun (x354 : Date.t) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x353) "atime"
                (Date.t_to_js x354)
        let (get_mtime : 'T t -> Date.t) =
          fun (x356 : 'T t) ->
            Date.t_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x356) "mtime")
        let (set_mtime : 'T t -> Date.t -> unit) =
          fun (x358 : 'T t) ->
            fun (x359 : Date.t) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x358) "mtime"
                (Date.t_to_js x359)
        let (get_ctime : 'T t -> Date.t) =
          fun (x361 : 'T t) ->
            Date.t_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x361) "ctime")
        let (set_ctime : 'T t -> Date.t -> unit) =
          fun (x363 : 'T t) ->
            fun (x364 : Date.t) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x363) "ctime"
                (Date.t_to_js x364)
        let (get_birthtime : 'T t -> Date.t) =
          fun (x366 : 'T t) ->
            Date.t_of_js
              (Ojs.get_prop_ascii (t_to_js Obj.magic x366) "birthtime")
        let (set_birthtime : 'T t -> Date.t -> unit) =
          fun (x368 : 'T t) ->
            fun (x369 : Date.t) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x368) "birthtime"
                (Date.t_to_js x369)
      end
    module Stats =
      struct
        type t = fs_Stats
        let rec t_of_js : Ojs.t -> t =
          fun (x372 : Ojs.t) -> fs_Stats_of_js x372
        and t_to_js : t -> Ojs.t =
          fun (x371 : fs_Stats) -> fs_Stats_to_js x371
        let (cast : t -> float fs_StatsBase) =
          fun (x373 : t) -> fs_StatsBase_of_js Ojs.float_of_js (t_to_js x373)
      end
    module Stats =
      struct
        type t = fs_Stats
        let rec t_of_js : Ojs.t -> t =
          fun (x376 : Ojs.t) -> fs_Stats_of_js x376
        and t_to_js : t -> Ojs.t =
          fun (x375 : fs_Stats) -> fs_Stats_to_js x375
      end
    module Dirent =
      struct
        type t = fs_Dirent
        let rec t_of_js : Ojs.t -> t =
          fun (x378 : Ojs.t) -> fs_Dirent_of_js x378
        and t_to_js : t -> Ojs.t =
          fun (x377 : fs_Dirent) -> fs_Dirent_to_js x377
        let (isFile : t -> bool) =
          fun (x379 : t) ->
            Ojs.bool_of_js (Ojs.call (t_to_js x379) "isFile" [||])
        let (isDirectory : t -> bool) =
          fun (x380 : t) ->
            Ojs.bool_of_js (Ojs.call (t_to_js x380) "isDirectory" [||])
        let (isBlockDevice : t -> bool) =
          fun (x381 : t) ->
            Ojs.bool_of_js (Ojs.call (t_to_js x381) "isBlockDevice" [||])
        let (isCharacterDevice : t -> bool) =
          fun (x382 : t) ->
            Ojs.bool_of_js (Ojs.call (t_to_js x382) "isCharacterDevice" [||])
        let (isSymbolicLink : t -> bool) =
          fun (x383 : t) ->
            Ojs.bool_of_js (Ojs.call (t_to_js x383) "isSymbolicLink" [||])
        let (isFIFO : t -> bool) =
          fun (x384 : t) ->
            Ojs.bool_of_js (Ojs.call (t_to_js x384) "isFIFO" [||])
        let (isSocket : t -> bool) =
          fun (x385 : t) ->
            Ojs.bool_of_js (Ojs.call (t_to_js x385) "isSocket" [||])
        let (get_name : t -> string) =
          fun (x386 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x386) "name")
        let (set_name : t -> string -> unit) =
          fun (x387 : t) ->
            fun (x388 : string) ->
              Ojs.set_prop_ascii (t_to_js x387) "name"
                (Ojs.string_to_js x388)
      end
    module Dir =
      struct
        type t = fs_Dir
        let rec t_of_js : Ojs.t -> t =
          fun (x390 : Ojs.t) -> fs_Dir_of_js x390
        and t_to_js : t -> Ojs.t = fun (x389 : fs_Dir) -> fs_Dir_to_js x389
        let (get_path : t -> string) =
          fun (x391 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x391) "path")
        let (close : t -> unit Promise.t) =
          fun (x392 : t) ->
            Promise.t_of_js Ojs.unit_of_js
              (Ojs.call (t_to_js x392) "close" [||])
        let (close' : t -> cb:fs_NoParamCallback -> unit) =
          fun (x395 : t) ->
            fun ~cb:(x394 : fs_NoParamCallback) ->
              ignore
                (Ojs.call (t_to_js x395) "close"
                   [|(fs_NoParamCallback_to_js x394)|])
        let (closeSync : t -> unit) =
          fun (x396 : t) -> ignore (Ojs.call (t_to_js x396) "closeSync" [||])
        let (read : t -> fs_Dirent or_null Promise.t) =
          fun (x397 : t) ->
            Promise.t_of_js
              (fun (x398 : Ojs.t) -> or_null_of_js fs_Dirent_of_js x398)
              (Ojs.call (t_to_js x397) "read" [||])
        let (read' :
          t ->
            cb:(err:NodeJS.ErrnoException.t_0 or_null ->
                  dirEnt:fs_Dirent or_null -> unit)
              -> unit)
          =
          fun (x405 : t) ->
            fun
              ~cb:(x400 :
                    err:NodeJS.ErrnoException.t_0 or_null ->
                      dirEnt:fs_Dirent or_null -> unit)
              ->
              ignore
                (Ojs.call (t_to_js x405) "read"
                   [|(Ojs.fun_to_js 2
                        (fun (x401 : Ojs.t) ->
                           fun (x403 : Ojs.t) ->
                             x400
                               ~err:(or_null_of_js
                                       NodeJS.ErrnoException.t_0_of_js x401)
                               ~dirEnt:(or_null_of_js fs_Dirent_of_js x403)))|])
        let (readSync : t -> fs_Dirent or_null) =
          fun (x406 : t) ->
            or_null_of_js fs_Dirent_of_js
              (Ojs.call (t_to_js x406) "readSync" [||])
      end
    module FSWatcher =
      struct
        type t = fs_FSWatcher
        let rec t_of_js : Ojs.t -> t =
          fun (x409 : Ojs.t) -> fs_FSWatcher_of_js x409
        and t_to_js : t -> Ojs.t =
          fun (x408 : fs_FSWatcher) -> fs_FSWatcher_to_js x408
        let (close : t -> unit) =
          fun (x410 : t) -> ignore (Ojs.call (t_to_js x410) "close" [||])
        let (addListener :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x415 : t) ->
            fun ~event:(x411 : string) ->
              fun ~listener:(x412 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x415) "addListener"
                     [|(Ojs.string_to_js x411);(Ojs.fun_to_js_args
                                                  (fun (x413 : _) ->
                                                     x412
                                                       ~args:(Ojs.list_of_js_from
                                                                any_of_js
                                                                x413 0)))|])
        let (addListener' :
          t ->
            event:[ `change ] ->
              listener:(eventType:string ->
                          filename:Buffer.t_0 or_string -> unit)
                -> t)
          =
          fun (x421 : t) ->
            fun ~event:(x416 : [ `change ]) ->
              fun
                ~listener:(x417 :
                            eventType:string ->
                              filename:Buffer.t_0 or_string -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x421) "addListener"
                     [|((match x416 with
                         | `change -> Ojs.string_to_js "change"));(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x418 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x419 :
                                                                    Ojs.t) ->
                                                                    x417
                                                                    ~eventType:(
                                                                    Ojs.string_of_js
                                                                    x418)
                                                                    ~filename:(
                                                                    or_string_of_js
                                                                    Buffer.t_0_of_js
                                                                    x419)))|])
        let (addListener'' :
          t -> event:[ `error ] -> listener:(error:Error.t_0 -> unit) -> t) =
          fun (x425 : t) ->
            fun ~event:(x422 : [ `error ]) ->
              fun ~listener:(x423 : error:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x425) "addListener"
                     [|((match x422 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x424 : Ojs.t) ->
                            x423 ~error:(Error.t_0_of_js x424)))|])
        let (addListener''' :
          t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x428 : t) ->
            fun ~event:(x426 : [ `close ]) ->
              fun ~listener:(x427 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x428) "addListener"
                     [|((match x426 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x427 ()))|])
        let (on : t -> event:string -> listener:(args:any list -> unit) -> t)
          =
          fun (x433 : t) ->
            fun ~event:(x429 : string) ->
              fun ~listener:(x430 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x433) "on"
                     [|(Ojs.string_to_js x429);(Ojs.fun_to_js_args
                                                  (fun (x431 : _) ->
                                                     x430
                                                       ~args:(Ojs.list_of_js_from
                                                                any_of_js
                                                                x431 0)))|])
        let (on' :
          t ->
            event:[ `change ] ->
              listener:(eventType:string ->
                          filename:Buffer.t_0 or_string -> unit)
                -> t)
          =
          fun (x439 : t) ->
            fun ~event:(x434 : [ `change ]) ->
              fun
                ~listener:(x435 :
                            eventType:string ->
                              filename:Buffer.t_0 or_string -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x439) "on"
                     [|((match x434 with
                         | `change -> Ojs.string_to_js "change"));(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x436 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x437 :
                                                                    Ojs.t) ->
                                                                    x435
                                                                    ~eventType:(
                                                                    Ojs.string_of_js
                                                                    x436)
                                                                    ~filename:(
                                                                    or_string_of_js
                                                                    Buffer.t_0_of_js
                                                                    x437)))|])
        let (on'' :
          t -> event:[ `error ] -> listener:(error:Error.t_0 -> unit) -> t) =
          fun (x443 : t) ->
            fun ~event:(x440 : [ `error ]) ->
              fun ~listener:(x441 : error:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x443) "on"
                     [|((match x440 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x442 : Ojs.t) ->
                            x441 ~error:(Error.t_0_of_js x442)))|])
        let (on''' : t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x446 : t) ->
            fun ~event:(x444 : [ `close ]) ->
              fun ~listener:(x445 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x446) "on"
                     [|((match x444 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x445 ()))|])
        let (once :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x451 : t) ->
            fun ~event:(x447 : string) ->
              fun ~listener:(x448 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x451) "once"
                     [|(Ojs.string_to_js x447);(Ojs.fun_to_js_args
                                                  (fun (x449 : _) ->
                                                     x448
                                                       ~args:(Ojs.list_of_js_from
                                                                any_of_js
                                                                x449 0)))|])
        let (once' :
          t ->
            event:[ `change ] ->
              listener:(eventType:string ->
                          filename:Buffer.t_0 or_string -> unit)
                -> t)
          =
          fun (x457 : t) ->
            fun ~event:(x452 : [ `change ]) ->
              fun
                ~listener:(x453 :
                            eventType:string ->
                              filename:Buffer.t_0 or_string -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x457) "once"
                     [|((match x452 with
                         | `change -> Ojs.string_to_js "change"));(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x454 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x455 :
                                                                    Ojs.t) ->
                                                                    x453
                                                                    ~eventType:(
                                                                    Ojs.string_of_js
                                                                    x454)
                                                                    ~filename:(
                                                                    or_string_of_js
                                                                    Buffer.t_0_of_js
                                                                    x455)))|])
        let (once'' :
          t -> event:[ `error ] -> listener:(error:Error.t_0 -> unit) -> t) =
          fun (x461 : t) ->
            fun ~event:(x458 : [ `error ]) ->
              fun ~listener:(x459 : error:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x461) "once"
                     [|((match x458 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x460 : Ojs.t) ->
                            x459 ~error:(Error.t_0_of_js x460)))|])
        let (once''' : t -> event:[ `close ] -> listener:(unit -> unit) -> t)
          =
          fun (x464 : t) ->
            fun ~event:(x462 : [ `close ]) ->
              fun ~listener:(x463 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x464) "once"
                     [|((match x462 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x463 ()))|])
        let (prependListener :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x469 : t) ->
            fun ~event:(x465 : string) ->
              fun ~listener:(x466 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x469) "prependListener"
                     [|(Ojs.string_to_js x465);(Ojs.fun_to_js_args
                                                  (fun (x467 : _) ->
                                                     x466
                                                       ~args:(Ojs.list_of_js_from
                                                                any_of_js
                                                                x467 0)))|])
        let (prependListener' :
          t ->
            event:[ `change ] ->
              listener:(eventType:string ->
                          filename:Buffer.t_0 or_string -> unit)
                -> t)
          =
          fun (x475 : t) ->
            fun ~event:(x470 : [ `change ]) ->
              fun
                ~listener:(x471 :
                            eventType:string ->
                              filename:Buffer.t_0 or_string -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x475) "prependListener"
                     [|((match x470 with
                         | `change -> Ojs.string_to_js "change"));(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x472 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x473 :
                                                                    Ojs.t) ->
                                                                    x471
                                                                    ~eventType:(
                                                                    Ojs.string_of_js
                                                                    x472)
                                                                    ~filename:(
                                                                    or_string_of_js
                                                                    Buffer.t_0_of_js
                                                                    x473)))|])
        let (prependListener'' :
          t -> event:[ `error ] -> listener:(error:Error.t_0 -> unit) -> t) =
          fun (x479 : t) ->
            fun ~event:(x476 : [ `error ]) ->
              fun ~listener:(x477 : error:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x479) "prependListener"
                     [|((match x476 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x478 : Ojs.t) ->
                            x477 ~error:(Error.t_0_of_js x478)))|])
        let (prependListener''' :
          t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x482 : t) ->
            fun ~event:(x480 : [ `close ]) ->
              fun ~listener:(x481 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x482) "prependListener"
                     [|((match x480 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x481 ()))|])
        let (prependOnceListener :
          t -> event:string -> listener:(args:any list -> unit) -> t) =
          fun (x487 : t) ->
            fun ~event:(x483 : string) ->
              fun ~listener:(x484 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x487) "prependOnceListener"
                     [|(Ojs.string_to_js x483);(Ojs.fun_to_js_args
                                                  (fun (x485 : _) ->
                                                     x484
                                                       ~args:(Ojs.list_of_js_from
                                                                any_of_js
                                                                x485 0)))|])
        let (prependOnceListener' :
          t ->
            event:[ `change ] ->
              listener:(eventType:string ->
                          filename:Buffer.t_0 or_string -> unit)
                -> t)
          =
          fun (x493 : t) ->
            fun ~event:(x488 : [ `change ]) ->
              fun
                ~listener:(x489 :
                            eventType:string ->
                              filename:Buffer.t_0 or_string -> unit)
                ->
                t_of_js
                  (Ojs.call (t_to_js x493) "prependOnceListener"
                     [|((match x488 with
                         | `change -> Ojs.string_to_js "change"));(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x490 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x491 :
                                                                    Ojs.t) ->
                                                                    x489
                                                                    ~eventType:(
                                                                    Ojs.string_of_js
                                                                    x490)
                                                                    ~filename:(
                                                                    or_string_of_js
                                                                    Buffer.t_0_of_js
                                                                    x491)))|])
        let (prependOnceListener'' :
          t -> event:[ `error ] -> listener:(error:Error.t_0 -> unit) -> t) =
          fun (x497 : t) ->
            fun ~event:(x494 : [ `error ]) ->
              fun ~listener:(x495 : error:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x497) "prependOnceListener"
                     [|((match x494 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x496 : Ojs.t) ->
                            x495 ~error:(Error.t_0_of_js x496)))|])
        let (prependOnceListener''' :
          t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x500 : t) ->
            fun ~event:(x498 : [ `close ]) ->
              fun ~listener:(x499 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x500) "prependOnceListener"
                     [|((match x498 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x499 ()))|])
        let (cast : t -> EventEmitter.t_0) =
          fun (x501 : t) -> EventEmitter.t_0_of_js (t_to_js x501)
      end
    module ReadStream =
      struct
        type t = fs_ReadStream
        let rec t_of_js : Ojs.t -> t =
          fun (x503 : Ojs.t) -> fs_ReadStream_of_js x503
        and t_to_js : t -> Ojs.t =
          fun (x502 : fs_ReadStream) -> fs_ReadStream_to_js x502
        let (close : t -> unit) =
          fun (x504 : t) -> ignore (Ojs.call (t_to_js x504) "close" [||])
        let (get_bytesRead : t -> float) =
          fun (x505 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x505) "bytesRead")
        let (set_bytesRead : t -> float -> unit) =
          fun (x506 : t) ->
            fun (x507 : float) ->
              Ojs.set_prop_ascii (t_to_js x506) "bytesRead"
                (Ojs.float_to_js x507)
        let (get_path : t -> Buffer.t_0 or_string) =
          fun (x508 : t) ->
            or_string_of_js Buffer.t_0_of_js
              (Ojs.get_prop_ascii (t_to_js x508) "path")
        let (set_path : t -> Buffer.t_0 or_string -> unit) =
          fun (x510 : t) ->
            fun (x511 : Buffer.t_0 or_string) ->
              Ojs.set_prop_ascii (t_to_js x510) "path"
                (or_string_to_js Buffer.t_0_to_js x511)
        let (get_pending : t -> bool) =
          fun (x513 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x513) "pending")
        let (set_pending : t -> bool -> unit) =
          fun (x514 : t) ->
            fun (x515 : bool) ->
              Ojs.set_prop_ascii (t_to_js x514) "pending"
                (Ojs.bool_to_js x515)
        let (addListener :
          t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x518 : t) ->
            fun ~event:(x516 : [ `close ]) ->
              fun ~listener:(x517 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x518) "addListener"
                     [|((match x516 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x517 ()))|])
        let (addListener' :
          t ->
            event:[ `data ] ->
              listener:(chunk:Buffer.t_0 or_string -> unit) -> t)
          =
          fun (x523 : t) ->
            fun ~event:(x519 : [ `data ]) ->
              fun ~listener:(x520 : chunk:Buffer.t_0 or_string -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x523) "addListener"
                     [|((match x519 with | `data -> Ojs.string_to_js "data"));(
                       Ojs.fun_to_js 1
                         (fun (x521 : Ojs.t) ->
                            x520
                              ~chunk:(or_string_of_js Buffer.t_0_of_js x521)))|])
        let (addListener'' :
          t -> event:[ `end_ ] -> listener:(unit -> unit) -> t) =
          fun (x526 : t) ->
            fun ~event:(x524 : [ `end_ ]) ->
              fun ~listener:(x525 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x526) "addListener"
                     [|((match x524 with | `end_ -> Ojs.string_to_js "end"));(
                       Ojs.fun_to_js 1 (fun _ -> x525 ()))|])
        let (addListener''' :
          t -> event:[ `error ] -> listener:(err:Error.t_0 -> unit) -> t) =
          fun (x530 : t) ->
            fun ~event:(x527 : [ `error ]) ->
              fun ~listener:(x528 : err:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x530) "addListener"
                     [|((match x527 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x529 : Ojs.t) ->
                            x528 ~err:(Error.t_0_of_js x529)))|])
        let (addListener'''' :
          t -> event:[ `open_ ] -> listener:(fd:float -> unit) -> t) =
          fun (x534 : t) ->
            fun ~event:(x531 : [ `open_ ]) ->
              fun ~listener:(x532 : fd:float -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x534) "addListener"
                     [|((match x531 with | `open_ -> Ojs.string_to_js "open"));(
                       Ojs.fun_to_js 1
                         (fun (x533 : Ojs.t) ->
                            x532 ~fd:(Ojs.float_of_js x533)))|])
        let (addListener''''' :
          t -> event:[ `pause ] -> listener:(unit -> unit) -> t) =
          fun (x537 : t) ->
            fun ~event:(x535 : [ `pause ]) ->
              fun ~listener:(x536 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x537) "addListener"
                     [|((match x535 with | `pause -> Ojs.string_to_js "pause"));(
                       Ojs.fun_to_js 1 (fun _ -> x536 ()))|])
        let (addListener'''''' :
          t -> event:[ `readable ] -> listener:(unit -> unit) -> t) =
          fun (x540 : t) ->
            fun ~event:(x538 : [ `readable ]) ->
              fun ~listener:(x539 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x540) "addListener"
                     [|((match x538 with
                         | `readable -> Ojs.string_to_js "readable"));(
                       Ojs.fun_to_js 1 (fun _ -> x539 ()))|])
        let (addListener''''''' :
          t -> event:[ `ready ] -> listener:(unit -> unit) -> t) =
          fun (x543 : t) ->
            fun ~event:(x541 : [ `ready ]) ->
              fun ~listener:(x542 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x543) "addListener"
                     [|((match x541 with | `ready -> Ojs.string_to_js "ready"));(
                       Ojs.fun_to_js 1 (fun _ -> x542 ()))|])
        let (addListener'''''''' :
          t -> event:[ `resume ] -> listener:(unit -> unit) -> t) =
          fun (x546 : t) ->
            fun ~event:(x544 : [ `resume ]) ->
              fun ~listener:(x545 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x546) "addListener"
                     [|((match x544 with
                         | `resume -> Ojs.string_to_js "resume"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x545 ()))|])
        let (addListener''''''''' :
          t ->
            event:symbol or_string -> listener:(args:any list -> unit) -> t)
          =
          fun (x552 : t) ->
            fun ~event:(x547 : symbol or_string) ->
              fun ~listener:(x549 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x552) "addListener"
                     [|(or_string_to_js symbol_to_js x547);(Ojs.fun_to_js_args
                                                              (fun (x550 : _)
                                                                 ->
                                                                 x549
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x550 0)))|])
        let (on : t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x555 : t) ->
            fun ~event:(x553 : [ `close ]) ->
              fun ~listener:(x554 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x555) "on"
                     [|((match x553 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x554 ()))|])
        let (on' :
          t ->
            event:[ `data ] ->
              listener:(chunk:Buffer.t_0 or_string -> unit) -> t)
          =
          fun (x560 : t) ->
            fun ~event:(x556 : [ `data ]) ->
              fun ~listener:(x557 : chunk:Buffer.t_0 or_string -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x560) "on"
                     [|((match x556 with | `data -> Ojs.string_to_js "data"));(
                       Ojs.fun_to_js 1
                         (fun (x558 : Ojs.t) ->
                            x557
                              ~chunk:(or_string_of_js Buffer.t_0_of_js x558)))|])
        let (on'' : t -> event:[ `end_ ] -> listener:(unit -> unit) -> t) =
          fun (x563 : t) ->
            fun ~event:(x561 : [ `end_ ]) ->
              fun ~listener:(x562 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x563) "on"
                     [|((match x561 with | `end_ -> Ojs.string_to_js "end"));(
                       Ojs.fun_to_js 1 (fun _ -> x562 ()))|])
        let (on''' :
          t -> event:[ `error ] -> listener:(err:Error.t_0 -> unit) -> t) =
          fun (x567 : t) ->
            fun ~event:(x564 : [ `error ]) ->
              fun ~listener:(x565 : err:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x567) "on"
                     [|((match x564 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x566 : Ojs.t) ->
                            x565 ~err:(Error.t_0_of_js x566)))|])
        let (on'''' :
          t -> event:[ `open_ ] -> listener:(fd:float -> unit) -> t) =
          fun (x571 : t) ->
            fun ~event:(x568 : [ `open_ ]) ->
              fun ~listener:(x569 : fd:float -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x571) "on"
                     [|((match x568 with | `open_ -> Ojs.string_to_js "open"));(
                       Ojs.fun_to_js 1
                         (fun (x570 : Ojs.t) ->
                            x569 ~fd:(Ojs.float_of_js x570)))|])
        let (on''''' : t -> event:[ `pause ] -> listener:(unit -> unit) -> t)
          =
          fun (x574 : t) ->
            fun ~event:(x572 : [ `pause ]) ->
              fun ~listener:(x573 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x574) "on"
                     [|((match x572 with | `pause -> Ojs.string_to_js "pause"));(
                       Ojs.fun_to_js 1 (fun _ -> x573 ()))|])
        let (on'''''' :
          t -> event:[ `readable ] -> listener:(unit -> unit) -> t) =
          fun (x577 : t) ->
            fun ~event:(x575 : [ `readable ]) ->
              fun ~listener:(x576 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x577) "on"
                     [|((match x575 with
                         | `readable -> Ojs.string_to_js "readable"));(
                       Ojs.fun_to_js 1 (fun _ -> x576 ()))|])
        let (on''''''' :
          t -> event:[ `ready ] -> listener:(unit -> unit) -> t) =
          fun (x580 : t) ->
            fun ~event:(x578 : [ `ready ]) ->
              fun ~listener:(x579 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x580) "on"
                     [|((match x578 with | `ready -> Ojs.string_to_js "ready"));(
                       Ojs.fun_to_js 1 (fun _ -> x579 ()))|])
        let (on'''''''' :
          t -> event:[ `resume ] -> listener:(unit -> unit) -> t) =
          fun (x583 : t) ->
            fun ~event:(x581 : [ `resume ]) ->
              fun ~listener:(x582 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x583) "on"
                     [|((match x581 with
                         | `resume -> Ojs.string_to_js "resume"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x582 ()))|])
        let (on''''''''' :
          t ->
            event:symbol or_string -> listener:(args:any list -> unit) -> t)
          =
          fun (x589 : t) ->
            fun ~event:(x584 : symbol or_string) ->
              fun ~listener:(x586 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x589) "on"
                     [|(or_string_to_js symbol_to_js x584);(Ojs.fun_to_js_args
                                                              (fun (x587 : _)
                                                                 ->
                                                                 x586
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x587 0)))|])
        let (once : t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x592 : t) ->
            fun ~event:(x590 : [ `close ]) ->
              fun ~listener:(x591 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x592) "once"
                     [|((match x590 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x591 ()))|])
        let (once' :
          t ->
            event:[ `data ] ->
              listener:(chunk:Buffer.t_0 or_string -> unit) -> t)
          =
          fun (x597 : t) ->
            fun ~event:(x593 : [ `data ]) ->
              fun ~listener:(x594 : chunk:Buffer.t_0 or_string -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x597) "once"
                     [|((match x593 with | `data -> Ojs.string_to_js "data"));(
                       Ojs.fun_to_js 1
                         (fun (x595 : Ojs.t) ->
                            x594
                              ~chunk:(or_string_of_js Buffer.t_0_of_js x595)))|])
        let (once'' : t -> event:[ `end_ ] -> listener:(unit -> unit) -> t) =
          fun (x600 : t) ->
            fun ~event:(x598 : [ `end_ ]) ->
              fun ~listener:(x599 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x600) "once"
                     [|((match x598 with | `end_ -> Ojs.string_to_js "end"));(
                       Ojs.fun_to_js 1 (fun _ -> x599 ()))|])
        let (once''' :
          t -> event:[ `error ] -> listener:(err:Error.t_0 -> unit) -> t) =
          fun (x604 : t) ->
            fun ~event:(x601 : [ `error ]) ->
              fun ~listener:(x602 : err:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x604) "once"
                     [|((match x601 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x603 : Ojs.t) ->
                            x602 ~err:(Error.t_0_of_js x603)))|])
        let (once'''' :
          t -> event:[ `open_ ] -> listener:(fd:float -> unit) -> t) =
          fun (x608 : t) ->
            fun ~event:(x605 : [ `open_ ]) ->
              fun ~listener:(x606 : fd:float -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x608) "once"
                     [|((match x605 with | `open_ -> Ojs.string_to_js "open"));(
                       Ojs.fun_to_js 1
                         (fun (x607 : Ojs.t) ->
                            x606 ~fd:(Ojs.float_of_js x607)))|])
        let (once''''' :
          t -> event:[ `pause ] -> listener:(unit -> unit) -> t) =
          fun (x611 : t) ->
            fun ~event:(x609 : [ `pause ]) ->
              fun ~listener:(x610 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x611) "once"
                     [|((match x609 with | `pause -> Ojs.string_to_js "pause"));(
                       Ojs.fun_to_js 1 (fun _ -> x610 ()))|])
        let (once'''''' :
          t -> event:[ `readable ] -> listener:(unit -> unit) -> t) =
          fun (x614 : t) ->
            fun ~event:(x612 : [ `readable ]) ->
              fun ~listener:(x613 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x614) "once"
                     [|((match x612 with
                         | `readable -> Ojs.string_to_js "readable"));(
                       Ojs.fun_to_js 1 (fun _ -> x613 ()))|])
        let (once''''''' :
          t -> event:[ `ready ] -> listener:(unit -> unit) -> t) =
          fun (x617 : t) ->
            fun ~event:(x615 : [ `ready ]) ->
              fun ~listener:(x616 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x617) "once"
                     [|((match x615 with | `ready -> Ojs.string_to_js "ready"));(
                       Ojs.fun_to_js 1 (fun _ -> x616 ()))|])
        let (once'''''''' :
          t -> event:[ `resume ] -> listener:(unit -> unit) -> t) =
          fun (x620 : t) ->
            fun ~event:(x618 : [ `resume ]) ->
              fun ~listener:(x619 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x620) "once"
                     [|((match x618 with
                         | `resume -> Ojs.string_to_js "resume"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x619 ()))|])
        let (once''''''''' :
          t ->
            event:symbol or_string -> listener:(args:any list -> unit) -> t)
          =
          fun (x626 : t) ->
            fun ~event:(x621 : symbol or_string) ->
              fun ~listener:(x623 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x626) "once"
                     [|(or_string_to_js symbol_to_js x621);(Ojs.fun_to_js_args
                                                              (fun (x624 : _)
                                                                 ->
                                                                 x623
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x624 0)))|])
        let (prependListener :
          t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x629 : t) ->
            fun ~event:(x627 : [ `close ]) ->
              fun ~listener:(x628 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x629) "prependListener"
                     [|((match x627 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x628 ()))|])
        let (prependListener' :
          t ->
            event:[ `data ] ->
              listener:(chunk:Buffer.t_0 or_string -> unit) -> t)
          =
          fun (x634 : t) ->
            fun ~event:(x630 : [ `data ]) ->
              fun ~listener:(x631 : chunk:Buffer.t_0 or_string -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x634) "prependListener"
                     [|((match x630 with | `data -> Ojs.string_to_js "data"));(
                       Ojs.fun_to_js 1
                         (fun (x632 : Ojs.t) ->
                            x631
                              ~chunk:(or_string_of_js Buffer.t_0_of_js x632)))|])
        let (prependListener'' :
          t -> event:[ `end_ ] -> listener:(unit -> unit) -> t) =
          fun (x637 : t) ->
            fun ~event:(x635 : [ `end_ ]) ->
              fun ~listener:(x636 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x637) "prependListener"
                     [|((match x635 with | `end_ -> Ojs.string_to_js "end"));(
                       Ojs.fun_to_js 1 (fun _ -> x636 ()))|])
        let (prependListener''' :
          t -> event:[ `error ] -> listener:(err:Error.t_0 -> unit) -> t) =
          fun (x641 : t) ->
            fun ~event:(x638 : [ `error ]) ->
              fun ~listener:(x639 : err:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x641) "prependListener"
                     [|((match x638 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x640 : Ojs.t) ->
                            x639 ~err:(Error.t_0_of_js x640)))|])
        let (prependListener'''' :
          t -> event:[ `open_ ] -> listener:(fd:float -> unit) -> t) =
          fun (x645 : t) ->
            fun ~event:(x642 : [ `open_ ]) ->
              fun ~listener:(x643 : fd:float -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x645) "prependListener"
                     [|((match x642 with | `open_ -> Ojs.string_to_js "open"));(
                       Ojs.fun_to_js 1
                         (fun (x644 : Ojs.t) ->
                            x643 ~fd:(Ojs.float_of_js x644)))|])
        let (prependListener''''' :
          t -> event:[ `pause ] -> listener:(unit -> unit) -> t) =
          fun (x648 : t) ->
            fun ~event:(x646 : [ `pause ]) ->
              fun ~listener:(x647 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x648) "prependListener"
                     [|((match x646 with | `pause -> Ojs.string_to_js "pause"));(
                       Ojs.fun_to_js 1 (fun _ -> x647 ()))|])
        let (prependListener'''''' :
          t -> event:[ `readable ] -> listener:(unit -> unit) -> t) =
          fun (x651 : t) ->
            fun ~event:(x649 : [ `readable ]) ->
              fun ~listener:(x650 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x651) "prependListener"
                     [|((match x649 with
                         | `readable -> Ojs.string_to_js "readable"));(
                       Ojs.fun_to_js 1 (fun _ -> x650 ()))|])
        let (prependListener''''''' :
          t -> event:[ `ready ] -> listener:(unit -> unit) -> t) =
          fun (x654 : t) ->
            fun ~event:(x652 : [ `ready ]) ->
              fun ~listener:(x653 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x654) "prependListener"
                     [|((match x652 with | `ready -> Ojs.string_to_js "ready"));(
                       Ojs.fun_to_js 1 (fun _ -> x653 ()))|])
        let (prependListener'''''''' :
          t -> event:[ `resume ] -> listener:(unit -> unit) -> t) =
          fun (x657 : t) ->
            fun ~event:(x655 : [ `resume ]) ->
              fun ~listener:(x656 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x657) "prependListener"
                     [|((match x655 with
                         | `resume -> Ojs.string_to_js "resume"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x656 ()))|])
        let (prependListener''''''''' :
          t ->
            event:symbol or_string -> listener:(args:any list -> unit) -> t)
          =
          fun (x663 : t) ->
            fun ~event:(x658 : symbol or_string) ->
              fun ~listener:(x660 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x663) "prependListener"
                     [|(or_string_to_js symbol_to_js x658);(Ojs.fun_to_js_args
                                                              (fun (x661 : _)
                                                                 ->
                                                                 x660
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x661 0)))|])
        let (prependOnceListener :
          t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x666 : t) ->
            fun ~event:(x664 : [ `close ]) ->
              fun ~listener:(x665 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x666) "prependOnceListener"
                     [|((match x664 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x665 ()))|])
        let (prependOnceListener' :
          t ->
            event:[ `data ] ->
              listener:(chunk:Buffer.t_0 or_string -> unit) -> t)
          =
          fun (x671 : t) ->
            fun ~event:(x667 : [ `data ]) ->
              fun ~listener:(x668 : chunk:Buffer.t_0 or_string -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x671) "prependOnceListener"
                     [|((match x667 with | `data -> Ojs.string_to_js "data"));(
                       Ojs.fun_to_js 1
                         (fun (x669 : Ojs.t) ->
                            x668
                              ~chunk:(or_string_of_js Buffer.t_0_of_js x669)))|])
        let (prependOnceListener'' :
          t -> event:[ `end_ ] -> listener:(unit -> unit) -> t) =
          fun (x674 : t) ->
            fun ~event:(x672 : [ `end_ ]) ->
              fun ~listener:(x673 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x674) "prependOnceListener"
                     [|((match x672 with | `end_ -> Ojs.string_to_js "end"));(
                       Ojs.fun_to_js 1 (fun _ -> x673 ()))|])
        let (prependOnceListener''' :
          t -> event:[ `error ] -> listener:(err:Error.t_0 -> unit) -> t) =
          fun (x678 : t) ->
            fun ~event:(x675 : [ `error ]) ->
              fun ~listener:(x676 : err:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x678) "prependOnceListener"
                     [|((match x675 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x677 : Ojs.t) ->
                            x676 ~err:(Error.t_0_of_js x677)))|])
        let (prependOnceListener'''' :
          t -> event:[ `open_ ] -> listener:(fd:float -> unit) -> t) =
          fun (x682 : t) ->
            fun ~event:(x679 : [ `open_ ]) ->
              fun ~listener:(x680 : fd:float -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x682) "prependOnceListener"
                     [|((match x679 with | `open_ -> Ojs.string_to_js "open"));(
                       Ojs.fun_to_js 1
                         (fun (x681 : Ojs.t) ->
                            x680 ~fd:(Ojs.float_of_js x681)))|])
        let (prependOnceListener''''' :
          t -> event:[ `pause ] -> listener:(unit -> unit) -> t) =
          fun (x685 : t) ->
            fun ~event:(x683 : [ `pause ]) ->
              fun ~listener:(x684 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x685) "prependOnceListener"
                     [|((match x683 with | `pause -> Ojs.string_to_js "pause"));(
                       Ojs.fun_to_js 1 (fun _ -> x684 ()))|])
        let (prependOnceListener'''''' :
          t -> event:[ `readable ] -> listener:(unit -> unit) -> t) =
          fun (x688 : t) ->
            fun ~event:(x686 : [ `readable ]) ->
              fun ~listener:(x687 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x688) "prependOnceListener"
                     [|((match x686 with
                         | `readable -> Ojs.string_to_js "readable"));(
                       Ojs.fun_to_js 1 (fun _ -> x687 ()))|])
        let (prependOnceListener''''''' :
          t -> event:[ `ready ] -> listener:(unit -> unit) -> t) =
          fun (x691 : t) ->
            fun ~event:(x689 : [ `ready ]) ->
              fun ~listener:(x690 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x691) "prependOnceListener"
                     [|((match x689 with | `ready -> Ojs.string_to_js "ready"));(
                       Ojs.fun_to_js 1 (fun _ -> x690 ()))|])
        let (prependOnceListener'''''''' :
          t -> event:[ `resume ] -> listener:(unit -> unit) -> t) =
          fun (x694 : t) ->
            fun ~event:(x692 : [ `resume ]) ->
              fun ~listener:(x693 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x694) "prependOnceListener"
                     [|((match x692 with
                         | `resume -> Ojs.string_to_js "resume"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x693 ()))|])
        let (prependOnceListener''''''''' :
          t ->
            event:symbol or_string -> listener:(args:any list -> unit) -> t)
          =
          fun (x700 : t) ->
            fun ~event:(x695 : symbol or_string) ->
              fun ~listener:(x697 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x700) "prependOnceListener"
                     [|(or_string_to_js symbol_to_js x695);(Ojs.fun_to_js_args
                                                              (fun (x698 : _)
                                                                 ->
                                                                 x697
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x698 0)))|])
        let (cast : t -> Stream.Readable.t_0) =
          fun (x701 : t) -> Stream.Readable.t_0_of_js (t_to_js x701)
      end
    module WriteStream =
      struct
        type t = fs_WriteStream
        let rec t_of_js : Ojs.t -> t =
          fun (x703 : Ojs.t) -> fs_WriteStream_of_js x703
        and t_to_js : t -> Ojs.t =
          fun (x702 : fs_WriteStream) -> fs_WriteStream_to_js x702
        let (close : t -> unit) =
          fun (x704 : t) -> ignore (Ojs.call (t_to_js x704) "close" [||])
        let (get_bytesWritten : t -> float) =
          fun (x705 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x705) "bytesWritten")
        let (set_bytesWritten : t -> float -> unit) =
          fun (x706 : t) ->
            fun (x707 : float) ->
              Ojs.set_prop_ascii (t_to_js x706) "bytesWritten"
                (Ojs.float_to_js x707)
        let (get_path : t -> Buffer.t_0 or_string) =
          fun (x708 : t) ->
            or_string_of_js Buffer.t_0_of_js
              (Ojs.get_prop_ascii (t_to_js x708) "path")
        let (set_path : t -> Buffer.t_0 or_string -> unit) =
          fun (x710 : t) ->
            fun (x711 : Buffer.t_0 or_string) ->
              Ojs.set_prop_ascii (t_to_js x710) "path"
                (or_string_to_js Buffer.t_0_to_js x711)
        let (get_pending : t -> bool) =
          fun (x713 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x713) "pending")
        let (set_pending : t -> bool -> unit) =
          fun (x714 : t) ->
            fun (x715 : bool) ->
              Ojs.set_prop_ascii (t_to_js x714) "pending"
                (Ojs.bool_to_js x715)
        let (addListener :
          t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x718 : t) ->
            fun ~event:(x716 : [ `close ]) ->
              fun ~listener:(x717 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x718) "addListener"
                     [|((match x716 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x717 ()))|])
        let (addListener' :
          t -> event:[ `drain ] -> listener:(unit -> unit) -> t) =
          fun (x721 : t) ->
            fun ~event:(x719 : [ `drain ]) ->
              fun ~listener:(x720 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x721) "addListener"
                     [|((match x719 with | `drain -> Ojs.string_to_js "drain"));(
                       Ojs.fun_to_js 1 (fun _ -> x720 ()))|])
        let (addListener'' :
          t -> event:[ `error ] -> listener:(err:Error.t_0 -> unit) -> t) =
          fun (x725 : t) ->
            fun ~event:(x722 : [ `error ]) ->
              fun ~listener:(x723 : err:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x725) "addListener"
                     [|((match x722 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x724 : Ojs.t) ->
                            x723 ~err:(Error.t_0_of_js x724)))|])
        let (addListener''' :
          t -> event:[ `finish ] -> listener:(unit -> unit) -> t) =
          fun (x728 : t) ->
            fun ~event:(x726 : [ `finish ]) ->
              fun ~listener:(x727 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x728) "addListener"
                     [|((match x726 with
                         | `finish -> Ojs.string_to_js "finish"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x727 ()))|])
        let (addListener'''' :
          t -> event:[ `open_ ] -> listener:(fd:float -> unit) -> t) =
          fun (x732 : t) ->
            fun ~event:(x729 : [ `open_ ]) ->
              fun ~listener:(x730 : fd:float -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x732) "addListener"
                     [|((match x729 with | `open_ -> Ojs.string_to_js "open"));(
                       Ojs.fun_to_js 1
                         (fun (x731 : Ojs.t) ->
                            x730 ~fd:(Ojs.float_of_js x731)))|])
        let (addListener''''' :
          t ->
            event:[ `pipe ] ->
              listener:(src:Stream.Readable.t_0 -> unit) -> t)
          =
          fun (x736 : t) ->
            fun ~event:(x733 : [ `pipe ]) ->
              fun ~listener:(x734 : src:Stream.Readable.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x736) "addListener"
                     [|((match x733 with | `pipe -> Ojs.string_to_js "pipe"));(
                       Ojs.fun_to_js 1
                         (fun (x735 : Ojs.t) ->
                            x734 ~src:(Stream.Readable.t_0_of_js x735)))|])
        let (addListener'''''' :
          t -> event:[ `ready ] -> listener:(unit -> unit) -> t) =
          fun (x739 : t) ->
            fun ~event:(x737 : [ `ready ]) ->
              fun ~listener:(x738 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x739) "addListener"
                     [|((match x737 with | `ready -> Ojs.string_to_js "ready"));(
                       Ojs.fun_to_js 1 (fun _ -> x738 ()))|])
        let (addListener''''''' :
          t ->
            event:[ `unpipe ] ->
              listener:(src:Stream.Readable.t_0 -> unit) -> t)
          =
          fun (x743 : t) ->
            fun ~event:(x740 : [ `unpipe ]) ->
              fun ~listener:(x741 : src:Stream.Readable.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x743) "addListener"
                     [|((match x740 with
                         | `unpipe -> Ojs.string_to_js "unpipe"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x742 :
                                                                    Ojs.t) ->
                                                                    x741
                                                                    ~src:(
                                                                    Stream.Readable.t_0_of_js
                                                                    x742)))|])
        let (addListener'''''''' :
          t ->
            event:symbol or_string -> listener:(args:any list -> unit) -> t)
          =
          fun (x749 : t) ->
            fun ~event:(x744 : symbol or_string) ->
              fun ~listener:(x746 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x749) "addListener"
                     [|(or_string_to_js symbol_to_js x744);(Ojs.fun_to_js_args
                                                              (fun (x747 : _)
                                                                 ->
                                                                 x746
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x747 0)))|])
        let (on : t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x752 : t) ->
            fun ~event:(x750 : [ `close ]) ->
              fun ~listener:(x751 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x752) "on"
                     [|((match x750 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x751 ()))|])
        let (on' : t -> event:[ `drain ] -> listener:(unit -> unit) -> t) =
          fun (x755 : t) ->
            fun ~event:(x753 : [ `drain ]) ->
              fun ~listener:(x754 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x755) "on"
                     [|((match x753 with | `drain -> Ojs.string_to_js "drain"));(
                       Ojs.fun_to_js 1 (fun _ -> x754 ()))|])
        let (on'' :
          t -> event:[ `error ] -> listener:(err:Error.t_0 -> unit) -> t) =
          fun (x759 : t) ->
            fun ~event:(x756 : [ `error ]) ->
              fun ~listener:(x757 : err:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x759) "on"
                     [|((match x756 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x758 : Ojs.t) ->
                            x757 ~err:(Error.t_0_of_js x758)))|])
        let (on''' : t -> event:[ `finish ] -> listener:(unit -> unit) -> t)
          =
          fun (x762 : t) ->
            fun ~event:(x760 : [ `finish ]) ->
              fun ~listener:(x761 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x762) "on"
                     [|((match x760 with
                         | `finish -> Ojs.string_to_js "finish"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x761 ()))|])
        let (on'''' :
          t -> event:[ `open_ ] -> listener:(fd:float -> unit) -> t) =
          fun (x766 : t) ->
            fun ~event:(x763 : [ `open_ ]) ->
              fun ~listener:(x764 : fd:float -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x766) "on"
                     [|((match x763 with | `open_ -> Ojs.string_to_js "open"));(
                       Ojs.fun_to_js 1
                         (fun (x765 : Ojs.t) ->
                            x764 ~fd:(Ojs.float_of_js x765)))|])
        let (on''''' :
          t ->
            event:[ `pipe ] ->
              listener:(src:Stream.Readable.t_0 -> unit) -> t)
          =
          fun (x770 : t) ->
            fun ~event:(x767 : [ `pipe ]) ->
              fun ~listener:(x768 : src:Stream.Readable.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x770) "on"
                     [|((match x767 with | `pipe -> Ojs.string_to_js "pipe"));(
                       Ojs.fun_to_js 1
                         (fun (x769 : Ojs.t) ->
                            x768 ~src:(Stream.Readable.t_0_of_js x769)))|])
        let (on'''''' :
          t -> event:[ `ready ] -> listener:(unit -> unit) -> t) =
          fun (x773 : t) ->
            fun ~event:(x771 : [ `ready ]) ->
              fun ~listener:(x772 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x773) "on"
                     [|((match x771 with | `ready -> Ojs.string_to_js "ready"));(
                       Ojs.fun_to_js 1 (fun _ -> x772 ()))|])
        let (on''''''' :
          t ->
            event:[ `unpipe ] ->
              listener:(src:Stream.Readable.t_0 -> unit) -> t)
          =
          fun (x777 : t) ->
            fun ~event:(x774 : [ `unpipe ]) ->
              fun ~listener:(x775 : src:Stream.Readable.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x777) "on"
                     [|((match x774 with
                         | `unpipe -> Ojs.string_to_js "unpipe"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x776 :
                                                                    Ojs.t) ->
                                                                    x775
                                                                    ~src:(
                                                                    Stream.Readable.t_0_of_js
                                                                    x776)))|])
        let (on'''''''' :
          t ->
            event:symbol or_string -> listener:(args:any list -> unit) -> t)
          =
          fun (x783 : t) ->
            fun ~event:(x778 : symbol or_string) ->
              fun ~listener:(x780 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x783) "on"
                     [|(or_string_to_js symbol_to_js x778);(Ojs.fun_to_js_args
                                                              (fun (x781 : _)
                                                                 ->
                                                                 x780
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x781 0)))|])
        let (once : t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x786 : t) ->
            fun ~event:(x784 : [ `close ]) ->
              fun ~listener:(x785 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x786) "once"
                     [|((match x784 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x785 ()))|])
        let (once' : t -> event:[ `drain ] -> listener:(unit -> unit) -> t) =
          fun (x789 : t) ->
            fun ~event:(x787 : [ `drain ]) ->
              fun ~listener:(x788 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x789) "once"
                     [|((match x787 with | `drain -> Ojs.string_to_js "drain"));(
                       Ojs.fun_to_js 1 (fun _ -> x788 ()))|])
        let (once'' :
          t -> event:[ `error ] -> listener:(err:Error.t_0 -> unit) -> t) =
          fun (x793 : t) ->
            fun ~event:(x790 : [ `error ]) ->
              fun ~listener:(x791 : err:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x793) "once"
                     [|((match x790 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x792 : Ojs.t) ->
                            x791 ~err:(Error.t_0_of_js x792)))|])
        let (once''' :
          t -> event:[ `finish ] -> listener:(unit -> unit) -> t) =
          fun (x796 : t) ->
            fun ~event:(x794 : [ `finish ]) ->
              fun ~listener:(x795 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x796) "once"
                     [|((match x794 with
                         | `finish -> Ojs.string_to_js "finish"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x795 ()))|])
        let (once'''' :
          t -> event:[ `open_ ] -> listener:(fd:float -> unit) -> t) =
          fun (x800 : t) ->
            fun ~event:(x797 : [ `open_ ]) ->
              fun ~listener:(x798 : fd:float -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x800) "once"
                     [|((match x797 with | `open_ -> Ojs.string_to_js "open"));(
                       Ojs.fun_to_js 1
                         (fun (x799 : Ojs.t) ->
                            x798 ~fd:(Ojs.float_of_js x799)))|])
        let (once''''' :
          t ->
            event:[ `pipe ] ->
              listener:(src:Stream.Readable.t_0 -> unit) -> t)
          =
          fun (x804 : t) ->
            fun ~event:(x801 : [ `pipe ]) ->
              fun ~listener:(x802 : src:Stream.Readable.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x804) "once"
                     [|((match x801 with | `pipe -> Ojs.string_to_js "pipe"));(
                       Ojs.fun_to_js 1
                         (fun (x803 : Ojs.t) ->
                            x802 ~src:(Stream.Readable.t_0_of_js x803)))|])
        let (once'''''' :
          t -> event:[ `ready ] -> listener:(unit -> unit) -> t) =
          fun (x807 : t) ->
            fun ~event:(x805 : [ `ready ]) ->
              fun ~listener:(x806 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x807) "once"
                     [|((match x805 with | `ready -> Ojs.string_to_js "ready"));(
                       Ojs.fun_to_js 1 (fun _ -> x806 ()))|])
        let (once''''''' :
          t ->
            event:[ `unpipe ] ->
              listener:(src:Stream.Readable.t_0 -> unit) -> t)
          =
          fun (x811 : t) ->
            fun ~event:(x808 : [ `unpipe ]) ->
              fun ~listener:(x809 : src:Stream.Readable.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x811) "once"
                     [|((match x808 with
                         | `unpipe -> Ojs.string_to_js "unpipe"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x810 :
                                                                    Ojs.t) ->
                                                                    x809
                                                                    ~src:(
                                                                    Stream.Readable.t_0_of_js
                                                                    x810)))|])
        let (once'''''''' :
          t ->
            event:symbol or_string -> listener:(args:any list -> unit) -> t)
          =
          fun (x817 : t) ->
            fun ~event:(x812 : symbol or_string) ->
              fun ~listener:(x814 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x817) "once"
                     [|(or_string_to_js symbol_to_js x812);(Ojs.fun_to_js_args
                                                              (fun (x815 : _)
                                                                 ->
                                                                 x814
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x815 0)))|])
        let (prependListener :
          t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x820 : t) ->
            fun ~event:(x818 : [ `close ]) ->
              fun ~listener:(x819 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x820) "prependListener"
                     [|((match x818 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x819 ()))|])
        let (prependListener' :
          t -> event:[ `drain ] -> listener:(unit -> unit) -> t) =
          fun (x823 : t) ->
            fun ~event:(x821 : [ `drain ]) ->
              fun ~listener:(x822 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x823) "prependListener"
                     [|((match x821 with | `drain -> Ojs.string_to_js "drain"));(
                       Ojs.fun_to_js 1 (fun _ -> x822 ()))|])
        let (prependListener'' :
          t -> event:[ `error ] -> listener:(err:Error.t_0 -> unit) -> t) =
          fun (x827 : t) ->
            fun ~event:(x824 : [ `error ]) ->
              fun ~listener:(x825 : err:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x827) "prependListener"
                     [|((match x824 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x826 : Ojs.t) ->
                            x825 ~err:(Error.t_0_of_js x826)))|])
        let (prependListener''' :
          t -> event:[ `finish ] -> listener:(unit -> unit) -> t) =
          fun (x830 : t) ->
            fun ~event:(x828 : [ `finish ]) ->
              fun ~listener:(x829 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x830) "prependListener"
                     [|((match x828 with
                         | `finish -> Ojs.string_to_js "finish"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x829 ()))|])
        let (prependListener'''' :
          t -> event:[ `open_ ] -> listener:(fd:float -> unit) -> t) =
          fun (x834 : t) ->
            fun ~event:(x831 : [ `open_ ]) ->
              fun ~listener:(x832 : fd:float -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x834) "prependListener"
                     [|((match x831 with | `open_ -> Ojs.string_to_js "open"));(
                       Ojs.fun_to_js 1
                         (fun (x833 : Ojs.t) ->
                            x832 ~fd:(Ojs.float_of_js x833)))|])
        let (prependListener''''' :
          t ->
            event:[ `pipe ] ->
              listener:(src:Stream.Readable.t_0 -> unit) -> t)
          =
          fun (x838 : t) ->
            fun ~event:(x835 : [ `pipe ]) ->
              fun ~listener:(x836 : src:Stream.Readable.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x838) "prependListener"
                     [|((match x835 with | `pipe -> Ojs.string_to_js "pipe"));(
                       Ojs.fun_to_js 1
                         (fun (x837 : Ojs.t) ->
                            x836 ~src:(Stream.Readable.t_0_of_js x837)))|])
        let (prependListener'''''' :
          t -> event:[ `ready ] -> listener:(unit -> unit) -> t) =
          fun (x841 : t) ->
            fun ~event:(x839 : [ `ready ]) ->
              fun ~listener:(x840 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x841) "prependListener"
                     [|((match x839 with | `ready -> Ojs.string_to_js "ready"));(
                       Ojs.fun_to_js 1 (fun _ -> x840 ()))|])
        let (prependListener''''''' :
          t ->
            event:[ `unpipe ] ->
              listener:(src:Stream.Readable.t_0 -> unit) -> t)
          =
          fun (x845 : t) ->
            fun ~event:(x842 : [ `unpipe ]) ->
              fun ~listener:(x843 : src:Stream.Readable.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x845) "prependListener"
                     [|((match x842 with
                         | `unpipe -> Ojs.string_to_js "unpipe"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x844 :
                                                                    Ojs.t) ->
                                                                    x843
                                                                    ~src:(
                                                                    Stream.Readable.t_0_of_js
                                                                    x844)))|])
        let (prependListener'''''''' :
          t ->
            event:symbol or_string -> listener:(args:any list -> unit) -> t)
          =
          fun (x851 : t) ->
            fun ~event:(x846 : symbol or_string) ->
              fun ~listener:(x848 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x851) "prependListener"
                     [|(or_string_to_js symbol_to_js x846);(Ojs.fun_to_js_args
                                                              (fun (x849 : _)
                                                                 ->
                                                                 x848
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x849 0)))|])
        let (prependOnceListener :
          t -> event:[ `close ] -> listener:(unit -> unit) -> t) =
          fun (x854 : t) ->
            fun ~event:(x852 : [ `close ]) ->
              fun ~listener:(x853 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x854) "prependOnceListener"
                     [|((match x852 with | `close -> Ojs.string_to_js "close"));(
                       Ojs.fun_to_js 1 (fun _ -> x853 ()))|])
        let (prependOnceListener' :
          t -> event:[ `drain ] -> listener:(unit -> unit) -> t) =
          fun (x857 : t) ->
            fun ~event:(x855 : [ `drain ]) ->
              fun ~listener:(x856 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x857) "prependOnceListener"
                     [|((match x855 with | `drain -> Ojs.string_to_js "drain"));(
                       Ojs.fun_to_js 1 (fun _ -> x856 ()))|])
        let (prependOnceListener'' :
          t -> event:[ `error ] -> listener:(err:Error.t_0 -> unit) -> t) =
          fun (x861 : t) ->
            fun ~event:(x858 : [ `error ]) ->
              fun ~listener:(x859 : err:Error.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x861) "prependOnceListener"
                     [|((match x858 with | `error -> Ojs.string_to_js "error"));(
                       Ojs.fun_to_js 1
                         (fun (x860 : Ojs.t) ->
                            x859 ~err:(Error.t_0_of_js x860)))|])
        let (prependOnceListener''' :
          t -> event:[ `finish ] -> listener:(unit -> unit) -> t) =
          fun (x864 : t) ->
            fun ~event:(x862 : [ `finish ]) ->
              fun ~listener:(x863 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x864) "prependOnceListener"
                     [|((match x862 with
                         | `finish -> Ojs.string_to_js "finish"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun _ ->
                                                                    x863 ()))|])
        let (prependOnceListener'''' :
          t -> event:[ `open_ ] -> listener:(fd:float -> unit) -> t) =
          fun (x868 : t) ->
            fun ~event:(x865 : [ `open_ ]) ->
              fun ~listener:(x866 : fd:float -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x868) "prependOnceListener"
                     [|((match x865 with | `open_ -> Ojs.string_to_js "open"));(
                       Ojs.fun_to_js 1
                         (fun (x867 : Ojs.t) ->
                            x866 ~fd:(Ojs.float_of_js x867)))|])
        let (prependOnceListener''''' :
          t ->
            event:[ `pipe ] ->
              listener:(src:Stream.Readable.t_0 -> unit) -> t)
          =
          fun (x872 : t) ->
            fun ~event:(x869 : [ `pipe ]) ->
              fun ~listener:(x870 : src:Stream.Readable.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x872) "prependOnceListener"
                     [|((match x869 with | `pipe -> Ojs.string_to_js "pipe"));(
                       Ojs.fun_to_js 1
                         (fun (x871 : Ojs.t) ->
                            x870 ~src:(Stream.Readable.t_0_of_js x871)))|])
        let (prependOnceListener'''''' :
          t -> event:[ `ready ] -> listener:(unit -> unit) -> t) =
          fun (x875 : t) ->
            fun ~event:(x873 : [ `ready ]) ->
              fun ~listener:(x874 : unit -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x875) "prependOnceListener"
                     [|((match x873 with | `ready -> Ojs.string_to_js "ready"));(
                       Ojs.fun_to_js 1 (fun _ -> x874 ()))|])
        let (prependOnceListener''''''' :
          t ->
            event:[ `unpipe ] ->
              listener:(src:Stream.Readable.t_0 -> unit) -> t)
          =
          fun (x879 : t) ->
            fun ~event:(x876 : [ `unpipe ]) ->
              fun ~listener:(x877 : src:Stream.Readable.t_0 -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x879) "prependOnceListener"
                     [|((match x876 with
                         | `unpipe -> Ojs.string_to_js "unpipe"));(Ojs.fun_to_js
                                                                    1
                                                                    (fun
                                                                    (x878 :
                                                                    Ojs.t) ->
                                                                    x877
                                                                    ~src:(
                                                                    Stream.Readable.t_0_of_js
                                                                    x878)))|])
        let (prependOnceListener'''''''' :
          t ->
            event:symbol or_string -> listener:(args:any list -> unit) -> t)
          =
          fun (x885 : t) ->
            fun ~event:(x880 : symbol or_string) ->
              fun ~listener:(x882 : args:any list -> unit) ->
                t_of_js
                  (Ojs.call (t_to_js x885) "prependOnceListener"
                     [|(or_string_to_js symbol_to_js x880);(Ojs.fun_to_js_args
                                                              (fun (x883 : _)
                                                                 ->
                                                                 x882
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x883 0)))|])
        let (cast : t -> Stream.Writable.t_0) =
          fun (x886 : t) -> Stream.Writable.t_0_of_js (t_to_js x886)
      end
    let (rename :
      oldPath:fs_PathLike ->
        newPath:fs_PathLike -> callback:fs_NoParamCallback -> unit)
      =
      fun ~oldPath:(x887 : fs_PathLike) ->
        fun ~newPath:(x888 : fs_PathLike) ->
          fun ~callback:(x889 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "rename"
                 [|(fs_PathLike_to_js x887);(fs_PathLike_to_js x888);(
                   fs_NoParamCallback_to_js x889)|])
    module Rename =
      struct
        let (__promisify__ :
          oldPath:fs_PathLike -> newPath:fs_PathLike -> unit Promise.t) =
          fun ~oldPath:(x890 : fs_PathLike) ->
            fun ~newPath:(x891 : fs_PathLike) ->
              Promise.t_of_js Ojs.unit_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "rename") "__promisify__"
                   [|(fs_PathLike_to_js x890);(fs_PathLike_to_js x891)|])
      end
    let (renameSync : oldPath:fs_PathLike -> newPath:fs_PathLike -> unit) =
      fun ~oldPath:(x893 : fs_PathLike) ->
        fun ~newPath:(x894 : fs_PathLike) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "renameSync"
               [|(fs_PathLike_to_js x893);(fs_PathLike_to_js x894)|])
    let (truncate :
      path:fs_PathLike ->
        len:float or_null_or_undefined -> callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x895 : fs_PathLike) ->
        fun ~len:(x896 : float or_null_or_undefined) ->
          fun ~callback:(x898 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "truncate"
                 [|(fs_PathLike_to_js x895);(or_null_or_undefined_to_js
                                               Ojs.float_to_js x896);(
                   fs_NoParamCallback_to_js x898)|])
    let (truncate : path:fs_PathLike -> callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x899 : fs_PathLike) ->
        fun ~callback:(x900 : fs_NoParamCallback) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "truncate"
               [|(fs_PathLike_to_js x899);(fs_NoParamCallback_to_js x900)|])
    module Truncate =
      struct
        let (__promisify__ :
          path:fs_PathLike -> ?len:float or_null -> unit -> unit Promise.t) =
          fun ~path:(x901 : fs_PathLike) ->
            fun ?len:(x902 : float or_null option) ->
              fun () ->
                Promise.t_of_js Ojs.unit_of_js
                  (let x906 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "truncate" in
                   Ojs.call (Ojs.get_prop_ascii x906 "__promisify__") "apply"
                     [|x906;((let x903 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x903 "push"
                                   [|(fs_PathLike_to_js x901)|]);
                              (match x902 with
                               | Some x904 ->
                                   ignore
                                     (Ojs.call x903 "push"
                                        [|(or_null_to_js Ojs.float_to_js x904)|])
                               | None -> ());
                              x903))|])
      end
    let (truncateSync :
      path:fs_PathLike -> ?len:float or_null -> unit -> unit) =
      fun ~path:(x908 : fs_PathLike) ->
        fun ?len:(x909 : float or_null option) ->
          fun () ->
            ignore
              (let x913 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x913 "truncateSync") "apply"
                 [|x913;((let x910 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x910 "push"
                               [|(fs_PathLike_to_js x908)|]);
                          (match x909 with
                           | Some x911 ->
                               ignore
                                 (Ojs.call x910 "push"
                                    [|(or_null_to_js Ojs.float_to_js x911)|])
                           | None -> ());
                          x910))|])
    let (ftruncate :
      fd:float ->
        len:float or_null_or_undefined -> callback:fs_NoParamCallback -> unit)
      =
      fun ~fd:(x914 : float) ->
        fun ~len:(x915 : float or_null_or_undefined) ->
          fun ~callback:(x917 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "ftruncate"
                 [|(Ojs.float_to_js x914);(or_null_or_undefined_to_js
                                             Ojs.float_to_js x915);(fs_NoParamCallback_to_js
                                                                    x917)|])
    let (ftruncate : fd:float -> callback:fs_NoParamCallback -> unit) =
      fun ~fd:(x918 : float) ->
        fun ~callback:(x919 : fs_NoParamCallback) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "ftruncate"
               [|(Ojs.float_to_js x918);(fs_NoParamCallback_to_js x919)|])
    module Ftruncate =
      struct
        let (__promisify__ :
          fd:float -> ?len:float or_null -> unit -> unit Promise.t) =
          fun ~fd:(x920 : float) ->
            fun ?len:(x921 : float or_null option) ->
              fun () ->
                Promise.t_of_js Ojs.unit_of_js
                  (let x925 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "ftruncate" in
                   Ojs.call (Ojs.get_prop_ascii x925 "__promisify__") "apply"
                     [|x925;((let x922 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x922 "push"
                                   [|(Ojs.float_to_js x920)|]);
                              (match x921 with
                               | Some x923 ->
                                   ignore
                                     (Ojs.call x922 "push"
                                        [|(or_null_to_js Ojs.float_to_js x923)|])
                               | None -> ());
                              x922))|])
      end
    let (ftruncateSync : fd:float -> ?len:float or_null -> unit -> unit) =
      fun ~fd:(x927 : float) ->
        fun ?len:(x928 : float or_null option) ->
          fun () ->
            ignore
              (let x932 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x932 "ftruncateSync") "apply"
                 [|x932;((let x929 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x929 "push" [|(Ojs.float_to_js x927)|]);
                          (match x928 with
                           | Some x930 ->
                               ignore
                                 (Ojs.call x929 "push"
                                    [|(or_null_to_js Ojs.float_to_js x930)|])
                           | None -> ());
                          x929))|])
    let (chown :
      path:fs_PathLike ->
        uid:float -> gid:float -> callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x933 : fs_PathLike) ->
        fun ~uid:(x934 : float) ->
          fun ~gid:(x935 : float) ->
            fun ~callback:(x936 : fs_NoParamCallback) ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "chown"
                   [|(fs_PathLike_to_js x933);(Ojs.float_to_js x934);(
                     Ojs.float_to_js x935);(fs_NoParamCallback_to_js x936)|])
    module Chown =
      struct
        let (__promisify__ :
          path:fs_PathLike -> uid:float -> gid:float -> unit Promise.t) =
          fun ~path:(x937 : fs_PathLike) ->
            fun ~uid:(x938 : float) ->
              fun ~gid:(x939 : float) ->
                Promise.t_of_js Ojs.unit_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                        "chown") "__promisify__"
                     [|(fs_PathLike_to_js x937);(Ojs.float_to_js x938);(
                       Ojs.float_to_js x939)|])
      end
    let (chownSync : path:fs_PathLike -> uid:float -> gid:float -> unit) =
      fun ~path:(x941 : fs_PathLike) ->
        fun ~uid:(x942 : float) ->
          fun ~gid:(x943 : float) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "chownSync"
                 [|(fs_PathLike_to_js x941);(Ojs.float_to_js x942);(Ojs.float_to_js
                                                                    x943)|])
    let (fchown :
      fd:float ->
        uid:float -> gid:float -> callback:fs_NoParamCallback -> unit)
      =
      fun ~fd:(x944 : float) ->
        fun ~uid:(x945 : float) ->
          fun ~gid:(x946 : float) ->
            fun ~callback:(x947 : fs_NoParamCallback) ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "fchown"
                   [|(Ojs.float_to_js x944);(Ojs.float_to_js x945);(Ojs.float_to_js
                                                                    x946);(
                     fs_NoParamCallback_to_js x947)|])
    module Fchown =
      struct
        let (__promisify__ :
          fd:float -> uid:float -> gid:float -> unit Promise.t) =
          fun ~fd:(x948 : float) ->
            fun ~uid:(x949 : float) ->
              fun ~gid:(x950 : float) ->
                Promise.t_of_js Ojs.unit_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                        "fchown") "__promisify__"
                     [|(Ojs.float_to_js x948);(Ojs.float_to_js x949);(
                       Ojs.float_to_js x950)|])
      end
    let (fchownSync : fd:float -> uid:float -> gid:float -> unit) =
      fun ~fd:(x952 : float) ->
        fun ~uid:(x953 : float) ->
          fun ~gid:(x954 : float) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "fchownSync"
                 [|(Ojs.float_to_js x952);(Ojs.float_to_js x953);(Ojs.float_to_js
                                                                    x954)|])
    let (lchown :
      path:fs_PathLike ->
        uid:float -> gid:float -> callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x955 : fs_PathLike) ->
        fun ~uid:(x956 : float) ->
          fun ~gid:(x957 : float) ->
            fun ~callback:(x958 : fs_NoParamCallback) ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "lchown"
                   [|(fs_PathLike_to_js x955);(Ojs.float_to_js x956);(
                     Ojs.float_to_js x957);(fs_NoParamCallback_to_js x958)|])
    module Lchown =
      struct
        let (__promisify__ :
          path:fs_PathLike -> uid:float -> gid:float -> unit Promise.t) =
          fun ~path:(x959 : fs_PathLike) ->
            fun ~uid:(x960 : float) ->
              fun ~gid:(x961 : float) ->
                Promise.t_of_js Ojs.unit_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                        "lchown") "__promisify__"
                     [|(fs_PathLike_to_js x959);(Ojs.float_to_js x960);(
                       Ojs.float_to_js x961)|])
      end
    let (lchownSync : path:fs_PathLike -> uid:float -> gid:float -> unit) =
      fun ~path:(x963 : fs_PathLike) ->
        fun ~uid:(x964 : float) ->
          fun ~gid:(x965 : float) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "lchownSync"
                 [|(fs_PathLike_to_js x963);(Ojs.float_to_js x964);(Ojs.float_to_js
                                                                    x965)|])
    let (lutimes :
      path:fs_PathLike ->
        atime:Date.t or_string or_number ->
          mtime:Date.t or_string or_number ->
            callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x966 : fs_PathLike) ->
        fun ~atime:(x967 : Date.t or_string or_number) ->
          fun ~mtime:(x970 : Date.t or_string or_number) ->
            fun ~callback:(x973 : fs_NoParamCallback) ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "lutimes"
                   [|(fs_PathLike_to_js x966);(or_number_to_js
                                                 (fun
                                                    (x968 : Date.t or_string)
                                                    ->
                                                    or_string_to_js
                                                      Date.t_to_js x968) x967);(
                     or_number_to_js
                       (fun (x971 : Date.t or_string) ->
                          or_string_to_js Date.t_to_js x971) x970);(fs_NoParamCallback_to_js
                                                                    x973)|])
    module Lutimes =
      struct
        let (__promisify__ :
          path:fs_PathLike ->
            atime:Date.t or_string or_number ->
              mtime:Date.t or_string or_number -> unit Promise.t)
          =
          fun ~path:(x974 : fs_PathLike) ->
            fun ~atime:(x975 : Date.t or_string or_number) ->
              fun ~mtime:(x978 : Date.t or_string or_number) ->
                Promise.t_of_js Ojs.unit_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                        "lutimes") "__promisify__"
                     [|(fs_PathLike_to_js x974);(or_number_to_js
                                                   (fun
                                                      (x976 :
                                                        Date.t or_string)
                                                      ->
                                                      or_string_to_js
                                                        Date.t_to_js x976)
                                                   x975);(or_number_to_js
                                                            (fun
                                                               (x979 :
                                                                 Date.t
                                                                   or_string)
                                                               ->
                                                               or_string_to_js
                                                                 Date.t_to_js
                                                                 x979) x978)|])
      end
    let (lutimesSync :
      path:fs_PathLike ->
        atime:Date.t or_string or_number ->
          mtime:Date.t or_string or_number -> unit)
      =
      fun ~path:(x982 : fs_PathLike) ->
        fun ~atime:(x983 : Date.t or_string or_number) ->
          fun ~mtime:(x986 : Date.t or_string or_number) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "lutimesSync"
                 [|(fs_PathLike_to_js x982);(or_number_to_js
                                               (fun (x984 : Date.t or_string)
                                                  ->
                                                  or_string_to_js
                                                    Date.t_to_js x984) x983);(
                   or_number_to_js
                     (fun (x987 : Date.t or_string) ->
                        or_string_to_js Date.t_to_js x987) x986)|])
    let (chmod :
      path:fs_PathLike -> mode:fs_Mode -> callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x989 : fs_PathLike) ->
        fun ~mode:(x990 : fs_Mode) ->
          fun ~callback:(x991 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "chmod"
                 [|(fs_PathLike_to_js x989);(fs_Mode_to_js x990);(fs_NoParamCallback_to_js
                                                                    x991)|])
    module Chmod =
      struct
        let (__promisify__ :
          path:fs_PathLike -> mode:fs_Mode -> unit Promise.t) =
          fun ~path:(x992 : fs_PathLike) ->
            fun ~mode:(x993 : fs_Mode) ->
              Promise.t_of_js Ojs.unit_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "chmod") "__promisify__"
                   [|(fs_PathLike_to_js x992);(fs_Mode_to_js x993)|])
      end
    let (chmodSync : path:fs_PathLike -> mode:fs_Mode -> unit) =
      fun ~path:(x995 : fs_PathLike) ->
        fun ~mode:(x996 : fs_Mode) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "chmodSync"
               [|(fs_PathLike_to_js x995);(fs_Mode_to_js x996)|])
    let (fchmod :
      fd:float -> mode:fs_Mode -> callback:fs_NoParamCallback -> unit) =
      fun ~fd:(x997 : float) ->
        fun ~mode:(x998 : fs_Mode) ->
          fun ~callback:(x999 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "fchmod"
                 [|(Ojs.float_to_js x997);(fs_Mode_to_js x998);(fs_NoParamCallback_to_js
                                                                  x999)|])
    module Fchmod =
      struct
        let (__promisify__ : fd:float -> mode:fs_Mode -> unit Promise.t) =
          fun ~fd:(x1000 : float) ->
            fun ~mode:(x1001 : fs_Mode) ->
              Promise.t_of_js Ojs.unit_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "fchmod") "__promisify__"
                   [|(Ojs.float_to_js x1000);(fs_Mode_to_js x1001)|])
      end
    let (fchmodSync : fd:float -> mode:fs_Mode -> unit) =
      fun ~fd:(x1003 : float) ->
        fun ~mode:(x1004 : fs_Mode) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "fchmodSync"
               [|(Ojs.float_to_js x1003);(fs_Mode_to_js x1004)|])
    let (lchmod :
      path:fs_PathLike -> mode:fs_Mode -> callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x1005 : fs_PathLike) ->
        fun ~mode:(x1006 : fs_Mode) ->
          fun ~callback:(x1007 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "lchmod"
                 [|(fs_PathLike_to_js x1005);(fs_Mode_to_js x1006);(fs_NoParamCallback_to_js
                                                                    x1007)|])
    module Lchmod =
      struct
        let (__promisify__ :
          path:fs_PathLike -> mode:fs_Mode -> unit Promise.t) =
          fun ~path:(x1008 : fs_PathLike) ->
            fun ~mode:(x1009 : fs_Mode) ->
              Promise.t_of_js Ojs.unit_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "lchmod") "__promisify__"
                   [|(fs_PathLike_to_js x1008);(fs_Mode_to_js x1009)|])
      end
    let (lchmodSync : path:fs_PathLike -> mode:fs_Mode -> unit) =
      fun ~path:(x1011 : fs_PathLike) ->
        fun ~mode:(x1012 : fs_Mode) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "lchmodSync"
               [|(fs_PathLike_to_js x1011);(fs_Mode_to_js x1012)|])
    let (stat :
      path:fs_PathLike ->
        callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                    stats:fs_Stats -> unit)
          -> unit)
      =
      fun ~path:(x1013 : fs_PathLike) ->
        fun
          ~callback:(x1014 :
                      err:NodeJS.ErrnoException.t_0 or_null ->
                        stats:fs_Stats -> unit)
          ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "stat"
               [|(fs_PathLike_to_js x1013);(Ojs.fun_to_js 2
                                              (fun (x1015 : Ojs.t) ->
                                                 fun (x1017 : Ojs.t) ->
                                                   x1014
                                                     ~err:(or_null_of_js
                                                             NodeJS.ErrnoException.t_0_of_js
                                                             x1015)
                                                     ~stats:(fs_Stats_of_js
                                                               x1017)))|])
    let (stat :
      path:fs_PathLike ->
        options:(fs_StatOptions, anonymous_interface_0) intersection2
          or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      stats:fs_Stats -> unit)
            -> unit)
      =
      fun ~path:(x1018 : fs_PathLike) ->
        fun
          ~options:(x1019 :
                     (fs_StatOptions, anonymous_interface_0) intersection2
                       or_undefined)
          ->
          fun
            ~callback:(x1023 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          stats:fs_Stats -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "stat"
                 [|(fs_PathLike_to_js x1018);(or_undefined_to_js
                                                (fun
                                                   (x1020 :
                                                     (fs_StatOptions,
                                                       anonymous_interface_0)
                                                       intersection2)
                                                   ->
                                                   intersection2_to_js
                                                     fs_StatOptions_to_js
                                                     anonymous_interface_0_to_js
                                                     x1020) x1019);(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x1024 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x1026 :
                                                                    Ojs.t) ->
                                                                    x1023
                                                                    ~err:(
                                                                    or_null_of_js
                                                                    NodeJS.ErrnoException.t_0_of_js
                                                                    x1024)
                                                                    ~stats:(
                                                                    fs_Stats_of_js
                                                                    x1026)))|])
    let (stat :
      path:fs_PathLike ->
        options:(fs_StatOptions, anonymous_interface_1) intersection2 ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      stats:fs_BigIntStats -> unit)
            -> unit)
      =
      fun ~path:(x1027 : fs_PathLike) ->
        fun
          ~options:(x1028 :
                     (fs_StatOptions, anonymous_interface_1) intersection2)
          ->
          fun
            ~callback:(x1031 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          stats:fs_BigIntStats -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "stat"
                 [|(fs_PathLike_to_js x1027);(intersection2_to_js
                                                fs_StatOptions_to_js
                                                anonymous_interface_1_to_js
                                                x1028);(Ojs.fun_to_js 2
                                                          (fun
                                                             (x1032 : Ojs.t)
                                                             ->
                                                             fun
                                                               (x1034 :
                                                                 Ojs.t)
                                                               ->
                                                               x1031
                                                                 ~err:(
                                                                 or_null_of_js
                                                                   NodeJS.ErrnoException.t_0_of_js
                                                                   x1032)
                                                                 ~stats:(
                                                                 fs_BigIntStats_of_js
                                                                   x1034)))|])
    let (stat :
      path:fs_PathLike ->
        options:fs_StatOptions or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      stats:(fs_BigIntStats, fs_Stats) union2 -> unit)
            -> unit)
      =
      fun ~path:(x1035 : fs_PathLike) ->
        fun ~options:(x1036 : fs_StatOptions or_undefined) ->
          fun
            ~callback:(x1038 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          stats:(fs_BigIntStats, fs_Stats) union2 -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "stat"
                 [|(fs_PathLike_to_js x1035);(or_undefined_to_js
                                                fs_StatOptions_to_js x1036);(
                   Ojs.fun_to_js 2
                     (fun (x1039 : Ojs.t) ->
                        fun (x1041 : Ojs.t) ->
                          x1038
                            ~err:(or_null_of_js
                                    NodeJS.ErrnoException.t_0_of_js x1039)
                            ~stats:(union2_of_js fs_BigIntStats_of_js
                                      fs_Stats_of_js x1041)))|])
    module Stat =
      struct
        let (__promisify__ :
          path:fs_PathLike ->
            ?options:(fs_StatOptions, anonymous_interface_0) intersection2 ->
              unit -> fs_Stats Promise.t)
          =
          fun ~path:(x1044 : fs_PathLike) ->
            fun
              ?options:(x1045 :
                         (fs_StatOptions, anonymous_interface_0)
                           intersection2 option)
              ->
              fun () ->
                Promise.t_of_js fs_Stats_of_js
                  (let x1050 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "stat" in
                   Ojs.call (Ojs.get_prop_ascii x1050 "__promisify__")
                     "apply"
                     [|x1050;((let x1046 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1046 "push"
                                    [|(fs_PathLike_to_js x1044)|]);
                               (match x1045 with
                                | Some x1047 ->
                                    ignore
                                      (Ojs.call x1046 "push"
                                         [|(intersection2_to_js
                                              fs_StatOptions_to_js
                                              anonymous_interface_0_to_js
                                              x1047)|])
                                | None -> ());
                               x1046))|])
        let (__promisify__ :
          path:fs_PathLike ->
            options:(fs_StatOptions, anonymous_interface_1) intersection2 ->
              fs_BigIntStats Promise.t)
          =
          fun ~path:(x1052 : fs_PathLike) ->
            fun
              ~options:(x1053 :
                         (fs_StatOptions, anonymous_interface_1)
                           intersection2)
              ->
              Promise.t_of_js fs_BigIntStats_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "stat") "__promisify__"
                   [|(fs_PathLike_to_js x1052);(intersection2_to_js
                                                  fs_StatOptions_to_js
                                                  anonymous_interface_1_to_js
                                                  x1053)|])
        let (__promisify__ :
          path:fs_PathLike ->
            ?options:fs_StatOptions ->
              unit -> (fs_BigIntStats, fs_Stats) union2 Promise.t)
          =
          fun ~path:(x1057 : fs_PathLike) ->
            fun ?options:(x1058 : fs_StatOptions option) ->
              fun () ->
                Promise.t_of_js
                  (fun (x1062 : Ojs.t) ->
                     union2_of_js fs_BigIntStats_of_js fs_Stats_of_js x1062)
                  (let x1061 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "stat" in
                   Ojs.call (Ojs.get_prop_ascii x1061 "__promisify__")
                     "apply"
                     [|x1061;((let x1059 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1059 "push"
                                    [|(fs_PathLike_to_js x1057)|]);
                               (match x1058 with
                                | Some x1060 ->
                                    ignore
                                      (Ojs.call x1059 "push"
                                         [|(fs_StatOptions_to_js x1060)|])
                                | None -> ());
                               x1059))|])
      end
    let (statSync :
      path:fs_PathLike ->
        ?options:(fs_StatOptions, anonymous_interface_0) intersection2 ->
          unit -> fs_Stats)
      =
      fun ~path:(x1065 : fs_PathLike) ->
        fun
          ?options:(x1066 :
                     (fs_StatOptions, anonymous_interface_0) intersection2
                       option)
          ->
          fun () ->
            fs_Stats_of_js
              (let x1071 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1071 "statSync") "apply"
                 [|x1071;((let x1067 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1067 "push"
                                [|(fs_PathLike_to_js x1065)|]);
                           (match x1066 with
                            | Some x1068 ->
                                ignore
                                  (Ojs.call x1067 "push"
                                     [|(intersection2_to_js
                                          fs_StatOptions_to_js
                                          anonymous_interface_0_to_js x1068)|])
                            | None -> ());
                           x1067))|])
    let (statSync :
      path:fs_PathLike ->
        options:(fs_StatOptions, anonymous_interface_1) intersection2 ->
          fs_BigIntStats)
      =
      fun ~path:(x1072 : fs_PathLike) ->
        fun
          ~options:(x1073 :
                     (fs_StatOptions, anonymous_interface_1) intersection2)
          ->
          fs_BigIntStats_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "statSync"
               [|(fs_PathLike_to_js x1072);(intersection2_to_js
                                              fs_StatOptions_to_js
                                              anonymous_interface_1_to_js
                                              x1073)|])
    let (statSync :
      path:fs_PathLike ->
        ?options:fs_StatOptions -> unit -> (fs_BigIntStats, fs_Stats) union2)
      =
      fun ~path:(x1076 : fs_PathLike) ->
        fun ?options:(x1077 : fs_StatOptions option) ->
          fun () ->
            union2_of_js fs_BigIntStats_of_js fs_Stats_of_js
              (let x1080 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1080 "statSync") "apply"
                 [|x1080;((let x1078 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1078 "push"
                                [|(fs_PathLike_to_js x1076)|]);
                           (match x1077 with
                            | Some x1079 ->
                                ignore
                                  (Ojs.call x1078 "push"
                                     [|(fs_StatOptions_to_js x1079)|])
                            | None -> ());
                           x1078))|])
    let (fstat :
      fd:float ->
        callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                    stats:fs_Stats -> unit)
          -> unit)
      =
      fun ~fd:(x1083 : float) ->
        fun
          ~callback:(x1084 :
                      err:NodeJS.ErrnoException.t_0 or_null ->
                        stats:fs_Stats -> unit)
          ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "fstat"
               [|(Ojs.float_to_js x1083);(Ojs.fun_to_js 2
                                            (fun (x1085 : Ojs.t) ->
                                               fun (x1087 : Ojs.t) ->
                                                 x1084
                                                   ~err:(or_null_of_js
                                                           NodeJS.ErrnoException.t_0_of_js
                                                           x1085)
                                                   ~stats:(fs_Stats_of_js
                                                             x1087)))|])
    let (fstat :
      fd:float ->
        options:(fs_StatOptions, anonymous_interface_0) intersection2
          or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      stats:fs_Stats -> unit)
            -> unit)
      =
      fun ~fd:(x1088 : float) ->
        fun
          ~options:(x1089 :
                     (fs_StatOptions, anonymous_interface_0) intersection2
                       or_undefined)
          ->
          fun
            ~callback:(x1093 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          stats:fs_Stats -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "fstat"
                 [|(Ojs.float_to_js x1088);(or_undefined_to_js
                                              (fun
                                                 (x1090 :
                                                   (fs_StatOptions,
                                                     anonymous_interface_0)
                                                     intersection2)
                                                 ->
                                                 intersection2_to_js
                                                   fs_StatOptions_to_js
                                                   anonymous_interface_0_to_js
                                                   x1090) x1089);(Ojs.fun_to_js
                                                                    2
                                                                    (
                                                                    fun
                                                                    (x1094 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x1096 :
                                                                    Ojs.t) ->
                                                                    x1093
                                                                    ~err:(
                                                                    or_null_of_js
                                                                    NodeJS.ErrnoException.t_0_of_js
                                                                    x1094)
                                                                    ~stats:(
                                                                    fs_Stats_of_js
                                                                    x1096)))|])
    let (fstat :
      fd:float ->
        options:(fs_StatOptions, anonymous_interface_1) intersection2 ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      stats:fs_BigIntStats -> unit)
            -> unit)
      =
      fun ~fd:(x1097 : float) ->
        fun
          ~options:(x1098 :
                     (fs_StatOptions, anonymous_interface_1) intersection2)
          ->
          fun
            ~callback:(x1101 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          stats:fs_BigIntStats -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "fstat"
                 [|(Ojs.float_to_js x1097);(intersection2_to_js
                                              fs_StatOptions_to_js
                                              anonymous_interface_1_to_js
                                              x1098);(Ojs.fun_to_js 2
                                                        (fun (x1102 : Ojs.t)
                                                           ->
                                                           fun
                                                             (x1104 : Ojs.t)
                                                             ->
                                                             x1101
                                                               ~err:(
                                                               or_null_of_js
                                                                 NodeJS.ErrnoException.t_0_of_js
                                                                 x1102)
                                                               ~stats:(
                                                               fs_BigIntStats_of_js
                                                                 x1104)))|])
    let (fstat :
      fd:float ->
        options:fs_StatOptions or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      stats:(fs_BigIntStats, fs_Stats) union2 -> unit)
            -> unit)
      =
      fun ~fd:(x1105 : float) ->
        fun ~options:(x1106 : fs_StatOptions or_undefined) ->
          fun
            ~callback:(x1108 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          stats:(fs_BigIntStats, fs_Stats) union2 -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "fstat"
                 [|(Ojs.float_to_js x1105);(or_undefined_to_js
                                              fs_StatOptions_to_js x1106);(
                   Ojs.fun_to_js 2
                     (fun (x1109 : Ojs.t) ->
                        fun (x1111 : Ojs.t) ->
                          x1108
                            ~err:(or_null_of_js
                                    NodeJS.ErrnoException.t_0_of_js x1109)
                            ~stats:(union2_of_js fs_BigIntStats_of_js
                                      fs_Stats_of_js x1111)))|])
    module Fstat =
      struct
        let (__promisify__ :
          fd:float ->
            ?options:(fs_StatOptions, anonymous_interface_0) intersection2 ->
              unit -> fs_Stats Promise.t)
          =
          fun ~fd:(x1114 : float) ->
            fun
              ?options:(x1115 :
                         (fs_StatOptions, anonymous_interface_0)
                           intersection2 option)
              ->
              fun () ->
                Promise.t_of_js fs_Stats_of_js
                  (let x1120 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "fstat" in
                   Ojs.call (Ojs.get_prop_ascii x1120 "__promisify__")
                     "apply"
                     [|x1120;((let x1116 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1116 "push"
                                    [|(Ojs.float_to_js x1114)|]);
                               (match x1115 with
                                | Some x1117 ->
                                    ignore
                                      (Ojs.call x1116 "push"
                                         [|(intersection2_to_js
                                              fs_StatOptions_to_js
                                              anonymous_interface_0_to_js
                                              x1117)|])
                                | None -> ());
                               x1116))|])
        let (__promisify__ :
          fd:float ->
            options:(fs_StatOptions, anonymous_interface_1) intersection2 ->
              fs_BigIntStats Promise.t)
          =
          fun ~fd:(x1122 : float) ->
            fun
              ~options:(x1123 :
                         (fs_StatOptions, anonymous_interface_1)
                           intersection2)
              ->
              Promise.t_of_js fs_BigIntStats_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "fstat") "__promisify__"
                   [|(Ojs.float_to_js x1122);(intersection2_to_js
                                                fs_StatOptions_to_js
                                                anonymous_interface_1_to_js
                                                x1123)|])
        let (__promisify__ :
          fd:float ->
            ?options:fs_StatOptions ->
              unit -> (fs_BigIntStats, fs_Stats) union2 Promise.t)
          =
          fun ~fd:(x1127 : float) ->
            fun ?options:(x1128 : fs_StatOptions option) ->
              fun () ->
                Promise.t_of_js
                  (fun (x1132 : Ojs.t) ->
                     union2_of_js fs_BigIntStats_of_js fs_Stats_of_js x1132)
                  (let x1131 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "fstat" in
                   Ojs.call (Ojs.get_prop_ascii x1131 "__promisify__")
                     "apply"
                     [|x1131;((let x1129 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1129 "push"
                                    [|(Ojs.float_to_js x1127)|]);
                               (match x1128 with
                                | Some x1130 ->
                                    ignore
                                      (Ojs.call x1129 "push"
                                         [|(fs_StatOptions_to_js x1130)|])
                                | None -> ());
                               x1129))|])
      end
    let (fstatSync :
      fd:float ->
        ?options:(fs_StatOptions, anonymous_interface_0) intersection2 ->
          unit -> fs_Stats)
      =
      fun ~fd:(x1135 : float) ->
        fun
          ?options:(x1136 :
                     (fs_StatOptions, anonymous_interface_0) intersection2
                       option)
          ->
          fun () ->
            fs_Stats_of_js
              (let x1141 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1141 "fstatSync") "apply"
                 [|x1141;((let x1137 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1137 "push"
                                [|(Ojs.float_to_js x1135)|]);
                           (match x1136 with
                            | Some x1138 ->
                                ignore
                                  (Ojs.call x1137 "push"
                                     [|(intersection2_to_js
                                          fs_StatOptions_to_js
                                          anonymous_interface_0_to_js x1138)|])
                            | None -> ());
                           x1137))|])
    let (fstatSync :
      fd:float ->
        options:(fs_StatOptions, anonymous_interface_1) intersection2 ->
          fs_BigIntStats)
      =
      fun ~fd:(x1142 : float) ->
        fun
          ~options:(x1143 :
                     (fs_StatOptions, anonymous_interface_1) intersection2)
          ->
          fs_BigIntStats_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "fstatSync"
               [|(Ojs.float_to_js x1142);(intersection2_to_js
                                            fs_StatOptions_to_js
                                            anonymous_interface_1_to_js x1143)|])
    let (fstatSync :
      fd:float ->
        ?options:fs_StatOptions -> unit -> (fs_BigIntStats, fs_Stats) union2)
      =
      fun ~fd:(x1146 : float) ->
        fun ?options:(x1147 : fs_StatOptions option) ->
          fun () ->
            union2_of_js fs_BigIntStats_of_js fs_Stats_of_js
              (let x1150 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1150 "fstatSync") "apply"
                 [|x1150;((let x1148 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1148 "push"
                                [|(Ojs.float_to_js x1146)|]);
                           (match x1147 with
                            | Some x1149 ->
                                ignore
                                  (Ojs.call x1148 "push"
                                     [|(fs_StatOptions_to_js x1149)|])
                            | None -> ());
                           x1148))|])
    let (lstat :
      path:fs_PathLike ->
        callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                    stats:fs_Stats -> unit)
          -> unit)
      =
      fun ~path:(x1153 : fs_PathLike) ->
        fun
          ~callback:(x1154 :
                      err:NodeJS.ErrnoException.t_0 or_null ->
                        stats:fs_Stats -> unit)
          ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "lstat"
               [|(fs_PathLike_to_js x1153);(Ojs.fun_to_js 2
                                              (fun (x1155 : Ojs.t) ->
                                                 fun (x1157 : Ojs.t) ->
                                                   x1154
                                                     ~err:(or_null_of_js
                                                             NodeJS.ErrnoException.t_0_of_js
                                                             x1155)
                                                     ~stats:(fs_Stats_of_js
                                                               x1157)))|])
    let (lstat :
      path:fs_PathLike ->
        options:(fs_StatOptions, anonymous_interface_0) intersection2
          or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      stats:fs_Stats -> unit)
            -> unit)
      =
      fun ~path:(x1158 : fs_PathLike) ->
        fun
          ~options:(x1159 :
                     (fs_StatOptions, anonymous_interface_0) intersection2
                       or_undefined)
          ->
          fun
            ~callback:(x1163 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          stats:fs_Stats -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "lstat"
                 [|(fs_PathLike_to_js x1158);(or_undefined_to_js
                                                (fun
                                                   (x1160 :
                                                     (fs_StatOptions,
                                                       anonymous_interface_0)
                                                       intersection2)
                                                   ->
                                                   intersection2_to_js
                                                     fs_StatOptions_to_js
                                                     anonymous_interface_0_to_js
                                                     x1160) x1159);(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x1164 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x1166 :
                                                                    Ojs.t) ->
                                                                    x1163
                                                                    ~err:(
                                                                    or_null_of_js
                                                                    NodeJS.ErrnoException.t_0_of_js
                                                                    x1164)
                                                                    ~stats:(
                                                                    fs_Stats_of_js
                                                                    x1166)))|])
    let (lstat :
      path:fs_PathLike ->
        options:(fs_StatOptions, anonymous_interface_1) intersection2 ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      stats:fs_BigIntStats -> unit)
            -> unit)
      =
      fun ~path:(x1167 : fs_PathLike) ->
        fun
          ~options:(x1168 :
                     (fs_StatOptions, anonymous_interface_1) intersection2)
          ->
          fun
            ~callback:(x1171 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          stats:fs_BigIntStats -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "lstat"
                 [|(fs_PathLike_to_js x1167);(intersection2_to_js
                                                fs_StatOptions_to_js
                                                anonymous_interface_1_to_js
                                                x1168);(Ojs.fun_to_js 2
                                                          (fun
                                                             (x1172 : Ojs.t)
                                                             ->
                                                             fun
                                                               (x1174 :
                                                                 Ojs.t)
                                                               ->
                                                               x1171
                                                                 ~err:(
                                                                 or_null_of_js
                                                                   NodeJS.ErrnoException.t_0_of_js
                                                                   x1172)
                                                                 ~stats:(
                                                                 fs_BigIntStats_of_js
                                                                   x1174)))|])
    let (lstat :
      path:fs_PathLike ->
        options:fs_StatOptions or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      stats:(fs_BigIntStats, fs_Stats) union2 -> unit)
            -> unit)
      =
      fun ~path:(x1175 : fs_PathLike) ->
        fun ~options:(x1176 : fs_StatOptions or_undefined) ->
          fun
            ~callback:(x1178 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          stats:(fs_BigIntStats, fs_Stats) union2 -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "lstat"
                 [|(fs_PathLike_to_js x1175);(or_undefined_to_js
                                                fs_StatOptions_to_js x1176);(
                   Ojs.fun_to_js 2
                     (fun (x1179 : Ojs.t) ->
                        fun (x1181 : Ojs.t) ->
                          x1178
                            ~err:(or_null_of_js
                                    NodeJS.ErrnoException.t_0_of_js x1179)
                            ~stats:(union2_of_js fs_BigIntStats_of_js
                                      fs_Stats_of_js x1181)))|])
    module Lstat =
      struct
        let (__promisify__ :
          path:fs_PathLike ->
            ?options:(fs_StatOptions, anonymous_interface_0) intersection2 ->
              unit -> fs_Stats Promise.t)
          =
          fun ~path:(x1184 : fs_PathLike) ->
            fun
              ?options:(x1185 :
                         (fs_StatOptions, anonymous_interface_0)
                           intersection2 option)
              ->
              fun () ->
                Promise.t_of_js fs_Stats_of_js
                  (let x1190 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "lstat" in
                   Ojs.call (Ojs.get_prop_ascii x1190 "__promisify__")
                     "apply"
                     [|x1190;((let x1186 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1186 "push"
                                    [|(fs_PathLike_to_js x1184)|]);
                               (match x1185 with
                                | Some x1187 ->
                                    ignore
                                      (Ojs.call x1186 "push"
                                         [|(intersection2_to_js
                                              fs_StatOptions_to_js
                                              anonymous_interface_0_to_js
                                              x1187)|])
                                | None -> ());
                               x1186))|])
        let (__promisify__ :
          path:fs_PathLike ->
            options:(fs_StatOptions, anonymous_interface_1) intersection2 ->
              fs_BigIntStats Promise.t)
          =
          fun ~path:(x1192 : fs_PathLike) ->
            fun
              ~options:(x1193 :
                         (fs_StatOptions, anonymous_interface_1)
                           intersection2)
              ->
              Promise.t_of_js fs_BigIntStats_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "lstat") "__promisify__"
                   [|(fs_PathLike_to_js x1192);(intersection2_to_js
                                                  fs_StatOptions_to_js
                                                  anonymous_interface_1_to_js
                                                  x1193)|])
        let (__promisify__ :
          path:fs_PathLike ->
            ?options:fs_StatOptions ->
              unit -> (fs_BigIntStats, fs_Stats) union2 Promise.t)
          =
          fun ~path:(x1197 : fs_PathLike) ->
            fun ?options:(x1198 : fs_StatOptions option) ->
              fun () ->
                Promise.t_of_js
                  (fun (x1202 : Ojs.t) ->
                     union2_of_js fs_BigIntStats_of_js fs_Stats_of_js x1202)
                  (let x1201 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "lstat" in
                   Ojs.call (Ojs.get_prop_ascii x1201 "__promisify__")
                     "apply"
                     [|x1201;((let x1199 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1199 "push"
                                    [|(fs_PathLike_to_js x1197)|]);
                               (match x1198 with
                                | Some x1200 ->
                                    ignore
                                      (Ojs.call x1199 "push"
                                         [|(fs_StatOptions_to_js x1200)|])
                                | None -> ());
                               x1199))|])
      end
    let (lstatSync :
      path:fs_PathLike ->
        ?options:(fs_StatOptions, anonymous_interface_0) intersection2 ->
          unit -> fs_Stats)
      =
      fun ~path:(x1205 : fs_PathLike) ->
        fun
          ?options:(x1206 :
                     (fs_StatOptions, anonymous_interface_0) intersection2
                       option)
          ->
          fun () ->
            fs_Stats_of_js
              (let x1211 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1211 "lstatSync") "apply"
                 [|x1211;((let x1207 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1207 "push"
                                [|(fs_PathLike_to_js x1205)|]);
                           (match x1206 with
                            | Some x1208 ->
                                ignore
                                  (Ojs.call x1207 "push"
                                     [|(intersection2_to_js
                                          fs_StatOptions_to_js
                                          anonymous_interface_0_to_js x1208)|])
                            | None -> ());
                           x1207))|])
    let (lstatSync :
      path:fs_PathLike ->
        options:(fs_StatOptions, anonymous_interface_1) intersection2 ->
          fs_BigIntStats)
      =
      fun ~path:(x1212 : fs_PathLike) ->
        fun
          ~options:(x1213 :
                     (fs_StatOptions, anonymous_interface_1) intersection2)
          ->
          fs_BigIntStats_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "lstatSync"
               [|(fs_PathLike_to_js x1212);(intersection2_to_js
                                              fs_StatOptions_to_js
                                              anonymous_interface_1_to_js
                                              x1213)|])
    let (lstatSync :
      path:fs_PathLike ->
        ?options:fs_StatOptions -> unit -> (fs_BigIntStats, fs_Stats) union2)
      =
      fun ~path:(x1216 : fs_PathLike) ->
        fun ?options:(x1217 : fs_StatOptions option) ->
          fun () ->
            union2_of_js fs_BigIntStats_of_js fs_Stats_of_js
              (let x1220 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1220 "lstatSync") "apply"
                 [|x1220;((let x1218 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1218 "push"
                                [|(fs_PathLike_to_js x1216)|]);
                           (match x1217 with
                            | Some x1219 ->
                                ignore
                                  (Ojs.call x1218 "push"
                                     [|(fs_StatOptions_to_js x1219)|])
                            | None -> ());
                           x1218))|])
    let (link :
      existingPath:fs_PathLike ->
        newPath:fs_PathLike -> callback:fs_NoParamCallback -> unit)
      =
      fun ~existingPath:(x1223 : fs_PathLike) ->
        fun ~newPath:(x1224 : fs_PathLike) ->
          fun ~callback:(x1225 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "link"
                 [|(fs_PathLike_to_js x1223);(fs_PathLike_to_js x1224);(
                   fs_NoParamCallback_to_js x1225)|])
    module Link =
      struct
        let (__promisify__ :
          existingPath:fs_PathLike -> newPath:fs_PathLike -> unit Promise.t)
          =
          fun ~existingPath:(x1226 : fs_PathLike) ->
            fun ~newPath:(x1227 : fs_PathLike) ->
              Promise.t_of_js Ojs.unit_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "link") "__promisify__"
                   [|(fs_PathLike_to_js x1226);(fs_PathLike_to_js x1227)|])
      end
    let (linkSync : existingPath:fs_PathLike -> newPath:fs_PathLike -> unit)
      =
      fun ~existingPath:(x1229 : fs_PathLike) ->
        fun ~newPath:(x1230 : fs_PathLike) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "linkSync"
               [|(fs_PathLike_to_js x1229);(fs_PathLike_to_js x1230)|])
    let (symlink :
      target:fs_PathLike ->
        path:fs_PathLike ->
          type_:fs_symlink_Type or_null_or_undefined ->
            callback:fs_NoParamCallback -> unit)
      =
      fun ~target:(x1231 : fs_PathLike) ->
        fun ~path:(x1232 : fs_PathLike) ->
          fun ~type_:(x1233 : fs_symlink_Type or_null_or_undefined) ->
            fun ~callback:(x1235 : fs_NoParamCallback) ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "symlink"
                   [|(fs_PathLike_to_js x1231);(fs_PathLike_to_js x1232);(
                     or_null_or_undefined_to_js fs_symlink_Type_to_js x1233);(
                     fs_NoParamCallback_to_js x1235)|])
    let (symlink :
      target:fs_PathLike ->
        path:fs_PathLike -> callback:fs_NoParamCallback -> unit)
      =
      fun ~target:(x1236 : fs_PathLike) ->
        fun ~path:(x1237 : fs_PathLike) ->
          fun ~callback:(x1238 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "symlink"
                 [|(fs_PathLike_to_js x1236);(fs_PathLike_to_js x1237);(
                   fs_NoParamCallback_to_js x1238)|])
    module Symlink =
      struct
        let (__promisify__ :
          target:fs_PathLike ->
            path:fs_PathLike ->
              ?type_:string or_null -> unit -> unit Promise.t)
          =
          fun ~target:(x1239 : fs_PathLike) ->
            fun ~path:(x1240 : fs_PathLike) ->
              fun ?type_:(x1241 : string or_null option) ->
                fun () ->
                  Promise.t_of_js Ojs.unit_of_js
                    (let x1245 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "fs") "symlink" in
                     Ojs.call (Ojs.get_prop_ascii x1245 "__promisify__")
                       "apply"
                       [|x1245;((let x1242 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1242 "push"
                                      [|(fs_PathLike_to_js x1239)|]);
                                 ignore
                                   (Ojs.call x1242 "push"
                                      [|(fs_PathLike_to_js x1240)|]);
                                 (match x1241 with
                                  | Some x1243 ->
                                      ignore
                                        (Ojs.call x1242 "push"
                                           [|(or_null_to_js Ojs.string_to_js
                                                x1243)|])
                                  | None -> ());
                                 x1242))|])
        module Type =
          struct
            type t = fs_symlink_Type
            let rec t_of_js : Ojs.t -> t =
              fun (x1248 : Ojs.t) -> fs_symlink_Type_of_js x1248
            and t_to_js : t -> Ojs.t =
              fun (x1247 : fs_symlink_Type) -> fs_symlink_Type_to_js x1247
          end
      end
    let (symlinkSync :
      target:fs_PathLike ->
        path:fs_PathLike -> ?type_:fs_symlink_Type or_null -> unit -> unit)
      =
      fun ~target:(x1249 : fs_PathLike) ->
        fun ~path:(x1250 : fs_PathLike) ->
          fun ?type_:(x1251 : fs_symlink_Type or_null option) ->
            fun () ->
              ignore
                (let x1255 = Ojs.get_prop_ascii Ojs.global "fs" in
                 Ojs.call (Ojs.get_prop_ascii x1255 "symlinkSync") "apply"
                   [|x1255;((let x1252 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1252 "push"
                                  [|(fs_PathLike_to_js x1249)|]);
                             ignore
                               (Ojs.call x1252 "push"
                                  [|(fs_PathLike_to_js x1250)|]);
                             (match x1251 with
                              | Some x1253 ->
                                  ignore
                                    (Ojs.call x1252 "push"
                                       [|(or_null_to_js fs_symlink_Type_to_js
                                            x1253)|])
                              | None -> ());
                             x1252))|])
    let (readlink :
      path:fs_PathLike ->
        options:(fs_BaseEncodingOptions, BufferEncoding.t_0) union2
          or_null_or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      linkString:string -> unit)
            -> unit)
      =
      fun ~path:(x1256 : fs_PathLike) ->
        fun
          ~options:(x1257 :
                     (fs_BaseEncodingOptions, BufferEncoding.t_0) union2
                       or_null_or_undefined)
          ->
          fun
            ~callback:(x1261 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          linkString:string -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readlink"
                 [|(fs_PathLike_to_js x1256);(or_null_or_undefined_to_js
                                                (fun
                                                   (x1258 :
                                                     (fs_BaseEncodingOptions,
                                                       BufferEncoding.t_0)
                                                       union2)
                                                   ->
                                                   union2_to_js
                                                     fs_BaseEncodingOptions_to_js
                                                     BufferEncoding.t_0_to_js
                                                     x1258) x1257);(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x1262 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x1264 :
                                                                    Ojs.t) ->
                                                                    x1261
                                                                    ~err:(
                                                                    or_null_of_js
                                                                    NodeJS.ErrnoException.t_0_of_js
                                                                    x1262)
                                                                    ~linkString:(
                                                                    Ojs.string_of_js
                                                                    x1264)))|])
    let (readlink :
      path:fs_PathLike ->
        options:fs_BufferEncodingOption ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      linkString:Buffer.t_0 -> unit)
            -> unit)
      =
      fun ~path:(x1265 : fs_PathLike) ->
        fun ~options:(x1266 : fs_BufferEncodingOption) ->
          fun
            ~callback:(x1267 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          linkString:Buffer.t_0 -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readlink"
                 [|(fs_PathLike_to_js x1265);(fs_BufferEncodingOption_to_js
                                                x1266);(Ojs.fun_to_js 2
                                                          (fun
                                                             (x1268 : Ojs.t)
                                                             ->
                                                             fun
                                                               (x1270 :
                                                                 Ojs.t)
                                                               ->
                                                               x1267
                                                                 ~err:(
                                                                 or_null_of_js
                                                                   NodeJS.ErrnoException.t_0_of_js
                                                                   x1268)
                                                                 ~linkString:(
                                                                 Buffer.t_0_of_js
                                                                   x1270)))|])
    let (readlink :
      path:fs_PathLike ->
        options:fs_BaseEncodingOptions or_string or_null_or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      linkString:Buffer.t_0 or_string -> unit)
            -> unit)
      =
      fun ~path:(x1271 : fs_PathLike) ->
        fun
          ~options:(x1272 :
                     fs_BaseEncodingOptions or_string or_null_or_undefined)
          ->
          fun
            ~callback:(x1275 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          linkString:Buffer.t_0 or_string -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readlink"
                 [|(fs_PathLike_to_js x1271);(or_null_or_undefined_to_js
                                                (fun
                                                   (x1273 :
                                                     fs_BaseEncodingOptions
                                                       or_string)
                                                   ->
                                                   or_string_to_js
                                                     fs_BaseEncodingOptions_to_js
                                                     x1273) x1272);(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x1276 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x1278 :
                                                                    Ojs.t) ->
                                                                    x1275
                                                                    ~err:(
                                                                    or_null_of_js
                                                                    NodeJS.ErrnoException.t_0_of_js
                                                                    x1276)
                                                                    ~linkString:(
                                                                    or_string_of_js
                                                                    Buffer.t_0_of_js
                                                                    x1278)))|])
    let (readlink :
      path:fs_PathLike ->
        callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                    linkString:string -> unit)
          -> unit)
      =
      fun ~path:(x1280 : fs_PathLike) ->
        fun
          ~callback:(x1281 :
                      err:NodeJS.ErrnoException.t_0 or_null ->
                        linkString:string -> unit)
          ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readlink"
               [|(fs_PathLike_to_js x1280);(Ojs.fun_to_js 2
                                              (fun (x1282 : Ojs.t) ->
                                                 fun (x1284 : Ojs.t) ->
                                                   x1281
                                                     ~err:(or_null_of_js
                                                             NodeJS.ErrnoException.t_0_of_js
                                                             x1282)
                                                     ~linkString:(Ojs.string_of_js
                                                                    x1284)))|])
    module Readlink =
      struct
        let (__promisify__ :
          path:fs_PathLike ->
            ?options:(fs_BaseEncodingOptions, BufferEncoding.t_0) union2
              or_null -> unit -> string Promise.t)
          =
          fun ~path:(x1285 : fs_PathLike) ->
            fun
              ?options:(x1286 :
                         (fs_BaseEncodingOptions, BufferEncoding.t_0) union2
                           or_null option)
              ->
              fun () ->
                Promise.t_of_js Ojs.string_of_js
                  (let x1292 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "readlink" in
                   Ojs.call (Ojs.get_prop_ascii x1292 "__promisify__")
                     "apply"
                     [|x1292;((let x1287 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1287 "push"
                                    [|(fs_PathLike_to_js x1285)|]);
                               (match x1286 with
                                | Some x1288 ->
                                    ignore
                                      (Ojs.call x1287 "push"
                                         [|(or_null_to_js
                                              (fun
                                                 (x1289 :
                                                   (fs_BaseEncodingOptions,
                                                     BufferEncoding.t_0)
                                                     union2)
                                                 ->
                                                 union2_to_js
                                                   fs_BaseEncodingOptions_to_js
                                                   BufferEncoding.t_0_to_js
                                                   x1289) x1288)|])
                                | None -> ());
                               x1287))|])
        let (__promisify__ :
          path:fs_PathLike ->
            options:fs_BufferEncodingOption -> Buffer.t_0 Promise.t)
          =
          fun ~path:(x1294 : fs_PathLike) ->
            fun ~options:(x1295 : fs_BufferEncodingOption) ->
              Promise.t_of_js Buffer.t_0_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "readlink") "__promisify__"
                   [|(fs_PathLike_to_js x1294);(fs_BufferEncodingOption_to_js
                                                  x1295)|])
        let (__promisify__ :
          path:fs_PathLike ->
            ?options:fs_BaseEncodingOptions or_string or_null ->
              unit -> Buffer.t_0 or_string Promise.t)
          =
          fun ~path:(x1297 : fs_PathLike) ->
            fun
              ?options:(x1298 :
                         fs_BaseEncodingOptions or_string or_null option)
              ->
              fun () ->
                Promise.t_of_js
                  (fun (x1304 : Ojs.t) ->
                     or_string_of_js Buffer.t_0_of_js x1304)
                  (let x1303 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "readlink" in
                   Ojs.call (Ojs.get_prop_ascii x1303 "__promisify__")
                     "apply"
                     [|x1303;((let x1299 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1299 "push"
                                    [|(fs_PathLike_to_js x1297)|]);
                               (match x1298 with
                                | Some x1300 ->
                                    ignore
                                      (Ojs.call x1299 "push"
                                         [|(or_null_to_js
                                              (fun
                                                 (x1301 :
                                                   fs_BaseEncodingOptions
                                                     or_string)
                                                 ->
                                                 or_string_to_js
                                                   fs_BaseEncodingOptions_to_js
                                                   x1301) x1300)|])
                                | None -> ());
                               x1299))|])
      end
    let (readlinkSync :
      path:fs_PathLike ->
        ?options:(fs_BaseEncodingOptions, BufferEncoding.t_0) union2 or_null
          -> unit -> string)
      =
      fun ~path:(x1306 : fs_PathLike) ->
        fun
          ?options:(x1307 :
                     (fs_BaseEncodingOptions, BufferEncoding.t_0) union2
                       or_null option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x1313 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1313 "readlinkSync") "apply"
                 [|x1313;((let x1308 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1308 "push"
                                [|(fs_PathLike_to_js x1306)|]);
                           (match x1307 with
                            | Some x1309 ->
                                ignore
                                  (Ojs.call x1308 "push"
                                     [|(or_null_to_js
                                          (fun
                                             (x1310 :
                                               (fs_BaseEncodingOptions,
                                                 BufferEncoding.t_0) union2)
                                             ->
                                             union2_to_js
                                               fs_BaseEncodingOptions_to_js
                                               BufferEncoding.t_0_to_js x1310)
                                          x1309)|])
                            | None -> ());
                           x1308))|])
    let (readlinkSync :
      path:fs_PathLike -> options:fs_BufferEncodingOption -> Buffer.t_0) =
      fun ~path:(x1314 : fs_PathLike) ->
        fun ~options:(x1315 : fs_BufferEncodingOption) ->
          Buffer.t_0_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readlinkSync"
               [|(fs_PathLike_to_js x1314);(fs_BufferEncodingOption_to_js
                                              x1315)|])
    let (readlinkSync :
      path:fs_PathLike ->
        ?options:fs_BaseEncodingOptions or_string or_null ->
          unit -> Buffer.t_0 or_string)
      =
      fun ~path:(x1316 : fs_PathLike) ->
        fun
          ?options:(x1317 : fs_BaseEncodingOptions or_string or_null option)
          ->
          fun () ->
            or_string_of_js Buffer.t_0_of_js
              (let x1322 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1322 "readlinkSync") "apply"
                 [|x1322;((let x1318 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1318 "push"
                                [|(fs_PathLike_to_js x1316)|]);
                           (match x1317 with
                            | Some x1319 ->
                                ignore
                                  (Ojs.call x1318 "push"
                                     [|(or_null_to_js
                                          (fun
                                             (x1320 :
                                               fs_BaseEncodingOptions
                                                 or_string)
                                             ->
                                             or_string_to_js
                                               fs_BaseEncodingOptions_to_js
                                               x1320) x1319)|])
                            | None -> ());
                           x1318))|])
    let (realpath :
      path:fs_PathLike ->
        options:(fs_BaseEncodingOptions, BufferEncoding.t_0) union2
          or_null_or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      resolvedPath:string -> unit)
            -> unit)
      =
      fun ~path:(x1324 : fs_PathLike) ->
        fun
          ~options:(x1325 :
                     (fs_BaseEncodingOptions, BufferEncoding.t_0) union2
                       or_null_or_undefined)
          ->
          fun
            ~callback:(x1329 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          resolvedPath:string -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "realpath"
                 [|(fs_PathLike_to_js x1324);(or_null_or_undefined_to_js
                                                (fun
                                                   (x1326 :
                                                     (fs_BaseEncodingOptions,
                                                       BufferEncoding.t_0)
                                                       union2)
                                                   ->
                                                   union2_to_js
                                                     fs_BaseEncodingOptions_to_js
                                                     BufferEncoding.t_0_to_js
                                                     x1326) x1325);(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x1330 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x1332 :
                                                                    Ojs.t) ->
                                                                    x1329
                                                                    ~err:(
                                                                    or_null_of_js
                                                                    NodeJS.ErrnoException.t_0_of_js
                                                                    x1330)
                                                                    ~resolvedPath:(
                                                                    Ojs.string_of_js
                                                                    x1332)))|])
    let (realpath :
      path:fs_PathLike ->
        options:fs_BufferEncodingOption ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      resolvedPath:Buffer.t_0 -> unit)
            -> unit)
      =
      fun ~path:(x1333 : fs_PathLike) ->
        fun ~options:(x1334 : fs_BufferEncodingOption) ->
          fun
            ~callback:(x1335 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          resolvedPath:Buffer.t_0 -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "realpath"
                 [|(fs_PathLike_to_js x1333);(fs_BufferEncodingOption_to_js
                                                x1334);(Ojs.fun_to_js 2
                                                          (fun
                                                             (x1336 : Ojs.t)
                                                             ->
                                                             fun
                                                               (x1338 :
                                                                 Ojs.t)
                                                               ->
                                                               x1335
                                                                 ~err:(
                                                                 or_null_of_js
                                                                   NodeJS.ErrnoException.t_0_of_js
                                                                   x1336)
                                                                 ~resolvedPath:(
                                                                 Buffer.t_0_of_js
                                                                   x1338)))|])
    let (realpath :
      path:fs_PathLike ->
        options:fs_BaseEncodingOptions or_string or_null_or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      resolvedPath:Buffer.t_0 or_string -> unit)
            -> unit)
      =
      fun ~path:(x1339 : fs_PathLike) ->
        fun
          ~options:(x1340 :
                     fs_BaseEncodingOptions or_string or_null_or_undefined)
          ->
          fun
            ~callback:(x1343 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          resolvedPath:Buffer.t_0 or_string -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "realpath"
                 [|(fs_PathLike_to_js x1339);(or_null_or_undefined_to_js
                                                (fun
                                                   (x1341 :
                                                     fs_BaseEncodingOptions
                                                       or_string)
                                                   ->
                                                   or_string_to_js
                                                     fs_BaseEncodingOptions_to_js
                                                     x1341) x1340);(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x1344 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x1346 :
                                                                    Ojs.t) ->
                                                                    x1343
                                                                    ~err:(
                                                                    or_null_of_js
                                                                    NodeJS.ErrnoException.t_0_of_js
                                                                    x1344)
                                                                    ~resolvedPath:(
                                                                    or_string_of_js
                                                                    Buffer.t_0_of_js
                                                                    x1346)))|])
    let (realpath :
      path:fs_PathLike ->
        callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                    resolvedPath:string -> unit)
          -> unit)
      =
      fun ~path:(x1348 : fs_PathLike) ->
        fun
          ~callback:(x1349 :
                      err:NodeJS.ErrnoException.t_0 or_null ->
                        resolvedPath:string -> unit)
          ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "realpath"
               [|(fs_PathLike_to_js x1348);(Ojs.fun_to_js 2
                                              (fun (x1350 : Ojs.t) ->
                                                 fun (x1352 : Ojs.t) ->
                                                   x1349
                                                     ~err:(or_null_of_js
                                                             NodeJS.ErrnoException.t_0_of_js
                                                             x1350)
                                                     ~resolvedPath:(Ojs.string_of_js
                                                                    x1352)))|])
    module Realpath =
      struct
        let (__promisify__ :
          path:fs_PathLike ->
            ?options:(fs_BaseEncodingOptions, BufferEncoding.t_0) union2
              or_null -> unit -> string Promise.t)
          =
          fun ~path:(x1353 : fs_PathLike) ->
            fun
              ?options:(x1354 :
                         (fs_BaseEncodingOptions, BufferEncoding.t_0) union2
                           or_null option)
              ->
              fun () ->
                Promise.t_of_js Ojs.string_of_js
                  (let x1360 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "realpath" in
                   Ojs.call (Ojs.get_prop_ascii x1360 "__promisify__")
                     "apply"
                     [|x1360;((let x1355 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1355 "push"
                                    [|(fs_PathLike_to_js x1353)|]);
                               (match x1354 with
                                | Some x1356 ->
                                    ignore
                                      (Ojs.call x1355 "push"
                                         [|(or_null_to_js
                                              (fun
                                                 (x1357 :
                                                   (fs_BaseEncodingOptions,
                                                     BufferEncoding.t_0)
                                                     union2)
                                                 ->
                                                 union2_to_js
                                                   fs_BaseEncodingOptions_to_js
                                                   BufferEncoding.t_0_to_js
                                                   x1357) x1356)|])
                                | None -> ());
                               x1355))|])
        let (__promisify__ :
          path:fs_PathLike ->
            options:fs_BufferEncodingOption -> Buffer.t_0 Promise.t)
          =
          fun ~path:(x1362 : fs_PathLike) ->
            fun ~options:(x1363 : fs_BufferEncodingOption) ->
              Promise.t_of_js Buffer.t_0_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "realpath") "__promisify__"
                   [|(fs_PathLike_to_js x1362);(fs_BufferEncodingOption_to_js
                                                  x1363)|])
        let (__promisify__ :
          path:fs_PathLike ->
            ?options:fs_BaseEncodingOptions or_string or_null ->
              unit -> Buffer.t_0 or_string Promise.t)
          =
          fun ~path:(x1365 : fs_PathLike) ->
            fun
              ?options:(x1366 :
                         fs_BaseEncodingOptions or_string or_null option)
              ->
              fun () ->
                Promise.t_of_js
                  (fun (x1372 : Ojs.t) ->
                     or_string_of_js Buffer.t_0_of_js x1372)
                  (let x1371 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "realpath" in
                   Ojs.call (Ojs.get_prop_ascii x1371 "__promisify__")
                     "apply"
                     [|x1371;((let x1367 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1367 "push"
                                    [|(fs_PathLike_to_js x1365)|]);
                               (match x1366 with
                                | Some x1368 ->
                                    ignore
                                      (Ojs.call x1367 "push"
                                         [|(or_null_to_js
                                              (fun
                                                 (x1369 :
                                                   fs_BaseEncodingOptions
                                                     or_string)
                                                 ->
                                                 or_string_to_js
                                                   fs_BaseEncodingOptions_to_js
                                                   x1369) x1368)|])
                                | None -> ());
                               x1367))|])
        let (native :
          path:fs_PathLike ->
            options:(fs_BaseEncodingOptions, BufferEncoding.t_0) union2
              or_null_or_undefined ->
              callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                          resolvedPath:string -> unit)
                -> unit)
          =
          fun ~path:(x1374 : fs_PathLike) ->
            fun
              ~options:(x1375 :
                         (fs_BaseEncodingOptions, BufferEncoding.t_0) union2
                           or_null_or_undefined)
              ->
              fun
                ~callback:(x1379 :
                            err:NodeJS.ErrnoException.t_0 or_null ->
                              resolvedPath:string -> unit)
                ->
                ignore
                  (Ojs.call
                     (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                        "realpath") "native"
                     [|(fs_PathLike_to_js x1374);(or_null_or_undefined_to_js
                                                    (fun
                                                       (x1376 :
                                                         (fs_BaseEncodingOptions,
                                                           BufferEncoding.t_0)
                                                           union2)
                                                       ->
                                                       union2_to_js
                                                         fs_BaseEncodingOptions_to_js
                                                         BufferEncoding.t_0_to_js
                                                         x1376) x1375);(
                       Ojs.fun_to_js 2
                         (fun (x1380 : Ojs.t) ->
                            fun (x1382 : Ojs.t) ->
                              x1379
                                ~err:(or_null_of_js
                                        NodeJS.ErrnoException.t_0_of_js x1380)
                                ~resolvedPath:(Ojs.string_of_js x1382)))|])
        let (native :
          path:fs_PathLike ->
            options:fs_BufferEncodingOption ->
              callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                          resolvedPath:Buffer.t_0 -> unit)
                -> unit)
          =
          fun ~path:(x1383 : fs_PathLike) ->
            fun ~options:(x1384 : fs_BufferEncodingOption) ->
              fun
                ~callback:(x1385 :
                            err:NodeJS.ErrnoException.t_0 or_null ->
                              resolvedPath:Buffer.t_0 -> unit)
                ->
                ignore
                  (Ojs.call
                     (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                        "realpath") "native"
                     [|(fs_PathLike_to_js x1383);(fs_BufferEncodingOption_to_js
                                                    x1384);(Ojs.fun_to_js 2
                                                              (fun
                                                                 (x1386 :
                                                                   Ojs.t)
                                                                 ->
                                                                 fun
                                                                   (x1388 :
                                                                    Ojs.t)
                                                                   ->
                                                                   x1385
                                                                    ~err:(
                                                                    or_null_of_js
                                                                    NodeJS.ErrnoException.t_0_of_js
                                                                    x1386)
                                                                    ~resolvedPath:(
                                                                    Buffer.t_0_of_js
                                                                    x1388)))|])
        let (native :
          path:fs_PathLike ->
            options:fs_BaseEncodingOptions or_string or_null_or_undefined ->
              callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                          resolvedPath:Buffer.t_0 or_string -> unit)
                -> unit)
          =
          fun ~path:(x1389 : fs_PathLike) ->
            fun
              ~options:(x1390 :
                         fs_BaseEncodingOptions or_string
                           or_null_or_undefined)
              ->
              fun
                ~callback:(x1393 :
                            err:NodeJS.ErrnoException.t_0 or_null ->
                              resolvedPath:Buffer.t_0 or_string -> unit)
                ->
                ignore
                  (Ojs.call
                     (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                        "realpath") "native"
                     [|(fs_PathLike_to_js x1389);(or_null_or_undefined_to_js
                                                    (fun
                                                       (x1391 :
                                                         fs_BaseEncodingOptions
                                                           or_string)
                                                       ->
                                                       or_string_to_js
                                                         fs_BaseEncodingOptions_to_js
                                                         x1391) x1390);(
                       Ojs.fun_to_js 2
                         (fun (x1394 : Ojs.t) ->
                            fun (x1396 : Ojs.t) ->
                              x1393
                                ~err:(or_null_of_js
                                        NodeJS.ErrnoException.t_0_of_js x1394)
                                ~resolvedPath:(or_string_of_js
                                                 Buffer.t_0_of_js x1396)))|])
        let (native :
          path:fs_PathLike ->
            callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                        resolvedPath:string -> unit)
              -> unit)
          =
          fun ~path:(x1398 : fs_PathLike) ->
            fun
              ~callback:(x1399 :
                          err:NodeJS.ErrnoException.t_0 or_null ->
                            resolvedPath:string -> unit)
              ->
              ignore
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "realpath") "native"
                   [|(fs_PathLike_to_js x1398);(Ojs.fun_to_js 2
                                                  (fun (x1400 : Ojs.t) ->
                                                     fun (x1402 : Ojs.t) ->
                                                       x1399
                                                         ~err:(or_null_of_js
                                                                 NodeJS.ErrnoException.t_0_of_js
                                                                 x1400)
                                                         ~resolvedPath:(
                                                         Ojs.string_of_js
                                                           x1402)))|])
      end
    let (realpathSync :
      path:fs_PathLike ->
        ?options:(fs_BaseEncodingOptions, BufferEncoding.t_0) union2 or_null
          -> unit -> string)
      =
      fun ~path:(x1403 : fs_PathLike) ->
        fun
          ?options:(x1404 :
                     (fs_BaseEncodingOptions, BufferEncoding.t_0) union2
                       or_null option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x1410 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1410 "realpathSync") "apply"
                 [|x1410;((let x1405 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1405 "push"
                                [|(fs_PathLike_to_js x1403)|]);
                           (match x1404 with
                            | Some x1406 ->
                                ignore
                                  (Ojs.call x1405 "push"
                                     [|(or_null_to_js
                                          (fun
                                             (x1407 :
                                               (fs_BaseEncodingOptions,
                                                 BufferEncoding.t_0) union2)
                                             ->
                                             union2_to_js
                                               fs_BaseEncodingOptions_to_js
                                               BufferEncoding.t_0_to_js x1407)
                                          x1406)|])
                            | None -> ());
                           x1405))|])
    let (realpathSync :
      path:fs_PathLike -> options:fs_BufferEncodingOption -> Buffer.t_0) =
      fun ~path:(x1411 : fs_PathLike) ->
        fun ~options:(x1412 : fs_BufferEncodingOption) ->
          Buffer.t_0_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "realpathSync"
               [|(fs_PathLike_to_js x1411);(fs_BufferEncodingOption_to_js
                                              x1412)|])
    let (realpathSync :
      path:fs_PathLike ->
        ?options:fs_BaseEncodingOptions or_string or_null ->
          unit -> Buffer.t_0 or_string)
      =
      fun ~path:(x1413 : fs_PathLike) ->
        fun
          ?options:(x1414 : fs_BaseEncodingOptions or_string or_null option)
          ->
          fun () ->
            or_string_of_js Buffer.t_0_of_js
              (let x1419 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1419 "realpathSync") "apply"
                 [|x1419;((let x1415 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1415 "push"
                                [|(fs_PathLike_to_js x1413)|]);
                           (match x1414 with
                            | Some x1416 ->
                                ignore
                                  (Ojs.call x1415 "push"
                                     [|(or_null_to_js
                                          (fun
                                             (x1417 :
                                               fs_BaseEncodingOptions
                                                 or_string)
                                             ->
                                             or_string_to_js
                                               fs_BaseEncodingOptions_to_js
                                               x1417) x1416)|])
                            | None -> ());
                           x1415))|])
    module RealpathSync =
      struct
        let (native :
          path:fs_PathLike ->
            ?options:(fs_BaseEncodingOptions, BufferEncoding.t_0) union2
              or_null -> unit -> string)
          =
          fun ~path:(x1421 : fs_PathLike) ->
            fun
              ?options:(x1422 :
                         (fs_BaseEncodingOptions, BufferEncoding.t_0) union2
                           or_null option)
              ->
              fun () ->
                Ojs.string_of_js
                  (let x1428 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "realpathSync" in
                   Ojs.call (Ojs.get_prop_ascii x1428 "native") "apply"
                     [|x1428;((let x1423 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1423 "push"
                                    [|(fs_PathLike_to_js x1421)|]);
                               (match x1422 with
                                | Some x1424 ->
                                    ignore
                                      (Ojs.call x1423 "push"
                                         [|(or_null_to_js
                                              (fun
                                                 (x1425 :
                                                   (fs_BaseEncodingOptions,
                                                     BufferEncoding.t_0)
                                                     union2)
                                                 ->
                                                 union2_to_js
                                                   fs_BaseEncodingOptions_to_js
                                                   BufferEncoding.t_0_to_js
                                                   x1425) x1424)|])
                                | None -> ());
                               x1423))|])
        let (native :
          path:fs_PathLike -> options:fs_BufferEncodingOption -> Buffer.t_0)
          =
          fun ~path:(x1429 : fs_PathLike) ->
            fun ~options:(x1430 : fs_BufferEncodingOption) ->
              Buffer.t_0_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "realpathSync") "native"
                   [|(fs_PathLike_to_js x1429);(fs_BufferEncodingOption_to_js
                                                  x1430)|])
        let (native :
          path:fs_PathLike ->
            ?options:fs_BaseEncodingOptions or_string or_null ->
              unit -> Buffer.t_0 or_string)
          =
          fun ~path:(x1431 : fs_PathLike) ->
            fun
              ?options:(x1432 :
                         fs_BaseEncodingOptions or_string or_null option)
              ->
              fun () ->
                or_string_of_js Buffer.t_0_of_js
                  (let x1437 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "realpathSync" in
                   Ojs.call (Ojs.get_prop_ascii x1437 "native") "apply"
                     [|x1437;((let x1433 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1433 "push"
                                    [|(fs_PathLike_to_js x1431)|]);
                               (match x1432 with
                                | Some x1434 ->
                                    ignore
                                      (Ojs.call x1433 "push"
                                         [|(or_null_to_js
                                              (fun
                                                 (x1435 :
                                                   fs_BaseEncodingOptions
                                                     or_string)
                                                 ->
                                                 or_string_to_js
                                                   fs_BaseEncodingOptions_to_js
                                                   x1435) x1434)|])
                                | None -> ());
                               x1433))|])
      end
    let (unlink : path:fs_PathLike -> callback:fs_NoParamCallback -> unit) =
      fun ~path:(x1439 : fs_PathLike) ->
        fun ~callback:(x1440 : fs_NoParamCallback) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "unlink"
               [|(fs_PathLike_to_js x1439);(fs_NoParamCallback_to_js x1440)|])
    module Unlink =
      struct
        let (__promisify__ : path:fs_PathLike -> unit Promise.t) =
          fun ~path:(x1441 : fs_PathLike) ->
            Promise.t_of_js Ojs.unit_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                    "unlink") "__promisify__" [|(fs_PathLike_to_js x1441)|])
      end
    let (unlinkSync : path:fs_PathLike -> unit) =
      fun ~path:(x1443 : fs_PathLike) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "unlinkSync"
             [|(fs_PathLike_to_js x1443)|])
    module RmDirOptions =
      struct
        type t = fs_RmDirOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1445 : Ojs.t) -> fs_RmDirOptions_of_js x1445
        and t_to_js : t -> Ojs.t =
          fun (x1444 : fs_RmDirOptions) -> fs_RmDirOptions_to_js x1444
        let (get_maxRetries : t -> float) =
          fun (x1446 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1446) "maxRetries")
        let (set_maxRetries : t -> float -> unit) =
          fun (x1447 : t) ->
            fun (x1448 : float) ->
              Ojs.set_prop_ascii (t_to_js x1447) "maxRetries"
                (Ojs.float_to_js x1448)
        let (get_recursive : t -> bool) =
          fun (x1449 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1449) "recursive")
        let (set_recursive : t -> bool -> unit) =
          fun (x1450 : t) ->
            fun (x1451 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1450) "recursive"
                (Ojs.bool_to_js x1451)
        let (get_retryDelay : t -> float) =
          fun (x1452 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1452) "retryDelay")
        let (set_retryDelay : t -> float -> unit) =
          fun (x1453 : t) ->
            fun (x1454 : float) ->
              Ojs.set_prop_ascii (t_to_js x1453) "retryDelay"
                (Ojs.float_to_js x1454)
      end
    let (rmdir : path:fs_PathLike -> callback:fs_NoParamCallback -> unit) =
      fun ~path:(x1455 : fs_PathLike) ->
        fun ~callback:(x1456 : fs_NoParamCallback) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "rmdir"
               [|(fs_PathLike_to_js x1455);(fs_NoParamCallback_to_js x1456)|])
    let (rmdir :
      path:fs_PathLike ->
        options:fs_RmDirOptions -> callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x1457 : fs_PathLike) ->
        fun ~options:(x1458 : fs_RmDirOptions) ->
          fun ~callback:(x1459 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "rmdir"
                 [|(fs_PathLike_to_js x1457);(fs_RmDirOptions_to_js x1458);(
                   fs_NoParamCallback_to_js x1459)|])
    module Rmdir =
      struct
        let (__promisify__ :
          path:fs_PathLike ->
            ?options:fs_RmDirOptions -> unit -> unit Promise.t)
          =
          fun ~path:(x1460 : fs_PathLike) ->
            fun ?options:(x1461 : fs_RmDirOptions option) ->
              fun () ->
                Promise.t_of_js Ojs.unit_of_js
                  (let x1464 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "rmdir" in
                   Ojs.call (Ojs.get_prop_ascii x1464 "__promisify__")
                     "apply"
                     [|x1464;((let x1462 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1462 "push"
                                    [|(fs_PathLike_to_js x1460)|]);
                               (match x1461 with
                                | Some x1463 ->
                                    ignore
                                      (Ojs.call x1462 "push"
                                         [|(fs_RmDirOptions_to_js x1463)|])
                                | None -> ());
                               x1462))|])
      end
    let (rmdirSync :
      path:fs_PathLike -> ?options:fs_RmDirOptions -> unit -> unit) =
      fun ~path:(x1466 : fs_PathLike) ->
        fun ?options:(x1467 : fs_RmDirOptions option) ->
          fun () ->
            ignore
              (let x1470 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1470 "rmdirSync") "apply"
                 [|x1470;((let x1468 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1468 "push"
                                [|(fs_PathLike_to_js x1466)|]);
                           (match x1467 with
                            | Some x1469 ->
                                ignore
                                  (Ojs.call x1468 "push"
                                     [|(fs_RmDirOptions_to_js x1469)|])
                            | None -> ());
                           x1468))|])
    module RmOptions =
      struct
        type t = fs_RmOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1472 : Ojs.t) -> fs_RmOptions_of_js x1472
        and t_to_js : t -> Ojs.t =
          fun (x1471 : fs_RmOptions) -> fs_RmOptions_to_js x1471
        let (get_force : t -> bool) =
          fun (x1473 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1473) "force")
        let (set_force : t -> bool -> unit) =
          fun (x1474 : t) ->
            fun (x1475 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1474) "force"
                (Ojs.bool_to_js x1475)
        let (get_maxRetries : t -> float) =
          fun (x1476 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1476) "maxRetries")
        let (set_maxRetries : t -> float -> unit) =
          fun (x1477 : t) ->
            fun (x1478 : float) ->
              Ojs.set_prop_ascii (t_to_js x1477) "maxRetries"
                (Ojs.float_to_js x1478)
        let (get_recursive : t -> bool) =
          fun (x1479 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1479) "recursive")
        let (set_recursive : t -> bool -> unit) =
          fun (x1480 : t) ->
            fun (x1481 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1480) "recursive"
                (Ojs.bool_to_js x1481)
        let (get_retryDelay : t -> float) =
          fun (x1482 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1482) "retryDelay")
        let (set_retryDelay : t -> float -> unit) =
          fun (x1483 : t) ->
            fun (x1484 : float) ->
              Ojs.set_prop_ascii (t_to_js x1483) "retryDelay"
                (Ojs.float_to_js x1484)
      end
    let (rm : path:fs_PathLike -> callback:fs_NoParamCallback -> unit) =
      fun ~path:(x1485 : fs_PathLike) ->
        fun ~callback:(x1486 : fs_NoParamCallback) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "rm"
               [|(fs_PathLike_to_js x1485);(fs_NoParamCallback_to_js x1486)|])
    let (rm :
      path:fs_PathLike ->
        options:fs_RmOptions -> callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x1487 : fs_PathLike) ->
        fun ~options:(x1488 : fs_RmOptions) ->
          fun ~callback:(x1489 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "rm"
                 [|(fs_PathLike_to_js x1487);(fs_RmOptions_to_js x1488);(
                   fs_NoParamCallback_to_js x1489)|])
    module Rm =
      struct
        let (__promisify__ :
          path:fs_PathLike -> ?options:fs_RmOptions -> unit -> unit Promise.t)
          =
          fun ~path:(x1490 : fs_PathLike) ->
            fun ?options:(x1491 : fs_RmOptions option) ->
              fun () ->
                Promise.t_of_js Ojs.unit_of_js
                  (let x1494 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "rm" in
                   Ojs.call (Ojs.get_prop_ascii x1494 "__promisify__")
                     "apply"
                     [|x1494;((let x1492 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1492 "push"
                                    [|(fs_PathLike_to_js x1490)|]);
                               (match x1491 with
                                | Some x1493 ->
                                    ignore
                                      (Ojs.call x1492 "push"
                                         [|(fs_RmOptions_to_js x1493)|])
                                | None -> ());
                               x1492))|])
      end
    let (rmSync : path:fs_PathLike -> ?options:fs_RmOptions -> unit -> unit)
      =
      fun ~path:(x1496 : fs_PathLike) ->
        fun ?options:(x1497 : fs_RmOptions option) ->
          fun () ->
            ignore
              (let x1500 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1500 "rmSync") "apply"
                 [|x1500;((let x1498 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1498 "push"
                                [|(fs_PathLike_to_js x1496)|]);
                           (match x1497 with
                            | Some x1499 ->
                                ignore
                                  (Ojs.call x1498 "push"
                                     [|(fs_RmOptions_to_js x1499)|])
                            | None -> ());
                           x1498))|])
    module MakeDirectoryOptions =
      struct
        type t = fs_MakeDirectoryOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1502 : Ojs.t) -> fs_MakeDirectoryOptions_of_js x1502
        and t_to_js : t -> Ojs.t =
          fun (x1501 : fs_MakeDirectoryOptions) ->
            fs_MakeDirectoryOptions_to_js x1501
        let (get_recursive : t -> bool) =
          fun (x1503 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1503) "recursive")
        let (set_recursive : t -> bool -> unit) =
          fun (x1504 : t) ->
            fun (x1505 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1504) "recursive"
                (Ojs.bool_to_js x1505)
        let (get_mode : t -> fs_Mode) =
          fun (x1506 : t) ->
            fs_Mode_of_js (Ojs.get_prop_ascii (t_to_js x1506) "mode")
        let (set_mode : t -> fs_Mode -> unit) =
          fun (x1507 : t) ->
            fun (x1508 : fs_Mode) ->
              Ojs.set_prop_ascii (t_to_js x1507) "mode" (fs_Mode_to_js x1508)
      end
    let (mkdir :
      path:fs_PathLike ->
        options:(fs_MakeDirectoryOptions, anonymous_interface_18)
          intersection2 ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      ?path:string -> unit -> unit)
            -> unit)
      =
      fun ~path:(x1509 : fs_PathLike) ->
        fun
          ~options:(x1510 :
                     (fs_MakeDirectoryOptions, anonymous_interface_18)
                       intersection2)
          ->
          fun
            ~callback:(x1513 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          ?path:string -> unit -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "mkdir"
                 [|(fs_PathLike_to_js x1509);(intersection2_to_js
                                                fs_MakeDirectoryOptions_to_js
                                                anonymous_interface_18_to_js
                                                x1510);(Ojs.fun_to_js 2
                                                          (fun
                                                             (x1514 : Ojs.t)
                                                             ->
                                                             fun
                                                               (x1516 :
                                                                 Ojs.t)
                                                               ->
                                                               x1513
                                                                 ~err:(
                                                                 or_null_of_js
                                                                   NodeJS.ErrnoException.t_0_of_js
                                                                   x1514)
                                                                 ?path:(
                                                                 Ojs.option_of_js
                                                                   Ojs.string_of_js
                                                                   x1516) ()))|])
    let (mkdir :
      path:fs_PathLike ->
        options:fs_Mode or_null_or_undefined ->
          callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x1518 : fs_PathLike) ->
        fun ~options:(x1519 : fs_Mode or_null_or_undefined) ->
          fun ~callback:(x1521 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "mkdir"
                 [|(fs_PathLike_to_js x1518);(or_null_or_undefined_to_js
                                                fs_Mode_to_js x1519);(
                   fs_NoParamCallback_to_js x1521)|])
    let (mkdir :
      path:fs_PathLike ->
        options:(fs_MakeDirectoryOptions, fs_Mode) union2
          or_null_or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      ?path:string -> unit -> unit)
            -> unit)
      =
      fun ~path:(x1522 : fs_PathLike) ->
        fun
          ~options:(x1523 :
                     (fs_MakeDirectoryOptions, fs_Mode) union2
                       or_null_or_undefined)
          ->
          fun
            ~callback:(x1527 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          ?path:string -> unit -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "mkdir"
                 [|(fs_PathLike_to_js x1522);(or_null_or_undefined_to_js
                                                (fun
                                                   (x1524 :
                                                     (fs_MakeDirectoryOptions,
                                                       fs_Mode) union2)
                                                   ->
                                                   union2_to_js
                                                     fs_MakeDirectoryOptions_to_js
                                                     fs_Mode_to_js x1524)
                                                x1523);(Ojs.fun_to_js 2
                                                          (fun
                                                             (x1528 : Ojs.t)
                                                             ->
                                                             fun
                                                               (x1530 :
                                                                 Ojs.t)
                                                               ->
                                                               x1527
                                                                 ~err:(
                                                                 or_null_of_js
                                                                   NodeJS.ErrnoException.t_0_of_js
                                                                   x1528)
                                                                 ?path:(
                                                                 Ojs.option_of_js
                                                                   Ojs.string_of_js
                                                                   x1530) ()))|])
    let (mkdir : path:fs_PathLike -> callback:fs_NoParamCallback -> unit) =
      fun ~path:(x1532 : fs_PathLike) ->
        fun ~callback:(x1533 : fs_NoParamCallback) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "mkdir"
               [|(fs_PathLike_to_js x1532);(fs_NoParamCallback_to_js x1533)|])
    module Mkdir =
      struct
        let (__promisify__ :
          path:fs_PathLike ->
            options:(fs_MakeDirectoryOptions, anonymous_interface_18)
              intersection2 -> string or_undefined Promise.t)
          =
          fun ~path:(x1534 : fs_PathLike) ->
            fun
              ~options:(x1535 :
                         (fs_MakeDirectoryOptions, anonymous_interface_18)
                           intersection2)
              ->
              Promise.t_of_js
                (fun (x1538 : Ojs.t) ->
                   or_undefined_of_js Ojs.string_of_js x1538)
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "mkdir") "__promisify__"
                   [|(fs_PathLike_to_js x1534);(intersection2_to_js
                                                  fs_MakeDirectoryOptions_to_js
                                                  anonymous_interface_18_to_js
                                                  x1535)|])
        let (__promisify__ :
          path:fs_PathLike ->
            ?options:fs_Mode or_null -> unit -> unit Promise.t)
          =
          fun ~path:(x1540 : fs_PathLike) ->
            fun ?options:(x1541 : fs_Mode or_null option) ->
              fun () ->
                Promise.t_of_js Ojs.unit_of_js
                  (let x1545 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "mkdir" in
                   Ojs.call (Ojs.get_prop_ascii x1545 "__promisify__")
                     "apply"
                     [|x1545;((let x1542 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1542 "push"
                                    [|(fs_PathLike_to_js x1540)|]);
                               (match x1541 with
                                | Some x1543 ->
                                    ignore
                                      (Ojs.call x1542 "push"
                                         [|(or_null_to_js fs_Mode_to_js x1543)|])
                                | None -> ());
                               x1542))|])
        let (__promisify__ :
          path:fs_PathLike ->
            ?options:(fs_MakeDirectoryOptions, fs_Mode) union2 or_null ->
              unit -> string or_undefined Promise.t)
          =
          fun ~path:(x1547 : fs_PathLike) ->
            fun
              ?options:(x1548 :
                         (fs_MakeDirectoryOptions, fs_Mode) union2 or_null
                           option)
              ->
              fun () ->
                Promise.t_of_js
                  (fun (x1555 : Ojs.t) ->
                     or_undefined_of_js Ojs.string_of_js x1555)
                  (let x1554 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "mkdir" in
                   Ojs.call (Ojs.get_prop_ascii x1554 "__promisify__")
                     "apply"
                     [|x1554;((let x1549 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1549 "push"
                                    [|(fs_PathLike_to_js x1547)|]);
                               (match x1548 with
                                | Some x1550 ->
                                    ignore
                                      (Ojs.call x1549 "push"
                                         [|(or_null_to_js
                                              (fun
                                                 (x1551 :
                                                   (fs_MakeDirectoryOptions,
                                                     fs_Mode) union2)
                                                 ->
                                                 union2_to_js
                                                   fs_MakeDirectoryOptions_to_js
                                                   fs_Mode_to_js x1551) x1550)|])
                                | None -> ());
                               x1549))|])
      end
    let (mkdirSync :
      path:fs_PathLike ->
        options:(fs_MakeDirectoryOptions, anonymous_interface_18)
          intersection2 -> string or_undefined)
      =
      fun ~path:(x1557 : fs_PathLike) ->
        fun
          ~options:(x1558 :
                     (fs_MakeDirectoryOptions, anonymous_interface_18)
                       intersection2)
          ->
          or_undefined_of_js Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "mkdirSync"
               [|(fs_PathLike_to_js x1557);(intersection2_to_js
                                              fs_MakeDirectoryOptions_to_js
                                              anonymous_interface_18_to_js
                                              x1558)|])
    let (mkdirSync :
      path:fs_PathLike -> ?options:fs_Mode or_null -> unit -> unit) =
      fun ~path:(x1562 : fs_PathLike) ->
        fun ?options:(x1563 : fs_Mode or_null option) ->
          fun () ->
            ignore
              (let x1567 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1567 "mkdirSync") "apply"
                 [|x1567;((let x1564 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1564 "push"
                                [|(fs_PathLike_to_js x1562)|]);
                           (match x1563 with
                            | Some x1565 ->
                                ignore
                                  (Ojs.call x1564 "push"
                                     [|(or_null_to_js fs_Mode_to_js x1565)|])
                            | None -> ());
                           x1564))|])
    let (mkdirSync :
      path:fs_PathLike ->
        ?options:(fs_MakeDirectoryOptions, fs_Mode) union2 or_null ->
          unit -> string or_undefined)
      =
      fun ~path:(x1568 : fs_PathLike) ->
        fun
          ?options:(x1569 :
                     (fs_MakeDirectoryOptions, fs_Mode) union2 or_null option)
          ->
          fun () ->
            or_undefined_of_js Ojs.string_of_js
              (let x1575 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1575 "mkdirSync") "apply"
                 [|x1575;((let x1570 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1570 "push"
                                [|(fs_PathLike_to_js x1568)|]);
                           (match x1569 with
                            | Some x1571 ->
                                ignore
                                  (Ojs.call x1570 "push"
                                     [|(or_null_to_js
                                          (fun
                                             (x1572 :
                                               (fs_MakeDirectoryOptions,
                                                 fs_Mode) union2)
                                             ->
                                             union2_to_js
                                               fs_MakeDirectoryOptions_to_js
                                               fs_Mode_to_js x1572) x1571)|])
                            | None -> ());
                           x1570))|])
    let (mkdtemp :
      prefix:string ->
        options:(fs_BaseEncodingOptions, BufferEncoding.t_0) union2
          or_null_or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      folder:string -> unit)
            -> unit)
      =
      fun ~prefix:(x1577 : string) ->
        fun
          ~options:(x1578 :
                     (fs_BaseEncodingOptions, BufferEncoding.t_0) union2
                       or_null_or_undefined)
          ->
          fun
            ~callback:(x1582 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          folder:string -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "mkdtemp"
                 [|(Ojs.string_to_js x1577);(or_null_or_undefined_to_js
                                               (fun
                                                  (x1579 :
                                                    (fs_BaseEncodingOptions,
                                                      BufferEncoding.t_0)
                                                      union2)
                                                  ->
                                                  union2_to_js
                                                    fs_BaseEncodingOptions_to_js
                                                    BufferEncoding.t_0_to_js
                                                    x1579) x1578);(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x1583 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x1585 :
                                                                    Ojs.t) ->
                                                                    x1582
                                                                    ~err:(
                                                                    or_null_of_js
                                                                    NodeJS.ErrnoException.t_0_of_js
                                                                    x1583)
                                                                    ~folder:(
                                                                    Ojs.string_of_js
                                                                    x1585)))|])
    let (mkdtemp :
      prefix:string ->
        options:(anonymous_interface_7, [ `buffer ]) or_enum ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      folder:Buffer.t_0 -> unit)
            -> unit)
      =
      fun ~prefix:(x1586 : string) ->
        fun ~options:(x1587 : (anonymous_interface_7, [ `buffer ]) or_enum)
          ->
          fun
            ~callback:(x1590 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          folder:Buffer.t_0 -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "mkdtemp"
                 [|(Ojs.string_to_js x1586);(or_enum_to_js
                                               anonymous_interface_7_to_js
                                               (fun (x1589 : [ `buffer ]) ->
                                                  match x1589 with
                                                  | `buffer ->
                                                      Ojs.string_to_js
                                                        "buffer") x1587);(
                   Ojs.fun_to_js 2
                     (fun (x1591 : Ojs.t) ->
                        fun (x1593 : Ojs.t) ->
                          x1590
                            ~err:(or_null_of_js
                                    NodeJS.ErrnoException.t_0_of_js x1591)
                            ~folder:(Buffer.t_0_of_js x1593)))|])
    let (mkdtemp :
      prefix:string ->
        options:fs_BaseEncodingOptions or_string or_null_or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      folder:Buffer.t_0 or_string -> unit)
            -> unit)
      =
      fun ~prefix:(x1594 : string) ->
        fun
          ~options:(x1595 :
                     fs_BaseEncodingOptions or_string or_null_or_undefined)
          ->
          fun
            ~callback:(x1598 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          folder:Buffer.t_0 or_string -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "mkdtemp"
                 [|(Ojs.string_to_js x1594);(or_null_or_undefined_to_js
                                               (fun
                                                  (x1596 :
                                                    fs_BaseEncodingOptions
                                                      or_string)
                                                  ->
                                                  or_string_to_js
                                                    fs_BaseEncodingOptions_to_js
                                                    x1596) x1595);(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x1599 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x1601 :
                                                                    Ojs.t) ->
                                                                    x1598
                                                                    ~err:(
                                                                    or_null_of_js
                                                                    NodeJS.ErrnoException.t_0_of_js
                                                                    x1599)
                                                                    ~folder:(
                                                                    or_string_of_js
                                                                    Buffer.t_0_of_js
                                                                    x1601)))|])
    let (mkdtemp :
      prefix:string ->
        callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                    folder:string -> unit)
          -> unit)
      =
      fun ~prefix:(x1603 : string) ->
        fun
          ~callback:(x1604 :
                      err:NodeJS.ErrnoException.t_0 or_null ->
                        folder:string -> unit)
          ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "mkdtemp"
               [|(Ojs.string_to_js x1603);(Ojs.fun_to_js 2
                                             (fun (x1605 : Ojs.t) ->
                                                fun (x1607 : Ojs.t) ->
                                                  x1604
                                                    ~err:(or_null_of_js
                                                            NodeJS.ErrnoException.t_0_of_js
                                                            x1605)
                                                    ~folder:(Ojs.string_of_js
                                                               x1607)))|])
    module Mkdtemp =
      struct
        let (__promisify__ :
          prefix:string ->
            ?options:(fs_BaseEncodingOptions, BufferEncoding.t_0) union2
              or_null -> unit -> string Promise.t)
          =
          fun ~prefix:(x1608 : string) ->
            fun
              ?options:(x1609 :
                         (fs_BaseEncodingOptions, BufferEncoding.t_0) union2
                           or_null option)
              ->
              fun () ->
                Promise.t_of_js Ojs.string_of_js
                  (let x1615 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "mkdtemp" in
                   Ojs.call (Ojs.get_prop_ascii x1615 "__promisify__")
                     "apply"
                     [|x1615;((let x1610 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1610 "push"
                                    [|(Ojs.string_to_js x1608)|]);
                               (match x1609 with
                                | Some x1611 ->
                                    ignore
                                      (Ojs.call x1610 "push"
                                         [|(or_null_to_js
                                              (fun
                                                 (x1612 :
                                                   (fs_BaseEncodingOptions,
                                                     BufferEncoding.t_0)
                                                     union2)
                                                 ->
                                                 union2_to_js
                                                   fs_BaseEncodingOptions_to_js
                                                   BufferEncoding.t_0_to_js
                                                   x1612) x1611)|])
                                | None -> ());
                               x1610))|])
        let (__promisify__ :
          prefix:string ->
            options:fs_BufferEncodingOption -> Buffer.t_0 Promise.t)
          =
          fun ~prefix:(x1617 : string) ->
            fun ~options:(x1618 : fs_BufferEncodingOption) ->
              Promise.t_of_js Buffer.t_0_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "mkdtemp") "__promisify__"
                   [|(Ojs.string_to_js x1617);(fs_BufferEncodingOption_to_js
                                                 x1618)|])
        let (__promisify__ :
          prefix:string ->
            ?options:fs_BaseEncodingOptions or_string or_null ->
              unit -> Buffer.t_0 or_string Promise.t)
          =
          fun ~prefix:(x1620 : string) ->
            fun
              ?options:(x1621 :
                         fs_BaseEncodingOptions or_string or_null option)
              ->
              fun () ->
                Promise.t_of_js
                  (fun (x1627 : Ojs.t) ->
                     or_string_of_js Buffer.t_0_of_js x1627)
                  (let x1626 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "mkdtemp" in
                   Ojs.call (Ojs.get_prop_ascii x1626 "__promisify__")
                     "apply"
                     [|x1626;((let x1622 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1622 "push"
                                    [|(Ojs.string_to_js x1620)|]);
                               (match x1621 with
                                | Some x1623 ->
                                    ignore
                                      (Ojs.call x1622 "push"
                                         [|(or_null_to_js
                                              (fun
                                                 (x1624 :
                                                   fs_BaseEncodingOptions
                                                     or_string)
                                                 ->
                                                 or_string_to_js
                                                   fs_BaseEncodingOptions_to_js
                                                   x1624) x1623)|])
                                | None -> ());
                               x1622))|])
      end
    let (mkdtempSync :
      prefix:string ->
        ?options:(fs_BaseEncodingOptions, BufferEncoding.t_0) union2 or_null
          -> unit -> string)
      =
      fun ~prefix:(x1629 : string) ->
        fun
          ?options:(x1630 :
                     (fs_BaseEncodingOptions, BufferEncoding.t_0) union2
                       or_null option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x1636 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1636 "mkdtempSync") "apply"
                 [|x1636;((let x1631 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1631 "push"
                                [|(Ojs.string_to_js x1629)|]);
                           (match x1630 with
                            | Some x1632 ->
                                ignore
                                  (Ojs.call x1631 "push"
                                     [|(or_null_to_js
                                          (fun
                                             (x1633 :
                                               (fs_BaseEncodingOptions,
                                                 BufferEncoding.t_0) union2)
                                             ->
                                             union2_to_js
                                               fs_BaseEncodingOptions_to_js
                                               BufferEncoding.t_0_to_js x1633)
                                          x1632)|])
                            | None -> ());
                           x1631))|])
    let (mkdtempSync :
      prefix:string -> options:fs_BufferEncodingOption -> Buffer.t_0) =
      fun ~prefix:(x1637 : string) ->
        fun ~options:(x1638 : fs_BufferEncodingOption) ->
          Buffer.t_0_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "mkdtempSync"
               [|(Ojs.string_to_js x1637);(fs_BufferEncodingOption_to_js
                                             x1638)|])
    let (mkdtempSync :
      prefix:string ->
        ?options:fs_BaseEncodingOptions or_string or_null ->
          unit -> Buffer.t_0 or_string)
      =
      fun ~prefix:(x1639 : string) ->
        fun
          ?options:(x1640 : fs_BaseEncodingOptions or_string or_null option)
          ->
          fun () ->
            or_string_of_js Buffer.t_0_of_js
              (let x1645 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1645 "mkdtempSync") "apply"
                 [|x1645;((let x1641 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1641 "push"
                                [|(Ojs.string_to_js x1639)|]);
                           (match x1640 with
                            | Some x1642 ->
                                ignore
                                  (Ojs.call x1641 "push"
                                     [|(or_null_to_js
                                          (fun
                                             (x1643 :
                                               fs_BaseEncodingOptions
                                                 or_string)
                                             ->
                                             or_string_to_js
                                               fs_BaseEncodingOptions_to_js
                                               x1643) x1642)|])
                            | None -> ());
                           x1641))|])
    let (readdir :
      path:fs_PathLike ->
        options:(BufferEncoding.t_0, anonymous_interface_11) union2
          or_null_or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      files:string list -> unit)
            -> unit)
      =
      fun ~path:(x1647 : fs_PathLike) ->
        fun
          ~options:(x1648 :
                     (BufferEncoding.t_0, anonymous_interface_11) union2
                       or_null_or_undefined)
          ->
          fun
            ~callback:(x1652 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          files:string list -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readdir"
                 [|(fs_PathLike_to_js x1647);(or_null_or_undefined_to_js
                                                (fun
                                                   (x1649 :
                                                     (BufferEncoding.t_0,
                                                       anonymous_interface_11)
                                                       union2)
                                                   ->
                                                   union2_to_js
                                                     BufferEncoding.t_0_to_js
                                                     anonymous_interface_11_to_js
                                                     x1649) x1648);(Ojs.fun_to_js
                                                                    2
                                                                    (fun
                                                                    (x1653 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x1655 :
                                                                    Ojs.t) ->
                                                                    x1652
                                                                    ~err:(
                                                                    or_null_of_js
                                                                    NodeJS.ErrnoException.t_0_of_js
                                                                    x1653)
                                                                    ~files:(
                                                                    Ojs.list_of_js
                                                                    Ojs.string_of_js
                                                                    x1655)))|])
    let (readdir :
      path:fs_PathLike ->
        options:(anonymous_interface_9, [ `buffer ]) or_enum ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      files:Buffer.t_0 list -> unit)
            -> unit)
      =
      fun ~path:(x1657 : fs_PathLike) ->
        fun ~options:(x1658 : (anonymous_interface_9, [ `buffer ]) or_enum)
          ->
          fun
            ~callback:(x1661 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          files:Buffer.t_0 list -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readdir"
                 [|(fs_PathLike_to_js x1657);(or_enum_to_js
                                                anonymous_interface_9_to_js
                                                (fun (x1660 : [ `buffer ]) ->
                                                   match x1660 with
                                                   | `buffer ->
                                                       Ojs.string_to_js
                                                         "buffer") x1658);(
                   Ojs.fun_to_js 2
                     (fun (x1662 : Ojs.t) ->
                        fun (x1664 : Ojs.t) ->
                          x1661
                            ~err:(or_null_of_js
                                    NodeJS.ErrnoException.t_0_of_js x1662)
                            ~files:(Ojs.list_of_js Buffer.t_0_of_js x1664)))|])
    let (readdir :
      path:fs_PathLike ->
        options:BufferEncoding.t_0 or_null_or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      files:Buffer.t_0 or_string list -> unit)
            -> unit)
      =
      fun ~path:(x1666 : fs_PathLike) ->
        fun ~options:(x1667 : BufferEncoding.t_0 or_null_or_undefined) ->
          fun
            ~callback:(x1669 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          files:Buffer.t_0 or_string list -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readdir"
                 [|(fs_PathLike_to_js x1666);(or_null_or_undefined_to_js
                                                BufferEncoding.t_0_to_js
                                                x1667);(Ojs.fun_to_js 2
                                                          (fun
                                                             (x1670 : Ojs.t)
                                                             ->
                                                             fun
                                                               (x1672 :
                                                                 Ojs.t)
                                                               ->
                                                               x1669
                                                                 ~err:(
                                                                 or_null_of_js
                                                                   NodeJS.ErrnoException.t_0_of_js
                                                                   x1670)
                                                                 ~files:(
                                                                 Ojs.list_of_js
                                                                   (fun
                                                                    (x1673 :
                                                                    Ojs.t) ->
                                                                    or_string_of_js
                                                                    Buffer.t_0_of_js
                                                                    x1673)
                                                                   x1672)))|])
    let (readdir :
      path:fs_PathLike ->
        callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                    files:string list -> unit)
          -> unit)
      =
      fun ~path:(x1675 : fs_PathLike) ->
        fun
          ~callback:(x1676 :
                      err:NodeJS.ErrnoException.t_0 or_null ->
                        files:string list -> unit)
          ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readdir"
               [|(fs_PathLike_to_js x1675);(Ojs.fun_to_js 2
                                              (fun (x1677 : Ojs.t) ->
                                                 fun (x1679 : Ojs.t) ->
                                                   x1676
                                                     ~err:(or_null_of_js
                                                             NodeJS.ErrnoException.t_0_of_js
                                                             x1677)
                                                     ~files:(Ojs.list_of_js
                                                               Ojs.string_of_js
                                                               x1679)))|])
    let (readdir :
      path:fs_PathLike ->
        options:(fs_BaseEncodingOptions, anonymous_interface_20)
          intersection2 ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      files:fs_Dirent list -> unit)
            -> unit)
      =
      fun ~path:(x1681 : fs_PathLike) ->
        fun
          ~options:(x1682 :
                     (fs_BaseEncodingOptions, anonymous_interface_20)
                       intersection2)
          ->
          fun
            ~callback:(x1685 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          files:fs_Dirent list -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readdir"
                 [|(fs_PathLike_to_js x1681);(intersection2_to_js
                                                fs_BaseEncodingOptions_to_js
                                                anonymous_interface_20_to_js
                                                x1682);(Ojs.fun_to_js 2
                                                          (fun
                                                             (x1686 : Ojs.t)
                                                             ->
                                                             fun
                                                               (x1688 :
                                                                 Ojs.t)
                                                               ->
                                                               x1685
                                                                 ~err:(
                                                                 or_null_of_js
                                                                   NodeJS.ErrnoException.t_0_of_js
                                                                   x1686)
                                                                 ~files:(
                                                                 Ojs.list_of_js
                                                                   fs_Dirent_of_js
                                                                   x1688)))|])
    module Readdir =
      struct
        let (__promisify__ :
          path:fs_PathLike ->
            ?options:(BufferEncoding.t_0, anonymous_interface_11) union2
              or_null -> unit -> string list Promise.t)
          =
          fun ~path:(x1690 : fs_PathLike) ->
            fun
              ?options:(x1691 :
                         (BufferEncoding.t_0, anonymous_interface_11) union2
                           or_null option)
              ->
              fun () ->
                Promise.t_of_js
                  (fun (x1698 : Ojs.t) ->
                     Ojs.list_of_js Ojs.string_of_js x1698)
                  (let x1697 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "readdir" in
                   Ojs.call (Ojs.get_prop_ascii x1697 "__promisify__")
                     "apply"
                     [|x1697;((let x1692 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1692 "push"
                                    [|(fs_PathLike_to_js x1690)|]);
                               (match x1691 with
                                | Some x1693 ->
                                    ignore
                                      (Ojs.call x1692 "push"
                                         [|(or_null_to_js
                                              (fun
                                                 (x1694 :
                                                   (BufferEncoding.t_0,
                                                     anonymous_interface_11)
                                                     union2)
                                                 ->
                                                 union2_to_js
                                                   BufferEncoding.t_0_to_js
                                                   anonymous_interface_11_to_js
                                                   x1694) x1693)|])
                                | None -> ());
                               x1692))|])
        let (__promisify__ :
          path:fs_PathLike ->
            options:(anonymous_interface_9, [ `buffer ]) or_enum ->
              Buffer.t_0 list Promise.t)
          =
          fun ~path:(x1700 : fs_PathLike) ->
            fun
              ~options:(x1701 : (anonymous_interface_9, [ `buffer ]) or_enum)
              ->
              Promise.t_of_js
                (fun (x1704 : Ojs.t) -> Ojs.list_of_js Buffer.t_0_of_js x1704)
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "readdir") "__promisify__"
                   [|(fs_PathLike_to_js x1700);(or_enum_to_js
                                                  anonymous_interface_9_to_js
                                                  (fun (x1703 : [ `buffer ])
                                                     ->
                                                     match x1703 with
                                                     | `buffer ->
                                                         Ojs.string_to_js
                                                           "buffer") x1701)|])
        let (__promisify__ :
          path:fs_PathLike ->
            ?options:BufferEncoding.t_0 or_null ->
              unit -> Buffer.t_0 or_string list Promise.t)
          =
          fun ~path:(x1706 : fs_PathLike) ->
            fun ?options:(x1707 : BufferEncoding.t_0 or_null option) ->
              fun () ->
                Promise.t_of_js
                  (fun (x1712 : Ojs.t) ->
                     Ojs.list_of_js
                       (fun (x1713 : Ojs.t) ->
                          or_string_of_js Buffer.t_0_of_js x1713) x1712)
                  (let x1711 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "readdir" in
                   Ojs.call (Ojs.get_prop_ascii x1711 "__promisify__")
                     "apply"
                     [|x1711;((let x1708 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1708 "push"
                                    [|(fs_PathLike_to_js x1706)|]);
                               (match x1707 with
                                | Some x1709 ->
                                    ignore
                                      (Ojs.call x1708 "push"
                                         [|(or_null_to_js
                                              BufferEncoding.t_0_to_js x1709)|])
                                | None -> ());
                               x1708))|])
        let (__promisify__ :
          path:fs_PathLike ->
            options:(fs_BaseEncodingOptions, anonymous_interface_20)
              intersection2 -> fs_Dirent list Promise.t)
          =
          fun ~path:(x1715 : fs_PathLike) ->
            fun
              ~options:(x1716 :
                         (fs_BaseEncodingOptions, anonymous_interface_20)
                           intersection2)
              ->
              Promise.t_of_js
                (fun (x1719 : Ojs.t) -> Ojs.list_of_js fs_Dirent_of_js x1719)
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "readdir") "__promisify__"
                   [|(fs_PathLike_to_js x1715);(intersection2_to_js
                                                  fs_BaseEncodingOptions_to_js
                                                  anonymous_interface_20_to_js
                                                  x1716)|])
      end
    let (readdirSync :
      path:fs_PathLike ->
        ?options:(BufferEncoding.t_0, anonymous_interface_11) union2 or_null
          -> unit -> string list)
      =
      fun ~path:(x1721 : fs_PathLike) ->
        fun
          ?options:(x1722 :
                     (BufferEncoding.t_0, anonymous_interface_11) union2
                       or_null option)
          ->
          fun () ->
            Ojs.list_of_js Ojs.string_of_js
              (let x1728 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1728 "readdirSync") "apply"
                 [|x1728;((let x1723 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1723 "push"
                                [|(fs_PathLike_to_js x1721)|]);
                           (match x1722 with
                            | Some x1724 ->
                                ignore
                                  (Ojs.call x1723 "push"
                                     [|(or_null_to_js
                                          (fun
                                             (x1725 :
                                               (BufferEncoding.t_0,
                                                 anonymous_interface_11)
                                                 union2)
                                             ->
                                             union2_to_js
                                               BufferEncoding.t_0_to_js
                                               anonymous_interface_11_to_js
                                               x1725) x1724)|])
                            | None -> ());
                           x1723))|])
    let (readdirSync :
      path:fs_PathLike ->
        options:(anonymous_interface_9, [ `buffer ]) or_enum ->
          Buffer.t_0 list)
      =
      fun ~path:(x1730 : fs_PathLike) ->
        fun ~options:(x1731 : (anonymous_interface_9, [ `buffer ]) or_enum)
          ->
          Ojs.list_of_js Buffer.t_0_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readdirSync"
               [|(fs_PathLike_to_js x1730);(or_enum_to_js
                                              anonymous_interface_9_to_js
                                              (fun (x1733 : [ `buffer ]) ->
                                                 match x1733 with
                                                 | `buffer ->
                                                     Ojs.string_to_js
                                                       "buffer") x1731)|])
    let (readdirSync :
      path:fs_PathLike ->
        ?options:BufferEncoding.t_0 or_null ->
          unit -> Buffer.t_0 or_string list)
      =
      fun ~path:(x1735 : fs_PathLike) ->
        fun ?options:(x1736 : BufferEncoding.t_0 or_null option) ->
          fun () ->
            Ojs.list_of_js
              (fun (x1741 : Ojs.t) -> or_string_of_js Buffer.t_0_of_js x1741)
              (let x1740 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x1740 "readdirSync") "apply"
                 [|x1740;((let x1737 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1737 "push"
                                [|(fs_PathLike_to_js x1735)|]);
                           (match x1736 with
                            | Some x1738 ->
                                ignore
                                  (Ojs.call x1737 "push"
                                     [|(or_null_to_js
                                          BufferEncoding.t_0_to_js x1738)|])
                            | None -> ());
                           x1737))|])
    let (readdirSync :
      path:fs_PathLike ->
        options:(fs_BaseEncodingOptions, anonymous_interface_20)
          intersection2 -> fs_Dirent list)
      =
      fun ~path:(x1743 : fs_PathLike) ->
        fun
          ~options:(x1744 :
                     (fs_BaseEncodingOptions, anonymous_interface_20)
                       intersection2)
          ->
          Ojs.list_of_js fs_Dirent_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readdirSync"
               [|(fs_PathLike_to_js x1743);(intersection2_to_js
                                              fs_BaseEncodingOptions_to_js
                                              anonymous_interface_20_to_js
                                              x1744)|])
    let (close : fd:float -> callback:fs_NoParamCallback -> unit) =
      fun ~fd:(x1748 : float) ->
        fun ~callback:(x1749 : fs_NoParamCallback) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "close"
               [|(Ojs.float_to_js x1748);(fs_NoParamCallback_to_js x1749)|])
    module Close =
      struct
        let (__promisify__ : fd:float -> unit Promise.t) =
          fun ~fd:(x1750 : float) ->
            Promise.t_of_js Ojs.unit_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                    "close") "__promisify__" [|(Ojs.float_to_js x1750)|])
      end
    let (closeSync : fd:float -> unit) =
      fun ~fd:(x1752 : float) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "closeSync"
             [|(Ojs.float_to_js x1752)|])
    let (open_ :
      path:fs_PathLike ->
        flags:fs_OpenMode ->
          mode:fs_Mode or_null_or_undefined ->
            callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                        fd:float -> unit)
              -> unit)
      =
      fun ~path:(x1753 : fs_PathLike) ->
        fun ~flags:(x1754 : fs_OpenMode) ->
          fun ~mode:(x1755 : fs_Mode or_null_or_undefined) ->
            fun
              ~callback:(x1757 :
                          err:NodeJS.ErrnoException.t_0 or_null ->
                            fd:float -> unit)
              ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "open"
                   [|(fs_PathLike_to_js x1753);(fs_OpenMode_to_js x1754);(
                     or_null_or_undefined_to_js fs_Mode_to_js x1755);(
                     Ojs.fun_to_js 2
                       (fun (x1758 : Ojs.t) ->
                          fun (x1760 : Ojs.t) ->
                            x1757
                              ~err:(or_null_of_js
                                      NodeJS.ErrnoException.t_0_of_js x1758)
                              ~fd:(Ojs.float_of_js x1760)))|])
    let (open_ :
      path:fs_PathLike ->
        flags:fs_OpenMode ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null -> fd:float -> unit)
            -> unit)
      =
      fun ~path:(x1761 : fs_PathLike) ->
        fun ~flags:(x1762 : fs_OpenMode) ->
          fun
            ~callback:(x1763 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          fd:float -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "open"
                 [|(fs_PathLike_to_js x1761);(fs_OpenMode_to_js x1762);(
                   Ojs.fun_to_js 2
                     (fun (x1764 : Ojs.t) ->
                        fun (x1766 : Ojs.t) ->
                          x1763
                            ~err:(or_null_of_js
                                    NodeJS.ErrnoException.t_0_of_js x1764)
                            ~fd:(Ojs.float_of_js x1766)))|])
    module Open =
      struct
        let (__promisify__ :
          path:fs_PathLike ->
            flags:fs_OpenMode ->
              ?mode:fs_Mode or_null -> unit -> float Promise.t)
          =
          fun ~path:(x1767 : fs_PathLike) ->
            fun ~flags:(x1768 : fs_OpenMode) ->
              fun ?mode:(x1769 : fs_Mode or_null option) ->
                fun () ->
                  Promise.t_of_js Ojs.float_of_js
                    (let x1773 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "fs") "open" in
                     Ojs.call (Ojs.get_prop_ascii x1773 "__promisify__")
                       "apply"
                       [|x1773;((let x1770 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1770 "push"
                                      [|(fs_PathLike_to_js x1767)|]);
                                 ignore
                                   (Ojs.call x1770 "push"
                                      [|(fs_OpenMode_to_js x1768)|]);
                                 (match x1769 with
                                  | Some x1771 ->
                                      ignore
                                        (Ojs.call x1770 "push"
                                           [|(or_null_to_js fs_Mode_to_js
                                                x1771)|])
                                  | None -> ());
                                 x1770))|])
      end
    let (openSync :
      path:fs_PathLike ->
        flags:fs_OpenMode -> ?mode:fs_Mode or_null -> unit -> float)
      =
      fun ~path:(x1775 : fs_PathLike) ->
        fun ~flags:(x1776 : fs_OpenMode) ->
          fun ?mode:(x1777 : fs_Mode or_null option) ->
            fun () ->
              Ojs.float_of_js
                (let x1781 = Ojs.get_prop_ascii Ojs.global "fs" in
                 Ojs.call (Ojs.get_prop_ascii x1781 "openSync") "apply"
                   [|x1781;((let x1778 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1778 "push"
                                  [|(fs_PathLike_to_js x1775)|]);
                             ignore
                               (Ojs.call x1778 "push"
                                  [|(fs_OpenMode_to_js x1776)|]);
                             (match x1777 with
                              | Some x1779 ->
                                  ignore
                                    (Ojs.call x1778 "push"
                                       [|(or_null_to_js fs_Mode_to_js x1779)|])
                              | None -> ());
                             x1778))|])
    let (utimes :
      path:fs_PathLike ->
        atime:Date.t or_string or_number ->
          mtime:Date.t or_string or_number ->
            callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x1782 : fs_PathLike) ->
        fun ~atime:(x1783 : Date.t or_string or_number) ->
          fun ~mtime:(x1786 : Date.t or_string or_number) ->
            fun ~callback:(x1789 : fs_NoParamCallback) ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "utimes"
                   [|(fs_PathLike_to_js x1782);(or_number_to_js
                                                  (fun
                                                     (x1784 :
                                                       Date.t or_string)
                                                     ->
                                                     or_string_to_js
                                                       Date.t_to_js x1784)
                                                  x1783);(or_number_to_js
                                                            (fun
                                                               (x1787 :
                                                                 Date.t
                                                                   or_string)
                                                               ->
                                                               or_string_to_js
                                                                 Date.t_to_js
                                                                 x1787) x1786);(
                     fs_NoParamCallback_to_js x1789)|])
    module Utimes =
      struct
        let (__promisify__ :
          path:fs_PathLike ->
            atime:Date.t or_string or_number ->
              mtime:Date.t or_string or_number -> unit Promise.t)
          =
          fun ~path:(x1790 : fs_PathLike) ->
            fun ~atime:(x1791 : Date.t or_string or_number) ->
              fun ~mtime:(x1794 : Date.t or_string or_number) ->
                Promise.t_of_js Ojs.unit_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                        "utimes") "__promisify__"
                     [|(fs_PathLike_to_js x1790);(or_number_to_js
                                                    (fun
                                                       (x1792 :
                                                         Date.t or_string)
                                                       ->
                                                       or_string_to_js
                                                         Date.t_to_js x1792)
                                                    x1791);(or_number_to_js
                                                              (fun
                                                                 (x1795 :
                                                                   Date.t
                                                                    or_string)
                                                                 ->
                                                                 or_string_to_js
                                                                   Date.t_to_js
                                                                   x1795)
                                                              x1794)|])
      end
    let (utimesSync :
      path:fs_PathLike ->
        atime:Date.t or_string or_number ->
          mtime:Date.t or_string or_number -> unit)
      =
      fun ~path:(x1798 : fs_PathLike) ->
        fun ~atime:(x1799 : Date.t or_string or_number) ->
          fun ~mtime:(x1802 : Date.t or_string or_number) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "utimesSync"
                 [|(fs_PathLike_to_js x1798);(or_number_to_js
                                                (fun
                                                   (x1800 : Date.t or_string)
                                                   ->
                                                   or_string_to_js
                                                     Date.t_to_js x1800)
                                                x1799);(or_number_to_js
                                                          (fun
                                                             (x1803 :
                                                               Date.t
                                                                 or_string)
                                                             ->
                                                             or_string_to_js
                                                               Date.t_to_js
                                                               x1803) x1802)|])
    let (futimes :
      fd:float ->
        atime:Date.t or_string or_number ->
          mtime:Date.t or_string or_number ->
            callback:fs_NoParamCallback -> unit)
      =
      fun ~fd:(x1805 : float) ->
        fun ~atime:(x1806 : Date.t or_string or_number) ->
          fun ~mtime:(x1809 : Date.t or_string or_number) ->
            fun ~callback:(x1812 : fs_NoParamCallback) ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "futimes"
                   [|(Ojs.float_to_js x1805);(or_number_to_js
                                                (fun
                                                   (x1807 : Date.t or_string)
                                                   ->
                                                   or_string_to_js
                                                     Date.t_to_js x1807)
                                                x1806);(or_number_to_js
                                                          (fun
                                                             (x1810 :
                                                               Date.t
                                                                 or_string)
                                                             ->
                                                             or_string_to_js
                                                               Date.t_to_js
                                                               x1810) x1809);(
                     fs_NoParamCallback_to_js x1812)|])
    module Futimes =
      struct
        let (__promisify__ :
          fd:float ->
            atime:Date.t or_string or_number ->
              mtime:Date.t or_string or_number -> unit Promise.t)
          =
          fun ~fd:(x1813 : float) ->
            fun ~atime:(x1814 : Date.t or_string or_number) ->
              fun ~mtime:(x1817 : Date.t or_string or_number) ->
                Promise.t_of_js Ojs.unit_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                        "futimes") "__promisify__"
                     [|(Ojs.float_to_js x1813);(or_number_to_js
                                                  (fun
                                                     (x1815 :
                                                       Date.t or_string)
                                                     ->
                                                     or_string_to_js
                                                       Date.t_to_js x1815)
                                                  x1814);(or_number_to_js
                                                            (fun
                                                               (x1818 :
                                                                 Date.t
                                                                   or_string)
                                                               ->
                                                               or_string_to_js
                                                                 Date.t_to_js
                                                                 x1818) x1817)|])
      end
    let (futimesSync :
      fd:float ->
        atime:Date.t or_string or_number ->
          mtime:Date.t or_string or_number -> unit)
      =
      fun ~fd:(x1821 : float) ->
        fun ~atime:(x1822 : Date.t or_string or_number) ->
          fun ~mtime:(x1825 : Date.t or_string or_number) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "futimesSync"
                 [|(Ojs.float_to_js x1821);(or_number_to_js
                                              (fun (x1823 : Date.t or_string)
                                                 ->
                                                 or_string_to_js Date.t_to_js
                                                   x1823) x1822);(or_number_to_js
                                                                    (
                                                                    fun
                                                                    (x1826 :
                                                                    Date.t
                                                                    or_string)
                                                                    ->
                                                                    or_string_to_js
                                                                    Date.t_to_js
                                                                    x1826)
                                                                    x1825)|])
    let (fsync : fd:float -> callback:fs_NoParamCallback -> unit) =
      fun ~fd:(x1828 : float) ->
        fun ~callback:(x1829 : fs_NoParamCallback) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "fsync"
               [|(Ojs.float_to_js x1828);(fs_NoParamCallback_to_js x1829)|])
    module Fsync =
      struct
        let (__promisify__ : fd:float -> unit Promise.t) =
          fun ~fd:(x1830 : float) ->
            Promise.t_of_js Ojs.unit_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                    "fsync") "__promisify__" [|(Ojs.float_to_js x1830)|])
      end
    let (fsyncSync : fd:float -> unit) =
      fun ~fd:(x1832 : float) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "fsyncSync"
             [|(Ojs.float_to_js x1832)|])
    let (write :
      fd:float ->
        buffer:'TBuffer ->
          offset:float or_null_or_undefined ->
            length:float or_null_or_undefined ->
              position:float or_null_or_undefined ->
                callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                            written:float -> buffer:'TBuffer -> unit)
                  -> unit)
      =
      fun ~fd:(x1833 : float) ->
        fun ~buffer:(x1834 : 'TBuffer) ->
          fun ~offset:(x1835 : float or_null_or_undefined) ->
            fun ~length:(x1837 : float or_null_or_undefined) ->
              fun ~position:(x1839 : float or_null_or_undefined) ->
                fun
                  ~callback:(x1841 :
                              err:NodeJS.ErrnoException.t_0 or_null ->
                                written:float -> buffer:'TBuffer -> unit)
                  ->
                  ignore
                    (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "write"
                       [|(Ojs.float_to_js x1833);(Obj.magic x1834);(or_null_or_undefined_to_js
                                                                    Ojs.float_to_js
                                                                    x1835);(
                         or_null_or_undefined_to_js Ojs.float_to_js x1837);(
                         or_null_or_undefined_to_js Ojs.float_to_js x1839);(
                         Ojs.fun_to_js 3
                           (fun (x1842 : Ojs.t) ->
                              fun (x1844 : Ojs.t) ->
                                fun (x1845 : Ojs.t) ->
                                  x1841
                                    ~err:(or_null_of_js
                                            NodeJS.ErrnoException.t_0_of_js
                                            x1842)
                                    ~written:(Ojs.float_of_js x1844)
                                    ~buffer:(Obj.magic x1845)))|])
    let (write :
      fd:float ->
        buffer:'TBuffer ->
          offset:float or_null_or_undefined ->
            length:float or_null_or_undefined ->
              callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                          written:float -> buffer:'TBuffer -> unit)
                -> unit)
      =
      fun ~fd:(x1846 : float) ->
        fun ~buffer:(x1847 : 'TBuffer) ->
          fun ~offset:(x1848 : float or_null_or_undefined) ->
            fun ~length:(x1850 : float or_null_or_undefined) ->
              fun
                ~callback:(x1852 :
                            err:NodeJS.ErrnoException.t_0 or_null ->
                              written:float -> buffer:'TBuffer -> unit)
                ->
                ignore
                  (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "write"
                     [|(Ojs.float_to_js x1846);(Obj.magic x1847);(or_null_or_undefined_to_js
                                                                    Ojs.float_to_js
                                                                    x1848);(
                       or_null_or_undefined_to_js Ojs.float_to_js x1850);(
                       Ojs.fun_to_js 3
                         (fun (x1853 : Ojs.t) ->
                            fun (x1855 : Ojs.t) ->
                              fun (x1856 : Ojs.t) ->
                                x1852
                                  ~err:(or_null_of_js
                                          NodeJS.ErrnoException.t_0_of_js
                                          x1853)
                                  ~written:(Ojs.float_of_js x1855)
                                  ~buffer:(Obj.magic x1856)))|])
    let (write :
      fd:float ->
        buffer:'TBuffer ->
          offset:float or_null_or_undefined ->
            callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                        written:float -> buffer:'TBuffer -> unit)
              -> unit)
      =
      fun ~fd:(x1857 : float) ->
        fun ~buffer:(x1858 : 'TBuffer) ->
          fun ~offset:(x1859 : float or_null_or_undefined) ->
            fun
              ~callback:(x1861 :
                          err:NodeJS.ErrnoException.t_0 or_null ->
                            written:float -> buffer:'TBuffer -> unit)
              ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "write"
                   [|(Ojs.float_to_js x1857);(Obj.magic x1858);(or_null_or_undefined_to_js
                                                                  Ojs.float_to_js
                                                                  x1859);(
                     Ojs.fun_to_js 3
                       (fun (x1862 : Ojs.t) ->
                          fun (x1864 : Ojs.t) ->
                            fun (x1865 : Ojs.t) ->
                              x1861
                                ~err:(or_null_of_js
                                        NodeJS.ErrnoException.t_0_of_js x1862)
                                ~written:(Ojs.float_of_js x1864)
                                ~buffer:(Obj.magic x1865)))|])
    let (write :
      fd:float ->
        buffer:'TBuffer ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      written:float -> buffer:'TBuffer -> unit)
            -> unit)
      =
      fun ~fd:(x1866 : float) ->
        fun ~buffer:(x1867 : 'TBuffer) ->
          fun
            ~callback:(x1868 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          written:float -> buffer:'TBuffer -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "write"
                 [|(Ojs.float_to_js x1866);(Obj.magic x1867);(Ojs.fun_to_js 3
                                                                (fun
                                                                   (x1869 :
                                                                    Ojs.t)
                                                                   ->
                                                                   fun
                                                                    (x1871 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x1872 :
                                                                    Ojs.t) ->
                                                                    x1868
                                                                    ~err:(
                                                                    or_null_of_js
                                                                    NodeJS.ErrnoException.t_0_of_js
                                                                    x1869)
                                                                    ~written:(
                                                                    Ojs.float_of_js
                                                                    x1871)
                                                                    ~buffer:(
                                                                    Obj.magic
                                                                    x1872)))|])
    let (write :
      fd:float ->
        string:string ->
          position:float or_null_or_undefined ->
            encoding:BufferEncoding.t_0 or_null_or_undefined ->
              callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                          written:float -> str:string -> unit)
                -> unit)
      =
      fun ~fd:(x1873 : float) ->
        fun ~string:(x1874 : string) ->
          fun ~position:(x1875 : float or_null_or_undefined) ->
            fun ~encoding:(x1877 : BufferEncoding.t_0 or_null_or_undefined)
              ->
              fun
                ~callback:(x1879 :
                            err:NodeJS.ErrnoException.t_0 or_null ->
                              written:float -> str:string -> unit)
                ->
                ignore
                  (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "write"
                     [|(Ojs.float_to_js x1873);(Ojs.string_to_js x1874);(
                       or_null_or_undefined_to_js Ojs.float_to_js x1875);(
                       or_null_or_undefined_to_js BufferEncoding.t_0_to_js
                         x1877);(Ojs.fun_to_js 3
                                   (fun (x1880 : Ojs.t) ->
                                      fun (x1882 : Ojs.t) ->
                                        fun (x1883 : Ojs.t) ->
                                          x1879
                                            ~err:(or_null_of_js
                                                    NodeJS.ErrnoException.t_0_of_js
                                                    x1880)
                                            ~written:(Ojs.float_of_js x1882)
                                            ~str:(Ojs.string_of_js x1883)))|])
    let (write :
      fd:float ->
        string:string ->
          position:float or_null_or_undefined ->
            callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                        written:float -> str:string -> unit)
              -> unit)
      =
      fun ~fd:(x1884 : float) ->
        fun ~string:(x1885 : string) ->
          fun ~position:(x1886 : float or_null_or_undefined) ->
            fun
              ~callback:(x1888 :
                          err:NodeJS.ErrnoException.t_0 or_null ->
                            written:float -> str:string -> unit)
              ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "write"
                   [|(Ojs.float_to_js x1884);(Ojs.string_to_js x1885);(
                     or_null_or_undefined_to_js Ojs.float_to_js x1886);(
                     Ojs.fun_to_js 3
                       (fun (x1889 : Ojs.t) ->
                          fun (x1891 : Ojs.t) ->
                            fun (x1892 : Ojs.t) ->
                              x1888
                                ~err:(or_null_of_js
                                        NodeJS.ErrnoException.t_0_of_js x1889)
                                ~written:(Ojs.float_of_js x1891)
                                ~str:(Ojs.string_of_js x1892)))|])
    let (write :
      fd:float ->
        string:string ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      written:float -> str:string -> unit)
            -> unit)
      =
      fun ~fd:(x1893 : float) ->
        fun ~string:(x1894 : string) ->
          fun
            ~callback:(x1895 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          written:float -> str:string -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "write"
                 [|(Ojs.float_to_js x1893);(Ojs.string_to_js x1894);(
                   Ojs.fun_to_js 3
                     (fun (x1896 : Ojs.t) ->
                        fun (x1898 : Ojs.t) ->
                          fun (x1899 : Ojs.t) ->
                            x1895
                              ~err:(or_null_of_js
                                      NodeJS.ErrnoException.t_0_of_js x1896)
                              ~written:(Ojs.float_of_js x1898)
                              ~str:(Ojs.string_of_js x1899)))|])
    module Write =
      struct
        let (__promisify__ :
          fd:float ->
            ?buffer:'TBuffer ->
              ?offset:float ->
                ?length:float ->
                  ?position:float or_null ->
                    unit -> anonymous_interface_3 Promise.t)
          =
          fun ~fd:(x1900 : float) ->
            fun ?buffer:(x1901 : 'TBuffer option) ->
              fun ?offset:(x1902 : float option) ->
                fun ?length:(x1903 : float option) ->
                  fun ?position:(x1904 : float or_null option) ->
                    fun () ->
                      Promise.t_of_js anonymous_interface_3_of_js
                        (let x1911 =
                           Ojs.get_prop_ascii
                             (Ojs.get_prop_ascii Ojs.global "fs") "write" in
                         Ojs.call (Ojs.get_prop_ascii x1911 "__promisify__")
                           "apply"
                           [|x1911;((let x1905 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x1905 "push"
                                          [|(Ojs.float_to_js x1900)|]);
                                     (match x1901 with
                                      | Some x1910 ->
                                          ignore
                                            (Ojs.call x1905 "push"
                                               [|(Obj.magic x1910)|])
                                      | None -> ());
                                     (match x1902 with
                                      | Some x1909 ->
                                          ignore
                                            (Ojs.call x1905 "push"
                                               [|(Ojs.float_to_js x1909)|])
                                      | None -> ());
                                     (match x1903 with
                                      | Some x1908 ->
                                          ignore
                                            (Ojs.call x1905 "push"
                                               [|(Ojs.float_to_js x1908)|])
                                      | None -> ());
                                     (match x1904 with
                                      | Some x1906 ->
                                          ignore
                                            (Ojs.call x1905 "push"
                                               [|(or_null_to_js
                                                    Ojs.float_to_js x1906)|])
                                      | None -> ());
                                     x1905))|])
        let (__promisify__ :
          fd:float ->
            string:string ->
              ?position:float or_null ->
                ?encoding:BufferEncoding.t_0 or_null ->
                  unit -> anonymous_interface_4 Promise.t)
          =
          fun ~fd:(x1913 : float) ->
            fun ~string:(x1914 : string) ->
              fun ?position:(x1915 : float or_null option) ->
                fun ?encoding:(x1916 : BufferEncoding.t_0 or_null option) ->
                  fun () ->
                    Promise.t_of_js anonymous_interface_4_of_js
                      (let x1922 =
                         Ojs.get_prop_ascii
                           (Ojs.get_prop_ascii Ojs.global "fs") "write" in
                       Ojs.call (Ojs.get_prop_ascii x1922 "__promisify__")
                         "apply"
                         [|x1922;((let x1917 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x1917 "push"
                                        [|(Ojs.float_to_js x1913)|]);
                                   ignore
                                     (Ojs.call x1917 "push"
                                        [|(Ojs.string_to_js x1914)|]);
                                   (match x1915 with
                                    | Some x1920 ->
                                        ignore
                                          (Ojs.call x1917 "push"
                                             [|(or_null_to_js Ojs.float_to_js
                                                  x1920)|])
                                    | None -> ());
                                   (match x1916 with
                                    | Some x1918 ->
                                        ignore
                                          (Ojs.call x1917 "push"
                                             [|(or_null_to_js
                                                  BufferEncoding.t_0_to_js
                                                  x1918)|])
                                    | None -> ());
                                   x1917))|])
      end
    let (writeSync :
      fd:float ->
        buffer:NodeJS.ArrayBufferView.t_0 ->
          ?offset:float or_null ->
            ?length:float or_null -> ?position:float or_null -> unit -> float)
      =
      fun ~fd:(x1924 : float) ->
        fun ~buffer:(x1925 : NodeJS.ArrayBufferView.t_0) ->
          fun ?offset:(x1926 : float or_null option) ->
            fun ?length:(x1927 : float or_null option) ->
              fun ?position:(x1928 : float or_null option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1936 = Ojs.get_prop_ascii Ojs.global "fs" in
                     Ojs.call (Ojs.get_prop_ascii x1936 "writeSync") "apply"
                       [|x1936;((let x1929 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1929 "push"
                                      [|(Ojs.float_to_js x1924)|]);
                                 ignore
                                   (Ojs.call x1929 "push"
                                      [|(NodeJS.ArrayBufferView.t_0_to_js
                                           x1925)|]);
                                 (match x1926 with
                                  | Some x1934 ->
                                      ignore
                                        (Ojs.call x1929 "push"
                                           [|(or_null_to_js Ojs.float_to_js
                                                x1934)|])
                                  | None -> ());
                                 (match x1927 with
                                  | Some x1932 ->
                                      ignore
                                        (Ojs.call x1929 "push"
                                           [|(or_null_to_js Ojs.float_to_js
                                                x1932)|])
                                  | None -> ());
                                 (match x1928 with
                                  | Some x1930 ->
                                      ignore
                                        (Ojs.call x1929 "push"
                                           [|(or_null_to_js Ojs.float_to_js
                                                x1930)|])
                                  | None -> ());
                                 x1929))|])
    let (writeSync :
      fd:float ->
        string:string ->
          ?position:float or_null ->
            ?encoding:BufferEncoding.t_0 or_null -> unit -> float)
      =
      fun ~fd:(x1937 : float) ->
        fun ~string:(x1938 : string) ->
          fun ?position:(x1939 : float or_null option) ->
            fun ?encoding:(x1940 : BufferEncoding.t_0 or_null option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1946 = Ojs.get_prop_ascii Ojs.global "fs" in
                   Ojs.call (Ojs.get_prop_ascii x1946 "writeSync") "apply"
                     [|x1946;((let x1941 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1941 "push"
                                    [|(Ojs.float_to_js x1937)|]);
                               ignore
                                 (Ojs.call x1941 "push"
                                    [|(Ojs.string_to_js x1938)|]);
                               (match x1939 with
                                | Some x1944 ->
                                    ignore
                                      (Ojs.call x1941 "push"
                                         [|(or_null_to_js Ojs.float_to_js
                                              x1944)|])
                                | None -> ());
                               (match x1940 with
                                | Some x1942 ->
                                    ignore
                                      (Ojs.call x1941 "push"
                                         [|(or_null_to_js
                                              BufferEncoding.t_0_to_js x1942)|])
                                | None -> ());
                               x1941))|])
    let (read :
      fd:float ->
        buffer:'TBuffer ->
          offset:float ->
            length:float ->
              position:float or_null ->
                callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                            bytesRead:float -> buffer:'TBuffer -> unit)
                  -> unit)
      =
      fun ~fd:(x1947 : float) ->
        fun ~buffer:(x1948 : 'TBuffer) ->
          fun ~offset:(x1949 : float) ->
            fun ~length:(x1950 : float) ->
              fun ~position:(x1951 : float or_null) ->
                fun
                  ~callback:(x1953 :
                              err:NodeJS.ErrnoException.t_0 or_null ->
                                bytesRead:float -> buffer:'TBuffer -> unit)
                  ->
                  ignore
                    (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "read"
                       [|(Ojs.float_to_js x1947);(Obj.magic x1948);(Ojs.float_to_js
                                                                    x1949);(
                         Ojs.float_to_js x1950);(or_null_to_js
                                                   Ojs.float_to_js x1951);(
                         Ojs.fun_to_js 3
                           (fun (x1954 : Ojs.t) ->
                              fun (x1956 : Ojs.t) ->
                                fun (x1957 : Ojs.t) ->
                                  x1953
                                    ~err:(or_null_of_js
                                            NodeJS.ErrnoException.t_0_of_js
                                            x1954)
                                    ~bytesRead:(Ojs.float_of_js x1956)
                                    ~buffer:(Obj.magic x1957)))|])
    module Read =
      struct
        let (__promisify__ :
          fd:float ->
            buffer:'TBuffer ->
              offset:float ->
                length:float ->
                  position:float or_null -> anonymous_interface_2 Promise.t)
          =
          fun ~fd:(x1958 : float) ->
            fun ~buffer:(x1959 : 'TBuffer) ->
              fun ~offset:(x1960 : float) ->
                fun ~length:(x1961 : float) ->
                  fun ~position:(x1962 : float or_null) ->
                    Promise.t_of_js anonymous_interface_2_of_js
                      (Ojs.call
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "fs") "read")
                         "__promisify__"
                         [|(Ojs.float_to_js x1958);(Obj.magic x1959);(
                           Ojs.float_to_js x1960);(Ojs.float_to_js x1961);(
                           or_null_to_js Ojs.float_to_js x1962)|])
      end
    module ReadSyncOptions =
      struct
        type t = fs_ReadSyncOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x1966 : Ojs.t) -> fs_ReadSyncOptions_of_js x1966
        and t_to_js : t -> Ojs.t =
          fun (x1965 : fs_ReadSyncOptions) -> fs_ReadSyncOptions_to_js x1965
        let (get_offset : t -> float) =
          fun (x1967 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1967) "offset")
        let (set_offset : t -> float -> unit) =
          fun (x1968 : t) ->
            fun (x1969 : float) ->
              Ojs.set_prop_ascii (t_to_js x1968) "offset"
                (Ojs.float_to_js x1969)
        let (get_length : t -> float) =
          fun (x1970 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1970) "length")
        let (set_length : t -> float -> unit) =
          fun (x1971 : t) ->
            fun (x1972 : float) ->
              Ojs.set_prop_ascii (t_to_js x1971) "length"
                (Ojs.float_to_js x1972)
        let (get_position : t -> float or_null) =
          fun (x1973 : t) ->
            or_null_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x1973) "position")
        let (set_position : t -> float or_null -> unit) =
          fun (x1975 : t) ->
            fun (x1976 : float or_null) ->
              Ojs.set_prop_ascii (t_to_js x1975) "position"
                (or_null_to_js Ojs.float_to_js x1976)
      end
    let (readSync :
      fd:float ->
        buffer:NodeJS.ArrayBufferView.t_0 ->
          offset:float -> length:float -> position:float or_null -> float)
      =
      fun ~fd:(x1978 : float) ->
        fun ~buffer:(x1979 : NodeJS.ArrayBufferView.t_0) ->
          fun ~offset:(x1980 : float) ->
            fun ~length:(x1981 : float) ->
              fun ~position:(x1982 : float or_null) ->
                Ojs.float_of_js
                  (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readSync"
                     [|(Ojs.float_to_js x1978);(NodeJS.ArrayBufferView.t_0_to_js
                                                  x1979);(Ojs.float_to_js
                                                            x1980);(Ojs.float_to_js
                                                                    x1981);(
                       or_null_to_js Ojs.float_to_js x1982)|])
    let (readSync :
      fd:float ->
        buffer:NodeJS.ArrayBufferView.t_0 ->
          ?opts:fs_ReadSyncOptions -> unit -> float)
      =
      fun ~fd:(x1984 : float) ->
        fun ~buffer:(x1985 : NodeJS.ArrayBufferView.t_0) ->
          fun ?opts:(x1986 : fs_ReadSyncOptions option) ->
            fun () ->
              Ojs.float_of_js
                (let x1989 = Ojs.get_prop_ascii Ojs.global "fs" in
                 Ojs.call (Ojs.get_prop_ascii x1989 "readSync") "apply"
                   [|x1989;((let x1987 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1987 "push"
                                  [|(Ojs.float_to_js x1984)|]);
                             ignore
                               (Ojs.call x1987 "push"
                                  [|(NodeJS.ArrayBufferView.t_0_to_js x1985)|]);
                             (match x1986 with
                              | Some x1988 ->
                                  ignore
                                    (Ojs.call x1987 "push"
                                       [|(fs_ReadSyncOptions_to_js x1988)|])
                              | None -> ());
                             x1987))|])
    let (readFile :
      path:fs_PathLike or_number ->
        options:anonymous_interface_6 or_null_or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      data:Buffer.t_0 -> unit)
            -> unit)
      =
      fun ~path:(x1990 : fs_PathLike or_number) ->
        fun ~options:(x1992 : anonymous_interface_6 or_null_or_undefined) ->
          fun
            ~callback:(x1994 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          data:Buffer.t_0 -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readFile"
                 [|(or_number_to_js fs_PathLike_to_js x1990);(or_null_or_undefined_to_js
                                                                anonymous_interface_6_to_js
                                                                x1992);(
                   Ojs.fun_to_js 2
                     (fun (x1995 : Ojs.t) ->
                        fun (x1997 : Ojs.t) ->
                          x1994
                            ~err:(or_null_of_js
                                    NodeJS.ErrnoException.t_0_of_js x1995)
                            ~data:(Buffer.t_0_of_js x1997)))|])
    let (readFile :
      path:fs_PathLike or_number ->
        options:anonymous_interface_5 or_string ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      data:string -> unit)
            -> unit)
      =
      fun ~path:(x1998 : fs_PathLike or_number) ->
        fun ~options:(x2000 : anonymous_interface_5 or_string) ->
          fun
            ~callback:(x2002 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          data:string -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readFile"
                 [|(or_number_to_js fs_PathLike_to_js x1998);(or_string_to_js
                                                                anonymous_interface_5_to_js
                                                                x2000);(
                   Ojs.fun_to_js 2
                     (fun (x2003 : Ojs.t) ->
                        fun (x2005 : Ojs.t) ->
                          x2002
                            ~err:(or_null_of_js
                                    NodeJS.ErrnoException.t_0_of_js x2003)
                            ~data:(Ojs.string_of_js x2005)))|])
    let (readFile :
      path:fs_PathLike or_number ->
        options:(fs_BaseEncodingOptions, anonymous_interface_12)
          intersection2 or_string or_null_or_undefined ->
          callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                      data:Buffer.t_0 or_string -> unit)
            -> unit)
      =
      fun ~path:(x2006 : fs_PathLike or_number) ->
        fun
          ~options:(x2008 :
                     (fs_BaseEncodingOptions, anonymous_interface_12)
                       intersection2 or_string or_null_or_undefined)
          ->
          fun
            ~callback:(x2013 :
                        err:NodeJS.ErrnoException.t_0 or_null ->
                          data:Buffer.t_0 or_string -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readFile"
                 [|(or_number_to_js fs_PathLike_to_js x2006);(or_null_or_undefined_to_js
                                                                (fun
                                                                   (x2009 :
                                                                    (fs_BaseEncodingOptions,
                                                                    anonymous_interface_12)
                                                                    intersection2
                                                                    or_string)
                                                                   ->
                                                                   or_string_to_js
                                                                    (fun
                                                                    (x2010 :
                                                                    (fs_BaseEncodingOptions,
                                                                    anonymous_interface_12)
                                                                    intersection2)
                                                                    ->
                                                                    intersection2_to_js
                                                                    fs_BaseEncodingOptions_to_js
                                                                    anonymous_interface_12_to_js
                                                                    x2010)
                                                                    x2009)
                                                                x2008);(
                   Ojs.fun_to_js 2
                     (fun (x2014 : Ojs.t) ->
                        fun (x2016 : Ojs.t) ->
                          x2013
                            ~err:(or_null_of_js
                                    NodeJS.ErrnoException.t_0_of_js x2014)
                            ~data:(or_string_of_js Buffer.t_0_of_js x2016)))|])
    let (readFile :
      path:fs_PathLike or_number ->
        callback:(err:NodeJS.ErrnoException.t_0 or_null ->
                    data:Buffer.t_0 -> unit)
          -> unit)
      =
      fun ~path:(x2018 : fs_PathLike or_number) ->
        fun
          ~callback:(x2020 :
                      err:NodeJS.ErrnoException.t_0 or_null ->
                        data:Buffer.t_0 -> unit)
          ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readFile"
               [|(or_number_to_js fs_PathLike_to_js x2018);(Ojs.fun_to_js 2
                                                              (fun
                                                                 (x2021 :
                                                                   Ojs.t)
                                                                 ->
                                                                 fun
                                                                   (x2023 :
                                                                    Ojs.t)
                                                                   ->
                                                                   x2020
                                                                    ~err:(
                                                                    or_null_of_js
                                                                    NodeJS.ErrnoException.t_0_of_js
                                                                    x2021)
                                                                    ~data:(
                                                                    Buffer.t_0_of_js
                                                                    x2023)))|])
    module ReadFile =
      struct
        let (__promisify__ :
          path:fs_PathLike or_number ->
            ?options:anonymous_interface_6 or_null ->
              unit -> Buffer.t_0 Promise.t)
          =
          fun ~path:(x2024 : fs_PathLike or_number) ->
            fun ?options:(x2025 : anonymous_interface_6 or_null option) ->
              fun () ->
                Promise.t_of_js Buffer.t_0_of_js
                  (let x2030 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "readFile" in
                   Ojs.call (Ojs.get_prop_ascii x2030 "__promisify__")
                     "apply"
                     [|x2030;((let x2026 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2026 "push"
                                    [|(or_number_to_js fs_PathLike_to_js
                                         x2024)|]);
                               (match x2025 with
                                | Some x2027 ->
                                    ignore
                                      (Ojs.call x2026 "push"
                                         [|(or_null_to_js
                                              anonymous_interface_6_to_js
                                              x2027)|])
                                | None -> ());
                               x2026))|])
        let (__promisify__ :
          path:fs_PathLike or_number ->
            options:anonymous_interface_5 or_string -> string Promise.t)
          =
          fun ~path:(x2032 : fs_PathLike or_number) ->
            fun ~options:(x2034 : anonymous_interface_5 or_string) ->
              Promise.t_of_js Ojs.string_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                      "readFile") "__promisify__"
                   [|(or_number_to_js fs_PathLike_to_js x2032);(or_string_to_js
                                                                  anonymous_interface_5_to_js
                                                                  x2034)|])
        let (__promisify__ :
          path:fs_PathLike or_number ->
            ?options:(fs_BaseEncodingOptions, anonymous_interface_12)
              intersection2 or_string or_null ->
              unit -> Buffer.t_0 or_string Promise.t)
          =
          fun ~path:(x2037 : fs_PathLike or_number) ->
            fun
              ?options:(x2038 :
                         (fs_BaseEncodingOptions, anonymous_interface_12)
                           intersection2 or_string or_null option)
              ->
              fun () ->
                Promise.t_of_js
                  (fun (x2047 : Ojs.t) ->
                     or_string_of_js Buffer.t_0_of_js x2047)
                  (let x2046 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "readFile" in
                   Ojs.call (Ojs.get_prop_ascii x2046 "__promisify__")
                     "apply"
                     [|x2046;((let x2039 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2039 "push"
                                    [|(or_number_to_js fs_PathLike_to_js
                                         x2037)|]);
                               (match x2038 with
                                | Some x2040 ->
                                    ignore
                                      (Ojs.call x2039 "push"
                                         [|(or_null_to_js
                                              (fun
                                                 (x2041 :
                                                   (fs_BaseEncodingOptions,
                                                     anonymous_interface_12)
                                                     intersection2 or_string)
                                                 ->
                                                 or_string_to_js
                                                   (fun
                                                      (x2042 :
                                                        (fs_BaseEncodingOptions,
                                                          anonymous_interface_12)
                                                          intersection2)
                                                      ->
                                                      intersection2_to_js
                                                        fs_BaseEncodingOptions_to_js
                                                        anonymous_interface_12_to_js
                                                        x2042) x2041) x2040)|])
                                | None -> ());
                               x2039))|])
      end
    let (readFileSync :
      path:fs_PathLike or_number ->
        ?options:anonymous_interface_6 or_null -> unit -> Buffer.t_0)
      =
      fun ~path:(x2049 : fs_PathLike or_number) ->
        fun ?options:(x2050 : anonymous_interface_6 or_null option) ->
          fun () ->
            Buffer.t_0_of_js
              (let x2055 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x2055 "readFileSync") "apply"
                 [|x2055;((let x2051 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x2051 "push"
                                [|(or_number_to_js fs_PathLike_to_js x2049)|]);
                           (match x2050 with
                            | Some x2052 ->
                                ignore
                                  (Ojs.call x2051 "push"
                                     [|(or_null_to_js
                                          anonymous_interface_6_to_js x2052)|])
                            | None -> ());
                           x2051))|])
    let (readFileSync :
      path:fs_PathLike or_number ->
        options:(BufferEncoding.t_0, anonymous_interface_5) union2 -> string)
      =
      fun ~path:(x2056 : fs_PathLike or_number) ->
        fun
          ~options:(x2058 :
                     (BufferEncoding.t_0, anonymous_interface_5) union2)
          ->
          Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readFileSync"
               [|(or_number_to_js fs_PathLike_to_js x2056);(union2_to_js
                                                              BufferEncoding.t_0_to_js
                                                              anonymous_interface_5_to_js
                                                              x2058)|])
    let (readFileSync :
      path:fs_PathLike or_number ->
        ?options:BufferEncoding.t_0 or_null -> unit -> Buffer.t_0 or_string)
      =
      fun ~path:(x2061 : fs_PathLike or_number) ->
        fun ?options:(x2062 : BufferEncoding.t_0 or_null option) ->
          fun () ->
            or_string_of_js Buffer.t_0_of_js
              (let x2067 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x2067 "readFileSync") "apply"
                 [|x2067;((let x2063 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x2063 "push"
                                [|(or_number_to_js fs_PathLike_to_js x2061)|]);
                           (match x2062 with
                            | Some x2064 ->
                                ignore
                                  (Ojs.call x2063 "push"
                                     [|(or_null_to_js
                                          BufferEncoding.t_0_to_js x2064)|])
                            | None -> ());
                           x2063))|])
    module WriteFileOptions =
      struct
        type t = fs_WriteFileOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x2070 : Ojs.t) -> fs_WriteFileOptions_of_js x2070
        and t_to_js : t -> Ojs.t =
          fun (x2069 : fs_WriteFileOptions) ->
            fs_WriteFileOptions_to_js x2069
      end
    let (writeFile :
      path:fs_PathLike or_number ->
        data:NodeJS.ArrayBufferView.t_0 or_string ->
          options:fs_WriteFileOptions -> callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x2071 : fs_PathLike or_number) ->
        fun ~data:(x2073 : NodeJS.ArrayBufferView.t_0 or_string) ->
          fun ~options:(x2075 : fs_WriteFileOptions) ->
            fun ~callback:(x2076 : fs_NoParamCallback) ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "writeFile"
                   [|(or_number_to_js fs_PathLike_to_js x2071);(or_string_to_js
                                                                  NodeJS.ArrayBufferView.t_0_to_js
                                                                  x2073);(
                     fs_WriteFileOptions_to_js x2075);(fs_NoParamCallback_to_js
                                                         x2076)|])
    let (writeFile :
      path:fs_PathLike or_number ->
        data:NodeJS.ArrayBufferView.t_0 or_string ->
          callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x2077 : fs_PathLike or_number) ->
        fun ~data:(x2079 : NodeJS.ArrayBufferView.t_0 or_string) ->
          fun ~callback:(x2081 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "writeFile"
                 [|(or_number_to_js fs_PathLike_to_js x2077);(or_string_to_js
                                                                NodeJS.ArrayBufferView.t_0_to_js
                                                                x2079);(
                   fs_NoParamCallback_to_js x2081)|])
    module WriteFile =
      struct
        let (__promisify__ :
          path:fs_PathLike or_number ->
            data:NodeJS.ArrayBufferView.t_0 or_string ->
              ?options:fs_WriteFileOptions -> unit -> unit Promise.t)
          =
          fun ~path:(x2082 : fs_PathLike or_number) ->
            fun ~data:(x2083 : NodeJS.ArrayBufferView.t_0 or_string) ->
              fun ?options:(x2084 : fs_WriteFileOptions option) ->
                fun () ->
                  Promise.t_of_js Ojs.unit_of_js
                    (let x2089 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "fs") "writeFile" in
                     Ojs.call (Ojs.get_prop_ascii x2089 "__promisify__")
                       "apply"
                       [|x2089;((let x2085 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2085 "push"
                                      [|(or_number_to_js fs_PathLike_to_js
                                           x2082)|]);
                                 ignore
                                   (Ojs.call x2085 "push"
                                      [|(or_string_to_js
                                           NodeJS.ArrayBufferView.t_0_to_js
                                           x2083)|]);
                                 (match x2084 with
                                  | Some x2086 ->
                                      ignore
                                        (Ojs.call x2085 "push"
                                           [|(fs_WriteFileOptions_to_js x2086)|])
                                  | None -> ());
                                 x2085))|])
      end
    let (writeFileSync :
      path:fs_PathLike or_number ->
        data:NodeJS.ArrayBufferView.t_0 or_string ->
          ?options:fs_WriteFileOptions -> unit -> unit)
      =
      fun ~path:(x2091 : fs_PathLike or_number) ->
        fun ~data:(x2092 : NodeJS.ArrayBufferView.t_0 or_string) ->
          fun ?options:(x2093 : fs_WriteFileOptions option) ->
            fun () ->
              ignore
                (let x2098 = Ojs.get_prop_ascii Ojs.global "fs" in
                 Ojs.call (Ojs.get_prop_ascii x2098 "writeFileSync") "apply"
                   [|x2098;((let x2094 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2094 "push"
                                  [|(or_number_to_js fs_PathLike_to_js x2091)|]);
                             ignore
                               (Ojs.call x2094 "push"
                                  [|(or_string_to_js
                                       NodeJS.ArrayBufferView.t_0_to_js x2092)|]);
                             (match x2093 with
                              | Some x2095 ->
                                  ignore
                                    (Ojs.call x2094 "push"
                                       [|(fs_WriteFileOptions_to_js x2095)|])
                              | None -> ());
                             x2094))|])
    let (appendFile :
      file:fs_PathLike or_number ->
        data:Uint8Array.t or_string ->
          options:fs_WriteFileOptions -> callback:fs_NoParamCallback -> unit)
      =
      fun ~file:(x2099 : fs_PathLike or_number) ->
        fun ~data:(x2101 : Uint8Array.t or_string) ->
          fun ~options:(x2103 : fs_WriteFileOptions) ->
            fun ~callback:(x2104 : fs_NoParamCallback) ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "appendFile"
                   [|(or_number_to_js fs_PathLike_to_js x2099);(or_string_to_js
                                                                  Uint8Array.t_to_js
                                                                  x2101);(
                     fs_WriteFileOptions_to_js x2103);(fs_NoParamCallback_to_js
                                                         x2104)|])
    let (appendFile :
      file:fs_PathLike or_number ->
        data:Uint8Array.t or_string -> callback:fs_NoParamCallback -> unit)
      =
      fun ~file:(x2105 : fs_PathLike or_number) ->
        fun ~data:(x2107 : Uint8Array.t or_string) ->
          fun ~callback:(x2109 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "appendFile"
                 [|(or_number_to_js fs_PathLike_to_js x2105);(or_string_to_js
                                                                Uint8Array.t_to_js
                                                                x2107);(
                   fs_NoParamCallback_to_js x2109)|])
    module AppendFile =
      struct
        let (__promisify__ :
          file:fs_PathLike or_number ->
            data:Uint8Array.t or_string ->
              ?options:fs_WriteFileOptions -> unit -> unit Promise.t)
          =
          fun ~file:(x2110 : fs_PathLike or_number) ->
            fun ~data:(x2111 : Uint8Array.t or_string) ->
              fun ?options:(x2112 : fs_WriteFileOptions option) ->
                fun () ->
                  Promise.t_of_js Ojs.unit_of_js
                    (let x2117 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "fs") "appendFile" in
                     Ojs.call (Ojs.get_prop_ascii x2117 "__promisify__")
                       "apply"
                       [|x2117;((let x2113 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2113 "push"
                                      [|(or_number_to_js fs_PathLike_to_js
                                           x2110)|]);
                                 ignore
                                   (Ojs.call x2113 "push"
                                      [|(or_string_to_js Uint8Array.t_to_js
                                           x2111)|]);
                                 (match x2112 with
                                  | Some x2114 ->
                                      ignore
                                        (Ojs.call x2113 "push"
                                           [|(fs_WriteFileOptions_to_js x2114)|])
                                  | None -> ());
                                 x2113))|])
      end
    let (appendFileSync :
      file:fs_PathLike or_number ->
        data:Uint8Array.t or_string ->
          ?options:fs_WriteFileOptions -> unit -> unit)
      =
      fun ~file:(x2119 : fs_PathLike or_number) ->
        fun ~data:(x2120 : Uint8Array.t or_string) ->
          fun ?options:(x2121 : fs_WriteFileOptions option) ->
            fun () ->
              ignore
                (let x2126 = Ojs.get_prop_ascii Ojs.global "fs" in
                 Ojs.call (Ojs.get_prop_ascii x2126 "appendFileSync") "apply"
                   [|x2126;((let x2122 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2122 "push"
                                  [|(or_number_to_js fs_PathLike_to_js x2119)|]);
                             ignore
                               (Ojs.call x2122 "push"
                                  [|(or_string_to_js Uint8Array.t_to_js x2120)|]);
                             (match x2121 with
                              | Some x2123 ->
                                  ignore
                                    (Ojs.call x2122 "push"
                                       [|(fs_WriteFileOptions_to_js x2123)|])
                              | None -> ());
                             x2122))|])
    let (watchFile :
      filename:fs_PathLike ->
        options:anonymous_interface_16 or_undefined ->
          listener:(curr:fs_Stats -> prev:fs_Stats -> unit) -> unit)
      =
      fun ~filename:(x2127 : fs_PathLike) ->
        fun ~options:(x2128 : anonymous_interface_16 or_undefined) ->
          fun ~listener:(x2130 : curr:fs_Stats -> prev:fs_Stats -> unit) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "watchFile"
                 [|(fs_PathLike_to_js x2127);(or_undefined_to_js
                                                anonymous_interface_16_to_js
                                                x2128);(Ojs.fun_to_js 2
                                                          (fun
                                                             (x2131 : Ojs.t)
                                                             ->
                                                             fun
                                                               (x2132 :
                                                                 Ojs.t)
                                                               ->
                                                               x2130
                                                                 ~curr:(
                                                                 fs_Stats_of_js
                                                                   x2131)
                                                                 ~prev:(
                                                                 fs_Stats_of_js
                                                                   x2132)))|])
    let (watchFile :
      filename:fs_PathLike ->
        listener:(curr:fs_Stats -> prev:fs_Stats -> unit) -> unit)
      =
      fun ~filename:(x2133 : fs_PathLike) ->
        fun ~listener:(x2134 : curr:fs_Stats -> prev:fs_Stats -> unit) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "watchFile"
               [|(fs_PathLike_to_js x2133);(Ojs.fun_to_js 2
                                              (fun (x2135 : Ojs.t) ->
                                                 fun (x2136 : Ojs.t) ->
                                                   x2134
                                                     ~curr:(fs_Stats_of_js
                                                              x2135)
                                                     ~prev:(fs_Stats_of_js
                                                              x2136)))|])
    let (unwatchFile :
      filename:fs_PathLike ->
        ?listener:(curr:fs_Stats -> prev:fs_Stats -> unit) -> unit -> unit)
      =
      fun ~filename:(x2137 : fs_PathLike) ->
        fun
          ?listener:(x2138 : (curr:fs_Stats -> prev:fs_Stats -> unit) option)
          ->
          fun () ->
            ignore
              (let x2143 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x2143 "unwatchFile") "apply"
                 [|x2143;((let x2139 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x2139 "push"
                                [|(fs_PathLike_to_js x2137)|]);
                           (match x2138 with
                            | Some x2140 ->
                                ignore
                                  (Ojs.call x2139 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2141 : Ojs.t) ->
                                             fun (x2142 : Ojs.t) ->
                                               x2140
                                                 ~curr:(fs_Stats_of_js x2141)
                                                 ~prev:(fs_Stats_of_js x2142)))|])
                            | None -> ());
                           x2139))|])
    let (watch :
      filename:fs_PathLike ->
        options:(BufferEncoding.t_0, anonymous_interface_10) union2
          or_null_or_undefined ->
          ?listener:(event:[ `change  | `rename ] -> filename:string -> unit)
            -> unit -> fs_FSWatcher)
      =
      fun ~filename:(x2144 : fs_PathLike) ->
        fun
          ~options:(x2145 :
                     (BufferEncoding.t_0, anonymous_interface_10) union2
                       or_null_or_undefined)
          ->
          fun
            ?listener:(x2146 :
                        (event:[ `change  | `rename ] ->
                           filename:string -> unit)
                          option)
            ->
            fun () ->
              fs_FSWatcher_of_js
                (let x2155 = Ojs.get_prop_ascii Ojs.global "fs" in
                 Ojs.call (Ojs.get_prop_ascii x2155 "watch") "apply"
                   [|x2155;((let x2147 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2147 "push"
                                  [|(fs_PathLike_to_js x2144)|]);
                             ignore
                               (Ojs.call x2147 "push"
                                  [|(or_null_or_undefined_to_js
                                       (fun
                                          (x2152 :
                                            (BufferEncoding.t_0,
                                              anonymous_interface_10) union2)
                                          ->
                                          union2_to_js
                                            BufferEncoding.t_0_to_js
                                            anonymous_interface_10_to_js
                                            x2152) x2145)|]);
                             (match x2146 with
                              | Some x2148 ->
                                  ignore
                                    (Ojs.call x2147 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x2149 : Ojs.t) ->
                                               fun (x2151 : Ojs.t) ->
                                                 x2148
                                                   ~event:(let x2150 = x2149 in
                                                           match Ojs.string_of_js
                                                                   x2150
                                                           with
                                                           | "change" ->
                                                               `change
                                                           | "rename" ->
                                                               `rename
                                                           | _ ->
                                                               assert false)
                                                   ~filename:(Ojs.string_of_js
                                                                x2151)))|])
                              | None -> ());
                             x2147))|])
    let (watch :
      filename:fs_PathLike ->
        options:(anonymous_interface_8, [ `buffer ]) or_enum ->
          ?listener:(event:[ `change  | `rename ] ->
                       filename:Buffer.t_0 -> unit)
            -> unit -> fs_FSWatcher)
      =
      fun ~filename:(x2156 : fs_PathLike) ->
        fun ~options:(x2157 : (anonymous_interface_8, [ `buffer ]) or_enum)
          ->
          fun
            ?listener:(x2158 :
                        (event:[ `change  | `rename ] ->
                           filename:Buffer.t_0 -> unit)
                          option)
            ->
            fun () ->
              fs_FSWatcher_of_js
                (let x2166 = Ojs.get_prop_ascii Ojs.global "fs" in
                 Ojs.call (Ojs.get_prop_ascii x2166 "watch") "apply"
                   [|x2166;((let x2159 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2159 "push"
                                  [|(fs_PathLike_to_js x2156)|]);
                             ignore
                               (Ojs.call x2159 "push"
                                  [|(or_enum_to_js
                                       anonymous_interface_8_to_js
                                       (fun (x2165 : [ `buffer ]) ->
                                          match x2165 with
                                          | `buffer ->
                                              Ojs.string_to_js "buffer")
                                       x2157)|]);
                             (match x2158 with
                              | Some x2160 ->
                                  ignore
                                    (Ojs.call x2159 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x2161 : Ojs.t) ->
                                               fun (x2163 : Ojs.t) ->
                                                 x2160
                                                   ~event:(let x2162 = x2161 in
                                                           match Ojs.string_of_js
                                                                   x2162
                                                           with
                                                           | "change" ->
                                                               `change
                                                           | "rename" ->
                                                               `rename
                                                           | _ ->
                                                               assert false)
                                                   ~filename:(Buffer.t_0_of_js
                                                                x2163)))|])
                              | None -> ());
                             x2159))|])
    let (watch :
      filename:fs_PathLike ->
        options:anonymous_interface_10 or_string or_null ->
          ?listener:(event:[ `change  | `rename ] ->
                       filename:Buffer.t_0 or_string -> unit)
            -> unit -> fs_FSWatcher)
      =
      fun ~filename:(x2167 : fs_PathLike) ->
        fun ~options:(x2168 : anonymous_interface_10 or_string or_null) ->
          fun
            ?listener:(x2169 :
                        (event:[ `change  | `rename ] ->
                           filename:Buffer.t_0 or_string -> unit)
                          option)
            ->
            fun () ->
              fs_FSWatcher_of_js
                (let x2178 = Ojs.get_prop_ascii Ojs.global "fs" in
                 Ojs.call (Ojs.get_prop_ascii x2178 "watch") "apply"
                   [|x2178;((let x2170 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2170 "push"
                                  [|(fs_PathLike_to_js x2167)|]);
                             ignore
                               (Ojs.call x2170 "push"
                                  [|(or_null_to_js
                                       (fun
                                          (x2176 :
                                            anonymous_interface_10 or_string)
                                          ->
                                          or_string_to_js
                                            anonymous_interface_10_to_js
                                            x2176) x2168)|]);
                             (match x2169 with
                              | Some x2171 ->
                                  ignore
                                    (Ojs.call x2170 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x2172 : Ojs.t) ->
                                               fun (x2174 : Ojs.t) ->
                                                 x2171
                                                   ~event:(let x2173 = x2172 in
                                                           match Ojs.string_of_js
                                                                   x2173
                                                           with
                                                           | "change" ->
                                                               `change
                                                           | "rename" ->
                                                               `rename
                                                           | _ ->
                                                               assert false)
                                                   ~filename:(or_string_of_js
                                                                Buffer.t_0_of_js
                                                                x2174)))|])
                              | None -> ());
                             x2170))|])
    let (watch :
      filename:fs_PathLike ->
        ?listener:(event:[ `change  | `rename ] -> filename:string -> any) ->
          unit -> fs_FSWatcher)
      =
      fun ~filename:(x2179 : fs_PathLike) ->
        fun
          ?listener:(x2180 :
                      (event:[ `change  | `rename ] -> filename:string -> any)
                        option)
          ->
          fun () ->
            fs_FSWatcher_of_js
              (let x2186 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x2186 "watch") "apply"
                 [|x2186;((let x2181 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x2181 "push"
                                [|(fs_PathLike_to_js x2179)|]);
                           (match x2180 with
                            | Some x2182 ->
                                ignore
                                  (Ojs.call x2181 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2183 : Ojs.t) ->
                                             fun (x2185 : Ojs.t) ->
                                               any_to_js
                                                 (x2182
                                                    ~event:(let x2184 = x2183 in
                                                            match Ojs.string_of_js
                                                                    x2184
                                                            with
                                                            | "change" ->
                                                                `change
                                                            | "rename" ->
                                                                `rename
                                                            | _ ->
                                                                assert false)
                                                    ~filename:(Ojs.string_of_js
                                                                 x2185))))|])
                            | None -> ());
                           x2181))|])
    let (exists : path:fs_PathLike -> callback:(exists:bool -> unit) -> unit)
      =
      fun ~path:(x2187 : fs_PathLike) ->
        fun ~callback:(x2188 : exists:bool -> unit) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "exists"
               [|(fs_PathLike_to_js x2187);(Ojs.fun_to_js 1
                                              (fun (x2189 : Ojs.t) ->
                                                 x2188
                                                   ~exists:(Ojs.bool_of_js
                                                              x2189)))|])
    module Exists =
      struct
        let (__promisify__ : path:fs_PathLike -> bool Promise.t) =
          fun ~path:(x2190 : fs_PathLike) ->
            Promise.t_of_js Ojs.bool_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                    "exists") "__promisify__" [|(fs_PathLike_to_js x2190)|])
      end
    let (existsSync : path:fs_PathLike -> bool) =
      fun ~path:(x2192 : fs_PathLike) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "existsSync"
             [|(fs_PathLike_to_js x2192)|])
    module Constants =
      struct
        let (f_OK : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "F_OK")
        let (r_OK : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "R_OK")
        let (w_OK : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "W_OK")
        let (x_OK : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "X_OK")
        let (cOPYFILE_EXCL : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "COPYFILE_EXCL")
        let (cOPYFILE_FICLONE : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "COPYFILE_FICLONE")
        let (cOPYFILE_FICLONE_FORCE : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "COPYFILE_FICLONE_FORCE")
        let (o_RDONLY : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_RDONLY")
        let (o_WRONLY : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_WRONLY")
        let (o_RDWR : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_RDWR")
        let (o_CREAT : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_CREAT")
        let (o_EXCL : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_EXCL")
        let (o_NOCTTY : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_NOCTTY")
        let (o_TRUNC : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_TRUNC")
        let (o_APPEND : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_APPEND")
        let (o_DIRECTORY : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_DIRECTORY")
        let (o_NOATIME : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_NOATIME")
        let (o_NOFOLLOW : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_NOFOLLOW")
        let (o_SYNC : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_SYNC")
        let (o_DSYNC : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_DSYNC")
        let (o_SYMLINK : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_SYMLINK")
        let (o_DIRECT : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_DIRECT")
        let (o_NONBLOCK : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "O_NONBLOCK")
        let (s_IFMT : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IFMT")
        let (s_IFREG : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IFREG")
        let (s_IFDIR : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IFDIR")
        let (s_IFCHR : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IFCHR")
        let (s_IFBLK : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IFBLK")
        let (s_IFIFO : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IFIFO")
        let (s_IFLNK : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IFLNK")
        let (s_IFSOCK : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IFSOCK")
        let (s_IRWXU : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IRWXU")
        let (s_IRUSR : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IRUSR")
        let (s_IWUSR : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IWUSR")
        let (s_IXUSR : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IXUSR")
        let (s_IRWXG : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IRWXG")
        let (s_IRGRP : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IRGRP")
        let (s_IWGRP : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IWGRP")
        let (s_IXGRP : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IXGRP")
        let (s_IRWXO : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IRWXO")
        let (s_IROTH : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IROTH")
        let (s_IWOTH : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IWOTH")
        let (s_IXOTH : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "S_IXOTH")
        let (uV_FS_O_FILEMAP : float) =
          Ojs.float_of_js
            (Ojs.get_prop_ascii
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                  "constants") "UV_FS_O_FILEMAP")
      end
    let (access :
      path:fs_PathLike ->
        mode:float or_undefined -> callback:fs_NoParamCallback -> unit)
      =
      fun ~path:(x2193 : fs_PathLike) ->
        fun ~mode:(x2194 : float or_undefined) ->
          fun ~callback:(x2196 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "access"
                 [|(fs_PathLike_to_js x2193);(or_undefined_to_js
                                                Ojs.float_to_js x2194);(
                   fs_NoParamCallback_to_js x2196)|])
    let (access : path:fs_PathLike -> callback:fs_NoParamCallback -> unit) =
      fun ~path:(x2197 : fs_PathLike) ->
        fun ~callback:(x2198 : fs_NoParamCallback) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "access"
               [|(fs_PathLike_to_js x2197);(fs_NoParamCallback_to_js x2198)|])
    module Access =
      struct
        let (__promisify__ :
          path:fs_PathLike -> ?mode:float -> unit -> unit Promise.t) =
          fun ~path:(x2199 : fs_PathLike) ->
            fun ?mode:(x2200 : float option) ->
              fun () ->
                Promise.t_of_js Ojs.unit_of_js
                  (let x2203 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "access" in
                   Ojs.call (Ojs.get_prop_ascii x2203 "__promisify__")
                     "apply"
                     [|x2203;((let x2201 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2201 "push"
                                    [|(fs_PathLike_to_js x2199)|]);
                               (match x2200 with
                                | Some x2202 ->
                                    ignore
                                      (Ojs.call x2201 "push"
                                         [|(Ojs.float_to_js x2202)|])
                                | None -> ());
                               x2201))|])
      end
    let (accessSync : path:fs_PathLike -> ?mode:float -> unit -> unit) =
      fun ~path:(x2205 : fs_PathLike) ->
        fun ?mode:(x2206 : float option) ->
          fun () ->
            ignore
              (let x2209 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x2209 "accessSync") "apply"
                 [|x2209;((let x2207 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x2207 "push"
                                [|(fs_PathLike_to_js x2205)|]);
                           (match x2206 with
                            | Some x2208 ->
                                ignore
                                  (Ojs.call x2207 "push"
                                     [|(Ojs.float_to_js x2208)|])
                            | None -> ());
                           x2207))|])
    let (createReadStream :
      path:fs_PathLike ->
        ?options:anonymous_interface_13 or_string -> unit -> fs_ReadStream)
      =
      fun ~path:(x2210 : fs_PathLike) ->
        fun ?options:(x2211 : anonymous_interface_13 or_string option) ->
          fun () ->
            fs_ReadStream_of_js
              (let x2215 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x2215 "createReadStream") "apply"
                 [|x2215;((let x2212 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x2212 "push"
                                [|(fs_PathLike_to_js x2210)|]);
                           (match x2211 with
                            | Some x2213 ->
                                ignore
                                  (Ojs.call x2212 "push"
                                     [|(or_string_to_js
                                          anonymous_interface_13_to_js x2213)|])
                            | None -> ());
                           x2212))|])
    let (createWriteStream :
      path:fs_PathLike ->
        ?options:anonymous_interface_14 or_string -> unit -> fs_WriteStream)
      =
      fun ~path:(x2216 : fs_PathLike) ->
        fun ?options:(x2217 : anonymous_interface_14 or_string option) ->
          fun () ->
            fs_WriteStream_of_js
              (let x2221 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x2221 "createWriteStream")
                 "apply"
                 [|x2221;((let x2218 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x2218 "push"
                                [|(fs_PathLike_to_js x2216)|]);
                           (match x2217 with
                            | Some x2219 ->
                                ignore
                                  (Ojs.call x2218 "push"
                                     [|(or_string_to_js
                                          anonymous_interface_14_to_js x2219)|])
                            | None -> ());
                           x2218))|])
    let (fdatasync : fd:float -> callback:fs_NoParamCallback -> unit) =
      fun ~fd:(x2222 : float) ->
        fun ~callback:(x2223 : fs_NoParamCallback) ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "fdatasync"
               [|(Ojs.float_to_js x2222);(fs_NoParamCallback_to_js x2223)|])
    module Fdatasync =
      struct
        let (__promisify__ : fd:float -> unit Promise.t) =
          fun ~fd:(x2224 : float) ->
            Promise.t_of_js Ojs.unit_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                    "fdatasync") "__promisify__" [|(Ojs.float_to_js x2224)|])
      end
    let (fdatasyncSync : fd:float -> unit) =
      fun ~fd:(x2226 : float) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "fdatasyncSync"
             [|(Ojs.float_to_js x2226)|])
    let (copyFile :
      src:fs_PathLike ->
        dest:fs_PathLike -> callback:fs_NoParamCallback -> unit)
      =
      fun ~src:(x2227 : fs_PathLike) ->
        fun ~dest:(x2228 : fs_PathLike) ->
          fun ~callback:(x2229 : fs_NoParamCallback) ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "copyFile"
                 [|(fs_PathLike_to_js x2227);(fs_PathLike_to_js x2228);(
                   fs_NoParamCallback_to_js x2229)|])
    let (copyFile :
      src:fs_PathLike ->
        dest:fs_PathLike ->
          flags:float -> callback:fs_NoParamCallback -> unit)
      =
      fun ~src:(x2230 : fs_PathLike) ->
        fun ~dest:(x2231 : fs_PathLike) ->
          fun ~flags:(x2232 : float) ->
            fun ~callback:(x2233 : fs_NoParamCallback) ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "copyFile"
                   [|(fs_PathLike_to_js x2230);(fs_PathLike_to_js x2231);(
                     Ojs.float_to_js x2232);(fs_NoParamCallback_to_js x2233)|])
    module CopyFile =
      struct
        let (__promisify__ :
          src:fs_PathLike ->
            dst:fs_PathLike -> ?flags:float -> unit -> unit Promise.t)
          =
          fun ~src:(x2234 : fs_PathLike) ->
            fun ~dst:(x2235 : fs_PathLike) ->
              fun ?flags:(x2236 : float option) ->
                fun () ->
                  Promise.t_of_js Ojs.unit_of_js
                    (let x2239 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "fs") "copyFile" in
                     Ojs.call (Ojs.get_prop_ascii x2239 "__promisify__")
                       "apply"
                       [|x2239;((let x2237 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2237 "push"
                                      [|(fs_PathLike_to_js x2234)|]);
                                 ignore
                                   (Ojs.call x2237 "push"
                                      [|(fs_PathLike_to_js x2235)|]);
                                 (match x2236 with
                                  | Some x2238 ->
                                      ignore
                                        (Ojs.call x2237 "push"
                                           [|(Ojs.float_to_js x2238)|])
                                  | None -> ());
                                 x2237))|])
      end
    let (copyFileSync :
      src:fs_PathLike -> dest:fs_PathLike -> ?flags:float -> unit -> unit) =
      fun ~src:(x2241 : fs_PathLike) ->
        fun ~dest:(x2242 : fs_PathLike) ->
          fun ?flags:(x2243 : float option) ->
            fun () ->
              ignore
                (let x2246 = Ojs.get_prop_ascii Ojs.global "fs" in
                 Ojs.call (Ojs.get_prop_ascii x2246 "copyFileSync") "apply"
                   [|x2246;((let x2244 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2244 "push"
                                  [|(fs_PathLike_to_js x2241)|]);
                             ignore
                               (Ojs.call x2244 "push"
                                  [|(fs_PathLike_to_js x2242)|]);
                             (match x2243 with
                              | Some x2245 ->
                                  ignore
                                    (Ojs.call x2244 "push"
                                       [|(Ojs.float_to_js x2245)|])
                              | None -> ());
                             x2244))|])
    let (writev :
      fd:float ->
        buffers:NodeJS.ArrayBufferView.t_0 list ->
          cb:(err:NodeJS.ErrnoException.t_0 or_null ->
                bytesWritten:float ->
                  buffers:NodeJS.ArrayBufferView.t_0 list -> unit)
            -> unit)
      =
      fun ~fd:(x2247 : float) ->
        fun ~buffers:(x2248 : NodeJS.ArrayBufferView.t_0 list) ->
          fun
            ~cb:(x2250 :
                  err:NodeJS.ErrnoException.t_0 or_null ->
                    bytesWritten:float ->
                      buffers:NodeJS.ArrayBufferView.t_0 list -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "writev"
                 [|(Ojs.float_to_js x2247);(Ojs.list_to_js
                                              NodeJS.ArrayBufferView.t_0_to_js
                                              x2248);(Ojs.fun_to_js 3
                                                        (fun (x2251 : Ojs.t)
                                                           ->
                                                           fun
                                                             (x2253 : Ojs.t)
                                                             ->
                                                             fun
                                                               (x2254 :
                                                                 Ojs.t)
                                                               ->
                                                               x2250
                                                                 ~err:(
                                                                 or_null_of_js
                                                                   NodeJS.ErrnoException.t_0_of_js
                                                                   x2251)
                                                                 ~bytesWritten:(
                                                                 Ojs.float_of_js
                                                                   x2253)
                                                                 ~buffers:(
                                                                 Ojs.list_of_js
                                                                   NodeJS.ArrayBufferView.t_0_of_js
                                                                   x2254)))|])
    let (writev :
      fd:float ->
        buffers:NodeJS.ArrayBufferView.t_0 list ->
          position:float ->
            cb:(err:NodeJS.ErrnoException.t_0 or_null ->
                  bytesWritten:float ->
                    buffers:NodeJS.ArrayBufferView.t_0 list -> unit)
              -> unit)
      =
      fun ~fd:(x2256 : float) ->
        fun ~buffers:(x2257 : NodeJS.ArrayBufferView.t_0 list) ->
          fun ~position:(x2259 : float) ->
            fun
              ~cb:(x2260 :
                    err:NodeJS.ErrnoException.t_0 or_null ->
                      bytesWritten:float ->
                        buffers:NodeJS.ArrayBufferView.t_0 list -> unit)
              ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "writev"
                   [|(Ojs.float_to_js x2256);(Ojs.list_to_js
                                                NodeJS.ArrayBufferView.t_0_to_js
                                                x2257);(Ojs.float_to_js x2259);(
                     Ojs.fun_to_js 3
                       (fun (x2261 : Ojs.t) ->
                          fun (x2263 : Ojs.t) ->
                            fun (x2264 : Ojs.t) ->
                              x2260
                                ~err:(or_null_of_js
                                        NodeJS.ErrnoException.t_0_of_js x2261)
                                ~bytesWritten:(Ojs.float_of_js x2263)
                                ~buffers:(Ojs.list_of_js
                                            NodeJS.ArrayBufferView.t_0_of_js
                                            x2264)))|])
    module WriteVResult =
      struct
        type t = fs_WriteVResult
        let rec t_of_js : Ojs.t -> t =
          fun (x2267 : Ojs.t) -> fs_WriteVResult_of_js x2267
        and t_to_js : t -> Ojs.t =
          fun (x2266 : fs_WriteVResult) -> fs_WriteVResult_to_js x2266
        let (get_bytesWritten : t -> float) =
          fun (x2268 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x2268) "bytesWritten")
        let (set_bytesWritten : t -> float -> unit) =
          fun (x2269 : t) ->
            fun (x2270 : float) ->
              Ojs.set_prop_ascii (t_to_js x2269) "bytesWritten"
                (Ojs.float_to_js x2270)
        let (get_buffers : t -> NodeJS.ArrayBufferView.t_0 list) =
          fun (x2271 : t) ->
            Ojs.list_of_js NodeJS.ArrayBufferView.t_0_of_js
              (Ojs.get_prop_ascii (t_to_js x2271) "buffers")
        let (set_buffers : t -> NodeJS.ArrayBufferView.t_0 list -> unit) =
          fun (x2273 : t) ->
            fun (x2274 : NodeJS.ArrayBufferView.t_0 list) ->
              Ojs.set_prop_ascii (t_to_js x2273) "buffers"
                (Ojs.list_to_js NodeJS.ArrayBufferView.t_0_to_js x2274)
      end
    module Writev =
      struct
        let (__promisify__ :
          fd:float ->
            buffers:NodeJS.ArrayBufferView.t_0 list ->
              ?position:float -> unit -> fs_WriteVResult Promise.t)
          =
          fun ~fd:(x2276 : float) ->
            fun ~buffers:(x2277 : NodeJS.ArrayBufferView.t_0 list) ->
              fun ?position:(x2278 : float option) ->
                fun () ->
                  Promise.t_of_js fs_WriteVResult_of_js
                    (let x2282 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "fs") "writev" in
                     Ojs.call (Ojs.get_prop_ascii x2282 "__promisify__")
                       "apply"
                       [|x2282;((let x2279 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2279 "push"
                                      [|(Ojs.float_to_js x2276)|]);
                                 ignore
                                   (Ojs.call x2279 "push"
                                      [|(Ojs.list_to_js
                                           NodeJS.ArrayBufferView.t_0_to_js
                                           x2277)|]);
                                 (match x2278 with
                                  | Some x2280 ->
                                      ignore
                                        (Ojs.call x2279 "push"
                                           [|(Ojs.float_to_js x2280)|])
                                  | None -> ());
                                 x2279))|])
      end
    let (writevSync :
      fd:float ->
        buffers:NodeJS.ArrayBufferView.t_0 list ->
          ?position:float -> unit -> float)
      =
      fun ~fd:(x2284 : float) ->
        fun ~buffers:(x2285 : NodeJS.ArrayBufferView.t_0 list) ->
          fun ?position:(x2286 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2290 = Ojs.get_prop_ascii Ojs.global "fs" in
                 Ojs.call (Ojs.get_prop_ascii x2290 "writevSync") "apply"
                   [|x2290;((let x2287 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2287 "push"
                                  [|(Ojs.float_to_js x2284)|]);
                             ignore
                               (Ojs.call x2287 "push"
                                  [|(Ojs.list_to_js
                                       NodeJS.ArrayBufferView.t_0_to_js x2285)|]);
                             (match x2286 with
                              | Some x2288 ->
                                  ignore
                                    (Ojs.call x2287 "push"
                                       [|(Ojs.float_to_js x2288)|])
                              | None -> ());
                             x2287))|])
    let (readv :
      fd:float ->
        buffers:NodeJS.ArrayBufferView.t_0 list ->
          cb:(err:NodeJS.ErrnoException.t_0 or_null ->
                bytesRead:float ->
                  buffers:NodeJS.ArrayBufferView.t_0 list -> unit)
            -> unit)
      =
      fun ~fd:(x2291 : float) ->
        fun ~buffers:(x2292 : NodeJS.ArrayBufferView.t_0 list) ->
          fun
            ~cb:(x2294 :
                  err:NodeJS.ErrnoException.t_0 or_null ->
                    bytesRead:float ->
                      buffers:NodeJS.ArrayBufferView.t_0 list -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readv"
                 [|(Ojs.float_to_js x2291);(Ojs.list_to_js
                                              NodeJS.ArrayBufferView.t_0_to_js
                                              x2292);(Ojs.fun_to_js 3
                                                        (fun (x2295 : Ojs.t)
                                                           ->
                                                           fun
                                                             (x2297 : Ojs.t)
                                                             ->
                                                             fun
                                                               (x2298 :
                                                                 Ojs.t)
                                                               ->
                                                               x2294
                                                                 ~err:(
                                                                 or_null_of_js
                                                                   NodeJS.ErrnoException.t_0_of_js
                                                                   x2295)
                                                                 ~bytesRead:(
                                                                 Ojs.float_of_js
                                                                   x2297)
                                                                 ~buffers:(
                                                                 Ojs.list_of_js
                                                                   NodeJS.ArrayBufferView.t_0_of_js
                                                                   x2298)))|])
    let (readv :
      fd:float ->
        buffers:NodeJS.ArrayBufferView.t_0 list ->
          position:float ->
            cb:(err:NodeJS.ErrnoException.t_0 or_null ->
                  bytesRead:float ->
                    buffers:NodeJS.ArrayBufferView.t_0 list -> unit)
              -> unit)
      =
      fun ~fd:(x2300 : float) ->
        fun ~buffers:(x2301 : NodeJS.ArrayBufferView.t_0 list) ->
          fun ~position:(x2303 : float) ->
            fun
              ~cb:(x2304 :
                    err:NodeJS.ErrnoException.t_0 or_null ->
                      bytesRead:float ->
                        buffers:NodeJS.ArrayBufferView.t_0 list -> unit)
              ->
              ignore
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "readv"
                   [|(Ojs.float_to_js x2300);(Ojs.list_to_js
                                                NodeJS.ArrayBufferView.t_0_to_js
                                                x2301);(Ojs.float_to_js x2303);(
                     Ojs.fun_to_js 3
                       (fun (x2305 : Ojs.t) ->
                          fun (x2307 : Ojs.t) ->
                            fun (x2308 : Ojs.t) ->
                              x2304
                                ~err:(or_null_of_js
                                        NodeJS.ErrnoException.t_0_of_js x2305)
                                ~bytesRead:(Ojs.float_of_js x2307)
                                ~buffers:(Ojs.list_of_js
                                            NodeJS.ArrayBufferView.t_0_of_js
                                            x2308)))|])
    module ReadVResult =
      struct
        type t = fs_ReadVResult
        let rec t_of_js : Ojs.t -> t =
          fun (x2311 : Ojs.t) -> fs_ReadVResult_of_js x2311
        and t_to_js : t -> Ojs.t =
          fun (x2310 : fs_ReadVResult) -> fs_ReadVResult_to_js x2310
        let (get_bytesRead : t -> float) =
          fun (x2312 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2312) "bytesRead")
        let (set_bytesRead : t -> float -> unit) =
          fun (x2313 : t) ->
            fun (x2314 : float) ->
              Ojs.set_prop_ascii (t_to_js x2313) "bytesRead"
                (Ojs.float_to_js x2314)
        let (get_buffers : t -> NodeJS.ArrayBufferView.t_0 list) =
          fun (x2315 : t) ->
            Ojs.list_of_js NodeJS.ArrayBufferView.t_0_of_js
              (Ojs.get_prop_ascii (t_to_js x2315) "buffers")
        let (set_buffers : t -> NodeJS.ArrayBufferView.t_0 list -> unit) =
          fun (x2317 : t) ->
            fun (x2318 : NodeJS.ArrayBufferView.t_0 list) ->
              Ojs.set_prop_ascii (t_to_js x2317) "buffers"
                (Ojs.list_to_js NodeJS.ArrayBufferView.t_0_to_js x2318)
      end
    module Readv =
      struct
        let (__promisify__ :
          fd:float ->
            buffers:NodeJS.ArrayBufferView.t_0 list ->
              ?position:float -> unit -> fs_ReadVResult Promise.t)
          =
          fun ~fd:(x2320 : float) ->
            fun ~buffers:(x2321 : NodeJS.ArrayBufferView.t_0 list) ->
              fun ?position:(x2322 : float option) ->
                fun () ->
                  Promise.t_of_js fs_ReadVResult_of_js
                    (let x2326 =
                       Ojs.get_prop_ascii
                         (Ojs.get_prop_ascii Ojs.global "fs") "readv" in
                     Ojs.call (Ojs.get_prop_ascii x2326 "__promisify__")
                       "apply"
                       [|x2326;((let x2323 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2323 "push"
                                      [|(Ojs.float_to_js x2320)|]);
                                 ignore
                                   (Ojs.call x2323 "push"
                                      [|(Ojs.list_to_js
                                           NodeJS.ArrayBufferView.t_0_to_js
                                           x2321)|]);
                                 (match x2322 with
                                  | Some x2324 ->
                                      ignore
                                        (Ojs.call x2323 "push"
                                           [|(Ojs.float_to_js x2324)|])
                                  | None -> ());
                                 x2323))|])
      end
    let (readvSync :
      fd:float ->
        buffers:NodeJS.ArrayBufferView.t_0 list ->
          ?position:float -> unit -> float)
      =
      fun ~fd:(x2328 : float) ->
        fun ~buffers:(x2329 : NodeJS.ArrayBufferView.t_0 list) ->
          fun ?position:(x2330 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2334 = Ojs.get_prop_ascii Ojs.global "fs" in
                 Ojs.call (Ojs.get_prop_ascii x2334 "readvSync") "apply"
                   [|x2334;((let x2331 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2331 "push"
                                  [|(Ojs.float_to_js x2328)|]);
                             ignore
                               (Ojs.call x2331 "push"
                                  [|(Ojs.list_to_js
                                       NodeJS.ArrayBufferView.t_0_to_js x2329)|]);
                             (match x2330 with
                              | Some x2332 ->
                                  ignore
                                    (Ojs.call x2331 "push"
                                       [|(Ojs.float_to_js x2332)|])
                              | None -> ());
                             x2331))|])
    module OpenDirOptions =
      struct
        type t = fs_OpenDirOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x2336 : Ojs.t) -> fs_OpenDirOptions_of_js x2336
        and t_to_js : t -> Ojs.t =
          fun (x2335 : fs_OpenDirOptions) -> fs_OpenDirOptions_to_js x2335
        let (get_encoding : t -> BufferEncoding.t_0) =
          fun (x2337 : t) ->
            BufferEncoding.t_0_of_js
              (Ojs.get_prop_ascii (t_to_js x2337) "encoding")
        let (set_encoding : t -> BufferEncoding.t_0 -> unit) =
          fun (x2338 : t) ->
            fun (x2339 : BufferEncoding.t_0) ->
              Ojs.set_prop_ascii (t_to_js x2338) "encoding"
                (BufferEncoding.t_0_to_js x2339)
        let (get_bufferSize : t -> float) =
          fun (x2340 : t) ->
            Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2340) "bufferSize")
        let (set_bufferSize : t -> float -> unit) =
          fun (x2341 : t) ->
            fun (x2342 : float) ->
              Ojs.set_prop_ascii (t_to_js x2341) "bufferSize"
                (Ojs.float_to_js x2342)
      end
    let (opendirSync :
      path:string -> ?options:fs_OpenDirOptions -> unit -> fs_Dir) =
      fun ~path:(x2343 : string) ->
        fun ?options:(x2344 : fs_OpenDirOptions option) ->
          fun () ->
            fs_Dir_of_js
              (let x2347 = Ojs.get_prop_ascii Ojs.global "fs" in
               Ojs.call (Ojs.get_prop_ascii x2347 "opendirSync") "apply"
                 [|x2347;((let x2345 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x2345 "push"
                                [|(Ojs.string_to_js x2343)|]);
                           (match x2344 with
                            | Some x2346 ->
                                ignore
                                  (Ojs.call x2345 "push"
                                     [|(fs_OpenDirOptions_to_js x2346)|])
                            | None -> ());
                           x2345))|])
    let (opendir :
      path:string ->
        cb:(err:NodeJS.ErrnoException.t_0 or_null -> dir:fs_Dir -> unit) ->
          unit)
      =
      fun ~path:(x2348 : string) ->
        fun
          ~cb:(x2349 :
                err:NodeJS.ErrnoException.t_0 or_null -> dir:fs_Dir -> unit)
          ->
          ignore
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "opendir"
               [|(Ojs.string_to_js x2348);(Ojs.fun_to_js 2
                                             (fun (x2350 : Ojs.t) ->
                                                fun (x2352 : Ojs.t) ->
                                                  x2349
                                                    ~err:(or_null_of_js
                                                            NodeJS.ErrnoException.t_0_of_js
                                                            x2350)
                                                    ~dir:(fs_Dir_of_js x2352)))|])
    let (opendir :
      path:string ->
        options:fs_OpenDirOptions ->
          cb:(err:NodeJS.ErrnoException.t_0 or_null -> dir:fs_Dir -> unit) ->
            unit)
      =
      fun ~path:(x2353 : string) ->
        fun ~options:(x2354 : fs_OpenDirOptions) ->
          fun
            ~cb:(x2355 :
                  err:NodeJS.ErrnoException.t_0 or_null -> dir:fs_Dir -> unit)
            ->
            ignore
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "fs") "opendir"
                 [|(Ojs.string_to_js x2353);(fs_OpenDirOptions_to_js x2354);(
                   Ojs.fun_to_js 2
                     (fun (x2356 : Ojs.t) ->
                        fun (x2358 : Ojs.t) ->
                          x2355
                            ~err:(or_null_of_js
                                    NodeJS.ErrnoException.t_0_of_js x2356)
                            ~dir:(fs_Dir_of_js x2358)))|])
    module Opendir =
      struct
        let (__promisify__ :
          path:string ->
            ?options:fs_OpenDirOptions -> unit -> fs_Dir Promise.t)
          =
          fun ~path:(x2359 : string) ->
            fun ?options:(x2360 : fs_OpenDirOptions option) ->
              fun () ->
                Promise.t_of_js fs_Dir_of_js
                  (let x2363 =
                     Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fs")
                       "opendir" in
                   Ojs.call (Ojs.get_prop_ascii x2363 "__promisify__")
                     "apply"
                     [|x2363;((let x2361 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2361 "push"
                                    [|(Ojs.string_to_js x2359)|]);
                               (match x2360 with
                                | Some x2362 ->
                                    ignore
                                      (Ojs.call x2361 "push"
                                         [|(fs_OpenDirOptions_to_js x2362)|])
                                | None -> ());
                               x2361))|])
      end
    module BigIntStats =
      struct
        type t = fs_BigIntStats
        let rec t_of_js : Ojs.t -> t =
          fun (x2366 : Ojs.t) -> fs_BigIntStats_of_js x2366
        and t_to_js : t -> Ojs.t =
          fun (x2365 : fs_BigIntStats) -> fs_BigIntStats_to_js x2365
        let (cast : t -> bigint fs_StatsBase) =
          fun (x2367 : t) -> fs_StatsBase_of_js bigint_of_js (t_to_js x2367)
      end
    module BigIntStats =
      struct
        type t = fs_BigIntStats
        let rec t_of_js : Ojs.t -> t =
          fun (x2370 : Ojs.t) -> fs_BigIntStats_of_js x2370
        and t_to_js : t -> Ojs.t =
          fun (x2369 : fs_BigIntStats) -> fs_BigIntStats_to_js x2369
        let (get_atimeNs : t -> bigint) =
          fun (x2371 : t) ->
            bigint_of_js (Ojs.get_prop_ascii (t_to_js x2371) "atimeNs")
        let (set_atimeNs : t -> bigint -> unit) =
          fun (x2372 : t) ->
            fun (x2373 : bigint) ->
              Ojs.set_prop_ascii (t_to_js x2372) "atimeNs"
                (bigint_to_js x2373)
        let (get_mtimeNs : t -> bigint) =
          fun (x2374 : t) ->
            bigint_of_js (Ojs.get_prop_ascii (t_to_js x2374) "mtimeNs")
        let (set_mtimeNs : t -> bigint -> unit) =
          fun (x2375 : t) ->
            fun (x2376 : bigint) ->
              Ojs.set_prop_ascii (t_to_js x2375) "mtimeNs"
                (bigint_to_js x2376)
        let (get_ctimeNs : t -> bigint) =
          fun (x2377 : t) ->
            bigint_of_js (Ojs.get_prop_ascii (t_to_js x2377) "ctimeNs")
        let (set_ctimeNs : t -> bigint -> unit) =
          fun (x2378 : t) ->
            fun (x2379 : bigint) ->
              Ojs.set_prop_ascii (t_to_js x2378) "ctimeNs"
                (bigint_to_js x2379)
        let (get_birthtimeNs : t -> bigint) =
          fun (x2380 : t) ->
            bigint_of_js (Ojs.get_prop_ascii (t_to_js x2380) "birthtimeNs")
        let (set_birthtimeNs : t -> bigint -> unit) =
          fun (x2381 : t) ->
            fun (x2382 : bigint) ->
              Ojs.set_prop_ascii (t_to_js x2381) "birthtimeNs"
                (bigint_to_js x2382)
      end
    module BigIntOptions =
      struct
        type t = fs_BigIntOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x2384 : Ojs.t) -> fs_BigIntOptions_of_js x2384
        and t_to_js : t -> Ojs.t =
          fun (x2383 : fs_BigIntOptions) -> fs_BigIntOptions_to_js x2383
        let (get_bigint : t -> [ `L_b_true ]) =
          fun (x2385 : t) ->
            let x2386 = Ojs.get_prop_ascii (t_to_js x2385) "bigint" in
            match Ojs.bool_of_js x2386 with
            | true -> `L_b_true
            | _ -> assert false
        let (set_bigint : t -> [ `L_b_true ] -> unit) =
          fun (x2387 : t) ->
            fun (x2388 : [ `L_b_true ]) ->
              Ojs.set_prop_ascii (t_to_js x2387) "bigint"
                (match x2388 with | `L_b_true -> Ojs.string_to_js "LBTrue")
      end
    module StatOptions =
      struct
        type t = fs_StatOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x2390 : Ojs.t) -> fs_StatOptions_of_js x2390
        and t_to_js : t -> Ojs.t =
          fun (x2389 : fs_StatOptions) -> fs_StatOptions_to_js x2389
        let (get_bigint : t -> bool) =
          fun (x2391 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x2391) "bigint")
        let (set_bigint : t -> bool -> unit) =
          fun (x2392 : t) ->
            fun (x2393 : bool) ->
              Ojs.set_prop_ascii (t_to_js x2392) "bigint"
                (Ojs.bool_to_js x2393)
      end
  end
