[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_baselib
module Internal =
  struct
    module AnonymousInterfaces =
      struct
        type anonymous_interface_0 = [ `anonymous_interface_0 ] intf
        let rec anonymous_interface_0_of_js : Ojs.t -> anonymous_interface_0
          = Obj.magic
        and anonymous_interface_0_to_js : anonymous_interface_0 -> Ojs.t =
          Obj.magic
        type anonymous_interface_1 = [ `anonymous_interface_1 ] intf
        let rec anonymous_interface_1_of_js : Ojs.t -> anonymous_interface_1
          = Obj.magic
        and anonymous_interface_1_to_js : anonymous_interface_1 -> Ojs.t =
          Obj.magic
        type anonymous_interface_2 = [ `anonymous_interface_2 ] intf
        let rec anonymous_interface_2_of_js : Ojs.t -> anonymous_interface_2
          = Obj.magic
        and anonymous_interface_2_to_js : anonymous_interface_2 -> Ojs.t =
          Obj.magic
        type anonymous_interface_3 = [ `anonymous_interface_3 ] intf
        let rec anonymous_interface_3_of_js : Ojs.t -> anonymous_interface_3
          = Obj.magic
        and anonymous_interface_3_to_js : anonymous_interface_3 -> Ojs.t =
          Obj.magic
        type anonymous_interface_4 = [ `anonymous_interface_4 ] intf
        let rec anonymous_interface_4_of_js : Ojs.t -> anonymous_interface_4
          = Obj.magic
        and anonymous_interface_4_to_js : anonymous_interface_4 -> Ojs.t =
          Obj.magic
        type ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5 =
          [ `anonymous_interface_5 ] intf
        let rec anonymous_interface_5_of_js :
          'A 'A0 'A1 'A2 'A3 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'A3) ->
                      (Ojs.t -> 'R) ->
                        Ojs.t ->
                          ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5
          =
          fun _A ->
            fun _A0 -> fun _A1 -> fun _A2 -> fun _A3 -> fun _R -> Obj.magic
        and anonymous_interface_5_to_js :
          'A 'A0 'A1 'A2 'A3 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('A3 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5 ->
                          Ojs.t
          =
          fun _A ->
            fun _A0 -> fun _A1 -> fun _A2 -> fun _A3 -> fun _R -> Obj.magic
        type ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6 =
          [ `anonymous_interface_6 ] intf
        let rec anonymous_interface_6_of_js :
          'A 'A0 'A1 'A2 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'R) ->
                      Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6
          = fun _A -> fun _A0 -> fun _A1 -> fun _A2 -> fun _R -> Obj.magic
        and anonymous_interface_6_to_js :
          'A 'A0 'A1 'A2 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('R -> Ojs.t) ->
                      ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6 -> Ojs.t
          = fun _A -> fun _A0 -> fun _A1 -> fun _A2 -> fun _R -> Obj.magic
        type ('A, 'A0, 'A1, 'R) anonymous_interface_7 =
          [ `anonymous_interface_7 ] intf
        let rec anonymous_interface_7_of_js :
          'A 'A0 'A1 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'R) ->
                    Ojs.t -> ('A, 'A0, 'A1, 'R) anonymous_interface_7
          = fun _A -> fun _A0 -> fun _A1 -> fun _R -> Obj.magic
        and anonymous_interface_7_to_js :
          'A 'A0 'A1 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('R -> Ojs.t) ->
                    ('A, 'A0, 'A1, 'R) anonymous_interface_7 -> Ojs.t
          = fun _A -> fun _A0 -> fun _A1 -> fun _R -> Obj.magic
        type ('A, 'A0, 'R) anonymous_interface_8 =
          [ `anonymous_interface_8 ] intf
        let rec anonymous_interface_8_of_js :
          'A 'A0 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) anonymous_interface_8
          = fun _A -> fun _A0 -> fun _R -> Obj.magic
        and anonymous_interface_8_to_js :
          'A 'A0 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('R -> Ojs.t) -> ('A, 'A0, 'R) anonymous_interface_8 -> Ojs.t
          = fun _A -> fun _A0 -> fun _R -> Obj.magic
        type ('A, 'R) anonymous_interface_9 = [ `anonymous_interface_9 ] intf
        let rec anonymous_interface_9_of_js :
          'A 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) anonymous_interface_9
          = fun _A -> fun _R -> Obj.magic
        and anonymous_interface_9_to_js :
          'A 'R .
            ('A -> Ojs.t) ->
              ('R -> Ojs.t) -> ('A, 'R) anonymous_interface_9 -> Ojs.t
          = fun _A -> fun _R -> Obj.magic
        type ('A, 'T) anonymous_interface_10 =
          [ `anonymous_interface_10 ] intf
        let rec anonymous_interface_10_of_js :
          'A 'T .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) anonymous_interface_10
          = fun _A -> fun _T -> Obj.magic
        and anonymous_interface_10_to_js :
          'A 'T .
            ('A -> Ojs.t) ->
              ('T -> Ojs.t) -> ('A, 'T) anonymous_interface_10 -> Ojs.t
          = fun _A -> fun _T -> Obj.magic
        type ('AX, 'R) anonymous_interface_11 =
          [ `anonymous_interface_11 ] intf
        let rec anonymous_interface_11_of_js :
          'AX 'R .
            (Ojs.t -> 'AX) ->
              (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) anonymous_interface_11
          = fun _AX -> fun _R -> Obj.magic
        and anonymous_interface_11_to_js :
          'AX 'R .
            ('AX -> Ojs.t) ->
              ('R -> Ojs.t) -> ('AX, 'R) anonymous_interface_11 -> Ojs.t
          = fun _AX -> fun _R -> Obj.magic
        type 'T anonymous_interface_12 = [ `anonymous_interface_12 ] intf
        let rec anonymous_interface_12_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T anonymous_interface_12 =
          fun _T -> Obj.magic
        and anonymous_interface_12_to_js :
          'T . ('T -> Ojs.t) -> 'T anonymous_interface_12 -> Ojs.t =
          fun _T -> Obj.magic
      end
    module Types =
      struct
        open AnonymousInterfaces
        type 'T _Array = [ `Array of 'T ] intf
        and _ArrayBuffer = [ `ArrayBuffer ] intf
        and _ArrayBufferConstructor = [ `ArrayBufferConstructor ] intf
        and _ArrayBufferTypes = [ `ArrayBufferTypes ] intf
        and _ArrayBufferView = [ `ArrayBufferView ] intf
        and _ArrayConstructor = [ `ArrayConstructor ] intf
        and _Boolean = [ `Boolean ] intf
        and _BooleanConstructor = [ `BooleanConstructor ] intf
        and _CallableFunction = [ `CallableFunction  | `Function ] intf
        and _ClassDecorator = [ `ClassDecorator ] intf
        and 'T _ConcatArray = [ `ConcatArray of 'T ] intf
        and 'T _ConstructorParameters = any
        and _DataView = [ `DataView ] intf
        and _DataViewConstructor = [ `DataViewConstructor ] intf
        and _Date = [ `Date ] intf
        and _DateConstructor = [ `DateConstructor ] intf
        and _Error = [ `Error ] intf
        and _ErrorConstructor = [ `ErrorConstructor ] intf
        and _EvalError = [ `EvalError  | `Error ] intf
        and _EvalErrorConstructor =
          [ `EvalErrorConstructor  | `ErrorConstructor ] intf
        and ('T, 'U) _Exclude = any
        and ('T, 'U) _Extract = any
        and _Float32Array = [ `Float32Array ] intf
        and _Float32ArrayConstructor = [ `Float32ArrayConstructor ] intf
        and _Float64Array = [ `Float64Array ] intf
        and _Float64ArrayConstructor = [ `Float64ArrayConstructor ] intf
        and _Function = untyped_function
        and _FunctionConstructor = [ `FunctionConstructor ] intf
        and _IArguments = [ `IArguments ] intf
        and _ImportMeta = [ `ImportMeta ] intf
        and 'T _InstanceType = any
        and _Int16Array = [ `Int16Array ] intf
        and _Int16ArrayConstructor = [ `Int16ArrayConstructor ] intf
        and _Int32Array = [ `Int32Array ] intf
        and _Int32ArrayConstructor = [ `Int32ArrayConstructor ] intf
        and _Int8Array = [ `Int8Array ] intf
        and _Int8ArrayConstructor = [ `Int8ArrayConstructor ] intf
        and _Intl_Collator = [ `Intl_Collator ] intf
        and _Intl_CollatorOptions = [ `Intl_CollatorOptions ] intf
        and _Intl_DateTimeFormat = [ `Intl_DateTimeFormat ] intf
        and _Intl_DateTimeFormatOptions =
          [ `Intl_DateTimeFormatOptions ] intf
        and _Intl_NumberFormat = [ `Intl_NumberFormat ] intf
        and _Intl_NumberFormatOptions = [ `Intl_NumberFormatOptions ] intf
        and _Intl_ResolvedCollatorOptions =
          [ `Intl_ResolvedCollatorOptions ] intf
        and _Intl_ResolvedDateTimeFormatOptions =
          [ `Intl_ResolvedDateTimeFormatOptions ] intf
        and _Intl_ResolvedNumberFormatOptions =
          [ `Intl_ResolvedNumberFormatOptions ] intf
        and _JSON = [ `JSON ] intf
        and _Math = [ `Math ] intf
        and _MethodDecorator = [ `MethodDecorator ] intf
        and _NewableFunction = [ `NewableFunction  | `Function ] intf
        and 'T _NonNullable = any
        and _Number = [ `Number ] intf
        and _NumberConstructor = [ `NumberConstructor ] intf
        and _Object = untyped_object
        and _ObjectConstructor = [ `ObjectConstructor ] intf
        and ('T, 'K) _Omit = ('T, (any, 'K) _Exclude) _Pick
        and 'T _OmitThisParameter = any
        and _ParameterDecorator = [ `ParameterDecorator ] intf
        and 'T _Parameters = any
        and 'T _Partial = any
        and ('T, 'K) _Pick = any
        and 'T _Promise = [ `Promise of 'T ] intf
        and _PropertyDecorator = [ `PropertyDecorator ] intf
        and _PropertyDescriptor = [ `PropertyDescriptor ] intf
        and _PropertyDescriptorMap = [ `PropertyDescriptorMap ] intf
        and _PropertyKey = symbol or_string or_number
        and _RangeError = [ `RangeError  | `Error ] intf
        and _RangeErrorConstructor =
          [ `RangeErrorConstructor  | `ErrorConstructor ] intf
        and 'T _Readonly = any
        and 'T _ReadonlyArray = [ `ReadonlyArray of 'T ] intf
        and ('K, 'T) _Record = any
        and _ReferenceError = [ `ReferenceError  | `Error ] intf
        and _ReferenceErrorConstructor =
          [ `ReferenceErrorConstructor  | `ErrorConstructor ] intf
        and _RegExp = regexp
        and _RegExpConstructor = [ `RegExpConstructor ] intf
        and _RegExpExecArray = [ `RegExpExecArray  | `Array of string ] intf
        and _RegExpMatchArray =
          [ `RegExpMatchArray  | `Array of string ] intf
        and 'T _Required = any
        and 'T _ReturnType = any
        and _String = [ `String ] intf
        and _StringConstructor = [ `StringConstructor ] intf
        and _Symbol = symbol
        and _SyntaxError = [ `SyntaxError  | `Error ] intf
        and _SyntaxErrorConstructor =
          [ `SyntaxErrorConstructor  | `ErrorConstructor ] intf
        and _TemplateStringsArray =
          [ `TemplateStringsArray  | `ReadonlyArray of string ] intf
        and 'T _ThisParameterType = any
        and 'T _ThisType = [ `ThisType of 'T ] intf
        and _TypeError = [ `TypeError  | `Error ] intf
        and _TypeErrorConstructor =
          [ `TypeErrorConstructor  | `ErrorConstructor ] intf
        and 'T _TypedPropertyDescriptor =
          [ `TypedPropertyDescriptor of 'T ] intf
        and _URIError = [ `URIError  | `Error ] intf
        and _URIErrorConstructor =
          [ `URIErrorConstructor  | `ErrorConstructor ] intf
        and _Uint16Array = [ `Uint16Array ] intf
        and _Uint16ArrayConstructor = [ `Uint16ArrayConstructor ] intf
        and _Uint32Array = [ `Uint32Array ] intf
        and _Uint32ArrayConstructor = [ `Uint32ArrayConstructor ] intf
        and _Uint8Array = [ `Uint8Array ] intf
        and _Uint8ArrayConstructor = [ `Uint8ArrayConstructor ] intf
        and _Uint8ClampedArray = [ `Uint8ClampedArray ] intf
        and _Uint8ClampedArrayConstructor =
          [ `Uint8ClampedArrayConstructor ] intf
        let rec _Array_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Array =
          fun _T -> Obj.magic
        and _Array_to_js : 'T . ('T -> Ojs.t) -> 'T _Array -> Ojs.t =
          fun _T -> Obj.magic
        and _ArrayBuffer_of_js : Ojs.t -> _ArrayBuffer = Obj.magic
        and _ArrayBuffer_to_js : _ArrayBuffer -> Ojs.t = Obj.magic
        and _ArrayBufferConstructor_of_js : Ojs.t -> _ArrayBufferConstructor
          = Obj.magic
        and _ArrayBufferConstructor_to_js : _ArrayBufferConstructor -> Ojs.t
          = Obj.magic
        and _ArrayBufferTypes_of_js : Ojs.t -> _ArrayBufferTypes = Obj.magic
        and _ArrayBufferTypes_to_js : _ArrayBufferTypes -> Ojs.t = Obj.magic
        and _ArrayBufferView_of_js : Ojs.t -> _ArrayBufferView = Obj.magic
        and _ArrayBufferView_to_js : _ArrayBufferView -> Ojs.t = Obj.magic
        and _ArrayConstructor_of_js : Ojs.t -> _ArrayConstructor = Obj.magic
        and _ArrayConstructor_to_js : _ArrayConstructor -> Ojs.t = Obj.magic
        and _Boolean_of_js : Ojs.t -> _Boolean = Obj.magic
        and _Boolean_to_js : _Boolean -> Ojs.t = Obj.magic
        and _BooleanConstructor_of_js : Ojs.t -> _BooleanConstructor =
          Obj.magic
        and _BooleanConstructor_to_js : _BooleanConstructor -> Ojs.t =
          Obj.magic
        and _CallableFunction_of_js : Ojs.t -> _CallableFunction = Obj.magic
        and _CallableFunction_to_js : _CallableFunction -> Ojs.t = Obj.magic
        and _ClassDecorator_of_js : Ojs.t -> _ClassDecorator = Obj.magic
        and _ClassDecorator_to_js : _ClassDecorator -> Ojs.t = Obj.magic
        and _ConcatArray_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ConcatArray =
          fun _T -> Obj.magic
        and _ConcatArray_to_js :
          'T . ('T -> Ojs.t) -> 'T _ConcatArray -> Ojs.t =
          fun _T -> Obj.magic
        and _ConstructorParameters_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ConstructorParameters = fun
          (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x2 : Ojs.t) -> any_of_js x2
        and _ConstructorParameters_to_js :
          'T . ('T -> Ojs.t) -> 'T _ConstructorParameters -> Ojs.t = fun
          (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x1 : any) -> any_to_js x1
        and _DataView_of_js : Ojs.t -> _DataView = Obj.magic
        and _DataView_to_js : _DataView -> Ojs.t = Obj.magic
        and _DataViewConstructor_of_js : Ojs.t -> _DataViewConstructor =
          Obj.magic
        and _DataViewConstructor_to_js : _DataViewConstructor -> Ojs.t =
          Obj.magic
        and _Date_of_js : Ojs.t -> _Date = Obj.magic
        and _Date_to_js : _Date -> Ojs.t = Obj.magic
        and _DateConstructor_of_js : Ojs.t -> _DateConstructor = Obj.magic
        and _DateConstructor_to_js : _DateConstructor -> Ojs.t = Obj.magic
        and _Error_of_js : Ojs.t -> _Error = Obj.magic
        and _Error_to_js : _Error -> Ojs.t = Obj.magic
        and _ErrorConstructor_of_js : Ojs.t -> _ErrorConstructor = Obj.magic
        and _ErrorConstructor_to_js : _ErrorConstructor -> Ojs.t = Obj.magic
        and _EvalError_of_js : Ojs.t -> _EvalError = Obj.magic
        and _EvalError_to_js : _EvalError -> Ojs.t = Obj.magic
        and _EvalErrorConstructor_of_js : Ojs.t -> _EvalErrorConstructor =
          Obj.magic
        and _EvalErrorConstructor_to_js : _EvalErrorConstructor -> Ojs.t =
          Obj.magic
        and _Exclude_of_js :
          'T 'U .
            (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) _Exclude
          = fun (type __T) -> fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x4 : Ojs.t) -> any_of_js x4
        and _Exclude_to_js :
          'T 'U .
            ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) _Exclude -> Ojs.t
          = fun (type __T) -> fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) -> fun (x3 : any) -> any_to_js x3
        and _Extract_of_js :
          'T 'U .
            (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) _Extract
          = fun (type __T) -> fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x6 : Ojs.t) -> any_of_js x6
        and _Extract_to_js :
          'T 'U .
            ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) _Extract -> Ojs.t
          = fun (type __T) -> fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) -> fun (x5 : any) -> any_to_js x5
        and _Float32Array_of_js : Ojs.t -> _Float32Array = Obj.magic
        and _Float32Array_to_js : _Float32Array -> Ojs.t = Obj.magic
        and _Float32ArrayConstructor_of_js :
          Ojs.t -> _Float32ArrayConstructor = Obj.magic
        and _Float32ArrayConstructor_to_js :
          _Float32ArrayConstructor -> Ojs.t = Obj.magic
        and _Float64Array_of_js : Ojs.t -> _Float64Array = Obj.magic
        and _Float64Array_to_js : _Float64Array -> Ojs.t = Obj.magic
        and _Float64ArrayConstructor_of_js :
          Ojs.t -> _Float64ArrayConstructor = Obj.magic
        and _Float64ArrayConstructor_to_js :
          _Float64ArrayConstructor -> Ojs.t = Obj.magic
        and _Function_of_js : Ojs.t -> _Function =
          fun (x8 : Ojs.t) -> untyped_function_of_js x8
        and _Function_to_js : _Function -> Ojs.t =
          fun (x7 : untyped_function) -> untyped_function_to_js x7
        and _FunctionConstructor_of_js : Ojs.t -> _FunctionConstructor =
          Obj.magic
        and _FunctionConstructor_to_js : _FunctionConstructor -> Ojs.t =
          Obj.magic
        and _IArguments_of_js : Ojs.t -> _IArguments = Obj.magic
        and _IArguments_to_js : _IArguments -> Ojs.t = Obj.magic
        and _ImportMeta_of_js : Ojs.t -> _ImportMeta = Obj.magic
        and _ImportMeta_to_js : _ImportMeta -> Ojs.t = Obj.magic
        and _InstanceType_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _InstanceType = fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x10 : Ojs.t) -> any_of_js x10
        and _InstanceType_to_js :
          'T . ('T -> Ojs.t) -> 'T _InstanceType -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x9 : any) -> any_to_js x9
        and _Int16Array_of_js : Ojs.t -> _Int16Array = Obj.magic
        and _Int16Array_to_js : _Int16Array -> Ojs.t = Obj.magic
        and _Int16ArrayConstructor_of_js : Ojs.t -> _Int16ArrayConstructor =
          Obj.magic
        and _Int16ArrayConstructor_to_js : _Int16ArrayConstructor -> Ojs.t =
          Obj.magic
        and _Int32Array_of_js : Ojs.t -> _Int32Array = Obj.magic
        and _Int32Array_to_js : _Int32Array -> Ojs.t = Obj.magic
        and _Int32ArrayConstructor_of_js : Ojs.t -> _Int32ArrayConstructor =
          Obj.magic
        and _Int32ArrayConstructor_to_js : _Int32ArrayConstructor -> Ojs.t =
          Obj.magic
        and _Int8Array_of_js : Ojs.t -> _Int8Array = Obj.magic
        and _Int8Array_to_js : _Int8Array -> Ojs.t = Obj.magic
        and _Int8ArrayConstructor_of_js : Ojs.t -> _Int8ArrayConstructor =
          Obj.magic
        and _Int8ArrayConstructor_to_js : _Int8ArrayConstructor -> Ojs.t =
          Obj.magic
        and _Intl_Collator_of_js : Ojs.t -> _Intl_Collator = Obj.magic
        and _Intl_Collator_to_js : _Intl_Collator -> Ojs.t = Obj.magic
        and _Intl_CollatorOptions_of_js : Ojs.t -> _Intl_CollatorOptions =
          Obj.magic
        and _Intl_CollatorOptions_to_js : _Intl_CollatorOptions -> Ojs.t =
          Obj.magic
        and _Intl_DateTimeFormat_of_js : Ojs.t -> _Intl_DateTimeFormat =
          Obj.magic
        and _Intl_DateTimeFormat_to_js : _Intl_DateTimeFormat -> Ojs.t =
          Obj.magic
        and _Intl_DateTimeFormatOptions_of_js :
          Ojs.t -> _Intl_DateTimeFormatOptions = Obj.magic
        and _Intl_DateTimeFormatOptions_to_js :
          _Intl_DateTimeFormatOptions -> Ojs.t = Obj.magic
        and _Intl_NumberFormat_of_js : Ojs.t -> _Intl_NumberFormat =
          Obj.magic
        and _Intl_NumberFormat_to_js : _Intl_NumberFormat -> Ojs.t =
          Obj.magic
        and _Intl_NumberFormatOptions_of_js :
          Ojs.t -> _Intl_NumberFormatOptions = Obj.magic
        and _Intl_NumberFormatOptions_to_js :
          _Intl_NumberFormatOptions -> Ojs.t = Obj.magic
        and _Intl_ResolvedCollatorOptions_of_js :
          Ojs.t -> _Intl_ResolvedCollatorOptions = Obj.magic
        and _Intl_ResolvedCollatorOptions_to_js :
          _Intl_ResolvedCollatorOptions -> Ojs.t = Obj.magic
        and _Intl_ResolvedDateTimeFormatOptions_of_js :
          Ojs.t -> _Intl_ResolvedDateTimeFormatOptions = Obj.magic
        and _Intl_ResolvedDateTimeFormatOptions_to_js :
          _Intl_ResolvedDateTimeFormatOptions -> Ojs.t = Obj.magic
        and _Intl_ResolvedNumberFormatOptions_of_js :
          Ojs.t -> _Intl_ResolvedNumberFormatOptions = Obj.magic
        and _Intl_ResolvedNumberFormatOptions_to_js :
          _Intl_ResolvedNumberFormatOptions -> Ojs.t = Obj.magic
        and _JSON_of_js : Ojs.t -> _JSON = Obj.magic
        and _JSON_to_js : _JSON -> Ojs.t = Obj.magic
        and _Math_of_js : Ojs.t -> _Math = Obj.magic
        and _Math_to_js : _Math -> Ojs.t = Obj.magic
        and _MethodDecorator_of_js : Ojs.t -> _MethodDecorator = Obj.magic
        and _MethodDecorator_to_js : _MethodDecorator -> Ojs.t = Obj.magic
        and _NewableFunction_of_js : Ojs.t -> _NewableFunction = Obj.magic
        and _NewableFunction_to_js : _NewableFunction -> Ojs.t = Obj.magic
        and _NonNullable_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _NonNullable = fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x12 : Ojs.t) -> any_of_js x12
        and _NonNullable_to_js :
          'T . ('T -> Ojs.t) -> 'T _NonNullable -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x11 : any) -> any_to_js x11
        and _Number_of_js : Ojs.t -> _Number = Obj.magic
        and _Number_to_js : _Number -> Ojs.t = Obj.magic
        and _NumberConstructor_of_js : Ojs.t -> _NumberConstructor =
          Obj.magic
        and _NumberConstructor_to_js : _NumberConstructor -> Ojs.t =
          Obj.magic
        and _Object_of_js : Ojs.t -> _Object =
          fun (x14 : Ojs.t) -> untyped_object_of_js x14
        and _Object_to_js : _Object -> Ojs.t =
          fun (x13 : untyped_object) -> untyped_object_to_js x13
        and _ObjectConstructor_of_js : Ojs.t -> _ObjectConstructor =
          Obj.magic
        and _ObjectConstructor_to_js : _ObjectConstructor -> Ojs.t =
          Obj.magic
        and _Omit_of_js :
          'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) _Omit =
          fun (type __T) -> fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x20 : Ojs.t) ->
                _Pick_of_js __T_of_js
                  (fun (x22 : Ojs.t) ->
                     _Exclude_of_js any_of_js __K_of_js x22) x20
        and _Omit_to_js :
          'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) _Omit -> Ojs.t =
          fun (type __T) -> fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x15 : (__T, (any, __K) _Exclude) _Pick) ->
                _Pick_to_js __T_to_js
                  (fun (x17 : (any, __K) _Exclude) ->
                     _Exclude_to_js any_to_js __K_to_js x17) x15
        and _OmitThisParameter_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _OmitThisParameter = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x26 : Ojs.t) -> any_of_js x26
        and _OmitThisParameter_to_js :
          'T . ('T -> Ojs.t) -> 'T _OmitThisParameter -> Ojs.t = fun (type
          __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x25 : any) -> any_to_js x25
        and _ParameterDecorator_of_js : Ojs.t -> _ParameterDecorator =
          Obj.magic
        and _ParameterDecorator_to_js : _ParameterDecorator -> Ojs.t =
          Obj.magic
        and _Parameters_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Parameters
          = fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x28 : Ojs.t) -> any_of_js x28
        and _Parameters_to_js : 'T . ('T -> Ojs.t) -> 'T _Parameters -> Ojs.t
          = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x27 : any) -> any_to_js x27
        and _Partial_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Partial = fun
          (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x30 : Ojs.t) -> any_of_js x30
        and _Partial_to_js : 'T . ('T -> Ojs.t) -> 'T _Partial -> Ojs.t = fun
          (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x29 : any) -> any_to_js x29
        and _Pick_of_js :
          'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) _Pick =
          fun (type __T) -> fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x32 : Ojs.t) -> any_of_js x32
        and _Pick_to_js :
          'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) _Pick -> Ojs.t =
          fun (type __T) -> fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x31 : any) -> any_to_js x31
        and _Promise_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Promise =
          fun _T -> Obj.magic
        and _Promise_to_js : 'T . ('T -> Ojs.t) -> 'T _Promise -> Ojs.t =
          fun _T -> Obj.magic
        and _PropertyDecorator_of_js : Ojs.t -> _PropertyDecorator =
          Obj.magic
        and _PropertyDecorator_to_js : _PropertyDecorator -> Ojs.t =
          Obj.magic
        and _PropertyDescriptor_of_js : Ojs.t -> _PropertyDescriptor =
          Obj.magic
        and _PropertyDescriptor_to_js : _PropertyDescriptor -> Ojs.t =
          Obj.magic
        and _PropertyDescriptorMap_of_js : Ojs.t -> _PropertyDescriptorMap =
          Obj.magic
        and _PropertyDescriptorMap_to_js : _PropertyDescriptorMap -> Ojs.t =
          Obj.magic
        and _PropertyKey_of_js : Ojs.t -> _PropertyKey =
          fun (x36 : Ojs.t) ->
            or_number_of_js
              (fun (x37 : Ojs.t) -> or_string_of_js symbol_of_js x37) x36
        and _PropertyKey_to_js : _PropertyKey -> Ojs.t =
          fun (x33 : symbol or_string or_number) ->
            or_number_to_js
              (fun (x34 : symbol or_string) ->
                 or_string_to_js symbol_to_js x34) x33
        and _RangeError_of_js : Ojs.t -> _RangeError = Obj.magic
        and _RangeError_to_js : _RangeError -> Ojs.t = Obj.magic
        and _RangeErrorConstructor_of_js : Ojs.t -> _RangeErrorConstructor =
          Obj.magic
        and _RangeErrorConstructor_to_js : _RangeErrorConstructor -> Ojs.t =
          Obj.magic
        and _Readonly_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Readonly =
          fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x40 : Ojs.t) -> any_of_js x40
        and _Readonly_to_js : 'T . ('T -> Ojs.t) -> 'T _Readonly -> Ojs.t =
          fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x39 : any) -> any_to_js x39
        and _ReadonlyArray_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ReadonlyArray =
          fun _T -> Obj.magic
        and _ReadonlyArray_to_js :
          'T . ('T -> Ojs.t) -> 'T _ReadonlyArray -> Ojs.t =
          fun _T -> Obj.magic
        and _Record_of_js :
          'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) _Record
          = fun (type __K) -> fun (type __T) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x42 : Ojs.t) -> any_of_js x42
        and _Record_to_js :
          'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) _Record -> Ojs.t
          = fun (type __K) -> fun (type __T) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x41 : any) -> any_to_js x41
        and _ReferenceError_of_js : Ojs.t -> _ReferenceError = Obj.magic
        and _ReferenceError_to_js : _ReferenceError -> Ojs.t = Obj.magic
        and _ReferenceErrorConstructor_of_js :
          Ojs.t -> _ReferenceErrorConstructor = Obj.magic
        and _ReferenceErrorConstructor_to_js :
          _ReferenceErrorConstructor -> Ojs.t = Obj.magic
        and _RegExp_of_js : Ojs.t -> _RegExp =
          fun (x44 : Ojs.t) -> regexp_of_js x44
        and _RegExp_to_js : _RegExp -> Ojs.t =
          fun (x43 : regexp) -> regexp_to_js x43
        and _RegExpConstructor_of_js : Ojs.t -> _RegExpConstructor =
          Obj.magic
        and _RegExpConstructor_to_js : _RegExpConstructor -> Ojs.t =
          Obj.magic
        and _RegExpExecArray_of_js : Ojs.t -> _RegExpExecArray = Obj.magic
        and _RegExpExecArray_to_js : _RegExpExecArray -> Ojs.t = Obj.magic
        and _RegExpMatchArray_of_js : Ojs.t -> _RegExpMatchArray = Obj.magic
        and _RegExpMatchArray_to_js : _RegExpMatchArray -> Ojs.t = Obj.magic
        and _Required_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Required =
          fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x46 : Ojs.t) -> any_of_js x46
        and _Required_to_js : 'T . ('T -> Ojs.t) -> 'T _Required -> Ojs.t =
          fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x45 : any) -> any_to_js x45
        and _ReturnType_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ReturnType
          = fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x48 : Ojs.t) -> any_of_js x48
        and _ReturnType_to_js : 'T . ('T -> Ojs.t) -> 'T _ReturnType -> Ojs.t
          = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x47 : any) -> any_to_js x47
        and _String_of_js : Ojs.t -> _String = Obj.magic
        and _String_to_js : _String -> Ojs.t = Obj.magic
        and _StringConstructor_of_js : Ojs.t -> _StringConstructor =
          Obj.magic
        and _StringConstructor_to_js : _StringConstructor -> Ojs.t =
          Obj.magic
        and _Symbol_of_js : Ojs.t -> _Symbol =
          fun (x50 : Ojs.t) -> symbol_of_js x50
        and _Symbol_to_js : _Symbol -> Ojs.t =
          fun (x49 : symbol) -> symbol_to_js x49
        and _SyntaxError_of_js : Ojs.t -> _SyntaxError = Obj.magic
        and _SyntaxError_to_js : _SyntaxError -> Ojs.t = Obj.magic
        and _SyntaxErrorConstructor_of_js : Ojs.t -> _SyntaxErrorConstructor
          = Obj.magic
        and _SyntaxErrorConstructor_to_js : _SyntaxErrorConstructor -> Ojs.t
          = Obj.magic
        and _TemplateStringsArray_of_js : Ojs.t -> _TemplateStringsArray =
          Obj.magic
        and _TemplateStringsArray_to_js : _TemplateStringsArray -> Ojs.t =
          Obj.magic
        and _ThisParameterType_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ThisParameterType = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x52 : Ojs.t) -> any_of_js x52
        and _ThisParameterType_to_js :
          'T . ('T -> Ojs.t) -> 'T _ThisParameterType -> Ojs.t = fun (type
          __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x51 : any) -> any_to_js x51
        and _ThisType_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ThisType =
          fun _T -> Obj.magic
        and _ThisType_to_js : 'T . ('T -> Ojs.t) -> 'T _ThisType -> Ojs.t =
          fun _T -> Obj.magic
        and _TypeError_of_js : Ojs.t -> _TypeError = Obj.magic
        and _TypeError_to_js : _TypeError -> Ojs.t = Obj.magic
        and _TypeErrorConstructor_of_js : Ojs.t -> _TypeErrorConstructor =
          Obj.magic
        and _TypeErrorConstructor_to_js : _TypeErrorConstructor -> Ojs.t =
          Obj.magic
        and _TypedPropertyDescriptor_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _TypedPropertyDescriptor =
          fun _T -> Obj.magic
        and _TypedPropertyDescriptor_to_js :
          'T . ('T -> Ojs.t) -> 'T _TypedPropertyDescriptor -> Ojs.t =
          fun _T -> Obj.magic
        and _URIError_of_js : Ojs.t -> _URIError = Obj.magic
        and _URIError_to_js : _URIError -> Ojs.t = Obj.magic
        and _URIErrorConstructor_of_js : Ojs.t -> _URIErrorConstructor =
          Obj.magic
        and _URIErrorConstructor_to_js : _URIErrorConstructor -> Ojs.t =
          Obj.magic
        and _Uint16Array_of_js : Ojs.t -> _Uint16Array = Obj.magic
        and _Uint16Array_to_js : _Uint16Array -> Ojs.t = Obj.magic
        and _Uint16ArrayConstructor_of_js : Ojs.t -> _Uint16ArrayConstructor
          = Obj.magic
        and _Uint16ArrayConstructor_to_js : _Uint16ArrayConstructor -> Ojs.t
          = Obj.magic
        and _Uint32Array_of_js : Ojs.t -> _Uint32Array = Obj.magic
        and _Uint32Array_to_js : _Uint32Array -> Ojs.t = Obj.magic
        and _Uint32ArrayConstructor_of_js : Ojs.t -> _Uint32ArrayConstructor
          = Obj.magic
        and _Uint32ArrayConstructor_to_js : _Uint32ArrayConstructor -> Ojs.t
          = Obj.magic
        and _Uint8Array_of_js : Ojs.t -> _Uint8Array = Obj.magic
        and _Uint8Array_to_js : _Uint8Array -> Ojs.t = Obj.magic
        and _Uint8ArrayConstructor_of_js : Ojs.t -> _Uint8ArrayConstructor =
          Obj.magic
        and _Uint8ArrayConstructor_to_js : _Uint8ArrayConstructor -> Ojs.t =
          Obj.magic
        and _Uint8ClampedArray_of_js : Ojs.t -> _Uint8ClampedArray =
          Obj.magic
        and _Uint8ClampedArray_to_js : _Uint8ClampedArray -> Ojs.t =
          Obj.magic
        and _Uint8ClampedArrayConstructor_of_js :
          Ojs.t -> _Uint8ClampedArrayConstructor = Obj.magic
        and _Uint8ClampedArrayConstructor_to_js :
          _Uint8ClampedArrayConstructor -> Ojs.t = Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
open Types
let (naN : float) = Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : float) =
  Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : x:string -> any) =
  fun ~x:(x53 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x53)|])
let (parseInt : s:string -> ?radix:float -> unit -> float) =
  fun ~s:(x54 : string) ->
    fun ?radix:(x55 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x58 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x58 "parseInt") "apply"
             [|x58;((let x56 =
                       Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                         [||] in
                     ignore (Ojs.call x56 "push" [|(Ojs.string_to_js x54)|]);
                     (match x55 with
                      | Some x57 ->
                          ignore
                            (Ojs.call x56 "push" [|(Ojs.float_to_js x57)|])
                      | None -> ());
                     x56))|])
let (parseFloat : string:string -> float) =
  fun ~string:(x59 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x59)|])
let (isNaN : number:float -> bool) =
  fun ~number:(x60 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x60)|])
let (isFinite : number:float -> bool) =
  fun ~number:(x61 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x61)|])
let (decodeURI : encodedURI:string -> string) =
  fun ~encodedURI:(x62 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x62)|])
let (decodeURIComponent : encodedURIComponent:string -> string) =
  fun ~encodedURIComponent:(x63 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x63)|])
let (encodeURI : uri:string -> string) =
  fun ~uri:(x64 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x64)|])
let (encodeURIComponent : uriComponent:bool or_string or_number -> string) =
  fun ~uriComponent:(x65 : bool or_string or_number) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(or_number_to_js
              (fun (x66 : bool or_string) ->
                 or_string_to_js Ojs.bool_to_js x66) x65)|])
let (escape : string:string -> string) =
  fun ~string:(x68 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x68)|])
let (unescape : string:string -> string) =
  fun ~string:(x69 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x69)|])
module Symbol =
  struct
    type t = _Symbol
    let rec t_of_js : Ojs.t -> t = fun (x71 : Ojs.t) -> _Symbol_of_js x71
    and t_to_js : t -> Ojs.t = fun (x70 : _Symbol) -> _Symbol_to_js x70
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x73 : Ojs.t) -> t_of_js x73
    and t_0_to_js : t_0 -> Ojs.t = fun (x72 : t) -> t_to_js x72
    let (toString : t -> string) =
      fun (x74 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x74) "toString" [||])
    let (valueOf : t -> symbol) =
      fun (x75 : t) -> symbol_of_js (Ojs.call (t_to_js x75) "valueOf" [||])
  end
module PropertyKey =
  struct
    type t = _PropertyKey
    let rec t_of_js : Ojs.t -> t =
      fun (x77 : Ojs.t) -> _PropertyKey_of_js x77
    and t_to_js : t -> Ojs.t =
      fun (x76 : _PropertyKey) -> _PropertyKey_to_js x76
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x79 : Ojs.t) -> t_of_js x79
    and t_0_to_js : t_0 -> Ojs.t = fun (x78 : t) -> t_to_js x78
  end
module PropertyDescriptor =
  struct
    type t = _PropertyDescriptor
    let rec t_of_js : Ojs.t -> t =
      fun (x81 : Ojs.t) -> _PropertyDescriptor_of_js x81
    and t_to_js : t -> Ojs.t =
      fun (x80 : _PropertyDescriptor) -> _PropertyDescriptor_to_js x80
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x83 : Ojs.t) -> t_of_js x83
    and t_0_to_js : t_0 -> Ojs.t = fun (x82 : t) -> t_to_js x82
    let (get_configurable : t -> bool) =
      fun (x84 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x84) "configurable")
    let (set_configurable : t -> bool -> unit) =
      fun (x85 : t) ->
        fun (x86 : bool) ->
          Ojs.set_prop_ascii (t_to_js x85) "configurable"
            (Ojs.bool_to_js x86)
    let (get_enumerable : t -> bool) =
      fun (x87 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x87) "enumerable")
    let (set_enumerable : t -> bool -> unit) =
      fun (x88 : t) ->
        fun (x89 : bool) ->
          Ojs.set_prop_ascii (t_to_js x88) "enumerable" (Ojs.bool_to_js x89)
    let (get_value : t -> any) =
      fun (x90 : t) -> any_of_js (Ojs.get_prop_ascii (t_to_js x90) "value")
    let (set_value : t -> any -> unit) =
      fun (x91 : t) ->
        fun (x92 : any) ->
          Ojs.set_prop_ascii (t_to_js x91) "value" (any_to_js x92)
    let (get_writable : t -> bool) =
      fun (x93 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x93) "writable")
    let (set_writable : t -> bool -> unit) =
      fun (x94 : t) ->
        fun (x95 : bool) ->
          Ojs.set_prop_ascii (t_to_js x94) "writable" (Ojs.bool_to_js x95)
    let (get_ : t -> any) =
      fun (x96 : t) -> any_of_js (Ojs.call (t_to_js x96) "get" [||])
    let (set_ : t -> v:any -> unit) =
      fun (x98 : t) ->
        fun ~v:(x97 : any) ->
          ignore (Ojs.call (t_to_js x98) "set" [|(any_to_js x97)|])
  end
module PropertyDescriptorMap =
  struct
    type t = _PropertyDescriptorMap
    let rec t_of_js : Ojs.t -> t =
      fun (x100 : Ojs.t) -> _PropertyDescriptorMap_of_js x100
    and t_to_js : t -> Ojs.t =
      fun (x99 : _PropertyDescriptorMap) -> _PropertyDescriptorMap_to_js x99
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x102 : Ojs.t) -> t_of_js x102
    and t_0_to_js : t_0 -> Ojs.t = fun (x101 : t) -> t_to_js x101
    let (get : t -> string -> _PropertyDescriptor) =
      fun (x103 : t) ->
        fun (x104 : string) ->
          _PropertyDescriptor_of_js
            (Ojs.get_prop (t_to_js x103) (Ojs.string_to_js x104))
    let (set : t -> string -> _PropertyDescriptor -> unit) =
      fun (x105 : t) ->
        fun (x106 : string) ->
          fun (x107 : _PropertyDescriptor) ->
            Ojs.set_prop (t_to_js x105) (Ojs.string_to_js x106)
              (_PropertyDescriptor_to_js x107)
  end
module Object =
  struct
    type t = _Object
    let rec t_of_js : Ojs.t -> t = fun (x109 : Ojs.t) -> _Object_of_js x109
    and t_to_js : t -> Ojs.t = fun (x108 : _Object) -> _Object_to_js x108
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x111 : Ojs.t) -> t_of_js x111
    and t_0_to_js : t_0 -> Ojs.t = fun (x110 : t) -> t_to_js x110
    let (get_constructor : t -> _Function) =
      fun (x112 : t) ->
        _Function_of_js (Ojs.get_prop_ascii (t_to_js x112) "constructor")
    let (set_constructor : t -> _Function -> unit) =
      fun (x113 : t) ->
        fun (x114 : _Function) ->
          Ojs.set_prop_ascii (t_to_js x113) "constructor"
            (_Function_to_js x114)
    let (toString : t -> string) =
      fun (x115 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x115) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x116 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x116) "toLocaleString" [||])
    let (valueOf : t -> t) =
      fun (x117 : t) -> t_of_js (Ojs.call (t_to_js x117) "valueOf" [||])
    let (hasOwnProperty : t -> v:_PropertyKey -> bool) =
      fun (x119 : t) ->
        fun ~v:(x118 : _PropertyKey) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x119) "hasOwnProperty"
               [|(_PropertyKey_to_js x118)|])
    let (isPrototypeOf : t -> v:t -> bool) =
      fun (x121 : t) ->
        fun ~v:(x120 : t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x121) "isPrototypeOf" [|(t_to_js x120)|])
    let (propertyIsEnumerable : t -> v:_PropertyKey -> bool) =
      fun (x123 : t) ->
        fun ~v:(x122 : _PropertyKey) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x123) "propertyIsEnumerable"
               [|(_PropertyKey_to_js x122)|])
    let (create : ?value:any -> unit -> _Object) =
      fun ?value:(x124 : any option) ->
        fun () ->
          _Object_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x125 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x124 with
                 | Some x126 ->
                     ignore (Ojs.call x125 "push" [|(any_to_js x126)|])
                 | None -> ());
                x125))
    let (getPrototypeOf : o:any -> any) =
      fun ~o:(x127 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x127)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:_PropertyKey -> _PropertyDescriptor or_undefined) =
      fun ~o:(x128 : any) ->
        fun ~p:(x129 : _PropertyKey) ->
          or_undefined_of_js _PropertyDescriptor_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x128);(_PropertyKey_to_js x129)|])
    let (getOwnPropertyNames : o:any -> string list) =
      fun ~o:(x131 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x131)|])
    let (create_ : o:untyped_object or_null -> any) =
      fun ~o:(x133 : untyped_object or_null) ->
        any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Object")
             [|(or_null_to_js untyped_object_to_js x133)|])
    let (create_' :
      o:untyped_object or_null ->
        properties:(_PropertyDescriptorMap, any _ThisType) intersection2 ->
          any)
      =
      fun ~o:(x135 : untyped_object or_null) ->
        fun
          ~properties:(x137 :
                        (_PropertyDescriptorMap, any _ThisType) intersection2)
          ->
          any_of_js
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Object")
               [|(or_null_to_js untyped_object_to_js x135);(intersection2_to_js
                                                              _PropertyDescriptorMap_to_js
                                                              (fun
                                                                 (x139 :
                                                                   any
                                                                    _ThisType)
                                                                 ->
                                                                 _ThisType_to_js
                                                                   any_to_js
                                                                   x139) x137)|])
    let (defineProperty :
      t ->
        o:any ->
          p:_PropertyKey ->
            attributes:(_PropertyDescriptor, any _ThisType) intersection2 ->
              any)
      =
      fun (x141 : t) ->
        fun ~o:(x142 : any) ->
          fun ~p:(x143 : _PropertyKey) ->
            fun
              ~attributes:(x144 :
                            (_PropertyDescriptor, any _ThisType)
                              intersection2)
              ->
              any_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                   "defineProperty"
                   [|(t_to_js x141);(any_to_js x142);(_PropertyKey_to_js x143);(
                     intersection2_to_js _PropertyDescriptor_to_js
                       (fun (x146 : any _ThisType) ->
                          _ThisType_to_js any_to_js x146) x144)|])
    let (defineProperties :
      t ->
        o:any ->
          properties:(_PropertyDescriptorMap, any _ThisType) intersection2 ->
            any)
      =
      fun (x148 : t) ->
        fun ~o:(x149 : any) ->
          fun
            ~properties:(x150 :
                          (_PropertyDescriptorMap, any _ThisType)
                            intersection2)
            ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperties"
                 [|(t_to_js x148);(any_to_js x149);(intersection2_to_js
                                                      _PropertyDescriptorMap_to_js
                                                      (fun
                                                         (x152 :
                                                           any _ThisType)
                                                         ->
                                                         _ThisType_to_js
                                                           any_to_js x152)
                                                      x150)|])
    let (seal : o:'T -> 'T) =
      fun ~o:(x154 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x154)|])
    let (freeze : a:'T list -> 'T list) =
      fun ~a:(x155 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Ojs.list_to_js Obj.magic x155)|])
    let (freeze' : f:'T -> 'T) =
      fun ~f:(x158 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x158)|])
    let (freeze'' : o:'T -> 'T _Readonly) =
      fun ~o:(x159 : 'T) ->
        _Readonly_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x159)|])
    let (preventExtensions : o:'T -> 'T) =
      fun ~o:(x161 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x161)|])
    let (isSealed : o:any -> bool) =
      fun ~o:(x162 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x162)|])
    let (isFrozen : o:any -> bool) =
      fun ~o:(x163 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x163)|])
    let (isExtensible : o:any -> bool) =
      fun ~o:(x164 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x164)|])
    let (keys : o:untyped_object -> string list) =
      fun ~o:(x165 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x165)|])
  end
module ObjectConstructor =
  struct
    type t = _ObjectConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x168 : Ojs.t) -> _ObjectConstructor_of_js x168
    and t_to_js : t -> Ojs.t =
      fun (x167 : _ObjectConstructor) -> _ObjectConstructor_to_js x167
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x170 : Ojs.t) -> t_of_js x170
    and t_0_to_js : t_0 -> Ojs.t = fun (x169 : t) -> t_to_js x169
    let (create : t -> ?value:any -> unit -> _Object) =
      fun (x174 : t) ->
        fun ?value:(x171 : any option) ->
          fun () ->
            _Object_of_js
              (Ojs.new_obj_arr (t_to_js x174)
                 (let x172 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x171 with
                   | Some x173 ->
                       ignore (Ojs.call x172 "push" [|(any_to_js x173)|])
                   | None -> ());
                  x172))
    let (apply : t -> any) =
      fun (x175 : t) -> any_of_js (Ojs.apply (t_to_js x175) [||])
    let (apply' : t -> value:any -> any) =
      fun (x177 : t) ->
        fun ~value:(x176 : any) ->
          any_of_js (Ojs.apply (t_to_js x177) [|(any_to_js x176)|])
    let (get_prototype : t -> _Object) =
      fun (x178 : t) ->
        _Object_of_js (Ojs.get_prop_ascii (t_to_js x178) "prototype")
    let (getPrototypeOf : t -> o:any -> any) =
      fun (x180 : t) ->
        fun ~o:(x179 : any) ->
          any_of_js
            (Ojs.call (t_to_js x180) "getPrototypeOf" [|(any_to_js x179)|])
    let (getOwnPropertyDescriptor :
      t -> o:any -> p:_PropertyKey -> _PropertyDescriptor or_undefined) =
      fun (x183 : t) ->
        fun ~o:(x181 : any) ->
          fun ~p:(x182 : _PropertyKey) ->
            or_undefined_of_js _PropertyDescriptor_of_js
              (Ojs.call (t_to_js x183) "getOwnPropertyDescriptor"
                 [|(any_to_js x181);(_PropertyKey_to_js x182)|])
    let (getOwnPropertyNames : t -> o:any -> string list) =
      fun (x186 : t) ->
        fun ~o:(x185 : any) ->
          Ojs.list_of_js Ojs.string_of_js
            (Ojs.call (t_to_js x186) "getOwnPropertyNames"
               [|(any_to_js x185)|])
    let (create_ : t -> o:untyped_object or_null -> any) =
      fun (x190 : t) ->
        fun ~o:(x188 : untyped_object or_null) ->
          any_of_js
            (Ojs.call (t_to_js x190) "create"
               [|(or_null_to_js untyped_object_to_js x188)|])
    let (create_' :
      t ->
        o:untyped_object or_null ->
          properties:(_PropertyDescriptorMap, any _ThisType) intersection2 ->
            any)
      =
      fun (x197 : t) ->
        fun ~o:(x191 : untyped_object or_null) ->
          fun
            ~properties:(x193 :
                          (_PropertyDescriptorMap, any _ThisType)
                            intersection2)
            ->
            any_of_js
              (Ojs.call (t_to_js x197) "create"
                 [|(or_null_to_js untyped_object_to_js x191);(intersection2_to_js
                                                                _PropertyDescriptorMap_to_js
                                                                (fun
                                                                   (x195 :
                                                                    any
                                                                    _ThisType)
                                                                   ->
                                                                   _ThisType_to_js
                                                                    any_to_js
                                                                    x195)
                                                                x193)|])
    let (defineProperty :
      t ->
        o:any ->
          p:_PropertyKey ->
            attributes:(_PropertyDescriptor, any _ThisType) intersection2 ->
              any)
      =
      fun (x204 : t) ->
        fun ~o:(x198 : any) ->
          fun ~p:(x199 : _PropertyKey) ->
            fun
              ~attributes:(x200 :
                            (_PropertyDescriptor, any _ThisType)
                              intersection2)
              ->
              any_of_js
                (Ojs.call (t_to_js x204) "defineProperty"
                   [|(any_to_js x198);(_PropertyKey_to_js x199);(intersection2_to_js
                                                                   _PropertyDescriptor_to_js
                                                                   (fun
                                                                    (x202 :
                                                                    any
                                                                    _ThisType)
                                                                    ->
                                                                    _ThisType_to_js
                                                                    any_to_js
                                                                    x202)
                                                                   x200)|])
    let (defineProperties :
      t ->
        o:any ->
          properties:(_PropertyDescriptorMap, any _ThisType) intersection2 ->
            any)
      =
      fun (x210 : t) ->
        fun ~o:(x205 : any) ->
          fun
            ~properties:(x206 :
                          (_PropertyDescriptorMap, any _ThisType)
                            intersection2)
            ->
            any_of_js
              (Ojs.call (t_to_js x210) "defineProperties"
                 [|(any_to_js x205);(intersection2_to_js
                                       _PropertyDescriptorMap_to_js
                                       (fun (x208 : any _ThisType) ->
                                          _ThisType_to_js any_to_js x208)
                                       x206)|])
    let (seal : t -> o:'T -> 'T) =
      fun (x212 : t) ->
        fun ~o:(x211 : 'T) ->
          Obj.magic (Ojs.call (t_to_js x212) "seal" [|(Obj.magic x211)|])
    let (freeze : t -> a:'T list -> 'T list) =
      fun (x215 : t) ->
        fun ~a:(x213 : 'T list) ->
          Ojs.list_of_js Obj.magic
            (Ojs.call (t_to_js x215) "freeze"
               [|(Ojs.list_to_js Obj.magic x213)|])
    let (freeze' : t -> f:'T -> 'T) =
      fun (x218 : t) ->
        fun ~f:(x217 : 'T) ->
          Obj.magic (Ojs.call (t_to_js x218) "freeze" [|(Obj.magic x217)|])
    let (freeze'' : t -> o:'T -> 'T _Readonly) =
      fun (x220 : t) ->
        fun ~o:(x219 : 'T) ->
          _Readonly_of_js Obj.magic
            (Ojs.call (t_to_js x220) "freeze" [|(Obj.magic x219)|])
    let (preventExtensions : t -> o:'T -> 'T) =
      fun (x223 : t) ->
        fun ~o:(x222 : 'T) ->
          Obj.magic
            (Ojs.call (t_to_js x223) "preventExtensions" [|(Obj.magic x222)|])
    let (isSealed : t -> o:any -> bool) =
      fun (x225 : t) ->
        fun ~o:(x224 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x225) "isSealed" [|(any_to_js x224)|])
    let (isFrozen : t -> o:any -> bool) =
      fun (x227 : t) ->
        fun ~o:(x226 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x227) "isFrozen" [|(any_to_js x226)|])
    let (isExtensible : t -> o:any -> bool) =
      fun (x229 : t) ->
        fun ~o:(x228 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x229) "isExtensible" [|(any_to_js x228)|])
    let (keys : t -> o:untyped_object -> string list) =
      fun (x231 : t) ->
        fun ~o:(x230 : untyped_object) ->
          Ojs.list_of_js Ojs.string_of_js
            (Ojs.call (t_to_js x231) "keys" [|(untyped_object_to_js x230)|])
  end
let (object_ : _ObjectConstructor) =
  _ObjectConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Object")
module Function =
  struct
    type t = _Function
    let rec t_of_js : Ojs.t -> t = fun (x234 : Ojs.t) -> _Function_of_js x234
    and t_to_js : t -> Ojs.t = fun (x233 : _Function) -> _Function_to_js x233
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x236 : Ojs.t) -> t_of_js x236
    and t_0_to_js : t_0 -> Ojs.t = fun (x235 : t) -> t_to_js x235
    let (apply_ : t -> this:t -> thisArg:any -> ?argArray:any -> unit -> any)
      =
      fun (x242 : t) ->
        fun ~this:(x237 : t) ->
          fun ~thisArg:(x238 : any) ->
            fun ?argArray:(x239 : any option) ->
              fun () ->
                any_of_js
                  (let x243 = t_to_js x242 in
                   Ojs.call (Ojs.get_prop_ascii x243 "apply") "apply"
                     [|x243;((let x240 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x240 "push" [|(t_to_js x237)|]);
                              ignore
                                (Ojs.call x240 "push" [|(any_to_js x238)|]);
                              (match x239 with
                               | Some x241 ->
                                   ignore
                                     (Ojs.call x240 "push"
                                        [|(any_to_js x241)|])
                               | None -> ());
                              x240))|])
    let (call : t -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x249 : t) ->
        fun ~this:(x244 : t) ->
          fun ~thisArg:(x245 : any) ->
            fun ~argArray:(x246 : any list) ->
              any_of_js
                (let x250 = t_to_js x249 in
                 Ojs.call (Ojs.get_prop_ascii x250 "call") "apply"
                   [|x250;((let x247 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore (Ojs.call x247 "push" [|(t_to_js x244)|]);
                            ignore
                              (Ojs.call x247 "push" [|(any_to_js x245)|]);
                            List.iter
                              (fun (x248 : any) ->
                                 ignore
                                   (Ojs.call x247 "push" [|(any_to_js x248)|]))
                              x246;
                            x247))|])
    let (bind : t -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x256 : t) ->
        fun ~this:(x251 : t) ->
          fun ~thisArg:(x252 : any) ->
            fun ~argArray:(x253 : any list) ->
              any_of_js
                (let x257 = t_to_js x256 in
                 Ojs.call (Ojs.get_prop_ascii x257 "bind") "apply"
                   [|x257;((let x254 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore (Ojs.call x254 "push" [|(t_to_js x251)|]);
                            ignore
                              (Ojs.call x254 "push" [|(any_to_js x252)|]);
                            List.iter
                              (fun (x255 : any) ->
                                 ignore
                                   (Ojs.call x254 "push" [|(any_to_js x255)|]))
                              x253;
                            x254))|])
    let (toString : t -> string) =
      fun (x258 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x258) "toString" [||])
    let (get_prototype : t -> any) =
      fun (x259 : t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js x259) "prototype")
    let (set_prototype : t -> any -> unit) =
      fun (x260 : t) ->
        fun (x261 : any) ->
          Ojs.set_prop_ascii (t_to_js x260) "prototype" (any_to_js x261)
    let (get_length : t -> float) =
      fun (x262 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x262) "length")
    let (get_arguments : t -> any) =
      fun (x263 : t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js x263) "arguments")
    let (set_arguments : t -> any -> unit) =
      fun (x264 : t) ->
        fun (x265 : any) ->
          Ojs.set_prop_ascii (t_to_js x264) "arguments" (any_to_js x265)
    let (get_caller : t -> t) =
      fun (x266 : t) -> t_of_js (Ojs.get_prop_ascii (t_to_js x266) "caller")
    let (set_caller : t -> t -> unit) =
      fun (x267 : t) ->
        fun (x268 : t) ->
          Ojs.set_prop_ascii (t_to_js x267) "caller" (t_to_js x268)
    let (create : args:string list -> _Function) =
      fun ~args:(x269 : string list) ->
        _Function_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x270 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x271 : string) ->
                   ignore (Ojs.call x270 "push" [|(Ojs.string_to_js x271)|]))
                x269;
              x270))
  end
module FunctionConstructor =
  struct
    type t = _FunctionConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x273 : Ojs.t) -> _FunctionConstructor_of_js x273
    and t_to_js : t -> Ojs.t =
      fun (x272 : _FunctionConstructor) -> _FunctionConstructor_to_js x272
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x275 : Ojs.t) -> t_of_js x275
    and t_0_to_js : t_0 -> Ojs.t = fun (x274 : t) -> t_to_js x274
    let (create : t -> args:string list -> _Function) =
      fun (x279 : t) ->
        fun ~args:(x276 : string list) ->
          _Function_of_js
            (Ojs.new_obj_arr (t_to_js x279)
               (let x277 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x278 : string) ->
                     ignore
                       (Ojs.call x277 "push" [|(Ojs.string_to_js x278)|]))
                  x276;
                x277))
    let (apply : t -> args:string list -> _Function) =
      fun (x283 : t) ->
        fun ~args:(x280 : string list) ->
          _Function_of_js
            (Ojs.call (t_to_js x283) "apply"
               [|Ojs.null;((let x281 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x282 : string) ->
                                 ignore
                                   (Ojs.call x281 "push"
                                      [|(Ojs.string_to_js x282)|])) x280;
                            x281))|])
    let (get_prototype : t -> _Function) =
      fun (x284 : t) ->
        _Function_of_js (Ojs.get_prop_ascii (t_to_js x284) "prototype")
  end
let (function_ : _FunctionConstructor) =
  _FunctionConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Function")
module ThisParameterType =
  struct
    type 'T t = 'T _ThisParameterType
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x287 : Ojs.t) -> _ThisParameterType_of_js __T_of_js x287
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x285 : __T _ThisParameterType) ->
          _ThisParameterType_to_js __T_to_js x285
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x291 : Ojs.t) -> t_of_js __T_of_js x291
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x289 : __T t) -> t_to_js __T_to_js x289
  end
module OmitThisParameter =
  struct
    type 'T t = 'T _OmitThisParameter
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x295 : Ojs.t) -> _OmitThisParameter_of_js __T_of_js x295
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x293 : __T _OmitThisParameter) ->
          _OmitThisParameter_to_js __T_to_js x293
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x299 : Ojs.t) -> t_of_js __T_of_js x299
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x297 : __T t) -> t_to_js __T_to_js x297
  end
module CallableFunction =
  struct
    type t = _CallableFunction
    let rec t_of_js : Ojs.t -> t =
      fun (x302 : Ojs.t) -> _CallableFunction_of_js x302
    and t_to_js : t -> Ojs.t =
      fun (x301 : _CallableFunction) -> _CallableFunction_to_js x301
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x304 : Ojs.t) -> t_of_js x304
    and t_0_to_js : t_0 -> Ojs.t = fun (x303 : t) -> t_to_js x303
    let (apply_ : t -> this:(this:'T -> 'R) -> thisArg:'T -> 'R) =
      fun (x308 : t) ->
        fun ~this:(x305 : this:'T -> 'R) ->
          fun ~thisArg:(x307 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js x308) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x306 : Ojs.t) ->
                         Obj.magic (x305 ~this:(Obj.magic x306))));(Obj.magic
                                                                    x307)|])
    let (apply_' :
      t ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x314 : t) ->
        fun ~this:(x309 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x312 : 'T) ->
            fun ~args:(x313 : 'A) ->
              Obj.magic
                (Ojs.call (t_to_js x314) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x310 : _) ->
                           Obj.magic
                             (x309 ~this:(Obj.magic (Ojs.array_get x310 0))
                                ~args:(Ojs.list_of_js_from any_of_js x310 1))));(
                     Obj.magic x312);(Obj.magic x313)|])
    let (call :
      t ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x322 : t) ->
        fun ~this:(x315 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x316 : 'T) ->
            fun ~args:(x317 : any list) ->
              Obj.magic
                (let x323 = t_to_js x322 in
                 Ojs.call (Ojs.get_prop_ascii x323 "call") "apply"
                   [|x323;((let x318 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x318 "push"
                                 [|(Ojs.fun_to_js_args
                                      (fun (x320 : _) ->
                                         Obj.magic
                                           (x315
                                              ~this:(Obj.magic
                                                       (Ojs.array_get x320 0))
                                              ~args:(Ojs.list_of_js_from
                                                       any_of_js x320 1))))|]);
                            ignore
                              (Ojs.call x318 "push" [|(Obj.magic x316)|]);
                            List.iter
                              (fun (x319 : any) ->
                                 ignore
                                   (Ojs.call x318 "push" [|(any_to_js x319)|]))
                              x317;
                            x318))|])
    let (bind :
      t -> this:'T -> thisArg:'T _ThisParameterType -> 'T _OmitThisParameter)
      =
      fun (x327 : t) ->
        fun ~this:(x324 : 'T) ->
          fun ~thisArg:(x325 : 'T _ThisParameterType) ->
            _OmitThisParameter_of_js Obj.magic
              (Ojs.call (t_to_js x327) "bind"
                 [|(Obj.magic x324);(_ThisParameterType_to_js Obj.magic x325)|])
    let (bind' :
      t ->
        this:(this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> args:any list -> 'R)
      =
      fun (x334 : t) ->
        fun ~this:(x329 : this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          fun ~thisArg:(x332 : 'T) ->
            fun ~arg0:(x333 : 'A0) ->
              fun ~args:(x335 : any list) ->
                Obj.magic
                  (Ojs.call
                     (Ojs.call (t_to_js x334) "bind"
                        [|(Ojs.fun_to_js_args
                             (fun (x330 : _) ->
                                Obj.magic
                                  (x329
                                     ~this:(Obj.magic (Ojs.array_get x330 0))
                                     ~arg0:(Obj.magic (Ojs.array_get x330 1))
                                     ~args:(Ojs.list_of_js_from any_of_js
                                              x330 2))));(Obj.magic x332);(
                          Obj.magic x333)|]) "apply"
                     [|Ojs.null;((let x336 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x337 : any) ->
                                       ignore
                                         (Ojs.call x336 "push"
                                            [|(any_to_js x337)|])) x335;
                                  x336))|])
    let (bind'' :
      t ->
        this:(this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
      =
      fun (x344 : t) ->
        fun
          ~this:(x338 :
                  this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x341 : 'T) ->
            fun ~arg0:(x342 : 'A0) ->
              fun ~arg1:(x343 : 'A1) ->
                fun ~args:(x345 : any list) ->
                  Obj.magic
                    (Ojs.call
                       (Ojs.call (t_to_js x344) "bind"
                          [|(Ojs.fun_to_js_args
                               (fun (x339 : _) ->
                                  Obj.magic
                                    (x338
                                       ~this:(Obj.magic
                                                (Ojs.array_get x339 0))
                                       ~arg0:(Obj.magic
                                                (Ojs.array_get x339 1))
                                       ~arg1:(Obj.magic
                                                (Ojs.array_get x339 2))
                                       ~args:(Ojs.list_of_js_from any_of_js
                                                x339 3))));(Obj.magic x341);(
                            Obj.magic x342);(Obj.magic x343)|]) "apply"
                       [|Ojs.null;((let x346 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    List.iter
                                      (fun (x347 : any) ->
                                         ignore
                                           (Ojs.call x346 "push"
                                              [|(any_to_js x347)|])) x345;
                                    x346))|])
    let (bind''' :
      t ->
        this:(this:'T ->
                arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          ->
          thisArg:'T ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
      =
      fun (x355 : t) ->
        fun
          ~this:(x348 :
                  this:'T ->
                    arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x351 : 'T) ->
            fun ~arg0:(x352 : 'A0) ->
              fun ~arg1:(x353 : 'A1) ->
                fun ~arg2:(x354 : 'A2) ->
                  fun ~args:(x356 : any list) ->
                    Obj.magic
                      (Ojs.call
                         (Ojs.call (t_to_js x355) "bind"
                            [|(Ojs.fun_to_js_args
                                 (fun (x349 : _) ->
                                    Obj.magic
                                      (x348
                                         ~this:(Obj.magic
                                                  (Ojs.array_get x349 0))
                                         ~arg0:(Obj.magic
                                                  (Ojs.array_get x349 1))
                                         ~arg1:(Obj.magic
                                                  (Ojs.array_get x349 2))
                                         ~arg2:(Obj.magic
                                                  (Ojs.array_get x349 3))
                                         ~args:(Ojs.list_of_js_from any_of_js
                                                  x349 4))));(Obj.magic x351);(
                              Obj.magic x352);(Obj.magic x353);(Obj.magic
                                                                  x354)|])
                         "apply"
                         [|Ojs.null;((let x357 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      List.iter
                                        (fun (x358 : any) ->
                                           ignore
                                             (Ojs.call x357 "push"
                                                [|(any_to_js x358)|])) x356;
                                      x357))|])
    let (bind'''' :
      t ->
        this:(this:'T ->
                arg0:'A0 ->
                  arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          thisArg:'T ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
      =
      fun (x367 : t) ->
        fun
          ~this:(x359 :
                  this:'T ->
                    arg0:'A0 ->
                      arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x362 : 'T) ->
            fun ~arg0:(x363 : 'A0) ->
              fun ~arg1:(x364 : 'A1) ->
                fun ~arg2:(x365 : 'A2) ->
                  fun ~arg3:(x366 : 'A3) ->
                    fun ~args:(x368 : any list) ->
                      Obj.magic
                        (Ojs.call
                           (Ojs.call (t_to_js x367) "bind"
                              [|(Ojs.fun_to_js_args
                                   (fun (x360 : _) ->
                                      Obj.magic
                                        (x359
                                           ~this:(Obj.magic
                                                    (Ojs.array_get x360 0))
                                           ~arg0:(Obj.magic
                                                    (Ojs.array_get x360 1))
                                           ~arg1:(Obj.magic
                                                    (Ojs.array_get x360 2))
                                           ~arg2:(Obj.magic
                                                    (Ojs.array_get x360 3))
                                           ~arg3:(Obj.magic
                                                    (Ojs.array_get x360 4))
                                           ~args:(Ojs.list_of_js_from
                                                    any_of_js x360 5))));(
                                Obj.magic x362);(Obj.magic x363);(Obj.magic
                                                                    x364);(
                                Obj.magic x365);(Obj.magic x366)|]) "apply"
                           [|Ojs.null;((let x369 =
                                          Ojs.new_obj
                                            (Ojs.get_prop_ascii Ojs.global
                                               "Array") [||] in
                                        List.iter
                                          (fun (x370 : any) ->
                                             ignore
                                               (Ojs.call x369 "push"
                                                  [|(any_to_js x370)|])) x368;
                                        x369))|])
    let (cast : t -> _Function) =
      fun (x371 : t) -> _Function_of_js (t_to_js x371)
  end
module NewableFunction =
  struct
    type t = _NewableFunction
    let rec t_of_js : Ojs.t -> t =
      fun (x373 : Ojs.t) -> _NewableFunction_of_js x373
    and t_to_js : t -> Ojs.t =
      fun (x372 : _NewableFunction) -> _NewableFunction_to_js x372
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x375 : Ojs.t) -> t_of_js x375
    and t_0_to_js : t_0 -> Ojs.t = fun (x374 : t) -> t_to_js x374
    let (apply_ : t -> this:'T anonymous_interface_12 -> thisArg:'T -> unit)
      =
      fun (x379 : t) ->
        fun ~this:(x376 : 'T anonymous_interface_12) ->
          fun ~thisArg:(x378 : 'T) ->
            ignore
              (Ojs.call (t_to_js x379) "apply"
                 [|(anonymous_interface_12_to_js Obj.magic x376);(Obj.magic
                                                                    x378)|])
    let (apply_' :
      t ->
        this:('A, 'T) anonymous_interface_10 -> thisArg:'T -> args:'A -> unit)
      =
      fun (x385 : t) ->
        fun ~this:(x380 : ('A, 'T) anonymous_interface_10) ->
          fun ~thisArg:(x383 : 'T) ->
            fun ~args:(x384 : 'A) ->
              ignore
                (Ojs.call (t_to_js x385) "apply"
                   [|(anonymous_interface_10_to_js Obj.magic Obj.magic x380);(
                     Obj.magic x383);(Obj.magic x384)|])
    let (call :
      t ->
        this:('A, 'T) anonymous_interface_10 ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x393 : t) ->
        fun ~this:(x386 : ('A, 'T) anonymous_interface_10) ->
          fun ~thisArg:(x387 : 'T) ->
            fun ~args:(x388 : any list) ->
              ignore
                (let x394 = t_to_js x393 in
                 Ojs.call (Ojs.get_prop_ascii x394 "call") "apply"
                   [|x394;((let x389 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x389 "push"
                                 [|(anonymous_interface_10_to_js Obj.magic
                                      Obj.magic x386)|]);
                            ignore
                              (Ojs.call x389 "push" [|(Obj.magic x387)|]);
                            List.iter
                              (fun (x390 : any) ->
                                 ignore
                                   (Ojs.call x389 "push" [|(any_to_js x390)|]))
                              x388;
                            x389))|])
    let (bind : t -> this:'T -> thisArg:any -> 'T) =
      fun (x397 : t) ->
        fun ~this:(x395 : 'T) ->
          fun ~thisArg:(x396 : any) ->
            Obj.magic
              (Ojs.call (t_to_js x397) "bind"
                 [|(Obj.magic x395);(any_to_js x396)|])
    let (bind' :
      t ->
        this:('A, 'A0, 'R) anonymous_interface_8 ->
          thisArg:any -> arg0:'A0 -> ('A, 'R) anonymous_interface_9)
      =
      fun (x404 : t) ->
        fun ~this:(x398 : ('A, 'A0, 'R) anonymous_interface_8) ->
          fun ~thisArg:(x402 : any) ->
            fun ~arg0:(x403 : 'A0) ->
              anonymous_interface_9_of_js Obj.magic Obj.magic
                (Ojs.call (t_to_js x404) "bind"
                   [|(anonymous_interface_8_to_js Obj.magic Obj.magic
                        Obj.magic x398);(any_to_js x402);(Obj.magic x403)|])
    let (bind'' :
      t ->
        this:('A, 'A0, 'A1, 'R) anonymous_interface_7 ->
          thisArg:any ->
            arg0:'A0 -> arg1:'A1 -> ('A, 'R) anonymous_interface_9)
      =
      fun (x415 : t) ->
        fun ~this:(x407 : ('A, 'A0, 'A1, 'R) anonymous_interface_7) ->
          fun ~thisArg:(x412 : any) ->
            fun ~arg0:(x413 : 'A0) ->
              fun ~arg1:(x414 : 'A1) ->
                anonymous_interface_9_of_js Obj.magic Obj.magic
                  (Ojs.call (t_to_js x415) "bind"
                     [|(anonymous_interface_7_to_js Obj.magic Obj.magic
                          Obj.magic Obj.magic x407);(any_to_js x412);(
                       Obj.magic x413);(Obj.magic x414)|])
    let (bind''' :
      t ->
        this:('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6 ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> ('A, 'R) anonymous_interface_9)
      =
      fun (x428 : t) ->
        fun ~this:(x418 : ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6) ->
          fun ~thisArg:(x424 : any) ->
            fun ~arg0:(x425 : 'A0) ->
              fun ~arg1:(x426 : 'A1) ->
                fun ~arg2:(x427 : 'A2) ->
                  anonymous_interface_9_of_js Obj.magic Obj.magic
                    (Ojs.call (t_to_js x428) "bind"
                       [|(anonymous_interface_6_to_js Obj.magic Obj.magic
                            Obj.magic Obj.magic Obj.magic x418);(any_to_js
                                                                   x424);(
                         Obj.magic x425);(Obj.magic x426);(Obj.magic x427)|])
    let (bind'''' :
      t ->
        this:('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5 ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 ->
                arg2:'A2 -> arg3:'A3 -> ('A, 'R) anonymous_interface_9)
      =
      fun (x443 : t) ->
        fun ~this:(x431 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5)
          ->
          fun ~thisArg:(x438 : any) ->
            fun ~arg0:(x439 : 'A0) ->
              fun ~arg1:(x440 : 'A1) ->
                fun ~arg2:(x441 : 'A2) ->
                  fun ~arg3:(x442 : 'A3) ->
                    anonymous_interface_9_of_js Obj.magic Obj.magic
                      (Ojs.call (t_to_js x443) "bind"
                         [|(anonymous_interface_5_to_js Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic Obj.magic x431);(
                           any_to_js x438);(Obj.magic x439);(Obj.magic x440);(
                           Obj.magic x441);(Obj.magic x442)|])
    let (bind''''' :
      t ->
        this:('AX, 'R) anonymous_interface_11 ->
          thisArg:any -> args:'AX list -> ('AX, 'R) anonymous_interface_11)
      =
      fun (x453 : t) ->
        fun ~this:(x446 : ('AX, 'R) anonymous_interface_11) ->
          fun ~thisArg:(x447 : any) ->
            fun ~args:(x448 : 'AX list) ->
              anonymous_interface_11_of_js Obj.magic Obj.magic
                (let x454 = t_to_js x453 in
                 Ojs.call (Ojs.get_prop_ascii x454 "bind") "apply"
                   [|x454;((let x449 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x449 "push"
                                 [|(anonymous_interface_11_to_js Obj.magic
                                      Obj.magic x446)|]);
                            ignore
                              (Ojs.call x449 "push" [|(any_to_js x447)|]);
                            List.iter
                              (fun (x450 : 'AX) ->
                                 ignore
                                   (Ojs.call x449 "push" [|(Obj.magic x450)|]))
                              x448;
                            x449))|])
    let (cast : t -> _Function) =
      fun (x457 : t) -> _Function_of_js (t_to_js x457)
  end
module IArguments =
  struct
    type t = _IArguments
    let rec t_of_js : Ojs.t -> t =
      fun (x459 : Ojs.t) -> _IArguments_of_js x459
    and t_to_js : t -> Ojs.t =
      fun (x458 : _IArguments) -> _IArguments_to_js x458
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x461 : Ojs.t) -> t_of_js x461
    and t_0_to_js : t_0 -> Ojs.t = fun (x460 : t) -> t_to_js x460
    let (get : t -> float -> any) =
      fun (x462 : t) ->
        fun (x463 : float) ->
          any_of_js (Ojs.get_prop (t_to_js x462) (Ojs.float_to_js x463))
    let (set : t -> float -> any -> unit) =
      fun (x464 : t) ->
        fun (x465 : float) ->
          fun (x466 : any) ->
            Ojs.set_prop (t_to_js x464) (Ojs.float_to_js x465)
              (any_to_js x466)
    let (get_length : t -> float) =
      fun (x467 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x467) "length")
    let (set_length : t -> float -> unit) =
      fun (x468 : t) ->
        fun (x469 : float) ->
          Ojs.set_prop_ascii (t_to_js x468) "length" (Ojs.float_to_js x469)
    let (get_callee : t -> _Function) =
      fun (x470 : t) ->
        _Function_of_js (Ojs.get_prop_ascii (t_to_js x470) "callee")
    let (set_callee : t -> _Function -> unit) =
      fun (x471 : t) ->
        fun (x472 : _Function) ->
          Ojs.set_prop_ascii (t_to_js x471) "callee" (_Function_to_js x472)
  end
module String =
  struct
    type t = _String
    let rec t_of_js : Ojs.t -> t = fun (x474 : Ojs.t) -> _String_of_js x474
    and t_to_js : t -> Ojs.t = fun (x473 : _String) -> _String_to_js x473
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x476 : Ojs.t) -> t_of_js x476
    and t_0_to_js : t_0 -> Ojs.t = fun (x475 : t) -> t_to_js x475
    let (localeCompare :
      t ->
        that:string ->
          ?locales:string list or_string ->
            ?options:_Intl_CollatorOptions -> unit -> float)
      =
      fun (x485 : t) ->
        fun ~that:(x477 : string) ->
          fun ?locales:(x478 : string list or_string option) ->
            fun ?options:(x479 : _Intl_CollatorOptions option) ->
              fun () ->
                Ojs.float_of_js
                  (let x486 = t_to_js x485 in
                   Ojs.call (Ojs.get_prop_ascii x486 "localeCompare") "apply"
                     [|x486;((let x480 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x480 "push"
                                   [|(Ojs.string_to_js x477)|]);
                              (match x478 with
                               | Some x482 ->
                                   ignore
                                     (Ojs.call x480 "push"
                                        [|(or_string_to_js
                                             (fun (x483 : string list) ->
                                                Ojs.list_to_js
                                                  Ojs.string_to_js x483) x482)|])
                               | None -> ());
                              (match x479 with
                               | Some x481 ->
                                   ignore
                                     (Ojs.call x480 "push"
                                        [|(_Intl_CollatorOptions_to_js x481)|])
                               | None -> ());
                              x480))|])
    let (toString : t -> string) =
      fun (x487 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x487) "toString" [||])
    let (charAt : t -> pos:float -> string) =
      fun (x489 : t) ->
        fun ~pos:(x488 : float) ->
          Ojs.string_of_js
            (Ojs.call (t_to_js x489) "charAt" [|(Ojs.float_to_js x488)|])
    let (charCodeAt : t -> index:float -> float) =
      fun (x491 : t) ->
        fun ~index:(x490 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x491) "charCodeAt" [|(Ojs.float_to_js x490)|])
    let (concat : t -> strings:string list -> string) =
      fun (x495 : t) ->
        fun ~strings:(x492 : string list) ->
          Ojs.string_of_js
            (let x496 = t_to_js x495 in
             Ojs.call (Ojs.get_prop_ascii x496 "concat") "apply"
               [|x496;((let x493 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x494 : string) ->
                             ignore
                               (Ojs.call x493 "push"
                                  [|(Ojs.string_to_js x494)|])) x492;
                        x493))|])
    let (indexOf :
      t -> searchString:string -> ?position:float -> unit -> float) =
      fun (x501 : t) ->
        fun ~searchString:(x497 : string) ->
          fun ?position:(x498 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x502 = t_to_js x501 in
                 Ojs.call (Ojs.get_prop_ascii x502 "indexOf") "apply"
                   [|x502;((let x499 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x499 "push"
                                 [|(Ojs.string_to_js x497)|]);
                            (match x498 with
                             | Some x500 ->
                                 ignore
                                   (Ojs.call x499 "push"
                                      [|(Ojs.float_to_js x500)|])
                             | None -> ());
                            x499))|])
    let (lastIndexOf :
      t -> searchString:string -> ?position:float -> unit -> float) =
      fun (x507 : t) ->
        fun ~searchString:(x503 : string) ->
          fun ?position:(x504 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x508 = t_to_js x507 in
                 Ojs.call (Ojs.get_prop_ascii x508 "lastIndexOf") "apply"
                   [|x508;((let x505 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x505 "push"
                                 [|(Ojs.string_to_js x503)|]);
                            (match x504 with
                             | Some x506 ->
                                 ignore
                                   (Ojs.call x505 "push"
                                      [|(Ojs.float_to_js x506)|])
                             | None -> ());
                            x505))|])
    let (localeCompare' : t -> that:string -> float) =
      fun (x510 : t) ->
        fun ~that:(x509 : string) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x510) "localeCompare"
               [|(Ojs.string_to_js x509)|])
    let (match_ : t -> regexp:_RegExp or_string -> _RegExpMatchArray or_null)
      =
      fun (x513 : t) ->
        fun ~regexp:(x511 : _RegExp or_string) ->
          or_null_of_js _RegExpMatchArray_of_js
            (Ojs.call (t_to_js x513) "match"
               [|(or_string_to_js _RegExp_to_js x511)|])
    let (replace :
      t -> searchValue:_RegExp or_string -> replaceValue:string -> string) =
      fun (x518 : t) ->
        fun ~searchValue:(x515 : _RegExp or_string) ->
          fun ~replaceValue:(x517 : string) ->
            Ojs.string_of_js
              (Ojs.call (t_to_js x518) "replace"
                 [|(or_string_to_js _RegExp_to_js x515);(Ojs.string_to_js
                                                           x517)|])
    let (replace' :
      t ->
        searchValue:_RegExp or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x524 : t) ->
        fun ~searchValue:(x519 : _RegExp or_string) ->
          fun ~replacer:(x521 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (t_to_js x524) "replace"
                 [|(or_string_to_js _RegExp_to_js x519);(Ojs.fun_to_js_args
                                                           (fun (x522 : _) ->
                                                              Ojs.string_to_js
                                                                (x521
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x522 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x522 1))))|])
    let (search : t -> regexp:_RegExp or_string -> float) =
      fun (x527 : t) ->
        fun ~regexp:(x525 : _RegExp or_string) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x527) "search"
               [|(or_string_to_js _RegExp_to_js x525)|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> string) =
      fun (x533 : t) ->
        fun ?start:(x528 : float option) ->
          fun ?end_:(x529 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x534 = t_to_js x533 in
                 Ojs.call (Ojs.get_prop_ascii x534 "slice") "apply"
                   [|x534;((let x530 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x528 with
                             | Some x532 ->
                                 ignore
                                   (Ojs.call x530 "push"
                                      [|(Ojs.float_to_js x532)|])
                             | None -> ());
                            (match x529 with
                             | Some x531 ->
                                 ignore
                                   (Ojs.call x530 "push"
                                      [|(Ojs.float_to_js x531)|])
                             | None -> ());
                            x530))|])
    let (split :
      t -> separator:_RegExp or_string -> ?limit:float -> unit -> string list)
      =
      fun (x540 : t) ->
        fun ~separator:(x535 : _RegExp or_string) ->
          fun ?limit:(x536 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x541 = t_to_js x540 in
                 Ojs.call (Ojs.get_prop_ascii x541 "split") "apply"
                   [|x541;((let x537 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x537 "push"
                                 [|(or_string_to_js _RegExp_to_js x535)|]);
                            (match x536 with
                             | Some x538 ->
                                 ignore
                                   (Ojs.call x537 "push"
                                      [|(Ojs.float_to_js x538)|])
                             | None -> ());
                            x537))|])
    let (substring : t -> start:float -> ?end_:float -> unit -> string) =
      fun (x547 : t) ->
        fun ~start:(x543 : float) ->
          fun ?end_:(x544 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x548 = t_to_js x547 in
                 Ojs.call (Ojs.get_prop_ascii x548 "substring") "apply"
                   [|x548;((let x545 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x545 "push"
                                 [|(Ojs.float_to_js x543)|]);
                            (match x544 with
                             | Some x546 ->
                                 ignore
                                   (Ojs.call x545 "push"
                                      [|(Ojs.float_to_js x546)|])
                             | None -> ());
                            x545))|])
    let (toLowerCase : t -> string) =
      fun (x549 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x549) "toLowerCase" [||])
    let (toLocaleLowerCase :
      t -> ?locales:string list or_string -> unit -> string) =
      fun (x555 : t) ->
        fun ?locales:(x550 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x556 = t_to_js x555 in
               Ojs.call (Ojs.get_prop_ascii x556 "toLocaleLowerCase") "apply"
                 [|x556;((let x551 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x550 with
                           | Some x552 ->
                               ignore
                                 (Ojs.call x551 "push"
                                    [|(or_string_to_js
                                         (fun (x553 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x553) x552)|])
                           | None -> ());
                          x551))|])
    let (toUpperCase : t -> string) =
      fun (x557 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x557) "toUpperCase" [||])
    let (toLocaleUpperCase :
      t -> ?locales:string list or_string -> unit -> string) =
      fun (x563 : t) ->
        fun ?locales:(x558 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x564 = t_to_js x563 in
               Ojs.call (Ojs.get_prop_ascii x564 "toLocaleUpperCase") "apply"
                 [|x564;((let x559 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x558 with
                           | Some x560 ->
                               ignore
                                 (Ojs.call x559 "push"
                                    [|(or_string_to_js
                                         (fun (x561 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x561) x560)|])
                           | None -> ());
                          x559))|])
    let (trim : t -> string) =
      fun (x565 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x565) "trim" [||])
    let (get_length : t -> float) =
      fun (x566 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x566) "length")
    let (substr : t -> from:float -> ?length:float -> unit -> string) =
      fun (x571 : t) ->
        fun ~from:(x567 : float) ->
          fun ?length:(x568 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x572 = t_to_js x571 in
                 Ojs.call (Ojs.get_prop_ascii x572 "substr") "apply"
                   [|x572;((let x569 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x569 "push"
                                 [|(Ojs.float_to_js x567)|]);
                            (match x568 with
                             | Some x570 ->
                                 ignore
                                   (Ojs.call x569 "push"
                                      [|(Ojs.float_to_js x570)|])
                             | None -> ());
                            x569))|])
    let (valueOf : t -> string) =
      fun (x573 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x573) "valueOf" [||])
    let (get : t -> float -> string) =
      fun (x574 : t) ->
        fun (x575 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (t_to_js x574) (Ojs.float_to_js x575))
    let (to_ml : t -> string) =
      fun (x576 : t) -> Ojs.string_of_js (t_to_js x576)
    let (of_ml : string -> t) =
      fun (x577 : string) -> t_of_js (Ojs.string_to_js x577)
    let (create : ?value:any -> unit -> _String) =
      fun ?value:(x578 : any option) ->
        fun () ->
          _String_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x579 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x578 with
                 | Some x580 ->
                     ignore (Ojs.call x579 "push" [|(any_to_js x580)|])
                 | None -> ());
                x579))
    let (fromCharCode : codes:float list -> string) =
      fun ~codes:(x581 : float list) ->
        Ojs.string_of_js
          (let x584 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x584 "fromCharCode") "apply"
             [|x584;((let x582 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x583 : float) ->
                           ignore
                             (Ojs.call x582 "push" [|(Ojs.float_to_js x583)|]))
                        x581;
                      x582))|])
  end
module StringConstructor =
  struct
    type t = _StringConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x586 : Ojs.t) -> _StringConstructor_of_js x586
    and t_to_js : t -> Ojs.t =
      fun (x585 : _StringConstructor) -> _StringConstructor_to_js x585
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x588 : Ojs.t) -> t_of_js x588
    and t_0_to_js : t_0 -> Ojs.t = fun (x587 : t) -> t_to_js x587
    let (create : t -> ?value:any -> unit -> _String) =
      fun (x592 : t) ->
        fun ?value:(x589 : any option) ->
          fun () ->
            _String_of_js
              (Ojs.new_obj_arr (t_to_js x592)
                 (let x590 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x589 with
                   | Some x591 ->
                       ignore (Ojs.call x590 "push" [|(any_to_js x591)|])
                   | None -> ());
                  x590))
    let (apply : t -> ?value:any -> unit -> string) =
      fun (x596 : t) ->
        fun ?value:(x593 : any option) ->
          fun () ->
            Ojs.string_of_js
              (Ojs.call (t_to_js x596) "apply"
                 [|Ojs.null;((let x594 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x593 with
                               | Some x595 ->
                                   ignore
                                     (Ojs.call x594 "push"
                                        [|(any_to_js x595)|])
                               | None -> ());
                              x594))|])
    let (get_prototype : t -> _String) =
      fun (x597 : t) ->
        _String_of_js (Ojs.get_prop_ascii (t_to_js x597) "prototype")
    let (fromCharCode : t -> codes:float list -> string) =
      fun (x601 : t) ->
        fun ~codes:(x598 : float list) ->
          Ojs.string_of_js
            (let x602 = t_to_js x601 in
             Ojs.call (Ojs.get_prop_ascii x602 "fromCharCode") "apply"
               [|x602;((let x599 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x600 : float) ->
                             ignore
                               (Ojs.call x599 "push"
                                  [|(Ojs.float_to_js x600)|])) x598;
                        x599))|])
  end
let (string : _StringConstructor) =
  _StringConstructor_of_js (Ojs.get_prop_ascii Ojs.global "String")
module Boolean =
  struct
    type t = _Boolean
    let rec t_of_js : Ojs.t -> t = fun (x604 : Ojs.t) -> _Boolean_of_js x604
    and t_to_js : t -> Ojs.t = fun (x603 : _Boolean) -> _Boolean_to_js x603
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x606 : Ojs.t) -> t_of_js x606
    and t_0_to_js : t_0 -> Ojs.t = fun (x605 : t) -> t_to_js x605
    let (valueOf : t -> bool) =
      fun (x607 : t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js x607) "valueOf" [||])
    let (to_ml : t -> bool) = fun (x608 : t) -> Ojs.bool_of_js (t_to_js x608)
    let (of_ml : bool -> t) =
      fun (x609 : bool) -> t_of_js (Ojs.bool_to_js x609)
    let (create : ?value:any -> unit -> _Boolean) =
      fun ?value:(x610 : any option) ->
        fun () ->
          _Boolean_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x611 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x610 with
                 | Some x612 ->
                     ignore (Ojs.call x611 "push" [|(any_to_js x612)|])
                 | None -> ());
                x611))
  end
module BooleanConstructor =
  struct
    type t = _BooleanConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x614 : Ojs.t) -> _BooleanConstructor_of_js x614
    and t_to_js : t -> Ojs.t =
      fun (x613 : _BooleanConstructor) -> _BooleanConstructor_to_js x613
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x616 : Ojs.t) -> t_of_js x616
    and t_0_to_js : t_0 -> Ojs.t = fun (x615 : t) -> t_to_js x615
    let (create : t -> ?value:any -> unit -> _Boolean) =
      fun (x620 : t) ->
        fun ?value:(x617 : any option) ->
          fun () ->
            _Boolean_of_js
              (Ojs.new_obj_arr (t_to_js x620)
                 (let x618 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x617 with
                   | Some x619 ->
                       ignore (Ojs.call x618 "push" [|(any_to_js x619)|])
                   | None -> ());
                  x618))
    let (apply : t -> ?value:'T -> unit -> bool) =
      fun (x624 : t) ->
        fun ?value:(x621 : 'T option) ->
          fun () ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x624) "apply"
                 [|Ojs.null;((let x622 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x621 with
                               | Some x623 ->
                                   ignore
                                     (Ojs.call x622 "push"
                                        [|(Obj.magic x623)|])
                               | None -> ());
                              x622))|])
    let (get_prototype : t -> _Boolean) =
      fun (x625 : t) ->
        _Boolean_of_js (Ojs.get_prop_ascii (t_to_js x625) "prototype")
  end
let (boolean : _BooleanConstructor) =
  _BooleanConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Boolean")
module Number =
  struct
    type t = _Number
    let rec t_of_js : Ojs.t -> t = fun (x627 : Ojs.t) -> _Number_of_js x627
    and t_to_js : t -> Ojs.t = fun (x626 : _Number) -> _Number_to_js x626
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x629 : Ojs.t) -> t_of_js x629
    and t_0_to_js : t_0 -> Ojs.t = fun (x628 : t) -> t_to_js x628
    let (toLocaleString :
      t ->
        ?locales:string list or_string ->
          ?options:_Intl_NumberFormatOptions -> unit -> string)
      =
      fun (x637 : t) ->
        fun ?locales:(x630 : string list or_string option) ->
          fun ?options:(x631 : _Intl_NumberFormatOptions option) ->
            fun () ->
              Ojs.string_of_js
                (let x638 = t_to_js x637 in
                 Ojs.call (Ojs.get_prop_ascii x638 "toLocaleString") "apply"
                   [|x638;((let x632 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x630 with
                             | Some x634 ->
                                 ignore
                                   (Ojs.call x632 "push"
                                      [|(or_string_to_js
                                           (fun (x635 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x635) x634)|])
                             | None -> ());
                            (match x631 with
                             | Some x633 ->
                                 ignore
                                   (Ojs.call x632 "push"
                                      [|(_Intl_NumberFormatOptions_to_js x633)|])
                             | None -> ());
                            x632))|])
    let (toString : t -> ?radix:float -> unit -> string) =
      fun (x642 : t) ->
        fun ?radix:(x639 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x643 = t_to_js x642 in
               Ojs.call (Ojs.get_prop_ascii x643 "toString") "apply"
                 [|x643;((let x640 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x639 with
                           | Some x641 ->
                               ignore
                                 (Ojs.call x640 "push"
                                    [|(Ojs.float_to_js x641)|])
                           | None -> ());
                          x640))|])
    let (toFixed : t -> ?fractionDigits:float -> unit -> string) =
      fun (x647 : t) ->
        fun ?fractionDigits:(x644 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x648 = t_to_js x647 in
               Ojs.call (Ojs.get_prop_ascii x648 "toFixed") "apply"
                 [|x648;((let x645 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x644 with
                           | Some x646 ->
                               ignore
                                 (Ojs.call x645 "push"
                                    [|(Ojs.float_to_js x646)|])
                           | None -> ());
                          x645))|])
    let (toExponential : t -> ?fractionDigits:float -> unit -> string) =
      fun (x652 : t) ->
        fun ?fractionDigits:(x649 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x653 = t_to_js x652 in
               Ojs.call (Ojs.get_prop_ascii x653 "toExponential") "apply"
                 [|x653;((let x650 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x649 with
                           | Some x651 ->
                               ignore
                                 (Ojs.call x650 "push"
                                    [|(Ojs.float_to_js x651)|])
                           | None -> ());
                          x650))|])
    let (toPrecision : t -> ?precision:float -> unit -> string) =
      fun (x657 : t) ->
        fun ?precision:(x654 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x658 = t_to_js x657 in
               Ojs.call (Ojs.get_prop_ascii x658 "toPrecision") "apply"
                 [|x658;((let x655 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x654 with
                           | Some x656 ->
                               ignore
                                 (Ojs.call x655 "push"
                                    [|(Ojs.float_to_js x656)|])
                           | None -> ());
                          x655))|])
    let (valueOf : t -> float) =
      fun (x659 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x659) "valueOf" [||])
    let (to_ml : t -> float) =
      fun (x660 : t) -> Ojs.float_of_js (t_to_js x660)
    let (of_ml : float -> t) =
      fun (x661 : float) -> t_of_js (Ojs.float_to_js x661)
    let (create : ?value:any -> unit -> _Number) =
      fun ?value:(x662 : any option) ->
        fun () ->
          _Number_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x663 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x662 with
                 | Some x664 ->
                     ignore (Ojs.call x663 "push" [|(any_to_js x664)|])
                 | None -> ());
                x663))
    let (get_MAX_VALUE : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "MAX_VALUE")
    let (get_MIN_VALUE : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "MIN_VALUE")
    let (get_NaN : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (get_NEGATIVE_INFINITY : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "NEGATIVE_INFINITY")
    let (get_POSITIVE_INFINITY : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "POSITIVE_INFINITY")
  end
module NumberConstructor =
  struct
    type t = _NumberConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x666 : Ojs.t) -> _NumberConstructor_of_js x666
    and t_to_js : t -> Ojs.t =
      fun (x665 : _NumberConstructor) -> _NumberConstructor_to_js x665
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x668 : Ojs.t) -> t_of_js x668
    and t_0_to_js : t_0 -> Ojs.t = fun (x667 : t) -> t_to_js x667
    let (create : t -> ?value:any -> unit -> _Number) =
      fun (x672 : t) ->
        fun ?value:(x669 : any option) ->
          fun () ->
            _Number_of_js
              (Ojs.new_obj_arr (t_to_js x672)
                 (let x670 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x669 with
                   | Some x671 ->
                       ignore (Ojs.call x670 "push" [|(any_to_js x671)|])
                   | None -> ());
                  x670))
    let (apply : t -> ?value:any -> unit -> float) =
      fun (x676 : t) ->
        fun ?value:(x673 : any option) ->
          fun () ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x676) "apply"
                 [|Ojs.null;((let x674 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x673 with
                               | Some x675 ->
                                   ignore
                                     (Ojs.call x674 "push"
                                        [|(any_to_js x675)|])
                               | None -> ());
                              x674))|])
    let (get_prototype : t -> _Number) =
      fun (x677 : t) ->
        _Number_of_js (Ojs.get_prop_ascii (t_to_js x677) "prototype")
    let (get_MAX_VALUE : t -> float) =
      fun (x678 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x678) "MAX_VALUE")
    let (get_MIN_VALUE : t -> float) =
      fun (x679 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x679) "MIN_VALUE")
    let (get_NaN : t -> float) =
      fun (x680 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x680) "NaN")
    let (get_NEGATIVE_INFINITY : t -> float) =
      fun (x681 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x681) "NEGATIVE_INFINITY")
    let (get_POSITIVE_INFINITY : t -> float) =
      fun (x682 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x682) "POSITIVE_INFINITY")
  end
let (number : _NumberConstructor) =
  _NumberConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Number")
module TemplateStringsArray =
  struct
    type t = _TemplateStringsArray
    let rec t_of_js : Ojs.t -> t =
      fun (x684 : Ojs.t) -> _TemplateStringsArray_of_js x684
    and t_to_js : t -> Ojs.t =
      fun (x683 : _TemplateStringsArray) -> _TemplateStringsArray_to_js x683
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x686 : Ojs.t) -> t_of_js x686
    and t_0_to_js : t_0 -> Ojs.t = fun (x685 : t) -> t_to_js x685
    let (get_raw : t -> string list) =
      fun (x687 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x687) "raw")
    let (cast : t -> string _ReadonlyArray) =
      fun (x689 : t) -> _ReadonlyArray_of_js Ojs.string_of_js (t_to_js x689)
  end
module ImportMeta =
  struct
    type t = _ImportMeta
    let rec t_of_js : Ojs.t -> t =
      fun (x692 : Ojs.t) -> _ImportMeta_of_js x692
    and t_to_js : t -> Ojs.t =
      fun (x691 : _ImportMeta) -> _ImportMeta_to_js x691
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x694 : Ojs.t) -> t_of_js x694
    and t_0_to_js : t_0 -> Ojs.t = fun (x693 : t) -> t_to_js x693
  end
module Math =
  struct
    type t = _Math
    let rec t_of_js : Ojs.t -> t = fun (x696 : Ojs.t) -> _Math_of_js x696
    and t_to_js : t -> Ojs.t = fun (x695 : _Math) -> _Math_to_js x695
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x698 : Ojs.t) -> t_of_js x698
    and t_0_to_js : t_0 -> Ojs.t = fun (x697 : t) -> t_to_js x697
    let (get_E : t -> float) =
      fun (x699 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x699) "E")
    let (get_LN10 : t -> float) =
      fun (x700 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x700) "LN10")
    let (get_LN2 : t -> float) =
      fun (x701 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x701) "LN2")
    let (get_LOG2E : t -> float) =
      fun (x702 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x702) "LOG2E")
    let (get_LOG10E : t -> float) =
      fun (x703 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x703) "LOG10E")
    let (get_PI : t -> float) =
      fun (x704 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x704) "PI")
    let (get_SQRT1_2 : t -> float) =
      fun (x705 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x705) "SQRT1_2")
    let (get_SQRT2 : t -> float) =
      fun (x706 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x706) "SQRT2")
    let (abs : t -> x:float -> float) =
      fun (x708 : t) ->
        fun ~x:(x707 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x708) "abs" [|(Ojs.float_to_js x707)|])
    let (acos : t -> x:float -> float) =
      fun (x710 : t) ->
        fun ~x:(x709 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x710) "acos" [|(Ojs.float_to_js x709)|])
    let (asin : t -> x:float -> float) =
      fun (x712 : t) ->
        fun ~x:(x711 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x712) "asin" [|(Ojs.float_to_js x711)|])
    let (atan : t -> x:float -> float) =
      fun (x714 : t) ->
        fun ~x:(x713 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x714) "atan" [|(Ojs.float_to_js x713)|])
    let (atan2 : t -> y:float -> x:float -> float) =
      fun (x717 : t) ->
        fun ~y:(x715 : float) ->
          fun ~x:(x716 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x717) "atan2"
                 [|(Ojs.float_to_js x715);(Ojs.float_to_js x716)|])
    let (ceil : t -> x:float -> float) =
      fun (x719 : t) ->
        fun ~x:(x718 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x719) "ceil" [|(Ojs.float_to_js x718)|])
    let (cos : t -> x:float -> float) =
      fun (x721 : t) ->
        fun ~x:(x720 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x721) "cos" [|(Ojs.float_to_js x720)|])
    let (exp : t -> x:float -> float) =
      fun (x723 : t) ->
        fun ~x:(x722 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x723) "exp" [|(Ojs.float_to_js x722)|])
    let (floor : t -> x:float -> float) =
      fun (x725 : t) ->
        fun ~x:(x724 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x725) "floor" [|(Ojs.float_to_js x724)|])
    let (log : t -> x:float -> float) =
      fun (x727 : t) ->
        fun ~x:(x726 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x727) "log" [|(Ojs.float_to_js x726)|])
    let (max : t -> values:float list -> float) =
      fun (x731 : t) ->
        fun ~values:(x728 : float list) ->
          Ojs.float_of_js
            (let x732 = t_to_js x731 in
             Ojs.call (Ojs.get_prop_ascii x732 "max") "apply"
               [|x732;((let x729 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x730 : float) ->
                             ignore
                               (Ojs.call x729 "push"
                                  [|(Ojs.float_to_js x730)|])) x728;
                        x729))|])
    let (min : t -> values:float list -> float) =
      fun (x736 : t) ->
        fun ~values:(x733 : float list) ->
          Ojs.float_of_js
            (let x737 = t_to_js x736 in
             Ojs.call (Ojs.get_prop_ascii x737 "min") "apply"
               [|x737;((let x734 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x735 : float) ->
                             ignore
                               (Ojs.call x734 "push"
                                  [|(Ojs.float_to_js x735)|])) x733;
                        x734))|])
    let (pow : t -> x:float -> y:float -> float) =
      fun (x740 : t) ->
        fun ~x:(x738 : float) ->
          fun ~y:(x739 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x740) "pow"
                 [|(Ojs.float_to_js x738);(Ojs.float_to_js x739)|])
    let (random : t -> float) =
      fun (x741 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x741) "random" [||])
    let (round : t -> x:float -> float) =
      fun (x743 : t) ->
        fun ~x:(x742 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x743) "round" [|(Ojs.float_to_js x742)|])
    let (sin : t -> x:float -> float) =
      fun (x745 : t) ->
        fun ~x:(x744 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x745) "sin" [|(Ojs.float_to_js x744)|])
    let (sqrt : t -> x:float -> float) =
      fun (x747 : t) ->
        fun ~x:(x746 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x747) "sqrt" [|(Ojs.float_to_js x746)|])
    let (tan : t -> x:float -> float) =
      fun (x749 : t) ->
        fun ~x:(x748 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x749) "tan" [|(Ojs.float_to_js x748)|])
  end
let (math : _Math) = _Math_of_js (Ojs.get_prop_ascii Ojs.global "Math")
module Date =
  struct
    type t = _Date
    let rec t_of_js : Ojs.t -> t = fun (x751 : Ojs.t) -> _Date_of_js x751
    and t_to_js : t -> Ojs.t = fun (x750 : _Date) -> _Date_to_js x750
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x753 : Ojs.t) -> t_of_js x753
    and t_0_to_js : t_0 -> Ojs.t = fun (x752 : t) -> t_to_js x752
    let (toLocaleString :
      t ->
        ?locales:string list or_string ->
          ?options:_Intl_DateTimeFormatOptions -> unit -> string)
      =
      fun (x761 : t) ->
        fun ?locales:(x754 : string list or_string option) ->
          fun ?options:(x755 : _Intl_DateTimeFormatOptions option) ->
            fun () ->
              Ojs.string_of_js
                (let x762 = t_to_js x761 in
                 Ojs.call (Ojs.get_prop_ascii x762 "toLocaleString") "apply"
                   [|x762;((let x756 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x754 with
                             | Some x758 ->
                                 ignore
                                   (Ojs.call x756 "push"
                                      [|(or_string_to_js
                                           (fun (x759 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x759) x758)|])
                             | None -> ());
                            (match x755 with
                             | Some x757 ->
                                 ignore
                                   (Ojs.call x756 "push"
                                      [|(_Intl_DateTimeFormatOptions_to_js
                                           x757)|])
                             | None -> ());
                            x756))|])
    let (toLocaleDateString :
      t ->
        ?locales:string list or_string ->
          ?options:_Intl_DateTimeFormatOptions -> unit -> string)
      =
      fun (x770 : t) ->
        fun ?locales:(x763 : string list or_string option) ->
          fun ?options:(x764 : _Intl_DateTimeFormatOptions option) ->
            fun () ->
              Ojs.string_of_js
                (let x771 = t_to_js x770 in
                 Ojs.call (Ojs.get_prop_ascii x771 "toLocaleDateString")
                   "apply"
                   [|x771;((let x765 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x763 with
                             | Some x767 ->
                                 ignore
                                   (Ojs.call x765 "push"
                                      [|(or_string_to_js
                                           (fun (x768 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x768) x767)|])
                             | None -> ());
                            (match x764 with
                             | Some x766 ->
                                 ignore
                                   (Ojs.call x765 "push"
                                      [|(_Intl_DateTimeFormatOptions_to_js
                                           x766)|])
                             | None -> ());
                            x765))|])
    let (toLocaleTimeString :
      t ->
        ?locales:string list or_string ->
          ?options:_Intl_DateTimeFormatOptions -> unit -> string)
      =
      fun (x779 : t) ->
        fun ?locales:(x772 : string list or_string option) ->
          fun ?options:(x773 : _Intl_DateTimeFormatOptions option) ->
            fun () ->
              Ojs.string_of_js
                (let x780 = t_to_js x779 in
                 Ojs.call (Ojs.get_prop_ascii x780 "toLocaleTimeString")
                   "apply"
                   [|x780;((let x774 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x772 with
                             | Some x776 ->
                                 ignore
                                   (Ojs.call x774 "push"
                                      [|(or_string_to_js
                                           (fun (x777 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x777) x776)|])
                             | None -> ());
                            (match x773 with
                             | Some x775 ->
                                 ignore
                                   (Ojs.call x774 "push"
                                      [|(_Intl_DateTimeFormatOptions_to_js
                                           x775)|])
                             | None -> ());
                            x774))|])
    let (toString : t -> string) =
      fun (x781 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x781) "toString" [||])
    let (toDateString : t -> string) =
      fun (x782 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x782) "toDateString" [||])
    let (toTimeString : t -> string) =
      fun (x783 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x783) "toTimeString" [||])
    let (toLocaleString' : t -> string) =
      fun (x784 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x784) "toLocaleString" [||])
    let (toLocaleDateString' : t -> string) =
      fun (x785 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x785) "toLocaleDateString" [||])
    let (toLocaleTimeString' : t -> string) =
      fun (x786 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x786) "toLocaleTimeString" [||])
    let (valueOf : t -> float) =
      fun (x787 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x787) "valueOf" [||])
    let (getTime : t -> float) =
      fun (x788 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x788) "getTime" [||])
    let (getFullYear : t -> float) =
      fun (x789 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x789) "getFullYear" [||])
    let (getUTCFullYear : t -> float) =
      fun (x790 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x790) "getUTCFullYear" [||])
    let (getMonth : t -> float) =
      fun (x791 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x791) "getMonth" [||])
    let (getUTCMonth : t -> float) =
      fun (x792 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x792) "getUTCMonth" [||])
    let (getDate : t -> float) =
      fun (x793 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x793) "getDate" [||])
    let (getUTCDate : t -> float) =
      fun (x794 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x794) "getUTCDate" [||])
    let (getDay : t -> float) =
      fun (x795 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x795) "getDay" [||])
    let (getUTCDay : t -> float) =
      fun (x796 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x796) "getUTCDay" [||])
    let (getHours : t -> float) =
      fun (x797 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x797) "getHours" [||])
    let (getUTCHours : t -> float) =
      fun (x798 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x798) "getUTCHours" [||])
    let (getMinutes : t -> float) =
      fun (x799 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x799) "getMinutes" [||])
    let (getUTCMinutes : t -> float) =
      fun (x800 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x800) "getUTCMinutes" [||])
    let (getSeconds : t -> float) =
      fun (x801 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x801) "getSeconds" [||])
    let (getUTCSeconds : t -> float) =
      fun (x802 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x802) "getUTCSeconds" [||])
    let (getMilliseconds : t -> float) =
      fun (x803 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x803) "getMilliseconds" [||])
    let (getUTCMilliseconds : t -> float) =
      fun (x804 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x804) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : t -> float) =
      fun (x805 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x805) "getTimezoneOffset" [||])
    let (setTime : t -> time:float -> float) =
      fun (x807 : t) ->
        fun ~time:(x806 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x807) "setTime" [|(Ojs.float_to_js x806)|])
    let (setMilliseconds : t -> ms:float -> float) =
      fun (x809 : t) ->
        fun ~ms:(x808 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x809) "setMilliseconds"
               [|(Ojs.float_to_js x808)|])
    let (setUTCMilliseconds : t -> ms:float -> float) =
      fun (x811 : t) ->
        fun ~ms:(x810 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x811) "setUTCMilliseconds"
               [|(Ojs.float_to_js x810)|])
    let (setSeconds : t -> sec:float -> ?ms:float -> unit -> float) =
      fun (x816 : t) ->
        fun ~sec:(x812 : float) ->
          fun ?ms:(x813 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x817 = t_to_js x816 in
                 Ojs.call (Ojs.get_prop_ascii x817 "setSeconds") "apply"
                   [|x817;((let x814 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x814 "push"
                                 [|(Ojs.float_to_js x812)|]);
                            (match x813 with
                             | Some x815 ->
                                 ignore
                                   (Ojs.call x814 "push"
                                      [|(Ojs.float_to_js x815)|])
                             | None -> ());
                            x814))|])
    let (setUTCSeconds : t -> sec:float -> ?ms:float -> unit -> float) =
      fun (x822 : t) ->
        fun ~sec:(x818 : float) ->
          fun ?ms:(x819 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x823 = t_to_js x822 in
                 Ojs.call (Ojs.get_prop_ascii x823 "setUTCSeconds") "apply"
                   [|x823;((let x820 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x820 "push"
                                 [|(Ojs.float_to_js x818)|]);
                            (match x819 with
                             | Some x821 ->
                                 ignore
                                   (Ojs.call x820 "push"
                                      [|(Ojs.float_to_js x821)|])
                             | None -> ());
                            x820))|])
    let (setMinutes :
      t -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x830 : t) ->
        fun ~min:(x824 : float) ->
          fun ?sec:(x825 : float option) ->
            fun ?ms:(x826 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x831 = t_to_js x830 in
                   Ojs.call (Ojs.get_prop_ascii x831 "setMinutes") "apply"
                     [|x831;((let x827 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x827 "push"
                                   [|(Ojs.float_to_js x824)|]);
                              (match x825 with
                               | Some x829 ->
                                   ignore
                                     (Ojs.call x827 "push"
                                        [|(Ojs.float_to_js x829)|])
                               | None -> ());
                              (match x826 with
                               | Some x828 ->
                                   ignore
                                     (Ojs.call x827 "push"
                                        [|(Ojs.float_to_js x828)|])
                               | None -> ());
                              x827))|])
    let (setUTCMinutes :
      t -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x838 : t) ->
        fun ~min:(x832 : float) ->
          fun ?sec:(x833 : float option) ->
            fun ?ms:(x834 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x839 = t_to_js x838 in
                   Ojs.call (Ojs.get_prop_ascii x839 "setUTCMinutes") "apply"
                     [|x839;((let x835 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x835 "push"
                                   [|(Ojs.float_to_js x832)|]);
                              (match x833 with
                               | Some x837 ->
                                   ignore
                                     (Ojs.call x835 "push"
                                        [|(Ojs.float_to_js x837)|])
                               | None -> ());
                              (match x834 with
                               | Some x836 ->
                                   ignore
                                     (Ojs.call x835 "push"
                                        [|(Ojs.float_to_js x836)|])
                               | None -> ());
                              x835))|])
    let (setHours :
      t ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x848 : t) ->
        fun ~hours:(x840 : float) ->
          fun ?min:(x841 : float option) ->
            fun ?sec:(x842 : float option) ->
              fun ?ms:(x843 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x849 = t_to_js x848 in
                     Ojs.call (Ojs.get_prop_ascii x849 "setHours") "apply"
                       [|x849;((let x844 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x844 "push"
                                     [|(Ojs.float_to_js x840)|]);
                                (match x841 with
                                 | Some x847 ->
                                     ignore
                                       (Ojs.call x844 "push"
                                          [|(Ojs.float_to_js x847)|])
                                 | None -> ());
                                (match x842 with
                                 | Some x846 ->
                                     ignore
                                       (Ojs.call x844 "push"
                                          [|(Ojs.float_to_js x846)|])
                                 | None -> ());
                                (match x843 with
                                 | Some x845 ->
                                     ignore
                                       (Ojs.call x844 "push"
                                          [|(Ojs.float_to_js x845)|])
                                 | None -> ());
                                x844))|])
    let (setUTCHours :
      t ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x858 : t) ->
        fun ~hours:(x850 : float) ->
          fun ?min:(x851 : float option) ->
            fun ?sec:(x852 : float option) ->
              fun ?ms:(x853 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x859 = t_to_js x858 in
                     Ojs.call (Ojs.get_prop_ascii x859 "setUTCHours") "apply"
                       [|x859;((let x854 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x854 "push"
                                     [|(Ojs.float_to_js x850)|]);
                                (match x851 with
                                 | Some x857 ->
                                     ignore
                                       (Ojs.call x854 "push"
                                          [|(Ojs.float_to_js x857)|])
                                 | None -> ());
                                (match x852 with
                                 | Some x856 ->
                                     ignore
                                       (Ojs.call x854 "push"
                                          [|(Ojs.float_to_js x856)|])
                                 | None -> ());
                                (match x853 with
                                 | Some x855 ->
                                     ignore
                                       (Ojs.call x854 "push"
                                          [|(Ojs.float_to_js x855)|])
                                 | None -> ());
                                x854))|])
    let (setDate : t -> date:float -> float) =
      fun (x861 : t) ->
        fun ~date:(x860 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x861) "setDate" [|(Ojs.float_to_js x860)|])
    let (setUTCDate : t -> date:float -> float) =
      fun (x863 : t) ->
        fun ~date:(x862 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x863) "setUTCDate" [|(Ojs.float_to_js x862)|])
    let (setMonth : t -> month:float -> ?date:float -> unit -> float) =
      fun (x868 : t) ->
        fun ~month:(x864 : float) ->
          fun ?date:(x865 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x869 = t_to_js x868 in
                 Ojs.call (Ojs.get_prop_ascii x869 "setMonth") "apply"
                   [|x869;((let x866 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x866 "push"
                                 [|(Ojs.float_to_js x864)|]);
                            (match x865 with
                             | Some x867 ->
                                 ignore
                                   (Ojs.call x866 "push"
                                      [|(Ojs.float_to_js x867)|])
                             | None -> ());
                            x866))|])
    let (setUTCMonth : t -> month:float -> ?date:float -> unit -> float) =
      fun (x874 : t) ->
        fun ~month:(x870 : float) ->
          fun ?date:(x871 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x875 = t_to_js x874 in
                 Ojs.call (Ojs.get_prop_ascii x875 "setUTCMonth") "apply"
                   [|x875;((let x872 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x872 "push"
                                 [|(Ojs.float_to_js x870)|]);
                            (match x871 with
                             | Some x873 ->
                                 ignore
                                   (Ojs.call x872 "push"
                                      [|(Ojs.float_to_js x873)|])
                             | None -> ());
                            x872))|])
    let (setFullYear :
      t -> year:float -> ?month:float -> ?date:float -> unit -> float) =
      fun (x882 : t) ->
        fun ~year:(x876 : float) ->
          fun ?month:(x877 : float option) ->
            fun ?date:(x878 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x883 = t_to_js x882 in
                   Ojs.call (Ojs.get_prop_ascii x883 "setFullYear") "apply"
                     [|x883;((let x879 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x879 "push"
                                   [|(Ojs.float_to_js x876)|]);
                              (match x877 with
                               | Some x881 ->
                                   ignore
                                     (Ojs.call x879 "push"
                                        [|(Ojs.float_to_js x881)|])
                               | None -> ());
                              (match x878 with
                               | Some x880 ->
                                   ignore
                                     (Ojs.call x879 "push"
                                        [|(Ojs.float_to_js x880)|])
                               | None -> ());
                              x879))|])
    let (setUTCFullYear :
      t -> year:float -> ?month:float -> ?date:float -> unit -> float) =
      fun (x890 : t) ->
        fun ~year:(x884 : float) ->
          fun ?month:(x885 : float option) ->
            fun ?date:(x886 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x891 = t_to_js x890 in
                   Ojs.call (Ojs.get_prop_ascii x891 "setUTCFullYear")
                     "apply"
                     [|x891;((let x887 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x887 "push"
                                   [|(Ojs.float_to_js x884)|]);
                              (match x885 with
                               | Some x889 ->
                                   ignore
                                     (Ojs.call x887 "push"
                                        [|(Ojs.float_to_js x889)|])
                               | None -> ());
                              (match x886 with
                               | Some x888 ->
                                   ignore
                                     (Ojs.call x887 "push"
                                        [|(Ojs.float_to_js x888)|])
                               | None -> ());
                              x887))|])
    let (toUTCString : t -> string) =
      fun (x892 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x892) "toUTCString" [||])
    let (toISOString : t -> string) =
      fun (x893 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x893) "toISOString" [||])
    let (toJSON : t -> ?key:any -> unit -> string) =
      fun (x897 : t) ->
        fun ?key:(x894 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x898 = t_to_js x897 in
               Ojs.call (Ojs.get_prop_ascii x898 "toJSON") "apply"
                 [|x898;((let x895 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x894 with
                           | Some x896 ->
                               ignore
                                 (Ojs.call x895 "push" [|(any_to_js x896)|])
                           | None -> ());
                          x895))|])
    let (create : unit -> _Date) =
      fun () ->
        _Date_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create' : value:string or_number -> _Date) =
      fun ~value:(x899 : string or_number) ->
        _Date_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|(or_number_to_js Ojs.string_to_js x899)|])
    let (create'' :
      t ->
        year:float ->
          month:float ->
            ?date:float ->
              ?hours:float ->
                ?minutes:float ->
                  ?seconds:float -> ?ms:float -> unit -> _Date)
      =
      fun (x901 : t) ->
        fun ~year:(x902 : float) ->
          fun ~month:(x903 : float) ->
            fun ?date:(x904 : float option) ->
              fun ?hours:(x905 : float option) ->
                fun ?minutes:(x906 : float option) ->
                  fun ?seconds:(x907 : float option) ->
                    fun ?ms:(x908 : float option) ->
                      fun () ->
                        _Date_of_js
                          (Ojs.new_obj_arr
                             (Ojs.get_prop_ascii Ojs.global "Date")
                             (let x909 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x909 "push" [|(t_to_js x901)|]);
                              ignore
                                (Ojs.call x909 "push"
                                   [|(Ojs.float_to_js x902)|]);
                              ignore
                                (Ojs.call x909 "push"
                                   [|(Ojs.float_to_js x903)|]);
                              (match x904 with
                               | Some x914 ->
                                   ignore
                                     (Ojs.call x909 "push"
                                        [|(Ojs.float_to_js x914)|])
                               | None -> ());
                              (match x905 with
                               | Some x913 ->
                                   ignore
                                     (Ojs.call x909 "push"
                                        [|(Ojs.float_to_js x913)|])
                               | None -> ());
                              (match x906 with
                               | Some x912 ->
                                   ignore
                                     (Ojs.call x909 "push"
                                        [|(Ojs.float_to_js x912)|])
                               | None -> ());
                              (match x907 with
                               | Some x911 ->
                                   ignore
                                     (Ojs.call x909 "push"
                                        [|(Ojs.float_to_js x911)|])
                               | None -> ());
                              (match x908 with
                               | Some x910 ->
                                   ignore
                                     (Ojs.call x909 "push"
                                        [|(Ojs.float_to_js x910)|])
                               | None -> ());
                              x909))
    let (parse : s:string -> float) =
      fun ~s:(x915 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x915)|])
    let (utc :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x916 : float) ->
        fun ~month:(x917 : float) ->
          fun ?date:(x918 : float option) ->
            fun ?hours:(x919 : float option) ->
              fun ?minutes:(x920 : float option) ->
                fun ?seconds:(x921 : float option) ->
                  fun ?ms:(x922 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x929 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x929 "UTC") "apply"
                           [|x929;((let x923 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x923 "push"
                                         [|(Ojs.float_to_js x916)|]);
                                    ignore
                                      (Ojs.call x923 "push"
                                         [|(Ojs.float_to_js x917)|]);
                                    (match x918 with
                                     | Some x928 ->
                                         ignore
                                           (Ojs.call x923 "push"
                                              [|(Ojs.float_to_js x928)|])
                                     | None -> ());
                                    (match x919 with
                                     | Some x927 ->
                                         ignore
                                           (Ojs.call x923 "push"
                                              [|(Ojs.float_to_js x927)|])
                                     | None -> ());
                                    (match x920 with
                                     | Some x926 ->
                                         ignore
                                           (Ojs.call x923 "push"
                                              [|(Ojs.float_to_js x926)|])
                                     | None -> ());
                                    (match x921 with
                                     | Some x925 ->
                                         ignore
                                           (Ojs.call x923 "push"
                                              [|(Ojs.float_to_js x925)|])
                                     | None -> ());
                                    (match x922 with
                                     | Some x924 ->
                                         ignore
                                           (Ojs.call x923 "push"
                                              [|(Ojs.float_to_js x924)|])
                                     | None -> ());
                                    x923))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
  end
module DateConstructor =
  struct
    type t = _DateConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x931 : Ojs.t) -> _DateConstructor_of_js x931
    and t_to_js : t -> Ojs.t =
      fun (x930 : _DateConstructor) -> _DateConstructor_to_js x930
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x933 : Ojs.t) -> t_of_js x933
    and t_0_to_js : t_0 -> Ojs.t = fun (x932 : t) -> t_to_js x932
    let (create : t -> _Date) =
      fun (x934 : t) -> _Date_of_js (Ojs.new_obj (t_to_js x934) [||])
    let (create' : t -> value:string or_number -> _Date) =
      fun (x937 : t) ->
        fun ~value:(x935 : string or_number) ->
          _Date_of_js
            (Ojs.new_obj (t_to_js x937)
               [|(or_number_to_js Ojs.string_to_js x935)|])
    let (create'' :
      t ->
        year:float ->
          month:float ->
            ?date:float ->
              ?hours:float ->
                ?minutes:float ->
                  ?seconds:float -> ?ms:float -> unit -> _Date)
      =
      fun (x951 : t) ->
        fun ~year:(x938 : float) ->
          fun ~month:(x939 : float) ->
            fun ?date:(x940 : float option) ->
              fun ?hours:(x941 : float option) ->
                fun ?minutes:(x942 : float option) ->
                  fun ?seconds:(x943 : float option) ->
                    fun ?ms:(x944 : float option) ->
                      fun () ->
                        _Date_of_js
                          (Ojs.new_obj_arr (t_to_js x951)
                             (let x945 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x945 "push"
                                   [|(Ojs.float_to_js x938)|]);
                              ignore
                                (Ojs.call x945 "push"
                                   [|(Ojs.float_to_js x939)|]);
                              (match x940 with
                               | Some x950 ->
                                   ignore
                                     (Ojs.call x945 "push"
                                        [|(Ojs.float_to_js x950)|])
                               | None -> ());
                              (match x941 with
                               | Some x949 ->
                                   ignore
                                     (Ojs.call x945 "push"
                                        [|(Ojs.float_to_js x949)|])
                               | None -> ());
                              (match x942 with
                               | Some x948 ->
                                   ignore
                                     (Ojs.call x945 "push"
                                        [|(Ojs.float_to_js x948)|])
                               | None -> ());
                              (match x943 with
                               | Some x947 ->
                                   ignore
                                     (Ojs.call x945 "push"
                                        [|(Ojs.float_to_js x947)|])
                               | None -> ());
                              (match x944 with
                               | Some x946 ->
                                   ignore
                                     (Ojs.call x945 "push"
                                        [|(Ojs.float_to_js x946)|])
                               | None -> ());
                              x945))
    let (apply : t -> string) =
      fun (x952 : t) -> Ojs.string_of_js (Ojs.apply (t_to_js x952) [||])
    let (get_prototype : t -> _Date) =
      fun (x953 : t) ->
        _Date_of_js (Ojs.get_prop_ascii (t_to_js x953) "prototype")
    let (parse : t -> s:string -> float) =
      fun (x955 : t) ->
        fun ~s:(x954 : string) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x955) "parse" [|(Ojs.string_to_js x954)|])
    let (utc :
      t ->
        year:float ->
          month:float ->
            ?date:float ->
              ?hours:float ->
                ?minutes:float ->
                  ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun (x969 : t) ->
        fun ~year:(x956 : float) ->
          fun ~month:(x957 : float) ->
            fun ?date:(x958 : float option) ->
              fun ?hours:(x959 : float option) ->
                fun ?minutes:(x960 : float option) ->
                  fun ?seconds:(x961 : float option) ->
                    fun ?ms:(x962 : float option) ->
                      fun () ->
                        Ojs.float_of_js
                          (let x970 = t_to_js x969 in
                           Ojs.call (Ojs.get_prop_ascii x970 "UTC") "apply"
                             [|x970;((let x963 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      ignore
                                        (Ojs.call x963 "push"
                                           [|(Ojs.float_to_js x956)|]);
                                      ignore
                                        (Ojs.call x963 "push"
                                           [|(Ojs.float_to_js x957)|]);
                                      (match x958 with
                                       | Some x968 ->
                                           ignore
                                             (Ojs.call x963 "push"
                                                [|(Ojs.float_to_js x968)|])
                                       | None -> ());
                                      (match x959 with
                                       | Some x967 ->
                                           ignore
                                             (Ojs.call x963 "push"
                                                [|(Ojs.float_to_js x967)|])
                                       | None -> ());
                                      (match x960 with
                                       | Some x966 ->
                                           ignore
                                             (Ojs.call x963 "push"
                                                [|(Ojs.float_to_js x966)|])
                                       | None -> ());
                                      (match x961 with
                                       | Some x965 ->
                                           ignore
                                             (Ojs.call x963 "push"
                                                [|(Ojs.float_to_js x965)|])
                                       | None -> ());
                                      (match x962 with
                                       | Some x964 ->
                                           ignore
                                             (Ojs.call x963 "push"
                                                [|(Ojs.float_to_js x964)|])
                                       | None -> ());
                                      x963))|])
    let (now : t -> float) =
      fun (x971 : t) -> Ojs.float_of_js (Ojs.call (t_to_js x971) "now" [||])
  end
let (date : _DateConstructor) =
  _DateConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Date")
module RegExpMatchArray =
  struct
    type t = _RegExpMatchArray
    let rec t_of_js : Ojs.t -> t =
      fun (x973 : Ojs.t) -> _RegExpMatchArray_of_js x973
    and t_to_js : t -> Ojs.t =
      fun (x972 : _RegExpMatchArray) -> _RegExpMatchArray_to_js x972
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x975 : Ojs.t) -> t_of_js x975
    and t_0_to_js : t_0 -> Ojs.t = fun (x974 : t) -> t_to_js x974
    let (get_index : t -> float) =
      fun (x976 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x976) "index")
    let (set_index : t -> float -> unit) =
      fun (x977 : t) ->
        fun (x978 : float) ->
          Ojs.set_prop_ascii (t_to_js x977) "index" (Ojs.float_to_js x978)
    let (get_input : t -> string) =
      fun (x979 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x979) "input")
    let (set_input : t -> string -> unit) =
      fun (x980 : t) ->
        fun (x981 : string) ->
          Ojs.set_prop_ascii (t_to_js x980) "input" (Ojs.string_to_js x981)
    let (cast : t -> string _Array) =
      fun (x982 : t) -> _Array_of_js Ojs.string_of_js (t_to_js x982)
  end
module RegExpExecArray =
  struct
    type t = _RegExpExecArray
    let rec t_of_js : Ojs.t -> t =
      fun (x985 : Ojs.t) -> _RegExpExecArray_of_js x985
    and t_to_js : t -> Ojs.t =
      fun (x984 : _RegExpExecArray) -> _RegExpExecArray_to_js x984
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x987 : Ojs.t) -> t_of_js x987
    and t_0_to_js : t_0 -> Ojs.t = fun (x986 : t) -> t_to_js x986
    let (get_index : t -> float) =
      fun (x988 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x988) "index")
    let (set_index : t -> float -> unit) =
      fun (x989 : t) ->
        fun (x990 : float) ->
          Ojs.set_prop_ascii (t_to_js x989) "index" (Ojs.float_to_js x990)
    let (get_input : t -> string) =
      fun (x991 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x991) "input")
    let (set_input : t -> string -> unit) =
      fun (x992 : t) ->
        fun (x993 : string) ->
          Ojs.set_prop_ascii (t_to_js x992) "input" (Ojs.string_to_js x993)
    let (cast : t -> string _Array) =
      fun (x994 : t) -> _Array_of_js Ojs.string_of_js (t_to_js x994)
  end
module RegExp =
  struct
    type t = _RegExp
    let rec t_of_js : Ojs.t -> t = fun (x997 : Ojs.t) -> _RegExp_of_js x997
    and t_to_js : t -> Ojs.t = fun (x996 : _RegExp) -> _RegExp_to_js x996
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x999 : Ojs.t) -> t_of_js x999
    and t_0_to_js : t_0 -> Ojs.t = fun (x998 : t) -> t_to_js x998
    let (exec : t -> string:string -> _RegExpExecArray or_null) =
      fun (x1001 : t) ->
        fun ~string:(x1000 : string) ->
          or_null_of_js _RegExpExecArray_of_js
            (Ojs.call (t_to_js x1001) "exec" [|(Ojs.string_to_js x1000)|])
    let (test : t -> string:string -> bool) =
      fun (x1004 : t) ->
        fun ~string:(x1003 : string) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x1004) "test" [|(Ojs.string_to_js x1003)|])
    let (get_source : t -> string) =
      fun (x1005 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1005) "source")
    let (get_global : t -> bool) =
      fun (x1006 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1006) "global")
    let (get_ignoreCase : t -> bool) =
      fun (x1007 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1007) "ignoreCase")
    let (get_multiline : t -> bool) =
      fun (x1008 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1008) "multiline")
    let (get_lastIndex : t -> float) =
      fun (x1009 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1009) "lastIndex")
    let (set_lastIndex : t -> float -> unit) =
      fun (x1010 : t) ->
        fun (x1011 : float) ->
          Ojs.set_prop_ascii (t_to_js x1010) "lastIndex"
            (Ojs.float_to_js x1011)
    let (compile : t -> t) =
      fun (x1012 : t) -> t_of_js (Ojs.call (t_to_js x1012) "compile" [||])
    let (create : pattern:_RegExp or_string -> _RegExp) =
      fun ~pattern:(x1013 : _RegExp or_string) ->
        _RegExp_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|(or_string_to_js _RegExp_to_js x1013)|])
    let (create' : pattern:string -> ?flags:string -> unit -> _RegExp) =
      fun ~pattern:(x1015 : string) ->
        fun ?flags:(x1016 : string option) ->
          fun () ->
            _RegExp_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1017 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1017 "push" [|(Ojs.string_to_js x1015)|]);
                  (match x1016 with
                   | Some x1018 ->
                       ignore
                         (Ojs.call x1017 "push" [|(Ojs.string_to_js x1018)|])
                   | None -> ());
                  x1017))
    let (get__1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$1" [||])
    let (set__1 : string -> unit) =
      fun (x1019 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$1"
             [|(Ojs.string_to_js x1019)|])
    let (get__2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$2" [||])
    let (set__2 : string -> unit) =
      fun (x1020 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$2"
             [|(Ojs.string_to_js x1020)|])
    let (get__3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$3" [||])
    let (set__3 : string -> unit) =
      fun (x1021 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$3"
             [|(Ojs.string_to_js x1021)|])
    let (get__4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$4" [||])
    let (set__4 : string -> unit) =
      fun (x1022 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$4"
             [|(Ojs.string_to_js x1022)|])
    let (get__5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$5" [||])
    let (set__5 : string -> unit) =
      fun (x1023 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$5"
             [|(Ojs.string_to_js x1023)|])
    let (get__6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$6" [||])
    let (set__6 : string -> unit) =
      fun (x1024 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$6"
             [|(Ojs.string_to_js x1024)|])
    let (get__7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$7" [||])
    let (set__7 : string -> unit) =
      fun (x1025 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$7"
             [|(Ojs.string_to_js x1025)|])
    let (get__8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$8" [||])
    let (set__8 : string -> unit) =
      fun (x1026 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$8"
             [|(Ojs.string_to_js x1026)|])
    let (get__9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$9" [||])
    let (set__9 : string -> unit) =
      fun (x1027 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$9"
             [|(Ojs.string_to_js x1027)|])
    let (get_lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "lastMatch" [||])
    let (set_lastMatch : string -> unit) =
      fun (x1028 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "lastMatch"
             [|(Ojs.string_to_js x1028)|])
  end
module RegExpConstructor =
  struct
    type t = _RegExpConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1030 : Ojs.t) -> _RegExpConstructor_of_js x1030
    and t_to_js : t -> Ojs.t =
      fun (x1029 : _RegExpConstructor) -> _RegExpConstructor_to_js x1029
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1032 : Ojs.t) -> t_of_js x1032
    and t_0_to_js : t_0 -> Ojs.t = fun (x1031 : t) -> t_to_js x1031
    let (create : t -> pattern:_RegExp or_string -> _RegExp) =
      fun (x1035 : t) ->
        fun ~pattern:(x1033 : _RegExp or_string) ->
          _RegExp_of_js
            (Ojs.new_obj (t_to_js x1035)
               [|(or_string_to_js _RegExp_to_js x1033)|])
    let (create' : t -> pattern:string -> ?flags:string -> unit -> _RegExp) =
      fun (x1040 : t) ->
        fun ~pattern:(x1036 : string) ->
          fun ?flags:(x1037 : string option) ->
            fun () ->
              _RegExp_of_js
                (Ojs.new_obj_arr (t_to_js x1040)
                   (let x1038 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x1038 "push" [|(Ojs.string_to_js x1036)|]);
                    (match x1037 with
                     | Some x1039 ->
                         ignore
                           (Ojs.call x1038 "push"
                              [|(Ojs.string_to_js x1039)|])
                     | None -> ());
                    x1038))
    let (apply : t -> pattern:_RegExp or_string -> _RegExp) =
      fun (x1043 : t) ->
        fun ~pattern:(x1041 : _RegExp or_string) ->
          _RegExp_of_js
            (Ojs.apply (t_to_js x1043)
               [|(or_string_to_js _RegExp_to_js x1041)|])
    let (apply' : t -> pattern:string -> ?flags:string -> unit -> _RegExp) =
      fun (x1048 : t) ->
        fun ~pattern:(x1044 : string) ->
          fun ?flags:(x1045 : string option) ->
            fun () ->
              _RegExp_of_js
                (Ojs.call (t_to_js x1048) "apply"
                   [|Ojs.null;((let x1046 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x1046 "push"
                                     [|(Ojs.string_to_js x1044)|]);
                                (match x1045 with
                                 | Some x1047 ->
                                     ignore
                                       (Ojs.call x1046 "push"
                                          [|(Ojs.string_to_js x1047)|])
                                 | None -> ());
                                x1046))|])
    let (get_prototype : t -> _RegExp) =
      fun (x1049 : t) ->
        _RegExp_of_js (Ojs.get_prop_ascii (t_to_js x1049) "prototype")
    let (get__1 : t -> string) =
      fun (x1050 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1050) "$1")
    let (set__1 : t -> string -> unit) =
      fun (x1051 : t) ->
        fun (x1052 : string) ->
          Ojs.set_prop_ascii (t_to_js x1051) "$1" (Ojs.string_to_js x1052)
    let (get__2 : t -> string) =
      fun (x1053 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1053) "$2")
    let (set__2 : t -> string -> unit) =
      fun (x1054 : t) ->
        fun (x1055 : string) ->
          Ojs.set_prop_ascii (t_to_js x1054) "$2" (Ojs.string_to_js x1055)
    let (get__3 : t -> string) =
      fun (x1056 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1056) "$3")
    let (set__3 : t -> string -> unit) =
      fun (x1057 : t) ->
        fun (x1058 : string) ->
          Ojs.set_prop_ascii (t_to_js x1057) "$3" (Ojs.string_to_js x1058)
    let (get__4 : t -> string) =
      fun (x1059 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1059) "$4")
    let (set__4 : t -> string -> unit) =
      fun (x1060 : t) ->
        fun (x1061 : string) ->
          Ojs.set_prop_ascii (t_to_js x1060) "$4" (Ojs.string_to_js x1061)
    let (get__5 : t -> string) =
      fun (x1062 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1062) "$5")
    let (set__5 : t -> string -> unit) =
      fun (x1063 : t) ->
        fun (x1064 : string) ->
          Ojs.set_prop_ascii (t_to_js x1063) "$5" (Ojs.string_to_js x1064)
    let (get__6 : t -> string) =
      fun (x1065 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1065) "$6")
    let (set__6 : t -> string -> unit) =
      fun (x1066 : t) ->
        fun (x1067 : string) ->
          Ojs.set_prop_ascii (t_to_js x1066) "$6" (Ojs.string_to_js x1067)
    let (get__7 : t -> string) =
      fun (x1068 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1068) "$7")
    let (set__7 : t -> string -> unit) =
      fun (x1069 : t) ->
        fun (x1070 : string) ->
          Ojs.set_prop_ascii (t_to_js x1069) "$7" (Ojs.string_to_js x1070)
    let (get__8 : t -> string) =
      fun (x1071 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1071) "$8")
    let (set__8 : t -> string -> unit) =
      fun (x1072 : t) ->
        fun (x1073 : string) ->
          Ojs.set_prop_ascii (t_to_js x1072) "$8" (Ojs.string_to_js x1073)
    let (get__9 : t -> string) =
      fun (x1074 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1074) "$9")
    let (set__9 : t -> string -> unit) =
      fun (x1075 : t) ->
        fun (x1076 : string) ->
          Ojs.set_prop_ascii (t_to_js x1075) "$9" (Ojs.string_to_js x1076)
    let (get_lastMatch : t -> string) =
      fun (x1077 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1077) "lastMatch")
    let (set_lastMatch : t -> string -> unit) =
      fun (x1078 : t) ->
        fun (x1079 : string) ->
          Ojs.set_prop_ascii (t_to_js x1078) "lastMatch"
            (Ojs.string_to_js x1079)
  end
let (regExp : _RegExpConstructor) =
  _RegExpConstructor_of_js (Ojs.get_prop_ascii Ojs.global "RegExp")
module Error =
  struct
    type t = _Error
    let rec t_of_js : Ojs.t -> t = fun (x1081 : Ojs.t) -> _Error_of_js x1081
    and t_to_js : t -> Ojs.t = fun (x1080 : _Error) -> _Error_to_js x1080
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1083 : Ojs.t) -> t_of_js x1083
    and t_0_to_js : t_0 -> Ojs.t = fun (x1082 : t) -> t_to_js x1082
    let (get_name : t -> string) =
      fun (x1084 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1084) "name")
    let (set_name : t -> string -> unit) =
      fun (x1085 : t) ->
        fun (x1086 : string) ->
          Ojs.set_prop_ascii (t_to_js x1085) "name" (Ojs.string_to_js x1086)
    let (get_message : t -> string) =
      fun (x1087 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1087) "message")
    let (set_message : t -> string -> unit) =
      fun (x1088 : t) ->
        fun (x1089 : string) ->
          Ojs.set_prop_ascii (t_to_js x1088) "message"
            (Ojs.string_to_js x1089)
    let (get_stack : t -> string) =
      fun (x1090 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1090) "stack")
    let (set_stack : t -> string -> unit) =
      fun (x1091 : t) ->
        fun (x1092 : string) ->
          Ojs.set_prop_ascii (t_to_js x1091) "stack" (Ojs.string_to_js x1092)
    let (create : ?message:string -> unit -> _Error) =
      fun ?message:(x1093 : string option) ->
        fun () ->
          _Error_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x1094 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1093 with
                 | Some x1095 ->
                     ignore
                       (Ojs.call x1094 "push" [|(Ojs.string_to_js x1095)|])
                 | None -> ());
                x1094))
  end
module ErrorConstructor =
  struct
    type t = _ErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1097 : Ojs.t) -> _ErrorConstructor_of_js x1097
    and t_to_js : t -> Ojs.t =
      fun (x1096 : _ErrorConstructor) -> _ErrorConstructor_to_js x1096
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1099 : Ojs.t) -> t_of_js x1099
    and t_0_to_js : t_0 -> Ojs.t = fun (x1098 : t) -> t_to_js x1098
    let (create : t -> ?message:string -> unit -> _Error) =
      fun (x1103 : t) ->
        fun ?message:(x1100 : string option) ->
          fun () ->
            _Error_of_js
              (Ojs.new_obj_arr (t_to_js x1103)
                 (let x1101 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1100 with
                   | Some x1102 ->
                       ignore
                         (Ojs.call x1101 "push" [|(Ojs.string_to_js x1102)|])
                   | None -> ());
                  x1101))
    let (apply : t -> ?message:string -> unit -> _Error) =
      fun (x1107 : t) ->
        fun ?message:(x1104 : string option) ->
          fun () ->
            _Error_of_js
              (Ojs.call (t_to_js x1107) "apply"
                 [|Ojs.null;((let x1105 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1104 with
                               | Some x1106 ->
                                   ignore
                                     (Ojs.call x1105 "push"
                                        [|(Ojs.string_to_js x1106)|])
                               | None -> ());
                              x1105))|])
    let (get_prototype : t -> _Error) =
      fun (x1108 : t) ->
        _Error_of_js (Ojs.get_prop_ascii (t_to_js x1108) "prototype")
  end
let (error : _ErrorConstructor) =
  _ErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Error")
module EvalError =
  struct
    type t = _EvalError
    let rec t_of_js : Ojs.t -> t =
      fun (x1110 : Ojs.t) -> _EvalError_of_js x1110
    and t_to_js : t -> Ojs.t =
      fun (x1109 : _EvalError) -> _EvalError_to_js x1109
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1112 : Ojs.t) -> t_of_js x1112
    and t_0_to_js : t_0 -> Ojs.t = fun (x1111 : t) -> t_to_js x1111
    let (cast : t -> _Error) =
      fun (x1113 : t) -> _Error_of_js (t_to_js x1113)
    let (create : ?message:string -> unit -> _EvalError) =
      fun ?message:(x1114 : string option) ->
        fun () ->
          _EvalError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x1115 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1114 with
                 | Some x1116 ->
                     ignore
                       (Ojs.call x1115 "push" [|(Ojs.string_to_js x1116)|])
                 | None -> ());
                x1115))
  end
module EvalErrorConstructor =
  struct
    type t = _EvalErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1118 : Ojs.t) -> _EvalErrorConstructor_of_js x1118
    and t_to_js : t -> Ojs.t =
      fun (x1117 : _EvalErrorConstructor) ->
        _EvalErrorConstructor_to_js x1117
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1120 : Ojs.t) -> t_of_js x1120
    and t_0_to_js : t_0 -> Ojs.t = fun (x1119 : t) -> t_to_js x1119
    let (create : t -> ?message:string -> unit -> _EvalError) =
      fun (x1124 : t) ->
        fun ?message:(x1121 : string option) ->
          fun () ->
            _EvalError_of_js
              (Ojs.new_obj_arr (t_to_js x1124)
                 (let x1122 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1121 with
                   | Some x1123 ->
                       ignore
                         (Ojs.call x1122 "push" [|(Ojs.string_to_js x1123)|])
                   | None -> ());
                  x1122))
    let (apply : t -> ?message:string -> unit -> _EvalError) =
      fun (x1128 : t) ->
        fun ?message:(x1125 : string option) ->
          fun () ->
            _EvalError_of_js
              (Ojs.call (t_to_js x1128) "apply"
                 [|Ojs.null;((let x1126 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1125 with
                               | Some x1127 ->
                                   ignore
                                     (Ojs.call x1126 "push"
                                        [|(Ojs.string_to_js x1127)|])
                               | None -> ());
                              x1126))|])
    let (get_prototype : t -> _EvalError) =
      fun (x1129 : t) ->
        _EvalError_of_js (Ojs.get_prop_ascii (t_to_js x1129) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1130 : t) -> _ErrorConstructor_of_js (t_to_js x1130)
  end
let (evalError : _EvalErrorConstructor) =
  _EvalErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "EvalError")
module RangeError =
  struct
    type t = _RangeError
    let rec t_of_js : Ojs.t -> t =
      fun (x1132 : Ojs.t) -> _RangeError_of_js x1132
    and t_to_js : t -> Ojs.t =
      fun (x1131 : _RangeError) -> _RangeError_to_js x1131
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1134 : Ojs.t) -> t_of_js x1134
    and t_0_to_js : t_0 -> Ojs.t = fun (x1133 : t) -> t_to_js x1133
    let (cast : t -> _Error) =
      fun (x1135 : t) -> _Error_of_js (t_to_js x1135)
    let (create : ?message:string -> unit -> _RangeError) =
      fun ?message:(x1136 : string option) ->
        fun () ->
          _RangeError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x1137 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1136 with
                 | Some x1138 ->
                     ignore
                       (Ojs.call x1137 "push" [|(Ojs.string_to_js x1138)|])
                 | None -> ());
                x1137))
  end
module RangeErrorConstructor =
  struct
    type t = _RangeErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1140 : Ojs.t) -> _RangeErrorConstructor_of_js x1140
    and t_to_js : t -> Ojs.t =
      fun (x1139 : _RangeErrorConstructor) ->
        _RangeErrorConstructor_to_js x1139
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1142 : Ojs.t) -> t_of_js x1142
    and t_0_to_js : t_0 -> Ojs.t = fun (x1141 : t) -> t_to_js x1141
    let (create : t -> ?message:string -> unit -> _RangeError) =
      fun (x1146 : t) ->
        fun ?message:(x1143 : string option) ->
          fun () ->
            _RangeError_of_js
              (Ojs.new_obj_arr (t_to_js x1146)
                 (let x1144 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1143 with
                   | Some x1145 ->
                       ignore
                         (Ojs.call x1144 "push" [|(Ojs.string_to_js x1145)|])
                   | None -> ());
                  x1144))
    let (apply : t -> ?message:string -> unit -> _RangeError) =
      fun (x1150 : t) ->
        fun ?message:(x1147 : string option) ->
          fun () ->
            _RangeError_of_js
              (Ojs.call (t_to_js x1150) "apply"
                 [|Ojs.null;((let x1148 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1147 with
                               | Some x1149 ->
                                   ignore
                                     (Ojs.call x1148 "push"
                                        [|(Ojs.string_to_js x1149)|])
                               | None -> ());
                              x1148))|])
    let (get_prototype : t -> _RangeError) =
      fun (x1151 : t) ->
        _RangeError_of_js (Ojs.get_prop_ascii (t_to_js x1151) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1152 : t) -> _ErrorConstructor_of_js (t_to_js x1152)
  end
let (rangeError : _RangeErrorConstructor) =
  _RangeErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "RangeError")
module ReferenceError =
  struct
    type t = _ReferenceError
    let rec t_of_js : Ojs.t -> t =
      fun (x1154 : Ojs.t) -> _ReferenceError_of_js x1154
    and t_to_js : t -> Ojs.t =
      fun (x1153 : _ReferenceError) -> _ReferenceError_to_js x1153
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1156 : Ojs.t) -> t_of_js x1156
    and t_0_to_js : t_0 -> Ojs.t = fun (x1155 : t) -> t_to_js x1155
    let (cast : t -> _Error) =
      fun (x1157 : t) -> _Error_of_js (t_to_js x1157)
    let (create : ?message:string -> unit -> _ReferenceError) =
      fun ?message:(x1158 : string option) ->
        fun () ->
          _ReferenceError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x1159 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1158 with
                 | Some x1160 ->
                     ignore
                       (Ojs.call x1159 "push" [|(Ojs.string_to_js x1160)|])
                 | None -> ());
                x1159))
  end
module ReferenceErrorConstructor =
  struct
    type t = _ReferenceErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1162 : Ojs.t) -> _ReferenceErrorConstructor_of_js x1162
    and t_to_js : t -> Ojs.t =
      fun (x1161 : _ReferenceErrorConstructor) ->
        _ReferenceErrorConstructor_to_js x1161
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1164 : Ojs.t) -> t_of_js x1164
    and t_0_to_js : t_0 -> Ojs.t = fun (x1163 : t) -> t_to_js x1163
    let (create : t -> ?message:string -> unit -> _ReferenceError) =
      fun (x1168 : t) ->
        fun ?message:(x1165 : string option) ->
          fun () ->
            _ReferenceError_of_js
              (Ojs.new_obj_arr (t_to_js x1168)
                 (let x1166 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1165 with
                   | Some x1167 ->
                       ignore
                         (Ojs.call x1166 "push" [|(Ojs.string_to_js x1167)|])
                   | None -> ());
                  x1166))
    let (apply : t -> ?message:string -> unit -> _ReferenceError) =
      fun (x1172 : t) ->
        fun ?message:(x1169 : string option) ->
          fun () ->
            _ReferenceError_of_js
              (Ojs.call (t_to_js x1172) "apply"
                 [|Ojs.null;((let x1170 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1169 with
                               | Some x1171 ->
                                   ignore
                                     (Ojs.call x1170 "push"
                                        [|(Ojs.string_to_js x1171)|])
                               | None -> ());
                              x1170))|])
    let (get_prototype : t -> _ReferenceError) =
      fun (x1173 : t) ->
        _ReferenceError_of_js
          (Ojs.get_prop_ascii (t_to_js x1173) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1174 : t) -> _ErrorConstructor_of_js (t_to_js x1174)
  end
let (referenceError : _ReferenceErrorConstructor) =
  _ReferenceErrorConstructor_of_js
    (Ojs.get_prop_ascii Ojs.global "ReferenceError")
module SyntaxError =
  struct
    type t = _SyntaxError
    let rec t_of_js : Ojs.t -> t =
      fun (x1176 : Ojs.t) -> _SyntaxError_of_js x1176
    and t_to_js : t -> Ojs.t =
      fun (x1175 : _SyntaxError) -> _SyntaxError_to_js x1175
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1178 : Ojs.t) -> t_of_js x1178
    and t_0_to_js : t_0 -> Ojs.t = fun (x1177 : t) -> t_to_js x1177
    let (cast : t -> _Error) =
      fun (x1179 : t) -> _Error_of_js (t_to_js x1179)
    let (create : ?message:string -> unit -> _SyntaxError) =
      fun ?message:(x1180 : string option) ->
        fun () ->
          _SyntaxError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1181 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1180 with
                 | Some x1182 ->
                     ignore
                       (Ojs.call x1181 "push" [|(Ojs.string_to_js x1182)|])
                 | None -> ());
                x1181))
  end
module SyntaxErrorConstructor =
  struct
    type t = _SyntaxErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1184 : Ojs.t) -> _SyntaxErrorConstructor_of_js x1184
    and t_to_js : t -> Ojs.t =
      fun (x1183 : _SyntaxErrorConstructor) ->
        _SyntaxErrorConstructor_to_js x1183
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1186 : Ojs.t) -> t_of_js x1186
    and t_0_to_js : t_0 -> Ojs.t = fun (x1185 : t) -> t_to_js x1185
    let (create : t -> ?message:string -> unit -> _SyntaxError) =
      fun (x1190 : t) ->
        fun ?message:(x1187 : string option) ->
          fun () ->
            _SyntaxError_of_js
              (Ojs.new_obj_arr (t_to_js x1190)
                 (let x1188 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1187 with
                   | Some x1189 ->
                       ignore
                         (Ojs.call x1188 "push" [|(Ojs.string_to_js x1189)|])
                   | None -> ());
                  x1188))
    let (apply : t -> ?message:string -> unit -> _SyntaxError) =
      fun (x1194 : t) ->
        fun ?message:(x1191 : string option) ->
          fun () ->
            _SyntaxError_of_js
              (Ojs.call (t_to_js x1194) "apply"
                 [|Ojs.null;((let x1192 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1191 with
                               | Some x1193 ->
                                   ignore
                                     (Ojs.call x1192 "push"
                                        [|(Ojs.string_to_js x1193)|])
                               | None -> ());
                              x1192))|])
    let (get_prototype : t -> _SyntaxError) =
      fun (x1195 : t) ->
        _SyntaxError_of_js (Ojs.get_prop_ascii (t_to_js x1195) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1196 : t) -> _ErrorConstructor_of_js (t_to_js x1196)
  end
let (syntaxError : _SyntaxErrorConstructor) =
  _SyntaxErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "SyntaxError")
module TypeError =
  struct
    type t = _TypeError
    let rec t_of_js : Ojs.t -> t =
      fun (x1198 : Ojs.t) -> _TypeError_of_js x1198
    and t_to_js : t -> Ojs.t =
      fun (x1197 : _TypeError) -> _TypeError_to_js x1197
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1200 : Ojs.t) -> t_of_js x1200
    and t_0_to_js : t_0 -> Ojs.t = fun (x1199 : t) -> t_to_js x1199
    let (cast : t -> _Error) =
      fun (x1201 : t) -> _Error_of_js (t_to_js x1201)
    let (create : ?message:string -> unit -> _TypeError) =
      fun ?message:(x1202 : string option) ->
        fun () ->
          _TypeError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x1203 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1202 with
                 | Some x1204 ->
                     ignore
                       (Ojs.call x1203 "push" [|(Ojs.string_to_js x1204)|])
                 | None -> ());
                x1203))
  end
module TypeErrorConstructor =
  struct
    type t = _TypeErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1206 : Ojs.t) -> _TypeErrorConstructor_of_js x1206
    and t_to_js : t -> Ojs.t =
      fun (x1205 : _TypeErrorConstructor) ->
        _TypeErrorConstructor_to_js x1205
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1208 : Ojs.t) -> t_of_js x1208
    and t_0_to_js : t_0 -> Ojs.t = fun (x1207 : t) -> t_to_js x1207
    let (create : t -> ?message:string -> unit -> _TypeError) =
      fun (x1212 : t) ->
        fun ?message:(x1209 : string option) ->
          fun () ->
            _TypeError_of_js
              (Ojs.new_obj_arr (t_to_js x1212)
                 (let x1210 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1209 with
                   | Some x1211 ->
                       ignore
                         (Ojs.call x1210 "push" [|(Ojs.string_to_js x1211)|])
                   | None -> ());
                  x1210))
    let (apply : t -> ?message:string -> unit -> _TypeError) =
      fun (x1216 : t) ->
        fun ?message:(x1213 : string option) ->
          fun () ->
            _TypeError_of_js
              (Ojs.call (t_to_js x1216) "apply"
                 [|Ojs.null;((let x1214 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1213 with
                               | Some x1215 ->
                                   ignore
                                     (Ojs.call x1214 "push"
                                        [|(Ojs.string_to_js x1215)|])
                               | None -> ());
                              x1214))|])
    let (get_prototype : t -> _TypeError) =
      fun (x1217 : t) ->
        _TypeError_of_js (Ojs.get_prop_ascii (t_to_js x1217) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1218 : t) -> _ErrorConstructor_of_js (t_to_js x1218)
  end
let (typeError : _TypeErrorConstructor) =
  _TypeErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "TypeError")
module URIError =
  struct
    type t = _URIError
    let rec t_of_js : Ojs.t -> t =
      fun (x1220 : Ojs.t) -> _URIError_of_js x1220
    and t_to_js : t -> Ojs.t =
      fun (x1219 : _URIError) -> _URIError_to_js x1219
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1222 : Ojs.t) -> t_of_js x1222
    and t_0_to_js : t_0 -> Ojs.t = fun (x1221 : t) -> t_to_js x1221
    let (cast : t -> _Error) =
      fun (x1223 : t) -> _Error_of_js (t_to_js x1223)
    let (create : ?message:string -> unit -> _URIError) =
      fun ?message:(x1224 : string option) ->
        fun () ->
          _URIError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x1225 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1224 with
                 | Some x1226 ->
                     ignore
                       (Ojs.call x1225 "push" [|(Ojs.string_to_js x1226)|])
                 | None -> ());
                x1225))
  end
module URIErrorConstructor =
  struct
    type t = _URIErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1228 : Ojs.t) -> _URIErrorConstructor_of_js x1228
    and t_to_js : t -> Ojs.t =
      fun (x1227 : _URIErrorConstructor) -> _URIErrorConstructor_to_js x1227
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1230 : Ojs.t) -> t_of_js x1230
    and t_0_to_js : t_0 -> Ojs.t = fun (x1229 : t) -> t_to_js x1229
    let (create : t -> ?message:string -> unit -> _URIError) =
      fun (x1234 : t) ->
        fun ?message:(x1231 : string option) ->
          fun () ->
            _URIError_of_js
              (Ojs.new_obj_arr (t_to_js x1234)
                 (let x1232 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1231 with
                   | Some x1233 ->
                       ignore
                         (Ojs.call x1232 "push" [|(Ojs.string_to_js x1233)|])
                   | None -> ());
                  x1232))
    let (apply : t -> ?message:string -> unit -> _URIError) =
      fun (x1238 : t) ->
        fun ?message:(x1235 : string option) ->
          fun () ->
            _URIError_of_js
              (Ojs.call (t_to_js x1238) "apply"
                 [|Ojs.null;((let x1236 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1235 with
                               | Some x1237 ->
                                   ignore
                                     (Ojs.call x1236 "push"
                                        [|(Ojs.string_to_js x1237)|])
                               | None -> ());
                              x1236))|])
    let (get_prototype : t -> _URIError) =
      fun (x1239 : t) ->
        _URIError_of_js (Ojs.get_prop_ascii (t_to_js x1239) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1240 : t) -> _ErrorConstructor_of_js (t_to_js x1240)
  end
let (uriError : _URIErrorConstructor) =
  _URIErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "URIError")
module JSON =
  struct
    type t = _JSON
    let rec t_of_js : Ojs.t -> t = fun (x1242 : Ojs.t) -> _JSON_of_js x1242
    and t_to_js : t -> Ojs.t = fun (x1241 : _JSON) -> _JSON_to_js x1241
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1244 : Ojs.t) -> t_of_js x1244
    and t_0_to_js : t_0 -> Ojs.t = fun (x1243 : t) -> t_to_js x1243
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x1245 : string) ->
        fun
          ?reviver:(x1246 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x1252 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x1252 "parse") "apply"
                 [|x1252;((let x1247 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1247 "push"
                                [|(Ojs.string_to_js x1245)|]);
                           (match x1246 with
                            | Some x1248 ->
                                ignore
                                  (Ojs.call x1247 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x1249 : Ojs.t) ->
                                             fun (x1250 : Ojs.t) ->
                                               fun (x1251 : Ojs.t) ->
                                                 any_to_js
                                                   (x1248
                                                      ~this:(any_of_js x1249)
                                                      ~key:(Ojs.string_of_js
                                                              x1250)
                                                      ~value:(any_of_js x1251))))|])
                            | None -> ());
                           x1247))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:string or_number -> unit -> string)
      =
      fun ~value:(x1253 : any) ->
        fun
          ?replacer:(x1254 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x1255 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x1263 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x1263 "stringify") "apply"
                   [|x1263;((let x1256 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1256 "push" [|(any_to_js x1253)|]);
                             (match x1254 with
                              | Some x1259 ->
                                  ignore
                                    (Ojs.call x1256 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x1260 : Ojs.t) ->
                                               fun (x1261 : Ojs.t) ->
                                                 fun (x1262 : Ojs.t) ->
                                                   any_to_js
                                                     (x1259
                                                        ~this:(any_of_js
                                                                 x1260)
                                                        ~key:(Ojs.string_of_js
                                                                x1261)
                                                        ~value:(any_of_js
                                                                  x1262))))|])
                              | None -> ());
                             (match x1255 with
                              | Some x1257 ->
                                  ignore
                                    (Ojs.call x1256 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x1257)|])
                              | None -> ());
                             x1256))|])
    let (stringify' :
      value:any ->
        ?replacer:string or_number list or_null ->
          ?space:string or_number -> unit -> string)
      =
      fun ~value:(x1264 : any) ->
        fun ?replacer:(x1265 : string or_number list or_null option) ->
          fun ?space:(x1266 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x1274 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x1274 "stringify") "apply"
                   [|x1274;((let x1267 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1267 "push" [|(any_to_js x1264)|]);
                             (match x1265 with
                              | Some x1270 ->
                                  ignore
                                    (Ojs.call x1267 "push"
                                       [|(or_null_to_js
                                            (fun
                                               (x1271 :
                                                 string or_number list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x1272 :
                                                      string or_number)
                                                    ->
                                                    or_number_to_js
                                                      Ojs.string_to_js x1272)
                                                 x1271) x1270)|])
                              | None -> ());
                             (match x1266 with
                              | Some x1268 ->
                                  ignore
                                    (Ojs.call x1267 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x1268)|])
                              | None -> ());
                             x1267))|])
  end
module ReadonlyArray =
  struct
    type 'T t = 'T _ReadonlyArray
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1277 : Ojs.t) -> _ReadonlyArray_of_js __T_of_js x1277
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1275 : __T _ReadonlyArray) ->
          _ReadonlyArray_to_js __T_to_js x1275
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1281 : Ojs.t) -> t_of_js __T_of_js x1281
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1279 : __T t) -> t_to_js __T_to_js x1279
    let (get_length : 'T t -> float) =
      fun (x1283 : 'T t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1283) "length")
    let (toString : 'T t -> string) =
      fun (x1285 : 'T t) ->
        Ojs.string_of_js (Ojs.call (t_to_js Obj.magic x1285) "toString" [||])
    let (toLocaleString : 'T t -> string) =
      fun (x1287 : 'T t) ->
        Ojs.string_of_js
          (Ojs.call (t_to_js Obj.magic x1287) "toLocaleString" [||])
    let (concat : 'T t -> items:'T _ConcatArray list -> 'T list) =
      fun (x1293 : 'T t) ->
        fun ~items:(x1289 : 'T _ConcatArray list) ->
          Ojs.list_of_js Obj.magic
            (let x1295 = t_to_js Obj.magic x1293 in
             Ojs.call (Ojs.get_prop_ascii x1295 "concat") "apply"
               [|x1295;((let x1290 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1291 : 'T _ConcatArray) ->
                              ignore
                                (Ojs.call x1290 "push"
                                   [|(_ConcatArray_to_js Obj.magic x1291)|]))
                           x1289;
                         x1290))|])
    let (concat' :
      'T t -> items:('T, 'T _ConcatArray) union2 list -> 'T list) =
      fun (x1303 : 'T t) ->
        fun ~items:(x1297 : ('T, 'T _ConcatArray) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x1305 = t_to_js Obj.magic x1303 in
             Ojs.call (Ojs.get_prop_ascii x1305 "concat") "apply"
               [|x1305;((let x1298 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1299 : ('T, 'T _ConcatArray) union2) ->
                              ignore
                                (Ojs.call x1298 "push"
                                   [|(union2_to_js Obj.magic
                                        (fun (x1301 : 'T _ConcatArray) ->
                                           _ConcatArray_to_js Obj.magic x1301)
                                        x1299)|])) x1297;
                         x1298))|])
    let (join : 'T t -> ?separator:string -> unit -> string) =
      fun (x1310 : 'T t) ->
        fun ?separator:(x1307 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1312 = t_to_js Obj.magic x1310 in
               Ojs.call (Ojs.get_prop_ascii x1312 "join") "apply"
                 [|x1312;((let x1308 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1307 with
                            | Some x1309 ->
                                ignore
                                  (Ojs.call x1308 "push"
                                     [|(Ojs.string_to_js x1309)|])
                            | None -> ());
                           x1308))|])
    let (slice : 'T t -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1318 : 'T t) ->
        fun ?start:(x1313 : float option) ->
          fun ?end_:(x1314 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1320 = t_to_js Obj.magic x1318 in
                 Ojs.call (Ojs.get_prop_ascii x1320 "slice") "apply"
                   [|x1320;((let x1315 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1313 with
                              | Some x1317 ->
                                  ignore
                                    (Ojs.call x1315 "push"
                                       [|(Ojs.float_to_js x1317)|])
                              | None -> ());
                             (match x1314 with
                              | Some x1316 ->
                                  ignore
                                    (Ojs.call x1315 "push"
                                       [|(Ojs.float_to_js x1316)|])
                              | None -> ());
                             x1315))|])
    let (indexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1326 : 'T t) ->
        fun ~searchElement:(x1322 : 'T) ->
          fun ?fromIndex:(x1323 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1328 = t_to_js Obj.magic x1326 in
                 Ojs.call (Ojs.get_prop_ascii x1328 "indexOf") "apply"
                   [|x1328;((let x1324 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1324 "push" [|(Obj.magic x1322)|]);
                             (match x1323 with
                              | Some x1325 ->
                                  ignore
                                    (Ojs.call x1324 "push"
                                       [|(Ojs.float_to_js x1325)|])
                              | None -> ());
                             x1324))|])
    let (lastIndexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1333 : 'T t) ->
        fun ~searchElement:(x1329 : 'T) ->
          fun ?fromIndex:(x1330 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1335 = t_to_js Obj.magic x1333 in
                 Ojs.call (Ojs.get_prop_ascii x1335 "lastIndexOf") "apply"
                   [|x1335;((let x1331 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1331 "push" [|(Obj.magic x1329)|]);
                             (match x1330 with
                              | Some x1332 ->
                                  ignore
                                    (Ojs.call x1331 "push"
                                       [|(Ojs.float_to_js x1332)|])
                              | None -> ());
                             x1331))|])
    let (every :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1344 : 'T t) ->
        fun
          ~predicate:(x1336 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1337 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1346 = t_to_js Obj.magic x1344 in
                 Ojs.call (Ojs.get_prop_ascii x1346 "every") "apply"
                   [|x1346;((let x1338 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1338 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1340 : Ojs.t) ->
                                          fun (x1341 : Ojs.t) ->
                                            fun (x1342 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1336
                                                   ~value:(Obj.magic x1340)
                                                   ~index:(Ojs.float_of_js
                                                             x1341)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1342))))|]);
                             (match x1337 with
                              | Some x1339 ->
                                  ignore
                                    (Ojs.call x1338 "push"
                                       [|(any_to_js x1339)|])
                              | None -> ());
                             x1338))|])
    let (every' :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1355 : 'T t) ->
        fun
          ~predicate:(x1347 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1348 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1357 = t_to_js Obj.magic x1355 in
                 Ojs.call (Ojs.get_prop_ascii x1357 "every") "apply"
                   [|x1357;((let x1349 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1349 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1351 : Ojs.t) ->
                                          fun (x1352 : Ojs.t) ->
                                            fun (x1353 : Ojs.t) ->
                                              unknown_to_js
                                                (x1347
                                                   ~value:(Obj.magic x1351)
                                                   ~index:(Ojs.float_of_js
                                                             x1352)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1353))))|]);
                             (match x1348 with
                              | Some x1350 ->
                                  ignore
                                    (Ojs.call x1349 "push"
                                       [|(any_to_js x1350)|])
                              | None -> ());
                             x1349))|])
    let (some :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1366 : 'T t) ->
        fun
          ~predicate:(x1358 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1359 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1368 = t_to_js Obj.magic x1366 in
                 Ojs.call (Ojs.get_prop_ascii x1368 "some") "apply"
                   [|x1368;((let x1360 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1360 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1362 : Ojs.t) ->
                                          fun (x1363 : Ojs.t) ->
                                            fun (x1364 : Ojs.t) ->
                                              unknown_to_js
                                                (x1358
                                                   ~value:(Obj.magic x1362)
                                                   ~index:(Ojs.float_of_js
                                                             x1363)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1364))))|]);
                             (match x1359 with
                              | Some x1361 ->
                                  ignore
                                    (Ojs.call x1360 "push"
                                       [|(any_to_js x1361)|])
                              | None -> ());
                             x1360))|])
    let (forEach :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1377 : 'T t) ->
        fun
          ~callbackfn:(x1369 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1370 : any option) ->
            fun () ->
              ignore
                (let x1379 = t_to_js Obj.magic x1377 in
                 Ojs.call (Ojs.get_prop_ascii x1379 "forEach") "apply"
                   [|x1379;((let x1371 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1371 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1373 : Ojs.t) ->
                                          fun (x1374 : Ojs.t) ->
                                            fun (x1375 : Ojs.t) ->
                                              x1369 ~value:(Obj.magic x1373)
                                                ~index:(Ojs.float_of_js x1374)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1375)))|]);
                             (match x1370 with
                              | Some x1372 ->
                                  ignore
                                    (Ojs.call x1371 "push"
                                       [|(any_to_js x1372)|])
                              | None -> ());
                             x1371))|])
    let (map :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1388 : 'T t) ->
        fun
          ~callbackfn:(x1380 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1381 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1390 = t_to_js Obj.magic x1388 in
                 Ojs.call (Ojs.get_prop_ascii x1390 "map") "apply"
                   [|x1390;((let x1382 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1382 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1384 : Ojs.t) ->
                                          fun (x1385 : Ojs.t) ->
                                            fun (x1386 : Ojs.t) ->
                                              Obj.magic
                                                (x1380
                                                   ~value:(Obj.magic x1384)
                                                   ~index:(Ojs.float_of_js
                                                             x1385)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1386))))|]);
                             (match x1381 with
                              | Some x1383 ->
                                  ignore
                                    (Ojs.call x1382 "push"
                                       [|(any_to_js x1383)|])
                              | None -> ());
                             x1382))|])
    let (filter :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1400 : 'T t) ->
        fun
          ~predicate:(x1392 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1393 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1402 = t_to_js Obj.magic x1400 in
                 Ojs.call (Ojs.get_prop_ascii x1402 "filter") "apply"
                   [|x1402;((let x1394 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1394 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1396 : Ojs.t) ->
                                          fun (x1397 : Ojs.t) ->
                                            fun (x1398 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1392
                                                   ~value:(Obj.magic x1396)
                                                   ~index:(Ojs.float_of_js
                                                             x1397)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1398))))|]);
                             (match x1393 with
                              | Some x1395 ->
                                  ignore
                                    (Ojs.call x1394 "push"
                                       [|(any_to_js x1395)|])
                              | None -> ());
                             x1394))|])
    let (filter' :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1412 : 'T t) ->
        fun
          ~predicate:(x1404 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1405 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1414 = t_to_js Obj.magic x1412 in
                 Ojs.call (Ojs.get_prop_ascii x1414 "filter") "apply"
                   [|x1414;((let x1406 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1406 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1408 : Ojs.t) ->
                                          fun (x1409 : Ojs.t) ->
                                            fun (x1410 : Ojs.t) ->
                                              unknown_to_js
                                                (x1404
                                                   ~value:(Obj.magic x1408)
                                                   ~index:(Ojs.float_of_js
                                                             x1409)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1410))))|]);
                             (match x1405 with
                              | Some x1407 ->
                                  ignore
                                    (Ojs.call x1406 "push"
                                       [|(any_to_js x1407)|])
                              | None -> ());
                             x1406))|])
    let (reduce :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1422 : 'T t) ->
        fun
          ~callbackfn:(x1416 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1422) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1417 : Ojs.t) ->
                       fun (x1418 : Ojs.t) ->
                         fun (x1419 : Ojs.t) ->
                           fun (x1420 : Ojs.t) ->
                             Obj.magic
                               (x1416 ~previousValue:(Obj.magic x1417)
                                  ~currentValue:(Obj.magic x1418)
                                  ~currentIndex:(Ojs.float_of_js x1419)
                                  ~array:(Ojs.list_of_js Obj.magic x1420))))|])
    let (reduce' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1431 : 'T t) ->
        fun
          ~callbackfn:(x1424 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1430 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1431) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1425 : Ojs.t) ->
                         fun (x1426 : Ojs.t) ->
                           fun (x1427 : Ojs.t) ->
                             fun (x1428 : Ojs.t) ->
                               Obj.magic
                                 (x1424 ~previousValue:(Obj.magic x1425)
                                    ~currentValue:(Obj.magic x1426)
                                    ~currentIndex:(Ojs.float_of_js x1427)
                                    ~array:(Ojs.list_of_js Obj.magic x1428))));(
                   Obj.magic x1430)|])
    let (reduce'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1440 : 'T t) ->
        fun
          ~callbackfn:(x1433 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1439 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1440) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1434 : Ojs.t) ->
                         fun (x1435 : Ojs.t) ->
                           fun (x1436 : Ojs.t) ->
                             fun (x1437 : Ojs.t) ->
                               Obj.magic
                                 (x1433 ~previousValue:(Obj.magic x1434)
                                    ~currentValue:(Obj.magic x1435)
                                    ~currentIndex:(Ojs.float_of_js x1436)
                                    ~array:(Ojs.list_of_js Obj.magic x1437))));(
                   Obj.magic x1439)|])
    let (reduceRight :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1448 : 'T t) ->
        fun
          ~callbackfn:(x1442 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1448) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1443 : Ojs.t) ->
                       fun (x1444 : Ojs.t) ->
                         fun (x1445 : Ojs.t) ->
                           fun (x1446 : Ojs.t) ->
                             Obj.magic
                               (x1442 ~previousValue:(Obj.magic x1443)
                                  ~currentValue:(Obj.magic x1444)
                                  ~currentIndex:(Ojs.float_of_js x1445)
                                  ~array:(Ojs.list_of_js Obj.magic x1446))))|])
    let (reduceRight' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1457 : 'T t) ->
        fun
          ~callbackfn:(x1450 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1456 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1457) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1451 : Ojs.t) ->
                         fun (x1452 : Ojs.t) ->
                           fun (x1453 : Ojs.t) ->
                             fun (x1454 : Ojs.t) ->
                               Obj.magic
                                 (x1450 ~previousValue:(Obj.magic x1451)
                                    ~currentValue:(Obj.magic x1452)
                                    ~currentIndex:(Ojs.float_of_js x1453)
                                    ~array:(Ojs.list_of_js Obj.magic x1454))));(
                   Obj.magic x1456)|])
    let (reduceRight'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1466 : 'T t) ->
        fun
          ~callbackfn:(x1459 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1465 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1466) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1460 : Ojs.t) ->
                         fun (x1461 : Ojs.t) ->
                           fun (x1462 : Ojs.t) ->
                             fun (x1463 : Ojs.t) ->
                               Obj.magic
                                 (x1459 ~previousValue:(Obj.magic x1460)
                                    ~currentValue:(Obj.magic x1461)
                                    ~currentIndex:(Ojs.float_of_js x1462)
                                    ~array:(Ojs.list_of_js Obj.magic x1463))));(
                   Obj.magic x1465)|])
    let (get : 'T t -> float -> 'T) =
      fun (x1468 : 'T t) ->
        fun (x1470 : float) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x1468) (Ojs.float_to_js x1470))
    let (to_ml : 'T t -> 'T list) =
      fun (x1471 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1471)
    let (of_ml : 'T list -> 'T t) =
      fun (x1474 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1474)
  end
module ConcatArray =
  struct
    type 'T t = 'T _ConcatArray
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1479 : Ojs.t) -> _ConcatArray_of_js __T_of_js x1479
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1477 : __T _ConcatArray) -> _ConcatArray_to_js __T_to_js x1477
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1483 : Ojs.t) -> t_of_js __T_of_js x1483
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1481 : __T t) -> t_to_js __T_to_js x1481
    let (get_length : 'T t -> float) =
      fun (x1485 : 'T t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1485) "length")
    let (get : 'T t -> float -> 'T) =
      fun (x1487 : 'T t) ->
        fun (x1489 : float) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x1487) (Ojs.float_to_js x1489))
    let (join : 'T t -> ?separator:string -> unit -> string) =
      fun (x1493 : 'T t) ->
        fun ?separator:(x1490 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1495 = t_to_js Obj.magic x1493 in
               Ojs.call (Ojs.get_prop_ascii x1495 "join") "apply"
                 [|x1495;((let x1491 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1490 with
                            | Some x1492 ->
                                ignore
                                  (Ojs.call x1491 "push"
                                     [|(Ojs.string_to_js x1492)|])
                            | None -> ());
                           x1491))|])
    let (slice : 'T t -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1501 : 'T t) ->
        fun ?start:(x1496 : float option) ->
          fun ?end_:(x1497 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1503 = t_to_js Obj.magic x1501 in
                 Ojs.call (Ojs.get_prop_ascii x1503 "slice") "apply"
                   [|x1503;((let x1498 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1496 with
                              | Some x1500 ->
                                  ignore
                                    (Ojs.call x1498 "push"
                                       [|(Ojs.float_to_js x1500)|])
                              | None -> ());
                             (match x1497 with
                              | Some x1499 ->
                                  ignore
                                    (Ojs.call x1498 "push"
                                       [|(Ojs.float_to_js x1499)|])
                              | None -> ());
                             x1498))|])
  end
module Array =
  struct
    type 'T t = 'T _Array
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1507 : Ojs.t) -> _Array_of_js __T_of_js x1507
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1505 : __T _Array) -> _Array_to_js __T_to_js x1505
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1511 : Ojs.t) -> t_of_js __T_of_js x1511
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1509 : __T t) -> t_to_js __T_to_js x1509
    let (get_length : 'T t -> float) =
      fun (x1513 : 'T t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1513) "length")
    let (set_length : 'T t -> float -> unit) =
      fun (x1515 : 'T t) ->
        fun (x1516 : float) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1515) "length"
            (Ojs.float_to_js x1516)
    let (toString : 'T t -> string) =
      fun (x1518 : 'T t) ->
        Ojs.string_of_js (Ojs.call (t_to_js Obj.magic x1518) "toString" [||])
    let (toLocaleString : 'T t -> string) =
      fun (x1520 : 'T t) ->
        Ojs.string_of_js
          (Ojs.call (t_to_js Obj.magic x1520) "toLocaleString" [||])
    let (pop : 'T t -> 'T or_undefined) =
      fun (x1522 : 'T t) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x1522) "pop" [||])
    let (push : 'T t -> items:'T list -> float) =
      fun (x1528 : 'T t) ->
        fun ~items:(x1525 : 'T list) ->
          Ojs.float_of_js
            (let x1530 = t_to_js Obj.magic x1528 in
             Ojs.call (Ojs.get_prop_ascii x1530 "push") "apply"
               [|x1530;((let x1526 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1527 : 'T) ->
                              ignore
                                (Ojs.call x1526 "push" [|(Obj.magic x1527)|]))
                           x1525;
                         x1526))|])
    let (concat : 'T t -> items:'T _ConcatArray list -> 'T list) =
      fun (x1535 : 'T t) ->
        fun ~items:(x1531 : 'T _ConcatArray list) ->
          Ojs.list_of_js Obj.magic
            (let x1537 = t_to_js Obj.magic x1535 in
             Ojs.call (Ojs.get_prop_ascii x1537 "concat") "apply"
               [|x1537;((let x1532 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1533 : 'T _ConcatArray) ->
                              ignore
                                (Ojs.call x1532 "push"
                                   [|(_ConcatArray_to_js Obj.magic x1533)|]))
                           x1531;
                         x1532))|])
    let (concat' :
      'T t -> items:('T, 'T _ConcatArray) union2 list -> 'T list) =
      fun (x1545 : 'T t) ->
        fun ~items:(x1539 : ('T, 'T _ConcatArray) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x1547 = t_to_js Obj.magic x1545 in
             Ojs.call (Ojs.get_prop_ascii x1547 "concat") "apply"
               [|x1547;((let x1540 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1541 : ('T, 'T _ConcatArray) union2) ->
                              ignore
                                (Ojs.call x1540 "push"
                                   [|(union2_to_js Obj.magic
                                        (fun (x1543 : 'T _ConcatArray) ->
                                           _ConcatArray_to_js Obj.magic x1543)
                                        x1541)|])) x1539;
                         x1540))|])
    let (join : 'T t -> ?separator:string -> unit -> string) =
      fun (x1552 : 'T t) ->
        fun ?separator:(x1549 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1554 = t_to_js Obj.magic x1552 in
               Ojs.call (Ojs.get_prop_ascii x1554 "join") "apply"
                 [|x1554;((let x1550 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1549 with
                            | Some x1551 ->
                                ignore
                                  (Ojs.call x1550 "push"
                                     [|(Ojs.string_to_js x1551)|])
                            | None -> ());
                           x1550))|])
    let (reverse : 'T t -> 'T list) =
      fun (x1555 : 'T t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x1555) "reverse" [||])
    let (shift : 'T t -> 'T or_undefined) =
      fun (x1558 : 'T t) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x1558) "shift" [||])
    let (slice : 'T t -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1566 : 'T t) ->
        fun ?start:(x1561 : float option) ->
          fun ?end_:(x1562 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1568 = t_to_js Obj.magic x1566 in
                 Ojs.call (Ojs.get_prop_ascii x1568 "slice") "apply"
                   [|x1568;((let x1563 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1561 with
                              | Some x1565 ->
                                  ignore
                                    (Ojs.call x1563 "push"
                                       [|(Ojs.float_to_js x1565)|])
                              | None -> ());
                             (match x1562 with
                              | Some x1564 ->
                                  ignore
                                    (Ojs.call x1563 "push"
                                       [|(Ojs.float_to_js x1564)|])
                              | None -> ());
                             x1563))|])
    let (sort : 'T t -> ?compareFn:(a:'T -> b:'T -> float) -> unit -> 'T t) =
      fun (x1575 : 'T t) ->
        fun ?compareFn:(x1570 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            t_of_js Obj.magic
              (let x1577 = t_to_js Obj.magic x1575 in
               Ojs.call (Ojs.get_prop_ascii x1577 "sort") "apply"
                 [|x1577;((let x1571 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1570 with
                            | Some x1572 ->
                                ignore
                                  (Ojs.call x1571 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1573 : Ojs.t) ->
                                             fun (x1574 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1572 ~a:(Obj.magic x1573)
                                                    ~b:(Obj.magic x1574))))|])
                            | None -> ());
                           x1571))|])
    let (splice :
      'T t -> start:float -> ?deleteCount:float -> unit -> 'T list) =
      fun (x1583 : 'T t) ->
        fun ~start:(x1579 : float) ->
          fun ?deleteCount:(x1580 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1585 = t_to_js Obj.magic x1583 in
                 Ojs.call (Ojs.get_prop_ascii x1585 "splice") "apply"
                   [|x1585;((let x1581 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1581 "push"
                                  [|(Ojs.float_to_js x1579)|]);
                             (match x1580 with
                              | Some x1582 ->
                                  ignore
                                    (Ojs.call x1581 "push"
                                       [|(Ojs.float_to_js x1582)|])
                              | None -> ());
                             x1581))|])
    let (splice' :
      'T t -> start:float -> deleteCount:float -> items:'T list -> 'T list) =
      fun (x1592 : 'T t) ->
        fun ~start:(x1587 : float) ->
          fun ~deleteCount:(x1588 : float) ->
            fun ~items:(x1589 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1594 = t_to_js Obj.magic x1592 in
                 Ojs.call (Ojs.get_prop_ascii x1594 "splice") "apply"
                   [|x1594;((let x1590 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1590 "push"
                                  [|(Ojs.float_to_js x1587)|]);
                             ignore
                               (Ojs.call x1590 "push"
                                  [|(Ojs.float_to_js x1588)|]);
                             List.iter
                               (fun (x1591 : 'T) ->
                                  ignore
                                    (Ojs.call x1590 "push"
                                       [|(Obj.magic x1591)|])) x1589;
                             x1590))|])
    let (unshift : 'T t -> items:'T list -> float) =
      fun (x1599 : 'T t) ->
        fun ~items:(x1596 : 'T list) ->
          Ojs.float_of_js
            (let x1601 = t_to_js Obj.magic x1599 in
             Ojs.call (Ojs.get_prop_ascii x1601 "unshift") "apply"
               [|x1601;((let x1597 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1598 : 'T) ->
                              ignore
                                (Ojs.call x1597 "push" [|(Obj.magic x1598)|]))
                           x1596;
                         x1597))|])
    let (indexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1606 : 'T t) ->
        fun ~searchElement:(x1602 : 'T) ->
          fun ?fromIndex:(x1603 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1608 = t_to_js Obj.magic x1606 in
                 Ojs.call (Ojs.get_prop_ascii x1608 "indexOf") "apply"
                   [|x1608;((let x1604 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1604 "push" [|(Obj.magic x1602)|]);
                             (match x1603 with
                              | Some x1605 ->
                                  ignore
                                    (Ojs.call x1604 "push"
                                       [|(Ojs.float_to_js x1605)|])
                              | None -> ());
                             x1604))|])
    let (lastIndexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1613 : 'T t) ->
        fun ~searchElement:(x1609 : 'T) ->
          fun ?fromIndex:(x1610 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1615 = t_to_js Obj.magic x1613 in
                 Ojs.call (Ojs.get_prop_ascii x1615 "lastIndexOf") "apply"
                   [|x1615;((let x1611 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1611 "push" [|(Obj.magic x1609)|]);
                             (match x1610 with
                              | Some x1612 ->
                                  ignore
                                    (Ojs.call x1611 "push"
                                       [|(Ojs.float_to_js x1612)|])
                              | None -> ());
                             x1611))|])
    let (every :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1624 : 'T t) ->
        fun
          ~predicate:(x1616 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1617 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1626 = t_to_js Obj.magic x1624 in
                 Ojs.call (Ojs.get_prop_ascii x1626 "every") "apply"
                   [|x1626;((let x1618 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1618 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1620 : Ojs.t) ->
                                          fun (x1621 : Ojs.t) ->
                                            fun (x1622 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1616
                                                   ~value:(Obj.magic x1620)
                                                   ~index:(Ojs.float_of_js
                                                             x1621)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1622))))|]);
                             (match x1617 with
                              | Some x1619 ->
                                  ignore
                                    (Ojs.call x1618 "push"
                                       [|(any_to_js x1619)|])
                              | None -> ());
                             x1618))|])
    let (every' :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1635 : 'T t) ->
        fun
          ~predicate:(x1627 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1628 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1637 = t_to_js Obj.magic x1635 in
                 Ojs.call (Ojs.get_prop_ascii x1637 "every") "apply"
                   [|x1637;((let x1629 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1629 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1631 : Ojs.t) ->
                                          fun (x1632 : Ojs.t) ->
                                            fun (x1633 : Ojs.t) ->
                                              unknown_to_js
                                                (x1627
                                                   ~value:(Obj.magic x1631)
                                                   ~index:(Ojs.float_of_js
                                                             x1632)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1633))))|]);
                             (match x1628 with
                              | Some x1630 ->
                                  ignore
                                    (Ojs.call x1629 "push"
                                       [|(any_to_js x1630)|])
                              | None -> ());
                             x1629))|])
    let (some :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1646 : 'T t) ->
        fun
          ~predicate:(x1638 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1639 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1648 = t_to_js Obj.magic x1646 in
                 Ojs.call (Ojs.get_prop_ascii x1648 "some") "apply"
                   [|x1648;((let x1640 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1640 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1642 : Ojs.t) ->
                                          fun (x1643 : Ojs.t) ->
                                            fun (x1644 : Ojs.t) ->
                                              unknown_to_js
                                                (x1638
                                                   ~value:(Obj.magic x1642)
                                                   ~index:(Ojs.float_of_js
                                                             x1643)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1644))))|]);
                             (match x1639 with
                              | Some x1641 ->
                                  ignore
                                    (Ojs.call x1640 "push"
                                       [|(any_to_js x1641)|])
                              | None -> ());
                             x1640))|])
    let (forEach :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1657 : 'T t) ->
        fun
          ~callbackfn:(x1649 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1650 : any option) ->
            fun () ->
              ignore
                (let x1659 = t_to_js Obj.magic x1657 in
                 Ojs.call (Ojs.get_prop_ascii x1659 "forEach") "apply"
                   [|x1659;((let x1651 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1651 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1653 : Ojs.t) ->
                                          fun (x1654 : Ojs.t) ->
                                            fun (x1655 : Ojs.t) ->
                                              x1649 ~value:(Obj.magic x1653)
                                                ~index:(Ojs.float_of_js x1654)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1655)))|]);
                             (match x1650 with
                              | Some x1652 ->
                                  ignore
                                    (Ojs.call x1651 "push"
                                       [|(any_to_js x1652)|])
                              | None -> ());
                             x1651))|])
    let (map :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1668 : 'T t) ->
        fun
          ~callbackfn:(x1660 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1661 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1670 = t_to_js Obj.magic x1668 in
                 Ojs.call (Ojs.get_prop_ascii x1670 "map") "apply"
                   [|x1670;((let x1662 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1662 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1664 : Ojs.t) ->
                                          fun (x1665 : Ojs.t) ->
                                            fun (x1666 : Ojs.t) ->
                                              Obj.magic
                                                (x1660
                                                   ~value:(Obj.magic x1664)
                                                   ~index:(Ojs.float_of_js
                                                             x1665)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1666))))|]);
                             (match x1661 with
                              | Some x1663 ->
                                  ignore
                                    (Ojs.call x1662 "push"
                                       [|(any_to_js x1663)|])
                              | None -> ());
                             x1662))|])
    let (filter :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1680 : 'T t) ->
        fun
          ~predicate:(x1672 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1673 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1682 = t_to_js Obj.magic x1680 in
                 Ojs.call (Ojs.get_prop_ascii x1682 "filter") "apply"
                   [|x1682;((let x1674 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1674 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1676 : Ojs.t) ->
                                          fun (x1677 : Ojs.t) ->
                                            fun (x1678 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1672
                                                   ~value:(Obj.magic x1676)
                                                   ~index:(Ojs.float_of_js
                                                             x1677)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1678))))|]);
                             (match x1673 with
                              | Some x1675 ->
                                  ignore
                                    (Ojs.call x1674 "push"
                                       [|(any_to_js x1675)|])
                              | None -> ());
                             x1674))|])
    let (filter' :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1692 : 'T t) ->
        fun
          ~predicate:(x1684 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1685 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1694 = t_to_js Obj.magic x1692 in
                 Ojs.call (Ojs.get_prop_ascii x1694 "filter") "apply"
                   [|x1694;((let x1686 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1686 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1688 : Ojs.t) ->
                                          fun (x1689 : Ojs.t) ->
                                            fun (x1690 : Ojs.t) ->
                                              unknown_to_js
                                                (x1684
                                                   ~value:(Obj.magic x1688)
                                                   ~index:(Ojs.float_of_js
                                                             x1689)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1690))))|]);
                             (match x1685 with
                              | Some x1687 ->
                                  ignore
                                    (Ojs.call x1686 "push"
                                       [|(any_to_js x1687)|])
                              | None -> ());
                             x1686))|])
    let (reduce :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1702 : 'T t) ->
        fun
          ~callbackfn:(x1696 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1702) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1697 : Ojs.t) ->
                       fun (x1698 : Ojs.t) ->
                         fun (x1699 : Ojs.t) ->
                           fun (x1700 : Ojs.t) ->
                             Obj.magic
                               (x1696 ~previousValue:(Obj.magic x1697)
                                  ~currentValue:(Obj.magic x1698)
                                  ~currentIndex:(Ojs.float_of_js x1699)
                                  ~array:(Ojs.list_of_js Obj.magic x1700))))|])
    let (reduce' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1711 : 'T t) ->
        fun
          ~callbackfn:(x1704 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1710 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1711) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1705 : Ojs.t) ->
                         fun (x1706 : Ojs.t) ->
                           fun (x1707 : Ojs.t) ->
                             fun (x1708 : Ojs.t) ->
                               Obj.magic
                                 (x1704 ~previousValue:(Obj.magic x1705)
                                    ~currentValue:(Obj.magic x1706)
                                    ~currentIndex:(Ojs.float_of_js x1707)
                                    ~array:(Ojs.list_of_js Obj.magic x1708))));(
                   Obj.magic x1710)|])
    let (reduce'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1720 : 'T t) ->
        fun
          ~callbackfn:(x1713 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1719 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1720) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1714 : Ojs.t) ->
                         fun (x1715 : Ojs.t) ->
                           fun (x1716 : Ojs.t) ->
                             fun (x1717 : Ojs.t) ->
                               Obj.magic
                                 (x1713 ~previousValue:(Obj.magic x1714)
                                    ~currentValue:(Obj.magic x1715)
                                    ~currentIndex:(Ojs.float_of_js x1716)
                                    ~array:(Ojs.list_of_js Obj.magic x1717))));(
                   Obj.magic x1719)|])
    let (reduceRight :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1728 : 'T t) ->
        fun
          ~callbackfn:(x1722 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1728) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1723 : Ojs.t) ->
                       fun (x1724 : Ojs.t) ->
                         fun (x1725 : Ojs.t) ->
                           fun (x1726 : Ojs.t) ->
                             Obj.magic
                               (x1722 ~previousValue:(Obj.magic x1723)
                                  ~currentValue:(Obj.magic x1724)
                                  ~currentIndex:(Ojs.float_of_js x1725)
                                  ~array:(Ojs.list_of_js Obj.magic x1726))))|])
    let (reduceRight' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1737 : 'T t) ->
        fun
          ~callbackfn:(x1730 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1736 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1737) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1731 : Ojs.t) ->
                         fun (x1732 : Ojs.t) ->
                           fun (x1733 : Ojs.t) ->
                             fun (x1734 : Ojs.t) ->
                               Obj.magic
                                 (x1730 ~previousValue:(Obj.magic x1731)
                                    ~currentValue:(Obj.magic x1732)
                                    ~currentIndex:(Ojs.float_of_js x1733)
                                    ~array:(Ojs.list_of_js Obj.magic x1734))));(
                   Obj.magic x1736)|])
    let (reduceRight'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1746 : 'T t) ->
        fun
          ~callbackfn:(x1739 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1745 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1746) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1740 : Ojs.t) ->
                         fun (x1741 : Ojs.t) ->
                           fun (x1742 : Ojs.t) ->
                             fun (x1743 : Ojs.t) ->
                               Obj.magic
                                 (x1739 ~previousValue:(Obj.magic x1740)
                                    ~currentValue:(Obj.magic x1741)
                                    ~currentIndex:(Ojs.float_of_js x1742)
                                    ~array:(Ojs.list_of_js Obj.magic x1743))));(
                   Obj.magic x1745)|])
    let (get : 'T t -> float -> 'T) =
      fun (x1748 : 'T t) ->
        fun (x1750 : float) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x1748) (Ojs.float_to_js x1750))
    let (set : 'T t -> float -> 'T -> unit) =
      fun (x1751 : 'T t) ->
        fun (x1753 : float) ->
          fun (x1754 : 'T) ->
            Ojs.set_prop (t_to_js Obj.magic x1751) (Ojs.float_to_js x1753)
              (Obj.magic x1754)
    let (to_ml : 'T t -> 'T list) =
      fun (x1755 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1755)
    let (of_ml : 'T list -> 'T t) =
      fun (x1758 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1758)
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1761 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1762 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1761 with
                 | Some x1763 ->
                     ignore
                       (Ojs.call x1762 "push" [|(Ojs.float_to_js x1763)|])
                 | None -> ());
                x1762))
    let (create' : arrayLength:float -> 'T list) =
      fun ~arrayLength:(x1765 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1765)|])
    let (create'' : items:'T list -> 'T list) =
      fun ~items:(x1767 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1768 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1769 : 'T) ->
                   ignore (Ojs.call x1768 "push" [|(Obj.magic x1769)|]))
                x1767;
              x1768))
    let (isArray : arg:any -> bool) =
      fun ~arg:(x1771 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1771)|])
  end
module ArrayConstructor =
  struct
    type t = _ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1773 : Ojs.t) -> _ArrayConstructor_of_js x1773
    and t_to_js : t -> Ojs.t =
      fun (x1772 : _ArrayConstructor) -> _ArrayConstructor_to_js x1772
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1775 : Ojs.t) -> t_of_js x1775
    and t_0_to_js : t_0 -> Ojs.t = fun (x1774 : t) -> t_to_js x1774
    let (create : t -> ?arrayLength:float -> unit -> any list) =
      fun (x1779 : t) ->
        fun ?arrayLength:(x1776 : float option) ->
          fun () ->
            Ojs.list_of_js any_of_js
              (Ojs.new_obj_arr (t_to_js x1779)
                 (let x1777 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1776 with
                   | Some x1778 ->
                       ignore
                         (Ojs.call x1777 "push" [|(Ojs.float_to_js x1778)|])
                   | None -> ());
                  x1777))
    let (create' : t -> arrayLength:float -> 'T list) =
      fun (x1782 : t) ->
        fun ~arrayLength:(x1781 : float) ->
          Ojs.list_of_js Obj.magic
            (Ojs.new_obj (t_to_js x1782) [|(Ojs.float_to_js x1781)|])
    let (create'' : t -> items:'T list -> 'T list) =
      fun (x1787 : t) ->
        fun ~items:(x1784 : 'T list) ->
          Ojs.list_of_js Obj.magic
            (Ojs.new_obj_arr (t_to_js x1787)
               (let x1785 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x1786 : 'T) ->
                     ignore (Ojs.call x1785 "push" [|(Obj.magic x1786)|]))
                  x1784;
                x1785))
    let (apply : t -> ?arrayLength:float -> unit -> any list) =
      fun (x1792 : t) ->
        fun ?arrayLength:(x1789 : float option) ->
          fun () ->
            Ojs.list_of_js any_of_js
              (Ojs.call (t_to_js x1792) "apply"
                 [|Ojs.null;((let x1790 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1789 with
                               | Some x1791 ->
                                   ignore
                                     (Ojs.call x1790 "push"
                                        [|(Ojs.float_to_js x1791)|])
                               | None -> ());
                              x1790))|])
    let (apply' : t -> arrayLength:float -> 'T list) =
      fun (x1795 : t) ->
        fun ~arrayLength:(x1794 : float) ->
          Ojs.list_of_js Obj.magic
            (Ojs.apply (t_to_js x1795) [|(Ojs.float_to_js x1794)|])
    let (apply'' : t -> items:'T list -> 'T list) =
      fun (x1800 : t) ->
        fun ~items:(x1797 : 'T list) ->
          Ojs.list_of_js Obj.magic
            (Ojs.call (t_to_js x1800) "apply"
               [|Ojs.null;((let x1798 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x1799 : 'T) ->
                                 ignore
                                   (Ojs.call x1798 "push"
                                      [|(Obj.magic x1799)|])) x1797;
                            x1798))|])
    let (isArray : t -> arg:any -> bool) =
      fun (x1803 : t) ->
        fun ~arg:(x1802 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x1803) "isArray" [|(any_to_js x1802)|])
    let (get_prototype : t -> any list) =
      fun (x1804 : t) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (t_to_js x1804) "prototype")
  end
let (array : _ArrayConstructor) =
  _ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Array")
module TypedPropertyDescriptor =
  struct
    type 'T t = 'T _TypedPropertyDescriptor
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1808 : Ojs.t) -> _TypedPropertyDescriptor_of_js __T_of_js x1808
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1806 : __T _TypedPropertyDescriptor) ->
          _TypedPropertyDescriptor_to_js __T_to_js x1806
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1812 : Ojs.t) -> t_of_js __T_of_js x1812
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1810 : __T t) -> t_to_js __T_to_js x1810
    let (get_enumerable : 'T t -> bool) =
      fun (x1814 : 'T t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1814) "enumerable")
    let (set_enumerable : 'T t -> bool -> unit) =
      fun (x1816 : 'T t) ->
        fun (x1817 : bool) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1816) "enumerable"
            (Ojs.bool_to_js x1817)
    let (get_configurable : 'T t -> bool) =
      fun (x1819 : 'T t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1819) "configurable")
    let (set_configurable : 'T t -> bool -> unit) =
      fun (x1821 : 'T t) ->
        fun (x1822 : bool) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1821) "configurable"
            (Ojs.bool_to_js x1822)
    let (get_writable : 'T t -> bool) =
      fun (x1824 : 'T t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1824) "writable")
    let (set_writable : 'T t -> bool -> unit) =
      fun (x1826 : 'T t) ->
        fun (x1827 : bool) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1826) "writable"
            (Ojs.bool_to_js x1827)
    let (get_value : 'T t -> 'T) =
      fun (x1829 : 'T t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x1829) "value")
    let (set_value : 'T t -> 'T -> unit) =
      fun (x1831 : 'T t) ->
        fun (x1832 : 'T) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1831) "value"
            (Obj.magic x1832)
    let (get_ : 'T t -> 'T) =
      fun (x1834 : 'T t) ->
        Obj.magic (Ojs.call (t_to_js Obj.magic x1834) "get" [||])
    let (set_ : 'T t -> value:'T -> unit) =
      fun (x1837 : 'T t) ->
        fun ~value:(x1836 : 'T) ->
          ignore
            (Ojs.call (t_to_js Obj.magic x1837) "set" [|(Obj.magic x1836)|])
  end
module ClassDecorator =
  struct
    type t = _ClassDecorator
    let rec t_of_js : Ojs.t -> t =
      fun (x1840 : Ojs.t) -> _ClassDecorator_of_js x1840
    and t_to_js : t -> Ojs.t =
      fun (x1839 : _ClassDecorator) -> _ClassDecorator_to_js x1839
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1842 : Ojs.t) -> t_of_js x1842
    and t_0_to_js : t_0 -> Ojs.t = fun (x1841 : t) -> t_to_js x1841
    let (apply : t -> target:'TFunction -> ('TFunction, unit) union2) =
      fun (x1844 : t) ->
        fun ~target:(x1843 : 'TFunction) ->
          union2_of_js Obj.magic Ojs.unit_of_js
            (Ojs.apply (t_to_js x1844) [|(Obj.magic x1843)|])
  end
module PropertyDecorator =
  struct
    type t = _PropertyDecorator
    let rec t_of_js : Ojs.t -> t =
      fun (x1848 : Ojs.t) -> _PropertyDecorator_of_js x1848
    and t_to_js : t -> Ojs.t =
      fun (x1847 : _PropertyDecorator) -> _PropertyDecorator_to_js x1847
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1850 : Ojs.t) -> t_of_js x1850
    and t_0_to_js : t_0 -> Ojs.t = fun (x1849 : t) -> t_to_js x1849
    let (apply : t -> target:_Object -> propertyKey:symbol or_string -> unit)
      =
      fun (x1854 : t) ->
        fun ~target:(x1851 : _Object) ->
          fun ~propertyKey:(x1852 : symbol or_string) ->
            ignore
              (Ojs.apply (t_to_js x1854)
                 [|(_Object_to_js x1851);(or_string_to_js symbol_to_js x1852)|])
  end
module MethodDecorator =
  struct
    type t = _MethodDecorator
    let rec t_of_js : Ojs.t -> t =
      fun (x1856 : Ojs.t) -> _MethodDecorator_of_js x1856
    and t_to_js : t -> Ojs.t =
      fun (x1855 : _MethodDecorator) -> _MethodDecorator_to_js x1855
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1858 : Ojs.t) -> t_of_js x1858
    and t_0_to_js : t_0 -> Ojs.t = fun (x1857 : t) -> t_to_js x1857
    let (apply :
      t ->
        target:_Object ->
          propertyKey:symbol or_string ->
            descriptor:'T _TypedPropertyDescriptor ->
              (unit, 'T _TypedPropertyDescriptor) union2)
      =
      fun (x1864 : t) ->
        fun ~target:(x1859 : _Object) ->
          fun ~propertyKey:(x1860 : symbol or_string) ->
            fun ~descriptor:(x1862 : 'T _TypedPropertyDescriptor) ->
              union2_of_js Ojs.unit_of_js
                (fun (x1866 : Ojs.t) ->
                   _TypedPropertyDescriptor_of_js Obj.magic x1866)
                (Ojs.apply (t_to_js x1864)
                   [|(_Object_to_js x1859);(or_string_to_js symbol_to_js
                                              x1860);(_TypedPropertyDescriptor_to_js
                                                        Obj.magic x1862)|])
  end
module ParameterDecorator =
  struct
    type t = _ParameterDecorator
    let rec t_of_js : Ojs.t -> t =
      fun (x1869 : Ojs.t) -> _ParameterDecorator_of_js x1869
    and t_to_js : t -> Ojs.t =
      fun (x1868 : _ParameterDecorator) -> _ParameterDecorator_to_js x1868
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1871 : Ojs.t) -> t_of_js x1871
    and t_0_to_js : t_0 -> Ojs.t = fun (x1870 : t) -> t_to_js x1870
    let (apply :
      t ->
        target:_Object ->
          propertyKey:symbol or_string -> parameterIndex:float -> unit)
      =
      fun (x1876 : t) ->
        fun ~target:(x1872 : _Object) ->
          fun ~propertyKey:(x1873 : symbol or_string) ->
            fun ~parameterIndex:(x1875 : float) ->
              ignore
                (Ojs.apply (t_to_js x1876)
                   [|(_Object_to_js x1872);(or_string_to_js symbol_to_js
                                              x1873);(Ojs.float_to_js x1875)|])
  end
module Promise =
  struct
    type 'T t = 'T _Promise
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1879 : Ojs.t) -> _Promise_of_js __T_of_js x1879
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1877 : __T _Promise) -> _Promise_to_js __T_to_js x1877
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1883 : Ojs.t) -> t_of_js __T_of_js x1883
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1881 : __T t) -> t_to_js __T_to_js x1881
    let (then_ :
      'T t ->
        ?onfulfilled:('T -> 'TResult t) ->
          ?onrejected:(any -> 'TResult t) -> unit -> 'TResult t)
      =
      fun (x1894 : 'T t) ->
        fun ?onfulfilled:(x1885 : ('T -> 'TResult t) option) ->
          fun ?onrejected:(x1886 : (any -> 'TResult t) option) ->
            fun () ->
              t_of_js Obj.magic
                (let x1896 = t_to_js Obj.magic x1894 in
                 Ojs.call (Ojs.get_prop_ascii x1896 "then") "apply"
                   [|x1896;((let x1887 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1885 with
                              | Some x1891 ->
                                  ignore
                                    (Ojs.call x1887 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x1892 : Ojs.t) ->
                                               t_to_js Obj.magic
                                                 (x1891 (Obj.magic x1892))))|])
                              | None -> ());
                             (match x1886 with
                              | Some x1888 ->
                                  ignore
                                    (Ojs.call x1887 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x1889 : Ojs.t) ->
                                               t_to_js Obj.magic
                                                 (x1888 (any_of_js x1889))))|])
                              | None -> ());
                             x1887))|])
    let (catch : 'T t -> ?onrejected:(any -> 'T t) -> unit -> 'T t) =
      fun (x1903 : 'T t) ->
        fun ?onrejected:(x1898 : (any -> 'T t) option) ->
          fun () ->
            t_of_js Obj.magic
              (let x1905 = t_to_js Obj.magic x1903 in
               Ojs.call (Ojs.get_prop_ascii x1905 "catch") "apply"
                 [|x1905;((let x1899 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1898 with
                            | Some x1900 ->
                                ignore
                                  (Ojs.call x1899 "push"
                                     [|(Ojs.fun_to_js 1
                                          (fun (x1901 : Ojs.t) ->
                                             t_to_js Obj.magic
                                               (x1900 (any_of_js x1901))))|])
                            | None -> ());
                           x1899))|])
  end
module Partial =
  struct
    type 'T t = 'T _Partial
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1909 : Ojs.t) -> _Partial_of_js __T_of_js x1909
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1907 : __T _Partial) -> _Partial_to_js __T_to_js x1907
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1913 : Ojs.t) -> t_of_js __T_of_js x1913
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1911 : __T t) -> t_to_js __T_to_js x1911
  end
module Required =
  struct
    type 'T t = 'T _Required
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1917 : Ojs.t) -> _Required_of_js __T_of_js x1917
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1915 : __T _Required) -> _Required_to_js __T_to_js x1915
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1921 : Ojs.t) -> t_of_js __T_of_js x1921
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1919 : __T t) -> t_to_js __T_to_js x1919
  end
module Readonly =
  struct
    type 'T t = 'T _Readonly
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1925 : Ojs.t) -> _Readonly_of_js __T_of_js x1925
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1923 : __T _Readonly) -> _Readonly_to_js __T_to_js x1923
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1929 : Ojs.t) -> t_of_js __T_of_js x1929
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1927 : __T t) -> t_to_js __T_to_js x1927
  end
module Pick =
  struct
    type ('T, 'K) t = ('T, 'K) _Pick
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x1934 : Ojs.t) -> _Pick_of_js __T_of_js __K_of_js x1934
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x1931 : (__T, __K) _Pick) ->
            _Pick_to_js __T_to_js __K_to_js x1931
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x1940 : Ojs.t) -> t_of_js __T_of_js __K_of_js x1940
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x1937 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x1937
  end
module Record =
  struct
    type ('K, 'T) t = ('K, 'T) _Record
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1946 : Ojs.t) -> _Record_of_js __K_of_js __T_of_js x1946
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1943 : (__K, __T) _Record) ->
            _Record_to_js __K_to_js __T_to_js x1943
    type ('K, 'T) t_2 = ('K, 'T) t
    let rec t_2_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t_2 = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1952 : Ojs.t) -> t_of_js __K_of_js __T_of_js x1952
    and t_2_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1949 : (__K, __T) t) -> t_to_js __K_to_js __T_to_js x1949
  end
module Exclude =
  struct
    type ('T, 'U) t = ('T, 'U) _Exclude
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x1958 : Ojs.t) -> _Exclude_of_js __T_of_js __U_of_js x1958
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x1955 : (__T, __U) _Exclude) ->
            _Exclude_to_js __T_to_js __U_to_js x1955
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x1964 : Ojs.t) -> t_of_js __T_of_js __U_of_js x1964
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x1961 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x1961
  end
module Extract =
  struct
    type ('T, 'U) t = ('T, 'U) _Extract
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x1970 : Ojs.t) -> _Extract_of_js __T_of_js __U_of_js x1970
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x1967 : (__T, __U) _Extract) ->
            _Extract_to_js __T_to_js __U_to_js x1967
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x1976 : Ojs.t) -> t_of_js __T_of_js __U_of_js x1976
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x1973 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x1973
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, 'K) _Omit
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x1982 : Ojs.t) -> _Omit_of_js __T_of_js __K_of_js x1982
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x1979 : (__T, __K) _Omit) ->
            _Omit_to_js __T_to_js __K_to_js x1979
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x1988 : Ojs.t) -> t_of_js __T_of_js __K_of_js x1988
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x1985 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x1985
  end
module NonNullable =
  struct
    type 'T t = 'T _NonNullable
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1993 : Ojs.t) -> _NonNullable_of_js __T_of_js x1993
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1991 : __T _NonNullable) -> _NonNullable_to_js __T_to_js x1991
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1997 : Ojs.t) -> t_of_js __T_of_js x1997
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1995 : __T t) -> t_to_js __T_to_js x1995
  end
module Parameters =
  struct
    type 'T t = 'T _Parameters
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2001 : Ojs.t) -> _Parameters_of_js __T_of_js x2001
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1999 : __T _Parameters) -> _Parameters_to_js __T_to_js x1999
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2005 : Ojs.t) -> t_of_js __T_of_js x2005
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2003 : __T t) -> t_to_js __T_to_js x2003
  end
module ConstructorParameters =
  struct
    type 'T t = 'T _ConstructorParameters
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2009 : Ojs.t) -> _ConstructorParameters_of_js __T_of_js x2009
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2007 : __T _ConstructorParameters) ->
          _ConstructorParameters_to_js __T_to_js x2007
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2013 : Ojs.t) -> t_of_js __T_of_js x2013
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2011 : __T t) -> t_to_js __T_to_js x2011
  end
module ReturnType =
  struct
    type 'T t = 'T _ReturnType
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2017 : Ojs.t) -> _ReturnType_of_js __T_of_js x2017
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2015 : __T _ReturnType) -> _ReturnType_to_js __T_to_js x2015
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2021 : Ojs.t) -> t_of_js __T_of_js x2021
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2019 : __T t) -> t_to_js __T_to_js x2019
  end
module InstanceType =
  struct
    type 'T t = 'T _InstanceType
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2025 : Ojs.t) -> _InstanceType_of_js __T_of_js x2025
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2023 : __T _InstanceType) ->
          _InstanceType_to_js __T_to_js x2023
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2029 : Ojs.t) -> t_of_js __T_of_js x2029
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2027 : __T t) -> t_to_js __T_to_js x2027
  end
module ThisType =
  struct
    type 'T t = 'T _ThisType
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2033 : Ojs.t) -> _ThisType_of_js __T_of_js x2033
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2031 : __T _ThisType) -> _ThisType_to_js __T_to_js x2031
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2037 : Ojs.t) -> t_of_js __T_of_js x2037
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2035 : __T t) -> t_to_js __T_to_js x2035
  end
module ArrayBuffer =
  struct
    type t = _ArrayBuffer
    let rec t_of_js : Ojs.t -> t =
      fun (x2040 : Ojs.t) -> _ArrayBuffer_of_js x2040
    and t_to_js : t -> Ojs.t =
      fun (x2039 : _ArrayBuffer) -> _ArrayBuffer_to_js x2039
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2042 : Ojs.t) -> t_of_js x2042
    and t_0_to_js : t_0 -> Ojs.t = fun (x2041 : t) -> t_to_js x2041
    let (get_byteLength : t -> float) =
      fun (x2043 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2043) "byteLength")
    let (slice : t -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x2048 : t) ->
        fun ~begin_:(x2044 : float) ->
          fun ?end_:(x2045 : float option) ->
            fun () ->
              t_of_js
                (let x2049 = t_to_js x2048 in
                 Ojs.call (Ojs.get_prop_ascii x2049 "slice") "apply"
                   [|x2049;((let x2046 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2046 "push"
                                  [|(Ojs.float_to_js x2044)|]);
                             (match x2045 with
                              | Some x2047 ->
                                  ignore
                                    (Ojs.call x2046 "push"
                                       [|(Ojs.float_to_js x2047)|])
                              | None -> ());
                             x2046))|])
    let (create : byteLength:float -> _ArrayBuffer) =
      fun ~byteLength:(x2050 : float) ->
        _ArrayBuffer_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x2050)|])
    let (isView : arg:any -> bool) =
      fun ~arg:(x2051 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x2051)|])
  end
module ArrayBufferTypes =
  struct
    type t = _ArrayBufferTypes
    let rec t_of_js : Ojs.t -> t =
      fun (x2053 : Ojs.t) -> _ArrayBufferTypes_of_js x2053
    and t_to_js : t -> Ojs.t =
      fun (x2052 : _ArrayBufferTypes) -> _ArrayBufferTypes_to_js x2052
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2055 : Ojs.t) -> t_of_js x2055
    and t_0_to_js : t_0 -> Ojs.t = fun (x2054 : t) -> t_to_js x2054
    let (get_ArrayBuffer : t -> _ArrayBuffer) =
      fun (x2056 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2056) "ArrayBuffer")
    let (set_ArrayBuffer : t -> _ArrayBuffer -> unit) =
      fun (x2057 : t) ->
        fun (x2058 : _ArrayBuffer) ->
          Ojs.set_prop_ascii (t_to_js x2057) "ArrayBuffer"
            (_ArrayBuffer_to_js x2058)
  end
module ArrayBufferConstructor =
  struct
    type t = _ArrayBufferConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2060 : Ojs.t) -> _ArrayBufferConstructor_of_js x2060
    and t_to_js : t -> Ojs.t =
      fun (x2059 : _ArrayBufferConstructor) ->
        _ArrayBufferConstructor_to_js x2059
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2062 : Ojs.t) -> t_of_js x2062
    and t_0_to_js : t_0 -> Ojs.t = fun (x2061 : t) -> t_to_js x2061
    let (get_prototype : t -> _ArrayBuffer) =
      fun (x2063 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2063) "prototype")
    let (create : t -> byteLength:float -> _ArrayBuffer) =
      fun (x2065 : t) ->
        fun ~byteLength:(x2064 : float) ->
          _ArrayBuffer_of_js
            (Ojs.new_obj (t_to_js x2065) [|(Ojs.float_to_js x2064)|])
    let (isView : t -> arg:any -> bool) =
      fun (x2067 : t) ->
        fun ~arg:(x2066 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x2067) "isView" [|(any_to_js x2066)|])
  end
let (arrayBuffer : _ArrayBufferConstructor) =
  _ArrayBufferConstructor_of_js (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
module ArrayBufferView =
  struct
    type t = _ArrayBufferView
    let rec t_of_js : Ojs.t -> t =
      fun (x2069 : Ojs.t) -> _ArrayBufferView_of_js x2069
    and t_to_js : t -> Ojs.t =
      fun (x2068 : _ArrayBufferView) -> _ArrayBufferView_to_js x2068
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2071 : Ojs.t) -> t_of_js x2071
    and t_0_to_js : t_0 -> Ojs.t = fun (x2070 : t) -> t_to_js x2070
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2072 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2072) "buffer")
    let (set_buffer : t -> _ArrayBuffer -> unit) =
      fun (x2073 : t) ->
        fun (x2074 : _ArrayBuffer) ->
          Ojs.set_prop_ascii (t_to_js x2073) "buffer"
            (_ArrayBuffer_to_js x2074)
    let (get_byteLength : t -> float) =
      fun (x2075 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2075) "byteLength")
    let (set_byteLength : t -> float -> unit) =
      fun (x2076 : t) ->
        fun (x2077 : float) ->
          Ojs.set_prop_ascii (t_to_js x2076) "byteLength"
            (Ojs.float_to_js x2077)
    let (get_byteOffset : t -> float) =
      fun (x2078 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2078) "byteOffset")
    let (set_byteOffset : t -> float -> unit) =
      fun (x2079 : t) ->
        fun (x2080 : float) ->
          Ojs.set_prop_ascii (t_to_js x2079) "byteOffset"
            (Ojs.float_to_js x2080)
  end
module DataView =
  struct
    type t = _DataView
    let rec t_of_js : Ojs.t -> t =
      fun (x2082 : Ojs.t) -> _DataView_of_js x2082
    and t_to_js : t -> Ojs.t =
      fun (x2081 : _DataView) -> _DataView_to_js x2081
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2084 : Ojs.t) -> t_of_js x2084
    and t_0_to_js : t_0 -> Ojs.t = fun (x2083 : t) -> t_to_js x2083
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2085 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2085) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2086 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2086) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2087 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2087) "byteOffset")
    let (getFloat32 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2092 : t) ->
        fun ~byteOffset:(x2088 : float) ->
          fun ?littleEndian:(x2089 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2093 = t_to_js x2092 in
                 Ojs.call (Ojs.get_prop_ascii x2093 "getFloat32") "apply"
                   [|x2093;((let x2090 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2090 "push"
                                  [|(Ojs.float_to_js x2088)|]);
                             (match x2089 with
                              | Some x2091 ->
                                  ignore
                                    (Ojs.call x2090 "push"
                                       [|(Ojs.bool_to_js x2091)|])
                              | None -> ());
                             x2090))|])
    let (getFloat64 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2098 : t) ->
        fun ~byteOffset:(x2094 : float) ->
          fun ?littleEndian:(x2095 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2099 = t_to_js x2098 in
                 Ojs.call (Ojs.get_prop_ascii x2099 "getFloat64") "apply"
                   [|x2099;((let x2096 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2096 "push"
                                  [|(Ojs.float_to_js x2094)|]);
                             (match x2095 with
                              | Some x2097 ->
                                  ignore
                                    (Ojs.call x2096 "push"
                                       [|(Ojs.bool_to_js x2097)|])
                              | None -> ());
                             x2096))|])
    let (getInt8 : t -> byteOffset:float -> float) =
      fun (x2101 : t) ->
        fun ~byteOffset:(x2100 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2101) "getInt8" [|(Ojs.float_to_js x2100)|])
    let (getInt16 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2106 : t) ->
        fun ~byteOffset:(x2102 : float) ->
          fun ?littleEndian:(x2103 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2107 = t_to_js x2106 in
                 Ojs.call (Ojs.get_prop_ascii x2107 "getInt16") "apply"
                   [|x2107;((let x2104 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2104 "push"
                                  [|(Ojs.float_to_js x2102)|]);
                             (match x2103 with
                              | Some x2105 ->
                                  ignore
                                    (Ojs.call x2104 "push"
                                       [|(Ojs.bool_to_js x2105)|])
                              | None -> ());
                             x2104))|])
    let (getInt32 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2112 : t) ->
        fun ~byteOffset:(x2108 : float) ->
          fun ?littleEndian:(x2109 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2113 = t_to_js x2112 in
                 Ojs.call (Ojs.get_prop_ascii x2113 "getInt32") "apply"
                   [|x2113;((let x2110 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2110 "push"
                                  [|(Ojs.float_to_js x2108)|]);
                             (match x2109 with
                              | Some x2111 ->
                                  ignore
                                    (Ojs.call x2110 "push"
                                       [|(Ojs.bool_to_js x2111)|])
                              | None -> ());
                             x2110))|])
    let (getUint8 : t -> byteOffset:float -> float) =
      fun (x2115 : t) ->
        fun ~byteOffset:(x2114 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2115) "getUint8" [|(Ojs.float_to_js x2114)|])
    let (getUint16 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2120 : t) ->
        fun ~byteOffset:(x2116 : float) ->
          fun ?littleEndian:(x2117 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2121 = t_to_js x2120 in
                 Ojs.call (Ojs.get_prop_ascii x2121 "getUint16") "apply"
                   [|x2121;((let x2118 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2118 "push"
                                  [|(Ojs.float_to_js x2116)|]);
                             (match x2117 with
                              | Some x2119 ->
                                  ignore
                                    (Ojs.call x2118 "push"
                                       [|(Ojs.bool_to_js x2119)|])
                              | None -> ());
                             x2118))|])
    let (getUint32 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2126 : t) ->
        fun ~byteOffset:(x2122 : float) ->
          fun ?littleEndian:(x2123 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2127 = t_to_js x2126 in
                 Ojs.call (Ojs.get_prop_ascii x2127 "getUint32") "apply"
                   [|x2127;((let x2124 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2124 "push"
                                  [|(Ojs.float_to_js x2122)|]);
                             (match x2123 with
                              | Some x2125 ->
                                  ignore
                                    (Ojs.call x2124 "push"
                                       [|(Ojs.bool_to_js x2125)|])
                              | None -> ());
                             x2124))|])
    let (setFloat32 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2133 : t) ->
        fun ~byteOffset:(x2128 : float) ->
          fun ~value:(x2129 : float) ->
            fun ?littleEndian:(x2130 : bool option) ->
              fun () ->
                ignore
                  (let x2134 = t_to_js x2133 in
                   Ojs.call (Ojs.get_prop_ascii x2134 "setFloat32") "apply"
                     [|x2134;((let x2131 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2131 "push"
                                    [|(Ojs.float_to_js x2128)|]);
                               ignore
                                 (Ojs.call x2131 "push"
                                    [|(Ojs.float_to_js x2129)|]);
                               (match x2130 with
                                | Some x2132 ->
                                    ignore
                                      (Ojs.call x2131 "push"
                                         [|(Ojs.bool_to_js x2132)|])
                                | None -> ());
                               x2131))|])
    let (setFloat64 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2140 : t) ->
        fun ~byteOffset:(x2135 : float) ->
          fun ~value:(x2136 : float) ->
            fun ?littleEndian:(x2137 : bool option) ->
              fun () ->
                ignore
                  (let x2141 = t_to_js x2140 in
                   Ojs.call (Ojs.get_prop_ascii x2141 "setFloat64") "apply"
                     [|x2141;((let x2138 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2138 "push"
                                    [|(Ojs.float_to_js x2135)|]);
                               ignore
                                 (Ojs.call x2138 "push"
                                    [|(Ojs.float_to_js x2136)|]);
                               (match x2137 with
                                | Some x2139 ->
                                    ignore
                                      (Ojs.call x2138 "push"
                                         [|(Ojs.bool_to_js x2139)|])
                                | None -> ());
                               x2138))|])
    let (setInt8 : t -> byteOffset:float -> value:float -> unit) =
      fun (x2144 : t) ->
        fun ~byteOffset:(x2142 : float) ->
          fun ~value:(x2143 : float) ->
            ignore
              (Ojs.call (t_to_js x2144) "setInt8"
                 [|(Ojs.float_to_js x2142);(Ojs.float_to_js x2143)|])
    let (setInt16 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2150 : t) ->
        fun ~byteOffset:(x2145 : float) ->
          fun ~value:(x2146 : float) ->
            fun ?littleEndian:(x2147 : bool option) ->
              fun () ->
                ignore
                  (let x2151 = t_to_js x2150 in
                   Ojs.call (Ojs.get_prop_ascii x2151 "setInt16") "apply"
                     [|x2151;((let x2148 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2148 "push"
                                    [|(Ojs.float_to_js x2145)|]);
                               ignore
                                 (Ojs.call x2148 "push"
                                    [|(Ojs.float_to_js x2146)|]);
                               (match x2147 with
                                | Some x2149 ->
                                    ignore
                                      (Ojs.call x2148 "push"
                                         [|(Ojs.bool_to_js x2149)|])
                                | None -> ());
                               x2148))|])
    let (setInt32 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2157 : t) ->
        fun ~byteOffset:(x2152 : float) ->
          fun ~value:(x2153 : float) ->
            fun ?littleEndian:(x2154 : bool option) ->
              fun () ->
                ignore
                  (let x2158 = t_to_js x2157 in
                   Ojs.call (Ojs.get_prop_ascii x2158 "setInt32") "apply"
                     [|x2158;((let x2155 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2155 "push"
                                    [|(Ojs.float_to_js x2152)|]);
                               ignore
                                 (Ojs.call x2155 "push"
                                    [|(Ojs.float_to_js x2153)|]);
                               (match x2154 with
                                | Some x2156 ->
                                    ignore
                                      (Ojs.call x2155 "push"
                                         [|(Ojs.bool_to_js x2156)|])
                                | None -> ());
                               x2155))|])
    let (setUint8 : t -> byteOffset:float -> value:float -> unit) =
      fun (x2161 : t) ->
        fun ~byteOffset:(x2159 : float) ->
          fun ~value:(x2160 : float) ->
            ignore
              (Ojs.call (t_to_js x2161) "setUint8"
                 [|(Ojs.float_to_js x2159);(Ojs.float_to_js x2160)|])
    let (setUint16 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2167 : t) ->
        fun ~byteOffset:(x2162 : float) ->
          fun ~value:(x2163 : float) ->
            fun ?littleEndian:(x2164 : bool option) ->
              fun () ->
                ignore
                  (let x2168 = t_to_js x2167 in
                   Ojs.call (Ojs.get_prop_ascii x2168 "setUint16") "apply"
                     [|x2168;((let x2165 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2165 "push"
                                    [|(Ojs.float_to_js x2162)|]);
                               ignore
                                 (Ojs.call x2165 "push"
                                    [|(Ojs.float_to_js x2163)|]);
                               (match x2164 with
                                | Some x2166 ->
                                    ignore
                                      (Ojs.call x2165 "push"
                                         [|(Ojs.bool_to_js x2166)|])
                                | None -> ());
                               x2165))|])
    let (setUint32 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2174 : t) ->
        fun ~byteOffset:(x2169 : float) ->
          fun ~value:(x2170 : float) ->
            fun ?littleEndian:(x2171 : bool option) ->
              fun () ->
                ignore
                  (let x2175 = t_to_js x2174 in
                   Ojs.call (Ojs.get_prop_ascii x2175 "setUint32") "apply"
                     [|x2175;((let x2172 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2172 "push"
                                    [|(Ojs.float_to_js x2169)|]);
                               ignore
                                 (Ojs.call x2172 "push"
                                    [|(Ojs.float_to_js x2170)|]);
                               (match x2171 with
                                | Some x2173 ->
                                    ignore
                                      (Ojs.call x2172 "push"
                                         [|(Ojs.bool_to_js x2173)|])
                                | None -> ());
                               x2172))|])
    let (create :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?byteLength:float -> unit -> _DataView)
      =
      fun ~buffer:(x2176 : _ArrayBuffer) ->
        fun ?byteOffset:(x2177 : float option) ->
          fun ?byteLength:(x2178 : float option) ->
            fun () ->
              _DataView_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x2179 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2179 "push" [|(_ArrayBuffer_to_js x2176)|]);
                    (match x2177 with
                     | Some x2181 ->
                         ignore
                           (Ojs.call x2179 "push" [|(Ojs.float_to_js x2181)|])
                     | None -> ());
                    (match x2178 with
                     | Some x2180 ->
                         ignore
                           (Ojs.call x2179 "push" [|(Ojs.float_to_js x2180)|])
                     | None -> ());
                    x2179))
  end
module DataViewConstructor =
  struct
    type t = _DataViewConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2183 : Ojs.t) -> _DataViewConstructor_of_js x2183
    and t_to_js : t -> Ojs.t =
      fun (x2182 : _DataViewConstructor) -> _DataViewConstructor_to_js x2182
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2185 : Ojs.t) -> t_of_js x2185
    and t_0_to_js : t_0 -> Ojs.t = fun (x2184 : t) -> t_to_js x2184
    let (get_prototype : t -> _DataView) =
      fun (x2186 : t) ->
        _DataView_of_js (Ojs.get_prop_ascii (t_to_js x2186) "prototype")
    let (create :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?byteLength:float -> unit -> _DataView)
      =
      fun (x2193 : t) ->
        fun ~buffer:(x2187 : _ArrayBuffer) ->
          fun ?byteOffset:(x2188 : float option) ->
            fun ?byteLength:(x2189 : float option) ->
              fun () ->
                _DataView_of_js
                  (Ojs.new_obj_arr (t_to_js x2193)
                     (let x2190 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2190 "push" [|(_ArrayBuffer_to_js x2187)|]);
                      (match x2188 with
                       | Some x2192 ->
                           ignore
                             (Ojs.call x2190 "push"
                                [|(Ojs.float_to_js x2192)|])
                       | None -> ());
                      (match x2189 with
                       | Some x2191 ->
                           ignore
                             (Ojs.call x2190 "push"
                                [|(Ojs.float_to_js x2191)|])
                       | None -> ());
                      x2190))
  end
let (dataView : _DataViewConstructor) =
  _DataViewConstructor_of_js (Ojs.get_prop_ascii Ojs.global "DataView")
module Int8Array =
  struct
    type t = _Int8Array
    let rec t_of_js : Ojs.t -> t =
      fun (x2195 : Ojs.t) -> _Int8Array_of_js x2195
    and t_to_js : t -> Ojs.t =
      fun (x2194 : _Int8Array) -> _Int8Array_to_js x2194
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2197 : Ojs.t) -> t_of_js x2197
    and t_0_to_js : t_0 -> Ojs.t = fun (x2196 : t) -> t_to_js x2196
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2198 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2198) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2199 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2199) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2200 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2200) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2201 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2201) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2207 : t) ->
        fun ~target:(x2202 : float) ->
          fun ~start:(x2203 : float) ->
            fun ?end_:(x2204 : float option) ->
              fun () ->
                t_of_js
                  (let x2208 = t_to_js x2207 in
                   Ojs.call (Ojs.get_prop_ascii x2208 "copyWithin") "apply"
                     [|x2208;((let x2205 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2205 "push"
                                    [|(Ojs.float_to_js x2202)|]);
                               ignore
                                 (Ojs.call x2205 "push"
                                    [|(Ojs.float_to_js x2203)|]);
                               (match x2204 with
                                | Some x2206 ->
                                    ignore
                                      (Ojs.call x2205 "push"
                                         [|(Ojs.float_to_js x2206)|])
                                | None -> ());
                               x2205))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2216 : t) ->
        fun
          ~predicate:(x2209 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2210 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2217 = t_to_js x2216 in
                 Ojs.call (Ojs.get_prop_ascii x2217 "every") "apply"
                   [|x2217;((let x2211 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2211 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2213 : Ojs.t) ->
                                          fun (x2214 : Ojs.t) ->
                                            fun (x2215 : Ojs.t) ->
                                              unknown_to_js
                                                (x2209
                                                   ~value:(Ojs.float_of_js
                                                             x2213)
                                                   ~index:(Ojs.float_of_js
                                                             x2214)
                                                   ~array:(t_of_js x2215))))|]);
                             (match x2210 with
                              | Some x2212 ->
                                  ignore
                                    (Ojs.call x2211 "push"
                                       [|(any_to_js x2212)|])
                              | None -> ());
                             x2211))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2224 : t) ->
        fun ~value:(x2218 : float) ->
          fun ?start:(x2219 : float option) ->
            fun ?end_:(x2220 : float option) ->
              fun () ->
                t_of_js
                  (let x2225 = t_to_js x2224 in
                   Ojs.call (Ojs.get_prop_ascii x2225 "fill") "apply"
                     [|x2225;((let x2221 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2221 "push"
                                    [|(Ojs.float_to_js x2218)|]);
                               (match x2219 with
                                | Some x2223 ->
                                    ignore
                                      (Ojs.call x2221 "push"
                                         [|(Ojs.float_to_js x2223)|])
                                | None -> ());
                               (match x2220 with
                                | Some x2222 ->
                                    ignore
                                      (Ojs.call x2221 "push"
                                         [|(Ojs.float_to_js x2222)|])
                                | None -> ());
                               x2221))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2233 : t) ->
        fun ~predicate:(x2226 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x2227 : any option) ->
            fun () ->
              t_of_js
                (let x2234 = t_to_js x2233 in
                 Ojs.call (Ojs.get_prop_ascii x2234 "filter") "apply"
                   [|x2234;((let x2228 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2228 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2230 : Ojs.t) ->
                                          fun (x2231 : Ojs.t) ->
                                            fun (x2232 : Ojs.t) ->
                                              any_to_js
                                                (x2226
                                                   ~value:(Ojs.float_of_js
                                                             x2230)
                                                   ~index:(Ojs.float_of_js
                                                             x2231)
                                                   ~array:(t_of_js x2232))))|]);
                             (match x2227 with
                              | Some x2229 ->
                                  ignore
                                    (Ojs.call x2228 "push"
                                       [|(any_to_js x2229)|])
                              | None -> ());
                             x2228))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2242 : t) ->
        fun ~predicate:(x2235 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2236 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2243 = t_to_js x2242 in
                 Ojs.call (Ojs.get_prop_ascii x2243 "find") "apply"
                   [|x2243;((let x2237 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2237 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2239 : Ojs.t) ->
                                          fun (x2240 : Ojs.t) ->
                                            fun (x2241 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2235
                                                   ~value:(Ojs.float_of_js
                                                             x2239)
                                                   ~index:(Ojs.float_of_js
                                                             x2240)
                                                   ~obj:(t_of_js x2241))))|]);
                             (match x2236 with
                              | Some x2238 ->
                                  ignore
                                    (Ojs.call x2237 "push"
                                       [|(any_to_js x2238)|])
                              | None -> ());
                             x2237))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2252 : t) ->
        fun ~predicate:(x2245 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2246 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2253 = t_to_js x2252 in
                 Ojs.call (Ojs.get_prop_ascii x2253 "findIndex") "apply"
                   [|x2253;((let x2247 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2247 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2249 : Ojs.t) ->
                                          fun (x2250 : Ojs.t) ->
                                            fun (x2251 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2245
                                                   ~value:(Ojs.float_of_js
                                                             x2249)
                                                   ~index:(Ojs.float_of_js
                                                             x2250)
                                                   ~obj:(t_of_js x2251))))|]);
                             (match x2246 with
                              | Some x2248 ->
                                  ignore
                                    (Ojs.call x2247 "push"
                                       [|(any_to_js x2248)|])
                              | None -> ());
                             x2247))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2261 : t) ->
        fun
          ~callbackfn:(x2254 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2255 : any option) ->
            fun () ->
              ignore
                (let x2262 = t_to_js x2261 in
                 Ojs.call (Ojs.get_prop_ascii x2262 "forEach") "apply"
                   [|x2262;((let x2256 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2256 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2258 : Ojs.t) ->
                                          fun (x2259 : Ojs.t) ->
                                            fun (x2260 : Ojs.t) ->
                                              x2254
                                                ~value:(Ojs.float_of_js x2258)
                                                ~index:(Ojs.float_of_js x2259)
                                                ~array:(t_of_js x2260)))|]);
                             (match x2255 with
                              | Some x2257 ->
                                  ignore
                                    (Ojs.call x2256 "push"
                                       [|(any_to_js x2257)|])
                              | None -> ());
                             x2256))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2267 : t) ->
        fun ~searchElement:(x2263 : float) ->
          fun ?fromIndex:(x2264 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2268 = t_to_js x2267 in
                 Ojs.call (Ojs.get_prop_ascii x2268 "indexOf") "apply"
                   [|x2268;((let x2265 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2265 "push"
                                  [|(Ojs.float_to_js x2263)|]);
                             (match x2264 with
                              | Some x2266 ->
                                  ignore
                                    (Ojs.call x2265 "push"
                                       [|(Ojs.float_to_js x2266)|])
                              | None -> ());
                             x2265))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2272 : t) ->
        fun ?separator:(x2269 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2273 = t_to_js x2272 in
               Ojs.call (Ojs.get_prop_ascii x2273 "join") "apply"
                 [|x2273;((let x2270 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2269 with
                            | Some x2271 ->
                                ignore
                                  (Ojs.call x2270 "push"
                                     [|(Ojs.string_to_js x2271)|])
                            | None -> ());
                           x2270))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2278 : t) ->
        fun ~searchElement:(x2274 : float) ->
          fun ?fromIndex:(x2275 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2279 = t_to_js x2278 in
                 Ojs.call (Ojs.get_prop_ascii x2279 "lastIndexOf") "apply"
                   [|x2279;((let x2276 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2276 "push"
                                  [|(Ojs.float_to_js x2274)|]);
                             (match x2275 with
                              | Some x2277 ->
                                  ignore
                                    (Ojs.call x2276 "push"
                                       [|(Ojs.float_to_js x2277)|])
                              | None -> ());
                             x2276))|])
    let (get_length : t -> float) =
      fun (x2280 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2280) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2288 : t) ->
        fun
          ~callbackfn:(x2281 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2282 : any option) ->
            fun () ->
              t_of_js
                (let x2289 = t_to_js x2288 in
                 Ojs.call (Ojs.get_prop_ascii x2289 "map") "apply"
                   [|x2289;((let x2283 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2283 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2285 : Ojs.t) ->
                                          fun (x2286 : Ojs.t) ->
                                            fun (x2287 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2281
                                                   ~value:(Ojs.float_of_js
                                                             x2285)
                                                   ~index:(Ojs.float_of_js
                                                             x2286)
                                                   ~array:(t_of_js x2287))))|]);
                             (match x2282 with
                              | Some x2284 ->
                                  ignore
                                    (Ojs.call x2283 "push"
                                       [|(any_to_js x2284)|])
                              | None -> ());
                             x2283))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2295 : t) ->
        fun
          ~callbackfn:(x2290 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2295) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2291 : Ojs.t) ->
                       fun (x2292 : Ojs.t) ->
                         fun (x2293 : Ojs.t) ->
                           fun (x2294 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2290 ~previousValue:(Ojs.float_of_js x2291)
                                  ~currentValue:(Ojs.float_of_js x2292)
                                  ~currentIndex:(Ojs.float_of_js x2293)
                                  ~array:(t_of_js x2294))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2302 : t) ->
        fun
          ~callbackfn:(x2296 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2301 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2302) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2297 : Ojs.t) ->
                         fun (x2298 : Ojs.t) ->
                           fun (x2299 : Ojs.t) ->
                             fun (x2300 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2296
                                    ~previousValue:(Ojs.float_of_js x2297)
                                    ~currentValue:(Ojs.float_of_js x2298)
                                    ~currentIndex:(Ojs.float_of_js x2299)
                                    ~array:(t_of_js x2300))));(Ojs.float_to_js
                                                                 x2301)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2309 : t) ->
        fun
          ~callbackfn:(x2303 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2308 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2309) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2304 : Ojs.t) ->
                         fun (x2305 : Ojs.t) ->
                           fun (x2306 : Ojs.t) ->
                             fun (x2307 : Ojs.t) ->
                               Obj.magic
                                 (x2303 ~previousValue:(Obj.magic x2304)
                                    ~currentValue:(Ojs.float_of_js x2305)
                                    ~currentIndex:(Ojs.float_of_js x2306)
                                    ~array:(t_of_js x2307))));(Obj.magic
                                                                 x2308)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2315 : t) ->
        fun
          ~callbackfn:(x2310 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2315) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x2311 : Ojs.t) ->
                       fun (x2312 : Ojs.t) ->
                         fun (x2313 : Ojs.t) ->
                           fun (x2314 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2310 ~previousValue:(Ojs.float_of_js x2311)
                                  ~currentValue:(Ojs.float_of_js x2312)
                                  ~currentIndex:(Ojs.float_of_js x2313)
                                  ~array:(t_of_js x2314))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2322 : t) ->
        fun
          ~callbackfn:(x2316 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2321 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2322) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2317 : Ojs.t) ->
                         fun (x2318 : Ojs.t) ->
                           fun (x2319 : Ojs.t) ->
                             fun (x2320 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2316
                                    ~previousValue:(Ojs.float_of_js x2317)
                                    ~currentValue:(Ojs.float_of_js x2318)
                                    ~currentIndex:(Ojs.float_of_js x2319)
                                    ~array:(t_of_js x2320))));(Ojs.float_to_js
                                                                 x2321)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2329 : t) ->
        fun
          ~callbackfn:(x2323 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2328 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2329) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2324 : Ojs.t) ->
                         fun (x2325 : Ojs.t) ->
                           fun (x2326 : Ojs.t) ->
                             fun (x2327 : Ojs.t) ->
                               Obj.magic
                                 (x2323 ~previousValue:(Obj.magic x2324)
                                    ~currentValue:(Ojs.float_of_js x2325)
                                    ~currentIndex:(Ojs.float_of_js x2326)
                                    ~array:(t_of_js x2327))));(Obj.magic
                                                                 x2328)|])
    let (reverse : t -> t) =
      fun (x2330 : t) -> t_of_js (Ojs.call (t_to_js x2330) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x2336 : t) ->
        fun ~array:(x2331 : float _Array) ->
          fun ?offset:(x2332 : float option) ->
            fun () ->
              ignore
                (let x2337 = t_to_js x2336 in
                 Ojs.call (Ojs.get_prop_ascii x2337 "set") "apply"
                   [|x2337;((let x2333 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2333 "push"
                                  [|(_Array_to_js Ojs.float_to_js x2331)|]);
                             (match x2332 with
                              | Some x2334 ->
                                  ignore
                                    (Ojs.call x2333 "push"
                                       [|(Ojs.float_to_js x2334)|])
                              | None -> ());
                             x2333))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2343 : t) ->
        fun ?start:(x2338 : float option) ->
          fun ?end_:(x2339 : float option) ->
            fun () ->
              t_of_js
                (let x2344 = t_to_js x2343 in
                 Ojs.call (Ojs.get_prop_ascii x2344 "slice") "apply"
                   [|x2344;((let x2340 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2338 with
                              | Some x2342 ->
                                  ignore
                                    (Ojs.call x2340 "push"
                                       [|(Ojs.float_to_js x2342)|])
                              | None -> ());
                             (match x2339 with
                              | Some x2341 ->
                                  ignore
                                    (Ojs.call x2340 "push"
                                       [|(Ojs.float_to_js x2341)|])
                              | None -> ());
                             x2340))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2352 : t) ->
        fun
          ~predicate:(x2345 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2346 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2353 = t_to_js x2352 in
                 Ojs.call (Ojs.get_prop_ascii x2353 "some") "apply"
                   [|x2353;((let x2347 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2347 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2349 : Ojs.t) ->
                                          fun (x2350 : Ojs.t) ->
                                            fun (x2351 : Ojs.t) ->
                                              unknown_to_js
                                                (x2345
                                                   ~value:(Ojs.float_of_js
                                                             x2349)
                                                   ~index:(Ojs.float_of_js
                                                             x2350)
                                                   ~array:(t_of_js x2351))))|]);
                             (match x2346 with
                              | Some x2348 ->
                                  ignore
                                    (Ojs.call x2347 "push"
                                       [|(any_to_js x2348)|])
                              | None -> ());
                             x2347))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x2359 : t) ->
        fun ?compareFn:(x2354 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x2360 = t_to_js x2359 in
               Ojs.call (Ojs.get_prop_ascii x2360 "sort") "apply"
                 [|x2360;((let x2355 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2354 with
                            | Some x2356 ->
                                ignore
                                  (Ojs.call x2355 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2357 : Ojs.t) ->
                                             fun (x2358 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x2356
                                                    ~a:(Ojs.float_of_js x2357)
                                                    ~b:(Ojs.float_of_js x2358))))|])
                            | None -> ());
                           x2355))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x2366 : t) ->
        fun ?begin_:(x2361 : float option) ->
          fun ?end_:(x2362 : float option) ->
            fun () ->
              t_of_js
                (let x2367 = t_to_js x2366 in
                 Ojs.call (Ojs.get_prop_ascii x2367 "subarray") "apply"
                   [|x2367;((let x2363 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2361 with
                              | Some x2365 ->
                                  ignore
                                    (Ojs.call x2363 "push"
                                       [|(Ojs.float_to_js x2365)|])
                              | None -> ());
                             (match x2362 with
                              | Some x2364 ->
                                  ignore
                                    (Ojs.call x2363 "push"
                                       [|(Ojs.float_to_js x2364)|])
                              | None -> ());
                             x2363))|])
    let (toLocaleString : t -> string) =
      fun (x2368 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2368) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x2369 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2369) "toString" [||])
    let (valueOf : t -> t) =
      fun (x2370 : t) -> t_of_js (Ojs.call (t_to_js x2370) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x2371 : t) ->
        fun (x2372 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x2371) (Ojs.float_to_js x2372))
    let (set : t -> float -> float -> unit) =
      fun (x2373 : t) ->
        fun (x2374 : float) ->
          fun (x2375 : float) ->
            Ojs.set_prop (t_to_js x2373) (Ojs.float_to_js x2374)
              (Ojs.float_to_js x2375)
    let (create : length:float -> _Int8Array) =
      fun ~length:(x2376 : float) ->
        _Int8Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x2376)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Int8Array) =
      fun ~array:(x2377 : (_ArrayBuffer, float _Array) union2) ->
        _Int8Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x2379 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x2379) x2377)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Int8Array)
      =
      fun ~buffer:(x2381 : _ArrayBuffer) ->
        fun ?byteOffset:(x2382 : float option) ->
          fun ?length:(x2383 : float option) ->
            fun () ->
              _Int8Array_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x2384 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2384 "push" [|(_ArrayBuffer_to_js x2381)|]);
                    (match x2382 with
                     | Some x2386 ->
                         ignore
                           (Ojs.call x2384 "push" [|(Ojs.float_to_js x2386)|])
                     | None -> ());
                    (match x2383 with
                     | Some x2385 ->
                         ignore
                           (Ojs.call x2384 "push" [|(Ojs.float_to_js x2385)|])
                     | None -> ());
                    x2384))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Int8Array) =
      fun ~items:(x2387 : float list) ->
        _Int8Array_of_js
          (let x2390 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x2390 "of") "apply"
             [|x2390;((let x2388 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2389 : float) ->
                            ignore
                              (Ojs.call x2388 "push"
                                 [|(Ojs.float_to_js x2389)|])) x2387;
                       x2388))|])
    let (from : array:float _Array -> _Int8Array) =
      fun ~array:(x2391 : float _Array) ->
        _Int8Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(_Array_to_js Ojs.float_to_js x2391)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Int8Array)
      =
      fun ~array:(x2393 : 'T _Array) ->
        fun ~mapfn:(x2394 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x2395 : any option) ->
            fun () ->
              _Int8Array_of_js
                (let x2401 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x2401 "from") "apply"
                   [|x2401;((let x2396 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2396 "push"
                                  [|(_Array_to_js Obj.magic x2393)|]);
                             ignore
                               (Ojs.call x2396 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2398 : Ojs.t) ->
                                          fun (x2399 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x2394 ~v:(Obj.magic x2398)
                                                 ~k:(Ojs.float_of_js x2399))))|]);
                             (match x2395 with
                              | Some x2397 ->
                                  ignore
                                    (Ojs.call x2396 "push"
                                       [|(any_to_js x2397)|])
                              | None -> ());
                             x2396))|])
  end
module Int8ArrayConstructor =
  struct
    type t = _Int8ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2403 : Ojs.t) -> _Int8ArrayConstructor_of_js x2403
    and t_to_js : t -> Ojs.t =
      fun (x2402 : _Int8ArrayConstructor) ->
        _Int8ArrayConstructor_to_js x2402
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2405 : Ojs.t) -> t_of_js x2405
    and t_0_to_js : t_0 -> Ojs.t = fun (x2404 : t) -> t_to_js x2404
    let (get_prototype : t -> _Int8Array) =
      fun (x2406 : t) ->
        _Int8Array_of_js (Ojs.get_prop_ascii (t_to_js x2406) "prototype")
    let (create : t -> length:float -> _Int8Array) =
      fun (x2408 : t) ->
        fun ~length:(x2407 : float) ->
          _Int8Array_of_js
            (Ojs.new_obj (t_to_js x2408) [|(Ojs.float_to_js x2407)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Int8Array) =
      fun (x2413 : t) ->
        fun ~array:(x2409 : (_ArrayBuffer, float _Array) union2) ->
          _Int8Array_of_js
            (Ojs.new_obj (t_to_js x2413)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x2411 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x2411) x2409)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Int8Array)
      =
      fun (x2420 : t) ->
        fun ~buffer:(x2414 : _ArrayBuffer) ->
          fun ?byteOffset:(x2415 : float option) ->
            fun ?length:(x2416 : float option) ->
              fun () ->
                _Int8Array_of_js
                  (Ojs.new_obj_arr (t_to_js x2420)
                     (let x2417 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2417 "push" [|(_ArrayBuffer_to_js x2414)|]);
                      (match x2415 with
                       | Some x2419 ->
                           ignore
                             (Ojs.call x2417 "push"
                                [|(Ojs.float_to_js x2419)|])
                       | None -> ());
                      (match x2416 with
                       | Some x2418 ->
                           ignore
                             (Ojs.call x2417 "push"
                                [|(Ojs.float_to_js x2418)|])
                       | None -> ());
                      x2417))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2421 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2421) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Int8Array) =
      fun (x2425 : t) ->
        fun ~items:(x2422 : float list) ->
          _Int8Array_of_js
            (let x2426 = t_to_js x2425 in
             Ojs.call (Ojs.get_prop_ascii x2426 "of") "apply"
               [|x2426;((let x2423 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x2424 : float) ->
                              ignore
                                (Ojs.call x2423 "push"
                                   [|(Ojs.float_to_js x2424)|])) x2422;
                         x2423))|])
    let (from : t -> array:float _Array -> _Int8Array) =
      fun (x2429 : t) ->
        fun ~array:(x2427 : float _Array) ->
          _Int8Array_of_js
            (Ojs.call (t_to_js x2429) "from"
               [|(_Array_to_js Ojs.float_to_js x2427)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Int8Array)
      =
      fun (x2438 : t) ->
        fun ~array:(x2430 : 'T _Array) ->
          fun ~mapfn:(x2431 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x2432 : any option) ->
              fun () ->
                _Int8Array_of_js
                  (let x2439 = t_to_js x2438 in
                   Ojs.call (Ojs.get_prop_ascii x2439 "from") "apply"
                     [|x2439;((let x2433 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2433 "push"
                                    [|(_Array_to_js Obj.magic x2430)|]);
                               ignore
                                 (Ojs.call x2433 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x2435 : Ojs.t) ->
                                            fun (x2436 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2431 ~v:(Obj.magic x2435)
                                                   ~k:(Ojs.float_of_js x2436))))|]);
                               (match x2432 with
                                | Some x2434 ->
                                    ignore
                                      (Ojs.call x2433 "push"
                                         [|(any_to_js x2434)|])
                                | None -> ());
                               x2433))|])
  end
let (int8Array : _Int8ArrayConstructor) =
  _Int8ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Int8Array")
module Uint8Array =
  struct
    type t = _Uint8Array
    let rec t_of_js : Ojs.t -> t =
      fun (x2441 : Ojs.t) -> _Uint8Array_of_js x2441
    and t_to_js : t -> Ojs.t =
      fun (x2440 : _Uint8Array) -> _Uint8Array_to_js x2440
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2443 : Ojs.t) -> t_of_js x2443
    and t_0_to_js : t_0 -> Ojs.t = fun (x2442 : t) -> t_to_js x2442
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2444 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2444) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2445 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2445) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2446 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2446) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2447 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2447) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2453 : t) ->
        fun ~target:(x2448 : float) ->
          fun ~start:(x2449 : float) ->
            fun ?end_:(x2450 : float option) ->
              fun () ->
                t_of_js
                  (let x2454 = t_to_js x2453 in
                   Ojs.call (Ojs.get_prop_ascii x2454 "copyWithin") "apply"
                     [|x2454;((let x2451 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2451 "push"
                                    [|(Ojs.float_to_js x2448)|]);
                               ignore
                                 (Ojs.call x2451 "push"
                                    [|(Ojs.float_to_js x2449)|]);
                               (match x2450 with
                                | Some x2452 ->
                                    ignore
                                      (Ojs.call x2451 "push"
                                         [|(Ojs.float_to_js x2452)|])
                                | None -> ());
                               x2451))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2462 : t) ->
        fun
          ~predicate:(x2455 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2456 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2463 = t_to_js x2462 in
                 Ojs.call (Ojs.get_prop_ascii x2463 "every") "apply"
                   [|x2463;((let x2457 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2457 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2459 : Ojs.t) ->
                                          fun (x2460 : Ojs.t) ->
                                            fun (x2461 : Ojs.t) ->
                                              unknown_to_js
                                                (x2455
                                                   ~value:(Ojs.float_of_js
                                                             x2459)
                                                   ~index:(Ojs.float_of_js
                                                             x2460)
                                                   ~array:(t_of_js x2461))))|]);
                             (match x2456 with
                              | Some x2458 ->
                                  ignore
                                    (Ojs.call x2457 "push"
                                       [|(any_to_js x2458)|])
                              | None -> ());
                             x2457))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2470 : t) ->
        fun ~value:(x2464 : float) ->
          fun ?start:(x2465 : float option) ->
            fun ?end_:(x2466 : float option) ->
              fun () ->
                t_of_js
                  (let x2471 = t_to_js x2470 in
                   Ojs.call (Ojs.get_prop_ascii x2471 "fill") "apply"
                     [|x2471;((let x2467 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2467 "push"
                                    [|(Ojs.float_to_js x2464)|]);
                               (match x2465 with
                                | Some x2469 ->
                                    ignore
                                      (Ojs.call x2467 "push"
                                         [|(Ojs.float_to_js x2469)|])
                                | None -> ());
                               (match x2466 with
                                | Some x2468 ->
                                    ignore
                                      (Ojs.call x2467 "push"
                                         [|(Ojs.float_to_js x2468)|])
                                | None -> ());
                               x2467))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2479 : t) ->
        fun ~predicate:(x2472 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x2473 : any option) ->
            fun () ->
              t_of_js
                (let x2480 = t_to_js x2479 in
                 Ojs.call (Ojs.get_prop_ascii x2480 "filter") "apply"
                   [|x2480;((let x2474 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2474 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2476 : Ojs.t) ->
                                          fun (x2477 : Ojs.t) ->
                                            fun (x2478 : Ojs.t) ->
                                              any_to_js
                                                (x2472
                                                   ~value:(Ojs.float_of_js
                                                             x2476)
                                                   ~index:(Ojs.float_of_js
                                                             x2477)
                                                   ~array:(t_of_js x2478))))|]);
                             (match x2473 with
                              | Some x2475 ->
                                  ignore
                                    (Ojs.call x2474 "push"
                                       [|(any_to_js x2475)|])
                              | None -> ());
                             x2474))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2488 : t) ->
        fun ~predicate:(x2481 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2482 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2489 = t_to_js x2488 in
                 Ojs.call (Ojs.get_prop_ascii x2489 "find") "apply"
                   [|x2489;((let x2483 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2483 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2485 : Ojs.t) ->
                                          fun (x2486 : Ojs.t) ->
                                            fun (x2487 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2481
                                                   ~value:(Ojs.float_of_js
                                                             x2485)
                                                   ~index:(Ojs.float_of_js
                                                             x2486)
                                                   ~obj:(t_of_js x2487))))|]);
                             (match x2482 with
                              | Some x2484 ->
                                  ignore
                                    (Ojs.call x2483 "push"
                                       [|(any_to_js x2484)|])
                              | None -> ());
                             x2483))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2498 : t) ->
        fun ~predicate:(x2491 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2492 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2499 = t_to_js x2498 in
                 Ojs.call (Ojs.get_prop_ascii x2499 "findIndex") "apply"
                   [|x2499;((let x2493 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2493 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2495 : Ojs.t) ->
                                          fun (x2496 : Ojs.t) ->
                                            fun (x2497 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2491
                                                   ~value:(Ojs.float_of_js
                                                             x2495)
                                                   ~index:(Ojs.float_of_js
                                                             x2496)
                                                   ~obj:(t_of_js x2497))))|]);
                             (match x2492 with
                              | Some x2494 ->
                                  ignore
                                    (Ojs.call x2493 "push"
                                       [|(any_to_js x2494)|])
                              | None -> ());
                             x2493))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2507 : t) ->
        fun
          ~callbackfn:(x2500 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2501 : any option) ->
            fun () ->
              ignore
                (let x2508 = t_to_js x2507 in
                 Ojs.call (Ojs.get_prop_ascii x2508 "forEach") "apply"
                   [|x2508;((let x2502 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2502 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2504 : Ojs.t) ->
                                          fun (x2505 : Ojs.t) ->
                                            fun (x2506 : Ojs.t) ->
                                              x2500
                                                ~value:(Ojs.float_of_js x2504)
                                                ~index:(Ojs.float_of_js x2505)
                                                ~array:(t_of_js x2506)))|]);
                             (match x2501 with
                              | Some x2503 ->
                                  ignore
                                    (Ojs.call x2502 "push"
                                       [|(any_to_js x2503)|])
                              | None -> ());
                             x2502))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2513 : t) ->
        fun ~searchElement:(x2509 : float) ->
          fun ?fromIndex:(x2510 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2514 = t_to_js x2513 in
                 Ojs.call (Ojs.get_prop_ascii x2514 "indexOf") "apply"
                   [|x2514;((let x2511 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2511 "push"
                                  [|(Ojs.float_to_js x2509)|]);
                             (match x2510 with
                              | Some x2512 ->
                                  ignore
                                    (Ojs.call x2511 "push"
                                       [|(Ojs.float_to_js x2512)|])
                              | None -> ());
                             x2511))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2518 : t) ->
        fun ?separator:(x2515 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2519 = t_to_js x2518 in
               Ojs.call (Ojs.get_prop_ascii x2519 "join") "apply"
                 [|x2519;((let x2516 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2515 with
                            | Some x2517 ->
                                ignore
                                  (Ojs.call x2516 "push"
                                     [|(Ojs.string_to_js x2517)|])
                            | None -> ());
                           x2516))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2524 : t) ->
        fun ~searchElement:(x2520 : float) ->
          fun ?fromIndex:(x2521 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2525 = t_to_js x2524 in
                 Ojs.call (Ojs.get_prop_ascii x2525 "lastIndexOf") "apply"
                   [|x2525;((let x2522 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2522 "push"
                                  [|(Ojs.float_to_js x2520)|]);
                             (match x2521 with
                              | Some x2523 ->
                                  ignore
                                    (Ojs.call x2522 "push"
                                       [|(Ojs.float_to_js x2523)|])
                              | None -> ());
                             x2522))|])
    let (get_length : t -> float) =
      fun (x2526 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2526) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2534 : t) ->
        fun
          ~callbackfn:(x2527 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2528 : any option) ->
            fun () ->
              t_of_js
                (let x2535 = t_to_js x2534 in
                 Ojs.call (Ojs.get_prop_ascii x2535 "map") "apply"
                   [|x2535;((let x2529 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2529 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2531 : Ojs.t) ->
                                          fun (x2532 : Ojs.t) ->
                                            fun (x2533 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2527
                                                   ~value:(Ojs.float_of_js
                                                             x2531)
                                                   ~index:(Ojs.float_of_js
                                                             x2532)
                                                   ~array:(t_of_js x2533))))|]);
                             (match x2528 with
                              | Some x2530 ->
                                  ignore
                                    (Ojs.call x2529 "push"
                                       [|(any_to_js x2530)|])
                              | None -> ());
                             x2529))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2541 : t) ->
        fun
          ~callbackfn:(x2536 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2541) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2537 : Ojs.t) ->
                       fun (x2538 : Ojs.t) ->
                         fun (x2539 : Ojs.t) ->
                           fun (x2540 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2536 ~previousValue:(Ojs.float_of_js x2537)
                                  ~currentValue:(Ojs.float_of_js x2538)
                                  ~currentIndex:(Ojs.float_of_js x2539)
                                  ~array:(t_of_js x2540))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2548 : t) ->
        fun
          ~callbackfn:(x2542 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2547 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2548) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2543 : Ojs.t) ->
                         fun (x2544 : Ojs.t) ->
                           fun (x2545 : Ojs.t) ->
                             fun (x2546 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2542
                                    ~previousValue:(Ojs.float_of_js x2543)
                                    ~currentValue:(Ojs.float_of_js x2544)
                                    ~currentIndex:(Ojs.float_of_js x2545)
                                    ~array:(t_of_js x2546))));(Ojs.float_to_js
                                                                 x2547)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2555 : t) ->
        fun
          ~callbackfn:(x2549 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2554 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2555) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2550 : Ojs.t) ->
                         fun (x2551 : Ojs.t) ->
                           fun (x2552 : Ojs.t) ->
                             fun (x2553 : Ojs.t) ->
                               Obj.magic
                                 (x2549 ~previousValue:(Obj.magic x2550)
                                    ~currentValue:(Ojs.float_of_js x2551)
                                    ~currentIndex:(Ojs.float_of_js x2552)
                                    ~array:(t_of_js x2553))));(Obj.magic
                                                                 x2554)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2561 : t) ->
        fun
          ~callbackfn:(x2556 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2561) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x2557 : Ojs.t) ->
                       fun (x2558 : Ojs.t) ->
                         fun (x2559 : Ojs.t) ->
                           fun (x2560 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2556 ~previousValue:(Ojs.float_of_js x2557)
                                  ~currentValue:(Ojs.float_of_js x2558)
                                  ~currentIndex:(Ojs.float_of_js x2559)
                                  ~array:(t_of_js x2560))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2568 : t) ->
        fun
          ~callbackfn:(x2562 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2567 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2568) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2563 : Ojs.t) ->
                         fun (x2564 : Ojs.t) ->
                           fun (x2565 : Ojs.t) ->
                             fun (x2566 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2562
                                    ~previousValue:(Ojs.float_of_js x2563)
                                    ~currentValue:(Ojs.float_of_js x2564)
                                    ~currentIndex:(Ojs.float_of_js x2565)
                                    ~array:(t_of_js x2566))));(Ojs.float_to_js
                                                                 x2567)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2575 : t) ->
        fun
          ~callbackfn:(x2569 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2574 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2575) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2570 : Ojs.t) ->
                         fun (x2571 : Ojs.t) ->
                           fun (x2572 : Ojs.t) ->
                             fun (x2573 : Ojs.t) ->
                               Obj.magic
                                 (x2569 ~previousValue:(Obj.magic x2570)
                                    ~currentValue:(Ojs.float_of_js x2571)
                                    ~currentIndex:(Ojs.float_of_js x2572)
                                    ~array:(t_of_js x2573))));(Obj.magic
                                                                 x2574)|])
    let (reverse : t -> t) =
      fun (x2576 : t) -> t_of_js (Ojs.call (t_to_js x2576) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x2582 : t) ->
        fun ~array:(x2577 : float _Array) ->
          fun ?offset:(x2578 : float option) ->
            fun () ->
              ignore
                (let x2583 = t_to_js x2582 in
                 Ojs.call (Ojs.get_prop_ascii x2583 "set") "apply"
                   [|x2583;((let x2579 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2579 "push"
                                  [|(_Array_to_js Ojs.float_to_js x2577)|]);
                             (match x2578 with
                              | Some x2580 ->
                                  ignore
                                    (Ojs.call x2579 "push"
                                       [|(Ojs.float_to_js x2580)|])
                              | None -> ());
                             x2579))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2589 : t) ->
        fun ?start:(x2584 : float option) ->
          fun ?end_:(x2585 : float option) ->
            fun () ->
              t_of_js
                (let x2590 = t_to_js x2589 in
                 Ojs.call (Ojs.get_prop_ascii x2590 "slice") "apply"
                   [|x2590;((let x2586 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2584 with
                              | Some x2588 ->
                                  ignore
                                    (Ojs.call x2586 "push"
                                       [|(Ojs.float_to_js x2588)|])
                              | None -> ());
                             (match x2585 with
                              | Some x2587 ->
                                  ignore
                                    (Ojs.call x2586 "push"
                                       [|(Ojs.float_to_js x2587)|])
                              | None -> ());
                             x2586))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2598 : t) ->
        fun
          ~predicate:(x2591 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2592 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2599 = t_to_js x2598 in
                 Ojs.call (Ojs.get_prop_ascii x2599 "some") "apply"
                   [|x2599;((let x2593 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2593 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2595 : Ojs.t) ->
                                          fun (x2596 : Ojs.t) ->
                                            fun (x2597 : Ojs.t) ->
                                              unknown_to_js
                                                (x2591
                                                   ~value:(Ojs.float_of_js
                                                             x2595)
                                                   ~index:(Ojs.float_of_js
                                                             x2596)
                                                   ~array:(t_of_js x2597))))|]);
                             (match x2592 with
                              | Some x2594 ->
                                  ignore
                                    (Ojs.call x2593 "push"
                                       [|(any_to_js x2594)|])
                              | None -> ());
                             x2593))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x2605 : t) ->
        fun ?compareFn:(x2600 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x2606 = t_to_js x2605 in
               Ojs.call (Ojs.get_prop_ascii x2606 "sort") "apply"
                 [|x2606;((let x2601 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2600 with
                            | Some x2602 ->
                                ignore
                                  (Ojs.call x2601 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2603 : Ojs.t) ->
                                             fun (x2604 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x2602
                                                    ~a:(Ojs.float_of_js x2603)
                                                    ~b:(Ojs.float_of_js x2604))))|])
                            | None -> ());
                           x2601))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x2612 : t) ->
        fun ?begin_:(x2607 : float option) ->
          fun ?end_:(x2608 : float option) ->
            fun () ->
              t_of_js
                (let x2613 = t_to_js x2612 in
                 Ojs.call (Ojs.get_prop_ascii x2613 "subarray") "apply"
                   [|x2613;((let x2609 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2607 with
                              | Some x2611 ->
                                  ignore
                                    (Ojs.call x2609 "push"
                                       [|(Ojs.float_to_js x2611)|])
                              | None -> ());
                             (match x2608 with
                              | Some x2610 ->
                                  ignore
                                    (Ojs.call x2609 "push"
                                       [|(Ojs.float_to_js x2610)|])
                              | None -> ());
                             x2609))|])
    let (toLocaleString : t -> string) =
      fun (x2614 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2614) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x2615 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2615) "toString" [||])
    let (valueOf : t -> t) =
      fun (x2616 : t) -> t_of_js (Ojs.call (t_to_js x2616) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x2617 : t) ->
        fun (x2618 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x2617) (Ojs.float_to_js x2618))
    let (set : t -> float -> float -> unit) =
      fun (x2619 : t) ->
        fun (x2620 : float) ->
          fun (x2621 : float) ->
            Ojs.set_prop (t_to_js x2619) (Ojs.float_to_js x2620)
              (Ojs.float_to_js x2621)
    let (create : length:float -> _Uint8Array) =
      fun ~length:(x2622 : float) ->
        _Uint8Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x2622)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Uint8Array)
      =
      fun ~array:(x2623 : (_ArrayBuffer, float _Array) union2) ->
        _Uint8Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x2625 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x2625) x2623)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Uint8Array)
      =
      fun ~buffer:(x2627 : _ArrayBuffer) ->
        fun ?byteOffset:(x2628 : float option) ->
          fun ?length:(x2629 : float option) ->
            fun () ->
              _Uint8Array_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x2630 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2630 "push" [|(_ArrayBuffer_to_js x2627)|]);
                    (match x2628 with
                     | Some x2632 ->
                         ignore
                           (Ojs.call x2630 "push" [|(Ojs.float_to_js x2632)|])
                     | None -> ());
                    (match x2629 with
                     | Some x2631 ->
                         ignore
                           (Ojs.call x2630 "push" [|(Ojs.float_to_js x2631)|])
                     | None -> ());
                    x2630))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Uint8Array) =
      fun ~items:(x2633 : float list) ->
        _Uint8Array_of_js
          (let x2636 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x2636 "of") "apply"
             [|x2636;((let x2634 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2635 : float) ->
                            ignore
                              (Ojs.call x2634 "push"
                                 [|(Ojs.float_to_js x2635)|])) x2633;
                       x2634))|])
    let (from : array:float _Array -> _Uint8Array) =
      fun ~array:(x2637 : float _Array) ->
        _Uint8Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(_Array_to_js Ojs.float_to_js x2637)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Uint8Array)
      =
      fun ~array:(x2639 : 'T _Array) ->
        fun ~mapfn:(x2640 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x2641 : any option) ->
            fun () ->
              _Uint8Array_of_js
                (let x2647 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x2647 "from") "apply"
                   [|x2647;((let x2642 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2642 "push"
                                  [|(_Array_to_js Obj.magic x2639)|]);
                             ignore
                               (Ojs.call x2642 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2644 : Ojs.t) ->
                                          fun (x2645 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x2640 ~v:(Obj.magic x2644)
                                                 ~k:(Ojs.float_of_js x2645))))|]);
                             (match x2641 with
                              | Some x2643 ->
                                  ignore
                                    (Ojs.call x2642 "push"
                                       [|(any_to_js x2643)|])
                              | None -> ());
                             x2642))|])
  end
module Uint8ArrayConstructor =
  struct
    type t = _Uint8ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2649 : Ojs.t) -> _Uint8ArrayConstructor_of_js x2649
    and t_to_js : t -> Ojs.t =
      fun (x2648 : _Uint8ArrayConstructor) ->
        _Uint8ArrayConstructor_to_js x2648
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2651 : Ojs.t) -> t_of_js x2651
    and t_0_to_js : t_0 -> Ojs.t = fun (x2650 : t) -> t_to_js x2650
    let (get_prototype : t -> _Uint8Array) =
      fun (x2652 : t) ->
        _Uint8Array_of_js (Ojs.get_prop_ascii (t_to_js x2652) "prototype")
    let (create : t -> length:float -> _Uint8Array) =
      fun (x2654 : t) ->
        fun ~length:(x2653 : float) ->
          _Uint8Array_of_js
            (Ojs.new_obj (t_to_js x2654) [|(Ojs.float_to_js x2653)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Uint8Array) =
      fun (x2659 : t) ->
        fun ~array:(x2655 : (_ArrayBuffer, float _Array) union2) ->
          _Uint8Array_of_js
            (Ojs.new_obj (t_to_js x2659)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x2657 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x2657) x2655)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Uint8Array)
      =
      fun (x2666 : t) ->
        fun ~buffer:(x2660 : _ArrayBuffer) ->
          fun ?byteOffset:(x2661 : float option) ->
            fun ?length:(x2662 : float option) ->
              fun () ->
                _Uint8Array_of_js
                  (Ojs.new_obj_arr (t_to_js x2666)
                     (let x2663 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2663 "push" [|(_ArrayBuffer_to_js x2660)|]);
                      (match x2661 with
                       | Some x2665 ->
                           ignore
                             (Ojs.call x2663 "push"
                                [|(Ojs.float_to_js x2665)|])
                       | None -> ());
                      (match x2662 with
                       | Some x2664 ->
                           ignore
                             (Ojs.call x2663 "push"
                                [|(Ojs.float_to_js x2664)|])
                       | None -> ());
                      x2663))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2667 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2667) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Uint8Array) =
      fun (x2671 : t) ->
        fun ~items:(x2668 : float list) ->
          _Uint8Array_of_js
            (let x2672 = t_to_js x2671 in
             Ojs.call (Ojs.get_prop_ascii x2672 "of") "apply"
               [|x2672;((let x2669 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x2670 : float) ->
                              ignore
                                (Ojs.call x2669 "push"
                                   [|(Ojs.float_to_js x2670)|])) x2668;
                         x2669))|])
    let (from : t -> array:float _Array -> _Uint8Array) =
      fun (x2675 : t) ->
        fun ~array:(x2673 : float _Array) ->
          _Uint8Array_of_js
            (Ojs.call (t_to_js x2675) "from"
               [|(_Array_to_js Ojs.float_to_js x2673)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Uint8Array)
      =
      fun (x2684 : t) ->
        fun ~array:(x2676 : 'T _Array) ->
          fun ~mapfn:(x2677 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x2678 : any option) ->
              fun () ->
                _Uint8Array_of_js
                  (let x2685 = t_to_js x2684 in
                   Ojs.call (Ojs.get_prop_ascii x2685 "from") "apply"
                     [|x2685;((let x2679 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2679 "push"
                                    [|(_Array_to_js Obj.magic x2676)|]);
                               ignore
                                 (Ojs.call x2679 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x2681 : Ojs.t) ->
                                            fun (x2682 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2677 ~v:(Obj.magic x2681)
                                                   ~k:(Ojs.float_of_js x2682))))|]);
                               (match x2678 with
                                | Some x2680 ->
                                    ignore
                                      (Ojs.call x2679 "push"
                                         [|(any_to_js x2680)|])
                                | None -> ());
                               x2679))|])
  end
let (uint8Array : _Uint8ArrayConstructor) =
  _Uint8ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Uint8Array")
module Uint8ClampedArray =
  struct
    type t = _Uint8ClampedArray
    let rec t_of_js : Ojs.t -> t =
      fun (x2687 : Ojs.t) -> _Uint8ClampedArray_of_js x2687
    and t_to_js : t -> Ojs.t =
      fun (x2686 : _Uint8ClampedArray) -> _Uint8ClampedArray_to_js x2686
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2689 : Ojs.t) -> t_of_js x2689
    and t_0_to_js : t_0 -> Ojs.t = fun (x2688 : t) -> t_to_js x2688
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2690 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2690) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2691 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2691) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2692 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2692) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2693 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2693) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2699 : t) ->
        fun ~target:(x2694 : float) ->
          fun ~start:(x2695 : float) ->
            fun ?end_:(x2696 : float option) ->
              fun () ->
                t_of_js
                  (let x2700 = t_to_js x2699 in
                   Ojs.call (Ojs.get_prop_ascii x2700 "copyWithin") "apply"
                     [|x2700;((let x2697 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2697 "push"
                                    [|(Ojs.float_to_js x2694)|]);
                               ignore
                                 (Ojs.call x2697 "push"
                                    [|(Ojs.float_to_js x2695)|]);
                               (match x2696 with
                                | Some x2698 ->
                                    ignore
                                      (Ojs.call x2697 "push"
                                         [|(Ojs.float_to_js x2698)|])
                                | None -> ());
                               x2697))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2708 : t) ->
        fun
          ~predicate:(x2701 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2702 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2709 = t_to_js x2708 in
                 Ojs.call (Ojs.get_prop_ascii x2709 "every") "apply"
                   [|x2709;((let x2703 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2703 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2705 : Ojs.t) ->
                                          fun (x2706 : Ojs.t) ->
                                            fun (x2707 : Ojs.t) ->
                                              unknown_to_js
                                                (x2701
                                                   ~value:(Ojs.float_of_js
                                                             x2705)
                                                   ~index:(Ojs.float_of_js
                                                             x2706)
                                                   ~array:(t_of_js x2707))))|]);
                             (match x2702 with
                              | Some x2704 ->
                                  ignore
                                    (Ojs.call x2703 "push"
                                       [|(any_to_js x2704)|])
                              | None -> ());
                             x2703))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2716 : t) ->
        fun ~value:(x2710 : float) ->
          fun ?start:(x2711 : float option) ->
            fun ?end_:(x2712 : float option) ->
              fun () ->
                t_of_js
                  (let x2717 = t_to_js x2716 in
                   Ojs.call (Ojs.get_prop_ascii x2717 "fill") "apply"
                     [|x2717;((let x2713 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2713 "push"
                                    [|(Ojs.float_to_js x2710)|]);
                               (match x2711 with
                                | Some x2715 ->
                                    ignore
                                      (Ojs.call x2713 "push"
                                         [|(Ojs.float_to_js x2715)|])
                                | None -> ());
                               (match x2712 with
                                | Some x2714 ->
                                    ignore
                                      (Ojs.call x2713 "push"
                                         [|(Ojs.float_to_js x2714)|])
                                | None -> ());
                               x2713))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2725 : t) ->
        fun ~predicate:(x2718 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x2719 : any option) ->
            fun () ->
              t_of_js
                (let x2726 = t_to_js x2725 in
                 Ojs.call (Ojs.get_prop_ascii x2726 "filter") "apply"
                   [|x2726;((let x2720 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2720 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2722 : Ojs.t) ->
                                          fun (x2723 : Ojs.t) ->
                                            fun (x2724 : Ojs.t) ->
                                              any_to_js
                                                (x2718
                                                   ~value:(Ojs.float_of_js
                                                             x2722)
                                                   ~index:(Ojs.float_of_js
                                                             x2723)
                                                   ~array:(t_of_js x2724))))|]);
                             (match x2719 with
                              | Some x2721 ->
                                  ignore
                                    (Ojs.call x2720 "push"
                                       [|(any_to_js x2721)|])
                              | None -> ());
                             x2720))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2734 : t) ->
        fun ~predicate:(x2727 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2728 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2735 = t_to_js x2734 in
                 Ojs.call (Ojs.get_prop_ascii x2735 "find") "apply"
                   [|x2735;((let x2729 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2729 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2731 : Ojs.t) ->
                                          fun (x2732 : Ojs.t) ->
                                            fun (x2733 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2727
                                                   ~value:(Ojs.float_of_js
                                                             x2731)
                                                   ~index:(Ojs.float_of_js
                                                             x2732)
                                                   ~obj:(t_of_js x2733))))|]);
                             (match x2728 with
                              | Some x2730 ->
                                  ignore
                                    (Ojs.call x2729 "push"
                                       [|(any_to_js x2730)|])
                              | None -> ());
                             x2729))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2744 : t) ->
        fun ~predicate:(x2737 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2738 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2745 = t_to_js x2744 in
                 Ojs.call (Ojs.get_prop_ascii x2745 "findIndex") "apply"
                   [|x2745;((let x2739 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2739 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2741 : Ojs.t) ->
                                          fun (x2742 : Ojs.t) ->
                                            fun (x2743 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2737
                                                   ~value:(Ojs.float_of_js
                                                             x2741)
                                                   ~index:(Ojs.float_of_js
                                                             x2742)
                                                   ~obj:(t_of_js x2743))))|]);
                             (match x2738 with
                              | Some x2740 ->
                                  ignore
                                    (Ojs.call x2739 "push"
                                       [|(any_to_js x2740)|])
                              | None -> ());
                             x2739))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2753 : t) ->
        fun
          ~callbackfn:(x2746 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2747 : any option) ->
            fun () ->
              ignore
                (let x2754 = t_to_js x2753 in
                 Ojs.call (Ojs.get_prop_ascii x2754 "forEach") "apply"
                   [|x2754;((let x2748 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2748 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2750 : Ojs.t) ->
                                          fun (x2751 : Ojs.t) ->
                                            fun (x2752 : Ojs.t) ->
                                              x2746
                                                ~value:(Ojs.float_of_js x2750)
                                                ~index:(Ojs.float_of_js x2751)
                                                ~array:(t_of_js x2752)))|]);
                             (match x2747 with
                              | Some x2749 ->
                                  ignore
                                    (Ojs.call x2748 "push"
                                       [|(any_to_js x2749)|])
                              | None -> ());
                             x2748))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2759 : t) ->
        fun ~searchElement:(x2755 : float) ->
          fun ?fromIndex:(x2756 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2760 = t_to_js x2759 in
                 Ojs.call (Ojs.get_prop_ascii x2760 "indexOf") "apply"
                   [|x2760;((let x2757 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2757 "push"
                                  [|(Ojs.float_to_js x2755)|]);
                             (match x2756 with
                              | Some x2758 ->
                                  ignore
                                    (Ojs.call x2757 "push"
                                       [|(Ojs.float_to_js x2758)|])
                              | None -> ());
                             x2757))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2764 : t) ->
        fun ?separator:(x2761 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2765 = t_to_js x2764 in
               Ojs.call (Ojs.get_prop_ascii x2765 "join") "apply"
                 [|x2765;((let x2762 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2761 with
                            | Some x2763 ->
                                ignore
                                  (Ojs.call x2762 "push"
                                     [|(Ojs.string_to_js x2763)|])
                            | None -> ());
                           x2762))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2770 : t) ->
        fun ~searchElement:(x2766 : float) ->
          fun ?fromIndex:(x2767 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2771 = t_to_js x2770 in
                 Ojs.call (Ojs.get_prop_ascii x2771 "lastIndexOf") "apply"
                   [|x2771;((let x2768 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2768 "push"
                                  [|(Ojs.float_to_js x2766)|]);
                             (match x2767 with
                              | Some x2769 ->
                                  ignore
                                    (Ojs.call x2768 "push"
                                       [|(Ojs.float_to_js x2769)|])
                              | None -> ());
                             x2768))|])
    let (get_length : t -> float) =
      fun (x2772 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2772) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2780 : t) ->
        fun
          ~callbackfn:(x2773 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2774 : any option) ->
            fun () ->
              t_of_js
                (let x2781 = t_to_js x2780 in
                 Ojs.call (Ojs.get_prop_ascii x2781 "map") "apply"
                   [|x2781;((let x2775 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2775 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2777 : Ojs.t) ->
                                          fun (x2778 : Ojs.t) ->
                                            fun (x2779 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2773
                                                   ~value:(Ojs.float_of_js
                                                             x2777)
                                                   ~index:(Ojs.float_of_js
                                                             x2778)
                                                   ~array:(t_of_js x2779))))|]);
                             (match x2774 with
                              | Some x2776 ->
                                  ignore
                                    (Ojs.call x2775 "push"
                                       [|(any_to_js x2776)|])
                              | None -> ());
                             x2775))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2787 : t) ->
        fun
          ~callbackfn:(x2782 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2787) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2783 : Ojs.t) ->
                       fun (x2784 : Ojs.t) ->
                         fun (x2785 : Ojs.t) ->
                           fun (x2786 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2782 ~previousValue:(Ojs.float_of_js x2783)
                                  ~currentValue:(Ojs.float_of_js x2784)
                                  ~currentIndex:(Ojs.float_of_js x2785)
                                  ~array:(t_of_js x2786))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2794 : t) ->
        fun
          ~callbackfn:(x2788 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2793 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2794) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2789 : Ojs.t) ->
                         fun (x2790 : Ojs.t) ->
                           fun (x2791 : Ojs.t) ->
                             fun (x2792 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2788
                                    ~previousValue:(Ojs.float_of_js x2789)
                                    ~currentValue:(Ojs.float_of_js x2790)
                                    ~currentIndex:(Ojs.float_of_js x2791)
                                    ~array:(t_of_js x2792))));(Ojs.float_to_js
                                                                 x2793)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2801 : t) ->
        fun
          ~callbackfn:(x2795 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2800 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2801) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2796 : Ojs.t) ->
                         fun (x2797 : Ojs.t) ->
                           fun (x2798 : Ojs.t) ->
                             fun (x2799 : Ojs.t) ->
                               Obj.magic
                                 (x2795 ~previousValue:(Obj.magic x2796)
                                    ~currentValue:(Ojs.float_of_js x2797)
                                    ~currentIndex:(Ojs.float_of_js x2798)
                                    ~array:(t_of_js x2799))));(Obj.magic
                                                                 x2800)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2807 : t) ->
        fun
          ~callbackfn:(x2802 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2807) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x2803 : Ojs.t) ->
                       fun (x2804 : Ojs.t) ->
                         fun (x2805 : Ojs.t) ->
                           fun (x2806 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2802 ~previousValue:(Ojs.float_of_js x2803)
                                  ~currentValue:(Ojs.float_of_js x2804)
                                  ~currentIndex:(Ojs.float_of_js x2805)
                                  ~array:(t_of_js x2806))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2814 : t) ->
        fun
          ~callbackfn:(x2808 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2813 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2814) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2809 : Ojs.t) ->
                         fun (x2810 : Ojs.t) ->
                           fun (x2811 : Ojs.t) ->
                             fun (x2812 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2808
                                    ~previousValue:(Ojs.float_of_js x2809)
                                    ~currentValue:(Ojs.float_of_js x2810)
                                    ~currentIndex:(Ojs.float_of_js x2811)
                                    ~array:(t_of_js x2812))));(Ojs.float_to_js
                                                                 x2813)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2821 : t) ->
        fun
          ~callbackfn:(x2815 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2820 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2821) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2816 : Ojs.t) ->
                         fun (x2817 : Ojs.t) ->
                           fun (x2818 : Ojs.t) ->
                             fun (x2819 : Ojs.t) ->
                               Obj.magic
                                 (x2815 ~previousValue:(Obj.magic x2816)
                                    ~currentValue:(Ojs.float_of_js x2817)
                                    ~currentIndex:(Ojs.float_of_js x2818)
                                    ~array:(t_of_js x2819))));(Obj.magic
                                                                 x2820)|])
    let (reverse : t -> t) =
      fun (x2822 : t) -> t_of_js (Ojs.call (t_to_js x2822) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x2828 : t) ->
        fun ~array:(x2823 : float _Array) ->
          fun ?offset:(x2824 : float option) ->
            fun () ->
              ignore
                (let x2829 = t_to_js x2828 in
                 Ojs.call (Ojs.get_prop_ascii x2829 "set") "apply"
                   [|x2829;((let x2825 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2825 "push"
                                  [|(_Array_to_js Ojs.float_to_js x2823)|]);
                             (match x2824 with
                              | Some x2826 ->
                                  ignore
                                    (Ojs.call x2825 "push"
                                       [|(Ojs.float_to_js x2826)|])
                              | None -> ());
                             x2825))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2835 : t) ->
        fun ?start:(x2830 : float option) ->
          fun ?end_:(x2831 : float option) ->
            fun () ->
              t_of_js
                (let x2836 = t_to_js x2835 in
                 Ojs.call (Ojs.get_prop_ascii x2836 "slice") "apply"
                   [|x2836;((let x2832 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2830 with
                              | Some x2834 ->
                                  ignore
                                    (Ojs.call x2832 "push"
                                       [|(Ojs.float_to_js x2834)|])
                              | None -> ());
                             (match x2831 with
                              | Some x2833 ->
                                  ignore
                                    (Ojs.call x2832 "push"
                                       [|(Ojs.float_to_js x2833)|])
                              | None -> ());
                             x2832))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2844 : t) ->
        fun
          ~predicate:(x2837 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2838 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2845 = t_to_js x2844 in
                 Ojs.call (Ojs.get_prop_ascii x2845 "some") "apply"
                   [|x2845;((let x2839 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2839 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2841 : Ojs.t) ->
                                          fun (x2842 : Ojs.t) ->
                                            fun (x2843 : Ojs.t) ->
                                              unknown_to_js
                                                (x2837
                                                   ~value:(Ojs.float_of_js
                                                             x2841)
                                                   ~index:(Ojs.float_of_js
                                                             x2842)
                                                   ~array:(t_of_js x2843))))|]);
                             (match x2838 with
                              | Some x2840 ->
                                  ignore
                                    (Ojs.call x2839 "push"
                                       [|(any_to_js x2840)|])
                              | None -> ());
                             x2839))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x2851 : t) ->
        fun ?compareFn:(x2846 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x2852 = t_to_js x2851 in
               Ojs.call (Ojs.get_prop_ascii x2852 "sort") "apply"
                 [|x2852;((let x2847 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2846 with
                            | Some x2848 ->
                                ignore
                                  (Ojs.call x2847 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2849 : Ojs.t) ->
                                             fun (x2850 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x2848
                                                    ~a:(Ojs.float_of_js x2849)
                                                    ~b:(Ojs.float_of_js x2850))))|])
                            | None -> ());
                           x2847))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x2858 : t) ->
        fun ?begin_:(x2853 : float option) ->
          fun ?end_:(x2854 : float option) ->
            fun () ->
              t_of_js
                (let x2859 = t_to_js x2858 in
                 Ojs.call (Ojs.get_prop_ascii x2859 "subarray") "apply"
                   [|x2859;((let x2855 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2853 with
                              | Some x2857 ->
                                  ignore
                                    (Ojs.call x2855 "push"
                                       [|(Ojs.float_to_js x2857)|])
                              | None -> ());
                             (match x2854 with
                              | Some x2856 ->
                                  ignore
                                    (Ojs.call x2855 "push"
                                       [|(Ojs.float_to_js x2856)|])
                              | None -> ());
                             x2855))|])
    let (toLocaleString : t -> string) =
      fun (x2860 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2860) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x2861 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2861) "toString" [||])
    let (valueOf : t -> t) =
      fun (x2862 : t) -> t_of_js (Ojs.call (t_to_js x2862) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x2863 : t) ->
        fun (x2864 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x2863) (Ojs.float_to_js x2864))
    let (set : t -> float -> float -> unit) =
      fun (x2865 : t) ->
        fun (x2866 : float) ->
          fun (x2867 : float) ->
            Ojs.set_prop (t_to_js x2865) (Ojs.float_to_js x2866)
              (Ojs.float_to_js x2867)
    let (create : length:float -> _Uint8ClampedArray) =
      fun ~length:(x2868 : float) ->
        _Uint8ClampedArray_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x2868)|])
    let (create' :
      array:(_ArrayBuffer, float _Array) union2 -> _Uint8ClampedArray) =
      fun ~array:(x2869 : (_ArrayBuffer, float _Array) union2) ->
        _Uint8ClampedArray_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x2871 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x2871) x2869)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Uint8ClampedArray)
      =
      fun ~buffer:(x2873 : _ArrayBuffer) ->
        fun ?byteOffset:(x2874 : float option) ->
          fun ?length:(x2875 : float option) ->
            fun () ->
              _Uint8ClampedArray_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x2876 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2876 "push" [|(_ArrayBuffer_to_js x2873)|]);
                    (match x2874 with
                     | Some x2878 ->
                         ignore
                           (Ojs.call x2876 "push" [|(Ojs.float_to_js x2878)|])
                     | None -> ());
                    (match x2875 with
                     | Some x2877 ->
                         ignore
                           (Ojs.call x2876 "push" [|(Ojs.float_to_js x2877)|])
                     | None -> ());
                    x2876))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Uint8ClampedArray) =
      fun ~items:(x2879 : float list) ->
        _Uint8ClampedArray_of_js
          (let x2882 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x2882 "of") "apply"
             [|x2882;((let x2880 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2881 : float) ->
                            ignore
                              (Ojs.call x2880 "push"
                                 [|(Ojs.float_to_js x2881)|])) x2879;
                       x2880))|])
    let (from : array:float _Array -> _Uint8ClampedArray) =
      fun ~array:(x2883 : float _Array) ->
        _Uint8ClampedArray_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(_Array_to_js Ojs.float_to_js x2883)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Uint8ClampedArray)
      =
      fun ~array:(x2885 : 'T _Array) ->
        fun ~mapfn:(x2886 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x2887 : any option) ->
            fun () ->
              _Uint8ClampedArray_of_js
                (let x2893 =
                   Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x2893 "from") "apply"
                   [|x2893;((let x2888 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2888 "push"
                                  [|(_Array_to_js Obj.magic x2885)|]);
                             ignore
                               (Ojs.call x2888 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2890 : Ojs.t) ->
                                          fun (x2891 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x2886 ~v:(Obj.magic x2890)
                                                 ~k:(Ojs.float_of_js x2891))))|]);
                             (match x2887 with
                              | Some x2889 ->
                                  ignore
                                    (Ojs.call x2888 "push"
                                       [|(any_to_js x2889)|])
                              | None -> ());
                             x2888))|])
  end
module Uint8ClampedArrayConstructor =
  struct
    type t = _Uint8ClampedArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2895 : Ojs.t) -> _Uint8ClampedArrayConstructor_of_js x2895
    and t_to_js : t -> Ojs.t =
      fun (x2894 : _Uint8ClampedArrayConstructor) ->
        _Uint8ClampedArrayConstructor_to_js x2894
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2897 : Ojs.t) -> t_of_js x2897
    and t_0_to_js : t_0 -> Ojs.t = fun (x2896 : t) -> t_to_js x2896
    let (get_prototype : t -> _Uint8ClampedArray) =
      fun (x2898 : t) ->
        _Uint8ClampedArray_of_js
          (Ojs.get_prop_ascii (t_to_js x2898) "prototype")
    let (create : t -> length:float -> _Uint8ClampedArray) =
      fun (x2900 : t) ->
        fun ~length:(x2899 : float) ->
          _Uint8ClampedArray_of_js
            (Ojs.new_obj (t_to_js x2900) [|(Ojs.float_to_js x2899)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Uint8ClampedArray) =
      fun (x2905 : t) ->
        fun ~array:(x2901 : (_ArrayBuffer, float _Array) union2) ->
          _Uint8ClampedArray_of_js
            (Ojs.new_obj (t_to_js x2905)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x2903 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x2903) x2901)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Uint8ClampedArray)
      =
      fun (x2912 : t) ->
        fun ~buffer:(x2906 : _ArrayBuffer) ->
          fun ?byteOffset:(x2907 : float option) ->
            fun ?length:(x2908 : float option) ->
              fun () ->
                _Uint8ClampedArray_of_js
                  (Ojs.new_obj_arr (t_to_js x2912)
                     (let x2909 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2909 "push" [|(_ArrayBuffer_to_js x2906)|]);
                      (match x2907 with
                       | Some x2911 ->
                           ignore
                             (Ojs.call x2909 "push"
                                [|(Ojs.float_to_js x2911)|])
                       | None -> ());
                      (match x2908 with
                       | Some x2910 ->
                           ignore
                             (Ojs.call x2909 "push"
                                [|(Ojs.float_to_js x2910)|])
                       | None -> ());
                      x2909))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2913 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2913) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Uint8ClampedArray) =
      fun (x2917 : t) ->
        fun ~items:(x2914 : float list) ->
          _Uint8ClampedArray_of_js
            (let x2918 = t_to_js x2917 in
             Ojs.call (Ojs.get_prop_ascii x2918 "of") "apply"
               [|x2918;((let x2915 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x2916 : float) ->
                              ignore
                                (Ojs.call x2915 "push"
                                   [|(Ojs.float_to_js x2916)|])) x2914;
                         x2915))|])
    let (from : t -> array:float _Array -> _Uint8ClampedArray) =
      fun (x2921 : t) ->
        fun ~array:(x2919 : float _Array) ->
          _Uint8ClampedArray_of_js
            (Ojs.call (t_to_js x2921) "from"
               [|(_Array_to_js Ojs.float_to_js x2919)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Uint8ClampedArray)
      =
      fun (x2930 : t) ->
        fun ~array:(x2922 : 'T _Array) ->
          fun ~mapfn:(x2923 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x2924 : any option) ->
              fun () ->
                _Uint8ClampedArray_of_js
                  (let x2931 = t_to_js x2930 in
                   Ojs.call (Ojs.get_prop_ascii x2931 "from") "apply"
                     [|x2931;((let x2925 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2925 "push"
                                    [|(_Array_to_js Obj.magic x2922)|]);
                               ignore
                                 (Ojs.call x2925 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x2927 : Ojs.t) ->
                                            fun (x2928 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2923 ~v:(Obj.magic x2927)
                                                   ~k:(Ojs.float_of_js x2928))))|]);
                               (match x2924 with
                                | Some x2926 ->
                                    ignore
                                      (Ojs.call x2925 "push"
                                         [|(any_to_js x2926)|])
                                | None -> ());
                               x2925))|])
  end
let (uint8ClampedArray : _Uint8ClampedArrayConstructor) =
  _Uint8ClampedArrayConstructor_of_js
    (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
module Int16Array =
  struct
    type t = _Int16Array
    let rec t_of_js : Ojs.t -> t =
      fun (x2933 : Ojs.t) -> _Int16Array_of_js x2933
    and t_to_js : t -> Ojs.t =
      fun (x2932 : _Int16Array) -> _Int16Array_to_js x2932
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2935 : Ojs.t) -> t_of_js x2935
    and t_0_to_js : t_0 -> Ojs.t = fun (x2934 : t) -> t_to_js x2934
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2936 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2936) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2937 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2937) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2938 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2938) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2939 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2939) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2945 : t) ->
        fun ~target:(x2940 : float) ->
          fun ~start:(x2941 : float) ->
            fun ?end_:(x2942 : float option) ->
              fun () ->
                t_of_js
                  (let x2946 = t_to_js x2945 in
                   Ojs.call (Ojs.get_prop_ascii x2946 "copyWithin") "apply"
                     [|x2946;((let x2943 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2943 "push"
                                    [|(Ojs.float_to_js x2940)|]);
                               ignore
                                 (Ojs.call x2943 "push"
                                    [|(Ojs.float_to_js x2941)|]);
                               (match x2942 with
                                | Some x2944 ->
                                    ignore
                                      (Ojs.call x2943 "push"
                                         [|(Ojs.float_to_js x2944)|])
                                | None -> ());
                               x2943))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2954 : t) ->
        fun
          ~predicate:(x2947 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2948 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2955 = t_to_js x2954 in
                 Ojs.call (Ojs.get_prop_ascii x2955 "every") "apply"
                   [|x2955;((let x2949 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2949 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2951 : Ojs.t) ->
                                          fun (x2952 : Ojs.t) ->
                                            fun (x2953 : Ojs.t) ->
                                              unknown_to_js
                                                (x2947
                                                   ~value:(Ojs.float_of_js
                                                             x2951)
                                                   ~index:(Ojs.float_of_js
                                                             x2952)
                                                   ~array:(t_of_js x2953))))|]);
                             (match x2948 with
                              | Some x2950 ->
                                  ignore
                                    (Ojs.call x2949 "push"
                                       [|(any_to_js x2950)|])
                              | None -> ());
                             x2949))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2962 : t) ->
        fun ~value:(x2956 : float) ->
          fun ?start:(x2957 : float option) ->
            fun ?end_:(x2958 : float option) ->
              fun () ->
                t_of_js
                  (let x2963 = t_to_js x2962 in
                   Ojs.call (Ojs.get_prop_ascii x2963 "fill") "apply"
                     [|x2963;((let x2959 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2959 "push"
                                    [|(Ojs.float_to_js x2956)|]);
                               (match x2957 with
                                | Some x2961 ->
                                    ignore
                                      (Ojs.call x2959 "push"
                                         [|(Ojs.float_to_js x2961)|])
                                | None -> ());
                               (match x2958 with
                                | Some x2960 ->
                                    ignore
                                      (Ojs.call x2959 "push"
                                         [|(Ojs.float_to_js x2960)|])
                                | None -> ());
                               x2959))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2971 : t) ->
        fun ~predicate:(x2964 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x2965 : any option) ->
            fun () ->
              t_of_js
                (let x2972 = t_to_js x2971 in
                 Ojs.call (Ojs.get_prop_ascii x2972 "filter") "apply"
                   [|x2972;((let x2966 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2966 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2968 : Ojs.t) ->
                                          fun (x2969 : Ojs.t) ->
                                            fun (x2970 : Ojs.t) ->
                                              any_to_js
                                                (x2964
                                                   ~value:(Ojs.float_of_js
                                                             x2968)
                                                   ~index:(Ojs.float_of_js
                                                             x2969)
                                                   ~array:(t_of_js x2970))))|]);
                             (match x2965 with
                              | Some x2967 ->
                                  ignore
                                    (Ojs.call x2966 "push"
                                       [|(any_to_js x2967)|])
                              | None -> ());
                             x2966))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2980 : t) ->
        fun ~predicate:(x2973 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2974 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2981 = t_to_js x2980 in
                 Ojs.call (Ojs.get_prop_ascii x2981 "find") "apply"
                   [|x2981;((let x2975 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2975 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2977 : Ojs.t) ->
                                          fun (x2978 : Ojs.t) ->
                                            fun (x2979 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2973
                                                   ~value:(Ojs.float_of_js
                                                             x2977)
                                                   ~index:(Ojs.float_of_js
                                                             x2978)
                                                   ~obj:(t_of_js x2979))))|]);
                             (match x2974 with
                              | Some x2976 ->
                                  ignore
                                    (Ojs.call x2975 "push"
                                       [|(any_to_js x2976)|])
                              | None -> ());
                             x2975))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2990 : t) ->
        fun ~predicate:(x2983 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2984 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2991 = t_to_js x2990 in
                 Ojs.call (Ojs.get_prop_ascii x2991 "findIndex") "apply"
                   [|x2991;((let x2985 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2985 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2987 : Ojs.t) ->
                                          fun (x2988 : Ojs.t) ->
                                            fun (x2989 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2983
                                                   ~value:(Ojs.float_of_js
                                                             x2987)
                                                   ~index:(Ojs.float_of_js
                                                             x2988)
                                                   ~obj:(t_of_js x2989))))|]);
                             (match x2984 with
                              | Some x2986 ->
                                  ignore
                                    (Ojs.call x2985 "push"
                                       [|(any_to_js x2986)|])
                              | None -> ());
                             x2985))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2999 : t) ->
        fun
          ~callbackfn:(x2992 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2993 : any option) ->
            fun () ->
              ignore
                (let x3000 = t_to_js x2999 in
                 Ojs.call (Ojs.get_prop_ascii x3000 "forEach") "apply"
                   [|x3000;((let x2994 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2994 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2996 : Ojs.t) ->
                                          fun (x2997 : Ojs.t) ->
                                            fun (x2998 : Ojs.t) ->
                                              x2992
                                                ~value:(Ojs.float_of_js x2996)
                                                ~index:(Ojs.float_of_js x2997)
                                                ~array:(t_of_js x2998)))|]);
                             (match x2993 with
                              | Some x2995 ->
                                  ignore
                                    (Ojs.call x2994 "push"
                                       [|(any_to_js x2995)|])
                              | None -> ());
                             x2994))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3005 : t) ->
        fun ~searchElement:(x3001 : float) ->
          fun ?fromIndex:(x3002 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3006 = t_to_js x3005 in
                 Ojs.call (Ojs.get_prop_ascii x3006 "indexOf") "apply"
                   [|x3006;((let x3003 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3003 "push"
                                  [|(Ojs.float_to_js x3001)|]);
                             (match x3002 with
                              | Some x3004 ->
                                  ignore
                                    (Ojs.call x3003 "push"
                                       [|(Ojs.float_to_js x3004)|])
                              | None -> ());
                             x3003))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3010 : t) ->
        fun ?separator:(x3007 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3011 = t_to_js x3010 in
               Ojs.call (Ojs.get_prop_ascii x3011 "join") "apply"
                 [|x3011;((let x3008 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3007 with
                            | Some x3009 ->
                                ignore
                                  (Ojs.call x3008 "push"
                                     [|(Ojs.string_to_js x3009)|])
                            | None -> ());
                           x3008))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3016 : t) ->
        fun ~searchElement:(x3012 : float) ->
          fun ?fromIndex:(x3013 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3017 = t_to_js x3016 in
                 Ojs.call (Ojs.get_prop_ascii x3017 "lastIndexOf") "apply"
                   [|x3017;((let x3014 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3014 "push"
                                  [|(Ojs.float_to_js x3012)|]);
                             (match x3013 with
                              | Some x3015 ->
                                  ignore
                                    (Ojs.call x3014 "push"
                                       [|(Ojs.float_to_js x3015)|])
                              | None -> ());
                             x3014))|])
    let (get_length : t -> float) =
      fun (x3018 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3018) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3026 : t) ->
        fun
          ~callbackfn:(x3019 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3020 : any option) ->
            fun () ->
              t_of_js
                (let x3027 = t_to_js x3026 in
                 Ojs.call (Ojs.get_prop_ascii x3027 "map") "apply"
                   [|x3027;((let x3021 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3021 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3023 : Ojs.t) ->
                                          fun (x3024 : Ojs.t) ->
                                            fun (x3025 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3019
                                                   ~value:(Ojs.float_of_js
                                                             x3023)
                                                   ~index:(Ojs.float_of_js
                                                             x3024)
                                                   ~array:(t_of_js x3025))))|]);
                             (match x3020 with
                              | Some x3022 ->
                                  ignore
                                    (Ojs.call x3021 "push"
                                       [|(any_to_js x3022)|])
                              | None -> ());
                             x3021))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3033 : t) ->
        fun
          ~callbackfn:(x3028 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3033) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3029 : Ojs.t) ->
                       fun (x3030 : Ojs.t) ->
                         fun (x3031 : Ojs.t) ->
                           fun (x3032 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3028 ~previousValue:(Ojs.float_of_js x3029)
                                  ~currentValue:(Ojs.float_of_js x3030)
                                  ~currentIndex:(Ojs.float_of_js x3031)
                                  ~array:(t_of_js x3032))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3040 : t) ->
        fun
          ~callbackfn:(x3034 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3039 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3040) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3035 : Ojs.t) ->
                         fun (x3036 : Ojs.t) ->
                           fun (x3037 : Ojs.t) ->
                             fun (x3038 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3034
                                    ~previousValue:(Ojs.float_of_js x3035)
                                    ~currentValue:(Ojs.float_of_js x3036)
                                    ~currentIndex:(Ojs.float_of_js x3037)
                                    ~array:(t_of_js x3038))));(Ojs.float_to_js
                                                                 x3039)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3047 : t) ->
        fun
          ~callbackfn:(x3041 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3046 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3047) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3042 : Ojs.t) ->
                         fun (x3043 : Ojs.t) ->
                           fun (x3044 : Ojs.t) ->
                             fun (x3045 : Ojs.t) ->
                               Obj.magic
                                 (x3041 ~previousValue:(Obj.magic x3042)
                                    ~currentValue:(Ojs.float_of_js x3043)
                                    ~currentIndex:(Ojs.float_of_js x3044)
                                    ~array:(t_of_js x3045))));(Obj.magic
                                                                 x3046)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3053 : t) ->
        fun
          ~callbackfn:(x3048 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3053) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3049 : Ojs.t) ->
                       fun (x3050 : Ojs.t) ->
                         fun (x3051 : Ojs.t) ->
                           fun (x3052 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3048 ~previousValue:(Ojs.float_of_js x3049)
                                  ~currentValue:(Ojs.float_of_js x3050)
                                  ~currentIndex:(Ojs.float_of_js x3051)
                                  ~array:(t_of_js x3052))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3060 : t) ->
        fun
          ~callbackfn:(x3054 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3059 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3060) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3055 : Ojs.t) ->
                         fun (x3056 : Ojs.t) ->
                           fun (x3057 : Ojs.t) ->
                             fun (x3058 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3054
                                    ~previousValue:(Ojs.float_of_js x3055)
                                    ~currentValue:(Ojs.float_of_js x3056)
                                    ~currentIndex:(Ojs.float_of_js x3057)
                                    ~array:(t_of_js x3058))));(Ojs.float_to_js
                                                                 x3059)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3067 : t) ->
        fun
          ~callbackfn:(x3061 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3066 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3067) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3062 : Ojs.t) ->
                         fun (x3063 : Ojs.t) ->
                           fun (x3064 : Ojs.t) ->
                             fun (x3065 : Ojs.t) ->
                               Obj.magic
                                 (x3061 ~previousValue:(Obj.magic x3062)
                                    ~currentValue:(Ojs.float_of_js x3063)
                                    ~currentIndex:(Ojs.float_of_js x3064)
                                    ~array:(t_of_js x3065))));(Obj.magic
                                                                 x3066)|])
    let (reverse : t -> t) =
      fun (x3068 : t) -> t_of_js (Ojs.call (t_to_js x3068) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x3074 : t) ->
        fun ~array:(x3069 : float _Array) ->
          fun ?offset:(x3070 : float option) ->
            fun () ->
              ignore
                (let x3075 = t_to_js x3074 in
                 Ojs.call (Ojs.get_prop_ascii x3075 "set") "apply"
                   [|x3075;((let x3071 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3071 "push"
                                  [|(_Array_to_js Ojs.float_to_js x3069)|]);
                             (match x3070 with
                              | Some x3072 ->
                                  ignore
                                    (Ojs.call x3071 "push"
                                       [|(Ojs.float_to_js x3072)|])
                              | None -> ());
                             x3071))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3081 : t) ->
        fun ?start:(x3076 : float option) ->
          fun ?end_:(x3077 : float option) ->
            fun () ->
              t_of_js
                (let x3082 = t_to_js x3081 in
                 Ojs.call (Ojs.get_prop_ascii x3082 "slice") "apply"
                   [|x3082;((let x3078 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3076 with
                              | Some x3080 ->
                                  ignore
                                    (Ojs.call x3078 "push"
                                       [|(Ojs.float_to_js x3080)|])
                              | None -> ());
                             (match x3077 with
                              | Some x3079 ->
                                  ignore
                                    (Ojs.call x3078 "push"
                                       [|(Ojs.float_to_js x3079)|])
                              | None -> ());
                             x3078))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3090 : t) ->
        fun
          ~predicate:(x3083 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3084 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3091 = t_to_js x3090 in
                 Ojs.call (Ojs.get_prop_ascii x3091 "some") "apply"
                   [|x3091;((let x3085 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3085 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3087 : Ojs.t) ->
                                          fun (x3088 : Ojs.t) ->
                                            fun (x3089 : Ojs.t) ->
                                              unknown_to_js
                                                (x3083
                                                   ~value:(Ojs.float_of_js
                                                             x3087)
                                                   ~index:(Ojs.float_of_js
                                                             x3088)
                                                   ~array:(t_of_js x3089))))|]);
                             (match x3084 with
                              | Some x3086 ->
                                  ignore
                                    (Ojs.call x3085 "push"
                                       [|(any_to_js x3086)|])
                              | None -> ());
                             x3085))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3097 : t) ->
        fun ?compareFn:(x3092 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3098 = t_to_js x3097 in
               Ojs.call (Ojs.get_prop_ascii x3098 "sort") "apply"
                 [|x3098;((let x3093 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3092 with
                            | Some x3094 ->
                                ignore
                                  (Ojs.call x3093 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3095 : Ojs.t) ->
                                             fun (x3096 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3094
                                                    ~a:(Ojs.float_of_js x3095)
                                                    ~b:(Ojs.float_of_js x3096))))|])
                            | None -> ());
                           x3093))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3104 : t) ->
        fun ?begin_:(x3099 : float option) ->
          fun ?end_:(x3100 : float option) ->
            fun () ->
              t_of_js
                (let x3105 = t_to_js x3104 in
                 Ojs.call (Ojs.get_prop_ascii x3105 "subarray") "apply"
                   [|x3105;((let x3101 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3099 with
                              | Some x3103 ->
                                  ignore
                                    (Ojs.call x3101 "push"
                                       [|(Ojs.float_to_js x3103)|])
                              | None -> ());
                             (match x3100 with
                              | Some x3102 ->
                                  ignore
                                    (Ojs.call x3101 "push"
                                       [|(Ojs.float_to_js x3102)|])
                              | None -> ());
                             x3101))|])
    let (toLocaleString : t -> string) =
      fun (x3106 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3106) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3107 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3107) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3108 : t) -> t_of_js (Ojs.call (t_to_js x3108) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3109 : t) ->
        fun (x3110 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3109) (Ojs.float_to_js x3110))
    let (set : t -> float -> float -> unit) =
      fun (x3111 : t) ->
        fun (x3112 : float) ->
          fun (x3113 : float) ->
            Ojs.set_prop (t_to_js x3111) (Ojs.float_to_js x3112)
              (Ojs.float_to_js x3113)
    let (create : length:float -> _Int16Array) =
      fun ~length:(x3114 : float) ->
        _Int16Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x3114)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Int16Array)
      =
      fun ~array:(x3115 : (_ArrayBuffer, float _Array) union2) ->
        _Int16Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x3117 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x3117) x3115)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Int16Array)
      =
      fun ~buffer:(x3119 : _ArrayBuffer) ->
        fun ?byteOffset:(x3120 : float option) ->
          fun ?length:(x3121 : float option) ->
            fun () ->
              _Int16Array_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x3122 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3122 "push" [|(_ArrayBuffer_to_js x3119)|]);
                    (match x3120 with
                     | Some x3124 ->
                         ignore
                           (Ojs.call x3122 "push" [|(Ojs.float_to_js x3124)|])
                     | None -> ());
                    (match x3121 with
                     | Some x3123 ->
                         ignore
                           (Ojs.call x3122 "push" [|(Ojs.float_to_js x3123)|])
                     | None -> ());
                    x3122))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Int16Array) =
      fun ~items:(x3125 : float list) ->
        _Int16Array_of_js
          (let x3128 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x3128 "of") "apply"
             [|x3128;((let x3126 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3127 : float) ->
                            ignore
                              (Ojs.call x3126 "push"
                                 [|(Ojs.float_to_js x3127)|])) x3125;
                       x3126))|])
    let (from : array:float _Array -> _Int16Array) =
      fun ~array:(x3129 : float _Array) ->
        _Int16Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(_Array_to_js Ojs.float_to_js x3129)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Int16Array)
      =
      fun ~array:(x3131 : 'T _Array) ->
        fun ~mapfn:(x3132 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3133 : any option) ->
            fun () ->
              _Int16Array_of_js
                (let x3139 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x3139 "from") "apply"
                   [|x3139;((let x3134 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3134 "push"
                                  [|(_Array_to_js Obj.magic x3131)|]);
                             ignore
                               (Ojs.call x3134 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3136 : Ojs.t) ->
                                          fun (x3137 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3132 ~v:(Obj.magic x3136)
                                                 ~k:(Ojs.float_of_js x3137))))|]);
                             (match x3133 with
                              | Some x3135 ->
                                  ignore
                                    (Ojs.call x3134 "push"
                                       [|(any_to_js x3135)|])
                              | None -> ());
                             x3134))|])
  end
module Int16ArrayConstructor =
  struct
    type t = _Int16ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x3141 : Ojs.t) -> _Int16ArrayConstructor_of_js x3141
    and t_to_js : t -> Ojs.t =
      fun (x3140 : _Int16ArrayConstructor) ->
        _Int16ArrayConstructor_to_js x3140
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3143 : Ojs.t) -> t_of_js x3143
    and t_0_to_js : t_0 -> Ojs.t = fun (x3142 : t) -> t_to_js x3142
    let (get_prototype : t -> _Int16Array) =
      fun (x3144 : t) ->
        _Int16Array_of_js (Ojs.get_prop_ascii (t_to_js x3144) "prototype")
    let (create : t -> length:float -> _Int16Array) =
      fun (x3146 : t) ->
        fun ~length:(x3145 : float) ->
          _Int16Array_of_js
            (Ojs.new_obj (t_to_js x3146) [|(Ojs.float_to_js x3145)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Int16Array) =
      fun (x3151 : t) ->
        fun ~array:(x3147 : (_ArrayBuffer, float _Array) union2) ->
          _Int16Array_of_js
            (Ojs.new_obj (t_to_js x3151)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x3149 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x3149) x3147)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Int16Array)
      =
      fun (x3158 : t) ->
        fun ~buffer:(x3152 : _ArrayBuffer) ->
          fun ?byteOffset:(x3153 : float option) ->
            fun ?length:(x3154 : float option) ->
              fun () ->
                _Int16Array_of_js
                  (Ojs.new_obj_arr (t_to_js x3158)
                     (let x3155 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3155 "push" [|(_ArrayBuffer_to_js x3152)|]);
                      (match x3153 with
                       | Some x3157 ->
                           ignore
                             (Ojs.call x3155 "push"
                                [|(Ojs.float_to_js x3157)|])
                       | None -> ());
                      (match x3154 with
                       | Some x3156 ->
                           ignore
                             (Ojs.call x3155 "push"
                                [|(Ojs.float_to_js x3156)|])
                       | None -> ());
                      x3155))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3159 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3159) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Int16Array) =
      fun (x3163 : t) ->
        fun ~items:(x3160 : float list) ->
          _Int16Array_of_js
            (let x3164 = t_to_js x3163 in
             Ojs.call (Ojs.get_prop_ascii x3164 "of") "apply"
               [|x3164;((let x3161 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3162 : float) ->
                              ignore
                                (Ojs.call x3161 "push"
                                   [|(Ojs.float_to_js x3162)|])) x3160;
                         x3161))|])
    let (from : t -> array:float _Array -> _Int16Array) =
      fun (x3167 : t) ->
        fun ~array:(x3165 : float _Array) ->
          _Int16Array_of_js
            (Ojs.call (t_to_js x3167) "from"
               [|(_Array_to_js Ojs.float_to_js x3165)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Int16Array)
      =
      fun (x3176 : t) ->
        fun ~array:(x3168 : 'T _Array) ->
          fun ~mapfn:(x3169 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3170 : any option) ->
              fun () ->
                _Int16Array_of_js
                  (let x3177 = t_to_js x3176 in
                   Ojs.call (Ojs.get_prop_ascii x3177 "from") "apply"
                     [|x3177;((let x3171 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3171 "push"
                                    [|(_Array_to_js Obj.magic x3168)|]);
                               ignore
                                 (Ojs.call x3171 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3173 : Ojs.t) ->
                                            fun (x3174 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3169 ~v:(Obj.magic x3173)
                                                   ~k:(Ojs.float_of_js x3174))))|]);
                               (match x3170 with
                                | Some x3172 ->
                                    ignore
                                      (Ojs.call x3171 "push"
                                         [|(any_to_js x3172)|])
                                | None -> ());
                               x3171))|])
  end
let (int16Array : _Int16ArrayConstructor) =
  _Int16ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Int16Array")
module Uint16Array =
  struct
    type t = _Uint16Array
    let rec t_of_js : Ojs.t -> t =
      fun (x3179 : Ojs.t) -> _Uint16Array_of_js x3179
    and t_to_js : t -> Ojs.t =
      fun (x3178 : _Uint16Array) -> _Uint16Array_to_js x3178
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3181 : Ojs.t) -> t_of_js x3181
    and t_0_to_js : t_0 -> Ojs.t = fun (x3180 : t) -> t_to_js x3180
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3182 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3182) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x3183 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x3183) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3184 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3184) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3185 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3185) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3191 : t) ->
        fun ~target:(x3186 : float) ->
          fun ~start:(x3187 : float) ->
            fun ?end_:(x3188 : float option) ->
              fun () ->
                t_of_js
                  (let x3192 = t_to_js x3191 in
                   Ojs.call (Ojs.get_prop_ascii x3192 "copyWithin") "apply"
                     [|x3192;((let x3189 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3189 "push"
                                    [|(Ojs.float_to_js x3186)|]);
                               ignore
                                 (Ojs.call x3189 "push"
                                    [|(Ojs.float_to_js x3187)|]);
                               (match x3188 with
                                | Some x3190 ->
                                    ignore
                                      (Ojs.call x3189 "push"
                                         [|(Ojs.float_to_js x3190)|])
                                | None -> ());
                               x3189))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3200 : t) ->
        fun
          ~predicate:(x3193 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3194 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3201 = t_to_js x3200 in
                 Ojs.call (Ojs.get_prop_ascii x3201 "every") "apply"
                   [|x3201;((let x3195 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3195 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3197 : Ojs.t) ->
                                          fun (x3198 : Ojs.t) ->
                                            fun (x3199 : Ojs.t) ->
                                              unknown_to_js
                                                (x3193
                                                   ~value:(Ojs.float_of_js
                                                             x3197)
                                                   ~index:(Ojs.float_of_js
                                                             x3198)
                                                   ~array:(t_of_js x3199))))|]);
                             (match x3194 with
                              | Some x3196 ->
                                  ignore
                                    (Ojs.call x3195 "push"
                                       [|(any_to_js x3196)|])
                              | None -> ());
                             x3195))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3208 : t) ->
        fun ~value:(x3202 : float) ->
          fun ?start:(x3203 : float option) ->
            fun ?end_:(x3204 : float option) ->
              fun () ->
                t_of_js
                  (let x3209 = t_to_js x3208 in
                   Ojs.call (Ojs.get_prop_ascii x3209 "fill") "apply"
                     [|x3209;((let x3205 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3205 "push"
                                    [|(Ojs.float_to_js x3202)|]);
                               (match x3203 with
                                | Some x3207 ->
                                    ignore
                                      (Ojs.call x3205 "push"
                                         [|(Ojs.float_to_js x3207)|])
                                | None -> ());
                               (match x3204 with
                                | Some x3206 ->
                                    ignore
                                      (Ojs.call x3205 "push"
                                         [|(Ojs.float_to_js x3206)|])
                                | None -> ());
                               x3205))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3217 : t) ->
        fun ~predicate:(x3210 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x3211 : any option) ->
            fun () ->
              t_of_js
                (let x3218 = t_to_js x3217 in
                 Ojs.call (Ojs.get_prop_ascii x3218 "filter") "apply"
                   [|x3218;((let x3212 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3212 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3214 : Ojs.t) ->
                                          fun (x3215 : Ojs.t) ->
                                            fun (x3216 : Ojs.t) ->
                                              any_to_js
                                                (x3210
                                                   ~value:(Ojs.float_of_js
                                                             x3214)
                                                   ~index:(Ojs.float_of_js
                                                             x3215)
                                                   ~array:(t_of_js x3216))))|]);
                             (match x3211 with
                              | Some x3213 ->
                                  ignore
                                    (Ojs.call x3212 "push"
                                       [|(any_to_js x3213)|])
                              | None -> ());
                             x3212))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3226 : t) ->
        fun ~predicate:(x3219 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3220 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3227 = t_to_js x3226 in
                 Ojs.call (Ojs.get_prop_ascii x3227 "find") "apply"
                   [|x3227;((let x3221 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3221 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3223 : Ojs.t) ->
                                          fun (x3224 : Ojs.t) ->
                                            fun (x3225 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3219
                                                   ~value:(Ojs.float_of_js
                                                             x3223)
                                                   ~index:(Ojs.float_of_js
                                                             x3224)
                                                   ~obj:(t_of_js x3225))))|]);
                             (match x3220 with
                              | Some x3222 ->
                                  ignore
                                    (Ojs.call x3221 "push"
                                       [|(any_to_js x3222)|])
                              | None -> ());
                             x3221))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3236 : t) ->
        fun ~predicate:(x3229 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3230 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3237 = t_to_js x3236 in
                 Ojs.call (Ojs.get_prop_ascii x3237 "findIndex") "apply"
                   [|x3237;((let x3231 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3231 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3233 : Ojs.t) ->
                                          fun (x3234 : Ojs.t) ->
                                            fun (x3235 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3229
                                                   ~value:(Ojs.float_of_js
                                                             x3233)
                                                   ~index:(Ojs.float_of_js
                                                             x3234)
                                                   ~obj:(t_of_js x3235))))|]);
                             (match x3230 with
                              | Some x3232 ->
                                  ignore
                                    (Ojs.call x3231 "push"
                                       [|(any_to_js x3232)|])
                              | None -> ());
                             x3231))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3245 : t) ->
        fun
          ~callbackfn:(x3238 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3239 : any option) ->
            fun () ->
              ignore
                (let x3246 = t_to_js x3245 in
                 Ojs.call (Ojs.get_prop_ascii x3246 "forEach") "apply"
                   [|x3246;((let x3240 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3240 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3242 : Ojs.t) ->
                                          fun (x3243 : Ojs.t) ->
                                            fun (x3244 : Ojs.t) ->
                                              x3238
                                                ~value:(Ojs.float_of_js x3242)
                                                ~index:(Ojs.float_of_js x3243)
                                                ~array:(t_of_js x3244)))|]);
                             (match x3239 with
                              | Some x3241 ->
                                  ignore
                                    (Ojs.call x3240 "push"
                                       [|(any_to_js x3241)|])
                              | None -> ());
                             x3240))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3251 : t) ->
        fun ~searchElement:(x3247 : float) ->
          fun ?fromIndex:(x3248 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3252 = t_to_js x3251 in
                 Ojs.call (Ojs.get_prop_ascii x3252 "indexOf") "apply"
                   [|x3252;((let x3249 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3249 "push"
                                  [|(Ojs.float_to_js x3247)|]);
                             (match x3248 with
                              | Some x3250 ->
                                  ignore
                                    (Ojs.call x3249 "push"
                                       [|(Ojs.float_to_js x3250)|])
                              | None -> ());
                             x3249))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3256 : t) ->
        fun ?separator:(x3253 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3257 = t_to_js x3256 in
               Ojs.call (Ojs.get_prop_ascii x3257 "join") "apply"
                 [|x3257;((let x3254 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3253 with
                            | Some x3255 ->
                                ignore
                                  (Ojs.call x3254 "push"
                                     [|(Ojs.string_to_js x3255)|])
                            | None -> ());
                           x3254))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3262 : t) ->
        fun ~searchElement:(x3258 : float) ->
          fun ?fromIndex:(x3259 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3263 = t_to_js x3262 in
                 Ojs.call (Ojs.get_prop_ascii x3263 "lastIndexOf") "apply"
                   [|x3263;((let x3260 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3260 "push"
                                  [|(Ojs.float_to_js x3258)|]);
                             (match x3259 with
                              | Some x3261 ->
                                  ignore
                                    (Ojs.call x3260 "push"
                                       [|(Ojs.float_to_js x3261)|])
                              | None -> ());
                             x3260))|])
    let (get_length : t -> float) =
      fun (x3264 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3264) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3272 : t) ->
        fun
          ~callbackfn:(x3265 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3266 : any option) ->
            fun () ->
              t_of_js
                (let x3273 = t_to_js x3272 in
                 Ojs.call (Ojs.get_prop_ascii x3273 "map") "apply"
                   [|x3273;((let x3267 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3267 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3269 : Ojs.t) ->
                                          fun (x3270 : Ojs.t) ->
                                            fun (x3271 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3265
                                                   ~value:(Ojs.float_of_js
                                                             x3269)
                                                   ~index:(Ojs.float_of_js
                                                             x3270)
                                                   ~array:(t_of_js x3271))))|]);
                             (match x3266 with
                              | Some x3268 ->
                                  ignore
                                    (Ojs.call x3267 "push"
                                       [|(any_to_js x3268)|])
                              | None -> ());
                             x3267))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3279 : t) ->
        fun
          ~callbackfn:(x3274 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3279) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3275 : Ojs.t) ->
                       fun (x3276 : Ojs.t) ->
                         fun (x3277 : Ojs.t) ->
                           fun (x3278 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3274 ~previousValue:(Ojs.float_of_js x3275)
                                  ~currentValue:(Ojs.float_of_js x3276)
                                  ~currentIndex:(Ojs.float_of_js x3277)
                                  ~array:(t_of_js x3278))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3286 : t) ->
        fun
          ~callbackfn:(x3280 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3285 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3286) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3281 : Ojs.t) ->
                         fun (x3282 : Ojs.t) ->
                           fun (x3283 : Ojs.t) ->
                             fun (x3284 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3280
                                    ~previousValue:(Ojs.float_of_js x3281)
                                    ~currentValue:(Ojs.float_of_js x3282)
                                    ~currentIndex:(Ojs.float_of_js x3283)
                                    ~array:(t_of_js x3284))));(Ojs.float_to_js
                                                                 x3285)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3293 : t) ->
        fun
          ~callbackfn:(x3287 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3292 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3293) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3288 : Ojs.t) ->
                         fun (x3289 : Ojs.t) ->
                           fun (x3290 : Ojs.t) ->
                             fun (x3291 : Ojs.t) ->
                               Obj.magic
                                 (x3287 ~previousValue:(Obj.magic x3288)
                                    ~currentValue:(Ojs.float_of_js x3289)
                                    ~currentIndex:(Ojs.float_of_js x3290)
                                    ~array:(t_of_js x3291))));(Obj.magic
                                                                 x3292)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3299 : t) ->
        fun
          ~callbackfn:(x3294 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3299) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3295 : Ojs.t) ->
                       fun (x3296 : Ojs.t) ->
                         fun (x3297 : Ojs.t) ->
                           fun (x3298 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3294 ~previousValue:(Ojs.float_of_js x3295)
                                  ~currentValue:(Ojs.float_of_js x3296)
                                  ~currentIndex:(Ojs.float_of_js x3297)
                                  ~array:(t_of_js x3298))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3306 : t) ->
        fun
          ~callbackfn:(x3300 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3305 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3306) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3301 : Ojs.t) ->
                         fun (x3302 : Ojs.t) ->
                           fun (x3303 : Ojs.t) ->
                             fun (x3304 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3300
                                    ~previousValue:(Ojs.float_of_js x3301)
                                    ~currentValue:(Ojs.float_of_js x3302)
                                    ~currentIndex:(Ojs.float_of_js x3303)
                                    ~array:(t_of_js x3304))));(Ojs.float_to_js
                                                                 x3305)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3313 : t) ->
        fun
          ~callbackfn:(x3307 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3312 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3313) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3308 : Ojs.t) ->
                         fun (x3309 : Ojs.t) ->
                           fun (x3310 : Ojs.t) ->
                             fun (x3311 : Ojs.t) ->
                               Obj.magic
                                 (x3307 ~previousValue:(Obj.magic x3308)
                                    ~currentValue:(Ojs.float_of_js x3309)
                                    ~currentIndex:(Ojs.float_of_js x3310)
                                    ~array:(t_of_js x3311))));(Obj.magic
                                                                 x3312)|])
    let (reverse : t -> t) =
      fun (x3314 : t) -> t_of_js (Ojs.call (t_to_js x3314) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x3320 : t) ->
        fun ~array:(x3315 : float _Array) ->
          fun ?offset:(x3316 : float option) ->
            fun () ->
              ignore
                (let x3321 = t_to_js x3320 in
                 Ojs.call (Ojs.get_prop_ascii x3321 "set") "apply"
                   [|x3321;((let x3317 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3317 "push"
                                  [|(_Array_to_js Ojs.float_to_js x3315)|]);
                             (match x3316 with
                              | Some x3318 ->
                                  ignore
                                    (Ojs.call x3317 "push"
                                       [|(Ojs.float_to_js x3318)|])
                              | None -> ());
                             x3317))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3327 : t) ->
        fun ?start:(x3322 : float option) ->
          fun ?end_:(x3323 : float option) ->
            fun () ->
              t_of_js
                (let x3328 = t_to_js x3327 in
                 Ojs.call (Ojs.get_prop_ascii x3328 "slice") "apply"
                   [|x3328;((let x3324 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3322 with
                              | Some x3326 ->
                                  ignore
                                    (Ojs.call x3324 "push"
                                       [|(Ojs.float_to_js x3326)|])
                              | None -> ());
                             (match x3323 with
                              | Some x3325 ->
                                  ignore
                                    (Ojs.call x3324 "push"
                                       [|(Ojs.float_to_js x3325)|])
                              | None -> ());
                             x3324))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3336 : t) ->
        fun
          ~predicate:(x3329 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3330 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3337 = t_to_js x3336 in
                 Ojs.call (Ojs.get_prop_ascii x3337 "some") "apply"
                   [|x3337;((let x3331 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3331 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3333 : Ojs.t) ->
                                          fun (x3334 : Ojs.t) ->
                                            fun (x3335 : Ojs.t) ->
                                              unknown_to_js
                                                (x3329
                                                   ~value:(Ojs.float_of_js
                                                             x3333)
                                                   ~index:(Ojs.float_of_js
                                                             x3334)
                                                   ~array:(t_of_js x3335))))|]);
                             (match x3330 with
                              | Some x3332 ->
                                  ignore
                                    (Ojs.call x3331 "push"
                                       [|(any_to_js x3332)|])
                              | None -> ());
                             x3331))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3343 : t) ->
        fun ?compareFn:(x3338 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3344 = t_to_js x3343 in
               Ojs.call (Ojs.get_prop_ascii x3344 "sort") "apply"
                 [|x3344;((let x3339 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3338 with
                            | Some x3340 ->
                                ignore
                                  (Ojs.call x3339 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3341 : Ojs.t) ->
                                             fun (x3342 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3340
                                                    ~a:(Ojs.float_of_js x3341)
                                                    ~b:(Ojs.float_of_js x3342))))|])
                            | None -> ());
                           x3339))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3350 : t) ->
        fun ?begin_:(x3345 : float option) ->
          fun ?end_:(x3346 : float option) ->
            fun () ->
              t_of_js
                (let x3351 = t_to_js x3350 in
                 Ojs.call (Ojs.get_prop_ascii x3351 "subarray") "apply"
                   [|x3351;((let x3347 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3345 with
                              | Some x3349 ->
                                  ignore
                                    (Ojs.call x3347 "push"
                                       [|(Ojs.float_to_js x3349)|])
                              | None -> ());
                             (match x3346 with
                              | Some x3348 ->
                                  ignore
                                    (Ojs.call x3347 "push"
                                       [|(Ojs.float_to_js x3348)|])
                              | None -> ());
                             x3347))|])
    let (toLocaleString : t -> string) =
      fun (x3352 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3352) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3353 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3353) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3354 : t) -> t_of_js (Ojs.call (t_to_js x3354) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3355 : t) ->
        fun (x3356 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3355) (Ojs.float_to_js x3356))
    let (set : t -> float -> float -> unit) =
      fun (x3357 : t) ->
        fun (x3358 : float) ->
          fun (x3359 : float) ->
            Ojs.set_prop (t_to_js x3357) (Ojs.float_to_js x3358)
              (Ojs.float_to_js x3359)
    let (create : length:float -> _Uint16Array) =
      fun ~length:(x3360 : float) ->
        _Uint16Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x3360)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Uint16Array)
      =
      fun ~array:(x3361 : (_ArrayBuffer, float _Array) union2) ->
        _Uint16Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x3363 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x3363) x3361)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Uint16Array)
      =
      fun ~buffer:(x3365 : _ArrayBuffer) ->
        fun ?byteOffset:(x3366 : float option) ->
          fun ?length:(x3367 : float option) ->
            fun () ->
              _Uint16Array_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x3368 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3368 "push" [|(_ArrayBuffer_to_js x3365)|]);
                    (match x3366 with
                     | Some x3370 ->
                         ignore
                           (Ojs.call x3368 "push" [|(Ojs.float_to_js x3370)|])
                     | None -> ());
                    (match x3367 with
                     | Some x3369 ->
                         ignore
                           (Ojs.call x3368 "push" [|(Ojs.float_to_js x3369)|])
                     | None -> ());
                    x3368))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Uint16Array) =
      fun ~items:(x3371 : float list) ->
        _Uint16Array_of_js
          (let x3374 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x3374 "of") "apply"
             [|x3374;((let x3372 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3373 : float) ->
                            ignore
                              (Ojs.call x3372 "push"
                                 [|(Ojs.float_to_js x3373)|])) x3371;
                       x3372))|])
    let (from : array:float _Array -> _Uint16Array) =
      fun ~array:(x3375 : float _Array) ->
        _Uint16Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(_Array_to_js Ojs.float_to_js x3375)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Uint16Array)
      =
      fun ~array:(x3377 : 'T _Array) ->
        fun ~mapfn:(x3378 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3379 : any option) ->
            fun () ->
              _Uint16Array_of_js
                (let x3385 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x3385 "from") "apply"
                   [|x3385;((let x3380 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3380 "push"
                                  [|(_Array_to_js Obj.magic x3377)|]);
                             ignore
                               (Ojs.call x3380 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3382 : Ojs.t) ->
                                          fun (x3383 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3378 ~v:(Obj.magic x3382)
                                                 ~k:(Ojs.float_of_js x3383))))|]);
                             (match x3379 with
                              | Some x3381 ->
                                  ignore
                                    (Ojs.call x3380 "push"
                                       [|(any_to_js x3381)|])
                              | None -> ());
                             x3380))|])
  end
module Uint16ArrayConstructor =
  struct
    type t = _Uint16ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x3387 : Ojs.t) -> _Uint16ArrayConstructor_of_js x3387
    and t_to_js : t -> Ojs.t =
      fun (x3386 : _Uint16ArrayConstructor) ->
        _Uint16ArrayConstructor_to_js x3386
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3389 : Ojs.t) -> t_of_js x3389
    and t_0_to_js : t_0 -> Ojs.t = fun (x3388 : t) -> t_to_js x3388
    let (get_prototype : t -> _Uint16Array) =
      fun (x3390 : t) ->
        _Uint16Array_of_js (Ojs.get_prop_ascii (t_to_js x3390) "prototype")
    let (create : t -> length:float -> _Uint16Array) =
      fun (x3392 : t) ->
        fun ~length:(x3391 : float) ->
          _Uint16Array_of_js
            (Ojs.new_obj (t_to_js x3392) [|(Ojs.float_to_js x3391)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Uint16Array) =
      fun (x3397 : t) ->
        fun ~array:(x3393 : (_ArrayBuffer, float _Array) union2) ->
          _Uint16Array_of_js
            (Ojs.new_obj (t_to_js x3397)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x3395 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x3395) x3393)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Uint16Array)
      =
      fun (x3404 : t) ->
        fun ~buffer:(x3398 : _ArrayBuffer) ->
          fun ?byteOffset:(x3399 : float option) ->
            fun ?length:(x3400 : float option) ->
              fun () ->
                _Uint16Array_of_js
                  (Ojs.new_obj_arr (t_to_js x3404)
                     (let x3401 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3401 "push" [|(_ArrayBuffer_to_js x3398)|]);
                      (match x3399 with
                       | Some x3403 ->
                           ignore
                             (Ojs.call x3401 "push"
                                [|(Ojs.float_to_js x3403)|])
                       | None -> ());
                      (match x3400 with
                       | Some x3402 ->
                           ignore
                             (Ojs.call x3401 "push"
                                [|(Ojs.float_to_js x3402)|])
                       | None -> ());
                      x3401))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3405 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3405) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Uint16Array) =
      fun (x3409 : t) ->
        fun ~items:(x3406 : float list) ->
          _Uint16Array_of_js
            (let x3410 = t_to_js x3409 in
             Ojs.call (Ojs.get_prop_ascii x3410 "of") "apply"
               [|x3410;((let x3407 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3408 : float) ->
                              ignore
                                (Ojs.call x3407 "push"
                                   [|(Ojs.float_to_js x3408)|])) x3406;
                         x3407))|])
    let (from : t -> array:float _Array -> _Uint16Array) =
      fun (x3413 : t) ->
        fun ~array:(x3411 : float _Array) ->
          _Uint16Array_of_js
            (Ojs.call (t_to_js x3413) "from"
               [|(_Array_to_js Ojs.float_to_js x3411)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Uint16Array)
      =
      fun (x3422 : t) ->
        fun ~array:(x3414 : 'T _Array) ->
          fun ~mapfn:(x3415 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3416 : any option) ->
              fun () ->
                _Uint16Array_of_js
                  (let x3423 = t_to_js x3422 in
                   Ojs.call (Ojs.get_prop_ascii x3423 "from") "apply"
                     [|x3423;((let x3417 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3417 "push"
                                    [|(_Array_to_js Obj.magic x3414)|]);
                               ignore
                                 (Ojs.call x3417 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3419 : Ojs.t) ->
                                            fun (x3420 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3415 ~v:(Obj.magic x3419)
                                                   ~k:(Ojs.float_of_js x3420))))|]);
                               (match x3416 with
                                | Some x3418 ->
                                    ignore
                                      (Ojs.call x3417 "push"
                                         [|(any_to_js x3418)|])
                                | None -> ());
                               x3417))|])
  end
let (uint16Array : _Uint16ArrayConstructor) =
  _Uint16ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Uint16Array")
module Int32Array =
  struct
    type t = _Int32Array
    let rec t_of_js : Ojs.t -> t =
      fun (x3425 : Ojs.t) -> _Int32Array_of_js x3425
    and t_to_js : t -> Ojs.t =
      fun (x3424 : _Int32Array) -> _Int32Array_to_js x3424
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3427 : Ojs.t) -> t_of_js x3427
    and t_0_to_js : t_0 -> Ojs.t = fun (x3426 : t) -> t_to_js x3426
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3428 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3428) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x3429 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x3429) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3430 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3430) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3431 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3431) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3437 : t) ->
        fun ~target:(x3432 : float) ->
          fun ~start:(x3433 : float) ->
            fun ?end_:(x3434 : float option) ->
              fun () ->
                t_of_js
                  (let x3438 = t_to_js x3437 in
                   Ojs.call (Ojs.get_prop_ascii x3438 "copyWithin") "apply"
                     [|x3438;((let x3435 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3435 "push"
                                    [|(Ojs.float_to_js x3432)|]);
                               ignore
                                 (Ojs.call x3435 "push"
                                    [|(Ojs.float_to_js x3433)|]);
                               (match x3434 with
                                | Some x3436 ->
                                    ignore
                                      (Ojs.call x3435 "push"
                                         [|(Ojs.float_to_js x3436)|])
                                | None -> ());
                               x3435))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3446 : t) ->
        fun
          ~predicate:(x3439 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3440 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3447 = t_to_js x3446 in
                 Ojs.call (Ojs.get_prop_ascii x3447 "every") "apply"
                   [|x3447;((let x3441 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3441 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3443 : Ojs.t) ->
                                          fun (x3444 : Ojs.t) ->
                                            fun (x3445 : Ojs.t) ->
                                              unknown_to_js
                                                (x3439
                                                   ~value:(Ojs.float_of_js
                                                             x3443)
                                                   ~index:(Ojs.float_of_js
                                                             x3444)
                                                   ~array:(t_of_js x3445))))|]);
                             (match x3440 with
                              | Some x3442 ->
                                  ignore
                                    (Ojs.call x3441 "push"
                                       [|(any_to_js x3442)|])
                              | None -> ());
                             x3441))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3454 : t) ->
        fun ~value:(x3448 : float) ->
          fun ?start:(x3449 : float option) ->
            fun ?end_:(x3450 : float option) ->
              fun () ->
                t_of_js
                  (let x3455 = t_to_js x3454 in
                   Ojs.call (Ojs.get_prop_ascii x3455 "fill") "apply"
                     [|x3455;((let x3451 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3451 "push"
                                    [|(Ojs.float_to_js x3448)|]);
                               (match x3449 with
                                | Some x3453 ->
                                    ignore
                                      (Ojs.call x3451 "push"
                                         [|(Ojs.float_to_js x3453)|])
                                | None -> ());
                               (match x3450 with
                                | Some x3452 ->
                                    ignore
                                      (Ojs.call x3451 "push"
                                         [|(Ojs.float_to_js x3452)|])
                                | None -> ());
                               x3451))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3463 : t) ->
        fun ~predicate:(x3456 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x3457 : any option) ->
            fun () ->
              t_of_js
                (let x3464 = t_to_js x3463 in
                 Ojs.call (Ojs.get_prop_ascii x3464 "filter") "apply"
                   [|x3464;((let x3458 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3458 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3460 : Ojs.t) ->
                                          fun (x3461 : Ojs.t) ->
                                            fun (x3462 : Ojs.t) ->
                                              any_to_js
                                                (x3456
                                                   ~value:(Ojs.float_of_js
                                                             x3460)
                                                   ~index:(Ojs.float_of_js
                                                             x3461)
                                                   ~array:(t_of_js x3462))))|]);
                             (match x3457 with
                              | Some x3459 ->
                                  ignore
                                    (Ojs.call x3458 "push"
                                       [|(any_to_js x3459)|])
                              | None -> ());
                             x3458))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3472 : t) ->
        fun ~predicate:(x3465 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3466 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3473 = t_to_js x3472 in
                 Ojs.call (Ojs.get_prop_ascii x3473 "find") "apply"
                   [|x3473;((let x3467 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3467 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3469 : Ojs.t) ->
                                          fun (x3470 : Ojs.t) ->
                                            fun (x3471 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3465
                                                   ~value:(Ojs.float_of_js
                                                             x3469)
                                                   ~index:(Ojs.float_of_js
                                                             x3470)
                                                   ~obj:(t_of_js x3471))))|]);
                             (match x3466 with
                              | Some x3468 ->
                                  ignore
                                    (Ojs.call x3467 "push"
                                       [|(any_to_js x3468)|])
                              | None -> ());
                             x3467))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3482 : t) ->
        fun ~predicate:(x3475 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3476 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3483 = t_to_js x3482 in
                 Ojs.call (Ojs.get_prop_ascii x3483 "findIndex") "apply"
                   [|x3483;((let x3477 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3477 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3479 : Ojs.t) ->
                                          fun (x3480 : Ojs.t) ->
                                            fun (x3481 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3475
                                                   ~value:(Ojs.float_of_js
                                                             x3479)
                                                   ~index:(Ojs.float_of_js
                                                             x3480)
                                                   ~obj:(t_of_js x3481))))|]);
                             (match x3476 with
                              | Some x3478 ->
                                  ignore
                                    (Ojs.call x3477 "push"
                                       [|(any_to_js x3478)|])
                              | None -> ());
                             x3477))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3491 : t) ->
        fun
          ~callbackfn:(x3484 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3485 : any option) ->
            fun () ->
              ignore
                (let x3492 = t_to_js x3491 in
                 Ojs.call (Ojs.get_prop_ascii x3492 "forEach") "apply"
                   [|x3492;((let x3486 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3486 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3488 : Ojs.t) ->
                                          fun (x3489 : Ojs.t) ->
                                            fun (x3490 : Ojs.t) ->
                                              x3484
                                                ~value:(Ojs.float_of_js x3488)
                                                ~index:(Ojs.float_of_js x3489)
                                                ~array:(t_of_js x3490)))|]);
                             (match x3485 with
                              | Some x3487 ->
                                  ignore
                                    (Ojs.call x3486 "push"
                                       [|(any_to_js x3487)|])
                              | None -> ());
                             x3486))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3497 : t) ->
        fun ~searchElement:(x3493 : float) ->
          fun ?fromIndex:(x3494 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3498 = t_to_js x3497 in
                 Ojs.call (Ojs.get_prop_ascii x3498 "indexOf") "apply"
                   [|x3498;((let x3495 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3495 "push"
                                  [|(Ojs.float_to_js x3493)|]);
                             (match x3494 with
                              | Some x3496 ->
                                  ignore
                                    (Ojs.call x3495 "push"
                                       [|(Ojs.float_to_js x3496)|])
                              | None -> ());
                             x3495))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3502 : t) ->
        fun ?separator:(x3499 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3503 = t_to_js x3502 in
               Ojs.call (Ojs.get_prop_ascii x3503 "join") "apply"
                 [|x3503;((let x3500 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3499 with
                            | Some x3501 ->
                                ignore
                                  (Ojs.call x3500 "push"
                                     [|(Ojs.string_to_js x3501)|])
                            | None -> ());
                           x3500))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3508 : t) ->
        fun ~searchElement:(x3504 : float) ->
          fun ?fromIndex:(x3505 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3509 = t_to_js x3508 in
                 Ojs.call (Ojs.get_prop_ascii x3509 "lastIndexOf") "apply"
                   [|x3509;((let x3506 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3506 "push"
                                  [|(Ojs.float_to_js x3504)|]);
                             (match x3505 with
                              | Some x3507 ->
                                  ignore
                                    (Ojs.call x3506 "push"
                                       [|(Ojs.float_to_js x3507)|])
                              | None -> ());
                             x3506))|])
    let (get_length : t -> float) =
      fun (x3510 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3510) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3518 : t) ->
        fun
          ~callbackfn:(x3511 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3512 : any option) ->
            fun () ->
              t_of_js
                (let x3519 = t_to_js x3518 in
                 Ojs.call (Ojs.get_prop_ascii x3519 "map") "apply"
                   [|x3519;((let x3513 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3513 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3515 : Ojs.t) ->
                                          fun (x3516 : Ojs.t) ->
                                            fun (x3517 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3511
                                                   ~value:(Ojs.float_of_js
                                                             x3515)
                                                   ~index:(Ojs.float_of_js
                                                             x3516)
                                                   ~array:(t_of_js x3517))))|]);
                             (match x3512 with
                              | Some x3514 ->
                                  ignore
                                    (Ojs.call x3513 "push"
                                       [|(any_to_js x3514)|])
                              | None -> ());
                             x3513))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3525 : t) ->
        fun
          ~callbackfn:(x3520 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3525) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3521 : Ojs.t) ->
                       fun (x3522 : Ojs.t) ->
                         fun (x3523 : Ojs.t) ->
                           fun (x3524 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3520 ~previousValue:(Ojs.float_of_js x3521)
                                  ~currentValue:(Ojs.float_of_js x3522)
                                  ~currentIndex:(Ojs.float_of_js x3523)
                                  ~array:(t_of_js x3524))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3532 : t) ->
        fun
          ~callbackfn:(x3526 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3531 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3532) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3527 : Ojs.t) ->
                         fun (x3528 : Ojs.t) ->
                           fun (x3529 : Ojs.t) ->
                             fun (x3530 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3526
                                    ~previousValue:(Ojs.float_of_js x3527)
                                    ~currentValue:(Ojs.float_of_js x3528)
                                    ~currentIndex:(Ojs.float_of_js x3529)
                                    ~array:(t_of_js x3530))));(Ojs.float_to_js
                                                                 x3531)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3539 : t) ->
        fun
          ~callbackfn:(x3533 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3538 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3539) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3534 : Ojs.t) ->
                         fun (x3535 : Ojs.t) ->
                           fun (x3536 : Ojs.t) ->
                             fun (x3537 : Ojs.t) ->
                               Obj.magic
                                 (x3533 ~previousValue:(Obj.magic x3534)
                                    ~currentValue:(Ojs.float_of_js x3535)
                                    ~currentIndex:(Ojs.float_of_js x3536)
                                    ~array:(t_of_js x3537))));(Obj.magic
                                                                 x3538)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3545 : t) ->
        fun
          ~callbackfn:(x3540 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3545) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3541 : Ojs.t) ->
                       fun (x3542 : Ojs.t) ->
                         fun (x3543 : Ojs.t) ->
                           fun (x3544 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3540 ~previousValue:(Ojs.float_of_js x3541)
                                  ~currentValue:(Ojs.float_of_js x3542)
                                  ~currentIndex:(Ojs.float_of_js x3543)
                                  ~array:(t_of_js x3544))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3552 : t) ->
        fun
          ~callbackfn:(x3546 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3551 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3552) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3547 : Ojs.t) ->
                         fun (x3548 : Ojs.t) ->
                           fun (x3549 : Ojs.t) ->
                             fun (x3550 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3546
                                    ~previousValue:(Ojs.float_of_js x3547)
                                    ~currentValue:(Ojs.float_of_js x3548)
                                    ~currentIndex:(Ojs.float_of_js x3549)
                                    ~array:(t_of_js x3550))));(Ojs.float_to_js
                                                                 x3551)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3559 : t) ->
        fun
          ~callbackfn:(x3553 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3558 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3559) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3554 : Ojs.t) ->
                         fun (x3555 : Ojs.t) ->
                           fun (x3556 : Ojs.t) ->
                             fun (x3557 : Ojs.t) ->
                               Obj.magic
                                 (x3553 ~previousValue:(Obj.magic x3554)
                                    ~currentValue:(Ojs.float_of_js x3555)
                                    ~currentIndex:(Ojs.float_of_js x3556)
                                    ~array:(t_of_js x3557))));(Obj.magic
                                                                 x3558)|])
    let (reverse : t -> t) =
      fun (x3560 : t) -> t_of_js (Ojs.call (t_to_js x3560) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x3566 : t) ->
        fun ~array:(x3561 : float _Array) ->
          fun ?offset:(x3562 : float option) ->
            fun () ->
              ignore
                (let x3567 = t_to_js x3566 in
                 Ojs.call (Ojs.get_prop_ascii x3567 "set") "apply"
                   [|x3567;((let x3563 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3563 "push"
                                  [|(_Array_to_js Ojs.float_to_js x3561)|]);
                             (match x3562 with
                              | Some x3564 ->
                                  ignore
                                    (Ojs.call x3563 "push"
                                       [|(Ojs.float_to_js x3564)|])
                              | None -> ());
                             x3563))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3573 : t) ->
        fun ?start:(x3568 : float option) ->
          fun ?end_:(x3569 : float option) ->
            fun () ->
              t_of_js
                (let x3574 = t_to_js x3573 in
                 Ojs.call (Ojs.get_prop_ascii x3574 "slice") "apply"
                   [|x3574;((let x3570 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3568 with
                              | Some x3572 ->
                                  ignore
                                    (Ojs.call x3570 "push"
                                       [|(Ojs.float_to_js x3572)|])
                              | None -> ());
                             (match x3569 with
                              | Some x3571 ->
                                  ignore
                                    (Ojs.call x3570 "push"
                                       [|(Ojs.float_to_js x3571)|])
                              | None -> ());
                             x3570))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3582 : t) ->
        fun
          ~predicate:(x3575 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3576 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3583 = t_to_js x3582 in
                 Ojs.call (Ojs.get_prop_ascii x3583 "some") "apply"
                   [|x3583;((let x3577 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3577 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3579 : Ojs.t) ->
                                          fun (x3580 : Ojs.t) ->
                                            fun (x3581 : Ojs.t) ->
                                              unknown_to_js
                                                (x3575
                                                   ~value:(Ojs.float_of_js
                                                             x3579)
                                                   ~index:(Ojs.float_of_js
                                                             x3580)
                                                   ~array:(t_of_js x3581))))|]);
                             (match x3576 with
                              | Some x3578 ->
                                  ignore
                                    (Ojs.call x3577 "push"
                                       [|(any_to_js x3578)|])
                              | None -> ());
                             x3577))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3589 : t) ->
        fun ?compareFn:(x3584 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3590 = t_to_js x3589 in
               Ojs.call (Ojs.get_prop_ascii x3590 "sort") "apply"
                 [|x3590;((let x3585 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3584 with
                            | Some x3586 ->
                                ignore
                                  (Ojs.call x3585 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3587 : Ojs.t) ->
                                             fun (x3588 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3586
                                                    ~a:(Ojs.float_of_js x3587)
                                                    ~b:(Ojs.float_of_js x3588))))|])
                            | None -> ());
                           x3585))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3596 : t) ->
        fun ?begin_:(x3591 : float option) ->
          fun ?end_:(x3592 : float option) ->
            fun () ->
              t_of_js
                (let x3597 = t_to_js x3596 in
                 Ojs.call (Ojs.get_prop_ascii x3597 "subarray") "apply"
                   [|x3597;((let x3593 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3591 with
                              | Some x3595 ->
                                  ignore
                                    (Ojs.call x3593 "push"
                                       [|(Ojs.float_to_js x3595)|])
                              | None -> ());
                             (match x3592 with
                              | Some x3594 ->
                                  ignore
                                    (Ojs.call x3593 "push"
                                       [|(Ojs.float_to_js x3594)|])
                              | None -> ());
                             x3593))|])
    let (toLocaleString : t -> string) =
      fun (x3598 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3598) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3599 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3599) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3600 : t) -> t_of_js (Ojs.call (t_to_js x3600) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3601 : t) ->
        fun (x3602 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3601) (Ojs.float_to_js x3602))
    let (set : t -> float -> float -> unit) =
      fun (x3603 : t) ->
        fun (x3604 : float) ->
          fun (x3605 : float) ->
            Ojs.set_prop (t_to_js x3603) (Ojs.float_to_js x3604)
              (Ojs.float_to_js x3605)
    let (create : length:float -> _Int32Array) =
      fun ~length:(x3606 : float) ->
        _Int32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x3606)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Int32Array)
      =
      fun ~array:(x3607 : (_ArrayBuffer, float _Array) union2) ->
        _Int32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x3609 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x3609) x3607)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Int32Array)
      =
      fun ~buffer:(x3611 : _ArrayBuffer) ->
        fun ?byteOffset:(x3612 : float option) ->
          fun ?length:(x3613 : float option) ->
            fun () ->
              _Int32Array_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x3614 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3614 "push" [|(_ArrayBuffer_to_js x3611)|]);
                    (match x3612 with
                     | Some x3616 ->
                         ignore
                           (Ojs.call x3614 "push" [|(Ojs.float_to_js x3616)|])
                     | None -> ());
                    (match x3613 with
                     | Some x3615 ->
                         ignore
                           (Ojs.call x3614 "push" [|(Ojs.float_to_js x3615)|])
                     | None -> ());
                    x3614))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Int32Array) =
      fun ~items:(x3617 : float list) ->
        _Int32Array_of_js
          (let x3620 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x3620 "of") "apply"
             [|x3620;((let x3618 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3619 : float) ->
                            ignore
                              (Ojs.call x3618 "push"
                                 [|(Ojs.float_to_js x3619)|])) x3617;
                       x3618))|])
    let (from : array:float _Array -> _Int32Array) =
      fun ~array:(x3621 : float _Array) ->
        _Int32Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(_Array_to_js Ojs.float_to_js x3621)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Int32Array)
      =
      fun ~array:(x3623 : 'T _Array) ->
        fun ~mapfn:(x3624 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3625 : any option) ->
            fun () ->
              _Int32Array_of_js
                (let x3631 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x3631 "from") "apply"
                   [|x3631;((let x3626 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3626 "push"
                                  [|(_Array_to_js Obj.magic x3623)|]);
                             ignore
                               (Ojs.call x3626 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3628 : Ojs.t) ->
                                          fun (x3629 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3624 ~v:(Obj.magic x3628)
                                                 ~k:(Ojs.float_of_js x3629))))|]);
                             (match x3625 with
                              | Some x3627 ->
                                  ignore
                                    (Ojs.call x3626 "push"
                                       [|(any_to_js x3627)|])
                              | None -> ());
                             x3626))|])
  end
module Int32ArrayConstructor =
  struct
    type t = _Int32ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x3633 : Ojs.t) -> _Int32ArrayConstructor_of_js x3633
    and t_to_js : t -> Ojs.t =
      fun (x3632 : _Int32ArrayConstructor) ->
        _Int32ArrayConstructor_to_js x3632
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3635 : Ojs.t) -> t_of_js x3635
    and t_0_to_js : t_0 -> Ojs.t = fun (x3634 : t) -> t_to_js x3634
    let (get_prototype : t -> _Int32Array) =
      fun (x3636 : t) ->
        _Int32Array_of_js (Ojs.get_prop_ascii (t_to_js x3636) "prototype")
    let (create : t -> length:float -> _Int32Array) =
      fun (x3638 : t) ->
        fun ~length:(x3637 : float) ->
          _Int32Array_of_js
            (Ojs.new_obj (t_to_js x3638) [|(Ojs.float_to_js x3637)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Int32Array) =
      fun (x3643 : t) ->
        fun ~array:(x3639 : (_ArrayBuffer, float _Array) union2) ->
          _Int32Array_of_js
            (Ojs.new_obj (t_to_js x3643)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x3641 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x3641) x3639)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Int32Array)
      =
      fun (x3650 : t) ->
        fun ~buffer:(x3644 : _ArrayBuffer) ->
          fun ?byteOffset:(x3645 : float option) ->
            fun ?length:(x3646 : float option) ->
              fun () ->
                _Int32Array_of_js
                  (Ojs.new_obj_arr (t_to_js x3650)
                     (let x3647 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3647 "push" [|(_ArrayBuffer_to_js x3644)|]);
                      (match x3645 with
                       | Some x3649 ->
                           ignore
                             (Ojs.call x3647 "push"
                                [|(Ojs.float_to_js x3649)|])
                       | None -> ());
                      (match x3646 with
                       | Some x3648 ->
                           ignore
                             (Ojs.call x3647 "push"
                                [|(Ojs.float_to_js x3648)|])
                       | None -> ());
                      x3647))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3651 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3651) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Int32Array) =
      fun (x3655 : t) ->
        fun ~items:(x3652 : float list) ->
          _Int32Array_of_js
            (let x3656 = t_to_js x3655 in
             Ojs.call (Ojs.get_prop_ascii x3656 "of") "apply"
               [|x3656;((let x3653 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3654 : float) ->
                              ignore
                                (Ojs.call x3653 "push"
                                   [|(Ojs.float_to_js x3654)|])) x3652;
                         x3653))|])
    let (from : t -> array:float _Array -> _Int32Array) =
      fun (x3659 : t) ->
        fun ~array:(x3657 : float _Array) ->
          _Int32Array_of_js
            (Ojs.call (t_to_js x3659) "from"
               [|(_Array_to_js Ojs.float_to_js x3657)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Int32Array)
      =
      fun (x3668 : t) ->
        fun ~array:(x3660 : 'T _Array) ->
          fun ~mapfn:(x3661 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3662 : any option) ->
              fun () ->
                _Int32Array_of_js
                  (let x3669 = t_to_js x3668 in
                   Ojs.call (Ojs.get_prop_ascii x3669 "from") "apply"
                     [|x3669;((let x3663 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3663 "push"
                                    [|(_Array_to_js Obj.magic x3660)|]);
                               ignore
                                 (Ojs.call x3663 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3665 : Ojs.t) ->
                                            fun (x3666 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3661 ~v:(Obj.magic x3665)
                                                   ~k:(Ojs.float_of_js x3666))))|]);
                               (match x3662 with
                                | Some x3664 ->
                                    ignore
                                      (Ojs.call x3663 "push"
                                         [|(any_to_js x3664)|])
                                | None -> ());
                               x3663))|])
  end
let (int32Array : _Int32ArrayConstructor) =
  _Int32ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Int32Array")
module Uint32Array =
  struct
    type t = _Uint32Array
    let rec t_of_js : Ojs.t -> t =
      fun (x3671 : Ojs.t) -> _Uint32Array_of_js x3671
    and t_to_js : t -> Ojs.t =
      fun (x3670 : _Uint32Array) -> _Uint32Array_to_js x3670
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3673 : Ojs.t) -> t_of_js x3673
    and t_0_to_js : t_0 -> Ojs.t = fun (x3672 : t) -> t_to_js x3672
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3674 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3674) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x3675 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x3675) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3676 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3676) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3677 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3677) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3683 : t) ->
        fun ~target:(x3678 : float) ->
          fun ~start:(x3679 : float) ->
            fun ?end_:(x3680 : float option) ->
              fun () ->
                t_of_js
                  (let x3684 = t_to_js x3683 in
                   Ojs.call (Ojs.get_prop_ascii x3684 "copyWithin") "apply"
                     [|x3684;((let x3681 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3681 "push"
                                    [|(Ojs.float_to_js x3678)|]);
                               ignore
                                 (Ojs.call x3681 "push"
                                    [|(Ojs.float_to_js x3679)|]);
                               (match x3680 with
                                | Some x3682 ->
                                    ignore
                                      (Ojs.call x3681 "push"
                                         [|(Ojs.float_to_js x3682)|])
                                | None -> ());
                               x3681))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3692 : t) ->
        fun
          ~predicate:(x3685 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3686 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3693 = t_to_js x3692 in
                 Ojs.call (Ojs.get_prop_ascii x3693 "every") "apply"
                   [|x3693;((let x3687 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3687 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3689 : Ojs.t) ->
                                          fun (x3690 : Ojs.t) ->
                                            fun (x3691 : Ojs.t) ->
                                              unknown_to_js
                                                (x3685
                                                   ~value:(Ojs.float_of_js
                                                             x3689)
                                                   ~index:(Ojs.float_of_js
                                                             x3690)
                                                   ~array:(t_of_js x3691))))|]);
                             (match x3686 with
                              | Some x3688 ->
                                  ignore
                                    (Ojs.call x3687 "push"
                                       [|(any_to_js x3688)|])
                              | None -> ());
                             x3687))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3700 : t) ->
        fun ~value:(x3694 : float) ->
          fun ?start:(x3695 : float option) ->
            fun ?end_:(x3696 : float option) ->
              fun () ->
                t_of_js
                  (let x3701 = t_to_js x3700 in
                   Ojs.call (Ojs.get_prop_ascii x3701 "fill") "apply"
                     [|x3701;((let x3697 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3697 "push"
                                    [|(Ojs.float_to_js x3694)|]);
                               (match x3695 with
                                | Some x3699 ->
                                    ignore
                                      (Ojs.call x3697 "push"
                                         [|(Ojs.float_to_js x3699)|])
                                | None -> ());
                               (match x3696 with
                                | Some x3698 ->
                                    ignore
                                      (Ojs.call x3697 "push"
                                         [|(Ojs.float_to_js x3698)|])
                                | None -> ());
                               x3697))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3709 : t) ->
        fun ~predicate:(x3702 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x3703 : any option) ->
            fun () ->
              t_of_js
                (let x3710 = t_to_js x3709 in
                 Ojs.call (Ojs.get_prop_ascii x3710 "filter") "apply"
                   [|x3710;((let x3704 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3704 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3706 : Ojs.t) ->
                                          fun (x3707 : Ojs.t) ->
                                            fun (x3708 : Ojs.t) ->
                                              any_to_js
                                                (x3702
                                                   ~value:(Ojs.float_of_js
                                                             x3706)
                                                   ~index:(Ojs.float_of_js
                                                             x3707)
                                                   ~array:(t_of_js x3708))))|]);
                             (match x3703 with
                              | Some x3705 ->
                                  ignore
                                    (Ojs.call x3704 "push"
                                       [|(any_to_js x3705)|])
                              | None -> ());
                             x3704))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3718 : t) ->
        fun ~predicate:(x3711 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3712 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3719 = t_to_js x3718 in
                 Ojs.call (Ojs.get_prop_ascii x3719 "find") "apply"
                   [|x3719;((let x3713 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3713 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3715 : Ojs.t) ->
                                          fun (x3716 : Ojs.t) ->
                                            fun (x3717 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3711
                                                   ~value:(Ojs.float_of_js
                                                             x3715)
                                                   ~index:(Ojs.float_of_js
                                                             x3716)
                                                   ~obj:(t_of_js x3717))))|]);
                             (match x3712 with
                              | Some x3714 ->
                                  ignore
                                    (Ojs.call x3713 "push"
                                       [|(any_to_js x3714)|])
                              | None -> ());
                             x3713))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3728 : t) ->
        fun ~predicate:(x3721 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3722 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3729 = t_to_js x3728 in
                 Ojs.call (Ojs.get_prop_ascii x3729 "findIndex") "apply"
                   [|x3729;((let x3723 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3723 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3725 : Ojs.t) ->
                                          fun (x3726 : Ojs.t) ->
                                            fun (x3727 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3721
                                                   ~value:(Ojs.float_of_js
                                                             x3725)
                                                   ~index:(Ojs.float_of_js
                                                             x3726)
                                                   ~obj:(t_of_js x3727))))|]);
                             (match x3722 with
                              | Some x3724 ->
                                  ignore
                                    (Ojs.call x3723 "push"
                                       [|(any_to_js x3724)|])
                              | None -> ());
                             x3723))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3737 : t) ->
        fun
          ~callbackfn:(x3730 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3731 : any option) ->
            fun () ->
              ignore
                (let x3738 = t_to_js x3737 in
                 Ojs.call (Ojs.get_prop_ascii x3738 "forEach") "apply"
                   [|x3738;((let x3732 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3732 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3734 : Ojs.t) ->
                                          fun (x3735 : Ojs.t) ->
                                            fun (x3736 : Ojs.t) ->
                                              x3730
                                                ~value:(Ojs.float_of_js x3734)
                                                ~index:(Ojs.float_of_js x3735)
                                                ~array:(t_of_js x3736)))|]);
                             (match x3731 with
                              | Some x3733 ->
                                  ignore
                                    (Ojs.call x3732 "push"
                                       [|(any_to_js x3733)|])
                              | None -> ());
                             x3732))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3743 : t) ->
        fun ~searchElement:(x3739 : float) ->
          fun ?fromIndex:(x3740 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3744 = t_to_js x3743 in
                 Ojs.call (Ojs.get_prop_ascii x3744 "indexOf") "apply"
                   [|x3744;((let x3741 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3741 "push"
                                  [|(Ojs.float_to_js x3739)|]);
                             (match x3740 with
                              | Some x3742 ->
                                  ignore
                                    (Ojs.call x3741 "push"
                                       [|(Ojs.float_to_js x3742)|])
                              | None -> ());
                             x3741))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3748 : t) ->
        fun ?separator:(x3745 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3749 = t_to_js x3748 in
               Ojs.call (Ojs.get_prop_ascii x3749 "join") "apply"
                 [|x3749;((let x3746 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3745 with
                            | Some x3747 ->
                                ignore
                                  (Ojs.call x3746 "push"
                                     [|(Ojs.string_to_js x3747)|])
                            | None -> ());
                           x3746))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3754 : t) ->
        fun ~searchElement:(x3750 : float) ->
          fun ?fromIndex:(x3751 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3755 = t_to_js x3754 in
                 Ojs.call (Ojs.get_prop_ascii x3755 "lastIndexOf") "apply"
                   [|x3755;((let x3752 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3752 "push"
                                  [|(Ojs.float_to_js x3750)|]);
                             (match x3751 with
                              | Some x3753 ->
                                  ignore
                                    (Ojs.call x3752 "push"
                                       [|(Ojs.float_to_js x3753)|])
                              | None -> ());
                             x3752))|])
    let (get_length : t -> float) =
      fun (x3756 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3756) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3764 : t) ->
        fun
          ~callbackfn:(x3757 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3758 : any option) ->
            fun () ->
              t_of_js
                (let x3765 = t_to_js x3764 in
                 Ojs.call (Ojs.get_prop_ascii x3765 "map") "apply"
                   [|x3765;((let x3759 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3759 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3761 : Ojs.t) ->
                                          fun (x3762 : Ojs.t) ->
                                            fun (x3763 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3757
                                                   ~value:(Ojs.float_of_js
                                                             x3761)
                                                   ~index:(Ojs.float_of_js
                                                             x3762)
                                                   ~array:(t_of_js x3763))))|]);
                             (match x3758 with
                              | Some x3760 ->
                                  ignore
                                    (Ojs.call x3759 "push"
                                       [|(any_to_js x3760)|])
                              | None -> ());
                             x3759))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3771 : t) ->
        fun
          ~callbackfn:(x3766 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3771) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3767 : Ojs.t) ->
                       fun (x3768 : Ojs.t) ->
                         fun (x3769 : Ojs.t) ->
                           fun (x3770 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3766 ~previousValue:(Ojs.float_of_js x3767)
                                  ~currentValue:(Ojs.float_of_js x3768)
                                  ~currentIndex:(Ojs.float_of_js x3769)
                                  ~array:(t_of_js x3770))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3778 : t) ->
        fun
          ~callbackfn:(x3772 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3777 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3778) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3773 : Ojs.t) ->
                         fun (x3774 : Ojs.t) ->
                           fun (x3775 : Ojs.t) ->
                             fun (x3776 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3772
                                    ~previousValue:(Ojs.float_of_js x3773)
                                    ~currentValue:(Ojs.float_of_js x3774)
                                    ~currentIndex:(Ojs.float_of_js x3775)
                                    ~array:(t_of_js x3776))));(Ojs.float_to_js
                                                                 x3777)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3785 : t) ->
        fun
          ~callbackfn:(x3779 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3784 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3785) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3780 : Ojs.t) ->
                         fun (x3781 : Ojs.t) ->
                           fun (x3782 : Ojs.t) ->
                             fun (x3783 : Ojs.t) ->
                               Obj.magic
                                 (x3779 ~previousValue:(Obj.magic x3780)
                                    ~currentValue:(Ojs.float_of_js x3781)
                                    ~currentIndex:(Ojs.float_of_js x3782)
                                    ~array:(t_of_js x3783))));(Obj.magic
                                                                 x3784)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3791 : t) ->
        fun
          ~callbackfn:(x3786 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3791) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3787 : Ojs.t) ->
                       fun (x3788 : Ojs.t) ->
                         fun (x3789 : Ojs.t) ->
                           fun (x3790 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3786 ~previousValue:(Ojs.float_of_js x3787)
                                  ~currentValue:(Ojs.float_of_js x3788)
                                  ~currentIndex:(Ojs.float_of_js x3789)
                                  ~array:(t_of_js x3790))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3798 : t) ->
        fun
          ~callbackfn:(x3792 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3797 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3798) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3793 : Ojs.t) ->
                         fun (x3794 : Ojs.t) ->
                           fun (x3795 : Ojs.t) ->
                             fun (x3796 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3792
                                    ~previousValue:(Ojs.float_of_js x3793)
                                    ~currentValue:(Ojs.float_of_js x3794)
                                    ~currentIndex:(Ojs.float_of_js x3795)
                                    ~array:(t_of_js x3796))));(Ojs.float_to_js
                                                                 x3797)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3805 : t) ->
        fun
          ~callbackfn:(x3799 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3804 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3805) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3800 : Ojs.t) ->
                         fun (x3801 : Ojs.t) ->
                           fun (x3802 : Ojs.t) ->
                             fun (x3803 : Ojs.t) ->
                               Obj.magic
                                 (x3799 ~previousValue:(Obj.magic x3800)
                                    ~currentValue:(Ojs.float_of_js x3801)
                                    ~currentIndex:(Ojs.float_of_js x3802)
                                    ~array:(t_of_js x3803))));(Obj.magic
                                                                 x3804)|])
    let (reverse : t -> t) =
      fun (x3806 : t) -> t_of_js (Ojs.call (t_to_js x3806) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x3812 : t) ->
        fun ~array:(x3807 : float _Array) ->
          fun ?offset:(x3808 : float option) ->
            fun () ->
              ignore
                (let x3813 = t_to_js x3812 in
                 Ojs.call (Ojs.get_prop_ascii x3813 "set") "apply"
                   [|x3813;((let x3809 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3809 "push"
                                  [|(_Array_to_js Ojs.float_to_js x3807)|]);
                             (match x3808 with
                              | Some x3810 ->
                                  ignore
                                    (Ojs.call x3809 "push"
                                       [|(Ojs.float_to_js x3810)|])
                              | None -> ());
                             x3809))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3819 : t) ->
        fun ?start:(x3814 : float option) ->
          fun ?end_:(x3815 : float option) ->
            fun () ->
              t_of_js
                (let x3820 = t_to_js x3819 in
                 Ojs.call (Ojs.get_prop_ascii x3820 "slice") "apply"
                   [|x3820;((let x3816 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3814 with
                              | Some x3818 ->
                                  ignore
                                    (Ojs.call x3816 "push"
                                       [|(Ojs.float_to_js x3818)|])
                              | None -> ());
                             (match x3815 with
                              | Some x3817 ->
                                  ignore
                                    (Ojs.call x3816 "push"
                                       [|(Ojs.float_to_js x3817)|])
                              | None -> ());
                             x3816))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3828 : t) ->
        fun
          ~predicate:(x3821 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3822 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3829 = t_to_js x3828 in
                 Ojs.call (Ojs.get_prop_ascii x3829 "some") "apply"
                   [|x3829;((let x3823 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3823 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3825 : Ojs.t) ->
                                          fun (x3826 : Ojs.t) ->
                                            fun (x3827 : Ojs.t) ->
                                              unknown_to_js
                                                (x3821
                                                   ~value:(Ojs.float_of_js
                                                             x3825)
                                                   ~index:(Ojs.float_of_js
                                                             x3826)
                                                   ~array:(t_of_js x3827))))|]);
                             (match x3822 with
                              | Some x3824 ->
                                  ignore
                                    (Ojs.call x3823 "push"
                                       [|(any_to_js x3824)|])
                              | None -> ());
                             x3823))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3835 : t) ->
        fun ?compareFn:(x3830 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3836 = t_to_js x3835 in
               Ojs.call (Ojs.get_prop_ascii x3836 "sort") "apply"
                 [|x3836;((let x3831 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3830 with
                            | Some x3832 ->
                                ignore
                                  (Ojs.call x3831 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3833 : Ojs.t) ->
                                             fun (x3834 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3832
                                                    ~a:(Ojs.float_of_js x3833)
                                                    ~b:(Ojs.float_of_js x3834))))|])
                            | None -> ());
                           x3831))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3842 : t) ->
        fun ?begin_:(x3837 : float option) ->
          fun ?end_:(x3838 : float option) ->
            fun () ->
              t_of_js
                (let x3843 = t_to_js x3842 in
                 Ojs.call (Ojs.get_prop_ascii x3843 "subarray") "apply"
                   [|x3843;((let x3839 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3837 with
                              | Some x3841 ->
                                  ignore
                                    (Ojs.call x3839 "push"
                                       [|(Ojs.float_to_js x3841)|])
                              | None -> ());
                             (match x3838 with
                              | Some x3840 ->
                                  ignore
                                    (Ojs.call x3839 "push"
                                       [|(Ojs.float_to_js x3840)|])
                              | None -> ());
                             x3839))|])
    let (toLocaleString : t -> string) =
      fun (x3844 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3844) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3845 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3845) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3846 : t) -> t_of_js (Ojs.call (t_to_js x3846) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3847 : t) ->
        fun (x3848 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3847) (Ojs.float_to_js x3848))
    let (set : t -> float -> float -> unit) =
      fun (x3849 : t) ->
        fun (x3850 : float) ->
          fun (x3851 : float) ->
            Ojs.set_prop (t_to_js x3849) (Ojs.float_to_js x3850)
              (Ojs.float_to_js x3851)
    let (create : length:float -> _Uint32Array) =
      fun ~length:(x3852 : float) ->
        _Uint32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x3852)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Uint32Array)
      =
      fun ~array:(x3853 : (_ArrayBuffer, float _Array) union2) ->
        _Uint32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x3855 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x3855) x3853)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Uint32Array)
      =
      fun ~buffer:(x3857 : _ArrayBuffer) ->
        fun ?byteOffset:(x3858 : float option) ->
          fun ?length:(x3859 : float option) ->
            fun () ->
              _Uint32Array_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x3860 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3860 "push" [|(_ArrayBuffer_to_js x3857)|]);
                    (match x3858 with
                     | Some x3862 ->
                         ignore
                           (Ojs.call x3860 "push" [|(Ojs.float_to_js x3862)|])
                     | None -> ());
                    (match x3859 with
                     | Some x3861 ->
                         ignore
                           (Ojs.call x3860 "push" [|(Ojs.float_to_js x3861)|])
                     | None -> ());
                    x3860))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Uint32Array) =
      fun ~items:(x3863 : float list) ->
        _Uint32Array_of_js
          (let x3866 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x3866 "of") "apply"
             [|x3866;((let x3864 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3865 : float) ->
                            ignore
                              (Ojs.call x3864 "push"
                                 [|(Ojs.float_to_js x3865)|])) x3863;
                       x3864))|])
    let (from : array:float _Array -> _Uint32Array) =
      fun ~array:(x3867 : float _Array) ->
        _Uint32Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(_Array_to_js Ojs.float_to_js x3867)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Uint32Array)
      =
      fun ~array:(x3869 : 'T _Array) ->
        fun ~mapfn:(x3870 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3871 : any option) ->
            fun () ->
              _Uint32Array_of_js
                (let x3877 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x3877 "from") "apply"
                   [|x3877;((let x3872 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3872 "push"
                                  [|(_Array_to_js Obj.magic x3869)|]);
                             ignore
                               (Ojs.call x3872 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3874 : Ojs.t) ->
                                          fun (x3875 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3870 ~v:(Obj.magic x3874)
                                                 ~k:(Ojs.float_of_js x3875))))|]);
                             (match x3871 with
                              | Some x3873 ->
                                  ignore
                                    (Ojs.call x3872 "push"
                                       [|(any_to_js x3873)|])
                              | None -> ());
                             x3872))|])
  end
module Uint32ArrayConstructor =
  struct
    type t = _Uint32ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x3879 : Ojs.t) -> _Uint32ArrayConstructor_of_js x3879
    and t_to_js : t -> Ojs.t =
      fun (x3878 : _Uint32ArrayConstructor) ->
        _Uint32ArrayConstructor_to_js x3878
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3881 : Ojs.t) -> t_of_js x3881
    and t_0_to_js : t_0 -> Ojs.t = fun (x3880 : t) -> t_to_js x3880
    let (get_prototype : t -> _Uint32Array) =
      fun (x3882 : t) ->
        _Uint32Array_of_js (Ojs.get_prop_ascii (t_to_js x3882) "prototype")
    let (create : t -> length:float -> _Uint32Array) =
      fun (x3884 : t) ->
        fun ~length:(x3883 : float) ->
          _Uint32Array_of_js
            (Ojs.new_obj (t_to_js x3884) [|(Ojs.float_to_js x3883)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Uint32Array) =
      fun (x3889 : t) ->
        fun ~array:(x3885 : (_ArrayBuffer, float _Array) union2) ->
          _Uint32Array_of_js
            (Ojs.new_obj (t_to_js x3889)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x3887 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x3887) x3885)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Uint32Array)
      =
      fun (x3896 : t) ->
        fun ~buffer:(x3890 : _ArrayBuffer) ->
          fun ?byteOffset:(x3891 : float option) ->
            fun ?length:(x3892 : float option) ->
              fun () ->
                _Uint32Array_of_js
                  (Ojs.new_obj_arr (t_to_js x3896)
                     (let x3893 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3893 "push" [|(_ArrayBuffer_to_js x3890)|]);
                      (match x3891 with
                       | Some x3895 ->
                           ignore
                             (Ojs.call x3893 "push"
                                [|(Ojs.float_to_js x3895)|])
                       | None -> ());
                      (match x3892 with
                       | Some x3894 ->
                           ignore
                             (Ojs.call x3893 "push"
                                [|(Ojs.float_to_js x3894)|])
                       | None -> ());
                      x3893))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3897 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3897) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Uint32Array) =
      fun (x3901 : t) ->
        fun ~items:(x3898 : float list) ->
          _Uint32Array_of_js
            (let x3902 = t_to_js x3901 in
             Ojs.call (Ojs.get_prop_ascii x3902 "of") "apply"
               [|x3902;((let x3899 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3900 : float) ->
                              ignore
                                (Ojs.call x3899 "push"
                                   [|(Ojs.float_to_js x3900)|])) x3898;
                         x3899))|])
    let (from : t -> array:float _Array -> _Uint32Array) =
      fun (x3905 : t) ->
        fun ~array:(x3903 : float _Array) ->
          _Uint32Array_of_js
            (Ojs.call (t_to_js x3905) "from"
               [|(_Array_to_js Ojs.float_to_js x3903)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Uint32Array)
      =
      fun (x3914 : t) ->
        fun ~array:(x3906 : 'T _Array) ->
          fun ~mapfn:(x3907 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3908 : any option) ->
              fun () ->
                _Uint32Array_of_js
                  (let x3915 = t_to_js x3914 in
                   Ojs.call (Ojs.get_prop_ascii x3915 "from") "apply"
                     [|x3915;((let x3909 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3909 "push"
                                    [|(_Array_to_js Obj.magic x3906)|]);
                               ignore
                                 (Ojs.call x3909 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3911 : Ojs.t) ->
                                            fun (x3912 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3907 ~v:(Obj.magic x3911)
                                                   ~k:(Ojs.float_of_js x3912))))|]);
                               (match x3908 with
                                | Some x3910 ->
                                    ignore
                                      (Ojs.call x3909 "push"
                                         [|(any_to_js x3910)|])
                                | None -> ());
                               x3909))|])
  end
let (uint32Array : _Uint32ArrayConstructor) =
  _Uint32ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Uint32Array")
module Float32Array =
  struct
    type t = _Float32Array
    let rec t_of_js : Ojs.t -> t =
      fun (x3917 : Ojs.t) -> _Float32Array_of_js x3917
    and t_to_js : t -> Ojs.t =
      fun (x3916 : _Float32Array) -> _Float32Array_to_js x3916
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3919 : Ojs.t) -> t_of_js x3919
    and t_0_to_js : t_0 -> Ojs.t = fun (x3918 : t) -> t_to_js x3918
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3920 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3920) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x3921 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x3921) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3922 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3922) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3923 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3923) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3929 : t) ->
        fun ~target:(x3924 : float) ->
          fun ~start:(x3925 : float) ->
            fun ?end_:(x3926 : float option) ->
              fun () ->
                t_of_js
                  (let x3930 = t_to_js x3929 in
                   Ojs.call (Ojs.get_prop_ascii x3930 "copyWithin") "apply"
                     [|x3930;((let x3927 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3927 "push"
                                    [|(Ojs.float_to_js x3924)|]);
                               ignore
                                 (Ojs.call x3927 "push"
                                    [|(Ojs.float_to_js x3925)|]);
                               (match x3926 with
                                | Some x3928 ->
                                    ignore
                                      (Ojs.call x3927 "push"
                                         [|(Ojs.float_to_js x3928)|])
                                | None -> ());
                               x3927))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3938 : t) ->
        fun
          ~predicate:(x3931 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3932 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3939 = t_to_js x3938 in
                 Ojs.call (Ojs.get_prop_ascii x3939 "every") "apply"
                   [|x3939;((let x3933 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3933 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3935 : Ojs.t) ->
                                          fun (x3936 : Ojs.t) ->
                                            fun (x3937 : Ojs.t) ->
                                              unknown_to_js
                                                (x3931
                                                   ~value:(Ojs.float_of_js
                                                             x3935)
                                                   ~index:(Ojs.float_of_js
                                                             x3936)
                                                   ~array:(t_of_js x3937))))|]);
                             (match x3932 with
                              | Some x3934 ->
                                  ignore
                                    (Ojs.call x3933 "push"
                                       [|(any_to_js x3934)|])
                              | None -> ());
                             x3933))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3946 : t) ->
        fun ~value:(x3940 : float) ->
          fun ?start:(x3941 : float option) ->
            fun ?end_:(x3942 : float option) ->
              fun () ->
                t_of_js
                  (let x3947 = t_to_js x3946 in
                   Ojs.call (Ojs.get_prop_ascii x3947 "fill") "apply"
                     [|x3947;((let x3943 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3943 "push"
                                    [|(Ojs.float_to_js x3940)|]);
                               (match x3941 with
                                | Some x3945 ->
                                    ignore
                                      (Ojs.call x3943 "push"
                                         [|(Ojs.float_to_js x3945)|])
                                | None -> ());
                               (match x3942 with
                                | Some x3944 ->
                                    ignore
                                      (Ojs.call x3943 "push"
                                         [|(Ojs.float_to_js x3944)|])
                                | None -> ());
                               x3943))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3955 : t) ->
        fun ~predicate:(x3948 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x3949 : any option) ->
            fun () ->
              t_of_js
                (let x3956 = t_to_js x3955 in
                 Ojs.call (Ojs.get_prop_ascii x3956 "filter") "apply"
                   [|x3956;((let x3950 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3950 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3952 : Ojs.t) ->
                                          fun (x3953 : Ojs.t) ->
                                            fun (x3954 : Ojs.t) ->
                                              any_to_js
                                                (x3948
                                                   ~value:(Ojs.float_of_js
                                                             x3952)
                                                   ~index:(Ojs.float_of_js
                                                             x3953)
                                                   ~array:(t_of_js x3954))))|]);
                             (match x3949 with
                              | Some x3951 ->
                                  ignore
                                    (Ojs.call x3950 "push"
                                       [|(any_to_js x3951)|])
                              | None -> ());
                             x3950))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3964 : t) ->
        fun ~predicate:(x3957 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3958 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3965 = t_to_js x3964 in
                 Ojs.call (Ojs.get_prop_ascii x3965 "find") "apply"
                   [|x3965;((let x3959 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3959 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3961 : Ojs.t) ->
                                          fun (x3962 : Ojs.t) ->
                                            fun (x3963 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3957
                                                   ~value:(Ojs.float_of_js
                                                             x3961)
                                                   ~index:(Ojs.float_of_js
                                                             x3962)
                                                   ~obj:(t_of_js x3963))))|]);
                             (match x3958 with
                              | Some x3960 ->
                                  ignore
                                    (Ojs.call x3959 "push"
                                       [|(any_to_js x3960)|])
                              | None -> ());
                             x3959))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3974 : t) ->
        fun ~predicate:(x3967 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3968 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3975 = t_to_js x3974 in
                 Ojs.call (Ojs.get_prop_ascii x3975 "findIndex") "apply"
                   [|x3975;((let x3969 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3969 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3971 : Ojs.t) ->
                                          fun (x3972 : Ojs.t) ->
                                            fun (x3973 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3967
                                                   ~value:(Ojs.float_of_js
                                                             x3971)
                                                   ~index:(Ojs.float_of_js
                                                             x3972)
                                                   ~obj:(t_of_js x3973))))|]);
                             (match x3968 with
                              | Some x3970 ->
                                  ignore
                                    (Ojs.call x3969 "push"
                                       [|(any_to_js x3970)|])
                              | None -> ());
                             x3969))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3983 : t) ->
        fun
          ~callbackfn:(x3976 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3977 : any option) ->
            fun () ->
              ignore
                (let x3984 = t_to_js x3983 in
                 Ojs.call (Ojs.get_prop_ascii x3984 "forEach") "apply"
                   [|x3984;((let x3978 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3978 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3980 : Ojs.t) ->
                                          fun (x3981 : Ojs.t) ->
                                            fun (x3982 : Ojs.t) ->
                                              x3976
                                                ~value:(Ojs.float_of_js x3980)
                                                ~index:(Ojs.float_of_js x3981)
                                                ~array:(t_of_js x3982)))|]);
                             (match x3977 with
                              | Some x3979 ->
                                  ignore
                                    (Ojs.call x3978 "push"
                                       [|(any_to_js x3979)|])
                              | None -> ());
                             x3978))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3989 : t) ->
        fun ~searchElement:(x3985 : float) ->
          fun ?fromIndex:(x3986 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3990 = t_to_js x3989 in
                 Ojs.call (Ojs.get_prop_ascii x3990 "indexOf") "apply"
                   [|x3990;((let x3987 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3987 "push"
                                  [|(Ojs.float_to_js x3985)|]);
                             (match x3986 with
                              | Some x3988 ->
                                  ignore
                                    (Ojs.call x3987 "push"
                                       [|(Ojs.float_to_js x3988)|])
                              | None -> ());
                             x3987))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3994 : t) ->
        fun ?separator:(x3991 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3995 = t_to_js x3994 in
               Ojs.call (Ojs.get_prop_ascii x3995 "join") "apply"
                 [|x3995;((let x3992 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3991 with
                            | Some x3993 ->
                                ignore
                                  (Ojs.call x3992 "push"
                                     [|(Ojs.string_to_js x3993)|])
                            | None -> ());
                           x3992))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x4000 : t) ->
        fun ~searchElement:(x3996 : float) ->
          fun ?fromIndex:(x3997 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4001 = t_to_js x4000 in
                 Ojs.call (Ojs.get_prop_ascii x4001 "lastIndexOf") "apply"
                   [|x4001;((let x3998 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3998 "push"
                                  [|(Ojs.float_to_js x3996)|]);
                             (match x3997 with
                              | Some x3999 ->
                                  ignore
                                    (Ojs.call x3998 "push"
                                       [|(Ojs.float_to_js x3999)|])
                              | None -> ());
                             x3998))|])
    let (get_length : t -> float) =
      fun (x4002 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4002) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4010 : t) ->
        fun
          ~callbackfn:(x4003 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x4004 : any option) ->
            fun () ->
              t_of_js
                (let x4011 = t_to_js x4010 in
                 Ojs.call (Ojs.get_prop_ascii x4011 "map") "apply"
                   [|x4011;((let x4005 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4005 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4007 : Ojs.t) ->
                                          fun (x4008 : Ojs.t) ->
                                            fun (x4009 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4003
                                                   ~value:(Ojs.float_of_js
                                                             x4007)
                                                   ~index:(Ojs.float_of_js
                                                             x4008)
                                                   ~array:(t_of_js x4009))))|]);
                             (match x4004 with
                              | Some x4006 ->
                                  ignore
                                    (Ojs.call x4005 "push"
                                       [|(any_to_js x4006)|])
                              | None -> ());
                             x4005))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4017 : t) ->
        fun
          ~callbackfn:(x4012 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x4017) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x4013 : Ojs.t) ->
                       fun (x4014 : Ojs.t) ->
                         fun (x4015 : Ojs.t) ->
                           fun (x4016 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4012 ~previousValue:(Ojs.float_of_js x4013)
                                  ~currentValue:(Ojs.float_of_js x4014)
                                  ~currentIndex:(Ojs.float_of_js x4015)
                                  ~array:(t_of_js x4016))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4024 : t) ->
        fun
          ~callbackfn:(x4018 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4023 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x4024) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4019 : Ojs.t) ->
                         fun (x4020 : Ojs.t) ->
                           fun (x4021 : Ojs.t) ->
                             fun (x4022 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4018
                                    ~previousValue:(Ojs.float_of_js x4019)
                                    ~currentValue:(Ojs.float_of_js x4020)
                                    ~currentIndex:(Ojs.float_of_js x4021)
                                    ~array:(t_of_js x4022))));(Ojs.float_to_js
                                                                 x4023)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4031 : t) ->
        fun
          ~callbackfn:(x4025 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4030 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x4031) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4026 : Ojs.t) ->
                         fun (x4027 : Ojs.t) ->
                           fun (x4028 : Ojs.t) ->
                             fun (x4029 : Ojs.t) ->
                               Obj.magic
                                 (x4025 ~previousValue:(Obj.magic x4026)
                                    ~currentValue:(Ojs.float_of_js x4027)
                                    ~currentIndex:(Ojs.float_of_js x4028)
                                    ~array:(t_of_js x4029))));(Obj.magic
                                                                 x4030)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4037 : t) ->
        fun
          ~callbackfn:(x4032 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x4037) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x4033 : Ojs.t) ->
                       fun (x4034 : Ojs.t) ->
                         fun (x4035 : Ojs.t) ->
                           fun (x4036 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4032 ~previousValue:(Ojs.float_of_js x4033)
                                  ~currentValue:(Ojs.float_of_js x4034)
                                  ~currentIndex:(Ojs.float_of_js x4035)
                                  ~array:(t_of_js x4036))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4044 : t) ->
        fun
          ~callbackfn:(x4038 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4043 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x4044) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4039 : Ojs.t) ->
                         fun (x4040 : Ojs.t) ->
                           fun (x4041 : Ojs.t) ->
                             fun (x4042 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4038
                                    ~previousValue:(Ojs.float_of_js x4039)
                                    ~currentValue:(Ojs.float_of_js x4040)
                                    ~currentIndex:(Ojs.float_of_js x4041)
                                    ~array:(t_of_js x4042))));(Ojs.float_to_js
                                                                 x4043)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4051 : t) ->
        fun
          ~callbackfn:(x4045 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4050 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x4051) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4046 : Ojs.t) ->
                         fun (x4047 : Ojs.t) ->
                           fun (x4048 : Ojs.t) ->
                             fun (x4049 : Ojs.t) ->
                               Obj.magic
                                 (x4045 ~previousValue:(Obj.magic x4046)
                                    ~currentValue:(Ojs.float_of_js x4047)
                                    ~currentIndex:(Ojs.float_of_js x4048)
                                    ~array:(t_of_js x4049))));(Obj.magic
                                                                 x4050)|])
    let (reverse : t -> t) =
      fun (x4052 : t) -> t_of_js (Ojs.call (t_to_js x4052) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x4058 : t) ->
        fun ~array:(x4053 : float _Array) ->
          fun ?offset:(x4054 : float option) ->
            fun () ->
              ignore
                (let x4059 = t_to_js x4058 in
                 Ojs.call (Ojs.get_prop_ascii x4059 "set") "apply"
                   [|x4059;((let x4055 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4055 "push"
                                  [|(_Array_to_js Ojs.float_to_js x4053)|]);
                             (match x4054 with
                              | Some x4056 ->
                                  ignore
                                    (Ojs.call x4055 "push"
                                       [|(Ojs.float_to_js x4056)|])
                              | None -> ());
                             x4055))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x4065 : t) ->
        fun ?start:(x4060 : float option) ->
          fun ?end_:(x4061 : float option) ->
            fun () ->
              t_of_js
                (let x4066 = t_to_js x4065 in
                 Ojs.call (Ojs.get_prop_ascii x4066 "slice") "apply"
                   [|x4066;((let x4062 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4060 with
                              | Some x4064 ->
                                  ignore
                                    (Ojs.call x4062 "push"
                                       [|(Ojs.float_to_js x4064)|])
                              | None -> ());
                             (match x4061 with
                              | Some x4063 ->
                                  ignore
                                    (Ojs.call x4062 "push"
                                       [|(Ojs.float_to_js x4063)|])
                              | None -> ());
                             x4062))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4074 : t) ->
        fun
          ~predicate:(x4067 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x4068 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4075 = t_to_js x4074 in
                 Ojs.call (Ojs.get_prop_ascii x4075 "some") "apply"
                   [|x4075;((let x4069 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4069 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4071 : Ojs.t) ->
                                          fun (x4072 : Ojs.t) ->
                                            fun (x4073 : Ojs.t) ->
                                              unknown_to_js
                                                (x4067
                                                   ~value:(Ojs.float_of_js
                                                             x4071)
                                                   ~index:(Ojs.float_of_js
                                                             x4072)
                                                   ~array:(t_of_js x4073))))|]);
                             (match x4068 with
                              | Some x4070 ->
                                  ignore
                                    (Ojs.call x4069 "push"
                                       [|(any_to_js x4070)|])
                              | None -> ());
                             x4069))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x4081 : t) ->
        fun ?compareFn:(x4076 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x4082 = t_to_js x4081 in
               Ojs.call (Ojs.get_prop_ascii x4082 "sort") "apply"
                 [|x4082;((let x4077 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4076 with
                            | Some x4078 ->
                                ignore
                                  (Ojs.call x4077 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x4079 : Ojs.t) ->
                                             fun (x4080 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x4078
                                                    ~a:(Ojs.float_of_js x4079)
                                                    ~b:(Ojs.float_of_js x4080))))|])
                            | None -> ());
                           x4077))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x4088 : t) ->
        fun ?begin_:(x4083 : float option) ->
          fun ?end_:(x4084 : float option) ->
            fun () ->
              t_of_js
                (let x4089 = t_to_js x4088 in
                 Ojs.call (Ojs.get_prop_ascii x4089 "subarray") "apply"
                   [|x4089;((let x4085 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4083 with
                              | Some x4087 ->
                                  ignore
                                    (Ojs.call x4085 "push"
                                       [|(Ojs.float_to_js x4087)|])
                              | None -> ());
                             (match x4084 with
                              | Some x4086 ->
                                  ignore
                                    (Ojs.call x4085 "push"
                                       [|(Ojs.float_to_js x4086)|])
                              | None -> ());
                             x4085))|])
    let (toLocaleString : t -> string) =
      fun (x4090 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4090) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x4091 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4091) "toString" [||])
    let (valueOf : t -> t) =
      fun (x4092 : t) -> t_of_js (Ojs.call (t_to_js x4092) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x4093 : t) ->
        fun (x4094 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x4093) (Ojs.float_to_js x4094))
    let (set : t -> float -> float -> unit) =
      fun (x4095 : t) ->
        fun (x4096 : float) ->
          fun (x4097 : float) ->
            Ojs.set_prop (t_to_js x4095) (Ojs.float_to_js x4096)
              (Ojs.float_to_js x4097)
    let (create : length:float -> _Float32Array) =
      fun ~length:(x4098 : float) ->
        _Float32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x4098)|])
    let (create' :
      array:(_ArrayBuffer, float _Array) union2 -> _Float32Array) =
      fun ~array:(x4099 : (_ArrayBuffer, float _Array) union2) ->
        _Float32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x4101 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x4101) x4099)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Float32Array)
      =
      fun ~buffer:(x4103 : _ArrayBuffer) ->
        fun ?byteOffset:(x4104 : float option) ->
          fun ?length:(x4105 : float option) ->
            fun () ->
              _Float32Array_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x4106 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x4106 "push" [|(_ArrayBuffer_to_js x4103)|]);
                    (match x4104 with
                     | Some x4108 ->
                         ignore
                           (Ojs.call x4106 "push" [|(Ojs.float_to_js x4108)|])
                     | None -> ());
                    (match x4105 with
                     | Some x4107 ->
                         ignore
                           (Ojs.call x4106 "push" [|(Ojs.float_to_js x4107)|])
                     | None -> ());
                    x4106))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Float32Array) =
      fun ~items:(x4109 : float list) ->
        _Float32Array_of_js
          (let x4112 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x4112 "of") "apply"
             [|x4112;((let x4110 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4111 : float) ->
                            ignore
                              (Ojs.call x4110 "push"
                                 [|(Ojs.float_to_js x4111)|])) x4109;
                       x4110))|])
    let (from : array:float _Array -> _Float32Array) =
      fun ~array:(x4113 : float _Array) ->
        _Float32Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(_Array_to_js Ojs.float_to_js x4113)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Float32Array)
      =
      fun ~array:(x4115 : 'T _Array) ->
        fun ~mapfn:(x4116 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x4117 : any option) ->
            fun () ->
              _Float32Array_of_js
                (let x4123 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x4123 "from") "apply"
                   [|x4123;((let x4118 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4118 "push"
                                  [|(_Array_to_js Obj.magic x4115)|]);
                             ignore
                               (Ojs.call x4118 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x4120 : Ojs.t) ->
                                          fun (x4121 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x4116 ~v:(Obj.magic x4120)
                                                 ~k:(Ojs.float_of_js x4121))))|]);
                             (match x4117 with
                              | Some x4119 ->
                                  ignore
                                    (Ojs.call x4118 "push"
                                       [|(any_to_js x4119)|])
                              | None -> ());
                             x4118))|])
  end
module Float32ArrayConstructor =
  struct
    type t = _Float32ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x4125 : Ojs.t) -> _Float32ArrayConstructor_of_js x4125
    and t_to_js : t -> Ojs.t =
      fun (x4124 : _Float32ArrayConstructor) ->
        _Float32ArrayConstructor_to_js x4124
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4127 : Ojs.t) -> t_of_js x4127
    and t_0_to_js : t_0 -> Ojs.t = fun (x4126 : t) -> t_to_js x4126
    let (get_prototype : t -> _Float32Array) =
      fun (x4128 : t) ->
        _Float32Array_of_js (Ojs.get_prop_ascii (t_to_js x4128) "prototype")
    let (create : t -> length:float -> _Float32Array) =
      fun (x4130 : t) ->
        fun ~length:(x4129 : float) ->
          _Float32Array_of_js
            (Ojs.new_obj (t_to_js x4130) [|(Ojs.float_to_js x4129)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Float32Array) =
      fun (x4135 : t) ->
        fun ~array:(x4131 : (_ArrayBuffer, float _Array) union2) ->
          _Float32Array_of_js
            (Ojs.new_obj (t_to_js x4135)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x4133 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x4133) x4131)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Float32Array)
      =
      fun (x4142 : t) ->
        fun ~buffer:(x4136 : _ArrayBuffer) ->
          fun ?byteOffset:(x4137 : float option) ->
            fun ?length:(x4138 : float option) ->
              fun () ->
                _Float32Array_of_js
                  (Ojs.new_obj_arr (t_to_js x4142)
                     (let x4139 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x4139 "push" [|(_ArrayBuffer_to_js x4136)|]);
                      (match x4137 with
                       | Some x4141 ->
                           ignore
                             (Ojs.call x4139 "push"
                                [|(Ojs.float_to_js x4141)|])
                       | None -> ());
                      (match x4138 with
                       | Some x4140 ->
                           ignore
                             (Ojs.call x4139 "push"
                                [|(Ojs.float_to_js x4140)|])
                       | None -> ());
                      x4139))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x4143 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x4143) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Float32Array) =
      fun (x4147 : t) ->
        fun ~items:(x4144 : float list) ->
          _Float32Array_of_js
            (let x4148 = t_to_js x4147 in
             Ojs.call (Ojs.get_prop_ascii x4148 "of") "apply"
               [|x4148;((let x4145 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4146 : float) ->
                              ignore
                                (Ojs.call x4145 "push"
                                   [|(Ojs.float_to_js x4146)|])) x4144;
                         x4145))|])
    let (from : t -> array:float _Array -> _Float32Array) =
      fun (x4151 : t) ->
        fun ~array:(x4149 : float _Array) ->
          _Float32Array_of_js
            (Ojs.call (t_to_js x4151) "from"
               [|(_Array_to_js Ojs.float_to_js x4149)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Float32Array)
      =
      fun (x4160 : t) ->
        fun ~array:(x4152 : 'T _Array) ->
          fun ~mapfn:(x4153 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x4154 : any option) ->
              fun () ->
                _Float32Array_of_js
                  (let x4161 = t_to_js x4160 in
                   Ojs.call (Ojs.get_prop_ascii x4161 "from") "apply"
                     [|x4161;((let x4155 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4155 "push"
                                    [|(_Array_to_js Obj.magic x4152)|]);
                               ignore
                                 (Ojs.call x4155 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4157 : Ojs.t) ->
                                            fun (x4158 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4153 ~v:(Obj.magic x4157)
                                                   ~k:(Ojs.float_of_js x4158))))|]);
                               (match x4154 with
                                | Some x4156 ->
                                    ignore
                                      (Ojs.call x4155 "push"
                                         [|(any_to_js x4156)|])
                                | None -> ());
                               x4155))|])
  end
let (float32Array : _Float32ArrayConstructor) =
  _Float32ArrayConstructor_of_js
    (Ojs.get_prop_ascii Ojs.global "Float32Array")
module Float64Array =
  struct
    type t = _Float64Array
    let rec t_of_js : Ojs.t -> t =
      fun (x4163 : Ojs.t) -> _Float64Array_of_js x4163
    and t_to_js : t -> Ojs.t =
      fun (x4162 : _Float64Array) -> _Float64Array_to_js x4162
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4165 : Ojs.t) -> t_of_js x4165
    and t_0_to_js : t_0 -> Ojs.t = fun (x4164 : t) -> t_to_js x4164
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x4166 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x4166) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x4167 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x4167) "buffer")
    let (get_byteLength : t -> float) =
      fun (x4168 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4168) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x4169 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4169) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x4175 : t) ->
        fun ~target:(x4170 : float) ->
          fun ~start:(x4171 : float) ->
            fun ?end_:(x4172 : float option) ->
              fun () ->
                t_of_js
                  (let x4176 = t_to_js x4175 in
                   Ojs.call (Ojs.get_prop_ascii x4176 "copyWithin") "apply"
                     [|x4176;((let x4173 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4173 "push"
                                    [|(Ojs.float_to_js x4170)|]);
                               ignore
                                 (Ojs.call x4173 "push"
                                    [|(Ojs.float_to_js x4171)|]);
                               (match x4172 with
                                | Some x4174 ->
                                    ignore
                                      (Ojs.call x4173 "push"
                                         [|(Ojs.float_to_js x4174)|])
                                | None -> ());
                               x4173))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4184 : t) ->
        fun
          ~predicate:(x4177 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x4178 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4185 = t_to_js x4184 in
                 Ojs.call (Ojs.get_prop_ascii x4185 "every") "apply"
                   [|x4185;((let x4179 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4179 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4181 : Ojs.t) ->
                                          fun (x4182 : Ojs.t) ->
                                            fun (x4183 : Ojs.t) ->
                                              unknown_to_js
                                                (x4177
                                                   ~value:(Ojs.float_of_js
                                                             x4181)
                                                   ~index:(Ojs.float_of_js
                                                             x4182)
                                                   ~array:(t_of_js x4183))))|]);
                             (match x4178 with
                              | Some x4180 ->
                                  ignore
                                    (Ojs.call x4179 "push"
                                       [|(any_to_js x4180)|])
                              | None -> ());
                             x4179))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x4192 : t) ->
        fun ~value:(x4186 : float) ->
          fun ?start:(x4187 : float option) ->
            fun ?end_:(x4188 : float option) ->
              fun () ->
                t_of_js
                  (let x4193 = t_to_js x4192 in
                   Ojs.call (Ojs.get_prop_ascii x4193 "fill") "apply"
                     [|x4193;((let x4189 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4189 "push"
                                    [|(Ojs.float_to_js x4186)|]);
                               (match x4187 with
                                | Some x4191 ->
                                    ignore
                                      (Ojs.call x4189 "push"
                                         [|(Ojs.float_to_js x4191)|])
                                | None -> ());
                               (match x4188 with
                                | Some x4190 ->
                                    ignore
                                      (Ojs.call x4189 "push"
                                         [|(Ojs.float_to_js x4190)|])
                                | None -> ());
                               x4189))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4201 : t) ->
        fun ~predicate:(x4194 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x4195 : any option) ->
            fun () ->
              t_of_js
                (let x4202 = t_to_js x4201 in
                 Ojs.call (Ojs.get_prop_ascii x4202 "filter") "apply"
                   [|x4202;((let x4196 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4196 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4198 : Ojs.t) ->
                                          fun (x4199 : Ojs.t) ->
                                            fun (x4200 : Ojs.t) ->
                                              any_to_js
                                                (x4194
                                                   ~value:(Ojs.float_of_js
                                                             x4198)
                                                   ~index:(Ojs.float_of_js
                                                             x4199)
                                                   ~array:(t_of_js x4200))))|]);
                             (match x4195 with
                              | Some x4197 ->
                                  ignore
                                    (Ojs.call x4196 "push"
                                       [|(any_to_js x4197)|])
                              | None -> ());
                             x4196))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x4210 : t) ->
        fun ~predicate:(x4203 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x4204 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x4211 = t_to_js x4210 in
                 Ojs.call (Ojs.get_prop_ascii x4211 "find") "apply"
                   [|x4211;((let x4205 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4205 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4207 : Ojs.t) ->
                                          fun (x4208 : Ojs.t) ->
                                            fun (x4209 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4203
                                                   ~value:(Ojs.float_of_js
                                                             x4207)
                                                   ~index:(Ojs.float_of_js
                                                             x4208)
                                                   ~obj:(t_of_js x4209))))|]);
                             (match x4204 with
                              | Some x4206 ->
                                  ignore
                                    (Ojs.call x4205 "push"
                                       [|(any_to_js x4206)|])
                              | None -> ());
                             x4205))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x4220 : t) ->
        fun ~predicate:(x4213 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x4214 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x4221 = t_to_js x4220 in
                 Ojs.call (Ojs.get_prop_ascii x4221 "findIndex") "apply"
                   [|x4221;((let x4215 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4215 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4217 : Ojs.t) ->
                                          fun (x4218 : Ojs.t) ->
                                            fun (x4219 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4213
                                                   ~value:(Ojs.float_of_js
                                                             x4217)
                                                   ~index:(Ojs.float_of_js
                                                             x4218)
                                                   ~obj:(t_of_js x4219))))|]);
                             (match x4214 with
                              | Some x4216 ->
                                  ignore
                                    (Ojs.call x4215 "push"
                                       [|(any_to_js x4216)|])
                              | None -> ());
                             x4215))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4229 : t) ->
        fun
          ~callbackfn:(x4222 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x4223 : any option) ->
            fun () ->
              ignore
                (let x4230 = t_to_js x4229 in
                 Ojs.call (Ojs.get_prop_ascii x4230 "forEach") "apply"
                   [|x4230;((let x4224 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4224 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4226 : Ojs.t) ->
                                          fun (x4227 : Ojs.t) ->
                                            fun (x4228 : Ojs.t) ->
                                              x4222
                                                ~value:(Ojs.float_of_js x4226)
                                                ~index:(Ojs.float_of_js x4227)
                                                ~array:(t_of_js x4228)))|]);
                             (match x4223 with
                              | Some x4225 ->
                                  ignore
                                    (Ojs.call x4224 "push"
                                       [|(any_to_js x4225)|])
                              | None -> ());
                             x4224))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x4235 : t) ->
        fun ~searchElement:(x4231 : float) ->
          fun ?fromIndex:(x4232 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4236 = t_to_js x4235 in
                 Ojs.call (Ojs.get_prop_ascii x4236 "indexOf") "apply"
                   [|x4236;((let x4233 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4233 "push"
                                  [|(Ojs.float_to_js x4231)|]);
                             (match x4232 with
                              | Some x4234 ->
                                  ignore
                                    (Ojs.call x4233 "push"
                                       [|(Ojs.float_to_js x4234)|])
                              | None -> ());
                             x4233))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x4240 : t) ->
        fun ?separator:(x4237 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x4241 = t_to_js x4240 in
               Ojs.call (Ojs.get_prop_ascii x4241 "join") "apply"
                 [|x4241;((let x4238 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4237 with
                            | Some x4239 ->
                                ignore
                                  (Ojs.call x4238 "push"
                                     [|(Ojs.string_to_js x4239)|])
                            | None -> ());
                           x4238))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x4246 : t) ->
        fun ~searchElement:(x4242 : float) ->
          fun ?fromIndex:(x4243 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4247 = t_to_js x4246 in
                 Ojs.call (Ojs.get_prop_ascii x4247 "lastIndexOf") "apply"
                   [|x4247;((let x4244 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4244 "push"
                                  [|(Ojs.float_to_js x4242)|]);
                             (match x4243 with
                              | Some x4245 ->
                                  ignore
                                    (Ojs.call x4244 "push"
                                       [|(Ojs.float_to_js x4245)|])
                              | None -> ());
                             x4244))|])
    let (get_length : t -> float) =
      fun (x4248 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4248) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4256 : t) ->
        fun
          ~callbackfn:(x4249 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x4250 : any option) ->
            fun () ->
              t_of_js
                (let x4257 = t_to_js x4256 in
                 Ojs.call (Ojs.get_prop_ascii x4257 "map") "apply"
                   [|x4257;((let x4251 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4251 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4253 : Ojs.t) ->
                                          fun (x4254 : Ojs.t) ->
                                            fun (x4255 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4249
                                                   ~value:(Ojs.float_of_js
                                                             x4253)
                                                   ~index:(Ojs.float_of_js
                                                             x4254)
                                                   ~array:(t_of_js x4255))))|]);
                             (match x4250 with
                              | Some x4252 ->
                                  ignore
                                    (Ojs.call x4251 "push"
                                       [|(any_to_js x4252)|])
                              | None -> ());
                             x4251))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4263 : t) ->
        fun
          ~callbackfn:(x4258 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x4263) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x4259 : Ojs.t) ->
                       fun (x4260 : Ojs.t) ->
                         fun (x4261 : Ojs.t) ->
                           fun (x4262 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4258 ~previousValue:(Ojs.float_of_js x4259)
                                  ~currentValue:(Ojs.float_of_js x4260)
                                  ~currentIndex:(Ojs.float_of_js x4261)
                                  ~array:(t_of_js x4262))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4270 : t) ->
        fun
          ~callbackfn:(x4264 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4269 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x4270) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4265 : Ojs.t) ->
                         fun (x4266 : Ojs.t) ->
                           fun (x4267 : Ojs.t) ->
                             fun (x4268 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4264
                                    ~previousValue:(Ojs.float_of_js x4265)
                                    ~currentValue:(Ojs.float_of_js x4266)
                                    ~currentIndex:(Ojs.float_of_js x4267)
                                    ~array:(t_of_js x4268))));(Ojs.float_to_js
                                                                 x4269)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4277 : t) ->
        fun
          ~callbackfn:(x4271 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4276 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x4277) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4272 : Ojs.t) ->
                         fun (x4273 : Ojs.t) ->
                           fun (x4274 : Ojs.t) ->
                             fun (x4275 : Ojs.t) ->
                               Obj.magic
                                 (x4271 ~previousValue:(Obj.magic x4272)
                                    ~currentValue:(Ojs.float_of_js x4273)
                                    ~currentIndex:(Ojs.float_of_js x4274)
                                    ~array:(t_of_js x4275))));(Obj.magic
                                                                 x4276)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4283 : t) ->
        fun
          ~callbackfn:(x4278 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x4283) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x4279 : Ojs.t) ->
                       fun (x4280 : Ojs.t) ->
                         fun (x4281 : Ojs.t) ->
                           fun (x4282 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4278 ~previousValue:(Ojs.float_of_js x4279)
                                  ~currentValue:(Ojs.float_of_js x4280)
                                  ~currentIndex:(Ojs.float_of_js x4281)
                                  ~array:(t_of_js x4282))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4290 : t) ->
        fun
          ~callbackfn:(x4284 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4289 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x4290) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4285 : Ojs.t) ->
                         fun (x4286 : Ojs.t) ->
                           fun (x4287 : Ojs.t) ->
                             fun (x4288 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4284
                                    ~previousValue:(Ojs.float_of_js x4285)
                                    ~currentValue:(Ojs.float_of_js x4286)
                                    ~currentIndex:(Ojs.float_of_js x4287)
                                    ~array:(t_of_js x4288))));(Ojs.float_to_js
                                                                 x4289)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4297 : t) ->
        fun
          ~callbackfn:(x4291 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4296 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x4297) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4292 : Ojs.t) ->
                         fun (x4293 : Ojs.t) ->
                           fun (x4294 : Ojs.t) ->
                             fun (x4295 : Ojs.t) ->
                               Obj.magic
                                 (x4291 ~previousValue:(Obj.magic x4292)
                                    ~currentValue:(Ojs.float_of_js x4293)
                                    ~currentIndex:(Ojs.float_of_js x4294)
                                    ~array:(t_of_js x4295))));(Obj.magic
                                                                 x4296)|])
    let (reverse : t -> t) =
      fun (x4298 : t) -> t_of_js (Ojs.call (t_to_js x4298) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x4304 : t) ->
        fun ~array:(x4299 : float _Array) ->
          fun ?offset:(x4300 : float option) ->
            fun () ->
              ignore
                (let x4305 = t_to_js x4304 in
                 Ojs.call (Ojs.get_prop_ascii x4305 "set") "apply"
                   [|x4305;((let x4301 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4301 "push"
                                  [|(_Array_to_js Ojs.float_to_js x4299)|]);
                             (match x4300 with
                              | Some x4302 ->
                                  ignore
                                    (Ojs.call x4301 "push"
                                       [|(Ojs.float_to_js x4302)|])
                              | None -> ());
                             x4301))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x4311 : t) ->
        fun ?start:(x4306 : float option) ->
          fun ?end_:(x4307 : float option) ->
            fun () ->
              t_of_js
                (let x4312 = t_to_js x4311 in
                 Ojs.call (Ojs.get_prop_ascii x4312 "slice") "apply"
                   [|x4312;((let x4308 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4306 with
                              | Some x4310 ->
                                  ignore
                                    (Ojs.call x4308 "push"
                                       [|(Ojs.float_to_js x4310)|])
                              | None -> ());
                             (match x4307 with
                              | Some x4309 ->
                                  ignore
                                    (Ojs.call x4308 "push"
                                       [|(Ojs.float_to_js x4309)|])
                              | None -> ());
                             x4308))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4320 : t) ->
        fun
          ~predicate:(x4313 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x4314 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4321 = t_to_js x4320 in
                 Ojs.call (Ojs.get_prop_ascii x4321 "some") "apply"
                   [|x4321;((let x4315 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4315 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4317 : Ojs.t) ->
                                          fun (x4318 : Ojs.t) ->
                                            fun (x4319 : Ojs.t) ->
                                              unknown_to_js
                                                (x4313
                                                   ~value:(Ojs.float_of_js
                                                             x4317)
                                                   ~index:(Ojs.float_of_js
                                                             x4318)
                                                   ~array:(t_of_js x4319))))|]);
                             (match x4314 with
                              | Some x4316 ->
                                  ignore
                                    (Ojs.call x4315 "push"
                                       [|(any_to_js x4316)|])
                              | None -> ());
                             x4315))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x4327 : t) ->
        fun ?compareFn:(x4322 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x4328 = t_to_js x4327 in
               Ojs.call (Ojs.get_prop_ascii x4328 "sort") "apply"
                 [|x4328;((let x4323 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4322 with
                            | Some x4324 ->
                                ignore
                                  (Ojs.call x4323 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x4325 : Ojs.t) ->
                                             fun (x4326 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x4324
                                                    ~a:(Ojs.float_of_js x4325)
                                                    ~b:(Ojs.float_of_js x4326))))|])
                            | None -> ());
                           x4323))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x4334 : t) ->
        fun ?begin_:(x4329 : float option) ->
          fun ?end_:(x4330 : float option) ->
            fun () ->
              t_of_js
                (let x4335 = t_to_js x4334 in
                 Ojs.call (Ojs.get_prop_ascii x4335 "subarray") "apply"
                   [|x4335;((let x4331 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4329 with
                              | Some x4333 ->
                                  ignore
                                    (Ojs.call x4331 "push"
                                       [|(Ojs.float_to_js x4333)|])
                              | None -> ());
                             (match x4330 with
                              | Some x4332 ->
                                  ignore
                                    (Ojs.call x4331 "push"
                                       [|(Ojs.float_to_js x4332)|])
                              | None -> ());
                             x4331))|])
    let (toString : t -> string) =
      fun (x4336 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4336) "toString" [||])
    let (valueOf : t -> t) =
      fun (x4337 : t) -> t_of_js (Ojs.call (t_to_js x4337) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x4338 : t) ->
        fun (x4339 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x4338) (Ojs.float_to_js x4339))
    let (set : t -> float -> float -> unit) =
      fun (x4340 : t) ->
        fun (x4341 : float) ->
          fun (x4342 : float) ->
            Ojs.set_prop (t_to_js x4340) (Ojs.float_to_js x4341)
              (Ojs.float_to_js x4342)
    let (create : length:float -> _Float64Array) =
      fun ~length:(x4343 : float) ->
        _Float64Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x4343)|])
    let (create' :
      array:(_ArrayBuffer, float _Array) union2 -> _Float64Array) =
      fun ~array:(x4344 : (_ArrayBuffer, float _Array) union2) ->
        _Float64Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x4346 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x4346) x4344)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Float64Array)
      =
      fun ~buffer:(x4348 : _ArrayBuffer) ->
        fun ?byteOffset:(x4349 : float option) ->
          fun ?length:(x4350 : float option) ->
            fun () ->
              _Float64Array_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x4351 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x4351 "push" [|(_ArrayBuffer_to_js x4348)|]);
                    (match x4349 with
                     | Some x4353 ->
                         ignore
                           (Ojs.call x4351 "push" [|(Ojs.float_to_js x4353)|])
                     | None -> ());
                    (match x4350 with
                     | Some x4352 ->
                         ignore
                           (Ojs.call x4351 "push" [|(Ojs.float_to_js x4352)|])
                     | None -> ());
                    x4351))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Float64Array) =
      fun ~items:(x4354 : float list) ->
        _Float64Array_of_js
          (let x4357 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x4357 "of") "apply"
             [|x4357;((let x4355 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4356 : float) ->
                            ignore
                              (Ojs.call x4355 "push"
                                 [|(Ojs.float_to_js x4356)|])) x4354;
                       x4355))|])
    let (from : array:float _Array -> _Float64Array) =
      fun ~array:(x4358 : float _Array) ->
        _Float64Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(_Array_to_js Ojs.float_to_js x4358)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Float64Array)
      =
      fun ~array:(x4360 : 'T _Array) ->
        fun ~mapfn:(x4361 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x4362 : any option) ->
            fun () ->
              _Float64Array_of_js
                (let x4368 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x4368 "from") "apply"
                   [|x4368;((let x4363 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4363 "push"
                                  [|(_Array_to_js Obj.magic x4360)|]);
                             ignore
                               (Ojs.call x4363 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x4365 : Ojs.t) ->
                                          fun (x4366 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x4361 ~v:(Obj.magic x4365)
                                                 ~k:(Ojs.float_of_js x4366))))|]);
                             (match x4362 with
                              | Some x4364 ->
                                  ignore
                                    (Ojs.call x4363 "push"
                                       [|(any_to_js x4364)|])
                              | None -> ());
                             x4363))|])
  end
module Float64ArrayConstructor =
  struct
    type t = _Float64ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x4370 : Ojs.t) -> _Float64ArrayConstructor_of_js x4370
    and t_to_js : t -> Ojs.t =
      fun (x4369 : _Float64ArrayConstructor) ->
        _Float64ArrayConstructor_to_js x4369
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4372 : Ojs.t) -> t_of_js x4372
    and t_0_to_js : t_0 -> Ojs.t = fun (x4371 : t) -> t_to_js x4371
    let (get_prototype : t -> _Float64Array) =
      fun (x4373 : t) ->
        _Float64Array_of_js (Ojs.get_prop_ascii (t_to_js x4373) "prototype")
    let (create : t -> length:float -> _Float64Array) =
      fun (x4375 : t) ->
        fun ~length:(x4374 : float) ->
          _Float64Array_of_js
            (Ojs.new_obj (t_to_js x4375) [|(Ojs.float_to_js x4374)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Float64Array) =
      fun (x4380 : t) ->
        fun ~array:(x4376 : (_ArrayBuffer, float _Array) union2) ->
          _Float64Array_of_js
            (Ojs.new_obj (t_to_js x4380)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x4378 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x4378) x4376)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Float64Array)
      =
      fun (x4387 : t) ->
        fun ~buffer:(x4381 : _ArrayBuffer) ->
          fun ?byteOffset:(x4382 : float option) ->
            fun ?length:(x4383 : float option) ->
              fun () ->
                _Float64Array_of_js
                  (Ojs.new_obj_arr (t_to_js x4387)
                     (let x4384 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x4384 "push" [|(_ArrayBuffer_to_js x4381)|]);
                      (match x4382 with
                       | Some x4386 ->
                           ignore
                             (Ojs.call x4384 "push"
                                [|(Ojs.float_to_js x4386)|])
                       | None -> ());
                      (match x4383 with
                       | Some x4385 ->
                           ignore
                             (Ojs.call x4384 "push"
                                [|(Ojs.float_to_js x4385)|])
                       | None -> ());
                      x4384))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x4388 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x4388) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Float64Array) =
      fun (x4392 : t) ->
        fun ~items:(x4389 : float list) ->
          _Float64Array_of_js
            (let x4393 = t_to_js x4392 in
             Ojs.call (Ojs.get_prop_ascii x4393 "of") "apply"
               [|x4393;((let x4390 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4391 : float) ->
                              ignore
                                (Ojs.call x4390 "push"
                                   [|(Ojs.float_to_js x4391)|])) x4389;
                         x4390))|])
    let (from : t -> array:float _Array -> _Float64Array) =
      fun (x4396 : t) ->
        fun ~array:(x4394 : float _Array) ->
          _Float64Array_of_js
            (Ojs.call (t_to_js x4396) "from"
               [|(_Array_to_js Ojs.float_to_js x4394)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Float64Array)
      =
      fun (x4405 : t) ->
        fun ~array:(x4397 : 'T _Array) ->
          fun ~mapfn:(x4398 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x4399 : any option) ->
              fun () ->
                _Float64Array_of_js
                  (let x4406 = t_to_js x4405 in
                   Ojs.call (Ojs.get_prop_ascii x4406 "from") "apply"
                     [|x4406;((let x4400 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4400 "push"
                                    [|(_Array_to_js Obj.magic x4397)|]);
                               ignore
                                 (Ojs.call x4400 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4402 : Ojs.t) ->
                                            fun (x4403 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4398 ~v:(Obj.magic x4402)
                                                   ~k:(Ojs.float_of_js x4403))))|]);
                               (match x4399 with
                                | Some x4401 ->
                                    ignore
                                      (Ojs.call x4400 "push"
                                         [|(any_to_js x4401)|])
                                | None -> ());
                               x4400))|])
  end
let (float64Array : _Float64ArrayConstructor) =
  _Float64ArrayConstructor_of_js
    (Ojs.get_prop_ascii Ojs.global "Float64Array")
module Intl =
  struct
    module CollatorOptions =
      struct
        type t = _Intl_CollatorOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4408 : Ojs.t) -> _Intl_CollatorOptions_of_js x4408
        and t_to_js : t -> Ojs.t =
          fun (x4407 : _Intl_CollatorOptions) ->
            _Intl_CollatorOptions_to_js x4407
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x4410 : Ojs.t) -> t_of_js x4410
        and t_0_to_js : t_0 -> Ojs.t = fun (x4409 : t) -> t_to_js x4409
        let (get_usage : t -> string) =
          fun (x4411 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4411) "usage")
        let (set_usage : t -> string -> unit) =
          fun (x4412 : t) ->
            fun (x4413 : string) ->
              Ojs.set_prop_ascii (t_to_js x4412) "usage"
                (Ojs.string_to_js x4413)
        let (get_localeMatcher : t -> string) =
          fun (x4414 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4414) "localeMatcher")
        let (set_localeMatcher : t -> string -> unit) =
          fun (x4415 : t) ->
            fun (x4416 : string) ->
              Ojs.set_prop_ascii (t_to_js x4415) "localeMatcher"
                (Ojs.string_to_js x4416)
        let (get_numeric : t -> bool) =
          fun (x4417 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4417) "numeric")
        let (set_numeric : t -> bool -> unit) =
          fun (x4418 : t) ->
            fun (x4419 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4418) "numeric"
                (Ojs.bool_to_js x4419)
        let (get_caseFirst : t -> string) =
          fun (x4420 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4420) "caseFirst")
        let (set_caseFirst : t -> string -> unit) =
          fun (x4421 : t) ->
            fun (x4422 : string) ->
              Ojs.set_prop_ascii (t_to_js x4421) "caseFirst"
                (Ojs.string_to_js x4422)
        let (get_sensitivity : t -> string) =
          fun (x4423 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4423) "sensitivity")
        let (set_sensitivity : t -> string -> unit) =
          fun (x4424 : t) ->
            fun (x4425 : string) ->
              Ojs.set_prop_ascii (t_to_js x4424) "sensitivity"
                (Ojs.string_to_js x4425)
        let (get_ignorePunctuation : t -> bool) =
          fun (x4426 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x4426) "ignorePunctuation")
        let (set_ignorePunctuation : t -> bool -> unit) =
          fun (x4427 : t) ->
            fun (x4428 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4427) "ignorePunctuation"
                (Ojs.bool_to_js x4428)
      end
    module ResolvedCollatorOptions =
      struct
        type t = _Intl_ResolvedCollatorOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4430 : Ojs.t) -> _Intl_ResolvedCollatorOptions_of_js x4430
        and t_to_js : t -> Ojs.t =
          fun (x4429 : _Intl_ResolvedCollatorOptions) ->
            _Intl_ResolvedCollatorOptions_to_js x4429
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x4432 : Ojs.t) -> t_of_js x4432
        and t_0_to_js : t_0 -> Ojs.t = fun (x4431 : t) -> t_to_js x4431
        let (get_locale : t -> string) =
          fun (x4433 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4433) "locale")
        let (set_locale : t -> string -> unit) =
          fun (x4434 : t) ->
            fun (x4435 : string) ->
              Ojs.set_prop_ascii (t_to_js x4434) "locale"
                (Ojs.string_to_js x4435)
        let (get_usage : t -> string) =
          fun (x4436 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4436) "usage")
        let (set_usage : t -> string -> unit) =
          fun (x4437 : t) ->
            fun (x4438 : string) ->
              Ojs.set_prop_ascii (t_to_js x4437) "usage"
                (Ojs.string_to_js x4438)
        let (get_sensitivity : t -> string) =
          fun (x4439 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4439) "sensitivity")
        let (set_sensitivity : t -> string -> unit) =
          fun (x4440 : t) ->
            fun (x4441 : string) ->
              Ojs.set_prop_ascii (t_to_js x4440) "sensitivity"
                (Ojs.string_to_js x4441)
        let (get_ignorePunctuation : t -> bool) =
          fun (x4442 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x4442) "ignorePunctuation")
        let (set_ignorePunctuation : t -> bool -> unit) =
          fun (x4443 : t) ->
            fun (x4444 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4443) "ignorePunctuation"
                (Ojs.bool_to_js x4444)
        let (get_collation : t -> string) =
          fun (x4445 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4445) "collation")
        let (set_collation : t -> string -> unit) =
          fun (x4446 : t) ->
            fun (x4447 : string) ->
              Ojs.set_prop_ascii (t_to_js x4446) "collation"
                (Ojs.string_to_js x4447)
        let (get_caseFirst : t -> string) =
          fun (x4448 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4448) "caseFirst")
        let (set_caseFirst : t -> string -> unit) =
          fun (x4449 : t) ->
            fun (x4450 : string) ->
              Ojs.set_prop_ascii (t_to_js x4449) "caseFirst"
                (Ojs.string_to_js x4450)
        let (get_numeric : t -> bool) =
          fun (x4451 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4451) "numeric")
        let (set_numeric : t -> bool -> unit) =
          fun (x4452 : t) ->
            fun (x4453 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4452) "numeric"
                (Ojs.bool_to_js x4453)
      end
    module Collator =
      struct
        type t = _Intl_Collator
        let rec t_of_js : Ojs.t -> t =
          fun (x4455 : Ojs.t) -> _Intl_Collator_of_js x4455
        and t_to_js : t -> Ojs.t =
          fun (x4454 : _Intl_Collator) -> _Intl_Collator_to_js x4454
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x4457 : Ojs.t) -> t_of_js x4457
        and t_0_to_js : t_0 -> Ojs.t = fun (x4456 : t) -> t_to_js x4456
        let (compare : t -> x:string -> y:string -> float) =
          fun (x4460 : t) ->
            fun ~x:(x4458 : string) ->
              fun ~y:(x4459 : string) ->
                Ojs.float_of_js
                  (Ojs.call (t_to_js x4460) "compare"
                     [|(Ojs.string_to_js x4458);(Ojs.string_to_js x4459)|])
        let (resolvedOptions : t -> _Intl_ResolvedCollatorOptions) =
          fun (x4461 : t) ->
            _Intl_ResolvedCollatorOptions_of_js
              (Ojs.call (t_to_js x4461) "resolvedOptions" [||])
      end
    let (collator : anonymous_interface_2) =
      anonymous_interface_2_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
    module NumberFormatOptions =
      struct
        type t = _Intl_NumberFormatOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4463 : Ojs.t) -> _Intl_NumberFormatOptions_of_js x4463
        and t_to_js : t -> Ojs.t =
          fun (x4462 : _Intl_NumberFormatOptions) ->
            _Intl_NumberFormatOptions_to_js x4462
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x4465 : Ojs.t) -> t_of_js x4465
        and t_0_to_js : t_0 -> Ojs.t = fun (x4464 : t) -> t_to_js x4464
        let (get_localeMatcher : t -> string) =
          fun (x4466 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4466) "localeMatcher")
        let (set_localeMatcher : t -> string -> unit) =
          fun (x4467 : t) ->
            fun (x4468 : string) ->
              Ojs.set_prop_ascii (t_to_js x4467) "localeMatcher"
                (Ojs.string_to_js x4468)
        let (get_style : t -> string) =
          fun (x4469 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4469) "style")
        let (set_style : t -> string -> unit) =
          fun (x4470 : t) ->
            fun (x4471 : string) ->
              Ojs.set_prop_ascii (t_to_js x4470) "style"
                (Ojs.string_to_js x4471)
        let (get_currency : t -> string) =
          fun (x4472 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4472) "currency")
        let (set_currency : t -> string -> unit) =
          fun (x4473 : t) ->
            fun (x4474 : string) ->
              Ojs.set_prop_ascii (t_to_js x4473) "currency"
                (Ojs.string_to_js x4474)
        let (get_currencyDisplay : t -> string) =
          fun (x4475 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4475) "currencyDisplay")
        let (set_currencyDisplay : t -> string -> unit) =
          fun (x4476 : t) ->
            fun (x4477 : string) ->
              Ojs.set_prop_ascii (t_to_js x4476) "currencyDisplay"
                (Ojs.string_to_js x4477)
        let (get_currencySign : t -> string) =
          fun (x4478 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4478) "currencySign")
        let (set_currencySign : t -> string -> unit) =
          fun (x4479 : t) ->
            fun (x4480 : string) ->
              Ojs.set_prop_ascii (t_to_js x4479) "currencySign"
                (Ojs.string_to_js x4480)
        let (get_useGrouping : t -> bool) =
          fun (x4481 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4481) "useGrouping")
        let (set_useGrouping : t -> bool -> unit) =
          fun (x4482 : t) ->
            fun (x4483 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4482) "useGrouping"
                (Ojs.bool_to_js x4483)
        let (get_minimumIntegerDigits : t -> float) =
          fun (x4484 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4484) "minimumIntegerDigits")
        let (set_minimumIntegerDigits : t -> float -> unit) =
          fun (x4485 : t) ->
            fun (x4486 : float) ->
              Ojs.set_prop_ascii (t_to_js x4485) "minimumIntegerDigits"
                (Ojs.float_to_js x4486)
        let (get_minimumFractionDigits : t -> float) =
          fun (x4487 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4487) "minimumFractionDigits")
        let (set_minimumFractionDigits : t -> float -> unit) =
          fun (x4488 : t) ->
            fun (x4489 : float) ->
              Ojs.set_prop_ascii (t_to_js x4488) "minimumFractionDigits"
                (Ojs.float_to_js x4489)
        let (get_maximumFractionDigits : t -> float) =
          fun (x4490 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4490) "maximumFractionDigits")
        let (set_maximumFractionDigits : t -> float -> unit) =
          fun (x4491 : t) ->
            fun (x4492 : float) ->
              Ojs.set_prop_ascii (t_to_js x4491) "maximumFractionDigits"
                (Ojs.float_to_js x4492)
        let (get_minimumSignificantDigits : t -> float) =
          fun (x4493 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4493) "minimumSignificantDigits")
        let (set_minimumSignificantDigits : t -> float -> unit) =
          fun (x4494 : t) ->
            fun (x4495 : float) ->
              Ojs.set_prop_ascii (t_to_js x4494) "minimumSignificantDigits"
                (Ojs.float_to_js x4495)
        let (get_maximumSignificantDigits : t -> float) =
          fun (x4496 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4496) "maximumSignificantDigits")
        let (set_maximumSignificantDigits : t -> float -> unit) =
          fun (x4497 : t) ->
            fun (x4498 : float) ->
              Ojs.set_prop_ascii (t_to_js x4497) "maximumSignificantDigits"
                (Ojs.float_to_js x4498)
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = _Intl_ResolvedNumberFormatOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4500 : Ojs.t) ->
            _Intl_ResolvedNumberFormatOptions_of_js x4500
        and t_to_js : t -> Ojs.t =
          fun (x4499 : _Intl_ResolvedNumberFormatOptions) ->
            _Intl_ResolvedNumberFormatOptions_to_js x4499
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x4502 : Ojs.t) -> t_of_js x4502
        and t_0_to_js : t_0 -> Ojs.t = fun (x4501 : t) -> t_to_js x4501
        let (get_locale : t -> string) =
          fun (x4503 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4503) "locale")
        let (set_locale : t -> string -> unit) =
          fun (x4504 : t) ->
            fun (x4505 : string) ->
              Ojs.set_prop_ascii (t_to_js x4504) "locale"
                (Ojs.string_to_js x4505)
        let (get_numberingSystem : t -> string) =
          fun (x4506 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4506) "numberingSystem")
        let (set_numberingSystem : t -> string -> unit) =
          fun (x4507 : t) ->
            fun (x4508 : string) ->
              Ojs.set_prop_ascii (t_to_js x4507) "numberingSystem"
                (Ojs.string_to_js x4508)
        let (get_style : t -> string) =
          fun (x4509 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4509) "style")
        let (set_style : t -> string -> unit) =
          fun (x4510 : t) ->
            fun (x4511 : string) ->
              Ojs.set_prop_ascii (t_to_js x4510) "style"
                (Ojs.string_to_js x4511)
        let (get_currency : t -> string) =
          fun (x4512 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4512) "currency")
        let (set_currency : t -> string -> unit) =
          fun (x4513 : t) ->
            fun (x4514 : string) ->
              Ojs.set_prop_ascii (t_to_js x4513) "currency"
                (Ojs.string_to_js x4514)
        let (get_currencyDisplay : t -> string) =
          fun (x4515 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4515) "currencyDisplay")
        let (set_currencyDisplay : t -> string -> unit) =
          fun (x4516 : t) ->
            fun (x4517 : string) ->
              Ojs.set_prop_ascii (t_to_js x4516) "currencyDisplay"
                (Ojs.string_to_js x4517)
        let (get_minimumIntegerDigits : t -> float) =
          fun (x4518 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4518) "minimumIntegerDigits")
        let (set_minimumIntegerDigits : t -> float -> unit) =
          fun (x4519 : t) ->
            fun (x4520 : float) ->
              Ojs.set_prop_ascii (t_to_js x4519) "minimumIntegerDigits"
                (Ojs.float_to_js x4520)
        let (get_minimumFractionDigits : t -> float) =
          fun (x4521 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4521) "minimumFractionDigits")
        let (set_minimumFractionDigits : t -> float -> unit) =
          fun (x4522 : t) ->
            fun (x4523 : float) ->
              Ojs.set_prop_ascii (t_to_js x4522) "minimumFractionDigits"
                (Ojs.float_to_js x4523)
        let (get_maximumFractionDigits : t -> float) =
          fun (x4524 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4524) "maximumFractionDigits")
        let (set_maximumFractionDigits : t -> float -> unit) =
          fun (x4525 : t) ->
            fun (x4526 : float) ->
              Ojs.set_prop_ascii (t_to_js x4525) "maximumFractionDigits"
                (Ojs.float_to_js x4526)
        let (get_minimumSignificantDigits : t -> float) =
          fun (x4527 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4527) "minimumSignificantDigits")
        let (set_minimumSignificantDigits : t -> float -> unit) =
          fun (x4528 : t) ->
            fun (x4529 : float) ->
              Ojs.set_prop_ascii (t_to_js x4528) "minimumSignificantDigits"
                (Ojs.float_to_js x4529)
        let (get_maximumSignificantDigits : t -> float) =
          fun (x4530 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4530) "maximumSignificantDigits")
        let (set_maximumSignificantDigits : t -> float -> unit) =
          fun (x4531 : t) ->
            fun (x4532 : float) ->
              Ojs.set_prop_ascii (t_to_js x4531) "maximumSignificantDigits"
                (Ojs.float_to_js x4532)
        let (get_useGrouping : t -> bool) =
          fun (x4533 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4533) "useGrouping")
        let (set_useGrouping : t -> bool -> unit) =
          fun (x4534 : t) ->
            fun (x4535 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4534) "useGrouping"
                (Ojs.bool_to_js x4535)
      end
    module NumberFormat =
      struct
        type t = _Intl_NumberFormat
        let rec t_of_js : Ojs.t -> t =
          fun (x4537 : Ojs.t) -> _Intl_NumberFormat_of_js x4537
        and t_to_js : t -> Ojs.t =
          fun (x4536 : _Intl_NumberFormat) -> _Intl_NumberFormat_to_js x4536
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x4539 : Ojs.t) -> t_of_js x4539
        and t_0_to_js : t_0 -> Ojs.t = fun (x4538 : t) -> t_to_js x4538
        let (format : t -> value:float -> string) =
          fun (x4541 : t) ->
            fun ~value:(x4540 : float) ->
              Ojs.string_of_js
                (Ojs.call (t_to_js x4541) "format"
                   [|(Ojs.float_to_js x4540)|])
        let (resolvedOptions : t -> _Intl_ResolvedNumberFormatOptions) =
          fun (x4542 : t) ->
            _Intl_ResolvedNumberFormatOptions_of_js
              (Ojs.call (t_to_js x4542) "resolvedOptions" [||])
      end
    let (numberFormat : anonymous_interface_4) =
      anonymous_interface_4_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
           "NumberFormat")
    module DateTimeFormatOptions =
      struct
        type t = _Intl_DateTimeFormatOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4544 : Ojs.t) -> _Intl_DateTimeFormatOptions_of_js x4544
        and t_to_js : t -> Ojs.t =
          fun (x4543 : _Intl_DateTimeFormatOptions) ->
            _Intl_DateTimeFormatOptions_to_js x4543
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x4546 : Ojs.t) -> t_of_js x4546
        and t_0_to_js : t_0 -> Ojs.t = fun (x4545 : t) -> t_to_js x4545
        let (get_localeMatcher : t -> [ `L_s2_best_fit  | `L_s4_lookup ]) =
          fun (x4547 : t) ->
            let x4548 = Ojs.get_prop_ascii (t_to_js x4547) "localeMatcher" in
            match Ojs.string_of_js x4548 with
            | "best fit" -> `L_s2_best_fit
            | "lookup" -> `L_s4_lookup
            | _ -> assert false
        let (set_localeMatcher :
          t -> [ `L_s2_best_fit  | `L_s4_lookup ] -> unit) =
          fun (x4549 : t) ->
            fun (x4550 : [ `L_s2_best_fit  | `L_s4_lookup ]) ->
              Ojs.set_prop_ascii (t_to_js x4549) "localeMatcher"
                (match x4550 with
                 | `L_s2_best_fit -> Ojs.string_to_js "LS2BestFit"
                 | `L_s4_lookup -> Ojs.string_to_js "LS4Lookup")
        let (get_weekday :
          t -> [ `L_s3_long  | `L_s5_narrow  | `L_s7_short ]) =
          fun (x4551 : t) ->
            let x4552 = Ojs.get_prop_ascii (t_to_js x4551) "weekday" in
            match Ojs.string_of_js x4552 with
            | "long" -> `L_s3_long
            | "narrow" -> `L_s5_narrow
            | "short" -> `L_s7_short
            | _ -> assert false
        let (set_weekday :
          t -> [ `L_s3_long  | `L_s5_narrow  | `L_s7_short ] -> unit) =
          fun (x4553 : t) ->
            fun (x4554 : [ `L_s3_long  | `L_s5_narrow  | `L_s7_short ]) ->
              Ojs.set_prop_ascii (t_to_js x4553) "weekday"
                (match x4554 with
                 | `L_s3_long -> Ojs.string_to_js "LS3Long"
                 | `L_s5_narrow -> Ojs.string_to_js "LS5Narrow"
                 | `L_s7_short -> Ojs.string_to_js "LS7Short")
        let (get_era : t -> [ `L_s3_long  | `L_s5_narrow  | `L_s7_short ]) =
          fun (x4555 : t) ->
            let x4556 = Ojs.get_prop_ascii (t_to_js x4555) "era" in
            match Ojs.string_of_js x4556 with
            | "long" -> `L_s3_long
            | "narrow" -> `L_s5_narrow
            | "short" -> `L_s7_short
            | _ -> assert false
        let (set_era :
          t -> [ `L_s3_long  | `L_s5_narrow  | `L_s7_short ] -> unit) =
          fun (x4557 : t) ->
            fun (x4558 : [ `L_s3_long  | `L_s5_narrow  | `L_s7_short ]) ->
              Ojs.set_prop_ascii (t_to_js x4557) "era"
                (match x4558 with
                 | `L_s3_long -> Ojs.string_to_js "LS3Long"
                 | `L_s5_narrow -> Ojs.string_to_js "LS5Narrow"
                 | `L_s7_short -> Ojs.string_to_js "LS7Short")
        let (get_year : t -> [ `L_s0_2_digit  | `L_s6_numeric ]) =
          fun (x4559 : t) ->
            let x4560 = Ojs.get_prop_ascii (t_to_js x4559) "year" in
            match Ojs.string_of_js x4560 with
            | "2-digit" -> `L_s0_2_digit
            | "numeric" -> `L_s6_numeric
            | _ -> assert false
        let (set_year : t -> [ `L_s0_2_digit  | `L_s6_numeric ] -> unit) =
          fun (x4561 : t) ->
            fun (x4562 : [ `L_s0_2_digit  | `L_s6_numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4561) "year"
                (match x4562 with
                 | `L_s0_2_digit -> Ojs.string_to_js "LS02Digit"
                 | `L_s6_numeric -> Ojs.string_to_js "LS6Numeric")
        let (get_month :
          t ->
            [ `L_s0_2_digit  | `L_s3_long  | `L_s5_narrow  | `L_s6_numeric 
            | `L_s7_short ])
          =
          fun (x4563 : t) ->
            let x4564 = Ojs.get_prop_ascii (t_to_js x4563) "month" in
            match Ojs.string_of_js x4564 with
            | "2-digit" -> `L_s0_2_digit
            | "long" -> `L_s3_long
            | "narrow" -> `L_s5_narrow
            | "numeric" -> `L_s6_numeric
            | "short" -> `L_s7_short
            | _ -> assert false
        let (set_month :
          t ->
            [ `L_s0_2_digit  | `L_s3_long  | `L_s5_narrow  | `L_s6_numeric 
            | `L_s7_short ] -> unit)
          =
          fun (x4565 : t) ->
            fun
              (x4566 :
                [ `L_s0_2_digit  | `L_s3_long  | `L_s5_narrow 
                | `L_s6_numeric  | `L_s7_short ])
              ->
              Ojs.set_prop_ascii (t_to_js x4565) "month"
                (match x4566 with
                 | `L_s0_2_digit -> Ojs.string_to_js "LS02Digit"
                 | `L_s3_long -> Ojs.string_to_js "LS3Long"
                 | `L_s5_narrow -> Ojs.string_to_js "LS5Narrow"
                 | `L_s6_numeric -> Ojs.string_to_js "LS6Numeric"
                 | `L_s7_short -> Ojs.string_to_js "LS7Short")
        let (get_day : t -> [ `L_s0_2_digit  | `L_s6_numeric ]) =
          fun (x4567 : t) ->
            let x4568 = Ojs.get_prop_ascii (t_to_js x4567) "day" in
            match Ojs.string_of_js x4568 with
            | "2-digit" -> `L_s0_2_digit
            | "numeric" -> `L_s6_numeric
            | _ -> assert false
        let (set_day : t -> [ `L_s0_2_digit  | `L_s6_numeric ] -> unit) =
          fun (x4569 : t) ->
            fun (x4570 : [ `L_s0_2_digit  | `L_s6_numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4569) "day"
                (match x4570 with
                 | `L_s0_2_digit -> Ojs.string_to_js "LS02Digit"
                 | `L_s6_numeric -> Ojs.string_to_js "LS6Numeric")
        let (get_hour : t -> [ `L_s0_2_digit  | `L_s6_numeric ]) =
          fun (x4571 : t) ->
            let x4572 = Ojs.get_prop_ascii (t_to_js x4571) "hour" in
            match Ojs.string_of_js x4572 with
            | "2-digit" -> `L_s0_2_digit
            | "numeric" -> `L_s6_numeric
            | _ -> assert false
        let (set_hour : t -> [ `L_s0_2_digit  | `L_s6_numeric ] -> unit) =
          fun (x4573 : t) ->
            fun (x4574 : [ `L_s0_2_digit  | `L_s6_numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4573) "hour"
                (match x4574 with
                 | `L_s0_2_digit -> Ojs.string_to_js "LS02Digit"
                 | `L_s6_numeric -> Ojs.string_to_js "LS6Numeric")
        let (get_minute : t -> [ `L_s0_2_digit  | `L_s6_numeric ]) =
          fun (x4575 : t) ->
            let x4576 = Ojs.get_prop_ascii (t_to_js x4575) "minute" in
            match Ojs.string_of_js x4576 with
            | "2-digit" -> `L_s0_2_digit
            | "numeric" -> `L_s6_numeric
            | _ -> assert false
        let (set_minute : t -> [ `L_s0_2_digit  | `L_s6_numeric ] -> unit) =
          fun (x4577 : t) ->
            fun (x4578 : [ `L_s0_2_digit  | `L_s6_numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4577) "minute"
                (match x4578 with
                 | `L_s0_2_digit -> Ojs.string_to_js "LS02Digit"
                 | `L_s6_numeric -> Ojs.string_to_js "LS6Numeric")
        let (get_second : t -> [ `L_s0_2_digit  | `L_s6_numeric ]) =
          fun (x4579 : t) ->
            let x4580 = Ojs.get_prop_ascii (t_to_js x4579) "second" in
            match Ojs.string_of_js x4580 with
            | "2-digit" -> `L_s0_2_digit
            | "numeric" -> `L_s6_numeric
            | _ -> assert false
        let (set_second : t -> [ `L_s0_2_digit  | `L_s6_numeric ] -> unit) =
          fun (x4581 : t) ->
            fun (x4582 : [ `L_s0_2_digit  | `L_s6_numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4581) "second"
                (match x4582 with
                 | `L_s0_2_digit -> Ojs.string_to_js "LS02Digit"
                 | `L_s6_numeric -> Ojs.string_to_js "LS6Numeric")
        let (get_timeZoneName : t -> [ `L_s3_long  | `L_s7_short ]) =
          fun (x4583 : t) ->
            let x4584 = Ojs.get_prop_ascii (t_to_js x4583) "timeZoneName" in
            match Ojs.string_of_js x4584 with
            | "long" -> `L_s3_long
            | "short" -> `L_s7_short
            | _ -> assert false
        let (set_timeZoneName : t -> [ `L_s3_long  | `L_s7_short ] -> unit) =
          fun (x4585 : t) ->
            fun (x4586 : [ `L_s3_long  | `L_s7_short ]) ->
              Ojs.set_prop_ascii (t_to_js x4585) "timeZoneName"
                (match x4586 with
                 | `L_s3_long -> Ojs.string_to_js "LS3Long"
                 | `L_s7_short -> Ojs.string_to_js "LS7Short")
        let (get_formatMatcher : t -> [ `L_s1_basic  | `L_s2_best_fit ]) =
          fun (x4587 : t) ->
            let x4588 = Ojs.get_prop_ascii (t_to_js x4587) "formatMatcher" in
            match Ojs.string_of_js x4588 with
            | "basic" -> `L_s1_basic
            | "best fit" -> `L_s2_best_fit
            | _ -> assert false
        let (set_formatMatcher :
          t -> [ `L_s1_basic  | `L_s2_best_fit ] -> unit) =
          fun (x4589 : t) ->
            fun (x4590 : [ `L_s1_basic  | `L_s2_best_fit ]) ->
              Ojs.set_prop_ascii (t_to_js x4589) "formatMatcher"
                (match x4590 with
                 | `L_s1_basic -> Ojs.string_to_js "LS1Basic"
                 | `L_s2_best_fit -> Ojs.string_to_js "LS2BestFit")
        let (get_hour12 : t -> bool) =
          fun (x4591 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4591) "hour12")
        let (set_hour12 : t -> bool -> unit) =
          fun (x4592 : t) ->
            fun (x4593 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4592) "hour12"
                (Ojs.bool_to_js x4593)
        let (get_timeZone : t -> string) =
          fun (x4594 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4594) "timeZone")
        let (set_timeZone : t -> string -> unit) =
          fun (x4595 : t) ->
            fun (x4596 : string) ->
              Ojs.set_prop_ascii (t_to_js x4595) "timeZone"
                (Ojs.string_to_js x4596)
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = _Intl_ResolvedDateTimeFormatOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4598 : Ojs.t) ->
            _Intl_ResolvedDateTimeFormatOptions_of_js x4598
        and t_to_js : t -> Ojs.t =
          fun (x4597 : _Intl_ResolvedDateTimeFormatOptions) ->
            _Intl_ResolvedDateTimeFormatOptions_to_js x4597
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x4600 : Ojs.t) -> t_of_js x4600
        and t_0_to_js : t_0 -> Ojs.t = fun (x4599 : t) -> t_to_js x4599
        let (get_locale : t -> string) =
          fun (x4601 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4601) "locale")
        let (set_locale : t -> string -> unit) =
          fun (x4602 : t) ->
            fun (x4603 : string) ->
              Ojs.set_prop_ascii (t_to_js x4602) "locale"
                (Ojs.string_to_js x4603)
        let (get_calendar : t -> string) =
          fun (x4604 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4604) "calendar")
        let (set_calendar : t -> string -> unit) =
          fun (x4605 : t) ->
            fun (x4606 : string) ->
              Ojs.set_prop_ascii (t_to_js x4605) "calendar"
                (Ojs.string_to_js x4606)
        let (get_numberingSystem : t -> string) =
          fun (x4607 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4607) "numberingSystem")
        let (set_numberingSystem : t -> string -> unit) =
          fun (x4608 : t) ->
            fun (x4609 : string) ->
              Ojs.set_prop_ascii (t_to_js x4608) "numberingSystem"
                (Ojs.string_to_js x4609)
        let (get_timeZone : t -> string) =
          fun (x4610 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4610) "timeZone")
        let (set_timeZone : t -> string -> unit) =
          fun (x4611 : t) ->
            fun (x4612 : string) ->
              Ojs.set_prop_ascii (t_to_js x4611) "timeZone"
                (Ojs.string_to_js x4612)
        let (get_hour12 : t -> bool) =
          fun (x4613 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4613) "hour12")
        let (set_hour12 : t -> bool -> unit) =
          fun (x4614 : t) ->
            fun (x4615 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4614) "hour12"
                (Ojs.bool_to_js x4615)
        let (get_weekday : t -> string) =
          fun (x4616 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4616) "weekday")
        let (set_weekday : t -> string -> unit) =
          fun (x4617 : t) ->
            fun (x4618 : string) ->
              Ojs.set_prop_ascii (t_to_js x4617) "weekday"
                (Ojs.string_to_js x4618)
        let (get_era : t -> string) =
          fun (x4619 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4619) "era")
        let (set_era : t -> string -> unit) =
          fun (x4620 : t) ->
            fun (x4621 : string) ->
              Ojs.set_prop_ascii (t_to_js x4620) "era"
                (Ojs.string_to_js x4621)
        let (get_year : t -> string) =
          fun (x4622 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4622) "year")
        let (set_year : t -> string -> unit) =
          fun (x4623 : t) ->
            fun (x4624 : string) ->
              Ojs.set_prop_ascii (t_to_js x4623) "year"
                (Ojs.string_to_js x4624)
        let (get_month : t -> string) =
          fun (x4625 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4625) "month")
        let (set_month : t -> string -> unit) =
          fun (x4626 : t) ->
            fun (x4627 : string) ->
              Ojs.set_prop_ascii (t_to_js x4626) "month"
                (Ojs.string_to_js x4627)
        let (get_day : t -> string) =
          fun (x4628 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4628) "day")
        let (set_day : t -> string -> unit) =
          fun (x4629 : t) ->
            fun (x4630 : string) ->
              Ojs.set_prop_ascii (t_to_js x4629) "day"
                (Ojs.string_to_js x4630)
        let (get_hour : t -> string) =
          fun (x4631 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4631) "hour")
        let (set_hour : t -> string -> unit) =
          fun (x4632 : t) ->
            fun (x4633 : string) ->
              Ojs.set_prop_ascii (t_to_js x4632) "hour"
                (Ojs.string_to_js x4633)
        let (get_minute : t -> string) =
          fun (x4634 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4634) "minute")
        let (set_minute : t -> string -> unit) =
          fun (x4635 : t) ->
            fun (x4636 : string) ->
              Ojs.set_prop_ascii (t_to_js x4635) "minute"
                (Ojs.string_to_js x4636)
        let (get_second : t -> string) =
          fun (x4637 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4637) "second")
        let (set_second : t -> string -> unit) =
          fun (x4638 : t) ->
            fun (x4639 : string) ->
              Ojs.set_prop_ascii (t_to_js x4638) "second"
                (Ojs.string_to_js x4639)
        let (get_timeZoneName : t -> string) =
          fun (x4640 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4640) "timeZoneName")
        let (set_timeZoneName : t -> string -> unit) =
          fun (x4641 : t) ->
            fun (x4642 : string) ->
              Ojs.set_prop_ascii (t_to_js x4641) "timeZoneName"
                (Ojs.string_to_js x4642)
      end
    module DateTimeFormat =
      struct
        type t = _Intl_DateTimeFormat
        let rec t_of_js : Ojs.t -> t =
          fun (x4644 : Ojs.t) -> _Intl_DateTimeFormat_of_js x4644
        and t_to_js : t -> Ojs.t =
          fun (x4643 : _Intl_DateTimeFormat) ->
            _Intl_DateTimeFormat_to_js x4643
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x4646 : Ojs.t) -> t_of_js x4646
        and t_0_to_js : t_0 -> Ojs.t = fun (x4645 : t) -> t_to_js x4645
        let (format : t -> ?date:_Date or_number -> unit -> string) =
          fun (x4651 : t) ->
            fun ?date:(x4647 : _Date or_number option) ->
              fun () ->
                Ojs.string_of_js
                  (let x4652 = t_to_js x4651 in
                   Ojs.call (Ojs.get_prop_ascii x4652 "format") "apply"
                     [|x4652;((let x4648 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4647 with
                                | Some x4649 ->
                                    ignore
                                      (Ojs.call x4648 "push"
                                         [|(or_number_to_js _Date_to_js x4649)|])
                                | None -> ());
                               x4648))|])
        let (resolvedOptions : t -> _Intl_ResolvedDateTimeFormatOptions) =
          fun (x4653 : t) ->
            _Intl_ResolvedDateTimeFormatOptions_of_js
              (Ojs.call (t_to_js x4653) "resolvedOptions" [||])
      end
    let (dateTimeFormat : anonymous_interface_3) =
      anonymous_interface_3_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
           "DateTimeFormat")
  end
