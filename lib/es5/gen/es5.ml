[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
type never = Ojs.t
let rec never_of_js : Ojs.t -> never = fun (x2 : Ojs.t) -> x2
and never_to_js : never -> Ojs.t = fun (x1 : Ojs.t) -> x1
module Never =
  struct
    type t = never
    let rec t_of_js : Ojs.t -> t = fun (x4 : Ojs.t) -> never_of_js x4
    and t_to_js : t -> Ojs.t = fun (x3 : never) -> never_to_js x3
    exception Ts_Never 
    let absurd _ = raise Ts_Never
  end
type any = Ojs.t
let rec any_of_js : Ojs.t -> any = fun (x6 : Ojs.t) -> x6
and any_to_js : any -> Ojs.t = fun (x5 : Ojs.t) -> x5
module Any =
  struct
    type t = any
    let rec t_of_js : Ojs.t -> t = fun (x8 : Ojs.t) -> any_of_js x8
    and t_to_js : t -> Ojs.t = fun (x7 : any) -> any_to_js x7
    let unsafe_cast x = Obj.magic x
  end
type unknown = Ojs.t
let rec unknown_of_js : Ojs.t -> unknown = fun (x10 : Ojs.t) -> x10
and unknown_to_js : unknown -> Ojs.t = fun (x9 : Ojs.t) -> x9
module Unknown =
  struct
    type t = unknown
    let rec t_of_js : Ojs.t -> t = fun (x12 : Ojs.t) -> unknown_of_js x12
    and t_to_js : t -> Ojs.t = fun (x11 : unknown) -> unknown_to_js x11
    let unsafe_cast x = Obj.magic x
  end
type -'a intf = Ojs.t
let intf_to_js _ x = (x : Ojs.t)
let intf_of_js _ x = (x : _ intf)
type ('t, +'a) enum = 'a
let enum_to_js (_ : 't -> Ojs.t) (f : 'a -> Ojs.t) (e : ('t, 'a) enum) =
  (f e : Ojs.t)
let enum_of_js (_ : Ojs.t -> 't) (f : Ojs.t -> 'a) (e : Ojs.t) =
  (f e : ('t, 'a) enum)
module Enum =
  struct
    type ('t, +'a) t = ('t, 'a) enum
    let t_to_js = enum_to_js
    let t_of_js = enum_of_js
    let get_value x = x
  end
type untyped_object = [ `Object ] intf
let rec untyped_object_of_js : Ojs.t -> untyped_object = Obj.magic
and untyped_object_to_js : untyped_object -> Ojs.t = Obj.magic
type untyped_function = [ `Function ] intf
let rec untyped_function_of_js : Ojs.t -> untyped_function = Obj.magic
and untyped_function_to_js : untyped_function -> Ojs.t = Obj.magic
type symbol = [ `Symbol ] intf
let rec symbol_of_js : Ojs.t -> symbol = Obj.magic
and symbol_to_js : symbol -> Ojs.t = Obj.magic
type regexp = [ `RegExp ] intf
let rec regexp_of_js : Ojs.t -> regexp = Obj.magic
and regexp_to_js : regexp -> Ojs.t = Obj.magic
type bigint = [ `BigInt ] intf
let rec bigint_of_js : Ojs.t -> bigint = Obj.magic
and bigint_to_js : bigint -> Ojs.t = Obj.magic
type 'a or_null = 'a option
let rec or_null_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_null = fun (type
  __a) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (x15 : Ojs.t) -> Ojs.option_of_js __a_of_js x15
and or_null_to_js : 'a . ('a -> Ojs.t) -> 'a or_null -> Ojs.t = fun (type
  __a) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (x13 : __a option) -> Ojs.option_to_js __a_to_js x13
type 'a or_undefined = 'a option
let rec or_undefined_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_undefined =
  fun (type __a) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (x19 : Ojs.t) -> Ojs.option_of_js __a_of_js x19
and or_undefined_to_js : 'a . ('a -> Ojs.t) -> 'a or_undefined -> Ojs.t = fun
  (type __a) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (x17 : __a option) -> Ojs.option_to_js __a_to_js x17
type 'a or_null_or_undefined = 'a option
let rec or_null_or_undefined_of_js :
  'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_null_or_undefined = fun (type __a) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (x23 : Ojs.t) -> Ojs.option_of_js __a_of_js x23
and or_null_or_undefined_to_js :
  'a . ('a -> Ojs.t) -> 'a or_null_or_undefined -> Ojs.t = fun (type __a) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (x21 : __a option) -> Ojs.option_to_js __a_to_js x21
type ('a, 'b) and_ = Ojs.t
let rec and__of_js :
  'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) and_ = fun
  (type __a) -> fun (type __b) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) -> fun (x26 : Ojs.t) -> x26
and and__to_js :
  'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) and_ -> Ojs.t = fun
  (type __a) -> fun (type __b) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) -> fun (x25 : Ojs.t) -> x25
module And =
  struct
    type ('a, 'b) t = ('a, 'b) and_
    let rec t_of_js :
      'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) t = fun
      (type __a) -> fun (type __b) ->
      fun (__a_of_js : Ojs.t -> __a) ->
        fun (__b_of_js : Ojs.t -> __b) ->
          fun (x30 : Ojs.t) -> and__of_js __a_of_js __b_of_js x30
    and t_to_js :
      'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) t -> Ojs.t = fun
      (type __a) -> fun (type __b) ->
      fun (__a_to_js : __a -> Ojs.t) ->
        fun (__b_to_js : __b -> Ojs.t) ->
          fun (x27 : (__a, __b) and_) -> and__to_js __a_to_js __b_to_js x27
    let car (x : ('a, 'b) t) = (Obj.magic x : 'a)
    let cdr (x : ('a, 'b) t) = (Obj.magic x : 'b)
  end
type ('a, 'b) intersection2 = ('b, 'a) and_
let rec intersection2_of_js :
  'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) intersection2 =
  fun (type __a) -> fun (type __b) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (x36 : Ojs.t) -> and__of_js __b_of_js __a_of_js x36
and intersection2_to_js :
  'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) intersection2 -> Ojs.t =
  fun (type __a) -> fun (type __b) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (x33 : (__b, __a) and_) -> and__to_js __b_to_js __a_to_js x33
type ('a, 'b, 'c) intersection3 = (('b, 'c) intersection2, 'a) and_
let rec intersection3_of_js :
  'a 'b 'c .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) -> (Ojs.t -> 'c) -> Ojs.t -> ('a, 'b, 'c) intersection3
  = fun (type __a) -> fun (type __b) -> fun (type __c) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (x44 : Ojs.t) ->
          and__of_js
            (fun (x45 : Ojs.t) -> intersection2_of_js __b_of_js __c_of_js x45)
            __a_of_js x44
and intersection3_to_js :
  'a 'b 'c .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) -> ('c -> Ojs.t) -> ('a, 'b, 'c) intersection3 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (x39 : ((__b, __c) intersection2, __a) and_) ->
          and__to_js
            (fun (x40 : (__b, __c) intersection2) ->
               intersection2_to_js __b_to_js __c_to_js x40) __a_to_js x39
type ('a, 'b, 'c, 'd) intersection4 = (('b, 'c, 'd) intersection3, 'a) and_
let rec intersection4_of_js :
  'a 'b 'c 'd .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) -> Ojs.t -> ('a, 'b, 'c, 'd) intersection4
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (x55 : Ojs.t) ->
            and__of_js
              (fun (x56 : Ojs.t) ->
                 intersection3_of_js __b_of_js __c_of_js __d_of_js x56)
              __a_of_js x55
and intersection4_to_js :
  'a 'b 'c 'd .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) -> ('a, 'b, 'c, 'd) intersection4 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (x49 : ((__b, __c, __d) intersection3, __a) and_) ->
            and__to_js
              (fun (x50 : (__b, __c, __d) intersection3) ->
                 intersection3_to_js __b_to_js __c_to_js __d_to_js x50)
              __a_to_js x49
type ('a, 'b, 'c, 'd, 'e) intersection5 =
  (('b, 'c, 'd, 'e) intersection4, 'a) and_
let rec intersection5_of_js :
  'a 'b 'c 'd 'e .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) -> Ojs.t -> ('a, 'b, 'c, 'd, 'e) intersection5
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (x68 : Ojs.t) ->
              and__of_js
                (fun (x69 : Ojs.t) ->
                   intersection4_of_js __b_of_js __c_of_js __d_of_js
                     __e_of_js x69) __a_of_js x68
and intersection5_to_js :
  'a 'b 'c 'd 'e .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) -> ('a, 'b, 'c, 'd, 'e) intersection5 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (x61 : ((__b, __c, __d, __e) intersection4, __a) and_) ->
              and__to_js
                (fun (x62 : (__b, __c, __d, __e) intersection4) ->
                   intersection4_to_js __b_to_js __c_to_js __d_to_js
                     __e_to_js x62) __a_to_js x61
type ('a, 'b, 'c, 'd, 'e, 'f) intersection6 =
  (('b, 'c, 'd, 'e, 'f) intersection5, 'a) and_
let rec intersection6_of_js :
  'a 'b 'c 'd 'e 'f .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f) intersection6
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (x83 : Ojs.t) ->
                and__of_js
                  (fun (x84 : Ojs.t) ->
                     intersection5_of_js __b_of_js __c_of_js __d_of_js
                       __e_of_js __f_of_js x84) __a_of_js x83
and intersection6_to_js :
  'a 'b 'c 'd 'e 'f .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('a, 'b, 'c, 'd, 'e, 'f) intersection6 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (x75 : ((__b, __c, __d, __e, __f) intersection5, __a) and_)
                ->
                and__to_js
                  (fun (x76 : (__b, __c, __d, __e, __f) intersection5) ->
                     intersection5_to_js __b_to_js __c_to_js __d_to_js
                       __e_to_js __f_to_js x76) __a_to_js x75
type ('a, 'b, 'c, 'd, 'e, 'f, 'g) intersection7 =
  (('b, 'c, 'd, 'e, 'f, 'g) intersection6, 'a) and_
let rec intersection7_of_js :
  'a 'b 'c 'd 'e 'f 'g .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                (Ojs.t -> 'g) ->
                  Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f, 'g) intersection7
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (__g_of_js : Ojs.t -> __g) ->
                fun (x100 : Ojs.t) ->
                  and__of_js
                    (fun (x101 : Ojs.t) ->
                       intersection6_of_js __b_of_js __c_of_js __d_of_js
                         __e_of_js __f_of_js __g_of_js x101) __a_of_js x100
and intersection7_to_js :
  'a 'b 'c 'd 'e 'f 'g .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('g -> Ojs.t) ->
                  ('a, 'b, 'c, 'd, 'e, 'f, 'g) intersection7 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (__g_to_js : __g -> Ojs.t) ->
                fun
                  (x91 :
                    ((__b, __c, __d, __e, __f, __g) intersection6, __a) and_)
                  ->
                  and__to_js
                    (fun (x92 : (__b, __c, __d, __e, __f, __g) intersection6)
                       ->
                       intersection6_to_js __b_to_js __c_to_js __d_to_js
                         __e_to_js __f_to_js __g_to_js x92) __a_to_js x91
type ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) intersection8 =
  (('b, 'c, 'd, 'e, 'f, 'g, 'h) intersection7, 'a) and_
let rec intersection8_of_js :
  'a 'b 'c 'd 'e 'f 'g 'h .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                (Ojs.t -> 'g) ->
                  (Ojs.t -> 'h) ->
                    Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) intersection8
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) -> fun (type __h) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (__g_of_js : Ojs.t -> __g) ->
                fun (__h_of_js : Ojs.t -> __h) ->
                  fun (x119 : Ojs.t) ->
                    and__of_js
                      (fun (x120 : Ojs.t) ->
                         intersection7_of_js __b_of_js __c_of_js __d_of_js
                           __e_of_js __f_of_js __g_of_js __h_of_js x120)
                      __a_of_js x119
and intersection8_to_js :
  'a 'b 'c 'd 'e 'f 'g 'h .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('g -> Ojs.t) ->
                  ('h -> Ojs.t) ->
                    ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) intersection8 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) -> fun (type __h) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (__g_to_js : __g -> Ojs.t) ->
                fun (__h_to_js : __h -> Ojs.t) ->
                  fun
                    (x109 :
                      ((__b, __c, __d, __e, __f, __g, __h) intersection7,
                        __a) and_)
                    ->
                    and__to_js
                      (fun
                         (x110 :
                           (__b, __c, __d, __e, __f, __g, __h) intersection7)
                         ->
                         intersection7_to_js __b_to_js __c_to_js __d_to_js
                           __e_to_js __f_to_js __g_to_js __h_to_js x110)
                      __a_to_js x109
module Intersection =
  struct
    let get_0 x = Obj.magic x
    let get_1 x = Obj.magic x
    let get_2 x = Obj.magic x
    let get_3 x = Obj.magic x
    let get_4 x = Obj.magic x
    let get_5 x = Obj.magic x
    let get_6 x = Obj.magic x
  end
type ('a, 'b) or_from_js =
  {
  a_of_js: Ojs.t -> 'a ;
  b_of_js: Ojs.t -> 'b ;
  value: Ojs.t }
type ('a, 'b) or_ =
  | A of 'a 
  | B of 'b 
  | FromJS of ('a, 'b) or_from_js 
let or__to_js a_to_js b_to_js =
  function | A a -> a_to_js a | B b -> b_to_js b | FromJS x -> x.value
let or__of_js a_of_js b_of_js value = FromJS { a_of_js; b_of_js; value }
module Or =
  struct
    type ('a, 'b) t = ('a, 'b) or_
    let rec t_of_js :
      'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) t = fun
      (type __a) -> fun (type __b) ->
      fun (__a_of_js : Ojs.t -> __a) ->
        fun (__b_of_js : Ojs.t -> __b) ->
          fun (x132 : Ojs.t) -> or__of_js __a_of_js __b_of_js x132
    and t_to_js :
      'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) t -> Ojs.t = fun
      (type __a) -> fun (type __b) ->
      fun (__a_to_js : __a -> Ojs.t) ->
        fun (__b_to_js : __b -> Ojs.t) ->
          fun (x129 : (__a, __b) or_) -> or__to_js __a_to_js __b_to_js x129
    let inl (x : 'a) = (A x : ('a, 'b) t)
    let inr (x : 'b) = (B x : ('a, 'b) t)
    let test ~is_left  ~is_right  =
      function
      | A a -> `Left a
      | B b -> `Right b
      | FromJS x ->
          if is_left x.value
          then `Left (x.a_of_js x.value)
          else
            if is_right x.value
            then `Right (x.b_of_js x.value)
            else `Other (x.value)
  end
type ('a, 'b) union2 = ('b, 'a) or_
let rec union2_of_js :
  'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) union2 = fun
  (type __a) -> fun (type __b) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (x138 : Ojs.t) -> or__of_js __b_of_js __a_of_js x138
and union2_to_js :
  'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) union2 -> Ojs.t = fun
  (type __a) -> fun (type __b) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (x135 : (__b, __a) or_) -> or__to_js __b_to_js __a_to_js x135
type ('a, 'b, 'c) union3 = (('b, 'c) union2, 'a) or_
let rec union3_of_js :
  'a 'b 'c .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) -> (Ojs.t -> 'c) -> Ojs.t -> ('a, 'b, 'c) union3
  = fun (type __a) -> fun (type __b) -> fun (type __c) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (x146 : Ojs.t) ->
          or__of_js
            (fun (x147 : Ojs.t) -> union2_of_js __b_of_js __c_of_js x147)
            __a_of_js x146
and union3_to_js :
  'a 'b 'c .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) -> ('c -> Ojs.t) -> ('a, 'b, 'c) union3 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (x141 : ((__b, __c) union2, __a) or_) ->
          or__to_js
            (fun (x142 : (__b, __c) union2) ->
               union2_to_js __b_to_js __c_to_js x142) __a_to_js x141
type ('a, 'b, 'c, 'd) union4 = (('b, 'c, 'd) union3, 'a) or_
let rec union4_of_js :
  'a 'b 'c 'd .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) -> (Ojs.t -> 'd) -> Ojs.t -> ('a, 'b, 'c, 'd) union4
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (x157 : Ojs.t) ->
            or__of_js
              (fun (x158 : Ojs.t) ->
                 union3_of_js __b_of_js __c_of_js __d_of_js x158) __a_of_js
              x157
and union4_to_js :
  'a 'b 'c 'd .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) -> ('d -> Ojs.t) -> ('a, 'b, 'c, 'd) union4 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (x151 : ((__b, __c, __d) union3, __a) or_) ->
            or__to_js
              (fun (x152 : (__b, __c, __d) union3) ->
                 union3_to_js __b_to_js __c_to_js __d_to_js x152) __a_to_js
              x151
type ('a, 'b, 'c, 'd, 'e) union5 = (('b, 'c, 'd, 'e) union4, 'a) or_
let rec union5_of_js :
  'a 'b 'c 'd 'e .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) -> Ojs.t -> ('a, 'b, 'c, 'd, 'e) union5
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (x170 : Ojs.t) ->
              or__of_js
                (fun (x171 : Ojs.t) ->
                   union4_of_js __b_of_js __c_of_js __d_of_js __e_of_js x171)
                __a_of_js x170
and union5_to_js :
  'a 'b 'c 'd 'e .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) -> ('a, 'b, 'c, 'd, 'e) union5 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (x163 : ((__b, __c, __d, __e) union4, __a) or_) ->
              or__to_js
                (fun (x164 : (__b, __c, __d, __e) union4) ->
                   union4_to_js __b_to_js __c_to_js __d_to_js __e_to_js x164)
                __a_to_js x163
type ('a, 'b, 'c, 'd, 'e, 'f) union6 = (('b, 'c, 'd, 'e, 'f) union5, 'a) or_
let rec union6_of_js :
  'a 'b 'c 'd 'e 'f .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) -> Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f) union6
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (x185 : Ojs.t) ->
                or__of_js
                  (fun (x186 : Ojs.t) ->
                     union5_of_js __b_of_js __c_of_js __d_of_js __e_of_js
                       __f_of_js x186) __a_of_js x185
and union6_to_js :
  'a 'b 'c 'd 'e 'f .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) -> ('a, 'b, 'c, 'd, 'e, 'f) union6 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (x177 : ((__b, __c, __d, __e, __f) union5, __a) or_) ->
                or__to_js
                  (fun (x178 : (__b, __c, __d, __e, __f) union5) ->
                     union5_to_js __b_to_js __c_to_js __d_to_js __e_to_js
                       __f_to_js x178) __a_to_js x177
type ('a, 'b, 'c, 'd, 'e, 'f, 'g) union7 =
  (('b, 'c, 'd, 'e, 'f, 'g) union6, 'a) or_
let rec union7_of_js :
  'a 'b 'c 'd 'e 'f 'g .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                (Ojs.t -> 'g) -> Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f, 'g) union7
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (__g_of_js : Ojs.t -> __g) ->
                fun (x202 : Ojs.t) ->
                  or__of_js
                    (fun (x203 : Ojs.t) ->
                       union6_of_js __b_of_js __c_of_js __d_of_js __e_of_js
                         __f_of_js __g_of_js x203) __a_of_js x202
and union7_to_js :
  'a 'b 'c 'd 'e 'f 'g .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('g -> Ojs.t) -> ('a, 'b, 'c, 'd, 'e, 'f, 'g) union7 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (__g_to_js : __g -> Ojs.t) ->
                fun (x193 : ((__b, __c, __d, __e, __f, __g) union6, __a) or_)
                  ->
                  or__to_js
                    (fun (x194 : (__b, __c, __d, __e, __f, __g) union6) ->
                       union6_to_js __b_to_js __c_to_js __d_to_js __e_to_js
                         __f_to_js __g_to_js x194) __a_to_js x193
type ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) union8 =
  (('b, 'c, 'd, 'e, 'f, 'g, 'h) union7, 'a) or_
let rec union8_of_js :
  'a 'b 'c 'd 'e 'f 'g 'h .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                (Ojs.t -> 'g) ->
                  (Ojs.t -> 'h) ->
                    Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) union8
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) -> fun (type __h) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (__g_of_js : Ojs.t -> __g) ->
                fun (__h_of_js : Ojs.t -> __h) ->
                  fun (x221 : Ojs.t) ->
                    or__of_js
                      (fun (x222 : Ojs.t) ->
                         union7_of_js __b_of_js __c_of_js __d_of_js __e_of_js
                           __f_of_js __g_of_js __h_of_js x222) __a_of_js x221
and union8_to_js :
  'a 'b 'c 'd 'e 'f 'g 'h .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('g -> Ojs.t) ->
                  ('h -> Ojs.t) ->
                    ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) union8 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) -> fun (type __h) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (__g_to_js : __g -> Ojs.t) ->
                fun (__h_to_js : __h -> Ojs.t) ->
                  fun
                    (x211 :
                      ((__b, __c, __d, __e, __f, __g, __h) union7, __a) or_)
                    ->
                    or__to_js
                      (fun
                         (x212 : (__b, __c, __d, __e, __f, __g, __h) union7)
                         ->
                         union7_to_js __b_to_js __c_to_js __d_to_js __e_to_js
                           __f_to_js __g_to_js __h_to_js x212) __a_to_js x211
module Union =
  struct
    let inject_0 x = Obj.magic x
    let inject_1 x = Obj.magic x
    let inject_2 x = Obj.magic x
    let inject_3 x = Obj.magic x
    let inject_4 x = Obj.magic x
    let inject_5 x = Obj.magic x
    let inject_6 x = Obj.magic x
  end
type 'a or_string = [ `String of string  | `Other of 'a ]
let rec or_string_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_string =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "string" -> `String (Ojs.string_of_js x)
      | _ -> `Other (a_of_js x)
and or_string_to_js : 'a . ('a -> Ojs.t) -> 'a or_string -> Ojs.t =
  fun a_to_js ->
    function | `String x -> Ojs.string_to_js x | `Other x -> a_to_js x
type 'a or_number = [ `Number of float  | `Other of 'a ]
let rec or_number_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_number =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "number" -> `Number (Ojs.float_of_js x)
      | _ -> `Other (a_of_js x)
and or_number_to_js : 'a . ('a -> Ojs.t) -> 'a or_number -> Ojs.t =
  fun a_to_js ->
    function | `Number x -> Ojs.float_to_js x | `Other x -> a_to_js x
type 'a or_boolean = [ `Boolean of bool  | `Other of 'a ]
let rec or_boolean_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_boolean =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "boolean" -> `Boolean (Ojs.bool_of_js x)
      | _ -> `Other (a_of_js x)
and or_boolean_to_js : 'a . ('a -> Ojs.t) -> 'a or_boolean -> Ojs.t =
  fun a_to_js ->
    function | `Boolean x -> Ojs.bool_to_js x | `Other x -> a_to_js x
type 'a or_symbol = [ `Symbol of symbol  | `Other of 'a ]
let rec or_symbol_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_symbol =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "symbol" -> `Symbol (symbol_of_js x)
      | _ -> `Other (a_of_js x)
and or_symbol_to_js : 'a . ('a -> Ojs.t) -> 'a or_symbol -> Ojs.t =
  fun a_to_js ->
    function | `Symbol x -> symbol_to_js x | `Other x -> a_to_js x
type 'a or_bigint = [ `BigInt of bigint  | `Other of 'a ]
let rec or_bigint_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_bigint =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "bigint" -> `BigInt (bigint_of_js x)
      | _ -> `Other (a_of_js x)
and or_bigint_to_js : 'a . ('a -> Ojs.t) -> 'a or_bigint -> Ojs.t =
  fun a_to_js ->
    function | `BigInt x -> bigint_to_js x | `Other x -> a_to_js x
let (is_array : Ojs.t -> bool) =
  fun (x231 : Ojs.t) ->
    Ojs.bool_of_js
      (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray" [|x231|])
type ('a, 't) or_array = [ `Array of 't list  | `Other of 'a ]
let rec or_array_of_js :
  'a 't . (Ojs.t -> 'a) -> (Ojs.t -> 't) -> Ojs.t -> ('a, 't) or_array =
  fun a_of_js ->
    fun t_of_js ->
      fun x ->
        if is_array x
        then `Array (Ojs.list_of_js t_of_js x)
        else `Other (a_of_js x)
and or_array_to_js :
  'a 't . ('a -> Ojs.t) -> ('t -> Ojs.t) -> ('a, 't) or_array -> Ojs.t =
  fun a_to_js ->
    fun t_to_js ->
      function | `Array x -> Ojs.list_to_js t_to_js x | `Other x -> a_to_js x
type ('a, 'cases) or_enum = [ `Enum of 'cases  | `Other of 'a ]
let rec or_enum_of_js :
  'a 'cases .
    (Ojs.t -> 'a) -> (Ojs.t -> 'cases) -> Ojs.t -> ('a, 'cases) or_enum
  =
  fun a_of_js ->
    fun cases_of_js ->
      fun x -> try `Enum (cases_of_js x) with | _ -> `Other (a_of_js x)
and or_enum_to_js :
  'a 'cases .
    ('a -> Ojs.t) -> ('cases -> Ojs.t) -> ('a, 'cases) or_enum -> Ojs.t
  =
  fun a_to_js ->
    fun cases_to_js ->
      function | `Enum cases -> cases_to_js cases | `Other x -> a_to_js x
external pure_js_expr : string -> Ojs.t = "caml_pure_js_expr"
module Internal =
  struct
    module AnonymousInterfaces =
      struct
        type anonymous_interface_0 = [ `anonymous_interface_0 ] intf
        let rec anonymous_interface_0_of_js : Ojs.t -> anonymous_interface_0
          = Obj.magic
        and anonymous_interface_0_to_js : anonymous_interface_0 -> Ojs.t =
          Obj.magic
        type anonymous_interface_1 = [ `anonymous_interface_1 ] intf
        let rec anonymous_interface_1_of_js : Ojs.t -> anonymous_interface_1
          = Obj.magic
        and anonymous_interface_1_to_js : anonymous_interface_1 -> Ojs.t =
          Obj.magic
        type anonymous_interface_2 = [ `anonymous_interface_2 ] intf
        let rec anonymous_interface_2_of_js : Ojs.t -> anonymous_interface_2
          = Obj.magic
        and anonymous_interface_2_to_js : anonymous_interface_2 -> Ojs.t =
          Obj.magic
        type anonymous_interface_3 = [ `anonymous_interface_3 ] intf
        let rec anonymous_interface_3_of_js : Ojs.t -> anonymous_interface_3
          = Obj.magic
        and anonymous_interface_3_to_js : anonymous_interface_3 -> Ojs.t =
          Obj.magic
        type anonymous_interface_4 = [ `anonymous_interface_4 ] intf
        let rec anonymous_interface_4_of_js : Ojs.t -> anonymous_interface_4
          = Obj.magic
        and anonymous_interface_4_to_js : anonymous_interface_4 -> Ojs.t =
          Obj.magic
        type ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5 =
          [ `anonymous_interface_5 ] intf
        let rec anonymous_interface_5_of_js :
          'A 'A0 'A1 'A2 'A3 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'A3) ->
                      (Ojs.t -> 'R) ->
                        Ojs.t ->
                          ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5
          =
          fun _A ->
            fun _A0 -> fun _A1 -> fun _A2 -> fun _A3 -> fun _R -> Obj.magic
        and anonymous_interface_5_to_js :
          'A 'A0 'A1 'A2 'A3 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('A3 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5 ->
                          Ojs.t
          =
          fun _A ->
            fun _A0 -> fun _A1 -> fun _A2 -> fun _A3 -> fun _R -> Obj.magic
        type ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6 =
          [ `anonymous_interface_6 ] intf
        let rec anonymous_interface_6_of_js :
          'A 'A0 'A1 'A2 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'R) ->
                      Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6
          = fun _A -> fun _A0 -> fun _A1 -> fun _A2 -> fun _R -> Obj.magic
        and anonymous_interface_6_to_js :
          'A 'A0 'A1 'A2 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('R -> Ojs.t) ->
                      ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6 -> Ojs.t
          = fun _A -> fun _A0 -> fun _A1 -> fun _A2 -> fun _R -> Obj.magic
        type ('A, 'A0, 'A1, 'R) anonymous_interface_7 =
          [ `anonymous_interface_7 ] intf
        let rec anonymous_interface_7_of_js :
          'A 'A0 'A1 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'R) ->
                    Ojs.t -> ('A, 'A0, 'A1, 'R) anonymous_interface_7
          = fun _A -> fun _A0 -> fun _A1 -> fun _R -> Obj.magic
        and anonymous_interface_7_to_js :
          'A 'A0 'A1 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('R -> Ojs.t) ->
                    ('A, 'A0, 'A1, 'R) anonymous_interface_7 -> Ojs.t
          = fun _A -> fun _A0 -> fun _A1 -> fun _R -> Obj.magic
        type ('A, 'A0, 'R) anonymous_interface_8 =
          [ `anonymous_interface_8 ] intf
        let rec anonymous_interface_8_of_js :
          'A 'A0 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) anonymous_interface_8
          = fun _A -> fun _A0 -> fun _R -> Obj.magic
        and anonymous_interface_8_to_js :
          'A 'A0 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('R -> Ojs.t) -> ('A, 'A0, 'R) anonymous_interface_8 -> Ojs.t
          = fun _A -> fun _A0 -> fun _R -> Obj.magic
        type ('A, 'R) anonymous_interface_9 = [ `anonymous_interface_9 ] intf
        let rec anonymous_interface_9_of_js :
          'A 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) anonymous_interface_9
          = fun _A -> fun _R -> Obj.magic
        and anonymous_interface_9_to_js :
          'A 'R .
            ('A -> Ojs.t) ->
              ('R -> Ojs.t) -> ('A, 'R) anonymous_interface_9 -> Ojs.t
          = fun _A -> fun _R -> Obj.magic
        type ('A, 'T) anonymous_interface_10 =
          [ `anonymous_interface_10 ] intf
        let rec anonymous_interface_10_of_js :
          'A 'T .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) anonymous_interface_10
          = fun _A -> fun _T -> Obj.magic
        and anonymous_interface_10_to_js :
          'A 'T .
            ('A -> Ojs.t) ->
              ('T -> Ojs.t) -> ('A, 'T) anonymous_interface_10 -> Ojs.t
          = fun _A -> fun _T -> Obj.magic
        type ('AX, 'R) anonymous_interface_11 =
          [ `anonymous_interface_11 ] intf
        let rec anonymous_interface_11_of_js :
          'AX 'R .
            (Ojs.t -> 'AX) ->
              (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) anonymous_interface_11
          = fun _AX -> fun _R -> Obj.magic
        and anonymous_interface_11_to_js :
          'AX 'R .
            ('AX -> Ojs.t) ->
              ('R -> Ojs.t) -> ('AX, 'R) anonymous_interface_11 -> Ojs.t
          = fun _AX -> fun _R -> Obj.magic
        type 'T anonymous_interface_12 = [ `anonymous_interface_12 ] intf
        let rec anonymous_interface_12_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T anonymous_interface_12 =
          fun _T -> Obj.magic
        and anonymous_interface_12_to_js :
          'T . ('T -> Ojs.t) -> 'T anonymous_interface_12 -> Ojs.t =
          fun _T -> Obj.magic
      end
    module Types =
      struct
        open AnonymousInterfaces
        type 'T _Array = [ `Array of 'T ] intf
        and _ArrayBuffer = [ `ArrayBuffer ] intf
        and _ArrayBufferConstructor = [ `ArrayBufferConstructor ] intf
        and _ArrayBufferTypes = [ `ArrayBufferTypes ] intf
        and _ArrayBufferView = [ `ArrayBufferView ] intf
        and _ArrayConstructor = [ `ArrayConstructor ] intf
        and _Boolean = [ `Boolean ] intf
        and _BooleanConstructor = [ `BooleanConstructor ] intf
        and _CallableFunction = [ `CallableFunction  | `Function ] intf
        and _ClassDecorator = [ `ClassDecorator ] intf
        and 'T _ConcatArray = [ `ConcatArray of 'T ] intf
        and 'T _ConstructorParameters = any
        and _DataView = [ `DataView ] intf
        and _DataViewConstructor = [ `DataViewConstructor ] intf
        and _Date = [ `Date ] intf
        and _DateConstructor = [ `DateConstructor ] intf
        and _Error = [ `Error ] intf
        and _ErrorConstructor = [ `ErrorConstructor ] intf
        and _EvalError = [ `EvalError  | `Error ] intf
        and _EvalErrorConstructor =
          [ `EvalErrorConstructor  | `ErrorConstructor ] intf
        and ('T, 'U) _Exclude = any
        and ('T, 'U) _Extract = any
        and _Float32Array = [ `Float32Array ] intf
        and _Float32ArrayConstructor = [ `Float32ArrayConstructor ] intf
        and _Float64Array = [ `Float64Array ] intf
        and _Float64ArrayConstructor = [ `Float64ArrayConstructor ] intf
        and _Function = untyped_function
        and _FunctionConstructor = [ `FunctionConstructor ] intf
        and _IArguments = [ `IArguments ] intf
        and _ImportMeta = [ `ImportMeta ] intf
        and 'T _InstanceType = any
        and _Int16Array = [ `Int16Array ] intf
        and _Int16ArrayConstructor = [ `Int16ArrayConstructor ] intf
        and _Int32Array = [ `Int32Array ] intf
        and _Int32ArrayConstructor = [ `Int32ArrayConstructor ] intf
        and _Int8Array = [ `Int8Array ] intf
        and _Int8ArrayConstructor = [ `Int8ArrayConstructor ] intf
        and _Intl_Collator = [ `Intl_Collator ] intf
        and _Intl_CollatorOptions = [ `Intl_CollatorOptions ] intf
        and _Intl_DateTimeFormat = [ `Intl_DateTimeFormat ] intf
        and _Intl_DateTimeFormatOptions =
          [ `Intl_DateTimeFormatOptions ] intf
        and _Intl_NumberFormat = [ `Intl_NumberFormat ] intf
        and _Intl_NumberFormatOptions = [ `Intl_NumberFormatOptions ] intf
        and _Intl_ResolvedCollatorOptions =
          [ `Intl_ResolvedCollatorOptions ] intf
        and _Intl_ResolvedDateTimeFormatOptions =
          [ `Intl_ResolvedDateTimeFormatOptions ] intf
        and _Intl_ResolvedNumberFormatOptions =
          [ `Intl_ResolvedNumberFormatOptions ] intf
        and _JSON = [ `JSON ] intf
        and _Math = [ `Math ] intf
        and _MethodDecorator = [ `MethodDecorator ] intf
        and _NewableFunction = [ `NewableFunction  | `Function ] intf
        and 'T _NonNullable = any
        and _Number = [ `Number ] intf
        and _NumberConstructor = [ `NumberConstructor ] intf
        and _Object = untyped_object
        and _ObjectConstructor = [ `ObjectConstructor ] intf
        and ('T, 'K) _Omit = ('T, (any, 'K) _Exclude) _Pick
        and 'T _OmitThisParameter = any
        and _ParameterDecorator = [ `ParameterDecorator ] intf
        and 'T _Parameters = any
        and 'T _Partial = any
        and ('T, 'K) _Pick = any
        and 'T _Promise = [ `Promise of 'T ] intf
        and _PropertyDecorator = [ `PropertyDecorator ] intf
        and _PropertyDescriptor = [ `PropertyDescriptor ] intf
        and _PropertyDescriptorMap = [ `PropertyDescriptorMap ] intf
        and _PropertyKey = symbol or_string or_number
        and _RangeError = [ `RangeError  | `Error ] intf
        and _RangeErrorConstructor =
          [ `RangeErrorConstructor  | `ErrorConstructor ] intf
        and 'T _Readonly = any
        and 'T _ReadonlyArray = [ `ReadonlyArray of 'T ] intf
        and ('K, 'T) _Record = any
        and _ReferenceError = [ `ReferenceError  | `Error ] intf
        and _ReferenceErrorConstructor =
          [ `ReferenceErrorConstructor  | `ErrorConstructor ] intf
        and _RegExp = regexp
        and _RegExpConstructor = [ `RegExpConstructor ] intf
        and _RegExpExecArray = [ `RegExpExecArray  | `Array of string ] intf
        and _RegExpMatchArray =
          [ `RegExpMatchArray  | `Array of string ] intf
        and 'T _Required = any
        and 'T _ReturnType = any
        and _String = [ `String ] intf
        and _StringConstructor = [ `StringConstructor ] intf
        and _Symbol = symbol
        and _SyntaxError = [ `SyntaxError  | `Error ] intf
        and _SyntaxErrorConstructor =
          [ `SyntaxErrorConstructor  | `ErrorConstructor ] intf
        and _TemplateStringsArray =
          [ `TemplateStringsArray  | `ReadonlyArray of string ] intf
        and 'T _ThisParameterType = any
        and 'T _ThisType = [ `ThisType of 'T ] intf
        and _TypeError = [ `TypeError  | `Error ] intf
        and _TypeErrorConstructor =
          [ `TypeErrorConstructor  | `ErrorConstructor ] intf
        and 'T _TypedPropertyDescriptor =
          [ `TypedPropertyDescriptor of 'T ] intf
        and _URIError = [ `URIError  | `Error ] intf
        and _URIErrorConstructor =
          [ `URIErrorConstructor  | `ErrorConstructor ] intf
        and _Uint16Array = [ `Uint16Array ] intf
        and _Uint16ArrayConstructor = [ `Uint16ArrayConstructor ] intf
        and _Uint32Array = [ `Uint32Array ] intf
        and _Uint32ArrayConstructor = [ `Uint32ArrayConstructor ] intf
        and _Uint8Array = [ `Uint8Array ] intf
        and _Uint8ArrayConstructor = [ `Uint8ArrayConstructor ] intf
        and _Uint8ClampedArray = [ `Uint8ClampedArray ] intf
        and _Uint8ClampedArrayConstructor =
          [ `Uint8ClampedArrayConstructor ] intf
        let rec _Array_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Array =
          fun _T -> Obj.magic
        and _Array_to_js : 'T . ('T -> Ojs.t) -> 'T _Array -> Ojs.t =
          fun _T -> Obj.magic
        and _ArrayBuffer_of_js : Ojs.t -> _ArrayBuffer = Obj.magic
        and _ArrayBuffer_to_js : _ArrayBuffer -> Ojs.t = Obj.magic
        and _ArrayBufferConstructor_of_js : Ojs.t -> _ArrayBufferConstructor
          = Obj.magic
        and _ArrayBufferConstructor_to_js : _ArrayBufferConstructor -> Ojs.t
          = Obj.magic
        and _ArrayBufferTypes_of_js : Ojs.t -> _ArrayBufferTypes = Obj.magic
        and _ArrayBufferTypes_to_js : _ArrayBufferTypes -> Ojs.t = Obj.magic
        and _ArrayBufferView_of_js : Ojs.t -> _ArrayBufferView = Obj.magic
        and _ArrayBufferView_to_js : _ArrayBufferView -> Ojs.t = Obj.magic
        and _ArrayConstructor_of_js : Ojs.t -> _ArrayConstructor = Obj.magic
        and _ArrayConstructor_to_js : _ArrayConstructor -> Ojs.t = Obj.magic
        and _Boolean_of_js : Ojs.t -> _Boolean = Obj.magic
        and _Boolean_to_js : _Boolean -> Ojs.t = Obj.magic
        and _BooleanConstructor_of_js : Ojs.t -> _BooleanConstructor =
          Obj.magic
        and _BooleanConstructor_to_js : _BooleanConstructor -> Ojs.t =
          Obj.magic
        and _CallableFunction_of_js : Ojs.t -> _CallableFunction = Obj.magic
        and _CallableFunction_to_js : _CallableFunction -> Ojs.t = Obj.magic
        and _ClassDecorator_of_js : Ojs.t -> _ClassDecorator = Obj.magic
        and _ClassDecorator_to_js : _ClassDecorator -> Ojs.t = Obj.magic
        and _ConcatArray_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ConcatArray =
          fun _T -> Obj.magic
        and _ConcatArray_to_js :
          'T . ('T -> Ojs.t) -> 'T _ConcatArray -> Ojs.t =
          fun _T -> Obj.magic
        and _ConstructorParameters_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ConstructorParameters = fun
          (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x233 : Ojs.t) -> any_of_js x233
        and _ConstructorParameters_to_js :
          'T . ('T -> Ojs.t) -> 'T _ConstructorParameters -> Ojs.t = fun
          (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x232 : any) -> any_to_js x232
        and _DataView_of_js : Ojs.t -> _DataView = Obj.magic
        and _DataView_to_js : _DataView -> Ojs.t = Obj.magic
        and _DataViewConstructor_of_js : Ojs.t -> _DataViewConstructor =
          Obj.magic
        and _DataViewConstructor_to_js : _DataViewConstructor -> Ojs.t =
          Obj.magic
        and _Date_of_js : Ojs.t -> _Date = Obj.magic
        and _Date_to_js : _Date -> Ojs.t = Obj.magic
        and _DateConstructor_of_js : Ojs.t -> _DateConstructor = Obj.magic
        and _DateConstructor_to_js : _DateConstructor -> Ojs.t = Obj.magic
        and _Error_of_js : Ojs.t -> _Error = Obj.magic
        and _Error_to_js : _Error -> Ojs.t = Obj.magic
        and _ErrorConstructor_of_js : Ojs.t -> _ErrorConstructor = Obj.magic
        and _ErrorConstructor_to_js : _ErrorConstructor -> Ojs.t = Obj.magic
        and _EvalError_of_js : Ojs.t -> _EvalError = Obj.magic
        and _EvalError_to_js : _EvalError -> Ojs.t = Obj.magic
        and _EvalErrorConstructor_of_js : Ojs.t -> _EvalErrorConstructor =
          Obj.magic
        and _EvalErrorConstructor_to_js : _EvalErrorConstructor -> Ojs.t =
          Obj.magic
        and _Exclude_of_js :
          'T 'U .
            (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) _Exclude
          = fun (type __T) -> fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x235 : Ojs.t) -> any_of_js x235
        and _Exclude_to_js :
          'T 'U .
            ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) _Exclude -> Ojs.t
          = fun (type __T) -> fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x234 : any) -> any_to_js x234
        and _Extract_of_js :
          'T 'U .
            (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) _Extract
          = fun (type __T) -> fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x237 : Ojs.t) -> any_of_js x237
        and _Extract_to_js :
          'T 'U .
            ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) _Extract -> Ojs.t
          = fun (type __T) -> fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x236 : any) -> any_to_js x236
        and _Float32Array_of_js : Ojs.t -> _Float32Array = Obj.magic
        and _Float32Array_to_js : _Float32Array -> Ojs.t = Obj.magic
        and _Float32ArrayConstructor_of_js :
          Ojs.t -> _Float32ArrayConstructor = Obj.magic
        and _Float32ArrayConstructor_to_js :
          _Float32ArrayConstructor -> Ojs.t = Obj.magic
        and _Float64Array_of_js : Ojs.t -> _Float64Array = Obj.magic
        and _Float64Array_to_js : _Float64Array -> Ojs.t = Obj.magic
        and _Float64ArrayConstructor_of_js :
          Ojs.t -> _Float64ArrayConstructor = Obj.magic
        and _Float64ArrayConstructor_to_js :
          _Float64ArrayConstructor -> Ojs.t = Obj.magic
        and _Function_of_js : Ojs.t -> _Function =
          fun (x239 : Ojs.t) -> untyped_function_of_js x239
        and _Function_to_js : _Function -> Ojs.t =
          fun (x238 : untyped_function) -> untyped_function_to_js x238
        and _FunctionConstructor_of_js : Ojs.t -> _FunctionConstructor =
          Obj.magic
        and _FunctionConstructor_to_js : _FunctionConstructor -> Ojs.t =
          Obj.magic
        and _IArguments_of_js : Ojs.t -> _IArguments = Obj.magic
        and _IArguments_to_js : _IArguments -> Ojs.t = Obj.magic
        and _ImportMeta_of_js : Ojs.t -> _ImportMeta = Obj.magic
        and _ImportMeta_to_js : _ImportMeta -> Ojs.t = Obj.magic
        and _InstanceType_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _InstanceType = fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x241 : Ojs.t) -> any_of_js x241
        and _InstanceType_to_js :
          'T . ('T -> Ojs.t) -> 'T _InstanceType -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x240 : any) -> any_to_js x240
        and _Int16Array_of_js : Ojs.t -> _Int16Array = Obj.magic
        and _Int16Array_to_js : _Int16Array -> Ojs.t = Obj.magic
        and _Int16ArrayConstructor_of_js : Ojs.t -> _Int16ArrayConstructor =
          Obj.magic
        and _Int16ArrayConstructor_to_js : _Int16ArrayConstructor -> Ojs.t =
          Obj.magic
        and _Int32Array_of_js : Ojs.t -> _Int32Array = Obj.magic
        and _Int32Array_to_js : _Int32Array -> Ojs.t = Obj.magic
        and _Int32ArrayConstructor_of_js : Ojs.t -> _Int32ArrayConstructor =
          Obj.magic
        and _Int32ArrayConstructor_to_js : _Int32ArrayConstructor -> Ojs.t =
          Obj.magic
        and _Int8Array_of_js : Ojs.t -> _Int8Array = Obj.magic
        and _Int8Array_to_js : _Int8Array -> Ojs.t = Obj.magic
        and _Int8ArrayConstructor_of_js : Ojs.t -> _Int8ArrayConstructor =
          Obj.magic
        and _Int8ArrayConstructor_to_js : _Int8ArrayConstructor -> Ojs.t =
          Obj.magic
        and _Intl_Collator_of_js : Ojs.t -> _Intl_Collator = Obj.magic
        and _Intl_Collator_to_js : _Intl_Collator -> Ojs.t = Obj.magic
        and _Intl_CollatorOptions_of_js : Ojs.t -> _Intl_CollatorOptions =
          Obj.magic
        and _Intl_CollatorOptions_to_js : _Intl_CollatorOptions -> Ojs.t =
          Obj.magic
        and _Intl_DateTimeFormat_of_js : Ojs.t -> _Intl_DateTimeFormat =
          Obj.magic
        and _Intl_DateTimeFormat_to_js : _Intl_DateTimeFormat -> Ojs.t =
          Obj.magic
        and _Intl_DateTimeFormatOptions_of_js :
          Ojs.t -> _Intl_DateTimeFormatOptions = Obj.magic
        and _Intl_DateTimeFormatOptions_to_js :
          _Intl_DateTimeFormatOptions -> Ojs.t = Obj.magic
        and _Intl_NumberFormat_of_js : Ojs.t -> _Intl_NumberFormat =
          Obj.magic
        and _Intl_NumberFormat_to_js : _Intl_NumberFormat -> Ojs.t =
          Obj.magic
        and _Intl_NumberFormatOptions_of_js :
          Ojs.t -> _Intl_NumberFormatOptions = Obj.magic
        and _Intl_NumberFormatOptions_to_js :
          _Intl_NumberFormatOptions -> Ojs.t = Obj.magic
        and _Intl_ResolvedCollatorOptions_of_js :
          Ojs.t -> _Intl_ResolvedCollatorOptions = Obj.magic
        and _Intl_ResolvedCollatorOptions_to_js :
          _Intl_ResolvedCollatorOptions -> Ojs.t = Obj.magic
        and _Intl_ResolvedDateTimeFormatOptions_of_js :
          Ojs.t -> _Intl_ResolvedDateTimeFormatOptions = Obj.magic
        and _Intl_ResolvedDateTimeFormatOptions_to_js :
          _Intl_ResolvedDateTimeFormatOptions -> Ojs.t = Obj.magic
        and _Intl_ResolvedNumberFormatOptions_of_js :
          Ojs.t -> _Intl_ResolvedNumberFormatOptions = Obj.magic
        and _Intl_ResolvedNumberFormatOptions_to_js :
          _Intl_ResolvedNumberFormatOptions -> Ojs.t = Obj.magic
        and _JSON_of_js : Ojs.t -> _JSON = Obj.magic
        and _JSON_to_js : _JSON -> Ojs.t = Obj.magic
        and _Math_of_js : Ojs.t -> _Math = Obj.magic
        and _Math_to_js : _Math -> Ojs.t = Obj.magic
        and _MethodDecorator_of_js : Ojs.t -> _MethodDecorator = Obj.magic
        and _MethodDecorator_to_js : _MethodDecorator -> Ojs.t = Obj.magic
        and _NewableFunction_of_js : Ojs.t -> _NewableFunction = Obj.magic
        and _NewableFunction_to_js : _NewableFunction -> Ojs.t = Obj.magic
        and _NonNullable_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _NonNullable = fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x243 : Ojs.t) -> any_of_js x243
        and _NonNullable_to_js :
          'T . ('T -> Ojs.t) -> 'T _NonNullable -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x242 : any) -> any_to_js x242
        and _Number_of_js : Ojs.t -> _Number = Obj.magic
        and _Number_to_js : _Number -> Ojs.t = Obj.magic
        and _NumberConstructor_of_js : Ojs.t -> _NumberConstructor =
          Obj.magic
        and _NumberConstructor_to_js : _NumberConstructor -> Ojs.t =
          Obj.magic
        and _Object_of_js : Ojs.t -> _Object =
          fun (x245 : Ojs.t) -> untyped_object_of_js x245
        and _Object_to_js : _Object -> Ojs.t =
          fun (x244 : untyped_object) -> untyped_object_to_js x244
        and _ObjectConstructor_of_js : Ojs.t -> _ObjectConstructor =
          Obj.magic
        and _ObjectConstructor_to_js : _ObjectConstructor -> Ojs.t =
          Obj.magic
        and _Omit_of_js :
          'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) _Omit =
          fun (type __T) -> fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x251 : Ojs.t) ->
                _Pick_of_js __T_of_js
                  (fun (x253 : Ojs.t) ->
                     _Exclude_of_js any_of_js __K_of_js x253) x251
        and _Omit_to_js :
          'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) _Omit -> Ojs.t =
          fun (type __T) -> fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x246 : (__T, (any, __K) _Exclude) _Pick) ->
                _Pick_to_js __T_to_js
                  (fun (x248 : (any, __K) _Exclude) ->
                     _Exclude_to_js any_to_js __K_to_js x248) x246
        and _OmitThisParameter_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _OmitThisParameter = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x257 : Ojs.t) -> any_of_js x257
        and _OmitThisParameter_to_js :
          'T . ('T -> Ojs.t) -> 'T _OmitThisParameter -> Ojs.t = fun (type
          __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x256 : any) -> any_to_js x256
        and _ParameterDecorator_of_js : Ojs.t -> _ParameterDecorator =
          Obj.magic
        and _ParameterDecorator_to_js : _ParameterDecorator -> Ojs.t =
          Obj.magic
        and _Parameters_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Parameters
          = fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x259 : Ojs.t) -> any_of_js x259
        and _Parameters_to_js : 'T . ('T -> Ojs.t) -> 'T _Parameters -> Ojs.t
          = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x258 : any) -> any_to_js x258
        and _Partial_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Partial = fun
          (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x261 : Ojs.t) -> any_of_js x261
        and _Partial_to_js : 'T . ('T -> Ojs.t) -> 'T _Partial -> Ojs.t = fun
          (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x260 : any) -> any_to_js x260
        and _Pick_of_js :
          'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) _Pick =
          fun (type __T) -> fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x263 : Ojs.t) -> any_of_js x263
        and _Pick_to_js :
          'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) _Pick -> Ojs.t =
          fun (type __T) -> fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x262 : any) -> any_to_js x262
        and _Promise_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Promise =
          fun _T -> Obj.magic
        and _Promise_to_js : 'T . ('T -> Ojs.t) -> 'T _Promise -> Ojs.t =
          fun _T -> Obj.magic
        and _PropertyDecorator_of_js : Ojs.t -> _PropertyDecorator =
          Obj.magic
        and _PropertyDecorator_to_js : _PropertyDecorator -> Ojs.t =
          Obj.magic
        and _PropertyDescriptor_of_js : Ojs.t -> _PropertyDescriptor =
          Obj.magic
        and _PropertyDescriptor_to_js : _PropertyDescriptor -> Ojs.t =
          Obj.magic
        and _PropertyDescriptorMap_of_js : Ojs.t -> _PropertyDescriptorMap =
          Obj.magic
        and _PropertyDescriptorMap_to_js : _PropertyDescriptorMap -> Ojs.t =
          Obj.magic
        and _PropertyKey_of_js : Ojs.t -> _PropertyKey =
          fun (x267 : Ojs.t) ->
            or_number_of_js
              (fun (x268 : Ojs.t) -> or_string_of_js symbol_of_js x268) x267
        and _PropertyKey_to_js : _PropertyKey -> Ojs.t =
          fun (x264 : symbol or_string or_number) ->
            or_number_to_js
              (fun (x265 : symbol or_string) ->
                 or_string_to_js symbol_to_js x265) x264
        and _RangeError_of_js : Ojs.t -> _RangeError = Obj.magic
        and _RangeError_to_js : _RangeError -> Ojs.t = Obj.magic
        and _RangeErrorConstructor_of_js : Ojs.t -> _RangeErrorConstructor =
          Obj.magic
        and _RangeErrorConstructor_to_js : _RangeErrorConstructor -> Ojs.t =
          Obj.magic
        and _Readonly_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Readonly =
          fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x271 : Ojs.t) -> any_of_js x271
        and _Readonly_to_js : 'T . ('T -> Ojs.t) -> 'T _Readonly -> Ojs.t =
          fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x270 : any) -> any_to_js x270
        and _ReadonlyArray_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ReadonlyArray =
          fun _T -> Obj.magic
        and _ReadonlyArray_to_js :
          'T . ('T -> Ojs.t) -> 'T _ReadonlyArray -> Ojs.t =
          fun _T -> Obj.magic
        and _Record_of_js :
          'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) _Record
          = fun (type __K) -> fun (type __T) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x273 : Ojs.t) -> any_of_js x273
        and _Record_to_js :
          'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) _Record -> Ojs.t
          = fun (type __K) -> fun (type __T) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x272 : any) -> any_to_js x272
        and _ReferenceError_of_js : Ojs.t -> _ReferenceError = Obj.magic
        and _ReferenceError_to_js : _ReferenceError -> Ojs.t = Obj.magic
        and _ReferenceErrorConstructor_of_js :
          Ojs.t -> _ReferenceErrorConstructor = Obj.magic
        and _ReferenceErrorConstructor_to_js :
          _ReferenceErrorConstructor -> Ojs.t = Obj.magic
        and _RegExp_of_js : Ojs.t -> _RegExp =
          fun (x275 : Ojs.t) -> regexp_of_js x275
        and _RegExp_to_js : _RegExp -> Ojs.t =
          fun (x274 : regexp) -> regexp_to_js x274
        and _RegExpConstructor_of_js : Ojs.t -> _RegExpConstructor =
          Obj.magic
        and _RegExpConstructor_to_js : _RegExpConstructor -> Ojs.t =
          Obj.magic
        and _RegExpExecArray_of_js : Ojs.t -> _RegExpExecArray = Obj.magic
        and _RegExpExecArray_to_js : _RegExpExecArray -> Ojs.t = Obj.magic
        and _RegExpMatchArray_of_js : Ojs.t -> _RegExpMatchArray = Obj.magic
        and _RegExpMatchArray_to_js : _RegExpMatchArray -> Ojs.t = Obj.magic
        and _Required_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Required =
          fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x277 : Ojs.t) -> any_of_js x277
        and _Required_to_js : 'T . ('T -> Ojs.t) -> 'T _Required -> Ojs.t =
          fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x276 : any) -> any_to_js x276
        and _ReturnType_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ReturnType
          = fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x279 : Ojs.t) -> any_of_js x279
        and _ReturnType_to_js : 'T . ('T -> Ojs.t) -> 'T _ReturnType -> Ojs.t
          = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x278 : any) -> any_to_js x278
        and _String_of_js : Ojs.t -> _String = Obj.magic
        and _String_to_js : _String -> Ojs.t = Obj.magic
        and _StringConstructor_of_js : Ojs.t -> _StringConstructor =
          Obj.magic
        and _StringConstructor_to_js : _StringConstructor -> Ojs.t =
          Obj.magic
        and _Symbol_of_js : Ojs.t -> _Symbol =
          fun (x281 : Ojs.t) -> symbol_of_js x281
        and _Symbol_to_js : _Symbol -> Ojs.t =
          fun (x280 : symbol) -> symbol_to_js x280
        and _SyntaxError_of_js : Ojs.t -> _SyntaxError = Obj.magic
        and _SyntaxError_to_js : _SyntaxError -> Ojs.t = Obj.magic
        and _SyntaxErrorConstructor_of_js : Ojs.t -> _SyntaxErrorConstructor
          = Obj.magic
        and _SyntaxErrorConstructor_to_js : _SyntaxErrorConstructor -> Ojs.t
          = Obj.magic
        and _TemplateStringsArray_of_js : Ojs.t -> _TemplateStringsArray =
          Obj.magic
        and _TemplateStringsArray_to_js : _TemplateStringsArray -> Ojs.t =
          Obj.magic
        and _ThisParameterType_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ThisParameterType = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x283 : Ojs.t) -> any_of_js x283
        and _ThisParameterType_to_js :
          'T . ('T -> Ojs.t) -> 'T _ThisParameterType -> Ojs.t = fun (type
          __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x282 : any) -> any_to_js x282
        and _ThisType_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ThisType =
          fun _T -> Obj.magic
        and _ThisType_to_js : 'T . ('T -> Ojs.t) -> 'T _ThisType -> Ojs.t =
          fun _T -> Obj.magic
        and _TypeError_of_js : Ojs.t -> _TypeError = Obj.magic
        and _TypeError_to_js : _TypeError -> Ojs.t = Obj.magic
        and _TypeErrorConstructor_of_js : Ojs.t -> _TypeErrorConstructor =
          Obj.magic
        and _TypeErrorConstructor_to_js : _TypeErrorConstructor -> Ojs.t =
          Obj.magic
        and _TypedPropertyDescriptor_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _TypedPropertyDescriptor =
          fun _T -> Obj.magic
        and _TypedPropertyDescriptor_to_js :
          'T . ('T -> Ojs.t) -> 'T _TypedPropertyDescriptor -> Ojs.t =
          fun _T -> Obj.magic
        and _URIError_of_js : Ojs.t -> _URIError = Obj.magic
        and _URIError_to_js : _URIError -> Ojs.t = Obj.magic
        and _URIErrorConstructor_of_js : Ojs.t -> _URIErrorConstructor =
          Obj.magic
        and _URIErrorConstructor_to_js : _URIErrorConstructor -> Ojs.t =
          Obj.magic
        and _Uint16Array_of_js : Ojs.t -> _Uint16Array = Obj.magic
        and _Uint16Array_to_js : _Uint16Array -> Ojs.t = Obj.magic
        and _Uint16ArrayConstructor_of_js : Ojs.t -> _Uint16ArrayConstructor
          = Obj.magic
        and _Uint16ArrayConstructor_to_js : _Uint16ArrayConstructor -> Ojs.t
          = Obj.magic
        and _Uint32Array_of_js : Ojs.t -> _Uint32Array = Obj.magic
        and _Uint32Array_to_js : _Uint32Array -> Ojs.t = Obj.magic
        and _Uint32ArrayConstructor_of_js : Ojs.t -> _Uint32ArrayConstructor
          = Obj.magic
        and _Uint32ArrayConstructor_to_js : _Uint32ArrayConstructor -> Ojs.t
          = Obj.magic
        and _Uint8Array_of_js : Ojs.t -> _Uint8Array = Obj.magic
        and _Uint8Array_to_js : _Uint8Array -> Ojs.t = Obj.magic
        and _Uint8ArrayConstructor_of_js : Ojs.t -> _Uint8ArrayConstructor =
          Obj.magic
        and _Uint8ArrayConstructor_to_js : _Uint8ArrayConstructor -> Ojs.t =
          Obj.magic
        and _Uint8ClampedArray_of_js : Ojs.t -> _Uint8ClampedArray =
          Obj.magic
        and _Uint8ClampedArray_to_js : _Uint8ClampedArray -> Ojs.t =
          Obj.magic
        and _Uint8ClampedArrayConstructor_of_js :
          Ojs.t -> _Uint8ClampedArrayConstructor = Obj.magic
        and _Uint8ClampedArrayConstructor_to_js :
          _Uint8ClampedArrayConstructor -> Ojs.t = Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
open Types
let (naN : float) = Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : float) =
  Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : x:string -> any) =
  fun ~x:(x284 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x284)|])
let (parseInt : s:string -> ?radix:float -> unit -> float) =
  fun ~s:(x285 : string) ->
    fun ?radix:(x286 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x289 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x289 "parseInt") "apply"
             [|x289;((let x287 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x287 "push" [|(Ojs.string_to_js x285)|]);
                      (match x286 with
                       | Some x288 ->
                           ignore
                             (Ojs.call x287 "push" [|(Ojs.float_to_js x288)|])
                       | None -> ());
                      x287))|])
let (parseFloat : string:string -> float) =
  fun ~string:(x290 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x290)|])
let (isNaN : number:float -> bool) =
  fun ~number:(x291 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x291)|])
let (isFinite : number:float -> bool) =
  fun ~number:(x292 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x292)|])
let (decodeURI : encodedURI:string -> string) =
  fun ~encodedURI:(x293 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x293)|])
let (decodeURIComponent : encodedURIComponent:string -> string) =
  fun ~encodedURIComponent:(x294 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x294)|])
let (encodeURI : uri:string -> string) =
  fun ~uri:(x295 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x295)|])
let (encodeURIComponent : uriComponent:bool or_string or_number -> string) =
  fun ~uriComponent:(x296 : bool or_string or_number) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(or_number_to_js
              (fun (x297 : bool or_string) ->
                 or_string_to_js Ojs.bool_to_js x297) x296)|])
let (escape : string:string -> string) =
  fun ~string:(x299 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x299)|])
let (unescape : string:string -> string) =
  fun ~string:(x300 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x300)|])
module Symbol =
  struct
    type t = _Symbol
    let rec t_of_js : Ojs.t -> t = fun (x302 : Ojs.t) -> _Symbol_of_js x302
    and t_to_js : t -> Ojs.t = fun (x301 : _Symbol) -> _Symbol_to_js x301
    let (toString : t -> string) =
      fun (x303 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x303) "toString" [||])
    let (valueOf : t -> symbol) =
      fun (x304 : t) -> symbol_of_js (Ojs.call (t_to_js x304) "valueOf" [||])
  end
module PropertyKey =
  struct
    type t = _PropertyKey
    let rec t_of_js : Ojs.t -> t =
      fun (x306 : Ojs.t) -> _PropertyKey_of_js x306
    and t_to_js : t -> Ojs.t =
      fun (x305 : _PropertyKey) -> _PropertyKey_to_js x305
  end
module PropertyDescriptor =
  struct
    type t = _PropertyDescriptor
    let rec t_of_js : Ojs.t -> t =
      fun (x308 : Ojs.t) -> _PropertyDescriptor_of_js x308
    and t_to_js : t -> Ojs.t =
      fun (x307 : _PropertyDescriptor) -> _PropertyDescriptor_to_js x307
    let (get_configurable : t -> bool) =
      fun (x309 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x309) "configurable")
    let (set_configurable : t -> bool -> unit) =
      fun (x310 : t) ->
        fun (x311 : bool) ->
          Ojs.set_prop_ascii (t_to_js x310) "configurable"
            (Ojs.bool_to_js x311)
    let (get_enumerable : t -> bool) =
      fun (x312 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x312) "enumerable")
    let (set_enumerable : t -> bool -> unit) =
      fun (x313 : t) ->
        fun (x314 : bool) ->
          Ojs.set_prop_ascii (t_to_js x313) "enumerable"
            (Ojs.bool_to_js x314)
    let (get_value : t -> any) =
      fun (x315 : t) -> any_of_js (Ojs.get_prop_ascii (t_to_js x315) "value")
    let (set_value : t -> any -> unit) =
      fun (x316 : t) ->
        fun (x317 : any) ->
          Ojs.set_prop_ascii (t_to_js x316) "value" (any_to_js x317)
    let (get_writable : t -> bool) =
      fun (x318 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x318) "writable")
    let (set_writable : t -> bool -> unit) =
      fun (x319 : t) ->
        fun (x320 : bool) ->
          Ojs.set_prop_ascii (t_to_js x319) "writable" (Ojs.bool_to_js x320)
    let (get_ : t -> any) =
      fun (x321 : t) -> any_of_js (Ojs.call (t_to_js x321) "get" [||])
    let (set_ : t -> v:any -> unit) =
      fun (x323 : t) ->
        fun ~v:(x322 : any) ->
          ignore (Ojs.call (t_to_js x323) "set" [|(any_to_js x322)|])
  end
module PropertyDescriptorMap =
  struct
    type t = _PropertyDescriptorMap
    let rec t_of_js : Ojs.t -> t =
      fun (x325 : Ojs.t) -> _PropertyDescriptorMap_of_js x325
    and t_to_js : t -> Ojs.t =
      fun (x324 : _PropertyDescriptorMap) ->
        _PropertyDescriptorMap_to_js x324
    let (get : t -> string -> _PropertyDescriptor) =
      fun (x326 : t) ->
        fun (x327 : string) ->
          _PropertyDescriptor_of_js
            (Ojs.get_prop (t_to_js x326) (Ojs.string_to_js x327))
    let (set : t -> string -> _PropertyDescriptor -> unit) =
      fun (x328 : t) ->
        fun (x329 : string) ->
          fun (x330 : _PropertyDescriptor) ->
            Ojs.set_prop (t_to_js x328) (Ojs.string_to_js x329)
              (_PropertyDescriptor_to_js x330)
  end
module Object =
  struct
    type t = _Object
    let rec t_of_js : Ojs.t -> t = fun (x332 : Ojs.t) -> _Object_of_js x332
    and t_to_js : t -> Ojs.t = fun (x331 : _Object) -> _Object_to_js x331
    let (get_constructor : t -> _Function) =
      fun (x333 : t) ->
        _Function_of_js (Ojs.get_prop_ascii (t_to_js x333) "constructor")
    let (set_constructor : t -> _Function -> unit) =
      fun (x334 : t) ->
        fun (x335 : _Function) ->
          Ojs.set_prop_ascii (t_to_js x334) "constructor"
            (_Function_to_js x335)
    let (toString : t -> string) =
      fun (x336 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x336) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x337 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x337) "toLocaleString" [||])
    let (valueOf : t -> t) =
      fun (x338 : t) -> t_of_js (Ojs.call (t_to_js x338) "valueOf" [||])
    let (hasOwnProperty : t -> v:_PropertyKey -> bool) =
      fun (x340 : t) ->
        fun ~v:(x339 : _PropertyKey) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x340) "hasOwnProperty"
               [|(_PropertyKey_to_js x339)|])
    let (isPrototypeOf : t -> v:t -> bool) =
      fun (x342 : t) ->
        fun ~v:(x341 : t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x342) "isPrototypeOf" [|(t_to_js x341)|])
    let (propertyIsEnumerable : t -> v:_PropertyKey -> bool) =
      fun (x344 : t) ->
        fun ~v:(x343 : _PropertyKey) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x344) "propertyIsEnumerable"
               [|(_PropertyKey_to_js x343)|])
    let (create : ?value:any -> unit -> _Object) =
      fun ?value:(x345 : any option) ->
        fun () ->
          _Object_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x346 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x345 with
                 | Some x347 ->
                     ignore (Ojs.call x346 "push" [|(any_to_js x347)|])
                 | None -> ());
                x346))
    let (getPrototypeOf : o:any -> any) =
      fun ~o:(x348 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x348)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:_PropertyKey -> _PropertyDescriptor or_undefined) =
      fun ~o:(x349 : any) ->
        fun ~p:(x350 : _PropertyKey) ->
          or_undefined_of_js _PropertyDescriptor_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x349);(_PropertyKey_to_js x350)|])
    let (getOwnPropertyNames : o:any -> string list) =
      fun ~o:(x352 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x352)|])
    let (create_ : o:untyped_object or_null -> any) =
      fun ~o:(x354 : untyped_object or_null) ->
        any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Object")
             [|(or_null_to_js untyped_object_to_js x354)|])
    let (create_' :
      o:untyped_object or_null ->
        properties:(_PropertyDescriptorMap, any _ThisType) intersection2 ->
          any)
      =
      fun ~o:(x356 : untyped_object or_null) ->
        fun
          ~properties:(x358 :
                        (_PropertyDescriptorMap, any _ThisType) intersection2)
          ->
          any_of_js
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Object")
               [|(or_null_to_js untyped_object_to_js x356);(intersection2_to_js
                                                              _PropertyDescriptorMap_to_js
                                                              (fun
                                                                 (x360 :
                                                                   any
                                                                    _ThisType)
                                                                 ->
                                                                 _ThisType_to_js
                                                                   any_to_js
                                                                   x360) x358)|])
    let (defineProperty :
      t ->
        o:any ->
          p:_PropertyKey ->
            attributes:(_PropertyDescriptor, any _ThisType) intersection2 ->
              any)
      =
      fun (x362 : t) ->
        fun ~o:(x363 : any) ->
          fun ~p:(x364 : _PropertyKey) ->
            fun
              ~attributes:(x365 :
                            (_PropertyDescriptor, any _ThisType)
                              intersection2)
              ->
              any_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                   "defineProperty"
                   [|(t_to_js x362);(any_to_js x363);(_PropertyKey_to_js x364);(
                     intersection2_to_js _PropertyDescriptor_to_js
                       (fun (x367 : any _ThisType) ->
                          _ThisType_to_js any_to_js x367) x365)|])
    let (defineProperties :
      t ->
        o:any ->
          properties:(_PropertyDescriptorMap, any _ThisType) intersection2 ->
            any)
      =
      fun (x369 : t) ->
        fun ~o:(x370 : any) ->
          fun
            ~properties:(x371 :
                          (_PropertyDescriptorMap, any _ThisType)
                            intersection2)
            ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperties"
                 [|(t_to_js x369);(any_to_js x370);(intersection2_to_js
                                                      _PropertyDescriptorMap_to_js
                                                      (fun
                                                         (x373 :
                                                           any _ThisType)
                                                         ->
                                                         _ThisType_to_js
                                                           any_to_js x373)
                                                      x371)|])
    let (seal : o:'T -> 'T) =
      fun ~o:(x375 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x375)|])
    let (freeze : a:'T list -> 'T list) =
      fun ~a:(x376 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Ojs.list_to_js Obj.magic x376)|])
    let (freeze' : f:'T -> 'T) =
      fun ~f:(x379 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x379)|])
    let (freeze'' : o:'T -> 'T _Readonly) =
      fun ~o:(x380 : 'T) ->
        _Readonly_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x380)|])
    let (preventExtensions : o:'T -> 'T) =
      fun ~o:(x382 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x382)|])
    let (isSealed : o:any -> bool) =
      fun ~o:(x383 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x383)|])
    let (isFrozen : o:any -> bool) =
      fun ~o:(x384 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x384)|])
    let (isExtensible : o:any -> bool) =
      fun ~o:(x385 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x385)|])
    let (keys : o:untyped_object -> string list) =
      fun ~o:(x386 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x386)|])
  end
module ObjectConstructor =
  struct
    type t = _ObjectConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x389 : Ojs.t) -> _ObjectConstructor_of_js x389
    and t_to_js : t -> Ojs.t =
      fun (x388 : _ObjectConstructor) -> _ObjectConstructor_to_js x388
    let (create : t -> ?value:any -> unit -> _Object) =
      fun (x393 : t) ->
        fun ?value:(x390 : any option) ->
          fun () ->
            _Object_of_js
              (Ojs.new_obj_arr (t_to_js x393)
                 (let x391 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x390 with
                   | Some x392 ->
                       ignore (Ojs.call x391 "push" [|(any_to_js x392)|])
                   | None -> ());
                  x391))
    let (apply : t -> any) =
      fun (x394 : t) -> any_of_js (Ojs.apply (t_to_js x394) [||])
    let (apply' : t -> value:any -> any) =
      fun (x396 : t) ->
        fun ~value:(x395 : any) ->
          any_of_js (Ojs.apply (t_to_js x396) [|(any_to_js x395)|])
    let (get_prototype : t -> _Object) =
      fun (x397 : t) ->
        _Object_of_js (Ojs.get_prop_ascii (t_to_js x397) "prototype")
    let (getPrototypeOf : t -> o:any -> any) =
      fun (x399 : t) ->
        fun ~o:(x398 : any) ->
          any_of_js
            (Ojs.call (t_to_js x399) "getPrototypeOf" [|(any_to_js x398)|])
    let (getOwnPropertyDescriptor :
      t -> o:any -> p:_PropertyKey -> _PropertyDescriptor or_undefined) =
      fun (x402 : t) ->
        fun ~o:(x400 : any) ->
          fun ~p:(x401 : _PropertyKey) ->
            or_undefined_of_js _PropertyDescriptor_of_js
              (Ojs.call (t_to_js x402) "getOwnPropertyDescriptor"
                 [|(any_to_js x400);(_PropertyKey_to_js x401)|])
    let (getOwnPropertyNames : t -> o:any -> string list) =
      fun (x405 : t) ->
        fun ~o:(x404 : any) ->
          Ojs.list_of_js Ojs.string_of_js
            (Ojs.call (t_to_js x405) "getOwnPropertyNames"
               [|(any_to_js x404)|])
    let (create_ : t -> o:untyped_object or_null -> any) =
      fun (x409 : t) ->
        fun ~o:(x407 : untyped_object or_null) ->
          any_of_js
            (Ojs.call (t_to_js x409) "create"
               [|(or_null_to_js untyped_object_to_js x407)|])
    let (create_' :
      t ->
        o:untyped_object or_null ->
          properties:(_PropertyDescriptorMap, any _ThisType) intersection2 ->
            any)
      =
      fun (x416 : t) ->
        fun ~o:(x410 : untyped_object or_null) ->
          fun
            ~properties:(x412 :
                          (_PropertyDescriptorMap, any _ThisType)
                            intersection2)
            ->
            any_of_js
              (Ojs.call (t_to_js x416) "create"
                 [|(or_null_to_js untyped_object_to_js x410);(intersection2_to_js
                                                                _PropertyDescriptorMap_to_js
                                                                (fun
                                                                   (x414 :
                                                                    any
                                                                    _ThisType)
                                                                   ->
                                                                   _ThisType_to_js
                                                                    any_to_js
                                                                    x414)
                                                                x412)|])
    let (defineProperty :
      t ->
        o:any ->
          p:_PropertyKey ->
            attributes:(_PropertyDescriptor, any _ThisType) intersection2 ->
              any)
      =
      fun (x423 : t) ->
        fun ~o:(x417 : any) ->
          fun ~p:(x418 : _PropertyKey) ->
            fun
              ~attributes:(x419 :
                            (_PropertyDescriptor, any _ThisType)
                              intersection2)
              ->
              any_of_js
                (Ojs.call (t_to_js x423) "defineProperty"
                   [|(any_to_js x417);(_PropertyKey_to_js x418);(intersection2_to_js
                                                                   _PropertyDescriptor_to_js
                                                                   (fun
                                                                    (x421 :
                                                                    any
                                                                    _ThisType)
                                                                    ->
                                                                    _ThisType_to_js
                                                                    any_to_js
                                                                    x421)
                                                                   x419)|])
    let (defineProperties :
      t ->
        o:any ->
          properties:(_PropertyDescriptorMap, any _ThisType) intersection2 ->
            any)
      =
      fun (x429 : t) ->
        fun ~o:(x424 : any) ->
          fun
            ~properties:(x425 :
                          (_PropertyDescriptorMap, any _ThisType)
                            intersection2)
            ->
            any_of_js
              (Ojs.call (t_to_js x429) "defineProperties"
                 [|(any_to_js x424);(intersection2_to_js
                                       _PropertyDescriptorMap_to_js
                                       (fun (x427 : any _ThisType) ->
                                          _ThisType_to_js any_to_js x427)
                                       x425)|])
    let (seal : t -> o:'T -> 'T) =
      fun (x431 : t) ->
        fun ~o:(x430 : 'T) ->
          Obj.magic (Ojs.call (t_to_js x431) "seal" [|(Obj.magic x430)|])
    let (freeze : t -> a:'T list -> 'T list) =
      fun (x434 : t) ->
        fun ~a:(x432 : 'T list) ->
          Ojs.list_of_js Obj.magic
            (Ojs.call (t_to_js x434) "freeze"
               [|(Ojs.list_to_js Obj.magic x432)|])
    let (freeze' : t -> f:'T -> 'T) =
      fun (x437 : t) ->
        fun ~f:(x436 : 'T) ->
          Obj.magic (Ojs.call (t_to_js x437) "freeze" [|(Obj.magic x436)|])
    let (freeze'' : t -> o:'T -> 'T _Readonly) =
      fun (x439 : t) ->
        fun ~o:(x438 : 'T) ->
          _Readonly_of_js Obj.magic
            (Ojs.call (t_to_js x439) "freeze" [|(Obj.magic x438)|])
    let (preventExtensions : t -> o:'T -> 'T) =
      fun (x442 : t) ->
        fun ~o:(x441 : 'T) ->
          Obj.magic
            (Ojs.call (t_to_js x442) "preventExtensions" [|(Obj.magic x441)|])
    let (isSealed : t -> o:any -> bool) =
      fun (x444 : t) ->
        fun ~o:(x443 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x444) "isSealed" [|(any_to_js x443)|])
    let (isFrozen : t -> o:any -> bool) =
      fun (x446 : t) ->
        fun ~o:(x445 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x446) "isFrozen" [|(any_to_js x445)|])
    let (isExtensible : t -> o:any -> bool) =
      fun (x448 : t) ->
        fun ~o:(x447 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x448) "isExtensible" [|(any_to_js x447)|])
    let (keys : t -> o:untyped_object -> string list) =
      fun (x450 : t) ->
        fun ~o:(x449 : untyped_object) ->
          Ojs.list_of_js Ojs.string_of_js
            (Ojs.call (t_to_js x450) "keys" [|(untyped_object_to_js x449)|])
  end
let (object_ : _ObjectConstructor) =
  _ObjectConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Object")
module Function =
  struct
    type t = _Function
    let rec t_of_js : Ojs.t -> t = fun (x453 : Ojs.t) -> _Function_of_js x453
    and t_to_js : t -> Ojs.t = fun (x452 : _Function) -> _Function_to_js x452
    let (apply_ : t -> this:t -> thisArg:any -> ?argArray:any -> unit -> any)
      =
      fun (x459 : t) ->
        fun ~this:(x454 : t) ->
          fun ~thisArg:(x455 : any) ->
            fun ?argArray:(x456 : any option) ->
              fun () ->
                any_of_js
                  (let x460 = t_to_js x459 in
                   Ojs.call (Ojs.get_prop_ascii x460 "apply") "apply"
                     [|x460;((let x457 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x457 "push" [|(t_to_js x454)|]);
                              ignore
                                (Ojs.call x457 "push" [|(any_to_js x455)|]);
                              (match x456 with
                               | Some x458 ->
                                   ignore
                                     (Ojs.call x457 "push"
                                        [|(any_to_js x458)|])
                               | None -> ());
                              x457))|])
    let (call : t -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x466 : t) ->
        fun ~this:(x461 : t) ->
          fun ~thisArg:(x462 : any) ->
            fun ~argArray:(x463 : any list) ->
              any_of_js
                (let x467 = t_to_js x466 in
                 Ojs.call (Ojs.get_prop_ascii x467 "call") "apply"
                   [|x467;((let x464 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore (Ojs.call x464 "push" [|(t_to_js x461)|]);
                            ignore
                              (Ojs.call x464 "push" [|(any_to_js x462)|]);
                            List.iter
                              (fun (x465 : any) ->
                                 ignore
                                   (Ojs.call x464 "push" [|(any_to_js x465)|]))
                              x463;
                            x464))|])
    let (bind : t -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x473 : t) ->
        fun ~this:(x468 : t) ->
          fun ~thisArg:(x469 : any) ->
            fun ~argArray:(x470 : any list) ->
              any_of_js
                (let x474 = t_to_js x473 in
                 Ojs.call (Ojs.get_prop_ascii x474 "bind") "apply"
                   [|x474;((let x471 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore (Ojs.call x471 "push" [|(t_to_js x468)|]);
                            ignore
                              (Ojs.call x471 "push" [|(any_to_js x469)|]);
                            List.iter
                              (fun (x472 : any) ->
                                 ignore
                                   (Ojs.call x471 "push" [|(any_to_js x472)|]))
                              x470;
                            x471))|])
    let (toString : t -> string) =
      fun (x475 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x475) "toString" [||])
    let (get_prototype : t -> any) =
      fun (x476 : t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js x476) "prototype")
    let (set_prototype : t -> any -> unit) =
      fun (x477 : t) ->
        fun (x478 : any) ->
          Ojs.set_prop_ascii (t_to_js x477) "prototype" (any_to_js x478)
    let (get_length : t -> float) =
      fun (x479 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x479) "length")
    let (get_arguments : t -> any) =
      fun (x480 : t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js x480) "arguments")
    let (set_arguments : t -> any -> unit) =
      fun (x481 : t) ->
        fun (x482 : any) ->
          Ojs.set_prop_ascii (t_to_js x481) "arguments" (any_to_js x482)
    let (get_caller : t -> t) =
      fun (x483 : t) -> t_of_js (Ojs.get_prop_ascii (t_to_js x483) "caller")
    let (set_caller : t -> t -> unit) =
      fun (x484 : t) ->
        fun (x485 : t) ->
          Ojs.set_prop_ascii (t_to_js x484) "caller" (t_to_js x485)
    let (create : args:string list -> _Function) =
      fun ~args:(x486 : string list) ->
        _Function_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x487 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x488 : string) ->
                   ignore (Ojs.call x487 "push" [|(Ojs.string_to_js x488)|]))
                x486;
              x487))
  end
module FunctionConstructor =
  struct
    type t = _FunctionConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x490 : Ojs.t) -> _FunctionConstructor_of_js x490
    and t_to_js : t -> Ojs.t =
      fun (x489 : _FunctionConstructor) -> _FunctionConstructor_to_js x489
    let (create : t -> args:string list -> _Function) =
      fun (x494 : t) ->
        fun ~args:(x491 : string list) ->
          _Function_of_js
            (Ojs.new_obj_arr (t_to_js x494)
               (let x492 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x493 : string) ->
                     ignore
                       (Ojs.call x492 "push" [|(Ojs.string_to_js x493)|]))
                  x491;
                x492))
    let (apply : t -> args:string list -> _Function) =
      fun (x498 : t) ->
        fun ~args:(x495 : string list) ->
          _Function_of_js
            (Ojs.call (t_to_js x498) "apply"
               [|Ojs.null;((let x496 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x497 : string) ->
                                 ignore
                                   (Ojs.call x496 "push"
                                      [|(Ojs.string_to_js x497)|])) x495;
                            x496))|])
    let (get_prototype : t -> _Function) =
      fun (x499 : t) ->
        _Function_of_js (Ojs.get_prop_ascii (t_to_js x499) "prototype")
  end
let (function_ : _FunctionConstructor) =
  _FunctionConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Function")
module ThisParameterType =
  struct
    type 'T t = 'T _ThisParameterType
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x502 : Ojs.t) -> _ThisParameterType_of_js __T_of_js x502
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x500 : __T _ThisParameterType) ->
          _ThisParameterType_to_js __T_to_js x500
  end
module OmitThisParameter =
  struct
    type 'T t = 'T _OmitThisParameter
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x506 : Ojs.t) -> _OmitThisParameter_of_js __T_of_js x506
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x504 : __T _OmitThisParameter) ->
          _OmitThisParameter_to_js __T_to_js x504
  end
module CallableFunction =
  struct
    type t = _CallableFunction
    let rec t_of_js : Ojs.t -> t =
      fun (x509 : Ojs.t) -> _CallableFunction_of_js x509
    and t_to_js : t -> Ojs.t =
      fun (x508 : _CallableFunction) -> _CallableFunction_to_js x508
    let (apply_ : t -> this:(this:'T -> 'R) -> thisArg:'T -> 'R) =
      fun (x513 : t) ->
        fun ~this:(x510 : this:'T -> 'R) ->
          fun ~thisArg:(x512 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js x513) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x511 : Ojs.t) ->
                         Obj.magic (x510 ~this:(Obj.magic x511))));(Obj.magic
                                                                    x512)|])
    let (apply_' :
      t ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x519 : t) ->
        fun ~this:(x514 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x517 : 'T) ->
            fun ~args:(x518 : 'A) ->
              Obj.magic
                (Ojs.call (t_to_js x519) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x515 : _) ->
                           Obj.magic
                             (x514 ~this:(Obj.magic (Ojs.array_get x515 0))
                                ~args:(Ojs.list_of_js_from any_of_js x515 1))));(
                     Obj.magic x517);(Obj.magic x518)|])
    let (call :
      t ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x527 : t) ->
        fun ~this:(x520 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x521 : 'T) ->
            fun ~args:(x522 : any list) ->
              Obj.magic
                (let x528 = t_to_js x527 in
                 Ojs.call (Ojs.get_prop_ascii x528 "call") "apply"
                   [|x528;((let x523 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x523 "push"
                                 [|(Ojs.fun_to_js_args
                                      (fun (x525 : _) ->
                                         Obj.magic
                                           (x520
                                              ~this:(Obj.magic
                                                       (Ojs.array_get x525 0))
                                              ~args:(Ojs.list_of_js_from
                                                       any_of_js x525 1))))|]);
                            ignore
                              (Ojs.call x523 "push" [|(Obj.magic x521)|]);
                            List.iter
                              (fun (x524 : any) ->
                                 ignore
                                   (Ojs.call x523 "push" [|(any_to_js x524)|]))
                              x522;
                            x523))|])
    let (bind :
      t -> this:'T -> thisArg:'T _ThisParameterType -> 'T _OmitThisParameter)
      =
      fun (x532 : t) ->
        fun ~this:(x529 : 'T) ->
          fun ~thisArg:(x530 : 'T _ThisParameterType) ->
            _OmitThisParameter_of_js Obj.magic
              (Ojs.call (t_to_js x532) "bind"
                 [|(Obj.magic x529);(_ThisParameterType_to_js Obj.magic x530)|])
    let (bind' :
      t ->
        this:(this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> args:any list -> 'R)
      =
      fun (x539 : t) ->
        fun ~this:(x534 : this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          fun ~thisArg:(x537 : 'T) ->
            fun ~arg0:(x538 : 'A0) ->
              fun ~args:(x540 : any list) ->
                Obj.magic
                  (Ojs.call
                     (Ojs.call (t_to_js x539) "bind"
                        [|(Ojs.fun_to_js_args
                             (fun (x535 : _) ->
                                Obj.magic
                                  (x534
                                     ~this:(Obj.magic (Ojs.array_get x535 0))
                                     ~arg0:(Obj.magic (Ojs.array_get x535 1))
                                     ~args:(Ojs.list_of_js_from any_of_js
                                              x535 2))));(Obj.magic x537);(
                          Obj.magic x538)|]) "apply"
                     [|Ojs.null;((let x541 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x542 : any) ->
                                       ignore
                                         (Ojs.call x541 "push"
                                            [|(any_to_js x542)|])) x540;
                                  x541))|])
    let (bind'' :
      t ->
        this:(this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
      =
      fun (x549 : t) ->
        fun
          ~this:(x543 :
                  this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x546 : 'T) ->
            fun ~arg0:(x547 : 'A0) ->
              fun ~arg1:(x548 : 'A1) ->
                fun ~args:(x550 : any list) ->
                  Obj.magic
                    (Ojs.call
                       (Ojs.call (t_to_js x549) "bind"
                          [|(Ojs.fun_to_js_args
                               (fun (x544 : _) ->
                                  Obj.magic
                                    (x543
                                       ~this:(Obj.magic
                                                (Ojs.array_get x544 0))
                                       ~arg0:(Obj.magic
                                                (Ojs.array_get x544 1))
                                       ~arg1:(Obj.magic
                                                (Ojs.array_get x544 2))
                                       ~args:(Ojs.list_of_js_from any_of_js
                                                x544 3))));(Obj.magic x546);(
                            Obj.magic x547);(Obj.magic x548)|]) "apply"
                       [|Ojs.null;((let x551 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    List.iter
                                      (fun (x552 : any) ->
                                         ignore
                                           (Ojs.call x551 "push"
                                              [|(any_to_js x552)|])) x550;
                                    x551))|])
    let (bind''' :
      t ->
        this:(this:'T ->
                arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          ->
          thisArg:'T ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
      =
      fun (x560 : t) ->
        fun
          ~this:(x553 :
                  this:'T ->
                    arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x556 : 'T) ->
            fun ~arg0:(x557 : 'A0) ->
              fun ~arg1:(x558 : 'A1) ->
                fun ~arg2:(x559 : 'A2) ->
                  fun ~args:(x561 : any list) ->
                    Obj.magic
                      (Ojs.call
                         (Ojs.call (t_to_js x560) "bind"
                            [|(Ojs.fun_to_js_args
                                 (fun (x554 : _) ->
                                    Obj.magic
                                      (x553
                                         ~this:(Obj.magic
                                                  (Ojs.array_get x554 0))
                                         ~arg0:(Obj.magic
                                                  (Ojs.array_get x554 1))
                                         ~arg1:(Obj.magic
                                                  (Ojs.array_get x554 2))
                                         ~arg2:(Obj.magic
                                                  (Ojs.array_get x554 3))
                                         ~args:(Ojs.list_of_js_from any_of_js
                                                  x554 4))));(Obj.magic x556);(
                              Obj.magic x557);(Obj.magic x558);(Obj.magic
                                                                  x559)|])
                         "apply"
                         [|Ojs.null;((let x562 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      List.iter
                                        (fun (x563 : any) ->
                                           ignore
                                             (Ojs.call x562 "push"
                                                [|(any_to_js x563)|])) x561;
                                      x562))|])
    let (bind'''' :
      t ->
        this:(this:'T ->
                arg0:'A0 ->
                  arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          thisArg:'T ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
      =
      fun (x572 : t) ->
        fun
          ~this:(x564 :
                  this:'T ->
                    arg0:'A0 ->
                      arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x567 : 'T) ->
            fun ~arg0:(x568 : 'A0) ->
              fun ~arg1:(x569 : 'A1) ->
                fun ~arg2:(x570 : 'A2) ->
                  fun ~arg3:(x571 : 'A3) ->
                    fun ~args:(x573 : any list) ->
                      Obj.magic
                        (Ojs.call
                           (Ojs.call (t_to_js x572) "bind"
                              [|(Ojs.fun_to_js_args
                                   (fun (x565 : _) ->
                                      Obj.magic
                                        (x564
                                           ~this:(Obj.magic
                                                    (Ojs.array_get x565 0))
                                           ~arg0:(Obj.magic
                                                    (Ojs.array_get x565 1))
                                           ~arg1:(Obj.magic
                                                    (Ojs.array_get x565 2))
                                           ~arg2:(Obj.magic
                                                    (Ojs.array_get x565 3))
                                           ~arg3:(Obj.magic
                                                    (Ojs.array_get x565 4))
                                           ~args:(Ojs.list_of_js_from
                                                    any_of_js x565 5))));(
                                Obj.magic x567);(Obj.magic x568);(Obj.magic
                                                                    x569);(
                                Obj.magic x570);(Obj.magic x571)|]) "apply"
                           [|Ojs.null;((let x574 =
                                          Ojs.new_obj
                                            (Ojs.get_prop_ascii Ojs.global
                                               "Array") [||] in
                                        List.iter
                                          (fun (x575 : any) ->
                                             ignore
                                               (Ojs.call x574 "push"
                                                  [|(any_to_js x575)|])) x573;
                                        x574))|])
    let (cast : t -> _Function) =
      fun (x576 : t) -> _Function_of_js (t_to_js x576)
  end
module NewableFunction =
  struct
    type t = _NewableFunction
    let rec t_of_js : Ojs.t -> t =
      fun (x578 : Ojs.t) -> _NewableFunction_of_js x578
    and t_to_js : t -> Ojs.t =
      fun (x577 : _NewableFunction) -> _NewableFunction_to_js x577
    let (apply_ : t -> this:'T anonymous_interface_12 -> thisArg:'T -> unit)
      =
      fun (x582 : t) ->
        fun ~this:(x579 : 'T anonymous_interface_12) ->
          fun ~thisArg:(x581 : 'T) ->
            ignore
              (Ojs.call (t_to_js x582) "apply"
                 [|(anonymous_interface_12_to_js Obj.magic x579);(Obj.magic
                                                                    x581)|])
    let (apply_' :
      t ->
        this:('A, 'T) anonymous_interface_10 -> thisArg:'T -> args:'A -> unit)
      =
      fun (x588 : t) ->
        fun ~this:(x583 : ('A, 'T) anonymous_interface_10) ->
          fun ~thisArg:(x586 : 'T) ->
            fun ~args:(x587 : 'A) ->
              ignore
                (Ojs.call (t_to_js x588) "apply"
                   [|(anonymous_interface_10_to_js Obj.magic Obj.magic x583);(
                     Obj.magic x586);(Obj.magic x587)|])
    let (call :
      t ->
        this:('A, 'T) anonymous_interface_10 ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x596 : t) ->
        fun ~this:(x589 : ('A, 'T) anonymous_interface_10) ->
          fun ~thisArg:(x590 : 'T) ->
            fun ~args:(x591 : any list) ->
              ignore
                (let x597 = t_to_js x596 in
                 Ojs.call (Ojs.get_prop_ascii x597 "call") "apply"
                   [|x597;((let x592 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x592 "push"
                                 [|(anonymous_interface_10_to_js Obj.magic
                                      Obj.magic x589)|]);
                            ignore
                              (Ojs.call x592 "push" [|(Obj.magic x590)|]);
                            List.iter
                              (fun (x593 : any) ->
                                 ignore
                                   (Ojs.call x592 "push" [|(any_to_js x593)|]))
                              x591;
                            x592))|])
    let (bind : t -> this:'T -> thisArg:any -> 'T) =
      fun (x600 : t) ->
        fun ~this:(x598 : 'T) ->
          fun ~thisArg:(x599 : any) ->
            Obj.magic
              (Ojs.call (t_to_js x600) "bind"
                 [|(Obj.magic x598);(any_to_js x599)|])
    let (bind' :
      t ->
        this:('A, 'A0, 'R) anonymous_interface_8 ->
          thisArg:any -> arg0:'A0 -> ('A, 'R) anonymous_interface_9)
      =
      fun (x607 : t) ->
        fun ~this:(x601 : ('A, 'A0, 'R) anonymous_interface_8) ->
          fun ~thisArg:(x605 : any) ->
            fun ~arg0:(x606 : 'A0) ->
              anonymous_interface_9_of_js Obj.magic Obj.magic
                (Ojs.call (t_to_js x607) "bind"
                   [|(anonymous_interface_8_to_js Obj.magic Obj.magic
                        Obj.magic x601);(any_to_js x605);(Obj.magic x606)|])
    let (bind'' :
      t ->
        this:('A, 'A0, 'A1, 'R) anonymous_interface_7 ->
          thisArg:any ->
            arg0:'A0 -> arg1:'A1 -> ('A, 'R) anonymous_interface_9)
      =
      fun (x618 : t) ->
        fun ~this:(x610 : ('A, 'A0, 'A1, 'R) anonymous_interface_7) ->
          fun ~thisArg:(x615 : any) ->
            fun ~arg0:(x616 : 'A0) ->
              fun ~arg1:(x617 : 'A1) ->
                anonymous_interface_9_of_js Obj.magic Obj.magic
                  (Ojs.call (t_to_js x618) "bind"
                     [|(anonymous_interface_7_to_js Obj.magic Obj.magic
                          Obj.magic Obj.magic x610);(any_to_js x615);(
                       Obj.magic x616);(Obj.magic x617)|])
    let (bind''' :
      t ->
        this:('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6 ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> ('A, 'R) anonymous_interface_9)
      =
      fun (x631 : t) ->
        fun ~this:(x621 : ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6) ->
          fun ~thisArg:(x627 : any) ->
            fun ~arg0:(x628 : 'A0) ->
              fun ~arg1:(x629 : 'A1) ->
                fun ~arg2:(x630 : 'A2) ->
                  anonymous_interface_9_of_js Obj.magic Obj.magic
                    (Ojs.call (t_to_js x631) "bind"
                       [|(anonymous_interface_6_to_js Obj.magic Obj.magic
                            Obj.magic Obj.magic Obj.magic x621);(any_to_js
                                                                   x627);(
                         Obj.magic x628);(Obj.magic x629);(Obj.magic x630)|])
    let (bind'''' :
      t ->
        this:('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5 ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 ->
                arg2:'A2 -> arg3:'A3 -> ('A, 'R) anonymous_interface_9)
      =
      fun (x646 : t) ->
        fun ~this:(x634 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5)
          ->
          fun ~thisArg:(x641 : any) ->
            fun ~arg0:(x642 : 'A0) ->
              fun ~arg1:(x643 : 'A1) ->
                fun ~arg2:(x644 : 'A2) ->
                  fun ~arg3:(x645 : 'A3) ->
                    anonymous_interface_9_of_js Obj.magic Obj.magic
                      (Ojs.call (t_to_js x646) "bind"
                         [|(anonymous_interface_5_to_js Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic Obj.magic x634);(
                           any_to_js x641);(Obj.magic x642);(Obj.magic x643);(
                           Obj.magic x644);(Obj.magic x645)|])
    let (bind''''' :
      t ->
        this:('AX, 'R) anonymous_interface_11 ->
          thisArg:any -> args:'AX list -> ('AX, 'R) anonymous_interface_11)
      =
      fun (x656 : t) ->
        fun ~this:(x649 : ('AX, 'R) anonymous_interface_11) ->
          fun ~thisArg:(x650 : any) ->
            fun ~args:(x651 : 'AX list) ->
              anonymous_interface_11_of_js Obj.magic Obj.magic
                (let x657 = t_to_js x656 in
                 Ojs.call (Ojs.get_prop_ascii x657 "bind") "apply"
                   [|x657;((let x652 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x652 "push"
                                 [|(anonymous_interface_11_to_js Obj.magic
                                      Obj.magic x649)|]);
                            ignore
                              (Ojs.call x652 "push" [|(any_to_js x650)|]);
                            List.iter
                              (fun (x653 : 'AX) ->
                                 ignore
                                   (Ojs.call x652 "push" [|(Obj.magic x653)|]))
                              x651;
                            x652))|])
    let (cast : t -> _Function) =
      fun (x660 : t) -> _Function_of_js (t_to_js x660)
  end
module IArguments =
  struct
    type t = _IArguments
    let rec t_of_js : Ojs.t -> t =
      fun (x662 : Ojs.t) -> _IArguments_of_js x662
    and t_to_js : t -> Ojs.t =
      fun (x661 : _IArguments) -> _IArguments_to_js x661
    let (get : t -> float -> any) =
      fun (x663 : t) ->
        fun (x664 : float) ->
          any_of_js (Ojs.get_prop (t_to_js x663) (Ojs.float_to_js x664))
    let (set : t -> float -> any -> unit) =
      fun (x665 : t) ->
        fun (x666 : float) ->
          fun (x667 : any) ->
            Ojs.set_prop (t_to_js x665) (Ojs.float_to_js x666)
              (any_to_js x667)
    let (get_length : t -> float) =
      fun (x668 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x668) "length")
    let (set_length : t -> float -> unit) =
      fun (x669 : t) ->
        fun (x670 : float) ->
          Ojs.set_prop_ascii (t_to_js x669) "length" (Ojs.float_to_js x670)
    let (get_callee : t -> _Function) =
      fun (x671 : t) ->
        _Function_of_js (Ojs.get_prop_ascii (t_to_js x671) "callee")
    let (set_callee : t -> _Function -> unit) =
      fun (x672 : t) ->
        fun (x673 : _Function) ->
          Ojs.set_prop_ascii (t_to_js x672) "callee" (_Function_to_js x673)
  end
module String =
  struct
    type t = _String
    let rec t_of_js : Ojs.t -> t = fun (x675 : Ojs.t) -> _String_of_js x675
    and t_to_js : t -> Ojs.t = fun (x674 : _String) -> _String_to_js x674
    let (localeCompare :
      t ->
        that:string ->
          ?locales:string list or_string ->
            ?options:_Intl_CollatorOptions -> unit -> float)
      =
      fun (x684 : t) ->
        fun ~that:(x676 : string) ->
          fun ?locales:(x677 : string list or_string option) ->
            fun ?options:(x678 : _Intl_CollatorOptions option) ->
              fun () ->
                Ojs.float_of_js
                  (let x685 = t_to_js x684 in
                   Ojs.call (Ojs.get_prop_ascii x685 "localeCompare") "apply"
                     [|x685;((let x679 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x679 "push"
                                   [|(Ojs.string_to_js x676)|]);
                              (match x677 with
                               | Some x681 ->
                                   ignore
                                     (Ojs.call x679 "push"
                                        [|(or_string_to_js
                                             (fun (x682 : string list) ->
                                                Ojs.list_to_js
                                                  Ojs.string_to_js x682) x681)|])
                               | None -> ());
                              (match x678 with
                               | Some x680 ->
                                   ignore
                                     (Ojs.call x679 "push"
                                        [|(_Intl_CollatorOptions_to_js x680)|])
                               | None -> ());
                              x679))|])
    let (toString : t -> string) =
      fun (x686 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x686) "toString" [||])
    let (charAt : t -> pos:float -> string) =
      fun (x688 : t) ->
        fun ~pos:(x687 : float) ->
          Ojs.string_of_js
            (Ojs.call (t_to_js x688) "charAt" [|(Ojs.float_to_js x687)|])
    let (charCodeAt : t -> index:float -> float) =
      fun (x690 : t) ->
        fun ~index:(x689 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x690) "charCodeAt" [|(Ojs.float_to_js x689)|])
    let (concat : t -> strings:string list -> string) =
      fun (x694 : t) ->
        fun ~strings:(x691 : string list) ->
          Ojs.string_of_js
            (let x695 = t_to_js x694 in
             Ojs.call (Ojs.get_prop_ascii x695 "concat") "apply"
               [|x695;((let x692 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x693 : string) ->
                             ignore
                               (Ojs.call x692 "push"
                                  [|(Ojs.string_to_js x693)|])) x691;
                        x692))|])
    let (indexOf :
      t -> searchString:string -> ?position:float -> unit -> float) =
      fun (x700 : t) ->
        fun ~searchString:(x696 : string) ->
          fun ?position:(x697 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x701 = t_to_js x700 in
                 Ojs.call (Ojs.get_prop_ascii x701 "indexOf") "apply"
                   [|x701;((let x698 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x698 "push"
                                 [|(Ojs.string_to_js x696)|]);
                            (match x697 with
                             | Some x699 ->
                                 ignore
                                   (Ojs.call x698 "push"
                                      [|(Ojs.float_to_js x699)|])
                             | None -> ());
                            x698))|])
    let (lastIndexOf :
      t -> searchString:string -> ?position:float -> unit -> float) =
      fun (x706 : t) ->
        fun ~searchString:(x702 : string) ->
          fun ?position:(x703 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x707 = t_to_js x706 in
                 Ojs.call (Ojs.get_prop_ascii x707 "lastIndexOf") "apply"
                   [|x707;((let x704 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x704 "push"
                                 [|(Ojs.string_to_js x702)|]);
                            (match x703 with
                             | Some x705 ->
                                 ignore
                                   (Ojs.call x704 "push"
                                      [|(Ojs.float_to_js x705)|])
                             | None -> ());
                            x704))|])
    let (localeCompare' : t -> that:string -> float) =
      fun (x709 : t) ->
        fun ~that:(x708 : string) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x709) "localeCompare"
               [|(Ojs.string_to_js x708)|])
    let (match_ : t -> regexp:_RegExp or_string -> _RegExpMatchArray or_null)
      =
      fun (x712 : t) ->
        fun ~regexp:(x710 : _RegExp or_string) ->
          or_null_of_js _RegExpMatchArray_of_js
            (Ojs.call (t_to_js x712) "match"
               [|(or_string_to_js _RegExp_to_js x710)|])
    let (replace :
      t -> searchValue:_RegExp or_string -> replaceValue:string -> string) =
      fun (x717 : t) ->
        fun ~searchValue:(x714 : _RegExp or_string) ->
          fun ~replaceValue:(x716 : string) ->
            Ojs.string_of_js
              (Ojs.call (t_to_js x717) "replace"
                 [|(or_string_to_js _RegExp_to_js x714);(Ojs.string_to_js
                                                           x716)|])
    let (replace' :
      t ->
        searchValue:_RegExp or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x723 : t) ->
        fun ~searchValue:(x718 : _RegExp or_string) ->
          fun ~replacer:(x720 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (t_to_js x723) "replace"
                 [|(or_string_to_js _RegExp_to_js x718);(Ojs.fun_to_js_args
                                                           (fun (x721 : _) ->
                                                              Ojs.string_to_js
                                                                (x720
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x721 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x721 1))))|])
    let (search : t -> regexp:_RegExp or_string -> float) =
      fun (x726 : t) ->
        fun ~regexp:(x724 : _RegExp or_string) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x726) "search"
               [|(or_string_to_js _RegExp_to_js x724)|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> string) =
      fun (x732 : t) ->
        fun ?start:(x727 : float option) ->
          fun ?end_:(x728 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x733 = t_to_js x732 in
                 Ojs.call (Ojs.get_prop_ascii x733 "slice") "apply"
                   [|x733;((let x729 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x727 with
                             | Some x731 ->
                                 ignore
                                   (Ojs.call x729 "push"
                                      [|(Ojs.float_to_js x731)|])
                             | None -> ());
                            (match x728 with
                             | Some x730 ->
                                 ignore
                                   (Ojs.call x729 "push"
                                      [|(Ojs.float_to_js x730)|])
                             | None -> ());
                            x729))|])
    let (split :
      t -> separator:_RegExp or_string -> ?limit:float -> unit -> string list)
      =
      fun (x739 : t) ->
        fun ~separator:(x734 : _RegExp or_string) ->
          fun ?limit:(x735 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x740 = t_to_js x739 in
                 Ojs.call (Ojs.get_prop_ascii x740 "split") "apply"
                   [|x740;((let x736 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x736 "push"
                                 [|(or_string_to_js _RegExp_to_js x734)|]);
                            (match x735 with
                             | Some x737 ->
                                 ignore
                                   (Ojs.call x736 "push"
                                      [|(Ojs.float_to_js x737)|])
                             | None -> ());
                            x736))|])
    let (substring : t -> start:float -> ?end_:float -> unit -> string) =
      fun (x746 : t) ->
        fun ~start:(x742 : float) ->
          fun ?end_:(x743 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x747 = t_to_js x746 in
                 Ojs.call (Ojs.get_prop_ascii x747 "substring") "apply"
                   [|x747;((let x744 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x744 "push"
                                 [|(Ojs.float_to_js x742)|]);
                            (match x743 with
                             | Some x745 ->
                                 ignore
                                   (Ojs.call x744 "push"
                                      [|(Ojs.float_to_js x745)|])
                             | None -> ());
                            x744))|])
    let (toLowerCase : t -> string) =
      fun (x748 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x748) "toLowerCase" [||])
    let (toLocaleLowerCase :
      t -> ?locales:string list or_string -> unit -> string) =
      fun (x754 : t) ->
        fun ?locales:(x749 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x755 = t_to_js x754 in
               Ojs.call (Ojs.get_prop_ascii x755 "toLocaleLowerCase") "apply"
                 [|x755;((let x750 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x749 with
                           | Some x751 ->
                               ignore
                                 (Ojs.call x750 "push"
                                    [|(or_string_to_js
                                         (fun (x752 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x752) x751)|])
                           | None -> ());
                          x750))|])
    let (toUpperCase : t -> string) =
      fun (x756 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x756) "toUpperCase" [||])
    let (toLocaleUpperCase :
      t -> ?locales:string list or_string -> unit -> string) =
      fun (x762 : t) ->
        fun ?locales:(x757 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x763 = t_to_js x762 in
               Ojs.call (Ojs.get_prop_ascii x763 "toLocaleUpperCase") "apply"
                 [|x763;((let x758 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x757 with
                           | Some x759 ->
                               ignore
                                 (Ojs.call x758 "push"
                                    [|(or_string_to_js
                                         (fun (x760 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x760) x759)|])
                           | None -> ());
                          x758))|])
    let (trim : t -> string) =
      fun (x764 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x764) "trim" [||])
    let (get_length : t -> float) =
      fun (x765 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x765) "length")
    let (substr : t -> from:float -> ?length:float -> unit -> string) =
      fun (x770 : t) ->
        fun ~from:(x766 : float) ->
          fun ?length:(x767 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x771 = t_to_js x770 in
                 Ojs.call (Ojs.get_prop_ascii x771 "substr") "apply"
                   [|x771;((let x768 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x768 "push"
                                 [|(Ojs.float_to_js x766)|]);
                            (match x767 with
                             | Some x769 ->
                                 ignore
                                   (Ojs.call x768 "push"
                                      [|(Ojs.float_to_js x769)|])
                             | None -> ());
                            x768))|])
    let (valueOf : t -> string) =
      fun (x772 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x772) "valueOf" [||])
    let (get : t -> float -> string) =
      fun (x773 : t) ->
        fun (x774 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (t_to_js x773) (Ojs.float_to_js x774))
    let (to_ml : t -> string) =
      fun (x775 : t) -> Ojs.string_of_js (t_to_js x775)
    let (of_ml : string -> t) =
      fun (x776 : string) -> t_of_js (Ojs.string_to_js x776)
    let (create : ?value:any -> unit -> _String) =
      fun ?value:(x777 : any option) ->
        fun () ->
          _String_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x778 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x777 with
                 | Some x779 ->
                     ignore (Ojs.call x778 "push" [|(any_to_js x779)|])
                 | None -> ());
                x778))
    let (fromCharCode : codes:float list -> string) =
      fun ~codes:(x780 : float list) ->
        Ojs.string_of_js
          (let x783 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x783 "fromCharCode") "apply"
             [|x783;((let x781 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x782 : float) ->
                           ignore
                             (Ojs.call x781 "push" [|(Ojs.float_to_js x782)|]))
                        x780;
                      x781))|])
  end
module StringConstructor =
  struct
    type t = _StringConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x785 : Ojs.t) -> _StringConstructor_of_js x785
    and t_to_js : t -> Ojs.t =
      fun (x784 : _StringConstructor) -> _StringConstructor_to_js x784
    let (create : t -> ?value:any -> unit -> _String) =
      fun (x789 : t) ->
        fun ?value:(x786 : any option) ->
          fun () ->
            _String_of_js
              (Ojs.new_obj_arr (t_to_js x789)
                 (let x787 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x786 with
                   | Some x788 ->
                       ignore (Ojs.call x787 "push" [|(any_to_js x788)|])
                   | None -> ());
                  x787))
    let (apply : t -> ?value:any -> unit -> string) =
      fun (x793 : t) ->
        fun ?value:(x790 : any option) ->
          fun () ->
            Ojs.string_of_js
              (Ojs.call (t_to_js x793) "apply"
                 [|Ojs.null;((let x791 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x790 with
                               | Some x792 ->
                                   ignore
                                     (Ojs.call x791 "push"
                                        [|(any_to_js x792)|])
                               | None -> ());
                              x791))|])
    let (get_prototype : t -> _String) =
      fun (x794 : t) ->
        _String_of_js (Ojs.get_prop_ascii (t_to_js x794) "prototype")
    let (fromCharCode : t -> codes:float list -> string) =
      fun (x798 : t) ->
        fun ~codes:(x795 : float list) ->
          Ojs.string_of_js
            (let x799 = t_to_js x798 in
             Ojs.call (Ojs.get_prop_ascii x799 "fromCharCode") "apply"
               [|x799;((let x796 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x797 : float) ->
                             ignore
                               (Ojs.call x796 "push"
                                  [|(Ojs.float_to_js x797)|])) x795;
                        x796))|])
  end
let (string : _StringConstructor) =
  _StringConstructor_of_js (Ojs.get_prop_ascii Ojs.global "String")
module Boolean =
  struct
    type t = _Boolean
    let rec t_of_js : Ojs.t -> t = fun (x801 : Ojs.t) -> _Boolean_of_js x801
    and t_to_js : t -> Ojs.t = fun (x800 : _Boolean) -> _Boolean_to_js x800
    let (valueOf : t -> bool) =
      fun (x802 : t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js x802) "valueOf" [||])
    let (to_ml : t -> bool) = fun (x803 : t) -> Ojs.bool_of_js (t_to_js x803)
    let (of_ml : bool -> t) =
      fun (x804 : bool) -> t_of_js (Ojs.bool_to_js x804)
    let (create : ?value:any -> unit -> _Boolean) =
      fun ?value:(x805 : any option) ->
        fun () ->
          _Boolean_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x806 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x805 with
                 | Some x807 ->
                     ignore (Ojs.call x806 "push" [|(any_to_js x807)|])
                 | None -> ());
                x806))
  end
module BooleanConstructor =
  struct
    type t = _BooleanConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x809 : Ojs.t) -> _BooleanConstructor_of_js x809
    and t_to_js : t -> Ojs.t =
      fun (x808 : _BooleanConstructor) -> _BooleanConstructor_to_js x808
    let (create : t -> ?value:any -> unit -> _Boolean) =
      fun (x813 : t) ->
        fun ?value:(x810 : any option) ->
          fun () ->
            _Boolean_of_js
              (Ojs.new_obj_arr (t_to_js x813)
                 (let x811 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x810 with
                   | Some x812 ->
                       ignore (Ojs.call x811 "push" [|(any_to_js x812)|])
                   | None -> ());
                  x811))
    let (apply : t -> ?value:'T -> unit -> bool) =
      fun (x817 : t) ->
        fun ?value:(x814 : 'T option) ->
          fun () ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x817) "apply"
                 [|Ojs.null;((let x815 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x814 with
                               | Some x816 ->
                                   ignore
                                     (Ojs.call x815 "push"
                                        [|(Obj.magic x816)|])
                               | None -> ());
                              x815))|])
    let (get_prototype : t -> _Boolean) =
      fun (x818 : t) ->
        _Boolean_of_js (Ojs.get_prop_ascii (t_to_js x818) "prototype")
  end
let (boolean : _BooleanConstructor) =
  _BooleanConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Boolean")
module Number =
  struct
    type t = _Number
    let rec t_of_js : Ojs.t -> t = fun (x820 : Ojs.t) -> _Number_of_js x820
    and t_to_js : t -> Ojs.t = fun (x819 : _Number) -> _Number_to_js x819
    let (toLocaleString :
      t ->
        ?locales:string list or_string ->
          ?options:_Intl_NumberFormatOptions -> unit -> string)
      =
      fun (x828 : t) ->
        fun ?locales:(x821 : string list or_string option) ->
          fun ?options:(x822 : _Intl_NumberFormatOptions option) ->
            fun () ->
              Ojs.string_of_js
                (let x829 = t_to_js x828 in
                 Ojs.call (Ojs.get_prop_ascii x829 "toLocaleString") "apply"
                   [|x829;((let x823 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x821 with
                             | Some x825 ->
                                 ignore
                                   (Ojs.call x823 "push"
                                      [|(or_string_to_js
                                           (fun (x826 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x826) x825)|])
                             | None -> ());
                            (match x822 with
                             | Some x824 ->
                                 ignore
                                   (Ojs.call x823 "push"
                                      [|(_Intl_NumberFormatOptions_to_js x824)|])
                             | None -> ());
                            x823))|])
    let (toString : t -> ?radix:float -> unit -> string) =
      fun (x833 : t) ->
        fun ?radix:(x830 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x834 = t_to_js x833 in
               Ojs.call (Ojs.get_prop_ascii x834 "toString") "apply"
                 [|x834;((let x831 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x830 with
                           | Some x832 ->
                               ignore
                                 (Ojs.call x831 "push"
                                    [|(Ojs.float_to_js x832)|])
                           | None -> ());
                          x831))|])
    let (toFixed : t -> ?fractionDigits:float -> unit -> string) =
      fun (x838 : t) ->
        fun ?fractionDigits:(x835 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x839 = t_to_js x838 in
               Ojs.call (Ojs.get_prop_ascii x839 "toFixed") "apply"
                 [|x839;((let x836 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x835 with
                           | Some x837 ->
                               ignore
                                 (Ojs.call x836 "push"
                                    [|(Ojs.float_to_js x837)|])
                           | None -> ());
                          x836))|])
    let (toExponential : t -> ?fractionDigits:float -> unit -> string) =
      fun (x843 : t) ->
        fun ?fractionDigits:(x840 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x844 = t_to_js x843 in
               Ojs.call (Ojs.get_prop_ascii x844 "toExponential") "apply"
                 [|x844;((let x841 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x840 with
                           | Some x842 ->
                               ignore
                                 (Ojs.call x841 "push"
                                    [|(Ojs.float_to_js x842)|])
                           | None -> ());
                          x841))|])
    let (toPrecision : t -> ?precision:float -> unit -> string) =
      fun (x848 : t) ->
        fun ?precision:(x845 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x849 = t_to_js x848 in
               Ojs.call (Ojs.get_prop_ascii x849 "toPrecision") "apply"
                 [|x849;((let x846 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x845 with
                           | Some x847 ->
                               ignore
                                 (Ojs.call x846 "push"
                                    [|(Ojs.float_to_js x847)|])
                           | None -> ());
                          x846))|])
    let (valueOf : t -> float) =
      fun (x850 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x850) "valueOf" [||])
    let (to_ml : t -> float) =
      fun (x851 : t) -> Ojs.float_of_js (t_to_js x851)
    let (of_ml : float -> t) =
      fun (x852 : float) -> t_of_js (Ojs.float_to_js x852)
    let (create : ?value:any -> unit -> _Number) =
      fun ?value:(x853 : any option) ->
        fun () ->
          _Number_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x854 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x853 with
                 | Some x855 ->
                     ignore (Ojs.call x854 "push" [|(any_to_js x855)|])
                 | None -> ());
                x854))
    let (get_MAX_VALUE : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "MAX_VALUE")
    let (get_MIN_VALUE : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "MIN_VALUE")
    let (get_NaN : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (get_NEGATIVE_INFINITY : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "NEGATIVE_INFINITY")
    let (get_POSITIVE_INFINITY : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "POSITIVE_INFINITY")
  end
module NumberConstructor =
  struct
    type t = _NumberConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x857 : Ojs.t) -> _NumberConstructor_of_js x857
    and t_to_js : t -> Ojs.t =
      fun (x856 : _NumberConstructor) -> _NumberConstructor_to_js x856
    let (create : t -> ?value:any -> unit -> _Number) =
      fun (x861 : t) ->
        fun ?value:(x858 : any option) ->
          fun () ->
            _Number_of_js
              (Ojs.new_obj_arr (t_to_js x861)
                 (let x859 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x858 with
                   | Some x860 ->
                       ignore (Ojs.call x859 "push" [|(any_to_js x860)|])
                   | None -> ());
                  x859))
    let (apply : t -> ?value:any -> unit -> float) =
      fun (x865 : t) ->
        fun ?value:(x862 : any option) ->
          fun () ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x865) "apply"
                 [|Ojs.null;((let x863 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x862 with
                               | Some x864 ->
                                   ignore
                                     (Ojs.call x863 "push"
                                        [|(any_to_js x864)|])
                               | None -> ());
                              x863))|])
    let (get_prototype : t -> _Number) =
      fun (x866 : t) ->
        _Number_of_js (Ojs.get_prop_ascii (t_to_js x866) "prototype")
    let (get_MAX_VALUE : t -> float) =
      fun (x867 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x867) "MAX_VALUE")
    let (get_MIN_VALUE : t -> float) =
      fun (x868 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x868) "MIN_VALUE")
    let (get_NaN : t -> float) =
      fun (x869 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x869) "NaN")
    let (get_NEGATIVE_INFINITY : t -> float) =
      fun (x870 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x870) "NEGATIVE_INFINITY")
    let (get_POSITIVE_INFINITY : t -> float) =
      fun (x871 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x871) "POSITIVE_INFINITY")
  end
let (number : _NumberConstructor) =
  _NumberConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Number")
module TemplateStringsArray =
  struct
    type t = _TemplateStringsArray
    let rec t_of_js : Ojs.t -> t =
      fun (x873 : Ojs.t) -> _TemplateStringsArray_of_js x873
    and t_to_js : t -> Ojs.t =
      fun (x872 : _TemplateStringsArray) -> _TemplateStringsArray_to_js x872
    let (get_raw : t -> string list) =
      fun (x874 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x874) "raw")
    let (cast : t -> string _ReadonlyArray) =
      fun (x876 : t) -> _ReadonlyArray_of_js Ojs.string_of_js (t_to_js x876)
  end
module ImportMeta =
  struct
    type t = _ImportMeta
    let rec t_of_js : Ojs.t -> t =
      fun (x879 : Ojs.t) -> _ImportMeta_of_js x879
    and t_to_js : t -> Ojs.t =
      fun (x878 : _ImportMeta) -> _ImportMeta_to_js x878
  end
module Math =
  struct
    type t = _Math
    let rec t_of_js : Ojs.t -> t = fun (x881 : Ojs.t) -> _Math_of_js x881
    and t_to_js : t -> Ojs.t = fun (x880 : _Math) -> _Math_to_js x880
    let (get_E : t -> float) =
      fun (x882 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x882) "E")
    let (get_LN10 : t -> float) =
      fun (x883 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x883) "LN10")
    let (get_LN2 : t -> float) =
      fun (x884 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x884) "LN2")
    let (get_LOG2E : t -> float) =
      fun (x885 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x885) "LOG2E")
    let (get_LOG10E : t -> float) =
      fun (x886 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x886) "LOG10E")
    let (get_PI : t -> float) =
      fun (x887 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x887) "PI")
    let (get_SQRT1_2 : t -> float) =
      fun (x888 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x888) "SQRT1_2")
    let (get_SQRT2 : t -> float) =
      fun (x889 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x889) "SQRT2")
    let (abs : t -> x:float -> float) =
      fun (x891 : t) ->
        fun ~x:(x890 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x891) "abs" [|(Ojs.float_to_js x890)|])
    let (acos : t -> x:float -> float) =
      fun (x893 : t) ->
        fun ~x:(x892 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x893) "acos" [|(Ojs.float_to_js x892)|])
    let (asin : t -> x:float -> float) =
      fun (x895 : t) ->
        fun ~x:(x894 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x895) "asin" [|(Ojs.float_to_js x894)|])
    let (atan : t -> x:float -> float) =
      fun (x897 : t) ->
        fun ~x:(x896 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x897) "atan" [|(Ojs.float_to_js x896)|])
    let (atan2 : t -> y:float -> x:float -> float) =
      fun (x900 : t) ->
        fun ~y:(x898 : float) ->
          fun ~x:(x899 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x900) "atan2"
                 [|(Ojs.float_to_js x898);(Ojs.float_to_js x899)|])
    let (ceil : t -> x:float -> float) =
      fun (x902 : t) ->
        fun ~x:(x901 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x902) "ceil" [|(Ojs.float_to_js x901)|])
    let (cos : t -> x:float -> float) =
      fun (x904 : t) ->
        fun ~x:(x903 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x904) "cos" [|(Ojs.float_to_js x903)|])
    let (exp : t -> x:float -> float) =
      fun (x906 : t) ->
        fun ~x:(x905 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x906) "exp" [|(Ojs.float_to_js x905)|])
    let (floor : t -> x:float -> float) =
      fun (x908 : t) ->
        fun ~x:(x907 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x908) "floor" [|(Ojs.float_to_js x907)|])
    let (log : t -> x:float -> float) =
      fun (x910 : t) ->
        fun ~x:(x909 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x910) "log" [|(Ojs.float_to_js x909)|])
    let (max : t -> values:float list -> float) =
      fun (x914 : t) ->
        fun ~values:(x911 : float list) ->
          Ojs.float_of_js
            (let x915 = t_to_js x914 in
             Ojs.call (Ojs.get_prop_ascii x915 "max") "apply"
               [|x915;((let x912 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x913 : float) ->
                             ignore
                               (Ojs.call x912 "push"
                                  [|(Ojs.float_to_js x913)|])) x911;
                        x912))|])
    let (min : t -> values:float list -> float) =
      fun (x919 : t) ->
        fun ~values:(x916 : float list) ->
          Ojs.float_of_js
            (let x920 = t_to_js x919 in
             Ojs.call (Ojs.get_prop_ascii x920 "min") "apply"
               [|x920;((let x917 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x918 : float) ->
                             ignore
                               (Ojs.call x917 "push"
                                  [|(Ojs.float_to_js x918)|])) x916;
                        x917))|])
    let (pow : t -> x:float -> y:float -> float) =
      fun (x923 : t) ->
        fun ~x:(x921 : float) ->
          fun ~y:(x922 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x923) "pow"
                 [|(Ojs.float_to_js x921);(Ojs.float_to_js x922)|])
    let (random : t -> float) =
      fun (x924 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x924) "random" [||])
    let (round : t -> x:float -> float) =
      fun (x926 : t) ->
        fun ~x:(x925 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x926) "round" [|(Ojs.float_to_js x925)|])
    let (sin : t -> x:float -> float) =
      fun (x928 : t) ->
        fun ~x:(x927 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x928) "sin" [|(Ojs.float_to_js x927)|])
    let (sqrt : t -> x:float -> float) =
      fun (x930 : t) ->
        fun ~x:(x929 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x930) "sqrt" [|(Ojs.float_to_js x929)|])
    let (tan : t -> x:float -> float) =
      fun (x932 : t) ->
        fun ~x:(x931 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x932) "tan" [|(Ojs.float_to_js x931)|])
  end
let (math : _Math) = _Math_of_js (Ojs.get_prop_ascii Ojs.global "Math")
module Date =
  struct
    type t = _Date
    let rec t_of_js : Ojs.t -> t = fun (x934 : Ojs.t) -> _Date_of_js x934
    and t_to_js : t -> Ojs.t = fun (x933 : _Date) -> _Date_to_js x933
    let (toLocaleString :
      t ->
        ?locales:string list or_string ->
          ?options:_Intl_DateTimeFormatOptions -> unit -> string)
      =
      fun (x942 : t) ->
        fun ?locales:(x935 : string list or_string option) ->
          fun ?options:(x936 : _Intl_DateTimeFormatOptions option) ->
            fun () ->
              Ojs.string_of_js
                (let x943 = t_to_js x942 in
                 Ojs.call (Ojs.get_prop_ascii x943 "toLocaleString") "apply"
                   [|x943;((let x937 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x935 with
                             | Some x939 ->
                                 ignore
                                   (Ojs.call x937 "push"
                                      [|(or_string_to_js
                                           (fun (x940 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x940) x939)|])
                             | None -> ());
                            (match x936 with
                             | Some x938 ->
                                 ignore
                                   (Ojs.call x937 "push"
                                      [|(_Intl_DateTimeFormatOptions_to_js
                                           x938)|])
                             | None -> ());
                            x937))|])
    let (toLocaleDateString :
      t ->
        ?locales:string list or_string ->
          ?options:_Intl_DateTimeFormatOptions -> unit -> string)
      =
      fun (x951 : t) ->
        fun ?locales:(x944 : string list or_string option) ->
          fun ?options:(x945 : _Intl_DateTimeFormatOptions option) ->
            fun () ->
              Ojs.string_of_js
                (let x952 = t_to_js x951 in
                 Ojs.call (Ojs.get_prop_ascii x952 "toLocaleDateString")
                   "apply"
                   [|x952;((let x946 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x944 with
                             | Some x948 ->
                                 ignore
                                   (Ojs.call x946 "push"
                                      [|(or_string_to_js
                                           (fun (x949 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x949) x948)|])
                             | None -> ());
                            (match x945 with
                             | Some x947 ->
                                 ignore
                                   (Ojs.call x946 "push"
                                      [|(_Intl_DateTimeFormatOptions_to_js
                                           x947)|])
                             | None -> ());
                            x946))|])
    let (toLocaleTimeString :
      t ->
        ?locales:string list or_string ->
          ?options:_Intl_DateTimeFormatOptions -> unit -> string)
      =
      fun (x960 : t) ->
        fun ?locales:(x953 : string list or_string option) ->
          fun ?options:(x954 : _Intl_DateTimeFormatOptions option) ->
            fun () ->
              Ojs.string_of_js
                (let x961 = t_to_js x960 in
                 Ojs.call (Ojs.get_prop_ascii x961 "toLocaleTimeString")
                   "apply"
                   [|x961;((let x955 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x953 with
                             | Some x957 ->
                                 ignore
                                   (Ojs.call x955 "push"
                                      [|(or_string_to_js
                                           (fun (x958 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x958) x957)|])
                             | None -> ());
                            (match x954 with
                             | Some x956 ->
                                 ignore
                                   (Ojs.call x955 "push"
                                      [|(_Intl_DateTimeFormatOptions_to_js
                                           x956)|])
                             | None -> ());
                            x955))|])
    let (toString : t -> string) =
      fun (x962 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x962) "toString" [||])
    let (toDateString : t -> string) =
      fun (x963 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x963) "toDateString" [||])
    let (toTimeString : t -> string) =
      fun (x964 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x964) "toTimeString" [||])
    let (toLocaleString' : t -> string) =
      fun (x965 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x965) "toLocaleString" [||])
    let (toLocaleDateString' : t -> string) =
      fun (x966 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x966) "toLocaleDateString" [||])
    let (toLocaleTimeString' : t -> string) =
      fun (x967 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x967) "toLocaleTimeString" [||])
    let (valueOf : t -> float) =
      fun (x968 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x968) "valueOf" [||])
    let (getTime : t -> float) =
      fun (x969 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x969) "getTime" [||])
    let (getFullYear : t -> float) =
      fun (x970 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x970) "getFullYear" [||])
    let (getUTCFullYear : t -> float) =
      fun (x971 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x971) "getUTCFullYear" [||])
    let (getMonth : t -> float) =
      fun (x972 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x972) "getMonth" [||])
    let (getUTCMonth : t -> float) =
      fun (x973 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x973) "getUTCMonth" [||])
    let (getDate : t -> float) =
      fun (x974 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x974) "getDate" [||])
    let (getUTCDate : t -> float) =
      fun (x975 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x975) "getUTCDate" [||])
    let (getDay : t -> float) =
      fun (x976 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x976) "getDay" [||])
    let (getUTCDay : t -> float) =
      fun (x977 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x977) "getUTCDay" [||])
    let (getHours : t -> float) =
      fun (x978 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x978) "getHours" [||])
    let (getUTCHours : t -> float) =
      fun (x979 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x979) "getUTCHours" [||])
    let (getMinutes : t -> float) =
      fun (x980 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x980) "getMinutes" [||])
    let (getUTCMinutes : t -> float) =
      fun (x981 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x981) "getUTCMinutes" [||])
    let (getSeconds : t -> float) =
      fun (x982 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x982) "getSeconds" [||])
    let (getUTCSeconds : t -> float) =
      fun (x983 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x983) "getUTCSeconds" [||])
    let (getMilliseconds : t -> float) =
      fun (x984 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x984) "getMilliseconds" [||])
    let (getUTCMilliseconds : t -> float) =
      fun (x985 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x985) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : t -> float) =
      fun (x986 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x986) "getTimezoneOffset" [||])
    let (setTime : t -> time:float -> float) =
      fun (x988 : t) ->
        fun ~time:(x987 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x988) "setTime" [|(Ojs.float_to_js x987)|])
    let (setMilliseconds : t -> ms:float -> float) =
      fun (x990 : t) ->
        fun ~ms:(x989 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x990) "setMilliseconds"
               [|(Ojs.float_to_js x989)|])
    let (setUTCMilliseconds : t -> ms:float -> float) =
      fun (x992 : t) ->
        fun ~ms:(x991 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x992) "setUTCMilliseconds"
               [|(Ojs.float_to_js x991)|])
    let (setSeconds : t -> sec:float -> ?ms:float -> unit -> float) =
      fun (x997 : t) ->
        fun ~sec:(x993 : float) ->
          fun ?ms:(x994 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x998 = t_to_js x997 in
                 Ojs.call (Ojs.get_prop_ascii x998 "setSeconds") "apply"
                   [|x998;((let x995 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x995 "push"
                                 [|(Ojs.float_to_js x993)|]);
                            (match x994 with
                             | Some x996 ->
                                 ignore
                                   (Ojs.call x995 "push"
                                      [|(Ojs.float_to_js x996)|])
                             | None -> ());
                            x995))|])
    let (setUTCSeconds : t -> sec:float -> ?ms:float -> unit -> float) =
      fun (x1003 : t) ->
        fun ~sec:(x999 : float) ->
          fun ?ms:(x1000 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1004 = t_to_js x1003 in
                 Ojs.call (Ojs.get_prop_ascii x1004 "setUTCSeconds") "apply"
                   [|x1004;((let x1001 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1001 "push"
                                  [|(Ojs.float_to_js x999)|]);
                             (match x1000 with
                              | Some x1002 ->
                                  ignore
                                    (Ojs.call x1001 "push"
                                       [|(Ojs.float_to_js x1002)|])
                              | None -> ());
                             x1001))|])
    let (setMinutes :
      t -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1011 : t) ->
        fun ~min:(x1005 : float) ->
          fun ?sec:(x1006 : float option) ->
            fun ?ms:(x1007 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1012 = t_to_js x1011 in
                   Ojs.call (Ojs.get_prop_ascii x1012 "setMinutes") "apply"
                     [|x1012;((let x1008 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1008 "push"
                                    [|(Ojs.float_to_js x1005)|]);
                               (match x1006 with
                                | Some x1010 ->
                                    ignore
                                      (Ojs.call x1008 "push"
                                         [|(Ojs.float_to_js x1010)|])
                                | None -> ());
                               (match x1007 with
                                | Some x1009 ->
                                    ignore
                                      (Ojs.call x1008 "push"
                                         [|(Ojs.float_to_js x1009)|])
                                | None -> ());
                               x1008))|])
    let (setUTCMinutes :
      t -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1019 : t) ->
        fun ~min:(x1013 : float) ->
          fun ?sec:(x1014 : float option) ->
            fun ?ms:(x1015 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1020 = t_to_js x1019 in
                   Ojs.call (Ojs.get_prop_ascii x1020 "setUTCMinutes")
                     "apply"
                     [|x1020;((let x1016 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1016 "push"
                                    [|(Ojs.float_to_js x1013)|]);
                               (match x1014 with
                                | Some x1018 ->
                                    ignore
                                      (Ojs.call x1016 "push"
                                         [|(Ojs.float_to_js x1018)|])
                                | None -> ());
                               (match x1015 with
                                | Some x1017 ->
                                    ignore
                                      (Ojs.call x1016 "push"
                                         [|(Ojs.float_to_js x1017)|])
                                | None -> ());
                               x1016))|])
    let (setHours :
      t ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1029 : t) ->
        fun ~hours:(x1021 : float) ->
          fun ?min:(x1022 : float option) ->
            fun ?sec:(x1023 : float option) ->
              fun ?ms:(x1024 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1030 = t_to_js x1029 in
                     Ojs.call (Ojs.get_prop_ascii x1030 "setHours") "apply"
                       [|x1030;((let x1025 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1025 "push"
                                      [|(Ojs.float_to_js x1021)|]);
                                 (match x1022 with
                                  | Some x1028 ->
                                      ignore
                                        (Ojs.call x1025 "push"
                                           [|(Ojs.float_to_js x1028)|])
                                  | None -> ());
                                 (match x1023 with
                                  | Some x1027 ->
                                      ignore
                                        (Ojs.call x1025 "push"
                                           [|(Ojs.float_to_js x1027)|])
                                  | None -> ());
                                 (match x1024 with
                                  | Some x1026 ->
                                      ignore
                                        (Ojs.call x1025 "push"
                                           [|(Ojs.float_to_js x1026)|])
                                  | None -> ());
                                 x1025))|])
    let (setUTCHours :
      t ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1039 : t) ->
        fun ~hours:(x1031 : float) ->
          fun ?min:(x1032 : float option) ->
            fun ?sec:(x1033 : float option) ->
              fun ?ms:(x1034 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1040 = t_to_js x1039 in
                     Ojs.call (Ojs.get_prop_ascii x1040 "setUTCHours")
                       "apply"
                       [|x1040;((let x1035 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1035 "push"
                                      [|(Ojs.float_to_js x1031)|]);
                                 (match x1032 with
                                  | Some x1038 ->
                                      ignore
                                        (Ojs.call x1035 "push"
                                           [|(Ojs.float_to_js x1038)|])
                                  | None -> ());
                                 (match x1033 with
                                  | Some x1037 ->
                                      ignore
                                        (Ojs.call x1035 "push"
                                           [|(Ojs.float_to_js x1037)|])
                                  | None -> ());
                                 (match x1034 with
                                  | Some x1036 ->
                                      ignore
                                        (Ojs.call x1035 "push"
                                           [|(Ojs.float_to_js x1036)|])
                                  | None -> ());
                                 x1035))|])
    let (setDate : t -> date:float -> float) =
      fun (x1042 : t) ->
        fun ~date:(x1041 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x1042) "setDate" [|(Ojs.float_to_js x1041)|])
    let (setUTCDate : t -> date:float -> float) =
      fun (x1044 : t) ->
        fun ~date:(x1043 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x1044) "setUTCDate"
               [|(Ojs.float_to_js x1043)|])
    let (setMonth : t -> month:float -> ?date:float -> unit -> float) =
      fun (x1049 : t) ->
        fun ~month:(x1045 : float) ->
          fun ?date:(x1046 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1050 = t_to_js x1049 in
                 Ojs.call (Ojs.get_prop_ascii x1050 "setMonth") "apply"
                   [|x1050;((let x1047 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1047 "push"
                                  [|(Ojs.float_to_js x1045)|]);
                             (match x1046 with
                              | Some x1048 ->
                                  ignore
                                    (Ojs.call x1047 "push"
                                       [|(Ojs.float_to_js x1048)|])
                              | None -> ());
                             x1047))|])
    let (setUTCMonth : t -> month:float -> ?date:float -> unit -> float) =
      fun (x1055 : t) ->
        fun ~month:(x1051 : float) ->
          fun ?date:(x1052 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1056 = t_to_js x1055 in
                 Ojs.call (Ojs.get_prop_ascii x1056 "setUTCMonth") "apply"
                   [|x1056;((let x1053 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1053 "push"
                                  [|(Ojs.float_to_js x1051)|]);
                             (match x1052 with
                              | Some x1054 ->
                                  ignore
                                    (Ojs.call x1053 "push"
                                       [|(Ojs.float_to_js x1054)|])
                              | None -> ());
                             x1053))|])
    let (setFullYear :
      t -> year:float -> ?month:float -> ?date:float -> unit -> float) =
      fun (x1063 : t) ->
        fun ~year:(x1057 : float) ->
          fun ?month:(x1058 : float option) ->
            fun ?date:(x1059 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1064 = t_to_js x1063 in
                   Ojs.call (Ojs.get_prop_ascii x1064 "setFullYear") "apply"
                     [|x1064;((let x1060 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1060 "push"
                                    [|(Ojs.float_to_js x1057)|]);
                               (match x1058 with
                                | Some x1062 ->
                                    ignore
                                      (Ojs.call x1060 "push"
                                         [|(Ojs.float_to_js x1062)|])
                                | None -> ());
                               (match x1059 with
                                | Some x1061 ->
                                    ignore
                                      (Ojs.call x1060 "push"
                                         [|(Ojs.float_to_js x1061)|])
                                | None -> ());
                               x1060))|])
    let (setUTCFullYear :
      t -> year:float -> ?month:float -> ?date:float -> unit -> float) =
      fun (x1071 : t) ->
        fun ~year:(x1065 : float) ->
          fun ?month:(x1066 : float option) ->
            fun ?date:(x1067 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1072 = t_to_js x1071 in
                   Ojs.call (Ojs.get_prop_ascii x1072 "setUTCFullYear")
                     "apply"
                     [|x1072;((let x1068 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1068 "push"
                                    [|(Ojs.float_to_js x1065)|]);
                               (match x1066 with
                                | Some x1070 ->
                                    ignore
                                      (Ojs.call x1068 "push"
                                         [|(Ojs.float_to_js x1070)|])
                                | None -> ());
                               (match x1067 with
                                | Some x1069 ->
                                    ignore
                                      (Ojs.call x1068 "push"
                                         [|(Ojs.float_to_js x1069)|])
                                | None -> ());
                               x1068))|])
    let (toUTCString : t -> string) =
      fun (x1073 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1073) "toUTCString" [||])
    let (toISOString : t -> string) =
      fun (x1074 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1074) "toISOString" [||])
    let (toJSON : t -> ?key:any -> unit -> string) =
      fun (x1078 : t) ->
        fun ?key:(x1075 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x1079 = t_to_js x1078 in
               Ojs.call (Ojs.get_prop_ascii x1079 "toJSON") "apply"
                 [|x1079;((let x1076 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1075 with
                            | Some x1077 ->
                                ignore
                                  (Ojs.call x1076 "push"
                                     [|(any_to_js x1077)|])
                            | None -> ());
                           x1076))|])
    let (create : unit -> _Date) =
      fun () ->
        _Date_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create' : value:string or_number -> _Date) =
      fun ~value:(x1080 : string or_number) ->
        _Date_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|(or_number_to_js Ojs.string_to_js x1080)|])
    let (create'' :
      t ->
        year:float ->
          month:float ->
            ?date:float ->
              ?hours:float ->
                ?minutes:float ->
                  ?seconds:float -> ?ms:float -> unit -> _Date)
      =
      fun (x1082 : t) ->
        fun ~year:(x1083 : float) ->
          fun ~month:(x1084 : float) ->
            fun ?date:(x1085 : float option) ->
              fun ?hours:(x1086 : float option) ->
                fun ?minutes:(x1087 : float option) ->
                  fun ?seconds:(x1088 : float option) ->
                    fun ?ms:(x1089 : float option) ->
                      fun () ->
                        _Date_of_js
                          (Ojs.new_obj_arr
                             (Ojs.get_prop_ascii Ojs.global "Date")
                             (let x1090 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1090 "push" [|(t_to_js x1082)|]);
                              ignore
                                (Ojs.call x1090 "push"
                                   [|(Ojs.float_to_js x1083)|]);
                              ignore
                                (Ojs.call x1090 "push"
                                   [|(Ojs.float_to_js x1084)|]);
                              (match x1085 with
                               | Some x1095 ->
                                   ignore
                                     (Ojs.call x1090 "push"
                                        [|(Ojs.float_to_js x1095)|])
                               | None -> ());
                              (match x1086 with
                               | Some x1094 ->
                                   ignore
                                     (Ojs.call x1090 "push"
                                        [|(Ojs.float_to_js x1094)|])
                               | None -> ());
                              (match x1087 with
                               | Some x1093 ->
                                   ignore
                                     (Ojs.call x1090 "push"
                                        [|(Ojs.float_to_js x1093)|])
                               | None -> ());
                              (match x1088 with
                               | Some x1092 ->
                                   ignore
                                     (Ojs.call x1090 "push"
                                        [|(Ojs.float_to_js x1092)|])
                               | None -> ());
                              (match x1089 with
                               | Some x1091 ->
                                   ignore
                                     (Ojs.call x1090 "push"
                                        [|(Ojs.float_to_js x1091)|])
                               | None -> ());
                              x1090))
    let (parse : s:string -> float) =
      fun ~s:(x1096 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x1096)|])
    let (utc :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x1097 : float) ->
        fun ~month:(x1098 : float) ->
          fun ?date:(x1099 : float option) ->
            fun ?hours:(x1100 : float option) ->
              fun ?minutes:(x1101 : float option) ->
                fun ?seconds:(x1102 : float option) ->
                  fun ?ms:(x1103 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x1110 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x1110 "UTC") "apply"
                           [|x1110;((let x1104 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x1104 "push"
                                          [|(Ojs.float_to_js x1097)|]);
                                     ignore
                                       (Ojs.call x1104 "push"
                                          [|(Ojs.float_to_js x1098)|]);
                                     (match x1099 with
                                      | Some x1109 ->
                                          ignore
                                            (Ojs.call x1104 "push"
                                               [|(Ojs.float_to_js x1109)|])
                                      | None -> ());
                                     (match x1100 with
                                      | Some x1108 ->
                                          ignore
                                            (Ojs.call x1104 "push"
                                               [|(Ojs.float_to_js x1108)|])
                                      | None -> ());
                                     (match x1101 with
                                      | Some x1107 ->
                                          ignore
                                            (Ojs.call x1104 "push"
                                               [|(Ojs.float_to_js x1107)|])
                                      | None -> ());
                                     (match x1102 with
                                      | Some x1106 ->
                                          ignore
                                            (Ojs.call x1104 "push"
                                               [|(Ojs.float_to_js x1106)|])
                                      | None -> ());
                                     (match x1103 with
                                      | Some x1105 ->
                                          ignore
                                            (Ojs.call x1104 "push"
                                               [|(Ojs.float_to_js x1105)|])
                                      | None -> ());
                                     x1104))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
  end
module DateConstructor =
  struct
    type t = _DateConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1112 : Ojs.t) -> _DateConstructor_of_js x1112
    and t_to_js : t -> Ojs.t =
      fun (x1111 : _DateConstructor) -> _DateConstructor_to_js x1111
    let (create : t -> _Date) =
      fun (x1113 : t) -> _Date_of_js (Ojs.new_obj (t_to_js x1113) [||])
    let (create' : t -> value:string or_number -> _Date) =
      fun (x1116 : t) ->
        fun ~value:(x1114 : string or_number) ->
          _Date_of_js
            (Ojs.new_obj (t_to_js x1116)
               [|(or_number_to_js Ojs.string_to_js x1114)|])
    let (create'' :
      t ->
        year:float ->
          month:float ->
            ?date:float ->
              ?hours:float ->
                ?minutes:float ->
                  ?seconds:float -> ?ms:float -> unit -> _Date)
      =
      fun (x1130 : t) ->
        fun ~year:(x1117 : float) ->
          fun ~month:(x1118 : float) ->
            fun ?date:(x1119 : float option) ->
              fun ?hours:(x1120 : float option) ->
                fun ?minutes:(x1121 : float option) ->
                  fun ?seconds:(x1122 : float option) ->
                    fun ?ms:(x1123 : float option) ->
                      fun () ->
                        _Date_of_js
                          (Ojs.new_obj_arr (t_to_js x1130)
                             (let x1124 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1124 "push"
                                   [|(Ojs.float_to_js x1117)|]);
                              ignore
                                (Ojs.call x1124 "push"
                                   [|(Ojs.float_to_js x1118)|]);
                              (match x1119 with
                               | Some x1129 ->
                                   ignore
                                     (Ojs.call x1124 "push"
                                        [|(Ojs.float_to_js x1129)|])
                               | None -> ());
                              (match x1120 with
                               | Some x1128 ->
                                   ignore
                                     (Ojs.call x1124 "push"
                                        [|(Ojs.float_to_js x1128)|])
                               | None -> ());
                              (match x1121 with
                               | Some x1127 ->
                                   ignore
                                     (Ojs.call x1124 "push"
                                        [|(Ojs.float_to_js x1127)|])
                               | None -> ());
                              (match x1122 with
                               | Some x1126 ->
                                   ignore
                                     (Ojs.call x1124 "push"
                                        [|(Ojs.float_to_js x1126)|])
                               | None -> ());
                              (match x1123 with
                               | Some x1125 ->
                                   ignore
                                     (Ojs.call x1124 "push"
                                        [|(Ojs.float_to_js x1125)|])
                               | None -> ());
                              x1124))
    let (apply : t -> string) =
      fun (x1131 : t) -> Ojs.string_of_js (Ojs.apply (t_to_js x1131) [||])
    let (get_prototype : t -> _Date) =
      fun (x1132 : t) ->
        _Date_of_js (Ojs.get_prop_ascii (t_to_js x1132) "prototype")
    let (parse : t -> s:string -> float) =
      fun (x1134 : t) ->
        fun ~s:(x1133 : string) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x1134) "parse" [|(Ojs.string_to_js x1133)|])
    let (utc :
      t ->
        year:float ->
          month:float ->
            ?date:float ->
              ?hours:float ->
                ?minutes:float ->
                  ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun (x1148 : t) ->
        fun ~year:(x1135 : float) ->
          fun ~month:(x1136 : float) ->
            fun ?date:(x1137 : float option) ->
              fun ?hours:(x1138 : float option) ->
                fun ?minutes:(x1139 : float option) ->
                  fun ?seconds:(x1140 : float option) ->
                    fun ?ms:(x1141 : float option) ->
                      fun () ->
                        Ojs.float_of_js
                          (let x1149 = t_to_js x1148 in
                           Ojs.call (Ojs.get_prop_ascii x1149 "UTC") "apply"
                             [|x1149;((let x1142 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       ignore
                                         (Ojs.call x1142 "push"
                                            [|(Ojs.float_to_js x1135)|]);
                                       ignore
                                         (Ojs.call x1142 "push"
                                            [|(Ojs.float_to_js x1136)|]);
                                       (match x1137 with
                                        | Some x1147 ->
                                            ignore
                                              (Ojs.call x1142 "push"
                                                 [|(Ojs.float_to_js x1147)|])
                                        | None -> ());
                                       (match x1138 with
                                        | Some x1146 ->
                                            ignore
                                              (Ojs.call x1142 "push"
                                                 [|(Ojs.float_to_js x1146)|])
                                        | None -> ());
                                       (match x1139 with
                                        | Some x1145 ->
                                            ignore
                                              (Ojs.call x1142 "push"
                                                 [|(Ojs.float_to_js x1145)|])
                                        | None -> ());
                                       (match x1140 with
                                        | Some x1144 ->
                                            ignore
                                              (Ojs.call x1142 "push"
                                                 [|(Ojs.float_to_js x1144)|])
                                        | None -> ());
                                       (match x1141 with
                                        | Some x1143 ->
                                            ignore
                                              (Ojs.call x1142 "push"
                                                 [|(Ojs.float_to_js x1143)|])
                                        | None -> ());
                                       x1142))|])
    let (now : t -> float) =
      fun (x1150 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1150) "now" [||])
  end
let (date : _DateConstructor) =
  _DateConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Date")
module RegExpMatchArray =
  struct
    type t = _RegExpMatchArray
    let rec t_of_js : Ojs.t -> t =
      fun (x1152 : Ojs.t) -> _RegExpMatchArray_of_js x1152
    and t_to_js : t -> Ojs.t =
      fun (x1151 : _RegExpMatchArray) -> _RegExpMatchArray_to_js x1151
    let (get_index : t -> float) =
      fun (x1153 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1153) "index")
    let (set_index : t -> float -> unit) =
      fun (x1154 : t) ->
        fun (x1155 : float) ->
          Ojs.set_prop_ascii (t_to_js x1154) "index" (Ojs.float_to_js x1155)
    let (get_input : t -> string) =
      fun (x1156 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1156) "input")
    let (set_input : t -> string -> unit) =
      fun (x1157 : t) ->
        fun (x1158 : string) ->
          Ojs.set_prop_ascii (t_to_js x1157) "input" (Ojs.string_to_js x1158)
    let (cast : t -> string _Array) =
      fun (x1159 : t) -> _Array_of_js Ojs.string_of_js (t_to_js x1159)
  end
module RegExpExecArray =
  struct
    type t = _RegExpExecArray
    let rec t_of_js : Ojs.t -> t =
      fun (x1162 : Ojs.t) -> _RegExpExecArray_of_js x1162
    and t_to_js : t -> Ojs.t =
      fun (x1161 : _RegExpExecArray) -> _RegExpExecArray_to_js x1161
    let (get_index : t -> float) =
      fun (x1163 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1163) "index")
    let (set_index : t -> float -> unit) =
      fun (x1164 : t) ->
        fun (x1165 : float) ->
          Ojs.set_prop_ascii (t_to_js x1164) "index" (Ojs.float_to_js x1165)
    let (get_input : t -> string) =
      fun (x1166 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1166) "input")
    let (set_input : t -> string -> unit) =
      fun (x1167 : t) ->
        fun (x1168 : string) ->
          Ojs.set_prop_ascii (t_to_js x1167) "input" (Ojs.string_to_js x1168)
    let (cast : t -> string _Array) =
      fun (x1169 : t) -> _Array_of_js Ojs.string_of_js (t_to_js x1169)
  end
module RegExp =
  struct
    type t = _RegExp
    let rec t_of_js : Ojs.t -> t = fun (x1172 : Ojs.t) -> _RegExp_of_js x1172
    and t_to_js : t -> Ojs.t = fun (x1171 : _RegExp) -> _RegExp_to_js x1171
    let (exec : t -> string:string -> _RegExpExecArray or_null) =
      fun (x1174 : t) ->
        fun ~string:(x1173 : string) ->
          or_null_of_js _RegExpExecArray_of_js
            (Ojs.call (t_to_js x1174) "exec" [|(Ojs.string_to_js x1173)|])
    let (test : t -> string:string -> bool) =
      fun (x1177 : t) ->
        fun ~string:(x1176 : string) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x1177) "test" [|(Ojs.string_to_js x1176)|])
    let (get_source : t -> string) =
      fun (x1178 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1178) "source")
    let (get_global : t -> bool) =
      fun (x1179 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1179) "global")
    let (get_ignoreCase : t -> bool) =
      fun (x1180 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1180) "ignoreCase")
    let (get_multiline : t -> bool) =
      fun (x1181 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1181) "multiline")
    let (get_lastIndex : t -> float) =
      fun (x1182 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1182) "lastIndex")
    let (set_lastIndex : t -> float -> unit) =
      fun (x1183 : t) ->
        fun (x1184 : float) ->
          Ojs.set_prop_ascii (t_to_js x1183) "lastIndex"
            (Ojs.float_to_js x1184)
    let (compile : t -> t) =
      fun (x1185 : t) -> t_of_js (Ojs.call (t_to_js x1185) "compile" [||])
    let (create : pattern:_RegExp or_string -> _RegExp) =
      fun ~pattern:(x1186 : _RegExp or_string) ->
        _RegExp_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|(or_string_to_js _RegExp_to_js x1186)|])
    let (create' : pattern:string -> ?flags:string -> unit -> _RegExp) =
      fun ~pattern:(x1188 : string) ->
        fun ?flags:(x1189 : string option) ->
          fun () ->
            _RegExp_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1190 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1190 "push" [|(Ojs.string_to_js x1188)|]);
                  (match x1189 with
                   | Some x1191 ->
                       ignore
                         (Ojs.call x1190 "push" [|(Ojs.string_to_js x1191)|])
                   | None -> ());
                  x1190))
    let (get__1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$1" [||])
    let (set__1 : string -> unit) =
      fun (x1192 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$1"
             [|(Ojs.string_to_js x1192)|])
    let (get__2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$2" [||])
    let (set__2 : string -> unit) =
      fun (x1193 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$2"
             [|(Ojs.string_to_js x1193)|])
    let (get__3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$3" [||])
    let (set__3 : string -> unit) =
      fun (x1194 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$3"
             [|(Ojs.string_to_js x1194)|])
    let (get__4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$4" [||])
    let (set__4 : string -> unit) =
      fun (x1195 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$4"
             [|(Ojs.string_to_js x1195)|])
    let (get__5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$5" [||])
    let (set__5 : string -> unit) =
      fun (x1196 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$5"
             [|(Ojs.string_to_js x1196)|])
    let (get__6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$6" [||])
    let (set__6 : string -> unit) =
      fun (x1197 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$6"
             [|(Ojs.string_to_js x1197)|])
    let (get__7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$7" [||])
    let (set__7 : string -> unit) =
      fun (x1198 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$7"
             [|(Ojs.string_to_js x1198)|])
    let (get__8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$8" [||])
    let (set__8 : string -> unit) =
      fun (x1199 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$8"
             [|(Ojs.string_to_js x1199)|])
    let (get__9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$9" [||])
    let (set__9 : string -> unit) =
      fun (x1200 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$9"
             [|(Ojs.string_to_js x1200)|])
    let (get_lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "lastMatch" [||])
    let (set_lastMatch : string -> unit) =
      fun (x1201 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "lastMatch"
             [|(Ojs.string_to_js x1201)|])
  end
module RegExpConstructor =
  struct
    type t = _RegExpConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1203 : Ojs.t) -> _RegExpConstructor_of_js x1203
    and t_to_js : t -> Ojs.t =
      fun (x1202 : _RegExpConstructor) -> _RegExpConstructor_to_js x1202
    let (create : t -> pattern:_RegExp or_string -> _RegExp) =
      fun (x1206 : t) ->
        fun ~pattern:(x1204 : _RegExp or_string) ->
          _RegExp_of_js
            (Ojs.new_obj (t_to_js x1206)
               [|(or_string_to_js _RegExp_to_js x1204)|])
    let (create' : t -> pattern:string -> ?flags:string -> unit -> _RegExp) =
      fun (x1211 : t) ->
        fun ~pattern:(x1207 : string) ->
          fun ?flags:(x1208 : string option) ->
            fun () ->
              _RegExp_of_js
                (Ojs.new_obj_arr (t_to_js x1211)
                   (let x1209 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x1209 "push" [|(Ojs.string_to_js x1207)|]);
                    (match x1208 with
                     | Some x1210 ->
                         ignore
                           (Ojs.call x1209 "push"
                              [|(Ojs.string_to_js x1210)|])
                     | None -> ());
                    x1209))
    let (apply : t -> pattern:_RegExp or_string -> _RegExp) =
      fun (x1214 : t) ->
        fun ~pattern:(x1212 : _RegExp or_string) ->
          _RegExp_of_js
            (Ojs.apply (t_to_js x1214)
               [|(or_string_to_js _RegExp_to_js x1212)|])
    let (apply' : t -> pattern:string -> ?flags:string -> unit -> _RegExp) =
      fun (x1219 : t) ->
        fun ~pattern:(x1215 : string) ->
          fun ?flags:(x1216 : string option) ->
            fun () ->
              _RegExp_of_js
                (Ojs.call (t_to_js x1219) "apply"
                   [|Ojs.null;((let x1217 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x1217 "push"
                                     [|(Ojs.string_to_js x1215)|]);
                                (match x1216 with
                                 | Some x1218 ->
                                     ignore
                                       (Ojs.call x1217 "push"
                                          [|(Ojs.string_to_js x1218)|])
                                 | None -> ());
                                x1217))|])
    let (get_prototype : t -> _RegExp) =
      fun (x1220 : t) ->
        _RegExp_of_js (Ojs.get_prop_ascii (t_to_js x1220) "prototype")
    let (get__1 : t -> string) =
      fun (x1221 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1221) "$1")
    let (set__1 : t -> string -> unit) =
      fun (x1222 : t) ->
        fun (x1223 : string) ->
          Ojs.set_prop_ascii (t_to_js x1222) "$1" (Ojs.string_to_js x1223)
    let (get__2 : t -> string) =
      fun (x1224 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1224) "$2")
    let (set__2 : t -> string -> unit) =
      fun (x1225 : t) ->
        fun (x1226 : string) ->
          Ojs.set_prop_ascii (t_to_js x1225) "$2" (Ojs.string_to_js x1226)
    let (get__3 : t -> string) =
      fun (x1227 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1227) "$3")
    let (set__3 : t -> string -> unit) =
      fun (x1228 : t) ->
        fun (x1229 : string) ->
          Ojs.set_prop_ascii (t_to_js x1228) "$3" (Ojs.string_to_js x1229)
    let (get__4 : t -> string) =
      fun (x1230 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1230) "$4")
    let (set__4 : t -> string -> unit) =
      fun (x1231 : t) ->
        fun (x1232 : string) ->
          Ojs.set_prop_ascii (t_to_js x1231) "$4" (Ojs.string_to_js x1232)
    let (get__5 : t -> string) =
      fun (x1233 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1233) "$5")
    let (set__5 : t -> string -> unit) =
      fun (x1234 : t) ->
        fun (x1235 : string) ->
          Ojs.set_prop_ascii (t_to_js x1234) "$5" (Ojs.string_to_js x1235)
    let (get__6 : t -> string) =
      fun (x1236 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1236) "$6")
    let (set__6 : t -> string -> unit) =
      fun (x1237 : t) ->
        fun (x1238 : string) ->
          Ojs.set_prop_ascii (t_to_js x1237) "$6" (Ojs.string_to_js x1238)
    let (get__7 : t -> string) =
      fun (x1239 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1239) "$7")
    let (set__7 : t -> string -> unit) =
      fun (x1240 : t) ->
        fun (x1241 : string) ->
          Ojs.set_prop_ascii (t_to_js x1240) "$7" (Ojs.string_to_js x1241)
    let (get__8 : t -> string) =
      fun (x1242 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1242) "$8")
    let (set__8 : t -> string -> unit) =
      fun (x1243 : t) ->
        fun (x1244 : string) ->
          Ojs.set_prop_ascii (t_to_js x1243) "$8" (Ojs.string_to_js x1244)
    let (get__9 : t -> string) =
      fun (x1245 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1245) "$9")
    let (set__9 : t -> string -> unit) =
      fun (x1246 : t) ->
        fun (x1247 : string) ->
          Ojs.set_prop_ascii (t_to_js x1246) "$9" (Ojs.string_to_js x1247)
    let (get_lastMatch : t -> string) =
      fun (x1248 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1248) "lastMatch")
    let (set_lastMatch : t -> string -> unit) =
      fun (x1249 : t) ->
        fun (x1250 : string) ->
          Ojs.set_prop_ascii (t_to_js x1249) "lastMatch"
            (Ojs.string_to_js x1250)
  end
let (regExp : _RegExpConstructor) =
  _RegExpConstructor_of_js (Ojs.get_prop_ascii Ojs.global "RegExp")
module Error =
  struct
    type t = _Error
    let rec t_of_js : Ojs.t -> t = fun (x1252 : Ojs.t) -> _Error_of_js x1252
    and t_to_js : t -> Ojs.t = fun (x1251 : _Error) -> _Error_to_js x1251
    let (get_name : t -> string) =
      fun (x1253 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1253) "name")
    let (set_name : t -> string -> unit) =
      fun (x1254 : t) ->
        fun (x1255 : string) ->
          Ojs.set_prop_ascii (t_to_js x1254) "name" (Ojs.string_to_js x1255)
    let (get_message : t -> string) =
      fun (x1256 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1256) "message")
    let (set_message : t -> string -> unit) =
      fun (x1257 : t) ->
        fun (x1258 : string) ->
          Ojs.set_prop_ascii (t_to_js x1257) "message"
            (Ojs.string_to_js x1258)
    let (get_stack : t -> string) =
      fun (x1259 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1259) "stack")
    let (set_stack : t -> string -> unit) =
      fun (x1260 : t) ->
        fun (x1261 : string) ->
          Ojs.set_prop_ascii (t_to_js x1260) "stack" (Ojs.string_to_js x1261)
    let (create : ?message:string -> unit -> _Error) =
      fun ?message:(x1262 : string option) ->
        fun () ->
          _Error_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x1263 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1262 with
                 | Some x1264 ->
                     ignore
                       (Ojs.call x1263 "push" [|(Ojs.string_to_js x1264)|])
                 | None -> ());
                x1263))
  end
module ErrorConstructor =
  struct
    type t = _ErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1266 : Ojs.t) -> _ErrorConstructor_of_js x1266
    and t_to_js : t -> Ojs.t =
      fun (x1265 : _ErrorConstructor) -> _ErrorConstructor_to_js x1265
    let (create : t -> ?message:string -> unit -> _Error) =
      fun (x1270 : t) ->
        fun ?message:(x1267 : string option) ->
          fun () ->
            _Error_of_js
              (Ojs.new_obj_arr (t_to_js x1270)
                 (let x1268 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1267 with
                   | Some x1269 ->
                       ignore
                         (Ojs.call x1268 "push" [|(Ojs.string_to_js x1269)|])
                   | None -> ());
                  x1268))
    let (apply : t -> ?message:string -> unit -> _Error) =
      fun (x1274 : t) ->
        fun ?message:(x1271 : string option) ->
          fun () ->
            _Error_of_js
              (Ojs.call (t_to_js x1274) "apply"
                 [|Ojs.null;((let x1272 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1271 with
                               | Some x1273 ->
                                   ignore
                                     (Ojs.call x1272 "push"
                                        [|(Ojs.string_to_js x1273)|])
                               | None -> ());
                              x1272))|])
    let (get_prototype : t -> _Error) =
      fun (x1275 : t) ->
        _Error_of_js (Ojs.get_prop_ascii (t_to_js x1275) "prototype")
  end
let (error : _ErrorConstructor) =
  _ErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Error")
module EvalError =
  struct
    type t = _EvalError
    let rec t_of_js : Ojs.t -> t =
      fun (x1277 : Ojs.t) -> _EvalError_of_js x1277
    and t_to_js : t -> Ojs.t =
      fun (x1276 : _EvalError) -> _EvalError_to_js x1276
    let (cast : t -> _Error) =
      fun (x1278 : t) -> _Error_of_js (t_to_js x1278)
    let (create : ?message:string -> unit -> _EvalError) =
      fun ?message:(x1279 : string option) ->
        fun () ->
          _EvalError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x1280 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1279 with
                 | Some x1281 ->
                     ignore
                       (Ojs.call x1280 "push" [|(Ojs.string_to_js x1281)|])
                 | None -> ());
                x1280))
  end
module EvalErrorConstructor =
  struct
    type t = _EvalErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1283 : Ojs.t) -> _EvalErrorConstructor_of_js x1283
    and t_to_js : t -> Ojs.t =
      fun (x1282 : _EvalErrorConstructor) ->
        _EvalErrorConstructor_to_js x1282
    let (create : t -> ?message:string -> unit -> _EvalError) =
      fun (x1287 : t) ->
        fun ?message:(x1284 : string option) ->
          fun () ->
            _EvalError_of_js
              (Ojs.new_obj_arr (t_to_js x1287)
                 (let x1285 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1284 with
                   | Some x1286 ->
                       ignore
                         (Ojs.call x1285 "push" [|(Ojs.string_to_js x1286)|])
                   | None -> ());
                  x1285))
    let (apply : t -> ?message:string -> unit -> _EvalError) =
      fun (x1291 : t) ->
        fun ?message:(x1288 : string option) ->
          fun () ->
            _EvalError_of_js
              (Ojs.call (t_to_js x1291) "apply"
                 [|Ojs.null;((let x1289 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1288 with
                               | Some x1290 ->
                                   ignore
                                     (Ojs.call x1289 "push"
                                        [|(Ojs.string_to_js x1290)|])
                               | None -> ());
                              x1289))|])
    let (get_prototype : t -> _EvalError) =
      fun (x1292 : t) ->
        _EvalError_of_js (Ojs.get_prop_ascii (t_to_js x1292) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1293 : t) -> _ErrorConstructor_of_js (t_to_js x1293)
  end
let (evalError : _EvalErrorConstructor) =
  _EvalErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "EvalError")
module RangeError =
  struct
    type t = _RangeError
    let rec t_of_js : Ojs.t -> t =
      fun (x1295 : Ojs.t) -> _RangeError_of_js x1295
    and t_to_js : t -> Ojs.t =
      fun (x1294 : _RangeError) -> _RangeError_to_js x1294
    let (cast : t -> _Error) =
      fun (x1296 : t) -> _Error_of_js (t_to_js x1296)
    let (create : ?message:string -> unit -> _RangeError) =
      fun ?message:(x1297 : string option) ->
        fun () ->
          _RangeError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x1298 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1297 with
                 | Some x1299 ->
                     ignore
                       (Ojs.call x1298 "push" [|(Ojs.string_to_js x1299)|])
                 | None -> ());
                x1298))
  end
module RangeErrorConstructor =
  struct
    type t = _RangeErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1301 : Ojs.t) -> _RangeErrorConstructor_of_js x1301
    and t_to_js : t -> Ojs.t =
      fun (x1300 : _RangeErrorConstructor) ->
        _RangeErrorConstructor_to_js x1300
    let (create : t -> ?message:string -> unit -> _RangeError) =
      fun (x1305 : t) ->
        fun ?message:(x1302 : string option) ->
          fun () ->
            _RangeError_of_js
              (Ojs.new_obj_arr (t_to_js x1305)
                 (let x1303 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1302 with
                   | Some x1304 ->
                       ignore
                         (Ojs.call x1303 "push" [|(Ojs.string_to_js x1304)|])
                   | None -> ());
                  x1303))
    let (apply : t -> ?message:string -> unit -> _RangeError) =
      fun (x1309 : t) ->
        fun ?message:(x1306 : string option) ->
          fun () ->
            _RangeError_of_js
              (Ojs.call (t_to_js x1309) "apply"
                 [|Ojs.null;((let x1307 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1306 with
                               | Some x1308 ->
                                   ignore
                                     (Ojs.call x1307 "push"
                                        [|(Ojs.string_to_js x1308)|])
                               | None -> ());
                              x1307))|])
    let (get_prototype : t -> _RangeError) =
      fun (x1310 : t) ->
        _RangeError_of_js (Ojs.get_prop_ascii (t_to_js x1310) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1311 : t) -> _ErrorConstructor_of_js (t_to_js x1311)
  end
let (rangeError : _RangeErrorConstructor) =
  _RangeErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "RangeError")
module ReferenceError =
  struct
    type t = _ReferenceError
    let rec t_of_js : Ojs.t -> t =
      fun (x1313 : Ojs.t) -> _ReferenceError_of_js x1313
    and t_to_js : t -> Ojs.t =
      fun (x1312 : _ReferenceError) -> _ReferenceError_to_js x1312
    let (cast : t -> _Error) =
      fun (x1314 : t) -> _Error_of_js (t_to_js x1314)
    let (create : ?message:string -> unit -> _ReferenceError) =
      fun ?message:(x1315 : string option) ->
        fun () ->
          _ReferenceError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x1316 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1315 with
                 | Some x1317 ->
                     ignore
                       (Ojs.call x1316 "push" [|(Ojs.string_to_js x1317)|])
                 | None -> ());
                x1316))
  end
module ReferenceErrorConstructor =
  struct
    type t = _ReferenceErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1319 : Ojs.t) -> _ReferenceErrorConstructor_of_js x1319
    and t_to_js : t -> Ojs.t =
      fun (x1318 : _ReferenceErrorConstructor) ->
        _ReferenceErrorConstructor_to_js x1318
    let (create : t -> ?message:string -> unit -> _ReferenceError) =
      fun (x1323 : t) ->
        fun ?message:(x1320 : string option) ->
          fun () ->
            _ReferenceError_of_js
              (Ojs.new_obj_arr (t_to_js x1323)
                 (let x1321 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1320 with
                   | Some x1322 ->
                       ignore
                         (Ojs.call x1321 "push" [|(Ojs.string_to_js x1322)|])
                   | None -> ());
                  x1321))
    let (apply : t -> ?message:string -> unit -> _ReferenceError) =
      fun (x1327 : t) ->
        fun ?message:(x1324 : string option) ->
          fun () ->
            _ReferenceError_of_js
              (Ojs.call (t_to_js x1327) "apply"
                 [|Ojs.null;((let x1325 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1324 with
                               | Some x1326 ->
                                   ignore
                                     (Ojs.call x1325 "push"
                                        [|(Ojs.string_to_js x1326)|])
                               | None -> ());
                              x1325))|])
    let (get_prototype : t -> _ReferenceError) =
      fun (x1328 : t) ->
        _ReferenceError_of_js
          (Ojs.get_prop_ascii (t_to_js x1328) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1329 : t) -> _ErrorConstructor_of_js (t_to_js x1329)
  end
let (referenceError : _ReferenceErrorConstructor) =
  _ReferenceErrorConstructor_of_js
    (Ojs.get_prop_ascii Ojs.global "ReferenceError")
module SyntaxError =
  struct
    type t = _SyntaxError
    let rec t_of_js : Ojs.t -> t =
      fun (x1331 : Ojs.t) -> _SyntaxError_of_js x1331
    and t_to_js : t -> Ojs.t =
      fun (x1330 : _SyntaxError) -> _SyntaxError_to_js x1330
    let (cast : t -> _Error) =
      fun (x1332 : t) -> _Error_of_js (t_to_js x1332)
    let (create : ?message:string -> unit -> _SyntaxError) =
      fun ?message:(x1333 : string option) ->
        fun () ->
          _SyntaxError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1334 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1333 with
                 | Some x1335 ->
                     ignore
                       (Ojs.call x1334 "push" [|(Ojs.string_to_js x1335)|])
                 | None -> ());
                x1334))
  end
module SyntaxErrorConstructor =
  struct
    type t = _SyntaxErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1337 : Ojs.t) -> _SyntaxErrorConstructor_of_js x1337
    and t_to_js : t -> Ojs.t =
      fun (x1336 : _SyntaxErrorConstructor) ->
        _SyntaxErrorConstructor_to_js x1336
    let (create : t -> ?message:string -> unit -> _SyntaxError) =
      fun (x1341 : t) ->
        fun ?message:(x1338 : string option) ->
          fun () ->
            _SyntaxError_of_js
              (Ojs.new_obj_arr (t_to_js x1341)
                 (let x1339 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1338 with
                   | Some x1340 ->
                       ignore
                         (Ojs.call x1339 "push" [|(Ojs.string_to_js x1340)|])
                   | None -> ());
                  x1339))
    let (apply : t -> ?message:string -> unit -> _SyntaxError) =
      fun (x1345 : t) ->
        fun ?message:(x1342 : string option) ->
          fun () ->
            _SyntaxError_of_js
              (Ojs.call (t_to_js x1345) "apply"
                 [|Ojs.null;((let x1343 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1342 with
                               | Some x1344 ->
                                   ignore
                                     (Ojs.call x1343 "push"
                                        [|(Ojs.string_to_js x1344)|])
                               | None -> ());
                              x1343))|])
    let (get_prototype : t -> _SyntaxError) =
      fun (x1346 : t) ->
        _SyntaxError_of_js (Ojs.get_prop_ascii (t_to_js x1346) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1347 : t) -> _ErrorConstructor_of_js (t_to_js x1347)
  end
let (syntaxError : _SyntaxErrorConstructor) =
  _SyntaxErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "SyntaxError")
module TypeError =
  struct
    type t = _TypeError
    let rec t_of_js : Ojs.t -> t =
      fun (x1349 : Ojs.t) -> _TypeError_of_js x1349
    and t_to_js : t -> Ojs.t =
      fun (x1348 : _TypeError) -> _TypeError_to_js x1348
    let (cast : t -> _Error) =
      fun (x1350 : t) -> _Error_of_js (t_to_js x1350)
    let (create : ?message:string -> unit -> _TypeError) =
      fun ?message:(x1351 : string option) ->
        fun () ->
          _TypeError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x1352 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1351 with
                 | Some x1353 ->
                     ignore
                       (Ojs.call x1352 "push" [|(Ojs.string_to_js x1353)|])
                 | None -> ());
                x1352))
  end
module TypeErrorConstructor =
  struct
    type t = _TypeErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1355 : Ojs.t) -> _TypeErrorConstructor_of_js x1355
    and t_to_js : t -> Ojs.t =
      fun (x1354 : _TypeErrorConstructor) ->
        _TypeErrorConstructor_to_js x1354
    let (create : t -> ?message:string -> unit -> _TypeError) =
      fun (x1359 : t) ->
        fun ?message:(x1356 : string option) ->
          fun () ->
            _TypeError_of_js
              (Ojs.new_obj_arr (t_to_js x1359)
                 (let x1357 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1356 with
                   | Some x1358 ->
                       ignore
                         (Ojs.call x1357 "push" [|(Ojs.string_to_js x1358)|])
                   | None -> ());
                  x1357))
    let (apply : t -> ?message:string -> unit -> _TypeError) =
      fun (x1363 : t) ->
        fun ?message:(x1360 : string option) ->
          fun () ->
            _TypeError_of_js
              (Ojs.call (t_to_js x1363) "apply"
                 [|Ojs.null;((let x1361 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1360 with
                               | Some x1362 ->
                                   ignore
                                     (Ojs.call x1361 "push"
                                        [|(Ojs.string_to_js x1362)|])
                               | None -> ());
                              x1361))|])
    let (get_prototype : t -> _TypeError) =
      fun (x1364 : t) ->
        _TypeError_of_js (Ojs.get_prop_ascii (t_to_js x1364) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1365 : t) -> _ErrorConstructor_of_js (t_to_js x1365)
  end
let (typeError : _TypeErrorConstructor) =
  _TypeErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "TypeError")
module URIError =
  struct
    type t = _URIError
    let rec t_of_js : Ojs.t -> t =
      fun (x1367 : Ojs.t) -> _URIError_of_js x1367
    and t_to_js : t -> Ojs.t =
      fun (x1366 : _URIError) -> _URIError_to_js x1366
    let (cast : t -> _Error) =
      fun (x1368 : t) -> _Error_of_js (t_to_js x1368)
    let (create : ?message:string -> unit -> _URIError) =
      fun ?message:(x1369 : string option) ->
        fun () ->
          _URIError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x1370 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1369 with
                 | Some x1371 ->
                     ignore
                       (Ojs.call x1370 "push" [|(Ojs.string_to_js x1371)|])
                 | None -> ());
                x1370))
  end
module URIErrorConstructor =
  struct
    type t = _URIErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1373 : Ojs.t) -> _URIErrorConstructor_of_js x1373
    and t_to_js : t -> Ojs.t =
      fun (x1372 : _URIErrorConstructor) -> _URIErrorConstructor_to_js x1372
    let (create : t -> ?message:string -> unit -> _URIError) =
      fun (x1377 : t) ->
        fun ?message:(x1374 : string option) ->
          fun () ->
            _URIError_of_js
              (Ojs.new_obj_arr (t_to_js x1377)
                 (let x1375 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1374 with
                   | Some x1376 ->
                       ignore
                         (Ojs.call x1375 "push" [|(Ojs.string_to_js x1376)|])
                   | None -> ());
                  x1375))
    let (apply : t -> ?message:string -> unit -> _URIError) =
      fun (x1381 : t) ->
        fun ?message:(x1378 : string option) ->
          fun () ->
            _URIError_of_js
              (Ojs.call (t_to_js x1381) "apply"
                 [|Ojs.null;((let x1379 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1378 with
                               | Some x1380 ->
                                   ignore
                                     (Ojs.call x1379 "push"
                                        [|(Ojs.string_to_js x1380)|])
                               | None -> ());
                              x1379))|])
    let (get_prototype : t -> _URIError) =
      fun (x1382 : t) ->
        _URIError_of_js (Ojs.get_prop_ascii (t_to_js x1382) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1383 : t) -> _ErrorConstructor_of_js (t_to_js x1383)
  end
let (uriError : _URIErrorConstructor) =
  _URIErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "URIError")
module JSON =
  struct
    type t = _JSON
    let rec t_of_js : Ojs.t -> t = fun (x1385 : Ojs.t) -> _JSON_of_js x1385
    and t_to_js : t -> Ojs.t = fun (x1384 : _JSON) -> _JSON_to_js x1384
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x1386 : string) ->
        fun
          ?reviver:(x1387 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x1393 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x1393 "parse") "apply"
                 [|x1393;((let x1388 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1388 "push"
                                [|(Ojs.string_to_js x1386)|]);
                           (match x1387 with
                            | Some x1389 ->
                                ignore
                                  (Ojs.call x1388 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x1390 : Ojs.t) ->
                                             fun (x1391 : Ojs.t) ->
                                               fun (x1392 : Ojs.t) ->
                                                 any_to_js
                                                   (x1389
                                                      ~this:(any_of_js x1390)
                                                      ~key:(Ojs.string_of_js
                                                              x1391)
                                                      ~value:(any_of_js x1392))))|])
                            | None -> ());
                           x1388))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:string or_number -> unit -> string)
      =
      fun ~value:(x1394 : any) ->
        fun
          ?replacer:(x1395 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x1396 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x1404 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x1404 "stringify") "apply"
                   [|x1404;((let x1397 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1397 "push" [|(any_to_js x1394)|]);
                             (match x1395 with
                              | Some x1400 ->
                                  ignore
                                    (Ojs.call x1397 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x1401 : Ojs.t) ->
                                               fun (x1402 : Ojs.t) ->
                                                 fun (x1403 : Ojs.t) ->
                                                   any_to_js
                                                     (x1400
                                                        ~this:(any_of_js
                                                                 x1401)
                                                        ~key:(Ojs.string_of_js
                                                                x1402)
                                                        ~value:(any_of_js
                                                                  x1403))))|])
                              | None -> ());
                             (match x1396 with
                              | Some x1398 ->
                                  ignore
                                    (Ojs.call x1397 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x1398)|])
                              | None -> ());
                             x1397))|])
    let (stringify' :
      value:any ->
        ?replacer:string or_number list or_null ->
          ?space:string or_number -> unit -> string)
      =
      fun ~value:(x1405 : any) ->
        fun ?replacer:(x1406 : string or_number list or_null option) ->
          fun ?space:(x1407 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x1415 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x1415 "stringify") "apply"
                   [|x1415;((let x1408 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1408 "push" [|(any_to_js x1405)|]);
                             (match x1406 with
                              | Some x1411 ->
                                  ignore
                                    (Ojs.call x1408 "push"
                                       [|(or_null_to_js
                                            (fun
                                               (x1412 :
                                                 string or_number list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x1413 :
                                                      string or_number)
                                                    ->
                                                    or_number_to_js
                                                      Ojs.string_to_js x1413)
                                                 x1412) x1411)|])
                              | None -> ());
                             (match x1407 with
                              | Some x1409 ->
                                  ignore
                                    (Ojs.call x1408 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x1409)|])
                              | None -> ());
                             x1408))|])
  end
module ReadonlyArray =
  struct
    type 'T t = 'T _ReadonlyArray
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1418 : Ojs.t) -> _ReadonlyArray_of_js __T_of_js x1418
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1416 : __T _ReadonlyArray) ->
          _ReadonlyArray_to_js __T_to_js x1416
    let (get_length : 'T t -> float) =
      fun (x1420 : 'T t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1420) "length")
    let (toString : 'T t -> string) =
      fun (x1422 : 'T t) ->
        Ojs.string_of_js (Ojs.call (t_to_js Obj.magic x1422) "toString" [||])
    let (toLocaleString : 'T t -> string) =
      fun (x1424 : 'T t) ->
        Ojs.string_of_js
          (Ojs.call (t_to_js Obj.magic x1424) "toLocaleString" [||])
    let (concat : 'T t -> items:'T _ConcatArray list -> 'T list) =
      fun (x1430 : 'T t) ->
        fun ~items:(x1426 : 'T _ConcatArray list) ->
          Ojs.list_of_js Obj.magic
            (let x1432 = t_to_js Obj.magic x1430 in
             Ojs.call (Ojs.get_prop_ascii x1432 "concat") "apply"
               [|x1432;((let x1427 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1428 : 'T _ConcatArray) ->
                              ignore
                                (Ojs.call x1427 "push"
                                   [|(_ConcatArray_to_js Obj.magic x1428)|]))
                           x1426;
                         x1427))|])
    let (concat' :
      'T t -> items:('T, 'T _ConcatArray) union2 list -> 'T list) =
      fun (x1440 : 'T t) ->
        fun ~items:(x1434 : ('T, 'T _ConcatArray) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x1442 = t_to_js Obj.magic x1440 in
             Ojs.call (Ojs.get_prop_ascii x1442 "concat") "apply"
               [|x1442;((let x1435 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1436 : ('T, 'T _ConcatArray) union2) ->
                              ignore
                                (Ojs.call x1435 "push"
                                   [|(union2_to_js Obj.magic
                                        (fun (x1438 : 'T _ConcatArray) ->
                                           _ConcatArray_to_js Obj.magic x1438)
                                        x1436)|])) x1434;
                         x1435))|])
    let (join : 'T t -> ?separator:string -> unit -> string) =
      fun (x1447 : 'T t) ->
        fun ?separator:(x1444 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1449 = t_to_js Obj.magic x1447 in
               Ojs.call (Ojs.get_prop_ascii x1449 "join") "apply"
                 [|x1449;((let x1445 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1444 with
                            | Some x1446 ->
                                ignore
                                  (Ojs.call x1445 "push"
                                     [|(Ojs.string_to_js x1446)|])
                            | None -> ());
                           x1445))|])
    let (slice : 'T t -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1455 : 'T t) ->
        fun ?start:(x1450 : float option) ->
          fun ?end_:(x1451 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1457 = t_to_js Obj.magic x1455 in
                 Ojs.call (Ojs.get_prop_ascii x1457 "slice") "apply"
                   [|x1457;((let x1452 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1450 with
                              | Some x1454 ->
                                  ignore
                                    (Ojs.call x1452 "push"
                                       [|(Ojs.float_to_js x1454)|])
                              | None -> ());
                             (match x1451 with
                              | Some x1453 ->
                                  ignore
                                    (Ojs.call x1452 "push"
                                       [|(Ojs.float_to_js x1453)|])
                              | None -> ());
                             x1452))|])
    let (indexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1463 : 'T t) ->
        fun ~searchElement:(x1459 : 'T) ->
          fun ?fromIndex:(x1460 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1465 = t_to_js Obj.magic x1463 in
                 Ojs.call (Ojs.get_prop_ascii x1465 "indexOf") "apply"
                   [|x1465;((let x1461 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1461 "push" [|(Obj.magic x1459)|]);
                             (match x1460 with
                              | Some x1462 ->
                                  ignore
                                    (Ojs.call x1461 "push"
                                       [|(Ojs.float_to_js x1462)|])
                              | None -> ());
                             x1461))|])
    let (lastIndexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1470 : 'T t) ->
        fun ~searchElement:(x1466 : 'T) ->
          fun ?fromIndex:(x1467 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1472 = t_to_js Obj.magic x1470 in
                 Ojs.call (Ojs.get_prop_ascii x1472 "lastIndexOf") "apply"
                   [|x1472;((let x1468 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1468 "push" [|(Obj.magic x1466)|]);
                             (match x1467 with
                              | Some x1469 ->
                                  ignore
                                    (Ojs.call x1468 "push"
                                       [|(Ojs.float_to_js x1469)|])
                              | None -> ());
                             x1468))|])
    let (every :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1481 : 'T t) ->
        fun
          ~predicate:(x1473 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1474 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1483 = t_to_js Obj.magic x1481 in
                 Ojs.call (Ojs.get_prop_ascii x1483 "every") "apply"
                   [|x1483;((let x1475 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1475 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1477 : Ojs.t) ->
                                          fun (x1478 : Ojs.t) ->
                                            fun (x1479 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1473
                                                   ~value:(Obj.magic x1477)
                                                   ~index:(Ojs.float_of_js
                                                             x1478)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1479))))|]);
                             (match x1474 with
                              | Some x1476 ->
                                  ignore
                                    (Ojs.call x1475 "push"
                                       [|(any_to_js x1476)|])
                              | None -> ());
                             x1475))|])
    let (every' :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1492 : 'T t) ->
        fun
          ~predicate:(x1484 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1485 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1494 = t_to_js Obj.magic x1492 in
                 Ojs.call (Ojs.get_prop_ascii x1494 "every") "apply"
                   [|x1494;((let x1486 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1486 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1488 : Ojs.t) ->
                                          fun (x1489 : Ojs.t) ->
                                            fun (x1490 : Ojs.t) ->
                                              unknown_to_js
                                                (x1484
                                                   ~value:(Obj.magic x1488)
                                                   ~index:(Ojs.float_of_js
                                                             x1489)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1490))))|]);
                             (match x1485 with
                              | Some x1487 ->
                                  ignore
                                    (Ojs.call x1486 "push"
                                       [|(any_to_js x1487)|])
                              | None -> ());
                             x1486))|])
    let (some :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1503 : 'T t) ->
        fun
          ~predicate:(x1495 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1496 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1505 = t_to_js Obj.magic x1503 in
                 Ojs.call (Ojs.get_prop_ascii x1505 "some") "apply"
                   [|x1505;((let x1497 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1497 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1499 : Ojs.t) ->
                                          fun (x1500 : Ojs.t) ->
                                            fun (x1501 : Ojs.t) ->
                                              unknown_to_js
                                                (x1495
                                                   ~value:(Obj.magic x1499)
                                                   ~index:(Ojs.float_of_js
                                                             x1500)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1501))))|]);
                             (match x1496 with
                              | Some x1498 ->
                                  ignore
                                    (Ojs.call x1497 "push"
                                       [|(any_to_js x1498)|])
                              | None -> ());
                             x1497))|])
    let (forEach :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1514 : 'T t) ->
        fun
          ~callbackfn:(x1506 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1507 : any option) ->
            fun () ->
              ignore
                (let x1516 = t_to_js Obj.magic x1514 in
                 Ojs.call (Ojs.get_prop_ascii x1516 "forEach") "apply"
                   [|x1516;((let x1508 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1508 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1510 : Ojs.t) ->
                                          fun (x1511 : Ojs.t) ->
                                            fun (x1512 : Ojs.t) ->
                                              x1506 ~value:(Obj.magic x1510)
                                                ~index:(Ojs.float_of_js x1511)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1512)))|]);
                             (match x1507 with
                              | Some x1509 ->
                                  ignore
                                    (Ojs.call x1508 "push"
                                       [|(any_to_js x1509)|])
                              | None -> ());
                             x1508))|])
    let (map :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1525 : 'T t) ->
        fun
          ~callbackfn:(x1517 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1518 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1527 = t_to_js Obj.magic x1525 in
                 Ojs.call (Ojs.get_prop_ascii x1527 "map") "apply"
                   [|x1527;((let x1519 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1519 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1521 : Ojs.t) ->
                                          fun (x1522 : Ojs.t) ->
                                            fun (x1523 : Ojs.t) ->
                                              Obj.magic
                                                (x1517
                                                   ~value:(Obj.magic x1521)
                                                   ~index:(Ojs.float_of_js
                                                             x1522)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1523))))|]);
                             (match x1518 with
                              | Some x1520 ->
                                  ignore
                                    (Ojs.call x1519 "push"
                                       [|(any_to_js x1520)|])
                              | None -> ());
                             x1519))|])
    let (filter :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1537 : 'T t) ->
        fun
          ~predicate:(x1529 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1530 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1539 = t_to_js Obj.magic x1537 in
                 Ojs.call (Ojs.get_prop_ascii x1539 "filter") "apply"
                   [|x1539;((let x1531 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1531 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1533 : Ojs.t) ->
                                          fun (x1534 : Ojs.t) ->
                                            fun (x1535 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1529
                                                   ~value:(Obj.magic x1533)
                                                   ~index:(Ojs.float_of_js
                                                             x1534)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1535))))|]);
                             (match x1530 with
                              | Some x1532 ->
                                  ignore
                                    (Ojs.call x1531 "push"
                                       [|(any_to_js x1532)|])
                              | None -> ());
                             x1531))|])
    let (filter' :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1549 : 'T t) ->
        fun
          ~predicate:(x1541 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1542 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1551 = t_to_js Obj.magic x1549 in
                 Ojs.call (Ojs.get_prop_ascii x1551 "filter") "apply"
                   [|x1551;((let x1543 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1543 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1545 : Ojs.t) ->
                                          fun (x1546 : Ojs.t) ->
                                            fun (x1547 : Ojs.t) ->
                                              unknown_to_js
                                                (x1541
                                                   ~value:(Obj.magic x1545)
                                                   ~index:(Ojs.float_of_js
                                                             x1546)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1547))))|]);
                             (match x1542 with
                              | Some x1544 ->
                                  ignore
                                    (Ojs.call x1543 "push"
                                       [|(any_to_js x1544)|])
                              | None -> ());
                             x1543))|])
    let (reduce :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1559 : 'T t) ->
        fun
          ~callbackfn:(x1553 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1559) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1554 : Ojs.t) ->
                       fun (x1555 : Ojs.t) ->
                         fun (x1556 : Ojs.t) ->
                           fun (x1557 : Ojs.t) ->
                             Obj.magic
                               (x1553 ~previousValue:(Obj.magic x1554)
                                  ~currentValue:(Obj.magic x1555)
                                  ~currentIndex:(Ojs.float_of_js x1556)
                                  ~array:(Ojs.list_of_js Obj.magic x1557))))|])
    let (reduce' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1568 : 'T t) ->
        fun
          ~callbackfn:(x1561 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1567 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1568) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1562 : Ojs.t) ->
                         fun (x1563 : Ojs.t) ->
                           fun (x1564 : Ojs.t) ->
                             fun (x1565 : Ojs.t) ->
                               Obj.magic
                                 (x1561 ~previousValue:(Obj.magic x1562)
                                    ~currentValue:(Obj.magic x1563)
                                    ~currentIndex:(Ojs.float_of_js x1564)
                                    ~array:(Ojs.list_of_js Obj.magic x1565))));(
                   Obj.magic x1567)|])
    let (reduce'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1577 : 'T t) ->
        fun
          ~callbackfn:(x1570 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1576 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1577) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1571 : Ojs.t) ->
                         fun (x1572 : Ojs.t) ->
                           fun (x1573 : Ojs.t) ->
                             fun (x1574 : Ojs.t) ->
                               Obj.magic
                                 (x1570 ~previousValue:(Obj.magic x1571)
                                    ~currentValue:(Obj.magic x1572)
                                    ~currentIndex:(Ojs.float_of_js x1573)
                                    ~array:(Ojs.list_of_js Obj.magic x1574))));(
                   Obj.magic x1576)|])
    let (reduceRight :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1585 : 'T t) ->
        fun
          ~callbackfn:(x1579 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1585) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1580 : Ojs.t) ->
                       fun (x1581 : Ojs.t) ->
                         fun (x1582 : Ojs.t) ->
                           fun (x1583 : Ojs.t) ->
                             Obj.magic
                               (x1579 ~previousValue:(Obj.magic x1580)
                                  ~currentValue:(Obj.magic x1581)
                                  ~currentIndex:(Ojs.float_of_js x1582)
                                  ~array:(Ojs.list_of_js Obj.magic x1583))))|])
    let (reduceRight' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1594 : 'T t) ->
        fun
          ~callbackfn:(x1587 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1593 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1594) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1588 : Ojs.t) ->
                         fun (x1589 : Ojs.t) ->
                           fun (x1590 : Ojs.t) ->
                             fun (x1591 : Ojs.t) ->
                               Obj.magic
                                 (x1587 ~previousValue:(Obj.magic x1588)
                                    ~currentValue:(Obj.magic x1589)
                                    ~currentIndex:(Ojs.float_of_js x1590)
                                    ~array:(Ojs.list_of_js Obj.magic x1591))));(
                   Obj.magic x1593)|])
    let (reduceRight'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1603 : 'T t) ->
        fun
          ~callbackfn:(x1596 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1602 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1603) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1597 : Ojs.t) ->
                         fun (x1598 : Ojs.t) ->
                           fun (x1599 : Ojs.t) ->
                             fun (x1600 : Ojs.t) ->
                               Obj.magic
                                 (x1596 ~previousValue:(Obj.magic x1597)
                                    ~currentValue:(Obj.magic x1598)
                                    ~currentIndex:(Ojs.float_of_js x1599)
                                    ~array:(Ojs.list_of_js Obj.magic x1600))));(
                   Obj.magic x1602)|])
    let (get : 'T t -> float -> 'T) =
      fun (x1605 : 'T t) ->
        fun (x1607 : float) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x1605) (Ojs.float_to_js x1607))
    let (to_ml : 'T t -> 'T list) =
      fun (x1608 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1608)
    let (of_ml : 'T list -> 'T t) =
      fun (x1611 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1611)
  end
module ConcatArray =
  struct
    type 'T t = 'T _ConcatArray
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1616 : Ojs.t) -> _ConcatArray_of_js __T_of_js x1616
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1614 : __T _ConcatArray) -> _ConcatArray_to_js __T_to_js x1614
    let (get_length : 'T t -> float) =
      fun (x1618 : 'T t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1618) "length")
    let (get : 'T t -> float -> 'T) =
      fun (x1620 : 'T t) ->
        fun (x1622 : float) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x1620) (Ojs.float_to_js x1622))
    let (join : 'T t -> ?separator:string -> unit -> string) =
      fun (x1626 : 'T t) ->
        fun ?separator:(x1623 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1628 = t_to_js Obj.magic x1626 in
               Ojs.call (Ojs.get_prop_ascii x1628 "join") "apply"
                 [|x1628;((let x1624 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1623 with
                            | Some x1625 ->
                                ignore
                                  (Ojs.call x1624 "push"
                                     [|(Ojs.string_to_js x1625)|])
                            | None -> ());
                           x1624))|])
    let (slice : 'T t -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1634 : 'T t) ->
        fun ?start:(x1629 : float option) ->
          fun ?end_:(x1630 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1636 = t_to_js Obj.magic x1634 in
                 Ojs.call (Ojs.get_prop_ascii x1636 "slice") "apply"
                   [|x1636;((let x1631 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1629 with
                              | Some x1633 ->
                                  ignore
                                    (Ojs.call x1631 "push"
                                       [|(Ojs.float_to_js x1633)|])
                              | None -> ());
                             (match x1630 with
                              | Some x1632 ->
                                  ignore
                                    (Ojs.call x1631 "push"
                                       [|(Ojs.float_to_js x1632)|])
                              | None -> ());
                             x1631))|])
  end
module Array =
  struct
    type 'T t = 'T _Array
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1640 : Ojs.t) -> _Array_of_js __T_of_js x1640
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1638 : __T _Array) -> _Array_to_js __T_to_js x1638
    let (get_length : 'T t -> float) =
      fun (x1642 : 'T t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1642) "length")
    let (set_length : 'T t -> float -> unit) =
      fun (x1644 : 'T t) ->
        fun (x1645 : float) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1644) "length"
            (Ojs.float_to_js x1645)
    let (toString : 'T t -> string) =
      fun (x1647 : 'T t) ->
        Ojs.string_of_js (Ojs.call (t_to_js Obj.magic x1647) "toString" [||])
    let (toLocaleString : 'T t -> string) =
      fun (x1649 : 'T t) ->
        Ojs.string_of_js
          (Ojs.call (t_to_js Obj.magic x1649) "toLocaleString" [||])
    let (pop : 'T t -> 'T or_undefined) =
      fun (x1651 : 'T t) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x1651) "pop" [||])
    let (push : 'T t -> items:'T list -> float) =
      fun (x1657 : 'T t) ->
        fun ~items:(x1654 : 'T list) ->
          Ojs.float_of_js
            (let x1659 = t_to_js Obj.magic x1657 in
             Ojs.call (Ojs.get_prop_ascii x1659 "push") "apply"
               [|x1659;((let x1655 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1656 : 'T) ->
                              ignore
                                (Ojs.call x1655 "push" [|(Obj.magic x1656)|]))
                           x1654;
                         x1655))|])
    let (concat : 'T t -> items:'T _ConcatArray list -> 'T list) =
      fun (x1664 : 'T t) ->
        fun ~items:(x1660 : 'T _ConcatArray list) ->
          Ojs.list_of_js Obj.magic
            (let x1666 = t_to_js Obj.magic x1664 in
             Ojs.call (Ojs.get_prop_ascii x1666 "concat") "apply"
               [|x1666;((let x1661 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1662 : 'T _ConcatArray) ->
                              ignore
                                (Ojs.call x1661 "push"
                                   [|(_ConcatArray_to_js Obj.magic x1662)|]))
                           x1660;
                         x1661))|])
    let (concat' :
      'T t -> items:('T, 'T _ConcatArray) union2 list -> 'T list) =
      fun (x1674 : 'T t) ->
        fun ~items:(x1668 : ('T, 'T _ConcatArray) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x1676 = t_to_js Obj.magic x1674 in
             Ojs.call (Ojs.get_prop_ascii x1676 "concat") "apply"
               [|x1676;((let x1669 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1670 : ('T, 'T _ConcatArray) union2) ->
                              ignore
                                (Ojs.call x1669 "push"
                                   [|(union2_to_js Obj.magic
                                        (fun (x1672 : 'T _ConcatArray) ->
                                           _ConcatArray_to_js Obj.magic x1672)
                                        x1670)|])) x1668;
                         x1669))|])
    let (join : 'T t -> ?separator:string -> unit -> string) =
      fun (x1681 : 'T t) ->
        fun ?separator:(x1678 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1683 = t_to_js Obj.magic x1681 in
               Ojs.call (Ojs.get_prop_ascii x1683 "join") "apply"
                 [|x1683;((let x1679 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1678 with
                            | Some x1680 ->
                                ignore
                                  (Ojs.call x1679 "push"
                                     [|(Ojs.string_to_js x1680)|])
                            | None -> ());
                           x1679))|])
    let (reverse : 'T t -> 'T list) =
      fun (x1684 : 'T t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x1684) "reverse" [||])
    let (shift : 'T t -> 'T or_undefined) =
      fun (x1687 : 'T t) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x1687) "shift" [||])
    let (slice : 'T t -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1695 : 'T t) ->
        fun ?start:(x1690 : float option) ->
          fun ?end_:(x1691 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1697 = t_to_js Obj.magic x1695 in
                 Ojs.call (Ojs.get_prop_ascii x1697 "slice") "apply"
                   [|x1697;((let x1692 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1690 with
                              | Some x1694 ->
                                  ignore
                                    (Ojs.call x1692 "push"
                                       [|(Ojs.float_to_js x1694)|])
                              | None -> ());
                             (match x1691 with
                              | Some x1693 ->
                                  ignore
                                    (Ojs.call x1692 "push"
                                       [|(Ojs.float_to_js x1693)|])
                              | None -> ());
                             x1692))|])
    let (sort : 'T t -> ?compareFn:(a:'T -> b:'T -> float) -> unit -> 'T t) =
      fun (x1704 : 'T t) ->
        fun ?compareFn:(x1699 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            t_of_js Obj.magic
              (let x1706 = t_to_js Obj.magic x1704 in
               Ojs.call (Ojs.get_prop_ascii x1706 "sort") "apply"
                 [|x1706;((let x1700 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1699 with
                            | Some x1701 ->
                                ignore
                                  (Ojs.call x1700 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1702 : Ojs.t) ->
                                             fun (x1703 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1701 ~a:(Obj.magic x1702)
                                                    ~b:(Obj.magic x1703))))|])
                            | None -> ());
                           x1700))|])
    let (splice :
      'T t -> start:float -> ?deleteCount:float -> unit -> 'T list) =
      fun (x1712 : 'T t) ->
        fun ~start:(x1708 : float) ->
          fun ?deleteCount:(x1709 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1714 = t_to_js Obj.magic x1712 in
                 Ojs.call (Ojs.get_prop_ascii x1714 "splice") "apply"
                   [|x1714;((let x1710 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1710 "push"
                                  [|(Ojs.float_to_js x1708)|]);
                             (match x1709 with
                              | Some x1711 ->
                                  ignore
                                    (Ojs.call x1710 "push"
                                       [|(Ojs.float_to_js x1711)|])
                              | None -> ());
                             x1710))|])
    let (splice' :
      'T t -> start:float -> deleteCount:float -> items:'T list -> 'T list) =
      fun (x1721 : 'T t) ->
        fun ~start:(x1716 : float) ->
          fun ~deleteCount:(x1717 : float) ->
            fun ~items:(x1718 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1723 = t_to_js Obj.magic x1721 in
                 Ojs.call (Ojs.get_prop_ascii x1723 "splice") "apply"
                   [|x1723;((let x1719 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1719 "push"
                                  [|(Ojs.float_to_js x1716)|]);
                             ignore
                               (Ojs.call x1719 "push"
                                  [|(Ojs.float_to_js x1717)|]);
                             List.iter
                               (fun (x1720 : 'T) ->
                                  ignore
                                    (Ojs.call x1719 "push"
                                       [|(Obj.magic x1720)|])) x1718;
                             x1719))|])
    let (unshift : 'T t -> items:'T list -> float) =
      fun (x1728 : 'T t) ->
        fun ~items:(x1725 : 'T list) ->
          Ojs.float_of_js
            (let x1730 = t_to_js Obj.magic x1728 in
             Ojs.call (Ojs.get_prop_ascii x1730 "unshift") "apply"
               [|x1730;((let x1726 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1727 : 'T) ->
                              ignore
                                (Ojs.call x1726 "push" [|(Obj.magic x1727)|]))
                           x1725;
                         x1726))|])
    let (indexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1735 : 'T t) ->
        fun ~searchElement:(x1731 : 'T) ->
          fun ?fromIndex:(x1732 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1737 = t_to_js Obj.magic x1735 in
                 Ojs.call (Ojs.get_prop_ascii x1737 "indexOf") "apply"
                   [|x1737;((let x1733 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1733 "push" [|(Obj.magic x1731)|]);
                             (match x1732 with
                              | Some x1734 ->
                                  ignore
                                    (Ojs.call x1733 "push"
                                       [|(Ojs.float_to_js x1734)|])
                              | None -> ());
                             x1733))|])
    let (lastIndexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1742 : 'T t) ->
        fun ~searchElement:(x1738 : 'T) ->
          fun ?fromIndex:(x1739 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1744 = t_to_js Obj.magic x1742 in
                 Ojs.call (Ojs.get_prop_ascii x1744 "lastIndexOf") "apply"
                   [|x1744;((let x1740 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1740 "push" [|(Obj.magic x1738)|]);
                             (match x1739 with
                              | Some x1741 ->
                                  ignore
                                    (Ojs.call x1740 "push"
                                       [|(Ojs.float_to_js x1741)|])
                              | None -> ());
                             x1740))|])
    let (every :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1753 : 'T t) ->
        fun
          ~predicate:(x1745 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1746 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1755 = t_to_js Obj.magic x1753 in
                 Ojs.call (Ojs.get_prop_ascii x1755 "every") "apply"
                   [|x1755;((let x1747 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1747 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1749 : Ojs.t) ->
                                          fun (x1750 : Ojs.t) ->
                                            fun (x1751 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1745
                                                   ~value:(Obj.magic x1749)
                                                   ~index:(Ojs.float_of_js
                                                             x1750)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1751))))|]);
                             (match x1746 with
                              | Some x1748 ->
                                  ignore
                                    (Ojs.call x1747 "push"
                                       [|(any_to_js x1748)|])
                              | None -> ());
                             x1747))|])
    let (every' :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1764 : 'T t) ->
        fun
          ~predicate:(x1756 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1757 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1766 = t_to_js Obj.magic x1764 in
                 Ojs.call (Ojs.get_prop_ascii x1766 "every") "apply"
                   [|x1766;((let x1758 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1758 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1760 : Ojs.t) ->
                                          fun (x1761 : Ojs.t) ->
                                            fun (x1762 : Ojs.t) ->
                                              unknown_to_js
                                                (x1756
                                                   ~value:(Obj.magic x1760)
                                                   ~index:(Ojs.float_of_js
                                                             x1761)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1762))))|]);
                             (match x1757 with
                              | Some x1759 ->
                                  ignore
                                    (Ojs.call x1758 "push"
                                       [|(any_to_js x1759)|])
                              | None -> ());
                             x1758))|])
    let (some :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1775 : 'T t) ->
        fun
          ~predicate:(x1767 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1768 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1777 = t_to_js Obj.magic x1775 in
                 Ojs.call (Ojs.get_prop_ascii x1777 "some") "apply"
                   [|x1777;((let x1769 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1769 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1771 : Ojs.t) ->
                                          fun (x1772 : Ojs.t) ->
                                            fun (x1773 : Ojs.t) ->
                                              unknown_to_js
                                                (x1767
                                                   ~value:(Obj.magic x1771)
                                                   ~index:(Ojs.float_of_js
                                                             x1772)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1773))))|]);
                             (match x1768 with
                              | Some x1770 ->
                                  ignore
                                    (Ojs.call x1769 "push"
                                       [|(any_to_js x1770)|])
                              | None -> ());
                             x1769))|])
    let (forEach :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1786 : 'T t) ->
        fun
          ~callbackfn:(x1778 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1779 : any option) ->
            fun () ->
              ignore
                (let x1788 = t_to_js Obj.magic x1786 in
                 Ojs.call (Ojs.get_prop_ascii x1788 "forEach") "apply"
                   [|x1788;((let x1780 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1780 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1782 : Ojs.t) ->
                                          fun (x1783 : Ojs.t) ->
                                            fun (x1784 : Ojs.t) ->
                                              x1778 ~value:(Obj.magic x1782)
                                                ~index:(Ojs.float_of_js x1783)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1784)))|]);
                             (match x1779 with
                              | Some x1781 ->
                                  ignore
                                    (Ojs.call x1780 "push"
                                       [|(any_to_js x1781)|])
                              | None -> ());
                             x1780))|])
    let (map :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1797 : 'T t) ->
        fun
          ~callbackfn:(x1789 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1790 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1799 = t_to_js Obj.magic x1797 in
                 Ojs.call (Ojs.get_prop_ascii x1799 "map") "apply"
                   [|x1799;((let x1791 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1791 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1793 : Ojs.t) ->
                                          fun (x1794 : Ojs.t) ->
                                            fun (x1795 : Ojs.t) ->
                                              Obj.magic
                                                (x1789
                                                   ~value:(Obj.magic x1793)
                                                   ~index:(Ojs.float_of_js
                                                             x1794)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1795))))|]);
                             (match x1790 with
                              | Some x1792 ->
                                  ignore
                                    (Ojs.call x1791 "push"
                                       [|(any_to_js x1792)|])
                              | None -> ());
                             x1791))|])
    let (filter :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1809 : 'T t) ->
        fun
          ~predicate:(x1801 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1802 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1811 = t_to_js Obj.magic x1809 in
                 Ojs.call (Ojs.get_prop_ascii x1811 "filter") "apply"
                   [|x1811;((let x1803 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1803 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1805 : Ojs.t) ->
                                          fun (x1806 : Ojs.t) ->
                                            fun (x1807 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1801
                                                   ~value:(Obj.magic x1805)
                                                   ~index:(Ojs.float_of_js
                                                             x1806)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1807))))|]);
                             (match x1802 with
                              | Some x1804 ->
                                  ignore
                                    (Ojs.call x1803 "push"
                                       [|(any_to_js x1804)|])
                              | None -> ());
                             x1803))|])
    let (filter' :
      'T t ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1821 : 'T t) ->
        fun
          ~predicate:(x1813 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1814 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1823 = t_to_js Obj.magic x1821 in
                 Ojs.call (Ojs.get_prop_ascii x1823 "filter") "apply"
                   [|x1823;((let x1815 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1815 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1817 : Ojs.t) ->
                                          fun (x1818 : Ojs.t) ->
                                            fun (x1819 : Ojs.t) ->
                                              unknown_to_js
                                                (x1813
                                                   ~value:(Obj.magic x1817)
                                                   ~index:(Ojs.float_of_js
                                                             x1818)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1819))))|]);
                             (match x1814 with
                              | Some x1816 ->
                                  ignore
                                    (Ojs.call x1815 "push"
                                       [|(any_to_js x1816)|])
                              | None -> ());
                             x1815))|])
    let (reduce :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1831 : 'T t) ->
        fun
          ~callbackfn:(x1825 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1831) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1826 : Ojs.t) ->
                       fun (x1827 : Ojs.t) ->
                         fun (x1828 : Ojs.t) ->
                           fun (x1829 : Ojs.t) ->
                             Obj.magic
                               (x1825 ~previousValue:(Obj.magic x1826)
                                  ~currentValue:(Obj.magic x1827)
                                  ~currentIndex:(Ojs.float_of_js x1828)
                                  ~array:(Ojs.list_of_js Obj.magic x1829))))|])
    let (reduce' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1840 : 'T t) ->
        fun
          ~callbackfn:(x1833 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1839 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1840) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1834 : Ojs.t) ->
                         fun (x1835 : Ojs.t) ->
                           fun (x1836 : Ojs.t) ->
                             fun (x1837 : Ojs.t) ->
                               Obj.magic
                                 (x1833 ~previousValue:(Obj.magic x1834)
                                    ~currentValue:(Obj.magic x1835)
                                    ~currentIndex:(Ojs.float_of_js x1836)
                                    ~array:(Ojs.list_of_js Obj.magic x1837))));(
                   Obj.magic x1839)|])
    let (reduce'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1849 : 'T t) ->
        fun
          ~callbackfn:(x1842 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1848 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1849) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1843 : Ojs.t) ->
                         fun (x1844 : Ojs.t) ->
                           fun (x1845 : Ojs.t) ->
                             fun (x1846 : Ojs.t) ->
                               Obj.magic
                                 (x1842 ~previousValue:(Obj.magic x1843)
                                    ~currentValue:(Obj.magic x1844)
                                    ~currentIndex:(Ojs.float_of_js x1845)
                                    ~array:(Ojs.list_of_js Obj.magic x1846))));(
                   Obj.magic x1848)|])
    let (reduceRight :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1857 : 'T t) ->
        fun
          ~callbackfn:(x1851 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1857) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1852 : Ojs.t) ->
                       fun (x1853 : Ojs.t) ->
                         fun (x1854 : Ojs.t) ->
                           fun (x1855 : Ojs.t) ->
                             Obj.magic
                               (x1851 ~previousValue:(Obj.magic x1852)
                                  ~currentValue:(Obj.magic x1853)
                                  ~currentIndex:(Ojs.float_of_js x1854)
                                  ~array:(Ojs.list_of_js Obj.magic x1855))))|])
    let (reduceRight' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1866 : 'T t) ->
        fun
          ~callbackfn:(x1859 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1865 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1866) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1860 : Ojs.t) ->
                         fun (x1861 : Ojs.t) ->
                           fun (x1862 : Ojs.t) ->
                             fun (x1863 : Ojs.t) ->
                               Obj.magic
                                 (x1859 ~previousValue:(Obj.magic x1860)
                                    ~currentValue:(Obj.magic x1861)
                                    ~currentIndex:(Ojs.float_of_js x1862)
                                    ~array:(Ojs.list_of_js Obj.magic x1863))));(
                   Obj.magic x1865)|])
    let (reduceRight'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1875 : 'T t) ->
        fun
          ~callbackfn:(x1868 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1874 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1875) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1869 : Ojs.t) ->
                         fun (x1870 : Ojs.t) ->
                           fun (x1871 : Ojs.t) ->
                             fun (x1872 : Ojs.t) ->
                               Obj.magic
                                 (x1868 ~previousValue:(Obj.magic x1869)
                                    ~currentValue:(Obj.magic x1870)
                                    ~currentIndex:(Ojs.float_of_js x1871)
                                    ~array:(Ojs.list_of_js Obj.magic x1872))));(
                   Obj.magic x1874)|])
    let (get : 'T t -> float -> 'T) =
      fun (x1877 : 'T t) ->
        fun (x1879 : float) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x1877) (Ojs.float_to_js x1879))
    let (set : 'T t -> float -> 'T -> unit) =
      fun (x1880 : 'T t) ->
        fun (x1882 : float) ->
          fun (x1883 : 'T) ->
            Ojs.set_prop (t_to_js Obj.magic x1880) (Ojs.float_to_js x1882)
              (Obj.magic x1883)
    let (to_ml : 'T t -> 'T list) =
      fun (x1884 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1884)
    let (of_ml : 'T list -> 'T t) =
      fun (x1887 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1887)
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1890 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1891 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1890 with
                 | Some x1892 ->
                     ignore
                       (Ojs.call x1891 "push" [|(Ojs.float_to_js x1892)|])
                 | None -> ());
                x1891))
    let (create' : arrayLength:float -> 'T list) =
      fun ~arrayLength:(x1894 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1894)|])
    let (create'' : items:'T list -> 'T list) =
      fun ~items:(x1896 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1897 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1898 : 'T) ->
                   ignore (Ojs.call x1897 "push" [|(Obj.magic x1898)|]))
                x1896;
              x1897))
    let (isArray : arg:any -> bool) =
      fun ~arg:(x1900 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1900)|])
  end
module ArrayConstructor =
  struct
    type t = _ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1902 : Ojs.t) -> _ArrayConstructor_of_js x1902
    and t_to_js : t -> Ojs.t =
      fun (x1901 : _ArrayConstructor) -> _ArrayConstructor_to_js x1901
    let (create : t -> ?arrayLength:float -> unit -> any list) =
      fun (x1906 : t) ->
        fun ?arrayLength:(x1903 : float option) ->
          fun () ->
            Ojs.list_of_js any_of_js
              (Ojs.new_obj_arr (t_to_js x1906)
                 (let x1904 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1903 with
                   | Some x1905 ->
                       ignore
                         (Ojs.call x1904 "push" [|(Ojs.float_to_js x1905)|])
                   | None -> ());
                  x1904))
    let (create' : t -> arrayLength:float -> 'T list) =
      fun (x1909 : t) ->
        fun ~arrayLength:(x1908 : float) ->
          Ojs.list_of_js Obj.magic
            (Ojs.new_obj (t_to_js x1909) [|(Ojs.float_to_js x1908)|])
    let (create'' : t -> items:'T list -> 'T list) =
      fun (x1914 : t) ->
        fun ~items:(x1911 : 'T list) ->
          Ojs.list_of_js Obj.magic
            (Ojs.new_obj_arr (t_to_js x1914)
               (let x1912 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x1913 : 'T) ->
                     ignore (Ojs.call x1912 "push" [|(Obj.magic x1913)|]))
                  x1911;
                x1912))
    let (apply : t -> ?arrayLength:float -> unit -> any list) =
      fun (x1919 : t) ->
        fun ?arrayLength:(x1916 : float option) ->
          fun () ->
            Ojs.list_of_js any_of_js
              (Ojs.call (t_to_js x1919) "apply"
                 [|Ojs.null;((let x1917 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1916 with
                               | Some x1918 ->
                                   ignore
                                     (Ojs.call x1917 "push"
                                        [|(Ojs.float_to_js x1918)|])
                               | None -> ());
                              x1917))|])
    let (apply' : t -> arrayLength:float -> 'T list) =
      fun (x1922 : t) ->
        fun ~arrayLength:(x1921 : float) ->
          Ojs.list_of_js Obj.magic
            (Ojs.apply (t_to_js x1922) [|(Ojs.float_to_js x1921)|])
    let (apply'' : t -> items:'T list -> 'T list) =
      fun (x1927 : t) ->
        fun ~items:(x1924 : 'T list) ->
          Ojs.list_of_js Obj.magic
            (Ojs.call (t_to_js x1927) "apply"
               [|Ojs.null;((let x1925 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x1926 : 'T) ->
                                 ignore
                                   (Ojs.call x1925 "push"
                                      [|(Obj.magic x1926)|])) x1924;
                            x1925))|])
    let (isArray : t -> arg:any -> bool) =
      fun (x1930 : t) ->
        fun ~arg:(x1929 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x1930) "isArray" [|(any_to_js x1929)|])
    let (get_prototype : t -> any list) =
      fun (x1931 : t) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (t_to_js x1931) "prototype")
  end
let (array : _ArrayConstructor) =
  _ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Array")
module TypedPropertyDescriptor =
  struct
    type 'T t = 'T _TypedPropertyDescriptor
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1935 : Ojs.t) -> _TypedPropertyDescriptor_of_js __T_of_js x1935
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1933 : __T _TypedPropertyDescriptor) ->
          _TypedPropertyDescriptor_to_js __T_to_js x1933
    let (get_enumerable : 'T t -> bool) =
      fun (x1937 : 'T t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1937) "enumerable")
    let (set_enumerable : 'T t -> bool -> unit) =
      fun (x1939 : 'T t) ->
        fun (x1940 : bool) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1939) "enumerable"
            (Ojs.bool_to_js x1940)
    let (get_configurable : 'T t -> bool) =
      fun (x1942 : 'T t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1942) "configurable")
    let (set_configurable : 'T t -> bool -> unit) =
      fun (x1944 : 'T t) ->
        fun (x1945 : bool) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1944) "configurable"
            (Ojs.bool_to_js x1945)
    let (get_writable : 'T t -> bool) =
      fun (x1947 : 'T t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1947) "writable")
    let (set_writable : 'T t -> bool -> unit) =
      fun (x1949 : 'T t) ->
        fun (x1950 : bool) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1949) "writable"
            (Ojs.bool_to_js x1950)
    let (get_value : 'T t -> 'T) =
      fun (x1952 : 'T t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x1952) "value")
    let (set_value : 'T t -> 'T -> unit) =
      fun (x1954 : 'T t) ->
        fun (x1955 : 'T) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1954) "value"
            (Obj.magic x1955)
    let (get_ : 'T t -> 'T) =
      fun (x1957 : 'T t) ->
        Obj.magic (Ojs.call (t_to_js Obj.magic x1957) "get" [||])
    let (set_ : 'T t -> value:'T -> unit) =
      fun (x1960 : 'T t) ->
        fun ~value:(x1959 : 'T) ->
          ignore
            (Ojs.call (t_to_js Obj.magic x1960) "set" [|(Obj.magic x1959)|])
  end
module ClassDecorator =
  struct
    type t = _ClassDecorator
    let rec t_of_js : Ojs.t -> t =
      fun (x1963 : Ojs.t) -> _ClassDecorator_of_js x1963
    and t_to_js : t -> Ojs.t =
      fun (x1962 : _ClassDecorator) -> _ClassDecorator_to_js x1962
    let (apply : t -> target:'TFunction -> ('TFunction, unit) union2) =
      fun (x1965 : t) ->
        fun ~target:(x1964 : 'TFunction) ->
          union2_of_js Obj.magic Ojs.unit_of_js
            (Ojs.apply (t_to_js x1965) [|(Obj.magic x1964)|])
  end
module PropertyDecorator =
  struct
    type t = _PropertyDecorator
    let rec t_of_js : Ojs.t -> t =
      fun (x1969 : Ojs.t) -> _PropertyDecorator_of_js x1969
    and t_to_js : t -> Ojs.t =
      fun (x1968 : _PropertyDecorator) -> _PropertyDecorator_to_js x1968
    let (apply : t -> target:_Object -> propertyKey:symbol or_string -> unit)
      =
      fun (x1973 : t) ->
        fun ~target:(x1970 : _Object) ->
          fun ~propertyKey:(x1971 : symbol or_string) ->
            ignore
              (Ojs.apply (t_to_js x1973)
                 [|(_Object_to_js x1970);(or_string_to_js symbol_to_js x1971)|])
  end
module MethodDecorator =
  struct
    type t = _MethodDecorator
    let rec t_of_js : Ojs.t -> t =
      fun (x1975 : Ojs.t) -> _MethodDecorator_of_js x1975
    and t_to_js : t -> Ojs.t =
      fun (x1974 : _MethodDecorator) -> _MethodDecorator_to_js x1974
    let (apply :
      t ->
        target:_Object ->
          propertyKey:symbol or_string ->
            descriptor:'T _TypedPropertyDescriptor ->
              (unit, 'T _TypedPropertyDescriptor) union2)
      =
      fun (x1981 : t) ->
        fun ~target:(x1976 : _Object) ->
          fun ~propertyKey:(x1977 : symbol or_string) ->
            fun ~descriptor:(x1979 : 'T _TypedPropertyDescriptor) ->
              union2_of_js Ojs.unit_of_js
                (fun (x1983 : Ojs.t) ->
                   _TypedPropertyDescriptor_of_js Obj.magic x1983)
                (Ojs.apply (t_to_js x1981)
                   [|(_Object_to_js x1976);(or_string_to_js symbol_to_js
                                              x1977);(_TypedPropertyDescriptor_to_js
                                                        Obj.magic x1979)|])
  end
module ParameterDecorator =
  struct
    type t = _ParameterDecorator
    let rec t_of_js : Ojs.t -> t =
      fun (x1986 : Ojs.t) -> _ParameterDecorator_of_js x1986
    and t_to_js : t -> Ojs.t =
      fun (x1985 : _ParameterDecorator) -> _ParameterDecorator_to_js x1985
    let (apply :
      t ->
        target:_Object ->
          propertyKey:symbol or_string -> parameterIndex:float -> unit)
      =
      fun (x1991 : t) ->
        fun ~target:(x1987 : _Object) ->
          fun ~propertyKey:(x1988 : symbol or_string) ->
            fun ~parameterIndex:(x1990 : float) ->
              ignore
                (Ojs.apply (t_to_js x1991)
                   [|(_Object_to_js x1987);(or_string_to_js symbol_to_js
                                              x1988);(Ojs.float_to_js x1990)|])
  end
module Promise =
  struct
    type 'T t = 'T _Promise
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1994 : Ojs.t) -> _Promise_of_js __T_of_js x1994
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1992 : __T _Promise) -> _Promise_to_js __T_to_js x1992
    let (then_ :
      'T t ->
        ?onfulfilled:('T -> 'TResult t) ->
          ?onrejected:(any -> 'TResult t) -> unit -> 'TResult t)
      =
      fun (x2005 : 'T t) ->
        fun ?onfulfilled:(x1996 : ('T -> 'TResult t) option) ->
          fun ?onrejected:(x1997 : (any -> 'TResult t) option) ->
            fun () ->
              t_of_js Obj.magic
                (let x2007 = t_to_js Obj.magic x2005 in
                 Ojs.call (Ojs.get_prop_ascii x2007 "then") "apply"
                   [|x2007;((let x1998 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1996 with
                              | Some x2002 ->
                                  ignore
                                    (Ojs.call x1998 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x2003 : Ojs.t) ->
                                               t_to_js Obj.magic
                                                 (x2002 (Obj.magic x2003))))|])
                              | None -> ());
                             (match x1997 with
                              | Some x1999 ->
                                  ignore
                                    (Ojs.call x1998 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x2000 : Ojs.t) ->
                                               t_to_js Obj.magic
                                                 (x1999 (any_of_js x2000))))|])
                              | None -> ());
                             x1998))|])
    let (catch : 'T t -> ?onrejected:(any -> 'T t) -> unit -> 'T t) =
      fun (x2014 : 'T t) ->
        fun ?onrejected:(x2009 : (any -> 'T t) option) ->
          fun () ->
            t_of_js Obj.magic
              (let x2016 = t_to_js Obj.magic x2014 in
               Ojs.call (Ojs.get_prop_ascii x2016 "catch") "apply"
                 [|x2016;((let x2010 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2009 with
                            | Some x2011 ->
                                ignore
                                  (Ojs.call x2010 "push"
                                     [|(Ojs.fun_to_js 1
                                          (fun (x2012 : Ojs.t) ->
                                             t_to_js Obj.magic
                                               (x2011 (any_of_js x2012))))|])
                            | None -> ());
                           x2010))|])
  end
module Partial =
  struct
    type 'T t = 'T _Partial
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2020 : Ojs.t) -> _Partial_of_js __T_of_js x2020
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2018 : __T _Partial) -> _Partial_to_js __T_to_js x2018
  end
module Required =
  struct
    type 'T t = 'T _Required
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2024 : Ojs.t) -> _Required_of_js __T_of_js x2024
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2022 : __T _Required) -> _Required_to_js __T_to_js x2022
  end
module Readonly =
  struct
    type 'T t = 'T _Readonly
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2028 : Ojs.t) -> _Readonly_of_js __T_of_js x2028
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2026 : __T _Readonly) -> _Readonly_to_js __T_to_js x2026
  end
module Pick =
  struct
    type ('T, 'K) t = ('T, 'K) _Pick
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x2033 : Ojs.t) -> _Pick_of_js __T_of_js __K_of_js x2033
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x2030 : (__T, __K) _Pick) ->
            _Pick_to_js __T_to_js __K_to_js x2030
  end
module Record =
  struct
    type ('K, 'T) t = ('K, 'T) _Record
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x2039 : Ojs.t) -> _Record_of_js __K_of_js __T_of_js x2039
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x2036 : (__K, __T) _Record) ->
            _Record_to_js __K_to_js __T_to_js x2036
  end
module Exclude =
  struct
    type ('T, 'U) t = ('T, 'U) _Exclude
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x2045 : Ojs.t) -> _Exclude_of_js __T_of_js __U_of_js x2045
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x2042 : (__T, __U) _Exclude) ->
            _Exclude_to_js __T_to_js __U_to_js x2042
  end
module Extract =
  struct
    type ('T, 'U) t = ('T, 'U) _Extract
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x2051 : Ojs.t) -> _Extract_of_js __T_of_js __U_of_js x2051
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x2048 : (__T, __U) _Extract) ->
            _Extract_to_js __T_to_js __U_to_js x2048
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, 'K) _Omit
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x2057 : Ojs.t) -> _Omit_of_js __T_of_js __K_of_js x2057
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x2054 : (__T, __K) _Omit) ->
            _Omit_to_js __T_to_js __K_to_js x2054
  end
module NonNullable =
  struct
    type 'T t = 'T _NonNullable
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2062 : Ojs.t) -> _NonNullable_of_js __T_of_js x2062
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2060 : __T _NonNullable) -> _NonNullable_to_js __T_to_js x2060
  end
module Parameters =
  struct
    type 'T t = 'T _Parameters
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2066 : Ojs.t) -> _Parameters_of_js __T_of_js x2066
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2064 : __T _Parameters) -> _Parameters_to_js __T_to_js x2064
  end
module ConstructorParameters =
  struct
    type 'T t = 'T _ConstructorParameters
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2070 : Ojs.t) -> _ConstructorParameters_of_js __T_of_js x2070
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2068 : __T _ConstructorParameters) ->
          _ConstructorParameters_to_js __T_to_js x2068
  end
module ReturnType =
  struct
    type 'T t = 'T _ReturnType
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2074 : Ojs.t) -> _ReturnType_of_js __T_of_js x2074
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2072 : __T _ReturnType) -> _ReturnType_to_js __T_to_js x2072
  end
module InstanceType =
  struct
    type 'T t = 'T _InstanceType
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2078 : Ojs.t) -> _InstanceType_of_js __T_of_js x2078
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2076 : __T _InstanceType) ->
          _InstanceType_to_js __T_to_js x2076
  end
module ThisType =
  struct
    type 'T t = 'T _ThisType
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2082 : Ojs.t) -> _ThisType_of_js __T_of_js x2082
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2080 : __T _ThisType) -> _ThisType_to_js __T_to_js x2080
  end
module ArrayBuffer =
  struct
    type t = _ArrayBuffer
    let rec t_of_js : Ojs.t -> t =
      fun (x2085 : Ojs.t) -> _ArrayBuffer_of_js x2085
    and t_to_js : t -> Ojs.t =
      fun (x2084 : _ArrayBuffer) -> _ArrayBuffer_to_js x2084
    let (get_byteLength : t -> float) =
      fun (x2086 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2086) "byteLength")
    let (slice : t -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x2091 : t) ->
        fun ~begin_:(x2087 : float) ->
          fun ?end_:(x2088 : float option) ->
            fun () ->
              t_of_js
                (let x2092 = t_to_js x2091 in
                 Ojs.call (Ojs.get_prop_ascii x2092 "slice") "apply"
                   [|x2092;((let x2089 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2089 "push"
                                  [|(Ojs.float_to_js x2087)|]);
                             (match x2088 with
                              | Some x2090 ->
                                  ignore
                                    (Ojs.call x2089 "push"
                                       [|(Ojs.float_to_js x2090)|])
                              | None -> ());
                             x2089))|])
    let (create : byteLength:float -> _ArrayBuffer) =
      fun ~byteLength:(x2093 : float) ->
        _ArrayBuffer_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x2093)|])
    let (isView : arg:any -> bool) =
      fun ~arg:(x2094 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x2094)|])
  end
module ArrayBufferTypes =
  struct
    type t = _ArrayBufferTypes
    let rec t_of_js : Ojs.t -> t =
      fun (x2096 : Ojs.t) -> _ArrayBufferTypes_of_js x2096
    and t_to_js : t -> Ojs.t =
      fun (x2095 : _ArrayBufferTypes) -> _ArrayBufferTypes_to_js x2095
    let (get_ArrayBuffer : t -> _ArrayBuffer) =
      fun (x2097 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2097) "ArrayBuffer")
    let (set_ArrayBuffer : t -> _ArrayBuffer -> unit) =
      fun (x2098 : t) ->
        fun (x2099 : _ArrayBuffer) ->
          Ojs.set_prop_ascii (t_to_js x2098) "ArrayBuffer"
            (_ArrayBuffer_to_js x2099)
  end
module ArrayBufferConstructor =
  struct
    type t = _ArrayBufferConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2101 : Ojs.t) -> _ArrayBufferConstructor_of_js x2101
    and t_to_js : t -> Ojs.t =
      fun (x2100 : _ArrayBufferConstructor) ->
        _ArrayBufferConstructor_to_js x2100
    let (get_prototype : t -> _ArrayBuffer) =
      fun (x2102 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2102) "prototype")
    let (create : t -> byteLength:float -> _ArrayBuffer) =
      fun (x2104 : t) ->
        fun ~byteLength:(x2103 : float) ->
          _ArrayBuffer_of_js
            (Ojs.new_obj (t_to_js x2104) [|(Ojs.float_to_js x2103)|])
    let (isView : t -> arg:any -> bool) =
      fun (x2106 : t) ->
        fun ~arg:(x2105 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x2106) "isView" [|(any_to_js x2105)|])
  end
let (arrayBuffer : _ArrayBufferConstructor) =
  _ArrayBufferConstructor_of_js (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
module ArrayBufferView =
  struct
    type t = _ArrayBufferView
    let rec t_of_js : Ojs.t -> t =
      fun (x2108 : Ojs.t) -> _ArrayBufferView_of_js x2108
    and t_to_js : t -> Ojs.t =
      fun (x2107 : _ArrayBufferView) -> _ArrayBufferView_to_js x2107
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2109 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2109) "buffer")
    let (set_buffer : t -> _ArrayBuffer -> unit) =
      fun (x2110 : t) ->
        fun (x2111 : _ArrayBuffer) ->
          Ojs.set_prop_ascii (t_to_js x2110) "buffer"
            (_ArrayBuffer_to_js x2111)
    let (get_byteLength : t -> float) =
      fun (x2112 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2112) "byteLength")
    let (set_byteLength : t -> float -> unit) =
      fun (x2113 : t) ->
        fun (x2114 : float) ->
          Ojs.set_prop_ascii (t_to_js x2113) "byteLength"
            (Ojs.float_to_js x2114)
    let (get_byteOffset : t -> float) =
      fun (x2115 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2115) "byteOffset")
    let (set_byteOffset : t -> float -> unit) =
      fun (x2116 : t) ->
        fun (x2117 : float) ->
          Ojs.set_prop_ascii (t_to_js x2116) "byteOffset"
            (Ojs.float_to_js x2117)
  end
module DataView =
  struct
    type t = _DataView
    let rec t_of_js : Ojs.t -> t =
      fun (x2119 : Ojs.t) -> _DataView_of_js x2119
    and t_to_js : t -> Ojs.t =
      fun (x2118 : _DataView) -> _DataView_to_js x2118
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2120 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2120) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2121 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2121) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2122 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2122) "byteOffset")
    let (getFloat32 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2127 : t) ->
        fun ~byteOffset:(x2123 : float) ->
          fun ?littleEndian:(x2124 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2128 = t_to_js x2127 in
                 Ojs.call (Ojs.get_prop_ascii x2128 "getFloat32") "apply"
                   [|x2128;((let x2125 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2125 "push"
                                  [|(Ojs.float_to_js x2123)|]);
                             (match x2124 with
                              | Some x2126 ->
                                  ignore
                                    (Ojs.call x2125 "push"
                                       [|(Ojs.bool_to_js x2126)|])
                              | None -> ());
                             x2125))|])
    let (getFloat64 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2133 : t) ->
        fun ~byteOffset:(x2129 : float) ->
          fun ?littleEndian:(x2130 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2134 = t_to_js x2133 in
                 Ojs.call (Ojs.get_prop_ascii x2134 "getFloat64") "apply"
                   [|x2134;((let x2131 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2131 "push"
                                  [|(Ojs.float_to_js x2129)|]);
                             (match x2130 with
                              | Some x2132 ->
                                  ignore
                                    (Ojs.call x2131 "push"
                                       [|(Ojs.bool_to_js x2132)|])
                              | None -> ());
                             x2131))|])
    let (getInt8 : t -> byteOffset:float -> float) =
      fun (x2136 : t) ->
        fun ~byteOffset:(x2135 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2136) "getInt8" [|(Ojs.float_to_js x2135)|])
    let (getInt16 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2141 : t) ->
        fun ~byteOffset:(x2137 : float) ->
          fun ?littleEndian:(x2138 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2142 = t_to_js x2141 in
                 Ojs.call (Ojs.get_prop_ascii x2142 "getInt16") "apply"
                   [|x2142;((let x2139 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2139 "push"
                                  [|(Ojs.float_to_js x2137)|]);
                             (match x2138 with
                              | Some x2140 ->
                                  ignore
                                    (Ojs.call x2139 "push"
                                       [|(Ojs.bool_to_js x2140)|])
                              | None -> ());
                             x2139))|])
    let (getInt32 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2147 : t) ->
        fun ~byteOffset:(x2143 : float) ->
          fun ?littleEndian:(x2144 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2148 = t_to_js x2147 in
                 Ojs.call (Ojs.get_prop_ascii x2148 "getInt32") "apply"
                   [|x2148;((let x2145 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2145 "push"
                                  [|(Ojs.float_to_js x2143)|]);
                             (match x2144 with
                              | Some x2146 ->
                                  ignore
                                    (Ojs.call x2145 "push"
                                       [|(Ojs.bool_to_js x2146)|])
                              | None -> ());
                             x2145))|])
    let (getUint8 : t -> byteOffset:float -> float) =
      fun (x2150 : t) ->
        fun ~byteOffset:(x2149 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2150) "getUint8" [|(Ojs.float_to_js x2149)|])
    let (getUint16 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2155 : t) ->
        fun ~byteOffset:(x2151 : float) ->
          fun ?littleEndian:(x2152 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2156 = t_to_js x2155 in
                 Ojs.call (Ojs.get_prop_ascii x2156 "getUint16") "apply"
                   [|x2156;((let x2153 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2153 "push"
                                  [|(Ojs.float_to_js x2151)|]);
                             (match x2152 with
                              | Some x2154 ->
                                  ignore
                                    (Ojs.call x2153 "push"
                                       [|(Ojs.bool_to_js x2154)|])
                              | None -> ());
                             x2153))|])
    let (getUint32 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2161 : t) ->
        fun ~byteOffset:(x2157 : float) ->
          fun ?littleEndian:(x2158 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2162 = t_to_js x2161 in
                 Ojs.call (Ojs.get_prop_ascii x2162 "getUint32") "apply"
                   [|x2162;((let x2159 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2159 "push"
                                  [|(Ojs.float_to_js x2157)|]);
                             (match x2158 with
                              | Some x2160 ->
                                  ignore
                                    (Ojs.call x2159 "push"
                                       [|(Ojs.bool_to_js x2160)|])
                              | None -> ());
                             x2159))|])
    let (setFloat32 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2168 : t) ->
        fun ~byteOffset:(x2163 : float) ->
          fun ~value:(x2164 : float) ->
            fun ?littleEndian:(x2165 : bool option) ->
              fun () ->
                ignore
                  (let x2169 = t_to_js x2168 in
                   Ojs.call (Ojs.get_prop_ascii x2169 "setFloat32") "apply"
                     [|x2169;((let x2166 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2166 "push"
                                    [|(Ojs.float_to_js x2163)|]);
                               ignore
                                 (Ojs.call x2166 "push"
                                    [|(Ojs.float_to_js x2164)|]);
                               (match x2165 with
                                | Some x2167 ->
                                    ignore
                                      (Ojs.call x2166 "push"
                                         [|(Ojs.bool_to_js x2167)|])
                                | None -> ());
                               x2166))|])
    let (setFloat64 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2175 : t) ->
        fun ~byteOffset:(x2170 : float) ->
          fun ~value:(x2171 : float) ->
            fun ?littleEndian:(x2172 : bool option) ->
              fun () ->
                ignore
                  (let x2176 = t_to_js x2175 in
                   Ojs.call (Ojs.get_prop_ascii x2176 "setFloat64") "apply"
                     [|x2176;((let x2173 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2173 "push"
                                    [|(Ojs.float_to_js x2170)|]);
                               ignore
                                 (Ojs.call x2173 "push"
                                    [|(Ojs.float_to_js x2171)|]);
                               (match x2172 with
                                | Some x2174 ->
                                    ignore
                                      (Ojs.call x2173 "push"
                                         [|(Ojs.bool_to_js x2174)|])
                                | None -> ());
                               x2173))|])
    let (setInt8 : t -> byteOffset:float -> value:float -> unit) =
      fun (x2179 : t) ->
        fun ~byteOffset:(x2177 : float) ->
          fun ~value:(x2178 : float) ->
            ignore
              (Ojs.call (t_to_js x2179) "setInt8"
                 [|(Ojs.float_to_js x2177);(Ojs.float_to_js x2178)|])
    let (setInt16 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2185 : t) ->
        fun ~byteOffset:(x2180 : float) ->
          fun ~value:(x2181 : float) ->
            fun ?littleEndian:(x2182 : bool option) ->
              fun () ->
                ignore
                  (let x2186 = t_to_js x2185 in
                   Ojs.call (Ojs.get_prop_ascii x2186 "setInt16") "apply"
                     [|x2186;((let x2183 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2183 "push"
                                    [|(Ojs.float_to_js x2180)|]);
                               ignore
                                 (Ojs.call x2183 "push"
                                    [|(Ojs.float_to_js x2181)|]);
                               (match x2182 with
                                | Some x2184 ->
                                    ignore
                                      (Ojs.call x2183 "push"
                                         [|(Ojs.bool_to_js x2184)|])
                                | None -> ());
                               x2183))|])
    let (setInt32 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2192 : t) ->
        fun ~byteOffset:(x2187 : float) ->
          fun ~value:(x2188 : float) ->
            fun ?littleEndian:(x2189 : bool option) ->
              fun () ->
                ignore
                  (let x2193 = t_to_js x2192 in
                   Ojs.call (Ojs.get_prop_ascii x2193 "setInt32") "apply"
                     [|x2193;((let x2190 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2190 "push"
                                    [|(Ojs.float_to_js x2187)|]);
                               ignore
                                 (Ojs.call x2190 "push"
                                    [|(Ojs.float_to_js x2188)|]);
                               (match x2189 with
                                | Some x2191 ->
                                    ignore
                                      (Ojs.call x2190 "push"
                                         [|(Ojs.bool_to_js x2191)|])
                                | None -> ());
                               x2190))|])
    let (setUint8 : t -> byteOffset:float -> value:float -> unit) =
      fun (x2196 : t) ->
        fun ~byteOffset:(x2194 : float) ->
          fun ~value:(x2195 : float) ->
            ignore
              (Ojs.call (t_to_js x2196) "setUint8"
                 [|(Ojs.float_to_js x2194);(Ojs.float_to_js x2195)|])
    let (setUint16 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2202 : t) ->
        fun ~byteOffset:(x2197 : float) ->
          fun ~value:(x2198 : float) ->
            fun ?littleEndian:(x2199 : bool option) ->
              fun () ->
                ignore
                  (let x2203 = t_to_js x2202 in
                   Ojs.call (Ojs.get_prop_ascii x2203 "setUint16") "apply"
                     [|x2203;((let x2200 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2200 "push"
                                    [|(Ojs.float_to_js x2197)|]);
                               ignore
                                 (Ojs.call x2200 "push"
                                    [|(Ojs.float_to_js x2198)|]);
                               (match x2199 with
                                | Some x2201 ->
                                    ignore
                                      (Ojs.call x2200 "push"
                                         [|(Ojs.bool_to_js x2201)|])
                                | None -> ());
                               x2200))|])
    let (setUint32 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2209 : t) ->
        fun ~byteOffset:(x2204 : float) ->
          fun ~value:(x2205 : float) ->
            fun ?littleEndian:(x2206 : bool option) ->
              fun () ->
                ignore
                  (let x2210 = t_to_js x2209 in
                   Ojs.call (Ojs.get_prop_ascii x2210 "setUint32") "apply"
                     [|x2210;((let x2207 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2207 "push"
                                    [|(Ojs.float_to_js x2204)|]);
                               ignore
                                 (Ojs.call x2207 "push"
                                    [|(Ojs.float_to_js x2205)|]);
                               (match x2206 with
                                | Some x2208 ->
                                    ignore
                                      (Ojs.call x2207 "push"
                                         [|(Ojs.bool_to_js x2208)|])
                                | None -> ());
                               x2207))|])
    let (create :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?byteLength:float -> unit -> _DataView)
      =
      fun ~buffer:(x2211 : _ArrayBuffer) ->
        fun ?byteOffset:(x2212 : float option) ->
          fun ?byteLength:(x2213 : float option) ->
            fun () ->
              _DataView_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x2214 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2214 "push" [|(_ArrayBuffer_to_js x2211)|]);
                    (match x2212 with
                     | Some x2216 ->
                         ignore
                           (Ojs.call x2214 "push" [|(Ojs.float_to_js x2216)|])
                     | None -> ());
                    (match x2213 with
                     | Some x2215 ->
                         ignore
                           (Ojs.call x2214 "push" [|(Ojs.float_to_js x2215)|])
                     | None -> ());
                    x2214))
  end
module DataViewConstructor =
  struct
    type t = _DataViewConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2218 : Ojs.t) -> _DataViewConstructor_of_js x2218
    and t_to_js : t -> Ojs.t =
      fun (x2217 : _DataViewConstructor) -> _DataViewConstructor_to_js x2217
    let (get_prototype : t -> _DataView) =
      fun (x2219 : t) ->
        _DataView_of_js (Ojs.get_prop_ascii (t_to_js x2219) "prototype")
    let (create :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?byteLength:float -> unit -> _DataView)
      =
      fun (x2226 : t) ->
        fun ~buffer:(x2220 : _ArrayBuffer) ->
          fun ?byteOffset:(x2221 : float option) ->
            fun ?byteLength:(x2222 : float option) ->
              fun () ->
                _DataView_of_js
                  (Ojs.new_obj_arr (t_to_js x2226)
                     (let x2223 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2223 "push" [|(_ArrayBuffer_to_js x2220)|]);
                      (match x2221 with
                       | Some x2225 ->
                           ignore
                             (Ojs.call x2223 "push"
                                [|(Ojs.float_to_js x2225)|])
                       | None -> ());
                      (match x2222 with
                       | Some x2224 ->
                           ignore
                             (Ojs.call x2223 "push"
                                [|(Ojs.float_to_js x2224)|])
                       | None -> ());
                      x2223))
  end
let (dataView : _DataViewConstructor) =
  _DataViewConstructor_of_js (Ojs.get_prop_ascii Ojs.global "DataView")
module Int8Array =
  struct
    type t = _Int8Array
    let rec t_of_js : Ojs.t -> t =
      fun (x2228 : Ojs.t) -> _Int8Array_of_js x2228
    and t_to_js : t -> Ojs.t =
      fun (x2227 : _Int8Array) -> _Int8Array_to_js x2227
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2229 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2229) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2230 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2230) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2231 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2231) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2232 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2232) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2238 : t) ->
        fun ~target:(x2233 : float) ->
          fun ~start:(x2234 : float) ->
            fun ?end_:(x2235 : float option) ->
              fun () ->
                t_of_js
                  (let x2239 = t_to_js x2238 in
                   Ojs.call (Ojs.get_prop_ascii x2239 "copyWithin") "apply"
                     [|x2239;((let x2236 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2236 "push"
                                    [|(Ojs.float_to_js x2233)|]);
                               ignore
                                 (Ojs.call x2236 "push"
                                    [|(Ojs.float_to_js x2234)|]);
                               (match x2235 with
                                | Some x2237 ->
                                    ignore
                                      (Ojs.call x2236 "push"
                                         [|(Ojs.float_to_js x2237)|])
                                | None -> ());
                               x2236))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2247 : t) ->
        fun
          ~predicate:(x2240 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2241 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2248 = t_to_js x2247 in
                 Ojs.call (Ojs.get_prop_ascii x2248 "every") "apply"
                   [|x2248;((let x2242 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2242 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2244 : Ojs.t) ->
                                          fun (x2245 : Ojs.t) ->
                                            fun (x2246 : Ojs.t) ->
                                              unknown_to_js
                                                (x2240
                                                   ~value:(Ojs.float_of_js
                                                             x2244)
                                                   ~index:(Ojs.float_of_js
                                                             x2245)
                                                   ~array:(t_of_js x2246))))|]);
                             (match x2241 with
                              | Some x2243 ->
                                  ignore
                                    (Ojs.call x2242 "push"
                                       [|(any_to_js x2243)|])
                              | None -> ());
                             x2242))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2255 : t) ->
        fun ~value:(x2249 : float) ->
          fun ?start:(x2250 : float option) ->
            fun ?end_:(x2251 : float option) ->
              fun () ->
                t_of_js
                  (let x2256 = t_to_js x2255 in
                   Ojs.call (Ojs.get_prop_ascii x2256 "fill") "apply"
                     [|x2256;((let x2252 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2252 "push"
                                    [|(Ojs.float_to_js x2249)|]);
                               (match x2250 with
                                | Some x2254 ->
                                    ignore
                                      (Ojs.call x2252 "push"
                                         [|(Ojs.float_to_js x2254)|])
                                | None -> ());
                               (match x2251 with
                                | Some x2253 ->
                                    ignore
                                      (Ojs.call x2252 "push"
                                         [|(Ojs.float_to_js x2253)|])
                                | None -> ());
                               x2252))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2264 : t) ->
        fun ~predicate:(x2257 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x2258 : any option) ->
            fun () ->
              t_of_js
                (let x2265 = t_to_js x2264 in
                 Ojs.call (Ojs.get_prop_ascii x2265 "filter") "apply"
                   [|x2265;((let x2259 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2259 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2261 : Ojs.t) ->
                                          fun (x2262 : Ojs.t) ->
                                            fun (x2263 : Ojs.t) ->
                                              any_to_js
                                                (x2257
                                                   ~value:(Ojs.float_of_js
                                                             x2261)
                                                   ~index:(Ojs.float_of_js
                                                             x2262)
                                                   ~array:(t_of_js x2263))))|]);
                             (match x2258 with
                              | Some x2260 ->
                                  ignore
                                    (Ojs.call x2259 "push"
                                       [|(any_to_js x2260)|])
                              | None -> ());
                             x2259))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2273 : t) ->
        fun ~predicate:(x2266 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2267 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2274 = t_to_js x2273 in
                 Ojs.call (Ojs.get_prop_ascii x2274 "find") "apply"
                   [|x2274;((let x2268 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2268 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2270 : Ojs.t) ->
                                          fun (x2271 : Ojs.t) ->
                                            fun (x2272 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2266
                                                   ~value:(Ojs.float_of_js
                                                             x2270)
                                                   ~index:(Ojs.float_of_js
                                                             x2271)
                                                   ~obj:(t_of_js x2272))))|]);
                             (match x2267 with
                              | Some x2269 ->
                                  ignore
                                    (Ojs.call x2268 "push"
                                       [|(any_to_js x2269)|])
                              | None -> ());
                             x2268))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2283 : t) ->
        fun ~predicate:(x2276 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2277 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2284 = t_to_js x2283 in
                 Ojs.call (Ojs.get_prop_ascii x2284 "findIndex") "apply"
                   [|x2284;((let x2278 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2278 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2280 : Ojs.t) ->
                                          fun (x2281 : Ojs.t) ->
                                            fun (x2282 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2276
                                                   ~value:(Ojs.float_of_js
                                                             x2280)
                                                   ~index:(Ojs.float_of_js
                                                             x2281)
                                                   ~obj:(t_of_js x2282))))|]);
                             (match x2277 with
                              | Some x2279 ->
                                  ignore
                                    (Ojs.call x2278 "push"
                                       [|(any_to_js x2279)|])
                              | None -> ());
                             x2278))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2292 : t) ->
        fun
          ~callbackfn:(x2285 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2286 : any option) ->
            fun () ->
              ignore
                (let x2293 = t_to_js x2292 in
                 Ojs.call (Ojs.get_prop_ascii x2293 "forEach") "apply"
                   [|x2293;((let x2287 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2287 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2289 : Ojs.t) ->
                                          fun (x2290 : Ojs.t) ->
                                            fun (x2291 : Ojs.t) ->
                                              x2285
                                                ~value:(Ojs.float_of_js x2289)
                                                ~index:(Ojs.float_of_js x2290)
                                                ~array:(t_of_js x2291)))|]);
                             (match x2286 with
                              | Some x2288 ->
                                  ignore
                                    (Ojs.call x2287 "push"
                                       [|(any_to_js x2288)|])
                              | None -> ());
                             x2287))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2298 : t) ->
        fun ~searchElement:(x2294 : float) ->
          fun ?fromIndex:(x2295 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2299 = t_to_js x2298 in
                 Ojs.call (Ojs.get_prop_ascii x2299 "indexOf") "apply"
                   [|x2299;((let x2296 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2296 "push"
                                  [|(Ojs.float_to_js x2294)|]);
                             (match x2295 with
                              | Some x2297 ->
                                  ignore
                                    (Ojs.call x2296 "push"
                                       [|(Ojs.float_to_js x2297)|])
                              | None -> ());
                             x2296))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2303 : t) ->
        fun ?separator:(x2300 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2304 = t_to_js x2303 in
               Ojs.call (Ojs.get_prop_ascii x2304 "join") "apply"
                 [|x2304;((let x2301 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2300 with
                            | Some x2302 ->
                                ignore
                                  (Ojs.call x2301 "push"
                                     [|(Ojs.string_to_js x2302)|])
                            | None -> ());
                           x2301))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2309 : t) ->
        fun ~searchElement:(x2305 : float) ->
          fun ?fromIndex:(x2306 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2310 = t_to_js x2309 in
                 Ojs.call (Ojs.get_prop_ascii x2310 "lastIndexOf") "apply"
                   [|x2310;((let x2307 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2307 "push"
                                  [|(Ojs.float_to_js x2305)|]);
                             (match x2306 with
                              | Some x2308 ->
                                  ignore
                                    (Ojs.call x2307 "push"
                                       [|(Ojs.float_to_js x2308)|])
                              | None -> ());
                             x2307))|])
    let (get_length : t -> float) =
      fun (x2311 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2311) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2319 : t) ->
        fun
          ~callbackfn:(x2312 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2313 : any option) ->
            fun () ->
              t_of_js
                (let x2320 = t_to_js x2319 in
                 Ojs.call (Ojs.get_prop_ascii x2320 "map") "apply"
                   [|x2320;((let x2314 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2314 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2316 : Ojs.t) ->
                                          fun (x2317 : Ojs.t) ->
                                            fun (x2318 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2312
                                                   ~value:(Ojs.float_of_js
                                                             x2316)
                                                   ~index:(Ojs.float_of_js
                                                             x2317)
                                                   ~array:(t_of_js x2318))))|]);
                             (match x2313 with
                              | Some x2315 ->
                                  ignore
                                    (Ojs.call x2314 "push"
                                       [|(any_to_js x2315)|])
                              | None -> ());
                             x2314))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2326 : t) ->
        fun
          ~callbackfn:(x2321 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2326) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2322 : Ojs.t) ->
                       fun (x2323 : Ojs.t) ->
                         fun (x2324 : Ojs.t) ->
                           fun (x2325 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2321 ~previousValue:(Ojs.float_of_js x2322)
                                  ~currentValue:(Ojs.float_of_js x2323)
                                  ~currentIndex:(Ojs.float_of_js x2324)
                                  ~array:(t_of_js x2325))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2333 : t) ->
        fun
          ~callbackfn:(x2327 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2332 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2333) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2328 : Ojs.t) ->
                         fun (x2329 : Ojs.t) ->
                           fun (x2330 : Ojs.t) ->
                             fun (x2331 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2327
                                    ~previousValue:(Ojs.float_of_js x2328)
                                    ~currentValue:(Ojs.float_of_js x2329)
                                    ~currentIndex:(Ojs.float_of_js x2330)
                                    ~array:(t_of_js x2331))));(Ojs.float_to_js
                                                                 x2332)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2340 : t) ->
        fun
          ~callbackfn:(x2334 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2339 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2340) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2335 : Ojs.t) ->
                         fun (x2336 : Ojs.t) ->
                           fun (x2337 : Ojs.t) ->
                             fun (x2338 : Ojs.t) ->
                               Obj.magic
                                 (x2334 ~previousValue:(Obj.magic x2335)
                                    ~currentValue:(Ojs.float_of_js x2336)
                                    ~currentIndex:(Ojs.float_of_js x2337)
                                    ~array:(t_of_js x2338))));(Obj.magic
                                                                 x2339)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2346 : t) ->
        fun
          ~callbackfn:(x2341 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2346) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x2342 : Ojs.t) ->
                       fun (x2343 : Ojs.t) ->
                         fun (x2344 : Ojs.t) ->
                           fun (x2345 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2341 ~previousValue:(Ojs.float_of_js x2342)
                                  ~currentValue:(Ojs.float_of_js x2343)
                                  ~currentIndex:(Ojs.float_of_js x2344)
                                  ~array:(t_of_js x2345))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2353 : t) ->
        fun
          ~callbackfn:(x2347 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2352 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2353) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2348 : Ojs.t) ->
                         fun (x2349 : Ojs.t) ->
                           fun (x2350 : Ojs.t) ->
                             fun (x2351 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2347
                                    ~previousValue:(Ojs.float_of_js x2348)
                                    ~currentValue:(Ojs.float_of_js x2349)
                                    ~currentIndex:(Ojs.float_of_js x2350)
                                    ~array:(t_of_js x2351))));(Ojs.float_to_js
                                                                 x2352)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2360 : t) ->
        fun
          ~callbackfn:(x2354 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2359 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2360) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2355 : Ojs.t) ->
                         fun (x2356 : Ojs.t) ->
                           fun (x2357 : Ojs.t) ->
                             fun (x2358 : Ojs.t) ->
                               Obj.magic
                                 (x2354 ~previousValue:(Obj.magic x2355)
                                    ~currentValue:(Ojs.float_of_js x2356)
                                    ~currentIndex:(Ojs.float_of_js x2357)
                                    ~array:(t_of_js x2358))));(Obj.magic
                                                                 x2359)|])
    let (reverse : t -> t) =
      fun (x2361 : t) -> t_of_js (Ojs.call (t_to_js x2361) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x2367 : t) ->
        fun ~array:(x2362 : float _Array) ->
          fun ?offset:(x2363 : float option) ->
            fun () ->
              ignore
                (let x2368 = t_to_js x2367 in
                 Ojs.call (Ojs.get_prop_ascii x2368 "set") "apply"
                   [|x2368;((let x2364 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2364 "push"
                                  [|(_Array_to_js Ojs.float_to_js x2362)|]);
                             (match x2363 with
                              | Some x2365 ->
                                  ignore
                                    (Ojs.call x2364 "push"
                                       [|(Ojs.float_to_js x2365)|])
                              | None -> ());
                             x2364))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2374 : t) ->
        fun ?start:(x2369 : float option) ->
          fun ?end_:(x2370 : float option) ->
            fun () ->
              t_of_js
                (let x2375 = t_to_js x2374 in
                 Ojs.call (Ojs.get_prop_ascii x2375 "slice") "apply"
                   [|x2375;((let x2371 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2369 with
                              | Some x2373 ->
                                  ignore
                                    (Ojs.call x2371 "push"
                                       [|(Ojs.float_to_js x2373)|])
                              | None -> ());
                             (match x2370 with
                              | Some x2372 ->
                                  ignore
                                    (Ojs.call x2371 "push"
                                       [|(Ojs.float_to_js x2372)|])
                              | None -> ());
                             x2371))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2383 : t) ->
        fun
          ~predicate:(x2376 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2377 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2384 = t_to_js x2383 in
                 Ojs.call (Ojs.get_prop_ascii x2384 "some") "apply"
                   [|x2384;((let x2378 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2378 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2380 : Ojs.t) ->
                                          fun (x2381 : Ojs.t) ->
                                            fun (x2382 : Ojs.t) ->
                                              unknown_to_js
                                                (x2376
                                                   ~value:(Ojs.float_of_js
                                                             x2380)
                                                   ~index:(Ojs.float_of_js
                                                             x2381)
                                                   ~array:(t_of_js x2382))))|]);
                             (match x2377 with
                              | Some x2379 ->
                                  ignore
                                    (Ojs.call x2378 "push"
                                       [|(any_to_js x2379)|])
                              | None -> ());
                             x2378))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x2390 : t) ->
        fun ?compareFn:(x2385 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x2391 = t_to_js x2390 in
               Ojs.call (Ojs.get_prop_ascii x2391 "sort") "apply"
                 [|x2391;((let x2386 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2385 with
                            | Some x2387 ->
                                ignore
                                  (Ojs.call x2386 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2388 : Ojs.t) ->
                                             fun (x2389 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x2387
                                                    ~a:(Ojs.float_of_js x2388)
                                                    ~b:(Ojs.float_of_js x2389))))|])
                            | None -> ());
                           x2386))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x2397 : t) ->
        fun ?begin_:(x2392 : float option) ->
          fun ?end_:(x2393 : float option) ->
            fun () ->
              t_of_js
                (let x2398 = t_to_js x2397 in
                 Ojs.call (Ojs.get_prop_ascii x2398 "subarray") "apply"
                   [|x2398;((let x2394 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2392 with
                              | Some x2396 ->
                                  ignore
                                    (Ojs.call x2394 "push"
                                       [|(Ojs.float_to_js x2396)|])
                              | None -> ());
                             (match x2393 with
                              | Some x2395 ->
                                  ignore
                                    (Ojs.call x2394 "push"
                                       [|(Ojs.float_to_js x2395)|])
                              | None -> ());
                             x2394))|])
    let (toLocaleString : t -> string) =
      fun (x2399 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2399) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x2400 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2400) "toString" [||])
    let (valueOf : t -> t) =
      fun (x2401 : t) -> t_of_js (Ojs.call (t_to_js x2401) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x2402 : t) ->
        fun (x2403 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x2402) (Ojs.float_to_js x2403))
    let (set : t -> float -> float -> unit) =
      fun (x2404 : t) ->
        fun (x2405 : float) ->
          fun (x2406 : float) ->
            Ojs.set_prop (t_to_js x2404) (Ojs.float_to_js x2405)
              (Ojs.float_to_js x2406)
    let (create : length:float -> _Int8Array) =
      fun ~length:(x2407 : float) ->
        _Int8Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x2407)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Int8Array) =
      fun ~array:(x2408 : (_ArrayBuffer, float _Array) union2) ->
        _Int8Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x2410 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x2410) x2408)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Int8Array)
      =
      fun ~buffer:(x2412 : _ArrayBuffer) ->
        fun ?byteOffset:(x2413 : float option) ->
          fun ?length:(x2414 : float option) ->
            fun () ->
              _Int8Array_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x2415 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2415 "push" [|(_ArrayBuffer_to_js x2412)|]);
                    (match x2413 with
                     | Some x2417 ->
                         ignore
                           (Ojs.call x2415 "push" [|(Ojs.float_to_js x2417)|])
                     | None -> ());
                    (match x2414 with
                     | Some x2416 ->
                         ignore
                           (Ojs.call x2415 "push" [|(Ojs.float_to_js x2416)|])
                     | None -> ());
                    x2415))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Int8Array) =
      fun ~items:(x2418 : float list) ->
        _Int8Array_of_js
          (let x2421 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x2421 "of") "apply"
             [|x2421;((let x2419 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2420 : float) ->
                            ignore
                              (Ojs.call x2419 "push"
                                 [|(Ojs.float_to_js x2420)|])) x2418;
                       x2419))|])
    let (from : array:float _Array -> _Int8Array) =
      fun ~array:(x2422 : float _Array) ->
        _Int8Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(_Array_to_js Ojs.float_to_js x2422)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Int8Array)
      =
      fun ~array:(x2424 : 'T _Array) ->
        fun ~mapfn:(x2425 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x2426 : any option) ->
            fun () ->
              _Int8Array_of_js
                (let x2432 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x2432 "from") "apply"
                   [|x2432;((let x2427 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2427 "push"
                                  [|(_Array_to_js Obj.magic x2424)|]);
                             ignore
                               (Ojs.call x2427 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2429 : Ojs.t) ->
                                          fun (x2430 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x2425 ~v:(Obj.magic x2429)
                                                 ~k:(Ojs.float_of_js x2430))))|]);
                             (match x2426 with
                              | Some x2428 ->
                                  ignore
                                    (Ojs.call x2427 "push"
                                       [|(any_to_js x2428)|])
                              | None -> ());
                             x2427))|])
  end
module Int8ArrayConstructor =
  struct
    type t = _Int8ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2434 : Ojs.t) -> _Int8ArrayConstructor_of_js x2434
    and t_to_js : t -> Ojs.t =
      fun (x2433 : _Int8ArrayConstructor) ->
        _Int8ArrayConstructor_to_js x2433
    let (get_prototype : t -> _Int8Array) =
      fun (x2435 : t) ->
        _Int8Array_of_js (Ojs.get_prop_ascii (t_to_js x2435) "prototype")
    let (create : t -> length:float -> _Int8Array) =
      fun (x2437 : t) ->
        fun ~length:(x2436 : float) ->
          _Int8Array_of_js
            (Ojs.new_obj (t_to_js x2437) [|(Ojs.float_to_js x2436)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Int8Array) =
      fun (x2442 : t) ->
        fun ~array:(x2438 : (_ArrayBuffer, float _Array) union2) ->
          _Int8Array_of_js
            (Ojs.new_obj (t_to_js x2442)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x2440 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x2440) x2438)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Int8Array)
      =
      fun (x2449 : t) ->
        fun ~buffer:(x2443 : _ArrayBuffer) ->
          fun ?byteOffset:(x2444 : float option) ->
            fun ?length:(x2445 : float option) ->
              fun () ->
                _Int8Array_of_js
                  (Ojs.new_obj_arr (t_to_js x2449)
                     (let x2446 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2446 "push" [|(_ArrayBuffer_to_js x2443)|]);
                      (match x2444 with
                       | Some x2448 ->
                           ignore
                             (Ojs.call x2446 "push"
                                [|(Ojs.float_to_js x2448)|])
                       | None -> ());
                      (match x2445 with
                       | Some x2447 ->
                           ignore
                             (Ojs.call x2446 "push"
                                [|(Ojs.float_to_js x2447)|])
                       | None -> ());
                      x2446))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2450 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2450) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Int8Array) =
      fun (x2454 : t) ->
        fun ~items:(x2451 : float list) ->
          _Int8Array_of_js
            (let x2455 = t_to_js x2454 in
             Ojs.call (Ojs.get_prop_ascii x2455 "of") "apply"
               [|x2455;((let x2452 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x2453 : float) ->
                              ignore
                                (Ojs.call x2452 "push"
                                   [|(Ojs.float_to_js x2453)|])) x2451;
                         x2452))|])
    let (from : t -> array:float _Array -> _Int8Array) =
      fun (x2458 : t) ->
        fun ~array:(x2456 : float _Array) ->
          _Int8Array_of_js
            (Ojs.call (t_to_js x2458) "from"
               [|(_Array_to_js Ojs.float_to_js x2456)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Int8Array)
      =
      fun (x2467 : t) ->
        fun ~array:(x2459 : 'T _Array) ->
          fun ~mapfn:(x2460 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x2461 : any option) ->
              fun () ->
                _Int8Array_of_js
                  (let x2468 = t_to_js x2467 in
                   Ojs.call (Ojs.get_prop_ascii x2468 "from") "apply"
                     [|x2468;((let x2462 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2462 "push"
                                    [|(_Array_to_js Obj.magic x2459)|]);
                               ignore
                                 (Ojs.call x2462 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x2464 : Ojs.t) ->
                                            fun (x2465 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2460 ~v:(Obj.magic x2464)
                                                   ~k:(Ojs.float_of_js x2465))))|]);
                               (match x2461 with
                                | Some x2463 ->
                                    ignore
                                      (Ojs.call x2462 "push"
                                         [|(any_to_js x2463)|])
                                | None -> ());
                               x2462))|])
  end
let (int8Array : _Int8ArrayConstructor) =
  _Int8ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Int8Array")
module Uint8Array =
  struct
    type t = _Uint8Array
    let rec t_of_js : Ojs.t -> t =
      fun (x2470 : Ojs.t) -> _Uint8Array_of_js x2470
    and t_to_js : t -> Ojs.t =
      fun (x2469 : _Uint8Array) -> _Uint8Array_to_js x2469
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2471 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2471) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2472 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2472) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2473 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2473) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2474 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2474) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2480 : t) ->
        fun ~target:(x2475 : float) ->
          fun ~start:(x2476 : float) ->
            fun ?end_:(x2477 : float option) ->
              fun () ->
                t_of_js
                  (let x2481 = t_to_js x2480 in
                   Ojs.call (Ojs.get_prop_ascii x2481 "copyWithin") "apply"
                     [|x2481;((let x2478 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2478 "push"
                                    [|(Ojs.float_to_js x2475)|]);
                               ignore
                                 (Ojs.call x2478 "push"
                                    [|(Ojs.float_to_js x2476)|]);
                               (match x2477 with
                                | Some x2479 ->
                                    ignore
                                      (Ojs.call x2478 "push"
                                         [|(Ojs.float_to_js x2479)|])
                                | None -> ());
                               x2478))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2489 : t) ->
        fun
          ~predicate:(x2482 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2483 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2490 = t_to_js x2489 in
                 Ojs.call (Ojs.get_prop_ascii x2490 "every") "apply"
                   [|x2490;((let x2484 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2484 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2486 : Ojs.t) ->
                                          fun (x2487 : Ojs.t) ->
                                            fun (x2488 : Ojs.t) ->
                                              unknown_to_js
                                                (x2482
                                                   ~value:(Ojs.float_of_js
                                                             x2486)
                                                   ~index:(Ojs.float_of_js
                                                             x2487)
                                                   ~array:(t_of_js x2488))))|]);
                             (match x2483 with
                              | Some x2485 ->
                                  ignore
                                    (Ojs.call x2484 "push"
                                       [|(any_to_js x2485)|])
                              | None -> ());
                             x2484))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2497 : t) ->
        fun ~value:(x2491 : float) ->
          fun ?start:(x2492 : float option) ->
            fun ?end_:(x2493 : float option) ->
              fun () ->
                t_of_js
                  (let x2498 = t_to_js x2497 in
                   Ojs.call (Ojs.get_prop_ascii x2498 "fill") "apply"
                     [|x2498;((let x2494 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2494 "push"
                                    [|(Ojs.float_to_js x2491)|]);
                               (match x2492 with
                                | Some x2496 ->
                                    ignore
                                      (Ojs.call x2494 "push"
                                         [|(Ojs.float_to_js x2496)|])
                                | None -> ());
                               (match x2493 with
                                | Some x2495 ->
                                    ignore
                                      (Ojs.call x2494 "push"
                                         [|(Ojs.float_to_js x2495)|])
                                | None -> ());
                               x2494))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2506 : t) ->
        fun ~predicate:(x2499 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x2500 : any option) ->
            fun () ->
              t_of_js
                (let x2507 = t_to_js x2506 in
                 Ojs.call (Ojs.get_prop_ascii x2507 "filter") "apply"
                   [|x2507;((let x2501 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2501 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2503 : Ojs.t) ->
                                          fun (x2504 : Ojs.t) ->
                                            fun (x2505 : Ojs.t) ->
                                              any_to_js
                                                (x2499
                                                   ~value:(Ojs.float_of_js
                                                             x2503)
                                                   ~index:(Ojs.float_of_js
                                                             x2504)
                                                   ~array:(t_of_js x2505))))|]);
                             (match x2500 with
                              | Some x2502 ->
                                  ignore
                                    (Ojs.call x2501 "push"
                                       [|(any_to_js x2502)|])
                              | None -> ());
                             x2501))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2515 : t) ->
        fun ~predicate:(x2508 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2509 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2516 = t_to_js x2515 in
                 Ojs.call (Ojs.get_prop_ascii x2516 "find") "apply"
                   [|x2516;((let x2510 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2510 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2512 : Ojs.t) ->
                                          fun (x2513 : Ojs.t) ->
                                            fun (x2514 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2508
                                                   ~value:(Ojs.float_of_js
                                                             x2512)
                                                   ~index:(Ojs.float_of_js
                                                             x2513)
                                                   ~obj:(t_of_js x2514))))|]);
                             (match x2509 with
                              | Some x2511 ->
                                  ignore
                                    (Ojs.call x2510 "push"
                                       [|(any_to_js x2511)|])
                              | None -> ());
                             x2510))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2525 : t) ->
        fun ~predicate:(x2518 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2519 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2526 = t_to_js x2525 in
                 Ojs.call (Ojs.get_prop_ascii x2526 "findIndex") "apply"
                   [|x2526;((let x2520 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2520 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2522 : Ojs.t) ->
                                          fun (x2523 : Ojs.t) ->
                                            fun (x2524 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2518
                                                   ~value:(Ojs.float_of_js
                                                             x2522)
                                                   ~index:(Ojs.float_of_js
                                                             x2523)
                                                   ~obj:(t_of_js x2524))))|]);
                             (match x2519 with
                              | Some x2521 ->
                                  ignore
                                    (Ojs.call x2520 "push"
                                       [|(any_to_js x2521)|])
                              | None -> ());
                             x2520))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2534 : t) ->
        fun
          ~callbackfn:(x2527 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2528 : any option) ->
            fun () ->
              ignore
                (let x2535 = t_to_js x2534 in
                 Ojs.call (Ojs.get_prop_ascii x2535 "forEach") "apply"
                   [|x2535;((let x2529 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2529 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2531 : Ojs.t) ->
                                          fun (x2532 : Ojs.t) ->
                                            fun (x2533 : Ojs.t) ->
                                              x2527
                                                ~value:(Ojs.float_of_js x2531)
                                                ~index:(Ojs.float_of_js x2532)
                                                ~array:(t_of_js x2533)))|]);
                             (match x2528 with
                              | Some x2530 ->
                                  ignore
                                    (Ojs.call x2529 "push"
                                       [|(any_to_js x2530)|])
                              | None -> ());
                             x2529))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2540 : t) ->
        fun ~searchElement:(x2536 : float) ->
          fun ?fromIndex:(x2537 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2541 = t_to_js x2540 in
                 Ojs.call (Ojs.get_prop_ascii x2541 "indexOf") "apply"
                   [|x2541;((let x2538 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2538 "push"
                                  [|(Ojs.float_to_js x2536)|]);
                             (match x2537 with
                              | Some x2539 ->
                                  ignore
                                    (Ojs.call x2538 "push"
                                       [|(Ojs.float_to_js x2539)|])
                              | None -> ());
                             x2538))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2545 : t) ->
        fun ?separator:(x2542 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2546 = t_to_js x2545 in
               Ojs.call (Ojs.get_prop_ascii x2546 "join") "apply"
                 [|x2546;((let x2543 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2542 with
                            | Some x2544 ->
                                ignore
                                  (Ojs.call x2543 "push"
                                     [|(Ojs.string_to_js x2544)|])
                            | None -> ());
                           x2543))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2551 : t) ->
        fun ~searchElement:(x2547 : float) ->
          fun ?fromIndex:(x2548 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2552 = t_to_js x2551 in
                 Ojs.call (Ojs.get_prop_ascii x2552 "lastIndexOf") "apply"
                   [|x2552;((let x2549 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2549 "push"
                                  [|(Ojs.float_to_js x2547)|]);
                             (match x2548 with
                              | Some x2550 ->
                                  ignore
                                    (Ojs.call x2549 "push"
                                       [|(Ojs.float_to_js x2550)|])
                              | None -> ());
                             x2549))|])
    let (get_length : t -> float) =
      fun (x2553 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2553) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2561 : t) ->
        fun
          ~callbackfn:(x2554 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2555 : any option) ->
            fun () ->
              t_of_js
                (let x2562 = t_to_js x2561 in
                 Ojs.call (Ojs.get_prop_ascii x2562 "map") "apply"
                   [|x2562;((let x2556 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2556 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2558 : Ojs.t) ->
                                          fun (x2559 : Ojs.t) ->
                                            fun (x2560 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2554
                                                   ~value:(Ojs.float_of_js
                                                             x2558)
                                                   ~index:(Ojs.float_of_js
                                                             x2559)
                                                   ~array:(t_of_js x2560))))|]);
                             (match x2555 with
                              | Some x2557 ->
                                  ignore
                                    (Ojs.call x2556 "push"
                                       [|(any_to_js x2557)|])
                              | None -> ());
                             x2556))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2568 : t) ->
        fun
          ~callbackfn:(x2563 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2568) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2564 : Ojs.t) ->
                       fun (x2565 : Ojs.t) ->
                         fun (x2566 : Ojs.t) ->
                           fun (x2567 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2563 ~previousValue:(Ojs.float_of_js x2564)
                                  ~currentValue:(Ojs.float_of_js x2565)
                                  ~currentIndex:(Ojs.float_of_js x2566)
                                  ~array:(t_of_js x2567))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2575 : t) ->
        fun
          ~callbackfn:(x2569 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2574 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2575) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2570 : Ojs.t) ->
                         fun (x2571 : Ojs.t) ->
                           fun (x2572 : Ojs.t) ->
                             fun (x2573 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2569
                                    ~previousValue:(Ojs.float_of_js x2570)
                                    ~currentValue:(Ojs.float_of_js x2571)
                                    ~currentIndex:(Ojs.float_of_js x2572)
                                    ~array:(t_of_js x2573))));(Ojs.float_to_js
                                                                 x2574)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2582 : t) ->
        fun
          ~callbackfn:(x2576 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2581 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2582) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2577 : Ojs.t) ->
                         fun (x2578 : Ojs.t) ->
                           fun (x2579 : Ojs.t) ->
                             fun (x2580 : Ojs.t) ->
                               Obj.magic
                                 (x2576 ~previousValue:(Obj.magic x2577)
                                    ~currentValue:(Ojs.float_of_js x2578)
                                    ~currentIndex:(Ojs.float_of_js x2579)
                                    ~array:(t_of_js x2580))));(Obj.magic
                                                                 x2581)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2588 : t) ->
        fun
          ~callbackfn:(x2583 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2588) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x2584 : Ojs.t) ->
                       fun (x2585 : Ojs.t) ->
                         fun (x2586 : Ojs.t) ->
                           fun (x2587 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2583 ~previousValue:(Ojs.float_of_js x2584)
                                  ~currentValue:(Ojs.float_of_js x2585)
                                  ~currentIndex:(Ojs.float_of_js x2586)
                                  ~array:(t_of_js x2587))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2595 : t) ->
        fun
          ~callbackfn:(x2589 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2594 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2595) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2590 : Ojs.t) ->
                         fun (x2591 : Ojs.t) ->
                           fun (x2592 : Ojs.t) ->
                             fun (x2593 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2589
                                    ~previousValue:(Ojs.float_of_js x2590)
                                    ~currentValue:(Ojs.float_of_js x2591)
                                    ~currentIndex:(Ojs.float_of_js x2592)
                                    ~array:(t_of_js x2593))));(Ojs.float_to_js
                                                                 x2594)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2602 : t) ->
        fun
          ~callbackfn:(x2596 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2601 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2602) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2597 : Ojs.t) ->
                         fun (x2598 : Ojs.t) ->
                           fun (x2599 : Ojs.t) ->
                             fun (x2600 : Ojs.t) ->
                               Obj.magic
                                 (x2596 ~previousValue:(Obj.magic x2597)
                                    ~currentValue:(Ojs.float_of_js x2598)
                                    ~currentIndex:(Ojs.float_of_js x2599)
                                    ~array:(t_of_js x2600))));(Obj.magic
                                                                 x2601)|])
    let (reverse : t -> t) =
      fun (x2603 : t) -> t_of_js (Ojs.call (t_to_js x2603) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x2609 : t) ->
        fun ~array:(x2604 : float _Array) ->
          fun ?offset:(x2605 : float option) ->
            fun () ->
              ignore
                (let x2610 = t_to_js x2609 in
                 Ojs.call (Ojs.get_prop_ascii x2610 "set") "apply"
                   [|x2610;((let x2606 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2606 "push"
                                  [|(_Array_to_js Ojs.float_to_js x2604)|]);
                             (match x2605 with
                              | Some x2607 ->
                                  ignore
                                    (Ojs.call x2606 "push"
                                       [|(Ojs.float_to_js x2607)|])
                              | None -> ());
                             x2606))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2616 : t) ->
        fun ?start:(x2611 : float option) ->
          fun ?end_:(x2612 : float option) ->
            fun () ->
              t_of_js
                (let x2617 = t_to_js x2616 in
                 Ojs.call (Ojs.get_prop_ascii x2617 "slice") "apply"
                   [|x2617;((let x2613 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2611 with
                              | Some x2615 ->
                                  ignore
                                    (Ojs.call x2613 "push"
                                       [|(Ojs.float_to_js x2615)|])
                              | None -> ());
                             (match x2612 with
                              | Some x2614 ->
                                  ignore
                                    (Ojs.call x2613 "push"
                                       [|(Ojs.float_to_js x2614)|])
                              | None -> ());
                             x2613))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2625 : t) ->
        fun
          ~predicate:(x2618 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2619 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2626 = t_to_js x2625 in
                 Ojs.call (Ojs.get_prop_ascii x2626 "some") "apply"
                   [|x2626;((let x2620 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2620 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2622 : Ojs.t) ->
                                          fun (x2623 : Ojs.t) ->
                                            fun (x2624 : Ojs.t) ->
                                              unknown_to_js
                                                (x2618
                                                   ~value:(Ojs.float_of_js
                                                             x2622)
                                                   ~index:(Ojs.float_of_js
                                                             x2623)
                                                   ~array:(t_of_js x2624))))|]);
                             (match x2619 with
                              | Some x2621 ->
                                  ignore
                                    (Ojs.call x2620 "push"
                                       [|(any_to_js x2621)|])
                              | None -> ());
                             x2620))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x2632 : t) ->
        fun ?compareFn:(x2627 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x2633 = t_to_js x2632 in
               Ojs.call (Ojs.get_prop_ascii x2633 "sort") "apply"
                 [|x2633;((let x2628 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2627 with
                            | Some x2629 ->
                                ignore
                                  (Ojs.call x2628 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2630 : Ojs.t) ->
                                             fun (x2631 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x2629
                                                    ~a:(Ojs.float_of_js x2630)
                                                    ~b:(Ojs.float_of_js x2631))))|])
                            | None -> ());
                           x2628))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x2639 : t) ->
        fun ?begin_:(x2634 : float option) ->
          fun ?end_:(x2635 : float option) ->
            fun () ->
              t_of_js
                (let x2640 = t_to_js x2639 in
                 Ojs.call (Ojs.get_prop_ascii x2640 "subarray") "apply"
                   [|x2640;((let x2636 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2634 with
                              | Some x2638 ->
                                  ignore
                                    (Ojs.call x2636 "push"
                                       [|(Ojs.float_to_js x2638)|])
                              | None -> ());
                             (match x2635 with
                              | Some x2637 ->
                                  ignore
                                    (Ojs.call x2636 "push"
                                       [|(Ojs.float_to_js x2637)|])
                              | None -> ());
                             x2636))|])
    let (toLocaleString : t -> string) =
      fun (x2641 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2641) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x2642 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2642) "toString" [||])
    let (valueOf : t -> t) =
      fun (x2643 : t) -> t_of_js (Ojs.call (t_to_js x2643) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x2644 : t) ->
        fun (x2645 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x2644) (Ojs.float_to_js x2645))
    let (set : t -> float -> float -> unit) =
      fun (x2646 : t) ->
        fun (x2647 : float) ->
          fun (x2648 : float) ->
            Ojs.set_prop (t_to_js x2646) (Ojs.float_to_js x2647)
              (Ojs.float_to_js x2648)
    let (create : length:float -> _Uint8Array) =
      fun ~length:(x2649 : float) ->
        _Uint8Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x2649)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Uint8Array)
      =
      fun ~array:(x2650 : (_ArrayBuffer, float _Array) union2) ->
        _Uint8Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x2652 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x2652) x2650)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Uint8Array)
      =
      fun ~buffer:(x2654 : _ArrayBuffer) ->
        fun ?byteOffset:(x2655 : float option) ->
          fun ?length:(x2656 : float option) ->
            fun () ->
              _Uint8Array_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x2657 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2657 "push" [|(_ArrayBuffer_to_js x2654)|]);
                    (match x2655 with
                     | Some x2659 ->
                         ignore
                           (Ojs.call x2657 "push" [|(Ojs.float_to_js x2659)|])
                     | None -> ());
                    (match x2656 with
                     | Some x2658 ->
                         ignore
                           (Ojs.call x2657 "push" [|(Ojs.float_to_js x2658)|])
                     | None -> ());
                    x2657))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Uint8Array) =
      fun ~items:(x2660 : float list) ->
        _Uint8Array_of_js
          (let x2663 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x2663 "of") "apply"
             [|x2663;((let x2661 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2662 : float) ->
                            ignore
                              (Ojs.call x2661 "push"
                                 [|(Ojs.float_to_js x2662)|])) x2660;
                       x2661))|])
    let (from : array:float _Array -> _Uint8Array) =
      fun ~array:(x2664 : float _Array) ->
        _Uint8Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(_Array_to_js Ojs.float_to_js x2664)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Uint8Array)
      =
      fun ~array:(x2666 : 'T _Array) ->
        fun ~mapfn:(x2667 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x2668 : any option) ->
            fun () ->
              _Uint8Array_of_js
                (let x2674 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x2674 "from") "apply"
                   [|x2674;((let x2669 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2669 "push"
                                  [|(_Array_to_js Obj.magic x2666)|]);
                             ignore
                               (Ojs.call x2669 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2671 : Ojs.t) ->
                                          fun (x2672 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x2667 ~v:(Obj.magic x2671)
                                                 ~k:(Ojs.float_of_js x2672))))|]);
                             (match x2668 with
                              | Some x2670 ->
                                  ignore
                                    (Ojs.call x2669 "push"
                                       [|(any_to_js x2670)|])
                              | None -> ());
                             x2669))|])
  end
module Uint8ArrayConstructor =
  struct
    type t = _Uint8ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2676 : Ojs.t) -> _Uint8ArrayConstructor_of_js x2676
    and t_to_js : t -> Ojs.t =
      fun (x2675 : _Uint8ArrayConstructor) ->
        _Uint8ArrayConstructor_to_js x2675
    let (get_prototype : t -> _Uint8Array) =
      fun (x2677 : t) ->
        _Uint8Array_of_js (Ojs.get_prop_ascii (t_to_js x2677) "prototype")
    let (create : t -> length:float -> _Uint8Array) =
      fun (x2679 : t) ->
        fun ~length:(x2678 : float) ->
          _Uint8Array_of_js
            (Ojs.new_obj (t_to_js x2679) [|(Ojs.float_to_js x2678)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Uint8Array) =
      fun (x2684 : t) ->
        fun ~array:(x2680 : (_ArrayBuffer, float _Array) union2) ->
          _Uint8Array_of_js
            (Ojs.new_obj (t_to_js x2684)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x2682 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x2682) x2680)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Uint8Array)
      =
      fun (x2691 : t) ->
        fun ~buffer:(x2685 : _ArrayBuffer) ->
          fun ?byteOffset:(x2686 : float option) ->
            fun ?length:(x2687 : float option) ->
              fun () ->
                _Uint8Array_of_js
                  (Ojs.new_obj_arr (t_to_js x2691)
                     (let x2688 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2688 "push" [|(_ArrayBuffer_to_js x2685)|]);
                      (match x2686 with
                       | Some x2690 ->
                           ignore
                             (Ojs.call x2688 "push"
                                [|(Ojs.float_to_js x2690)|])
                       | None -> ());
                      (match x2687 with
                       | Some x2689 ->
                           ignore
                             (Ojs.call x2688 "push"
                                [|(Ojs.float_to_js x2689)|])
                       | None -> ());
                      x2688))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2692 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2692) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Uint8Array) =
      fun (x2696 : t) ->
        fun ~items:(x2693 : float list) ->
          _Uint8Array_of_js
            (let x2697 = t_to_js x2696 in
             Ojs.call (Ojs.get_prop_ascii x2697 "of") "apply"
               [|x2697;((let x2694 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x2695 : float) ->
                              ignore
                                (Ojs.call x2694 "push"
                                   [|(Ojs.float_to_js x2695)|])) x2693;
                         x2694))|])
    let (from : t -> array:float _Array -> _Uint8Array) =
      fun (x2700 : t) ->
        fun ~array:(x2698 : float _Array) ->
          _Uint8Array_of_js
            (Ojs.call (t_to_js x2700) "from"
               [|(_Array_to_js Ojs.float_to_js x2698)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Uint8Array)
      =
      fun (x2709 : t) ->
        fun ~array:(x2701 : 'T _Array) ->
          fun ~mapfn:(x2702 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x2703 : any option) ->
              fun () ->
                _Uint8Array_of_js
                  (let x2710 = t_to_js x2709 in
                   Ojs.call (Ojs.get_prop_ascii x2710 "from") "apply"
                     [|x2710;((let x2704 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2704 "push"
                                    [|(_Array_to_js Obj.magic x2701)|]);
                               ignore
                                 (Ojs.call x2704 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x2706 : Ojs.t) ->
                                            fun (x2707 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2702 ~v:(Obj.magic x2706)
                                                   ~k:(Ojs.float_of_js x2707))))|]);
                               (match x2703 with
                                | Some x2705 ->
                                    ignore
                                      (Ojs.call x2704 "push"
                                         [|(any_to_js x2705)|])
                                | None -> ());
                               x2704))|])
  end
let (uint8Array : _Uint8ArrayConstructor) =
  _Uint8ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Uint8Array")
module Uint8ClampedArray =
  struct
    type t = _Uint8ClampedArray
    let rec t_of_js : Ojs.t -> t =
      fun (x2712 : Ojs.t) -> _Uint8ClampedArray_of_js x2712
    and t_to_js : t -> Ojs.t =
      fun (x2711 : _Uint8ClampedArray) -> _Uint8ClampedArray_to_js x2711
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2713 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2713) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2714 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2714) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2715 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2715) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2716 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2716) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2722 : t) ->
        fun ~target:(x2717 : float) ->
          fun ~start:(x2718 : float) ->
            fun ?end_:(x2719 : float option) ->
              fun () ->
                t_of_js
                  (let x2723 = t_to_js x2722 in
                   Ojs.call (Ojs.get_prop_ascii x2723 "copyWithin") "apply"
                     [|x2723;((let x2720 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2720 "push"
                                    [|(Ojs.float_to_js x2717)|]);
                               ignore
                                 (Ojs.call x2720 "push"
                                    [|(Ojs.float_to_js x2718)|]);
                               (match x2719 with
                                | Some x2721 ->
                                    ignore
                                      (Ojs.call x2720 "push"
                                         [|(Ojs.float_to_js x2721)|])
                                | None -> ());
                               x2720))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2731 : t) ->
        fun
          ~predicate:(x2724 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2725 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2732 = t_to_js x2731 in
                 Ojs.call (Ojs.get_prop_ascii x2732 "every") "apply"
                   [|x2732;((let x2726 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2726 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2728 : Ojs.t) ->
                                          fun (x2729 : Ojs.t) ->
                                            fun (x2730 : Ojs.t) ->
                                              unknown_to_js
                                                (x2724
                                                   ~value:(Ojs.float_of_js
                                                             x2728)
                                                   ~index:(Ojs.float_of_js
                                                             x2729)
                                                   ~array:(t_of_js x2730))))|]);
                             (match x2725 with
                              | Some x2727 ->
                                  ignore
                                    (Ojs.call x2726 "push"
                                       [|(any_to_js x2727)|])
                              | None -> ());
                             x2726))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2739 : t) ->
        fun ~value:(x2733 : float) ->
          fun ?start:(x2734 : float option) ->
            fun ?end_:(x2735 : float option) ->
              fun () ->
                t_of_js
                  (let x2740 = t_to_js x2739 in
                   Ojs.call (Ojs.get_prop_ascii x2740 "fill") "apply"
                     [|x2740;((let x2736 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2736 "push"
                                    [|(Ojs.float_to_js x2733)|]);
                               (match x2734 with
                                | Some x2738 ->
                                    ignore
                                      (Ojs.call x2736 "push"
                                         [|(Ojs.float_to_js x2738)|])
                                | None -> ());
                               (match x2735 with
                                | Some x2737 ->
                                    ignore
                                      (Ojs.call x2736 "push"
                                         [|(Ojs.float_to_js x2737)|])
                                | None -> ());
                               x2736))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2748 : t) ->
        fun ~predicate:(x2741 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x2742 : any option) ->
            fun () ->
              t_of_js
                (let x2749 = t_to_js x2748 in
                 Ojs.call (Ojs.get_prop_ascii x2749 "filter") "apply"
                   [|x2749;((let x2743 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2743 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2745 : Ojs.t) ->
                                          fun (x2746 : Ojs.t) ->
                                            fun (x2747 : Ojs.t) ->
                                              any_to_js
                                                (x2741
                                                   ~value:(Ojs.float_of_js
                                                             x2745)
                                                   ~index:(Ojs.float_of_js
                                                             x2746)
                                                   ~array:(t_of_js x2747))))|]);
                             (match x2742 with
                              | Some x2744 ->
                                  ignore
                                    (Ojs.call x2743 "push"
                                       [|(any_to_js x2744)|])
                              | None -> ());
                             x2743))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2757 : t) ->
        fun ~predicate:(x2750 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2751 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2758 = t_to_js x2757 in
                 Ojs.call (Ojs.get_prop_ascii x2758 "find") "apply"
                   [|x2758;((let x2752 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2752 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2754 : Ojs.t) ->
                                          fun (x2755 : Ojs.t) ->
                                            fun (x2756 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2750
                                                   ~value:(Ojs.float_of_js
                                                             x2754)
                                                   ~index:(Ojs.float_of_js
                                                             x2755)
                                                   ~obj:(t_of_js x2756))))|]);
                             (match x2751 with
                              | Some x2753 ->
                                  ignore
                                    (Ojs.call x2752 "push"
                                       [|(any_to_js x2753)|])
                              | None -> ());
                             x2752))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2767 : t) ->
        fun ~predicate:(x2760 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2761 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2768 = t_to_js x2767 in
                 Ojs.call (Ojs.get_prop_ascii x2768 "findIndex") "apply"
                   [|x2768;((let x2762 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2762 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2764 : Ojs.t) ->
                                          fun (x2765 : Ojs.t) ->
                                            fun (x2766 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2760
                                                   ~value:(Ojs.float_of_js
                                                             x2764)
                                                   ~index:(Ojs.float_of_js
                                                             x2765)
                                                   ~obj:(t_of_js x2766))))|]);
                             (match x2761 with
                              | Some x2763 ->
                                  ignore
                                    (Ojs.call x2762 "push"
                                       [|(any_to_js x2763)|])
                              | None -> ());
                             x2762))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2776 : t) ->
        fun
          ~callbackfn:(x2769 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2770 : any option) ->
            fun () ->
              ignore
                (let x2777 = t_to_js x2776 in
                 Ojs.call (Ojs.get_prop_ascii x2777 "forEach") "apply"
                   [|x2777;((let x2771 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2771 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2773 : Ojs.t) ->
                                          fun (x2774 : Ojs.t) ->
                                            fun (x2775 : Ojs.t) ->
                                              x2769
                                                ~value:(Ojs.float_of_js x2773)
                                                ~index:(Ojs.float_of_js x2774)
                                                ~array:(t_of_js x2775)))|]);
                             (match x2770 with
                              | Some x2772 ->
                                  ignore
                                    (Ojs.call x2771 "push"
                                       [|(any_to_js x2772)|])
                              | None -> ());
                             x2771))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2782 : t) ->
        fun ~searchElement:(x2778 : float) ->
          fun ?fromIndex:(x2779 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2783 = t_to_js x2782 in
                 Ojs.call (Ojs.get_prop_ascii x2783 "indexOf") "apply"
                   [|x2783;((let x2780 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2780 "push"
                                  [|(Ojs.float_to_js x2778)|]);
                             (match x2779 with
                              | Some x2781 ->
                                  ignore
                                    (Ojs.call x2780 "push"
                                       [|(Ojs.float_to_js x2781)|])
                              | None -> ());
                             x2780))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2787 : t) ->
        fun ?separator:(x2784 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2788 = t_to_js x2787 in
               Ojs.call (Ojs.get_prop_ascii x2788 "join") "apply"
                 [|x2788;((let x2785 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2784 with
                            | Some x2786 ->
                                ignore
                                  (Ojs.call x2785 "push"
                                     [|(Ojs.string_to_js x2786)|])
                            | None -> ());
                           x2785))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2793 : t) ->
        fun ~searchElement:(x2789 : float) ->
          fun ?fromIndex:(x2790 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2794 = t_to_js x2793 in
                 Ojs.call (Ojs.get_prop_ascii x2794 "lastIndexOf") "apply"
                   [|x2794;((let x2791 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2791 "push"
                                  [|(Ojs.float_to_js x2789)|]);
                             (match x2790 with
                              | Some x2792 ->
                                  ignore
                                    (Ojs.call x2791 "push"
                                       [|(Ojs.float_to_js x2792)|])
                              | None -> ());
                             x2791))|])
    let (get_length : t -> float) =
      fun (x2795 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2795) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2803 : t) ->
        fun
          ~callbackfn:(x2796 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2797 : any option) ->
            fun () ->
              t_of_js
                (let x2804 = t_to_js x2803 in
                 Ojs.call (Ojs.get_prop_ascii x2804 "map") "apply"
                   [|x2804;((let x2798 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2798 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2800 : Ojs.t) ->
                                          fun (x2801 : Ojs.t) ->
                                            fun (x2802 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2796
                                                   ~value:(Ojs.float_of_js
                                                             x2800)
                                                   ~index:(Ojs.float_of_js
                                                             x2801)
                                                   ~array:(t_of_js x2802))))|]);
                             (match x2797 with
                              | Some x2799 ->
                                  ignore
                                    (Ojs.call x2798 "push"
                                       [|(any_to_js x2799)|])
                              | None -> ());
                             x2798))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2810 : t) ->
        fun
          ~callbackfn:(x2805 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2810) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2806 : Ojs.t) ->
                       fun (x2807 : Ojs.t) ->
                         fun (x2808 : Ojs.t) ->
                           fun (x2809 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2805 ~previousValue:(Ojs.float_of_js x2806)
                                  ~currentValue:(Ojs.float_of_js x2807)
                                  ~currentIndex:(Ojs.float_of_js x2808)
                                  ~array:(t_of_js x2809))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2817 : t) ->
        fun
          ~callbackfn:(x2811 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2816 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2817) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2812 : Ojs.t) ->
                         fun (x2813 : Ojs.t) ->
                           fun (x2814 : Ojs.t) ->
                             fun (x2815 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2811
                                    ~previousValue:(Ojs.float_of_js x2812)
                                    ~currentValue:(Ojs.float_of_js x2813)
                                    ~currentIndex:(Ojs.float_of_js x2814)
                                    ~array:(t_of_js x2815))));(Ojs.float_to_js
                                                                 x2816)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2824 : t) ->
        fun
          ~callbackfn:(x2818 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2823 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2824) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2819 : Ojs.t) ->
                         fun (x2820 : Ojs.t) ->
                           fun (x2821 : Ojs.t) ->
                             fun (x2822 : Ojs.t) ->
                               Obj.magic
                                 (x2818 ~previousValue:(Obj.magic x2819)
                                    ~currentValue:(Ojs.float_of_js x2820)
                                    ~currentIndex:(Ojs.float_of_js x2821)
                                    ~array:(t_of_js x2822))));(Obj.magic
                                                                 x2823)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2830 : t) ->
        fun
          ~callbackfn:(x2825 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2830) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x2826 : Ojs.t) ->
                       fun (x2827 : Ojs.t) ->
                         fun (x2828 : Ojs.t) ->
                           fun (x2829 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2825 ~previousValue:(Ojs.float_of_js x2826)
                                  ~currentValue:(Ojs.float_of_js x2827)
                                  ~currentIndex:(Ojs.float_of_js x2828)
                                  ~array:(t_of_js x2829))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2837 : t) ->
        fun
          ~callbackfn:(x2831 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2836 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2837) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2832 : Ojs.t) ->
                         fun (x2833 : Ojs.t) ->
                           fun (x2834 : Ojs.t) ->
                             fun (x2835 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2831
                                    ~previousValue:(Ojs.float_of_js x2832)
                                    ~currentValue:(Ojs.float_of_js x2833)
                                    ~currentIndex:(Ojs.float_of_js x2834)
                                    ~array:(t_of_js x2835))));(Ojs.float_to_js
                                                                 x2836)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2844 : t) ->
        fun
          ~callbackfn:(x2838 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2843 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2844) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2839 : Ojs.t) ->
                         fun (x2840 : Ojs.t) ->
                           fun (x2841 : Ojs.t) ->
                             fun (x2842 : Ojs.t) ->
                               Obj.magic
                                 (x2838 ~previousValue:(Obj.magic x2839)
                                    ~currentValue:(Ojs.float_of_js x2840)
                                    ~currentIndex:(Ojs.float_of_js x2841)
                                    ~array:(t_of_js x2842))));(Obj.magic
                                                                 x2843)|])
    let (reverse : t -> t) =
      fun (x2845 : t) -> t_of_js (Ojs.call (t_to_js x2845) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x2851 : t) ->
        fun ~array:(x2846 : float _Array) ->
          fun ?offset:(x2847 : float option) ->
            fun () ->
              ignore
                (let x2852 = t_to_js x2851 in
                 Ojs.call (Ojs.get_prop_ascii x2852 "set") "apply"
                   [|x2852;((let x2848 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2848 "push"
                                  [|(_Array_to_js Ojs.float_to_js x2846)|]);
                             (match x2847 with
                              | Some x2849 ->
                                  ignore
                                    (Ojs.call x2848 "push"
                                       [|(Ojs.float_to_js x2849)|])
                              | None -> ());
                             x2848))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2858 : t) ->
        fun ?start:(x2853 : float option) ->
          fun ?end_:(x2854 : float option) ->
            fun () ->
              t_of_js
                (let x2859 = t_to_js x2858 in
                 Ojs.call (Ojs.get_prop_ascii x2859 "slice") "apply"
                   [|x2859;((let x2855 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2853 with
                              | Some x2857 ->
                                  ignore
                                    (Ojs.call x2855 "push"
                                       [|(Ojs.float_to_js x2857)|])
                              | None -> ());
                             (match x2854 with
                              | Some x2856 ->
                                  ignore
                                    (Ojs.call x2855 "push"
                                       [|(Ojs.float_to_js x2856)|])
                              | None -> ());
                             x2855))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2867 : t) ->
        fun
          ~predicate:(x2860 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2861 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2868 = t_to_js x2867 in
                 Ojs.call (Ojs.get_prop_ascii x2868 "some") "apply"
                   [|x2868;((let x2862 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2862 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2864 : Ojs.t) ->
                                          fun (x2865 : Ojs.t) ->
                                            fun (x2866 : Ojs.t) ->
                                              unknown_to_js
                                                (x2860
                                                   ~value:(Ojs.float_of_js
                                                             x2864)
                                                   ~index:(Ojs.float_of_js
                                                             x2865)
                                                   ~array:(t_of_js x2866))))|]);
                             (match x2861 with
                              | Some x2863 ->
                                  ignore
                                    (Ojs.call x2862 "push"
                                       [|(any_to_js x2863)|])
                              | None -> ());
                             x2862))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x2874 : t) ->
        fun ?compareFn:(x2869 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x2875 = t_to_js x2874 in
               Ojs.call (Ojs.get_prop_ascii x2875 "sort") "apply"
                 [|x2875;((let x2870 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2869 with
                            | Some x2871 ->
                                ignore
                                  (Ojs.call x2870 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2872 : Ojs.t) ->
                                             fun (x2873 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x2871
                                                    ~a:(Ojs.float_of_js x2872)
                                                    ~b:(Ojs.float_of_js x2873))))|])
                            | None -> ());
                           x2870))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x2881 : t) ->
        fun ?begin_:(x2876 : float option) ->
          fun ?end_:(x2877 : float option) ->
            fun () ->
              t_of_js
                (let x2882 = t_to_js x2881 in
                 Ojs.call (Ojs.get_prop_ascii x2882 "subarray") "apply"
                   [|x2882;((let x2878 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2876 with
                              | Some x2880 ->
                                  ignore
                                    (Ojs.call x2878 "push"
                                       [|(Ojs.float_to_js x2880)|])
                              | None -> ());
                             (match x2877 with
                              | Some x2879 ->
                                  ignore
                                    (Ojs.call x2878 "push"
                                       [|(Ojs.float_to_js x2879)|])
                              | None -> ());
                             x2878))|])
    let (toLocaleString : t -> string) =
      fun (x2883 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2883) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x2884 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2884) "toString" [||])
    let (valueOf : t -> t) =
      fun (x2885 : t) -> t_of_js (Ojs.call (t_to_js x2885) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x2886 : t) ->
        fun (x2887 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x2886) (Ojs.float_to_js x2887))
    let (set : t -> float -> float -> unit) =
      fun (x2888 : t) ->
        fun (x2889 : float) ->
          fun (x2890 : float) ->
            Ojs.set_prop (t_to_js x2888) (Ojs.float_to_js x2889)
              (Ojs.float_to_js x2890)
    let (create : length:float -> _Uint8ClampedArray) =
      fun ~length:(x2891 : float) ->
        _Uint8ClampedArray_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x2891)|])
    let (create' :
      array:(_ArrayBuffer, float _Array) union2 -> _Uint8ClampedArray) =
      fun ~array:(x2892 : (_ArrayBuffer, float _Array) union2) ->
        _Uint8ClampedArray_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x2894 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x2894) x2892)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Uint8ClampedArray)
      =
      fun ~buffer:(x2896 : _ArrayBuffer) ->
        fun ?byteOffset:(x2897 : float option) ->
          fun ?length:(x2898 : float option) ->
            fun () ->
              _Uint8ClampedArray_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x2899 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2899 "push" [|(_ArrayBuffer_to_js x2896)|]);
                    (match x2897 with
                     | Some x2901 ->
                         ignore
                           (Ojs.call x2899 "push" [|(Ojs.float_to_js x2901)|])
                     | None -> ());
                    (match x2898 with
                     | Some x2900 ->
                         ignore
                           (Ojs.call x2899 "push" [|(Ojs.float_to_js x2900)|])
                     | None -> ());
                    x2899))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Uint8ClampedArray) =
      fun ~items:(x2902 : float list) ->
        _Uint8ClampedArray_of_js
          (let x2905 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x2905 "of") "apply"
             [|x2905;((let x2903 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2904 : float) ->
                            ignore
                              (Ojs.call x2903 "push"
                                 [|(Ojs.float_to_js x2904)|])) x2902;
                       x2903))|])
    let (from : array:float _Array -> _Uint8ClampedArray) =
      fun ~array:(x2906 : float _Array) ->
        _Uint8ClampedArray_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(_Array_to_js Ojs.float_to_js x2906)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Uint8ClampedArray)
      =
      fun ~array:(x2908 : 'T _Array) ->
        fun ~mapfn:(x2909 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x2910 : any option) ->
            fun () ->
              _Uint8ClampedArray_of_js
                (let x2916 =
                   Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x2916 "from") "apply"
                   [|x2916;((let x2911 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2911 "push"
                                  [|(_Array_to_js Obj.magic x2908)|]);
                             ignore
                               (Ojs.call x2911 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2913 : Ojs.t) ->
                                          fun (x2914 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x2909 ~v:(Obj.magic x2913)
                                                 ~k:(Ojs.float_of_js x2914))))|]);
                             (match x2910 with
                              | Some x2912 ->
                                  ignore
                                    (Ojs.call x2911 "push"
                                       [|(any_to_js x2912)|])
                              | None -> ());
                             x2911))|])
  end
module Uint8ClampedArrayConstructor =
  struct
    type t = _Uint8ClampedArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2918 : Ojs.t) -> _Uint8ClampedArrayConstructor_of_js x2918
    and t_to_js : t -> Ojs.t =
      fun (x2917 : _Uint8ClampedArrayConstructor) ->
        _Uint8ClampedArrayConstructor_to_js x2917
    let (get_prototype : t -> _Uint8ClampedArray) =
      fun (x2919 : t) ->
        _Uint8ClampedArray_of_js
          (Ojs.get_prop_ascii (t_to_js x2919) "prototype")
    let (create : t -> length:float -> _Uint8ClampedArray) =
      fun (x2921 : t) ->
        fun ~length:(x2920 : float) ->
          _Uint8ClampedArray_of_js
            (Ojs.new_obj (t_to_js x2921) [|(Ojs.float_to_js x2920)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Uint8ClampedArray) =
      fun (x2926 : t) ->
        fun ~array:(x2922 : (_ArrayBuffer, float _Array) union2) ->
          _Uint8ClampedArray_of_js
            (Ojs.new_obj (t_to_js x2926)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x2924 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x2924) x2922)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Uint8ClampedArray)
      =
      fun (x2933 : t) ->
        fun ~buffer:(x2927 : _ArrayBuffer) ->
          fun ?byteOffset:(x2928 : float option) ->
            fun ?length:(x2929 : float option) ->
              fun () ->
                _Uint8ClampedArray_of_js
                  (Ojs.new_obj_arr (t_to_js x2933)
                     (let x2930 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2930 "push" [|(_ArrayBuffer_to_js x2927)|]);
                      (match x2928 with
                       | Some x2932 ->
                           ignore
                             (Ojs.call x2930 "push"
                                [|(Ojs.float_to_js x2932)|])
                       | None -> ());
                      (match x2929 with
                       | Some x2931 ->
                           ignore
                             (Ojs.call x2930 "push"
                                [|(Ojs.float_to_js x2931)|])
                       | None -> ());
                      x2930))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2934 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2934) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Uint8ClampedArray) =
      fun (x2938 : t) ->
        fun ~items:(x2935 : float list) ->
          _Uint8ClampedArray_of_js
            (let x2939 = t_to_js x2938 in
             Ojs.call (Ojs.get_prop_ascii x2939 "of") "apply"
               [|x2939;((let x2936 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x2937 : float) ->
                              ignore
                                (Ojs.call x2936 "push"
                                   [|(Ojs.float_to_js x2937)|])) x2935;
                         x2936))|])
    let (from : t -> array:float _Array -> _Uint8ClampedArray) =
      fun (x2942 : t) ->
        fun ~array:(x2940 : float _Array) ->
          _Uint8ClampedArray_of_js
            (Ojs.call (t_to_js x2942) "from"
               [|(_Array_to_js Ojs.float_to_js x2940)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Uint8ClampedArray)
      =
      fun (x2951 : t) ->
        fun ~array:(x2943 : 'T _Array) ->
          fun ~mapfn:(x2944 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x2945 : any option) ->
              fun () ->
                _Uint8ClampedArray_of_js
                  (let x2952 = t_to_js x2951 in
                   Ojs.call (Ojs.get_prop_ascii x2952 "from") "apply"
                     [|x2952;((let x2946 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2946 "push"
                                    [|(_Array_to_js Obj.magic x2943)|]);
                               ignore
                                 (Ojs.call x2946 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x2948 : Ojs.t) ->
                                            fun (x2949 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2944 ~v:(Obj.magic x2948)
                                                   ~k:(Ojs.float_of_js x2949))))|]);
                               (match x2945 with
                                | Some x2947 ->
                                    ignore
                                      (Ojs.call x2946 "push"
                                         [|(any_to_js x2947)|])
                                | None -> ());
                               x2946))|])
  end
let (uint8ClampedArray : _Uint8ClampedArrayConstructor) =
  _Uint8ClampedArrayConstructor_of_js
    (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
module Int16Array =
  struct
    type t = _Int16Array
    let rec t_of_js : Ojs.t -> t =
      fun (x2954 : Ojs.t) -> _Int16Array_of_js x2954
    and t_to_js : t -> Ojs.t =
      fun (x2953 : _Int16Array) -> _Int16Array_to_js x2953
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2955 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2955) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2956 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2956) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2957 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2957) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2958 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2958) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2964 : t) ->
        fun ~target:(x2959 : float) ->
          fun ~start:(x2960 : float) ->
            fun ?end_:(x2961 : float option) ->
              fun () ->
                t_of_js
                  (let x2965 = t_to_js x2964 in
                   Ojs.call (Ojs.get_prop_ascii x2965 "copyWithin") "apply"
                     [|x2965;((let x2962 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2962 "push"
                                    [|(Ojs.float_to_js x2959)|]);
                               ignore
                                 (Ojs.call x2962 "push"
                                    [|(Ojs.float_to_js x2960)|]);
                               (match x2961 with
                                | Some x2963 ->
                                    ignore
                                      (Ojs.call x2962 "push"
                                         [|(Ojs.float_to_js x2963)|])
                                | None -> ());
                               x2962))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2973 : t) ->
        fun
          ~predicate:(x2966 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x2967 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2974 = t_to_js x2973 in
                 Ojs.call (Ojs.get_prop_ascii x2974 "every") "apply"
                   [|x2974;((let x2968 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2968 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2970 : Ojs.t) ->
                                          fun (x2971 : Ojs.t) ->
                                            fun (x2972 : Ojs.t) ->
                                              unknown_to_js
                                                (x2966
                                                   ~value:(Ojs.float_of_js
                                                             x2970)
                                                   ~index:(Ojs.float_of_js
                                                             x2971)
                                                   ~array:(t_of_js x2972))))|]);
                             (match x2967 with
                              | Some x2969 ->
                                  ignore
                                    (Ojs.call x2968 "push"
                                       [|(any_to_js x2969)|])
                              | None -> ());
                             x2968))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2981 : t) ->
        fun ~value:(x2975 : float) ->
          fun ?start:(x2976 : float option) ->
            fun ?end_:(x2977 : float option) ->
              fun () ->
                t_of_js
                  (let x2982 = t_to_js x2981 in
                   Ojs.call (Ojs.get_prop_ascii x2982 "fill") "apply"
                     [|x2982;((let x2978 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2978 "push"
                                    [|(Ojs.float_to_js x2975)|]);
                               (match x2976 with
                                | Some x2980 ->
                                    ignore
                                      (Ojs.call x2978 "push"
                                         [|(Ojs.float_to_js x2980)|])
                                | None -> ());
                               (match x2977 with
                                | Some x2979 ->
                                    ignore
                                      (Ojs.call x2978 "push"
                                         [|(Ojs.float_to_js x2979)|])
                                | None -> ());
                               x2978))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2990 : t) ->
        fun ~predicate:(x2983 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x2984 : any option) ->
            fun () ->
              t_of_js
                (let x2991 = t_to_js x2990 in
                 Ojs.call (Ojs.get_prop_ascii x2991 "filter") "apply"
                   [|x2991;((let x2985 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2985 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2987 : Ojs.t) ->
                                          fun (x2988 : Ojs.t) ->
                                            fun (x2989 : Ojs.t) ->
                                              any_to_js
                                                (x2983
                                                   ~value:(Ojs.float_of_js
                                                             x2987)
                                                   ~index:(Ojs.float_of_js
                                                             x2988)
                                                   ~array:(t_of_js x2989))))|]);
                             (match x2984 with
                              | Some x2986 ->
                                  ignore
                                    (Ojs.call x2985 "push"
                                       [|(any_to_js x2986)|])
                              | None -> ());
                             x2985))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2999 : t) ->
        fun ~predicate:(x2992 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x2993 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3000 = t_to_js x2999 in
                 Ojs.call (Ojs.get_prop_ascii x3000 "find") "apply"
                   [|x3000;((let x2994 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2994 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2996 : Ojs.t) ->
                                          fun (x2997 : Ojs.t) ->
                                            fun (x2998 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2992
                                                   ~value:(Ojs.float_of_js
                                                             x2996)
                                                   ~index:(Ojs.float_of_js
                                                             x2997)
                                                   ~obj:(t_of_js x2998))))|]);
                             (match x2993 with
                              | Some x2995 ->
                                  ignore
                                    (Ojs.call x2994 "push"
                                       [|(any_to_js x2995)|])
                              | None -> ());
                             x2994))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3009 : t) ->
        fun ~predicate:(x3002 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3003 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3010 = t_to_js x3009 in
                 Ojs.call (Ojs.get_prop_ascii x3010 "findIndex") "apply"
                   [|x3010;((let x3004 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3004 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3006 : Ojs.t) ->
                                          fun (x3007 : Ojs.t) ->
                                            fun (x3008 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3002
                                                   ~value:(Ojs.float_of_js
                                                             x3006)
                                                   ~index:(Ojs.float_of_js
                                                             x3007)
                                                   ~obj:(t_of_js x3008))))|]);
                             (match x3003 with
                              | Some x3005 ->
                                  ignore
                                    (Ojs.call x3004 "push"
                                       [|(any_to_js x3005)|])
                              | None -> ());
                             x3004))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3018 : t) ->
        fun
          ~callbackfn:(x3011 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3012 : any option) ->
            fun () ->
              ignore
                (let x3019 = t_to_js x3018 in
                 Ojs.call (Ojs.get_prop_ascii x3019 "forEach") "apply"
                   [|x3019;((let x3013 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3013 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3015 : Ojs.t) ->
                                          fun (x3016 : Ojs.t) ->
                                            fun (x3017 : Ojs.t) ->
                                              x3011
                                                ~value:(Ojs.float_of_js x3015)
                                                ~index:(Ojs.float_of_js x3016)
                                                ~array:(t_of_js x3017)))|]);
                             (match x3012 with
                              | Some x3014 ->
                                  ignore
                                    (Ojs.call x3013 "push"
                                       [|(any_to_js x3014)|])
                              | None -> ());
                             x3013))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3024 : t) ->
        fun ~searchElement:(x3020 : float) ->
          fun ?fromIndex:(x3021 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3025 = t_to_js x3024 in
                 Ojs.call (Ojs.get_prop_ascii x3025 "indexOf") "apply"
                   [|x3025;((let x3022 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3022 "push"
                                  [|(Ojs.float_to_js x3020)|]);
                             (match x3021 with
                              | Some x3023 ->
                                  ignore
                                    (Ojs.call x3022 "push"
                                       [|(Ojs.float_to_js x3023)|])
                              | None -> ());
                             x3022))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3029 : t) ->
        fun ?separator:(x3026 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3030 = t_to_js x3029 in
               Ojs.call (Ojs.get_prop_ascii x3030 "join") "apply"
                 [|x3030;((let x3027 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3026 with
                            | Some x3028 ->
                                ignore
                                  (Ojs.call x3027 "push"
                                     [|(Ojs.string_to_js x3028)|])
                            | None -> ());
                           x3027))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3035 : t) ->
        fun ~searchElement:(x3031 : float) ->
          fun ?fromIndex:(x3032 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3036 = t_to_js x3035 in
                 Ojs.call (Ojs.get_prop_ascii x3036 "lastIndexOf") "apply"
                   [|x3036;((let x3033 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3033 "push"
                                  [|(Ojs.float_to_js x3031)|]);
                             (match x3032 with
                              | Some x3034 ->
                                  ignore
                                    (Ojs.call x3033 "push"
                                       [|(Ojs.float_to_js x3034)|])
                              | None -> ());
                             x3033))|])
    let (get_length : t -> float) =
      fun (x3037 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3037) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3045 : t) ->
        fun
          ~callbackfn:(x3038 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3039 : any option) ->
            fun () ->
              t_of_js
                (let x3046 = t_to_js x3045 in
                 Ojs.call (Ojs.get_prop_ascii x3046 "map") "apply"
                   [|x3046;((let x3040 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3040 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3042 : Ojs.t) ->
                                          fun (x3043 : Ojs.t) ->
                                            fun (x3044 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3038
                                                   ~value:(Ojs.float_of_js
                                                             x3042)
                                                   ~index:(Ojs.float_of_js
                                                             x3043)
                                                   ~array:(t_of_js x3044))))|]);
                             (match x3039 with
                              | Some x3041 ->
                                  ignore
                                    (Ojs.call x3040 "push"
                                       [|(any_to_js x3041)|])
                              | None -> ());
                             x3040))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3052 : t) ->
        fun
          ~callbackfn:(x3047 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3052) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3048 : Ojs.t) ->
                       fun (x3049 : Ojs.t) ->
                         fun (x3050 : Ojs.t) ->
                           fun (x3051 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3047 ~previousValue:(Ojs.float_of_js x3048)
                                  ~currentValue:(Ojs.float_of_js x3049)
                                  ~currentIndex:(Ojs.float_of_js x3050)
                                  ~array:(t_of_js x3051))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3059 : t) ->
        fun
          ~callbackfn:(x3053 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3058 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3059) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3054 : Ojs.t) ->
                         fun (x3055 : Ojs.t) ->
                           fun (x3056 : Ojs.t) ->
                             fun (x3057 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3053
                                    ~previousValue:(Ojs.float_of_js x3054)
                                    ~currentValue:(Ojs.float_of_js x3055)
                                    ~currentIndex:(Ojs.float_of_js x3056)
                                    ~array:(t_of_js x3057))));(Ojs.float_to_js
                                                                 x3058)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3066 : t) ->
        fun
          ~callbackfn:(x3060 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3065 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3066) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3061 : Ojs.t) ->
                         fun (x3062 : Ojs.t) ->
                           fun (x3063 : Ojs.t) ->
                             fun (x3064 : Ojs.t) ->
                               Obj.magic
                                 (x3060 ~previousValue:(Obj.magic x3061)
                                    ~currentValue:(Ojs.float_of_js x3062)
                                    ~currentIndex:(Ojs.float_of_js x3063)
                                    ~array:(t_of_js x3064))));(Obj.magic
                                                                 x3065)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3072 : t) ->
        fun
          ~callbackfn:(x3067 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3072) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3068 : Ojs.t) ->
                       fun (x3069 : Ojs.t) ->
                         fun (x3070 : Ojs.t) ->
                           fun (x3071 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3067 ~previousValue:(Ojs.float_of_js x3068)
                                  ~currentValue:(Ojs.float_of_js x3069)
                                  ~currentIndex:(Ojs.float_of_js x3070)
                                  ~array:(t_of_js x3071))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3079 : t) ->
        fun
          ~callbackfn:(x3073 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3078 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3079) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3074 : Ojs.t) ->
                         fun (x3075 : Ojs.t) ->
                           fun (x3076 : Ojs.t) ->
                             fun (x3077 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3073
                                    ~previousValue:(Ojs.float_of_js x3074)
                                    ~currentValue:(Ojs.float_of_js x3075)
                                    ~currentIndex:(Ojs.float_of_js x3076)
                                    ~array:(t_of_js x3077))));(Ojs.float_to_js
                                                                 x3078)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3086 : t) ->
        fun
          ~callbackfn:(x3080 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3085 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3086) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3081 : Ojs.t) ->
                         fun (x3082 : Ojs.t) ->
                           fun (x3083 : Ojs.t) ->
                             fun (x3084 : Ojs.t) ->
                               Obj.magic
                                 (x3080 ~previousValue:(Obj.magic x3081)
                                    ~currentValue:(Ojs.float_of_js x3082)
                                    ~currentIndex:(Ojs.float_of_js x3083)
                                    ~array:(t_of_js x3084))));(Obj.magic
                                                                 x3085)|])
    let (reverse : t -> t) =
      fun (x3087 : t) -> t_of_js (Ojs.call (t_to_js x3087) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x3093 : t) ->
        fun ~array:(x3088 : float _Array) ->
          fun ?offset:(x3089 : float option) ->
            fun () ->
              ignore
                (let x3094 = t_to_js x3093 in
                 Ojs.call (Ojs.get_prop_ascii x3094 "set") "apply"
                   [|x3094;((let x3090 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3090 "push"
                                  [|(_Array_to_js Ojs.float_to_js x3088)|]);
                             (match x3089 with
                              | Some x3091 ->
                                  ignore
                                    (Ojs.call x3090 "push"
                                       [|(Ojs.float_to_js x3091)|])
                              | None -> ());
                             x3090))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3100 : t) ->
        fun ?start:(x3095 : float option) ->
          fun ?end_:(x3096 : float option) ->
            fun () ->
              t_of_js
                (let x3101 = t_to_js x3100 in
                 Ojs.call (Ojs.get_prop_ascii x3101 "slice") "apply"
                   [|x3101;((let x3097 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3095 with
                              | Some x3099 ->
                                  ignore
                                    (Ojs.call x3097 "push"
                                       [|(Ojs.float_to_js x3099)|])
                              | None -> ());
                             (match x3096 with
                              | Some x3098 ->
                                  ignore
                                    (Ojs.call x3097 "push"
                                       [|(Ojs.float_to_js x3098)|])
                              | None -> ());
                             x3097))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3109 : t) ->
        fun
          ~predicate:(x3102 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3103 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3110 = t_to_js x3109 in
                 Ojs.call (Ojs.get_prop_ascii x3110 "some") "apply"
                   [|x3110;((let x3104 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3104 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3106 : Ojs.t) ->
                                          fun (x3107 : Ojs.t) ->
                                            fun (x3108 : Ojs.t) ->
                                              unknown_to_js
                                                (x3102
                                                   ~value:(Ojs.float_of_js
                                                             x3106)
                                                   ~index:(Ojs.float_of_js
                                                             x3107)
                                                   ~array:(t_of_js x3108))))|]);
                             (match x3103 with
                              | Some x3105 ->
                                  ignore
                                    (Ojs.call x3104 "push"
                                       [|(any_to_js x3105)|])
                              | None -> ());
                             x3104))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3116 : t) ->
        fun ?compareFn:(x3111 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3117 = t_to_js x3116 in
               Ojs.call (Ojs.get_prop_ascii x3117 "sort") "apply"
                 [|x3117;((let x3112 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3111 with
                            | Some x3113 ->
                                ignore
                                  (Ojs.call x3112 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3114 : Ojs.t) ->
                                             fun (x3115 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3113
                                                    ~a:(Ojs.float_of_js x3114)
                                                    ~b:(Ojs.float_of_js x3115))))|])
                            | None -> ());
                           x3112))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3123 : t) ->
        fun ?begin_:(x3118 : float option) ->
          fun ?end_:(x3119 : float option) ->
            fun () ->
              t_of_js
                (let x3124 = t_to_js x3123 in
                 Ojs.call (Ojs.get_prop_ascii x3124 "subarray") "apply"
                   [|x3124;((let x3120 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3118 with
                              | Some x3122 ->
                                  ignore
                                    (Ojs.call x3120 "push"
                                       [|(Ojs.float_to_js x3122)|])
                              | None -> ());
                             (match x3119 with
                              | Some x3121 ->
                                  ignore
                                    (Ojs.call x3120 "push"
                                       [|(Ojs.float_to_js x3121)|])
                              | None -> ());
                             x3120))|])
    let (toLocaleString : t -> string) =
      fun (x3125 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3125) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3126 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3126) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3127 : t) -> t_of_js (Ojs.call (t_to_js x3127) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3128 : t) ->
        fun (x3129 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3128) (Ojs.float_to_js x3129))
    let (set : t -> float -> float -> unit) =
      fun (x3130 : t) ->
        fun (x3131 : float) ->
          fun (x3132 : float) ->
            Ojs.set_prop (t_to_js x3130) (Ojs.float_to_js x3131)
              (Ojs.float_to_js x3132)
    let (create : length:float -> _Int16Array) =
      fun ~length:(x3133 : float) ->
        _Int16Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x3133)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Int16Array)
      =
      fun ~array:(x3134 : (_ArrayBuffer, float _Array) union2) ->
        _Int16Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x3136 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x3136) x3134)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Int16Array)
      =
      fun ~buffer:(x3138 : _ArrayBuffer) ->
        fun ?byteOffset:(x3139 : float option) ->
          fun ?length:(x3140 : float option) ->
            fun () ->
              _Int16Array_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x3141 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3141 "push" [|(_ArrayBuffer_to_js x3138)|]);
                    (match x3139 with
                     | Some x3143 ->
                         ignore
                           (Ojs.call x3141 "push" [|(Ojs.float_to_js x3143)|])
                     | None -> ());
                    (match x3140 with
                     | Some x3142 ->
                         ignore
                           (Ojs.call x3141 "push" [|(Ojs.float_to_js x3142)|])
                     | None -> ());
                    x3141))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Int16Array) =
      fun ~items:(x3144 : float list) ->
        _Int16Array_of_js
          (let x3147 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x3147 "of") "apply"
             [|x3147;((let x3145 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3146 : float) ->
                            ignore
                              (Ojs.call x3145 "push"
                                 [|(Ojs.float_to_js x3146)|])) x3144;
                       x3145))|])
    let (from : array:float _Array -> _Int16Array) =
      fun ~array:(x3148 : float _Array) ->
        _Int16Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(_Array_to_js Ojs.float_to_js x3148)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Int16Array)
      =
      fun ~array:(x3150 : 'T _Array) ->
        fun ~mapfn:(x3151 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3152 : any option) ->
            fun () ->
              _Int16Array_of_js
                (let x3158 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x3158 "from") "apply"
                   [|x3158;((let x3153 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3153 "push"
                                  [|(_Array_to_js Obj.magic x3150)|]);
                             ignore
                               (Ojs.call x3153 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3155 : Ojs.t) ->
                                          fun (x3156 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3151 ~v:(Obj.magic x3155)
                                                 ~k:(Ojs.float_of_js x3156))))|]);
                             (match x3152 with
                              | Some x3154 ->
                                  ignore
                                    (Ojs.call x3153 "push"
                                       [|(any_to_js x3154)|])
                              | None -> ());
                             x3153))|])
  end
module Int16ArrayConstructor =
  struct
    type t = _Int16ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x3160 : Ojs.t) -> _Int16ArrayConstructor_of_js x3160
    and t_to_js : t -> Ojs.t =
      fun (x3159 : _Int16ArrayConstructor) ->
        _Int16ArrayConstructor_to_js x3159
    let (get_prototype : t -> _Int16Array) =
      fun (x3161 : t) ->
        _Int16Array_of_js (Ojs.get_prop_ascii (t_to_js x3161) "prototype")
    let (create : t -> length:float -> _Int16Array) =
      fun (x3163 : t) ->
        fun ~length:(x3162 : float) ->
          _Int16Array_of_js
            (Ojs.new_obj (t_to_js x3163) [|(Ojs.float_to_js x3162)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Int16Array) =
      fun (x3168 : t) ->
        fun ~array:(x3164 : (_ArrayBuffer, float _Array) union2) ->
          _Int16Array_of_js
            (Ojs.new_obj (t_to_js x3168)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x3166 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x3166) x3164)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Int16Array)
      =
      fun (x3175 : t) ->
        fun ~buffer:(x3169 : _ArrayBuffer) ->
          fun ?byteOffset:(x3170 : float option) ->
            fun ?length:(x3171 : float option) ->
              fun () ->
                _Int16Array_of_js
                  (Ojs.new_obj_arr (t_to_js x3175)
                     (let x3172 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3172 "push" [|(_ArrayBuffer_to_js x3169)|]);
                      (match x3170 with
                       | Some x3174 ->
                           ignore
                             (Ojs.call x3172 "push"
                                [|(Ojs.float_to_js x3174)|])
                       | None -> ());
                      (match x3171 with
                       | Some x3173 ->
                           ignore
                             (Ojs.call x3172 "push"
                                [|(Ojs.float_to_js x3173)|])
                       | None -> ());
                      x3172))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3176 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3176) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Int16Array) =
      fun (x3180 : t) ->
        fun ~items:(x3177 : float list) ->
          _Int16Array_of_js
            (let x3181 = t_to_js x3180 in
             Ojs.call (Ojs.get_prop_ascii x3181 "of") "apply"
               [|x3181;((let x3178 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3179 : float) ->
                              ignore
                                (Ojs.call x3178 "push"
                                   [|(Ojs.float_to_js x3179)|])) x3177;
                         x3178))|])
    let (from : t -> array:float _Array -> _Int16Array) =
      fun (x3184 : t) ->
        fun ~array:(x3182 : float _Array) ->
          _Int16Array_of_js
            (Ojs.call (t_to_js x3184) "from"
               [|(_Array_to_js Ojs.float_to_js x3182)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Int16Array)
      =
      fun (x3193 : t) ->
        fun ~array:(x3185 : 'T _Array) ->
          fun ~mapfn:(x3186 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3187 : any option) ->
              fun () ->
                _Int16Array_of_js
                  (let x3194 = t_to_js x3193 in
                   Ojs.call (Ojs.get_prop_ascii x3194 "from") "apply"
                     [|x3194;((let x3188 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3188 "push"
                                    [|(_Array_to_js Obj.magic x3185)|]);
                               ignore
                                 (Ojs.call x3188 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3190 : Ojs.t) ->
                                            fun (x3191 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3186 ~v:(Obj.magic x3190)
                                                   ~k:(Ojs.float_of_js x3191))))|]);
                               (match x3187 with
                                | Some x3189 ->
                                    ignore
                                      (Ojs.call x3188 "push"
                                         [|(any_to_js x3189)|])
                                | None -> ());
                               x3188))|])
  end
let (int16Array : _Int16ArrayConstructor) =
  _Int16ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Int16Array")
module Uint16Array =
  struct
    type t = _Uint16Array
    let rec t_of_js : Ojs.t -> t =
      fun (x3196 : Ojs.t) -> _Uint16Array_of_js x3196
    and t_to_js : t -> Ojs.t =
      fun (x3195 : _Uint16Array) -> _Uint16Array_to_js x3195
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3197 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3197) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x3198 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x3198) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3199 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3199) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3200 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3200) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3206 : t) ->
        fun ~target:(x3201 : float) ->
          fun ~start:(x3202 : float) ->
            fun ?end_:(x3203 : float option) ->
              fun () ->
                t_of_js
                  (let x3207 = t_to_js x3206 in
                   Ojs.call (Ojs.get_prop_ascii x3207 "copyWithin") "apply"
                     [|x3207;((let x3204 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3204 "push"
                                    [|(Ojs.float_to_js x3201)|]);
                               ignore
                                 (Ojs.call x3204 "push"
                                    [|(Ojs.float_to_js x3202)|]);
                               (match x3203 with
                                | Some x3205 ->
                                    ignore
                                      (Ojs.call x3204 "push"
                                         [|(Ojs.float_to_js x3205)|])
                                | None -> ());
                               x3204))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3215 : t) ->
        fun
          ~predicate:(x3208 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3209 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3216 = t_to_js x3215 in
                 Ojs.call (Ojs.get_prop_ascii x3216 "every") "apply"
                   [|x3216;((let x3210 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3210 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3212 : Ojs.t) ->
                                          fun (x3213 : Ojs.t) ->
                                            fun (x3214 : Ojs.t) ->
                                              unknown_to_js
                                                (x3208
                                                   ~value:(Ojs.float_of_js
                                                             x3212)
                                                   ~index:(Ojs.float_of_js
                                                             x3213)
                                                   ~array:(t_of_js x3214))))|]);
                             (match x3209 with
                              | Some x3211 ->
                                  ignore
                                    (Ojs.call x3210 "push"
                                       [|(any_to_js x3211)|])
                              | None -> ());
                             x3210))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3223 : t) ->
        fun ~value:(x3217 : float) ->
          fun ?start:(x3218 : float option) ->
            fun ?end_:(x3219 : float option) ->
              fun () ->
                t_of_js
                  (let x3224 = t_to_js x3223 in
                   Ojs.call (Ojs.get_prop_ascii x3224 "fill") "apply"
                     [|x3224;((let x3220 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3220 "push"
                                    [|(Ojs.float_to_js x3217)|]);
                               (match x3218 with
                                | Some x3222 ->
                                    ignore
                                      (Ojs.call x3220 "push"
                                         [|(Ojs.float_to_js x3222)|])
                                | None -> ());
                               (match x3219 with
                                | Some x3221 ->
                                    ignore
                                      (Ojs.call x3220 "push"
                                         [|(Ojs.float_to_js x3221)|])
                                | None -> ());
                               x3220))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3232 : t) ->
        fun ~predicate:(x3225 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x3226 : any option) ->
            fun () ->
              t_of_js
                (let x3233 = t_to_js x3232 in
                 Ojs.call (Ojs.get_prop_ascii x3233 "filter") "apply"
                   [|x3233;((let x3227 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3227 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3229 : Ojs.t) ->
                                          fun (x3230 : Ojs.t) ->
                                            fun (x3231 : Ojs.t) ->
                                              any_to_js
                                                (x3225
                                                   ~value:(Ojs.float_of_js
                                                             x3229)
                                                   ~index:(Ojs.float_of_js
                                                             x3230)
                                                   ~array:(t_of_js x3231))))|]);
                             (match x3226 with
                              | Some x3228 ->
                                  ignore
                                    (Ojs.call x3227 "push"
                                       [|(any_to_js x3228)|])
                              | None -> ());
                             x3227))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3241 : t) ->
        fun ~predicate:(x3234 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3235 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3242 = t_to_js x3241 in
                 Ojs.call (Ojs.get_prop_ascii x3242 "find") "apply"
                   [|x3242;((let x3236 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3236 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3238 : Ojs.t) ->
                                          fun (x3239 : Ojs.t) ->
                                            fun (x3240 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3234
                                                   ~value:(Ojs.float_of_js
                                                             x3238)
                                                   ~index:(Ojs.float_of_js
                                                             x3239)
                                                   ~obj:(t_of_js x3240))))|]);
                             (match x3235 with
                              | Some x3237 ->
                                  ignore
                                    (Ojs.call x3236 "push"
                                       [|(any_to_js x3237)|])
                              | None -> ());
                             x3236))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3251 : t) ->
        fun ~predicate:(x3244 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3245 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3252 = t_to_js x3251 in
                 Ojs.call (Ojs.get_prop_ascii x3252 "findIndex") "apply"
                   [|x3252;((let x3246 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3246 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3248 : Ojs.t) ->
                                          fun (x3249 : Ojs.t) ->
                                            fun (x3250 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3244
                                                   ~value:(Ojs.float_of_js
                                                             x3248)
                                                   ~index:(Ojs.float_of_js
                                                             x3249)
                                                   ~obj:(t_of_js x3250))))|]);
                             (match x3245 with
                              | Some x3247 ->
                                  ignore
                                    (Ojs.call x3246 "push"
                                       [|(any_to_js x3247)|])
                              | None -> ());
                             x3246))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3260 : t) ->
        fun
          ~callbackfn:(x3253 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3254 : any option) ->
            fun () ->
              ignore
                (let x3261 = t_to_js x3260 in
                 Ojs.call (Ojs.get_prop_ascii x3261 "forEach") "apply"
                   [|x3261;((let x3255 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3255 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3257 : Ojs.t) ->
                                          fun (x3258 : Ojs.t) ->
                                            fun (x3259 : Ojs.t) ->
                                              x3253
                                                ~value:(Ojs.float_of_js x3257)
                                                ~index:(Ojs.float_of_js x3258)
                                                ~array:(t_of_js x3259)))|]);
                             (match x3254 with
                              | Some x3256 ->
                                  ignore
                                    (Ojs.call x3255 "push"
                                       [|(any_to_js x3256)|])
                              | None -> ());
                             x3255))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3266 : t) ->
        fun ~searchElement:(x3262 : float) ->
          fun ?fromIndex:(x3263 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3267 = t_to_js x3266 in
                 Ojs.call (Ojs.get_prop_ascii x3267 "indexOf") "apply"
                   [|x3267;((let x3264 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3264 "push"
                                  [|(Ojs.float_to_js x3262)|]);
                             (match x3263 with
                              | Some x3265 ->
                                  ignore
                                    (Ojs.call x3264 "push"
                                       [|(Ojs.float_to_js x3265)|])
                              | None -> ());
                             x3264))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3271 : t) ->
        fun ?separator:(x3268 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3272 = t_to_js x3271 in
               Ojs.call (Ojs.get_prop_ascii x3272 "join") "apply"
                 [|x3272;((let x3269 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3268 with
                            | Some x3270 ->
                                ignore
                                  (Ojs.call x3269 "push"
                                     [|(Ojs.string_to_js x3270)|])
                            | None -> ());
                           x3269))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3277 : t) ->
        fun ~searchElement:(x3273 : float) ->
          fun ?fromIndex:(x3274 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3278 = t_to_js x3277 in
                 Ojs.call (Ojs.get_prop_ascii x3278 "lastIndexOf") "apply"
                   [|x3278;((let x3275 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3275 "push"
                                  [|(Ojs.float_to_js x3273)|]);
                             (match x3274 with
                              | Some x3276 ->
                                  ignore
                                    (Ojs.call x3275 "push"
                                       [|(Ojs.float_to_js x3276)|])
                              | None -> ());
                             x3275))|])
    let (get_length : t -> float) =
      fun (x3279 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3279) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3287 : t) ->
        fun
          ~callbackfn:(x3280 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3281 : any option) ->
            fun () ->
              t_of_js
                (let x3288 = t_to_js x3287 in
                 Ojs.call (Ojs.get_prop_ascii x3288 "map") "apply"
                   [|x3288;((let x3282 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3282 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3284 : Ojs.t) ->
                                          fun (x3285 : Ojs.t) ->
                                            fun (x3286 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3280
                                                   ~value:(Ojs.float_of_js
                                                             x3284)
                                                   ~index:(Ojs.float_of_js
                                                             x3285)
                                                   ~array:(t_of_js x3286))))|]);
                             (match x3281 with
                              | Some x3283 ->
                                  ignore
                                    (Ojs.call x3282 "push"
                                       [|(any_to_js x3283)|])
                              | None -> ());
                             x3282))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3294 : t) ->
        fun
          ~callbackfn:(x3289 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3294) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3290 : Ojs.t) ->
                       fun (x3291 : Ojs.t) ->
                         fun (x3292 : Ojs.t) ->
                           fun (x3293 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3289 ~previousValue:(Ojs.float_of_js x3290)
                                  ~currentValue:(Ojs.float_of_js x3291)
                                  ~currentIndex:(Ojs.float_of_js x3292)
                                  ~array:(t_of_js x3293))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3301 : t) ->
        fun
          ~callbackfn:(x3295 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3300 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3301) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3296 : Ojs.t) ->
                         fun (x3297 : Ojs.t) ->
                           fun (x3298 : Ojs.t) ->
                             fun (x3299 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3295
                                    ~previousValue:(Ojs.float_of_js x3296)
                                    ~currentValue:(Ojs.float_of_js x3297)
                                    ~currentIndex:(Ojs.float_of_js x3298)
                                    ~array:(t_of_js x3299))));(Ojs.float_to_js
                                                                 x3300)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3308 : t) ->
        fun
          ~callbackfn:(x3302 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3307 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3308) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3303 : Ojs.t) ->
                         fun (x3304 : Ojs.t) ->
                           fun (x3305 : Ojs.t) ->
                             fun (x3306 : Ojs.t) ->
                               Obj.magic
                                 (x3302 ~previousValue:(Obj.magic x3303)
                                    ~currentValue:(Ojs.float_of_js x3304)
                                    ~currentIndex:(Ojs.float_of_js x3305)
                                    ~array:(t_of_js x3306))));(Obj.magic
                                                                 x3307)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3314 : t) ->
        fun
          ~callbackfn:(x3309 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3314) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3310 : Ojs.t) ->
                       fun (x3311 : Ojs.t) ->
                         fun (x3312 : Ojs.t) ->
                           fun (x3313 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3309 ~previousValue:(Ojs.float_of_js x3310)
                                  ~currentValue:(Ojs.float_of_js x3311)
                                  ~currentIndex:(Ojs.float_of_js x3312)
                                  ~array:(t_of_js x3313))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3321 : t) ->
        fun
          ~callbackfn:(x3315 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3320 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3321) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3316 : Ojs.t) ->
                         fun (x3317 : Ojs.t) ->
                           fun (x3318 : Ojs.t) ->
                             fun (x3319 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3315
                                    ~previousValue:(Ojs.float_of_js x3316)
                                    ~currentValue:(Ojs.float_of_js x3317)
                                    ~currentIndex:(Ojs.float_of_js x3318)
                                    ~array:(t_of_js x3319))));(Ojs.float_to_js
                                                                 x3320)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3328 : t) ->
        fun
          ~callbackfn:(x3322 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3327 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3328) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3323 : Ojs.t) ->
                         fun (x3324 : Ojs.t) ->
                           fun (x3325 : Ojs.t) ->
                             fun (x3326 : Ojs.t) ->
                               Obj.magic
                                 (x3322 ~previousValue:(Obj.magic x3323)
                                    ~currentValue:(Ojs.float_of_js x3324)
                                    ~currentIndex:(Ojs.float_of_js x3325)
                                    ~array:(t_of_js x3326))));(Obj.magic
                                                                 x3327)|])
    let (reverse : t -> t) =
      fun (x3329 : t) -> t_of_js (Ojs.call (t_to_js x3329) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x3335 : t) ->
        fun ~array:(x3330 : float _Array) ->
          fun ?offset:(x3331 : float option) ->
            fun () ->
              ignore
                (let x3336 = t_to_js x3335 in
                 Ojs.call (Ojs.get_prop_ascii x3336 "set") "apply"
                   [|x3336;((let x3332 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3332 "push"
                                  [|(_Array_to_js Ojs.float_to_js x3330)|]);
                             (match x3331 with
                              | Some x3333 ->
                                  ignore
                                    (Ojs.call x3332 "push"
                                       [|(Ojs.float_to_js x3333)|])
                              | None -> ());
                             x3332))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3342 : t) ->
        fun ?start:(x3337 : float option) ->
          fun ?end_:(x3338 : float option) ->
            fun () ->
              t_of_js
                (let x3343 = t_to_js x3342 in
                 Ojs.call (Ojs.get_prop_ascii x3343 "slice") "apply"
                   [|x3343;((let x3339 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3337 with
                              | Some x3341 ->
                                  ignore
                                    (Ojs.call x3339 "push"
                                       [|(Ojs.float_to_js x3341)|])
                              | None -> ());
                             (match x3338 with
                              | Some x3340 ->
                                  ignore
                                    (Ojs.call x3339 "push"
                                       [|(Ojs.float_to_js x3340)|])
                              | None -> ());
                             x3339))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3351 : t) ->
        fun
          ~predicate:(x3344 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3345 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3352 = t_to_js x3351 in
                 Ojs.call (Ojs.get_prop_ascii x3352 "some") "apply"
                   [|x3352;((let x3346 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3346 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3348 : Ojs.t) ->
                                          fun (x3349 : Ojs.t) ->
                                            fun (x3350 : Ojs.t) ->
                                              unknown_to_js
                                                (x3344
                                                   ~value:(Ojs.float_of_js
                                                             x3348)
                                                   ~index:(Ojs.float_of_js
                                                             x3349)
                                                   ~array:(t_of_js x3350))))|]);
                             (match x3345 with
                              | Some x3347 ->
                                  ignore
                                    (Ojs.call x3346 "push"
                                       [|(any_to_js x3347)|])
                              | None -> ());
                             x3346))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3358 : t) ->
        fun ?compareFn:(x3353 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3359 = t_to_js x3358 in
               Ojs.call (Ojs.get_prop_ascii x3359 "sort") "apply"
                 [|x3359;((let x3354 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3353 with
                            | Some x3355 ->
                                ignore
                                  (Ojs.call x3354 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3356 : Ojs.t) ->
                                             fun (x3357 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3355
                                                    ~a:(Ojs.float_of_js x3356)
                                                    ~b:(Ojs.float_of_js x3357))))|])
                            | None -> ());
                           x3354))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3365 : t) ->
        fun ?begin_:(x3360 : float option) ->
          fun ?end_:(x3361 : float option) ->
            fun () ->
              t_of_js
                (let x3366 = t_to_js x3365 in
                 Ojs.call (Ojs.get_prop_ascii x3366 "subarray") "apply"
                   [|x3366;((let x3362 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3360 with
                              | Some x3364 ->
                                  ignore
                                    (Ojs.call x3362 "push"
                                       [|(Ojs.float_to_js x3364)|])
                              | None -> ());
                             (match x3361 with
                              | Some x3363 ->
                                  ignore
                                    (Ojs.call x3362 "push"
                                       [|(Ojs.float_to_js x3363)|])
                              | None -> ());
                             x3362))|])
    let (toLocaleString : t -> string) =
      fun (x3367 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3367) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3368 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3368) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3369 : t) -> t_of_js (Ojs.call (t_to_js x3369) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3370 : t) ->
        fun (x3371 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3370) (Ojs.float_to_js x3371))
    let (set : t -> float -> float -> unit) =
      fun (x3372 : t) ->
        fun (x3373 : float) ->
          fun (x3374 : float) ->
            Ojs.set_prop (t_to_js x3372) (Ojs.float_to_js x3373)
              (Ojs.float_to_js x3374)
    let (create : length:float -> _Uint16Array) =
      fun ~length:(x3375 : float) ->
        _Uint16Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x3375)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Uint16Array)
      =
      fun ~array:(x3376 : (_ArrayBuffer, float _Array) union2) ->
        _Uint16Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x3378 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x3378) x3376)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Uint16Array)
      =
      fun ~buffer:(x3380 : _ArrayBuffer) ->
        fun ?byteOffset:(x3381 : float option) ->
          fun ?length:(x3382 : float option) ->
            fun () ->
              _Uint16Array_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x3383 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3383 "push" [|(_ArrayBuffer_to_js x3380)|]);
                    (match x3381 with
                     | Some x3385 ->
                         ignore
                           (Ojs.call x3383 "push" [|(Ojs.float_to_js x3385)|])
                     | None -> ());
                    (match x3382 with
                     | Some x3384 ->
                         ignore
                           (Ojs.call x3383 "push" [|(Ojs.float_to_js x3384)|])
                     | None -> ());
                    x3383))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Uint16Array) =
      fun ~items:(x3386 : float list) ->
        _Uint16Array_of_js
          (let x3389 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x3389 "of") "apply"
             [|x3389;((let x3387 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3388 : float) ->
                            ignore
                              (Ojs.call x3387 "push"
                                 [|(Ojs.float_to_js x3388)|])) x3386;
                       x3387))|])
    let (from : array:float _Array -> _Uint16Array) =
      fun ~array:(x3390 : float _Array) ->
        _Uint16Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(_Array_to_js Ojs.float_to_js x3390)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Uint16Array)
      =
      fun ~array:(x3392 : 'T _Array) ->
        fun ~mapfn:(x3393 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3394 : any option) ->
            fun () ->
              _Uint16Array_of_js
                (let x3400 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x3400 "from") "apply"
                   [|x3400;((let x3395 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3395 "push"
                                  [|(_Array_to_js Obj.magic x3392)|]);
                             ignore
                               (Ojs.call x3395 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3397 : Ojs.t) ->
                                          fun (x3398 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3393 ~v:(Obj.magic x3397)
                                                 ~k:(Ojs.float_of_js x3398))))|]);
                             (match x3394 with
                              | Some x3396 ->
                                  ignore
                                    (Ojs.call x3395 "push"
                                       [|(any_to_js x3396)|])
                              | None -> ());
                             x3395))|])
  end
module Uint16ArrayConstructor =
  struct
    type t = _Uint16ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x3402 : Ojs.t) -> _Uint16ArrayConstructor_of_js x3402
    and t_to_js : t -> Ojs.t =
      fun (x3401 : _Uint16ArrayConstructor) ->
        _Uint16ArrayConstructor_to_js x3401
    let (get_prototype : t -> _Uint16Array) =
      fun (x3403 : t) ->
        _Uint16Array_of_js (Ojs.get_prop_ascii (t_to_js x3403) "prototype")
    let (create : t -> length:float -> _Uint16Array) =
      fun (x3405 : t) ->
        fun ~length:(x3404 : float) ->
          _Uint16Array_of_js
            (Ojs.new_obj (t_to_js x3405) [|(Ojs.float_to_js x3404)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Uint16Array) =
      fun (x3410 : t) ->
        fun ~array:(x3406 : (_ArrayBuffer, float _Array) union2) ->
          _Uint16Array_of_js
            (Ojs.new_obj (t_to_js x3410)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x3408 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x3408) x3406)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Uint16Array)
      =
      fun (x3417 : t) ->
        fun ~buffer:(x3411 : _ArrayBuffer) ->
          fun ?byteOffset:(x3412 : float option) ->
            fun ?length:(x3413 : float option) ->
              fun () ->
                _Uint16Array_of_js
                  (Ojs.new_obj_arr (t_to_js x3417)
                     (let x3414 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3414 "push" [|(_ArrayBuffer_to_js x3411)|]);
                      (match x3412 with
                       | Some x3416 ->
                           ignore
                             (Ojs.call x3414 "push"
                                [|(Ojs.float_to_js x3416)|])
                       | None -> ());
                      (match x3413 with
                       | Some x3415 ->
                           ignore
                             (Ojs.call x3414 "push"
                                [|(Ojs.float_to_js x3415)|])
                       | None -> ());
                      x3414))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3418 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3418) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Uint16Array) =
      fun (x3422 : t) ->
        fun ~items:(x3419 : float list) ->
          _Uint16Array_of_js
            (let x3423 = t_to_js x3422 in
             Ojs.call (Ojs.get_prop_ascii x3423 "of") "apply"
               [|x3423;((let x3420 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3421 : float) ->
                              ignore
                                (Ojs.call x3420 "push"
                                   [|(Ojs.float_to_js x3421)|])) x3419;
                         x3420))|])
    let (from : t -> array:float _Array -> _Uint16Array) =
      fun (x3426 : t) ->
        fun ~array:(x3424 : float _Array) ->
          _Uint16Array_of_js
            (Ojs.call (t_to_js x3426) "from"
               [|(_Array_to_js Ojs.float_to_js x3424)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Uint16Array)
      =
      fun (x3435 : t) ->
        fun ~array:(x3427 : 'T _Array) ->
          fun ~mapfn:(x3428 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3429 : any option) ->
              fun () ->
                _Uint16Array_of_js
                  (let x3436 = t_to_js x3435 in
                   Ojs.call (Ojs.get_prop_ascii x3436 "from") "apply"
                     [|x3436;((let x3430 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3430 "push"
                                    [|(_Array_to_js Obj.magic x3427)|]);
                               ignore
                                 (Ojs.call x3430 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3432 : Ojs.t) ->
                                            fun (x3433 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3428 ~v:(Obj.magic x3432)
                                                   ~k:(Ojs.float_of_js x3433))))|]);
                               (match x3429 with
                                | Some x3431 ->
                                    ignore
                                      (Ojs.call x3430 "push"
                                         [|(any_to_js x3431)|])
                                | None -> ());
                               x3430))|])
  end
let (uint16Array : _Uint16ArrayConstructor) =
  _Uint16ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Uint16Array")
module Int32Array =
  struct
    type t = _Int32Array
    let rec t_of_js : Ojs.t -> t =
      fun (x3438 : Ojs.t) -> _Int32Array_of_js x3438
    and t_to_js : t -> Ojs.t =
      fun (x3437 : _Int32Array) -> _Int32Array_to_js x3437
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3439 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3439) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x3440 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x3440) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3441 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3441) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3442 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3442) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3448 : t) ->
        fun ~target:(x3443 : float) ->
          fun ~start:(x3444 : float) ->
            fun ?end_:(x3445 : float option) ->
              fun () ->
                t_of_js
                  (let x3449 = t_to_js x3448 in
                   Ojs.call (Ojs.get_prop_ascii x3449 "copyWithin") "apply"
                     [|x3449;((let x3446 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3446 "push"
                                    [|(Ojs.float_to_js x3443)|]);
                               ignore
                                 (Ojs.call x3446 "push"
                                    [|(Ojs.float_to_js x3444)|]);
                               (match x3445 with
                                | Some x3447 ->
                                    ignore
                                      (Ojs.call x3446 "push"
                                         [|(Ojs.float_to_js x3447)|])
                                | None -> ());
                               x3446))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3457 : t) ->
        fun
          ~predicate:(x3450 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3451 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3458 = t_to_js x3457 in
                 Ojs.call (Ojs.get_prop_ascii x3458 "every") "apply"
                   [|x3458;((let x3452 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3452 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3454 : Ojs.t) ->
                                          fun (x3455 : Ojs.t) ->
                                            fun (x3456 : Ojs.t) ->
                                              unknown_to_js
                                                (x3450
                                                   ~value:(Ojs.float_of_js
                                                             x3454)
                                                   ~index:(Ojs.float_of_js
                                                             x3455)
                                                   ~array:(t_of_js x3456))))|]);
                             (match x3451 with
                              | Some x3453 ->
                                  ignore
                                    (Ojs.call x3452 "push"
                                       [|(any_to_js x3453)|])
                              | None -> ());
                             x3452))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3465 : t) ->
        fun ~value:(x3459 : float) ->
          fun ?start:(x3460 : float option) ->
            fun ?end_:(x3461 : float option) ->
              fun () ->
                t_of_js
                  (let x3466 = t_to_js x3465 in
                   Ojs.call (Ojs.get_prop_ascii x3466 "fill") "apply"
                     [|x3466;((let x3462 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3462 "push"
                                    [|(Ojs.float_to_js x3459)|]);
                               (match x3460 with
                                | Some x3464 ->
                                    ignore
                                      (Ojs.call x3462 "push"
                                         [|(Ojs.float_to_js x3464)|])
                                | None -> ());
                               (match x3461 with
                                | Some x3463 ->
                                    ignore
                                      (Ojs.call x3462 "push"
                                         [|(Ojs.float_to_js x3463)|])
                                | None -> ());
                               x3462))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3474 : t) ->
        fun ~predicate:(x3467 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x3468 : any option) ->
            fun () ->
              t_of_js
                (let x3475 = t_to_js x3474 in
                 Ojs.call (Ojs.get_prop_ascii x3475 "filter") "apply"
                   [|x3475;((let x3469 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3469 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3471 : Ojs.t) ->
                                          fun (x3472 : Ojs.t) ->
                                            fun (x3473 : Ojs.t) ->
                                              any_to_js
                                                (x3467
                                                   ~value:(Ojs.float_of_js
                                                             x3471)
                                                   ~index:(Ojs.float_of_js
                                                             x3472)
                                                   ~array:(t_of_js x3473))))|]);
                             (match x3468 with
                              | Some x3470 ->
                                  ignore
                                    (Ojs.call x3469 "push"
                                       [|(any_to_js x3470)|])
                              | None -> ());
                             x3469))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3483 : t) ->
        fun ~predicate:(x3476 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3477 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3484 = t_to_js x3483 in
                 Ojs.call (Ojs.get_prop_ascii x3484 "find") "apply"
                   [|x3484;((let x3478 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3478 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3480 : Ojs.t) ->
                                          fun (x3481 : Ojs.t) ->
                                            fun (x3482 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3476
                                                   ~value:(Ojs.float_of_js
                                                             x3480)
                                                   ~index:(Ojs.float_of_js
                                                             x3481)
                                                   ~obj:(t_of_js x3482))))|]);
                             (match x3477 with
                              | Some x3479 ->
                                  ignore
                                    (Ojs.call x3478 "push"
                                       [|(any_to_js x3479)|])
                              | None -> ());
                             x3478))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3493 : t) ->
        fun ~predicate:(x3486 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3487 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3494 = t_to_js x3493 in
                 Ojs.call (Ojs.get_prop_ascii x3494 "findIndex") "apply"
                   [|x3494;((let x3488 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3488 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3490 : Ojs.t) ->
                                          fun (x3491 : Ojs.t) ->
                                            fun (x3492 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3486
                                                   ~value:(Ojs.float_of_js
                                                             x3490)
                                                   ~index:(Ojs.float_of_js
                                                             x3491)
                                                   ~obj:(t_of_js x3492))))|]);
                             (match x3487 with
                              | Some x3489 ->
                                  ignore
                                    (Ojs.call x3488 "push"
                                       [|(any_to_js x3489)|])
                              | None -> ());
                             x3488))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3502 : t) ->
        fun
          ~callbackfn:(x3495 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3496 : any option) ->
            fun () ->
              ignore
                (let x3503 = t_to_js x3502 in
                 Ojs.call (Ojs.get_prop_ascii x3503 "forEach") "apply"
                   [|x3503;((let x3497 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3497 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3499 : Ojs.t) ->
                                          fun (x3500 : Ojs.t) ->
                                            fun (x3501 : Ojs.t) ->
                                              x3495
                                                ~value:(Ojs.float_of_js x3499)
                                                ~index:(Ojs.float_of_js x3500)
                                                ~array:(t_of_js x3501)))|]);
                             (match x3496 with
                              | Some x3498 ->
                                  ignore
                                    (Ojs.call x3497 "push"
                                       [|(any_to_js x3498)|])
                              | None -> ());
                             x3497))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3508 : t) ->
        fun ~searchElement:(x3504 : float) ->
          fun ?fromIndex:(x3505 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3509 = t_to_js x3508 in
                 Ojs.call (Ojs.get_prop_ascii x3509 "indexOf") "apply"
                   [|x3509;((let x3506 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3506 "push"
                                  [|(Ojs.float_to_js x3504)|]);
                             (match x3505 with
                              | Some x3507 ->
                                  ignore
                                    (Ojs.call x3506 "push"
                                       [|(Ojs.float_to_js x3507)|])
                              | None -> ());
                             x3506))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3513 : t) ->
        fun ?separator:(x3510 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3514 = t_to_js x3513 in
               Ojs.call (Ojs.get_prop_ascii x3514 "join") "apply"
                 [|x3514;((let x3511 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3510 with
                            | Some x3512 ->
                                ignore
                                  (Ojs.call x3511 "push"
                                     [|(Ojs.string_to_js x3512)|])
                            | None -> ());
                           x3511))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3519 : t) ->
        fun ~searchElement:(x3515 : float) ->
          fun ?fromIndex:(x3516 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3520 = t_to_js x3519 in
                 Ojs.call (Ojs.get_prop_ascii x3520 "lastIndexOf") "apply"
                   [|x3520;((let x3517 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3517 "push"
                                  [|(Ojs.float_to_js x3515)|]);
                             (match x3516 with
                              | Some x3518 ->
                                  ignore
                                    (Ojs.call x3517 "push"
                                       [|(Ojs.float_to_js x3518)|])
                              | None -> ());
                             x3517))|])
    let (get_length : t -> float) =
      fun (x3521 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3521) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3529 : t) ->
        fun
          ~callbackfn:(x3522 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3523 : any option) ->
            fun () ->
              t_of_js
                (let x3530 = t_to_js x3529 in
                 Ojs.call (Ojs.get_prop_ascii x3530 "map") "apply"
                   [|x3530;((let x3524 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3524 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3526 : Ojs.t) ->
                                          fun (x3527 : Ojs.t) ->
                                            fun (x3528 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3522
                                                   ~value:(Ojs.float_of_js
                                                             x3526)
                                                   ~index:(Ojs.float_of_js
                                                             x3527)
                                                   ~array:(t_of_js x3528))))|]);
                             (match x3523 with
                              | Some x3525 ->
                                  ignore
                                    (Ojs.call x3524 "push"
                                       [|(any_to_js x3525)|])
                              | None -> ());
                             x3524))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3536 : t) ->
        fun
          ~callbackfn:(x3531 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3536) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3532 : Ojs.t) ->
                       fun (x3533 : Ojs.t) ->
                         fun (x3534 : Ojs.t) ->
                           fun (x3535 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3531 ~previousValue:(Ojs.float_of_js x3532)
                                  ~currentValue:(Ojs.float_of_js x3533)
                                  ~currentIndex:(Ojs.float_of_js x3534)
                                  ~array:(t_of_js x3535))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3543 : t) ->
        fun
          ~callbackfn:(x3537 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3542 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3543) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3538 : Ojs.t) ->
                         fun (x3539 : Ojs.t) ->
                           fun (x3540 : Ojs.t) ->
                             fun (x3541 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3537
                                    ~previousValue:(Ojs.float_of_js x3538)
                                    ~currentValue:(Ojs.float_of_js x3539)
                                    ~currentIndex:(Ojs.float_of_js x3540)
                                    ~array:(t_of_js x3541))));(Ojs.float_to_js
                                                                 x3542)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3550 : t) ->
        fun
          ~callbackfn:(x3544 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3549 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3550) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3545 : Ojs.t) ->
                         fun (x3546 : Ojs.t) ->
                           fun (x3547 : Ojs.t) ->
                             fun (x3548 : Ojs.t) ->
                               Obj.magic
                                 (x3544 ~previousValue:(Obj.magic x3545)
                                    ~currentValue:(Ojs.float_of_js x3546)
                                    ~currentIndex:(Ojs.float_of_js x3547)
                                    ~array:(t_of_js x3548))));(Obj.magic
                                                                 x3549)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3556 : t) ->
        fun
          ~callbackfn:(x3551 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3556) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3552 : Ojs.t) ->
                       fun (x3553 : Ojs.t) ->
                         fun (x3554 : Ojs.t) ->
                           fun (x3555 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3551 ~previousValue:(Ojs.float_of_js x3552)
                                  ~currentValue:(Ojs.float_of_js x3553)
                                  ~currentIndex:(Ojs.float_of_js x3554)
                                  ~array:(t_of_js x3555))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3563 : t) ->
        fun
          ~callbackfn:(x3557 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3562 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3563) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3558 : Ojs.t) ->
                         fun (x3559 : Ojs.t) ->
                           fun (x3560 : Ojs.t) ->
                             fun (x3561 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3557
                                    ~previousValue:(Ojs.float_of_js x3558)
                                    ~currentValue:(Ojs.float_of_js x3559)
                                    ~currentIndex:(Ojs.float_of_js x3560)
                                    ~array:(t_of_js x3561))));(Ojs.float_to_js
                                                                 x3562)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3570 : t) ->
        fun
          ~callbackfn:(x3564 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3569 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3570) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3565 : Ojs.t) ->
                         fun (x3566 : Ojs.t) ->
                           fun (x3567 : Ojs.t) ->
                             fun (x3568 : Ojs.t) ->
                               Obj.magic
                                 (x3564 ~previousValue:(Obj.magic x3565)
                                    ~currentValue:(Ojs.float_of_js x3566)
                                    ~currentIndex:(Ojs.float_of_js x3567)
                                    ~array:(t_of_js x3568))));(Obj.magic
                                                                 x3569)|])
    let (reverse : t -> t) =
      fun (x3571 : t) -> t_of_js (Ojs.call (t_to_js x3571) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x3577 : t) ->
        fun ~array:(x3572 : float _Array) ->
          fun ?offset:(x3573 : float option) ->
            fun () ->
              ignore
                (let x3578 = t_to_js x3577 in
                 Ojs.call (Ojs.get_prop_ascii x3578 "set") "apply"
                   [|x3578;((let x3574 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3574 "push"
                                  [|(_Array_to_js Ojs.float_to_js x3572)|]);
                             (match x3573 with
                              | Some x3575 ->
                                  ignore
                                    (Ojs.call x3574 "push"
                                       [|(Ojs.float_to_js x3575)|])
                              | None -> ());
                             x3574))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3584 : t) ->
        fun ?start:(x3579 : float option) ->
          fun ?end_:(x3580 : float option) ->
            fun () ->
              t_of_js
                (let x3585 = t_to_js x3584 in
                 Ojs.call (Ojs.get_prop_ascii x3585 "slice") "apply"
                   [|x3585;((let x3581 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3579 with
                              | Some x3583 ->
                                  ignore
                                    (Ojs.call x3581 "push"
                                       [|(Ojs.float_to_js x3583)|])
                              | None -> ());
                             (match x3580 with
                              | Some x3582 ->
                                  ignore
                                    (Ojs.call x3581 "push"
                                       [|(Ojs.float_to_js x3582)|])
                              | None -> ());
                             x3581))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3593 : t) ->
        fun
          ~predicate:(x3586 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3587 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3594 = t_to_js x3593 in
                 Ojs.call (Ojs.get_prop_ascii x3594 "some") "apply"
                   [|x3594;((let x3588 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3588 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3590 : Ojs.t) ->
                                          fun (x3591 : Ojs.t) ->
                                            fun (x3592 : Ojs.t) ->
                                              unknown_to_js
                                                (x3586
                                                   ~value:(Ojs.float_of_js
                                                             x3590)
                                                   ~index:(Ojs.float_of_js
                                                             x3591)
                                                   ~array:(t_of_js x3592))))|]);
                             (match x3587 with
                              | Some x3589 ->
                                  ignore
                                    (Ojs.call x3588 "push"
                                       [|(any_to_js x3589)|])
                              | None -> ());
                             x3588))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3600 : t) ->
        fun ?compareFn:(x3595 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3601 = t_to_js x3600 in
               Ojs.call (Ojs.get_prop_ascii x3601 "sort") "apply"
                 [|x3601;((let x3596 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3595 with
                            | Some x3597 ->
                                ignore
                                  (Ojs.call x3596 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3598 : Ojs.t) ->
                                             fun (x3599 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3597
                                                    ~a:(Ojs.float_of_js x3598)
                                                    ~b:(Ojs.float_of_js x3599))))|])
                            | None -> ());
                           x3596))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3607 : t) ->
        fun ?begin_:(x3602 : float option) ->
          fun ?end_:(x3603 : float option) ->
            fun () ->
              t_of_js
                (let x3608 = t_to_js x3607 in
                 Ojs.call (Ojs.get_prop_ascii x3608 "subarray") "apply"
                   [|x3608;((let x3604 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3602 with
                              | Some x3606 ->
                                  ignore
                                    (Ojs.call x3604 "push"
                                       [|(Ojs.float_to_js x3606)|])
                              | None -> ());
                             (match x3603 with
                              | Some x3605 ->
                                  ignore
                                    (Ojs.call x3604 "push"
                                       [|(Ojs.float_to_js x3605)|])
                              | None -> ());
                             x3604))|])
    let (toLocaleString : t -> string) =
      fun (x3609 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3609) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3610 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3610) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3611 : t) -> t_of_js (Ojs.call (t_to_js x3611) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3612 : t) ->
        fun (x3613 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3612) (Ojs.float_to_js x3613))
    let (set : t -> float -> float -> unit) =
      fun (x3614 : t) ->
        fun (x3615 : float) ->
          fun (x3616 : float) ->
            Ojs.set_prop (t_to_js x3614) (Ojs.float_to_js x3615)
              (Ojs.float_to_js x3616)
    let (create : length:float -> _Int32Array) =
      fun ~length:(x3617 : float) ->
        _Int32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x3617)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Int32Array)
      =
      fun ~array:(x3618 : (_ArrayBuffer, float _Array) union2) ->
        _Int32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x3620 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x3620) x3618)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Int32Array)
      =
      fun ~buffer:(x3622 : _ArrayBuffer) ->
        fun ?byteOffset:(x3623 : float option) ->
          fun ?length:(x3624 : float option) ->
            fun () ->
              _Int32Array_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x3625 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3625 "push" [|(_ArrayBuffer_to_js x3622)|]);
                    (match x3623 with
                     | Some x3627 ->
                         ignore
                           (Ojs.call x3625 "push" [|(Ojs.float_to_js x3627)|])
                     | None -> ());
                    (match x3624 with
                     | Some x3626 ->
                         ignore
                           (Ojs.call x3625 "push" [|(Ojs.float_to_js x3626)|])
                     | None -> ());
                    x3625))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Int32Array) =
      fun ~items:(x3628 : float list) ->
        _Int32Array_of_js
          (let x3631 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x3631 "of") "apply"
             [|x3631;((let x3629 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3630 : float) ->
                            ignore
                              (Ojs.call x3629 "push"
                                 [|(Ojs.float_to_js x3630)|])) x3628;
                       x3629))|])
    let (from : array:float _Array -> _Int32Array) =
      fun ~array:(x3632 : float _Array) ->
        _Int32Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(_Array_to_js Ojs.float_to_js x3632)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Int32Array)
      =
      fun ~array:(x3634 : 'T _Array) ->
        fun ~mapfn:(x3635 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3636 : any option) ->
            fun () ->
              _Int32Array_of_js
                (let x3642 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x3642 "from") "apply"
                   [|x3642;((let x3637 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3637 "push"
                                  [|(_Array_to_js Obj.magic x3634)|]);
                             ignore
                               (Ojs.call x3637 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3639 : Ojs.t) ->
                                          fun (x3640 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3635 ~v:(Obj.magic x3639)
                                                 ~k:(Ojs.float_of_js x3640))))|]);
                             (match x3636 with
                              | Some x3638 ->
                                  ignore
                                    (Ojs.call x3637 "push"
                                       [|(any_to_js x3638)|])
                              | None -> ());
                             x3637))|])
  end
module Int32ArrayConstructor =
  struct
    type t = _Int32ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x3644 : Ojs.t) -> _Int32ArrayConstructor_of_js x3644
    and t_to_js : t -> Ojs.t =
      fun (x3643 : _Int32ArrayConstructor) ->
        _Int32ArrayConstructor_to_js x3643
    let (get_prototype : t -> _Int32Array) =
      fun (x3645 : t) ->
        _Int32Array_of_js (Ojs.get_prop_ascii (t_to_js x3645) "prototype")
    let (create : t -> length:float -> _Int32Array) =
      fun (x3647 : t) ->
        fun ~length:(x3646 : float) ->
          _Int32Array_of_js
            (Ojs.new_obj (t_to_js x3647) [|(Ojs.float_to_js x3646)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Int32Array) =
      fun (x3652 : t) ->
        fun ~array:(x3648 : (_ArrayBuffer, float _Array) union2) ->
          _Int32Array_of_js
            (Ojs.new_obj (t_to_js x3652)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x3650 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x3650) x3648)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Int32Array)
      =
      fun (x3659 : t) ->
        fun ~buffer:(x3653 : _ArrayBuffer) ->
          fun ?byteOffset:(x3654 : float option) ->
            fun ?length:(x3655 : float option) ->
              fun () ->
                _Int32Array_of_js
                  (Ojs.new_obj_arr (t_to_js x3659)
                     (let x3656 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3656 "push" [|(_ArrayBuffer_to_js x3653)|]);
                      (match x3654 with
                       | Some x3658 ->
                           ignore
                             (Ojs.call x3656 "push"
                                [|(Ojs.float_to_js x3658)|])
                       | None -> ());
                      (match x3655 with
                       | Some x3657 ->
                           ignore
                             (Ojs.call x3656 "push"
                                [|(Ojs.float_to_js x3657)|])
                       | None -> ());
                      x3656))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3660 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3660) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Int32Array) =
      fun (x3664 : t) ->
        fun ~items:(x3661 : float list) ->
          _Int32Array_of_js
            (let x3665 = t_to_js x3664 in
             Ojs.call (Ojs.get_prop_ascii x3665 "of") "apply"
               [|x3665;((let x3662 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3663 : float) ->
                              ignore
                                (Ojs.call x3662 "push"
                                   [|(Ojs.float_to_js x3663)|])) x3661;
                         x3662))|])
    let (from : t -> array:float _Array -> _Int32Array) =
      fun (x3668 : t) ->
        fun ~array:(x3666 : float _Array) ->
          _Int32Array_of_js
            (Ojs.call (t_to_js x3668) "from"
               [|(_Array_to_js Ojs.float_to_js x3666)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Int32Array)
      =
      fun (x3677 : t) ->
        fun ~array:(x3669 : 'T _Array) ->
          fun ~mapfn:(x3670 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3671 : any option) ->
              fun () ->
                _Int32Array_of_js
                  (let x3678 = t_to_js x3677 in
                   Ojs.call (Ojs.get_prop_ascii x3678 "from") "apply"
                     [|x3678;((let x3672 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3672 "push"
                                    [|(_Array_to_js Obj.magic x3669)|]);
                               ignore
                                 (Ojs.call x3672 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3674 : Ojs.t) ->
                                            fun (x3675 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3670 ~v:(Obj.magic x3674)
                                                   ~k:(Ojs.float_of_js x3675))))|]);
                               (match x3671 with
                                | Some x3673 ->
                                    ignore
                                      (Ojs.call x3672 "push"
                                         [|(any_to_js x3673)|])
                                | None -> ());
                               x3672))|])
  end
let (int32Array : _Int32ArrayConstructor) =
  _Int32ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Int32Array")
module Uint32Array =
  struct
    type t = _Uint32Array
    let rec t_of_js : Ojs.t -> t =
      fun (x3680 : Ojs.t) -> _Uint32Array_of_js x3680
    and t_to_js : t -> Ojs.t =
      fun (x3679 : _Uint32Array) -> _Uint32Array_to_js x3679
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3681 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3681) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x3682 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x3682) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3683 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3683) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3684 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3684) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3690 : t) ->
        fun ~target:(x3685 : float) ->
          fun ~start:(x3686 : float) ->
            fun ?end_:(x3687 : float option) ->
              fun () ->
                t_of_js
                  (let x3691 = t_to_js x3690 in
                   Ojs.call (Ojs.get_prop_ascii x3691 "copyWithin") "apply"
                     [|x3691;((let x3688 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3688 "push"
                                    [|(Ojs.float_to_js x3685)|]);
                               ignore
                                 (Ojs.call x3688 "push"
                                    [|(Ojs.float_to_js x3686)|]);
                               (match x3687 with
                                | Some x3689 ->
                                    ignore
                                      (Ojs.call x3688 "push"
                                         [|(Ojs.float_to_js x3689)|])
                                | None -> ());
                               x3688))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3699 : t) ->
        fun
          ~predicate:(x3692 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3693 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3700 = t_to_js x3699 in
                 Ojs.call (Ojs.get_prop_ascii x3700 "every") "apply"
                   [|x3700;((let x3694 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3694 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3696 : Ojs.t) ->
                                          fun (x3697 : Ojs.t) ->
                                            fun (x3698 : Ojs.t) ->
                                              unknown_to_js
                                                (x3692
                                                   ~value:(Ojs.float_of_js
                                                             x3696)
                                                   ~index:(Ojs.float_of_js
                                                             x3697)
                                                   ~array:(t_of_js x3698))))|]);
                             (match x3693 with
                              | Some x3695 ->
                                  ignore
                                    (Ojs.call x3694 "push"
                                       [|(any_to_js x3695)|])
                              | None -> ());
                             x3694))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3707 : t) ->
        fun ~value:(x3701 : float) ->
          fun ?start:(x3702 : float option) ->
            fun ?end_:(x3703 : float option) ->
              fun () ->
                t_of_js
                  (let x3708 = t_to_js x3707 in
                   Ojs.call (Ojs.get_prop_ascii x3708 "fill") "apply"
                     [|x3708;((let x3704 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3704 "push"
                                    [|(Ojs.float_to_js x3701)|]);
                               (match x3702 with
                                | Some x3706 ->
                                    ignore
                                      (Ojs.call x3704 "push"
                                         [|(Ojs.float_to_js x3706)|])
                                | None -> ());
                               (match x3703 with
                                | Some x3705 ->
                                    ignore
                                      (Ojs.call x3704 "push"
                                         [|(Ojs.float_to_js x3705)|])
                                | None -> ());
                               x3704))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3716 : t) ->
        fun ~predicate:(x3709 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x3710 : any option) ->
            fun () ->
              t_of_js
                (let x3717 = t_to_js x3716 in
                 Ojs.call (Ojs.get_prop_ascii x3717 "filter") "apply"
                   [|x3717;((let x3711 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3711 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3713 : Ojs.t) ->
                                          fun (x3714 : Ojs.t) ->
                                            fun (x3715 : Ojs.t) ->
                                              any_to_js
                                                (x3709
                                                   ~value:(Ojs.float_of_js
                                                             x3713)
                                                   ~index:(Ojs.float_of_js
                                                             x3714)
                                                   ~array:(t_of_js x3715))))|]);
                             (match x3710 with
                              | Some x3712 ->
                                  ignore
                                    (Ojs.call x3711 "push"
                                       [|(any_to_js x3712)|])
                              | None -> ());
                             x3711))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3725 : t) ->
        fun ~predicate:(x3718 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3719 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3726 = t_to_js x3725 in
                 Ojs.call (Ojs.get_prop_ascii x3726 "find") "apply"
                   [|x3726;((let x3720 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3720 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3722 : Ojs.t) ->
                                          fun (x3723 : Ojs.t) ->
                                            fun (x3724 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3718
                                                   ~value:(Ojs.float_of_js
                                                             x3722)
                                                   ~index:(Ojs.float_of_js
                                                             x3723)
                                                   ~obj:(t_of_js x3724))))|]);
                             (match x3719 with
                              | Some x3721 ->
                                  ignore
                                    (Ojs.call x3720 "push"
                                       [|(any_to_js x3721)|])
                              | None -> ());
                             x3720))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3735 : t) ->
        fun ~predicate:(x3728 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3729 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3736 = t_to_js x3735 in
                 Ojs.call (Ojs.get_prop_ascii x3736 "findIndex") "apply"
                   [|x3736;((let x3730 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3730 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3732 : Ojs.t) ->
                                          fun (x3733 : Ojs.t) ->
                                            fun (x3734 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3728
                                                   ~value:(Ojs.float_of_js
                                                             x3732)
                                                   ~index:(Ojs.float_of_js
                                                             x3733)
                                                   ~obj:(t_of_js x3734))))|]);
                             (match x3729 with
                              | Some x3731 ->
                                  ignore
                                    (Ojs.call x3730 "push"
                                       [|(any_to_js x3731)|])
                              | None -> ());
                             x3730))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3744 : t) ->
        fun
          ~callbackfn:(x3737 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3738 : any option) ->
            fun () ->
              ignore
                (let x3745 = t_to_js x3744 in
                 Ojs.call (Ojs.get_prop_ascii x3745 "forEach") "apply"
                   [|x3745;((let x3739 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3739 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3741 : Ojs.t) ->
                                          fun (x3742 : Ojs.t) ->
                                            fun (x3743 : Ojs.t) ->
                                              x3737
                                                ~value:(Ojs.float_of_js x3741)
                                                ~index:(Ojs.float_of_js x3742)
                                                ~array:(t_of_js x3743)))|]);
                             (match x3738 with
                              | Some x3740 ->
                                  ignore
                                    (Ojs.call x3739 "push"
                                       [|(any_to_js x3740)|])
                              | None -> ());
                             x3739))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3750 : t) ->
        fun ~searchElement:(x3746 : float) ->
          fun ?fromIndex:(x3747 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3751 = t_to_js x3750 in
                 Ojs.call (Ojs.get_prop_ascii x3751 "indexOf") "apply"
                   [|x3751;((let x3748 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3748 "push"
                                  [|(Ojs.float_to_js x3746)|]);
                             (match x3747 with
                              | Some x3749 ->
                                  ignore
                                    (Ojs.call x3748 "push"
                                       [|(Ojs.float_to_js x3749)|])
                              | None -> ());
                             x3748))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3755 : t) ->
        fun ?separator:(x3752 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3756 = t_to_js x3755 in
               Ojs.call (Ojs.get_prop_ascii x3756 "join") "apply"
                 [|x3756;((let x3753 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3752 with
                            | Some x3754 ->
                                ignore
                                  (Ojs.call x3753 "push"
                                     [|(Ojs.string_to_js x3754)|])
                            | None -> ());
                           x3753))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3761 : t) ->
        fun ~searchElement:(x3757 : float) ->
          fun ?fromIndex:(x3758 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3762 = t_to_js x3761 in
                 Ojs.call (Ojs.get_prop_ascii x3762 "lastIndexOf") "apply"
                   [|x3762;((let x3759 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3759 "push"
                                  [|(Ojs.float_to_js x3757)|]);
                             (match x3758 with
                              | Some x3760 ->
                                  ignore
                                    (Ojs.call x3759 "push"
                                       [|(Ojs.float_to_js x3760)|])
                              | None -> ());
                             x3759))|])
    let (get_length : t -> float) =
      fun (x3763 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3763) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3771 : t) ->
        fun
          ~callbackfn:(x3764 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3765 : any option) ->
            fun () ->
              t_of_js
                (let x3772 = t_to_js x3771 in
                 Ojs.call (Ojs.get_prop_ascii x3772 "map") "apply"
                   [|x3772;((let x3766 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3766 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3768 : Ojs.t) ->
                                          fun (x3769 : Ojs.t) ->
                                            fun (x3770 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3764
                                                   ~value:(Ojs.float_of_js
                                                             x3768)
                                                   ~index:(Ojs.float_of_js
                                                             x3769)
                                                   ~array:(t_of_js x3770))))|]);
                             (match x3765 with
                              | Some x3767 ->
                                  ignore
                                    (Ojs.call x3766 "push"
                                       [|(any_to_js x3767)|])
                              | None -> ());
                             x3766))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3778 : t) ->
        fun
          ~callbackfn:(x3773 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3778) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3774 : Ojs.t) ->
                       fun (x3775 : Ojs.t) ->
                         fun (x3776 : Ojs.t) ->
                           fun (x3777 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3773 ~previousValue:(Ojs.float_of_js x3774)
                                  ~currentValue:(Ojs.float_of_js x3775)
                                  ~currentIndex:(Ojs.float_of_js x3776)
                                  ~array:(t_of_js x3777))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3785 : t) ->
        fun
          ~callbackfn:(x3779 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3784 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3785) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3780 : Ojs.t) ->
                         fun (x3781 : Ojs.t) ->
                           fun (x3782 : Ojs.t) ->
                             fun (x3783 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3779
                                    ~previousValue:(Ojs.float_of_js x3780)
                                    ~currentValue:(Ojs.float_of_js x3781)
                                    ~currentIndex:(Ojs.float_of_js x3782)
                                    ~array:(t_of_js x3783))));(Ojs.float_to_js
                                                                 x3784)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3792 : t) ->
        fun
          ~callbackfn:(x3786 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3791 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3792) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3787 : Ojs.t) ->
                         fun (x3788 : Ojs.t) ->
                           fun (x3789 : Ojs.t) ->
                             fun (x3790 : Ojs.t) ->
                               Obj.magic
                                 (x3786 ~previousValue:(Obj.magic x3787)
                                    ~currentValue:(Ojs.float_of_js x3788)
                                    ~currentIndex:(Ojs.float_of_js x3789)
                                    ~array:(t_of_js x3790))));(Obj.magic
                                                                 x3791)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3798 : t) ->
        fun
          ~callbackfn:(x3793 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3798) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3794 : Ojs.t) ->
                       fun (x3795 : Ojs.t) ->
                         fun (x3796 : Ojs.t) ->
                           fun (x3797 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3793 ~previousValue:(Ojs.float_of_js x3794)
                                  ~currentValue:(Ojs.float_of_js x3795)
                                  ~currentIndex:(Ojs.float_of_js x3796)
                                  ~array:(t_of_js x3797))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3805 : t) ->
        fun
          ~callbackfn:(x3799 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3804 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3805) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3800 : Ojs.t) ->
                         fun (x3801 : Ojs.t) ->
                           fun (x3802 : Ojs.t) ->
                             fun (x3803 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3799
                                    ~previousValue:(Ojs.float_of_js x3800)
                                    ~currentValue:(Ojs.float_of_js x3801)
                                    ~currentIndex:(Ojs.float_of_js x3802)
                                    ~array:(t_of_js x3803))));(Ojs.float_to_js
                                                                 x3804)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3812 : t) ->
        fun
          ~callbackfn:(x3806 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3811 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3812) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3807 : Ojs.t) ->
                         fun (x3808 : Ojs.t) ->
                           fun (x3809 : Ojs.t) ->
                             fun (x3810 : Ojs.t) ->
                               Obj.magic
                                 (x3806 ~previousValue:(Obj.magic x3807)
                                    ~currentValue:(Ojs.float_of_js x3808)
                                    ~currentIndex:(Ojs.float_of_js x3809)
                                    ~array:(t_of_js x3810))));(Obj.magic
                                                                 x3811)|])
    let (reverse : t -> t) =
      fun (x3813 : t) -> t_of_js (Ojs.call (t_to_js x3813) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x3819 : t) ->
        fun ~array:(x3814 : float _Array) ->
          fun ?offset:(x3815 : float option) ->
            fun () ->
              ignore
                (let x3820 = t_to_js x3819 in
                 Ojs.call (Ojs.get_prop_ascii x3820 "set") "apply"
                   [|x3820;((let x3816 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3816 "push"
                                  [|(_Array_to_js Ojs.float_to_js x3814)|]);
                             (match x3815 with
                              | Some x3817 ->
                                  ignore
                                    (Ojs.call x3816 "push"
                                       [|(Ojs.float_to_js x3817)|])
                              | None -> ());
                             x3816))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3826 : t) ->
        fun ?start:(x3821 : float option) ->
          fun ?end_:(x3822 : float option) ->
            fun () ->
              t_of_js
                (let x3827 = t_to_js x3826 in
                 Ojs.call (Ojs.get_prop_ascii x3827 "slice") "apply"
                   [|x3827;((let x3823 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3821 with
                              | Some x3825 ->
                                  ignore
                                    (Ojs.call x3823 "push"
                                       [|(Ojs.float_to_js x3825)|])
                              | None -> ());
                             (match x3822 with
                              | Some x3824 ->
                                  ignore
                                    (Ojs.call x3823 "push"
                                       [|(Ojs.float_to_js x3824)|])
                              | None -> ());
                             x3823))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3835 : t) ->
        fun
          ~predicate:(x3828 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3829 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3836 = t_to_js x3835 in
                 Ojs.call (Ojs.get_prop_ascii x3836 "some") "apply"
                   [|x3836;((let x3830 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3830 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3832 : Ojs.t) ->
                                          fun (x3833 : Ojs.t) ->
                                            fun (x3834 : Ojs.t) ->
                                              unknown_to_js
                                                (x3828
                                                   ~value:(Ojs.float_of_js
                                                             x3832)
                                                   ~index:(Ojs.float_of_js
                                                             x3833)
                                                   ~array:(t_of_js x3834))))|]);
                             (match x3829 with
                              | Some x3831 ->
                                  ignore
                                    (Ojs.call x3830 "push"
                                       [|(any_to_js x3831)|])
                              | None -> ());
                             x3830))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3842 : t) ->
        fun ?compareFn:(x3837 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3843 = t_to_js x3842 in
               Ojs.call (Ojs.get_prop_ascii x3843 "sort") "apply"
                 [|x3843;((let x3838 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3837 with
                            | Some x3839 ->
                                ignore
                                  (Ojs.call x3838 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3840 : Ojs.t) ->
                                             fun (x3841 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3839
                                                    ~a:(Ojs.float_of_js x3840)
                                                    ~b:(Ojs.float_of_js x3841))))|])
                            | None -> ());
                           x3838))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3849 : t) ->
        fun ?begin_:(x3844 : float option) ->
          fun ?end_:(x3845 : float option) ->
            fun () ->
              t_of_js
                (let x3850 = t_to_js x3849 in
                 Ojs.call (Ojs.get_prop_ascii x3850 "subarray") "apply"
                   [|x3850;((let x3846 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3844 with
                              | Some x3848 ->
                                  ignore
                                    (Ojs.call x3846 "push"
                                       [|(Ojs.float_to_js x3848)|])
                              | None -> ());
                             (match x3845 with
                              | Some x3847 ->
                                  ignore
                                    (Ojs.call x3846 "push"
                                       [|(Ojs.float_to_js x3847)|])
                              | None -> ());
                             x3846))|])
    let (toLocaleString : t -> string) =
      fun (x3851 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3851) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3852 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3852) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3853 : t) -> t_of_js (Ojs.call (t_to_js x3853) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3854 : t) ->
        fun (x3855 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3854) (Ojs.float_to_js x3855))
    let (set : t -> float -> float -> unit) =
      fun (x3856 : t) ->
        fun (x3857 : float) ->
          fun (x3858 : float) ->
            Ojs.set_prop (t_to_js x3856) (Ojs.float_to_js x3857)
              (Ojs.float_to_js x3858)
    let (create : length:float -> _Uint32Array) =
      fun ~length:(x3859 : float) ->
        _Uint32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x3859)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Uint32Array)
      =
      fun ~array:(x3860 : (_ArrayBuffer, float _Array) union2) ->
        _Uint32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x3862 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x3862) x3860)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Uint32Array)
      =
      fun ~buffer:(x3864 : _ArrayBuffer) ->
        fun ?byteOffset:(x3865 : float option) ->
          fun ?length:(x3866 : float option) ->
            fun () ->
              _Uint32Array_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x3867 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3867 "push" [|(_ArrayBuffer_to_js x3864)|]);
                    (match x3865 with
                     | Some x3869 ->
                         ignore
                           (Ojs.call x3867 "push" [|(Ojs.float_to_js x3869)|])
                     | None -> ());
                    (match x3866 with
                     | Some x3868 ->
                         ignore
                           (Ojs.call x3867 "push" [|(Ojs.float_to_js x3868)|])
                     | None -> ());
                    x3867))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Uint32Array) =
      fun ~items:(x3870 : float list) ->
        _Uint32Array_of_js
          (let x3873 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x3873 "of") "apply"
             [|x3873;((let x3871 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3872 : float) ->
                            ignore
                              (Ojs.call x3871 "push"
                                 [|(Ojs.float_to_js x3872)|])) x3870;
                       x3871))|])
    let (from : array:float _Array -> _Uint32Array) =
      fun ~array:(x3874 : float _Array) ->
        _Uint32Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(_Array_to_js Ojs.float_to_js x3874)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Uint32Array)
      =
      fun ~array:(x3876 : 'T _Array) ->
        fun ~mapfn:(x3877 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3878 : any option) ->
            fun () ->
              _Uint32Array_of_js
                (let x3884 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x3884 "from") "apply"
                   [|x3884;((let x3879 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3879 "push"
                                  [|(_Array_to_js Obj.magic x3876)|]);
                             ignore
                               (Ojs.call x3879 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3881 : Ojs.t) ->
                                          fun (x3882 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3877 ~v:(Obj.magic x3881)
                                                 ~k:(Ojs.float_of_js x3882))))|]);
                             (match x3878 with
                              | Some x3880 ->
                                  ignore
                                    (Ojs.call x3879 "push"
                                       [|(any_to_js x3880)|])
                              | None -> ());
                             x3879))|])
  end
module Uint32ArrayConstructor =
  struct
    type t = _Uint32ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x3886 : Ojs.t) -> _Uint32ArrayConstructor_of_js x3886
    and t_to_js : t -> Ojs.t =
      fun (x3885 : _Uint32ArrayConstructor) ->
        _Uint32ArrayConstructor_to_js x3885
    let (get_prototype : t -> _Uint32Array) =
      fun (x3887 : t) ->
        _Uint32Array_of_js (Ojs.get_prop_ascii (t_to_js x3887) "prototype")
    let (create : t -> length:float -> _Uint32Array) =
      fun (x3889 : t) ->
        fun ~length:(x3888 : float) ->
          _Uint32Array_of_js
            (Ojs.new_obj (t_to_js x3889) [|(Ojs.float_to_js x3888)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Uint32Array) =
      fun (x3894 : t) ->
        fun ~array:(x3890 : (_ArrayBuffer, float _Array) union2) ->
          _Uint32Array_of_js
            (Ojs.new_obj (t_to_js x3894)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x3892 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x3892) x3890)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Uint32Array)
      =
      fun (x3901 : t) ->
        fun ~buffer:(x3895 : _ArrayBuffer) ->
          fun ?byteOffset:(x3896 : float option) ->
            fun ?length:(x3897 : float option) ->
              fun () ->
                _Uint32Array_of_js
                  (Ojs.new_obj_arr (t_to_js x3901)
                     (let x3898 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3898 "push" [|(_ArrayBuffer_to_js x3895)|]);
                      (match x3896 with
                       | Some x3900 ->
                           ignore
                             (Ojs.call x3898 "push"
                                [|(Ojs.float_to_js x3900)|])
                       | None -> ());
                      (match x3897 with
                       | Some x3899 ->
                           ignore
                             (Ojs.call x3898 "push"
                                [|(Ojs.float_to_js x3899)|])
                       | None -> ());
                      x3898))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3902 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3902) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Uint32Array) =
      fun (x3906 : t) ->
        fun ~items:(x3903 : float list) ->
          _Uint32Array_of_js
            (let x3907 = t_to_js x3906 in
             Ojs.call (Ojs.get_prop_ascii x3907 "of") "apply"
               [|x3907;((let x3904 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3905 : float) ->
                              ignore
                                (Ojs.call x3904 "push"
                                   [|(Ojs.float_to_js x3905)|])) x3903;
                         x3904))|])
    let (from : t -> array:float _Array -> _Uint32Array) =
      fun (x3910 : t) ->
        fun ~array:(x3908 : float _Array) ->
          _Uint32Array_of_js
            (Ojs.call (t_to_js x3910) "from"
               [|(_Array_to_js Ojs.float_to_js x3908)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Uint32Array)
      =
      fun (x3919 : t) ->
        fun ~array:(x3911 : 'T _Array) ->
          fun ~mapfn:(x3912 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3913 : any option) ->
              fun () ->
                _Uint32Array_of_js
                  (let x3920 = t_to_js x3919 in
                   Ojs.call (Ojs.get_prop_ascii x3920 "from") "apply"
                     [|x3920;((let x3914 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3914 "push"
                                    [|(_Array_to_js Obj.magic x3911)|]);
                               ignore
                                 (Ojs.call x3914 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3916 : Ojs.t) ->
                                            fun (x3917 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3912 ~v:(Obj.magic x3916)
                                                   ~k:(Ojs.float_of_js x3917))))|]);
                               (match x3913 with
                                | Some x3915 ->
                                    ignore
                                      (Ojs.call x3914 "push"
                                         [|(any_to_js x3915)|])
                                | None -> ());
                               x3914))|])
  end
let (uint32Array : _Uint32ArrayConstructor) =
  _Uint32ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Uint32Array")
module Float32Array =
  struct
    type t = _Float32Array
    let rec t_of_js : Ojs.t -> t =
      fun (x3922 : Ojs.t) -> _Float32Array_of_js x3922
    and t_to_js : t -> Ojs.t =
      fun (x3921 : _Float32Array) -> _Float32Array_to_js x3921
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3923 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3923) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x3924 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x3924) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3925 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3925) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3926 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3926) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3932 : t) ->
        fun ~target:(x3927 : float) ->
          fun ~start:(x3928 : float) ->
            fun ?end_:(x3929 : float option) ->
              fun () ->
                t_of_js
                  (let x3933 = t_to_js x3932 in
                   Ojs.call (Ojs.get_prop_ascii x3933 "copyWithin") "apply"
                     [|x3933;((let x3930 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3930 "push"
                                    [|(Ojs.float_to_js x3927)|]);
                               ignore
                                 (Ojs.call x3930 "push"
                                    [|(Ojs.float_to_js x3928)|]);
                               (match x3929 with
                                | Some x3931 ->
                                    ignore
                                      (Ojs.call x3930 "push"
                                         [|(Ojs.float_to_js x3931)|])
                                | None -> ());
                               x3930))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3941 : t) ->
        fun
          ~predicate:(x3934 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x3935 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3942 = t_to_js x3941 in
                 Ojs.call (Ojs.get_prop_ascii x3942 "every") "apply"
                   [|x3942;((let x3936 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3936 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3938 : Ojs.t) ->
                                          fun (x3939 : Ojs.t) ->
                                            fun (x3940 : Ojs.t) ->
                                              unknown_to_js
                                                (x3934
                                                   ~value:(Ojs.float_of_js
                                                             x3938)
                                                   ~index:(Ojs.float_of_js
                                                             x3939)
                                                   ~array:(t_of_js x3940))))|]);
                             (match x3935 with
                              | Some x3937 ->
                                  ignore
                                    (Ojs.call x3936 "push"
                                       [|(any_to_js x3937)|])
                              | None -> ());
                             x3936))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3949 : t) ->
        fun ~value:(x3943 : float) ->
          fun ?start:(x3944 : float option) ->
            fun ?end_:(x3945 : float option) ->
              fun () ->
                t_of_js
                  (let x3950 = t_to_js x3949 in
                   Ojs.call (Ojs.get_prop_ascii x3950 "fill") "apply"
                     [|x3950;((let x3946 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3946 "push"
                                    [|(Ojs.float_to_js x3943)|]);
                               (match x3944 with
                                | Some x3948 ->
                                    ignore
                                      (Ojs.call x3946 "push"
                                         [|(Ojs.float_to_js x3948)|])
                                | None -> ());
                               (match x3945 with
                                | Some x3947 ->
                                    ignore
                                      (Ojs.call x3946 "push"
                                         [|(Ojs.float_to_js x3947)|])
                                | None -> ());
                               x3946))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3958 : t) ->
        fun ~predicate:(x3951 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x3952 : any option) ->
            fun () ->
              t_of_js
                (let x3959 = t_to_js x3958 in
                 Ojs.call (Ojs.get_prop_ascii x3959 "filter") "apply"
                   [|x3959;((let x3953 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3953 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3955 : Ojs.t) ->
                                          fun (x3956 : Ojs.t) ->
                                            fun (x3957 : Ojs.t) ->
                                              any_to_js
                                                (x3951
                                                   ~value:(Ojs.float_of_js
                                                             x3955)
                                                   ~index:(Ojs.float_of_js
                                                             x3956)
                                                   ~array:(t_of_js x3957))))|]);
                             (match x3952 with
                              | Some x3954 ->
                                  ignore
                                    (Ojs.call x3953 "push"
                                       [|(any_to_js x3954)|])
                              | None -> ());
                             x3953))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3967 : t) ->
        fun ~predicate:(x3960 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3961 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3968 = t_to_js x3967 in
                 Ojs.call (Ojs.get_prop_ascii x3968 "find") "apply"
                   [|x3968;((let x3962 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3962 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3964 : Ojs.t) ->
                                          fun (x3965 : Ojs.t) ->
                                            fun (x3966 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3960
                                                   ~value:(Ojs.float_of_js
                                                             x3964)
                                                   ~index:(Ojs.float_of_js
                                                             x3965)
                                                   ~obj:(t_of_js x3966))))|]);
                             (match x3961 with
                              | Some x3963 ->
                                  ignore
                                    (Ojs.call x3962 "push"
                                       [|(any_to_js x3963)|])
                              | None -> ());
                             x3962))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3977 : t) ->
        fun ~predicate:(x3970 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x3971 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3978 = t_to_js x3977 in
                 Ojs.call (Ojs.get_prop_ascii x3978 "findIndex") "apply"
                   [|x3978;((let x3972 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3972 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3974 : Ojs.t) ->
                                          fun (x3975 : Ojs.t) ->
                                            fun (x3976 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3970
                                                   ~value:(Ojs.float_of_js
                                                             x3974)
                                                   ~index:(Ojs.float_of_js
                                                             x3975)
                                                   ~obj:(t_of_js x3976))))|]);
                             (match x3971 with
                              | Some x3973 ->
                                  ignore
                                    (Ojs.call x3972 "push"
                                       [|(any_to_js x3973)|])
                              | None -> ());
                             x3972))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3986 : t) ->
        fun
          ~callbackfn:(x3979 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3980 : any option) ->
            fun () ->
              ignore
                (let x3987 = t_to_js x3986 in
                 Ojs.call (Ojs.get_prop_ascii x3987 "forEach") "apply"
                   [|x3987;((let x3981 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3981 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3983 : Ojs.t) ->
                                          fun (x3984 : Ojs.t) ->
                                            fun (x3985 : Ojs.t) ->
                                              x3979
                                                ~value:(Ojs.float_of_js x3983)
                                                ~index:(Ojs.float_of_js x3984)
                                                ~array:(t_of_js x3985)))|]);
                             (match x3980 with
                              | Some x3982 ->
                                  ignore
                                    (Ojs.call x3981 "push"
                                       [|(any_to_js x3982)|])
                              | None -> ());
                             x3981))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3992 : t) ->
        fun ~searchElement:(x3988 : float) ->
          fun ?fromIndex:(x3989 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3993 = t_to_js x3992 in
                 Ojs.call (Ojs.get_prop_ascii x3993 "indexOf") "apply"
                   [|x3993;((let x3990 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3990 "push"
                                  [|(Ojs.float_to_js x3988)|]);
                             (match x3989 with
                              | Some x3991 ->
                                  ignore
                                    (Ojs.call x3990 "push"
                                       [|(Ojs.float_to_js x3991)|])
                              | None -> ());
                             x3990))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3997 : t) ->
        fun ?separator:(x3994 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3998 = t_to_js x3997 in
               Ojs.call (Ojs.get_prop_ascii x3998 "join") "apply"
                 [|x3998;((let x3995 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3994 with
                            | Some x3996 ->
                                ignore
                                  (Ojs.call x3995 "push"
                                     [|(Ojs.string_to_js x3996)|])
                            | None -> ());
                           x3995))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x4003 : t) ->
        fun ~searchElement:(x3999 : float) ->
          fun ?fromIndex:(x4000 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4004 = t_to_js x4003 in
                 Ojs.call (Ojs.get_prop_ascii x4004 "lastIndexOf") "apply"
                   [|x4004;((let x4001 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4001 "push"
                                  [|(Ojs.float_to_js x3999)|]);
                             (match x4000 with
                              | Some x4002 ->
                                  ignore
                                    (Ojs.call x4001 "push"
                                       [|(Ojs.float_to_js x4002)|])
                              | None -> ());
                             x4001))|])
    let (get_length : t -> float) =
      fun (x4005 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4005) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4013 : t) ->
        fun
          ~callbackfn:(x4006 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x4007 : any option) ->
            fun () ->
              t_of_js
                (let x4014 = t_to_js x4013 in
                 Ojs.call (Ojs.get_prop_ascii x4014 "map") "apply"
                   [|x4014;((let x4008 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4008 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4010 : Ojs.t) ->
                                          fun (x4011 : Ojs.t) ->
                                            fun (x4012 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4006
                                                   ~value:(Ojs.float_of_js
                                                             x4010)
                                                   ~index:(Ojs.float_of_js
                                                             x4011)
                                                   ~array:(t_of_js x4012))))|]);
                             (match x4007 with
                              | Some x4009 ->
                                  ignore
                                    (Ojs.call x4008 "push"
                                       [|(any_to_js x4009)|])
                              | None -> ());
                             x4008))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4020 : t) ->
        fun
          ~callbackfn:(x4015 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x4020) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x4016 : Ojs.t) ->
                       fun (x4017 : Ojs.t) ->
                         fun (x4018 : Ojs.t) ->
                           fun (x4019 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4015 ~previousValue:(Ojs.float_of_js x4016)
                                  ~currentValue:(Ojs.float_of_js x4017)
                                  ~currentIndex:(Ojs.float_of_js x4018)
                                  ~array:(t_of_js x4019))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4027 : t) ->
        fun
          ~callbackfn:(x4021 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4026 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x4027) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4022 : Ojs.t) ->
                         fun (x4023 : Ojs.t) ->
                           fun (x4024 : Ojs.t) ->
                             fun (x4025 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4021
                                    ~previousValue:(Ojs.float_of_js x4022)
                                    ~currentValue:(Ojs.float_of_js x4023)
                                    ~currentIndex:(Ojs.float_of_js x4024)
                                    ~array:(t_of_js x4025))));(Ojs.float_to_js
                                                                 x4026)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4034 : t) ->
        fun
          ~callbackfn:(x4028 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4033 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x4034) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4029 : Ojs.t) ->
                         fun (x4030 : Ojs.t) ->
                           fun (x4031 : Ojs.t) ->
                             fun (x4032 : Ojs.t) ->
                               Obj.magic
                                 (x4028 ~previousValue:(Obj.magic x4029)
                                    ~currentValue:(Ojs.float_of_js x4030)
                                    ~currentIndex:(Ojs.float_of_js x4031)
                                    ~array:(t_of_js x4032))));(Obj.magic
                                                                 x4033)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4040 : t) ->
        fun
          ~callbackfn:(x4035 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x4040) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x4036 : Ojs.t) ->
                       fun (x4037 : Ojs.t) ->
                         fun (x4038 : Ojs.t) ->
                           fun (x4039 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4035 ~previousValue:(Ojs.float_of_js x4036)
                                  ~currentValue:(Ojs.float_of_js x4037)
                                  ~currentIndex:(Ojs.float_of_js x4038)
                                  ~array:(t_of_js x4039))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4047 : t) ->
        fun
          ~callbackfn:(x4041 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4046 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x4047) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4042 : Ojs.t) ->
                         fun (x4043 : Ojs.t) ->
                           fun (x4044 : Ojs.t) ->
                             fun (x4045 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4041
                                    ~previousValue:(Ojs.float_of_js x4042)
                                    ~currentValue:(Ojs.float_of_js x4043)
                                    ~currentIndex:(Ojs.float_of_js x4044)
                                    ~array:(t_of_js x4045))));(Ojs.float_to_js
                                                                 x4046)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4054 : t) ->
        fun
          ~callbackfn:(x4048 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4053 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x4054) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4049 : Ojs.t) ->
                         fun (x4050 : Ojs.t) ->
                           fun (x4051 : Ojs.t) ->
                             fun (x4052 : Ojs.t) ->
                               Obj.magic
                                 (x4048 ~previousValue:(Obj.magic x4049)
                                    ~currentValue:(Ojs.float_of_js x4050)
                                    ~currentIndex:(Ojs.float_of_js x4051)
                                    ~array:(t_of_js x4052))));(Obj.magic
                                                                 x4053)|])
    let (reverse : t -> t) =
      fun (x4055 : t) -> t_of_js (Ojs.call (t_to_js x4055) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x4061 : t) ->
        fun ~array:(x4056 : float _Array) ->
          fun ?offset:(x4057 : float option) ->
            fun () ->
              ignore
                (let x4062 = t_to_js x4061 in
                 Ojs.call (Ojs.get_prop_ascii x4062 "set") "apply"
                   [|x4062;((let x4058 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4058 "push"
                                  [|(_Array_to_js Ojs.float_to_js x4056)|]);
                             (match x4057 with
                              | Some x4059 ->
                                  ignore
                                    (Ojs.call x4058 "push"
                                       [|(Ojs.float_to_js x4059)|])
                              | None -> ());
                             x4058))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x4068 : t) ->
        fun ?start:(x4063 : float option) ->
          fun ?end_:(x4064 : float option) ->
            fun () ->
              t_of_js
                (let x4069 = t_to_js x4068 in
                 Ojs.call (Ojs.get_prop_ascii x4069 "slice") "apply"
                   [|x4069;((let x4065 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4063 with
                              | Some x4067 ->
                                  ignore
                                    (Ojs.call x4065 "push"
                                       [|(Ojs.float_to_js x4067)|])
                              | None -> ());
                             (match x4064 with
                              | Some x4066 ->
                                  ignore
                                    (Ojs.call x4065 "push"
                                       [|(Ojs.float_to_js x4066)|])
                              | None -> ());
                             x4065))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4077 : t) ->
        fun
          ~predicate:(x4070 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x4071 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4078 = t_to_js x4077 in
                 Ojs.call (Ojs.get_prop_ascii x4078 "some") "apply"
                   [|x4078;((let x4072 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4072 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4074 : Ojs.t) ->
                                          fun (x4075 : Ojs.t) ->
                                            fun (x4076 : Ojs.t) ->
                                              unknown_to_js
                                                (x4070
                                                   ~value:(Ojs.float_of_js
                                                             x4074)
                                                   ~index:(Ojs.float_of_js
                                                             x4075)
                                                   ~array:(t_of_js x4076))))|]);
                             (match x4071 with
                              | Some x4073 ->
                                  ignore
                                    (Ojs.call x4072 "push"
                                       [|(any_to_js x4073)|])
                              | None -> ());
                             x4072))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x4084 : t) ->
        fun ?compareFn:(x4079 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x4085 = t_to_js x4084 in
               Ojs.call (Ojs.get_prop_ascii x4085 "sort") "apply"
                 [|x4085;((let x4080 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4079 with
                            | Some x4081 ->
                                ignore
                                  (Ojs.call x4080 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x4082 : Ojs.t) ->
                                             fun (x4083 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x4081
                                                    ~a:(Ojs.float_of_js x4082)
                                                    ~b:(Ojs.float_of_js x4083))))|])
                            | None -> ());
                           x4080))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x4091 : t) ->
        fun ?begin_:(x4086 : float option) ->
          fun ?end_:(x4087 : float option) ->
            fun () ->
              t_of_js
                (let x4092 = t_to_js x4091 in
                 Ojs.call (Ojs.get_prop_ascii x4092 "subarray") "apply"
                   [|x4092;((let x4088 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4086 with
                              | Some x4090 ->
                                  ignore
                                    (Ojs.call x4088 "push"
                                       [|(Ojs.float_to_js x4090)|])
                              | None -> ());
                             (match x4087 with
                              | Some x4089 ->
                                  ignore
                                    (Ojs.call x4088 "push"
                                       [|(Ojs.float_to_js x4089)|])
                              | None -> ());
                             x4088))|])
    let (toLocaleString : t -> string) =
      fun (x4093 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4093) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x4094 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4094) "toString" [||])
    let (valueOf : t -> t) =
      fun (x4095 : t) -> t_of_js (Ojs.call (t_to_js x4095) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x4096 : t) ->
        fun (x4097 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x4096) (Ojs.float_to_js x4097))
    let (set : t -> float -> float -> unit) =
      fun (x4098 : t) ->
        fun (x4099 : float) ->
          fun (x4100 : float) ->
            Ojs.set_prop (t_to_js x4098) (Ojs.float_to_js x4099)
              (Ojs.float_to_js x4100)
    let (create : length:float -> _Float32Array) =
      fun ~length:(x4101 : float) ->
        _Float32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x4101)|])
    let (create' :
      array:(_ArrayBuffer, float _Array) union2 -> _Float32Array) =
      fun ~array:(x4102 : (_ArrayBuffer, float _Array) union2) ->
        _Float32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x4104 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x4104) x4102)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Float32Array)
      =
      fun ~buffer:(x4106 : _ArrayBuffer) ->
        fun ?byteOffset:(x4107 : float option) ->
          fun ?length:(x4108 : float option) ->
            fun () ->
              _Float32Array_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x4109 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x4109 "push" [|(_ArrayBuffer_to_js x4106)|]);
                    (match x4107 with
                     | Some x4111 ->
                         ignore
                           (Ojs.call x4109 "push" [|(Ojs.float_to_js x4111)|])
                     | None -> ());
                    (match x4108 with
                     | Some x4110 ->
                         ignore
                           (Ojs.call x4109 "push" [|(Ojs.float_to_js x4110)|])
                     | None -> ());
                    x4109))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Float32Array) =
      fun ~items:(x4112 : float list) ->
        _Float32Array_of_js
          (let x4115 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x4115 "of") "apply"
             [|x4115;((let x4113 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4114 : float) ->
                            ignore
                              (Ojs.call x4113 "push"
                                 [|(Ojs.float_to_js x4114)|])) x4112;
                       x4113))|])
    let (from : array:float _Array -> _Float32Array) =
      fun ~array:(x4116 : float _Array) ->
        _Float32Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(_Array_to_js Ojs.float_to_js x4116)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Float32Array)
      =
      fun ~array:(x4118 : 'T _Array) ->
        fun ~mapfn:(x4119 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x4120 : any option) ->
            fun () ->
              _Float32Array_of_js
                (let x4126 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x4126 "from") "apply"
                   [|x4126;((let x4121 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4121 "push"
                                  [|(_Array_to_js Obj.magic x4118)|]);
                             ignore
                               (Ojs.call x4121 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x4123 : Ojs.t) ->
                                          fun (x4124 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x4119 ~v:(Obj.magic x4123)
                                                 ~k:(Ojs.float_of_js x4124))))|]);
                             (match x4120 with
                              | Some x4122 ->
                                  ignore
                                    (Ojs.call x4121 "push"
                                       [|(any_to_js x4122)|])
                              | None -> ());
                             x4121))|])
  end
module Float32ArrayConstructor =
  struct
    type t = _Float32ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x4128 : Ojs.t) -> _Float32ArrayConstructor_of_js x4128
    and t_to_js : t -> Ojs.t =
      fun (x4127 : _Float32ArrayConstructor) ->
        _Float32ArrayConstructor_to_js x4127
    let (get_prototype : t -> _Float32Array) =
      fun (x4129 : t) ->
        _Float32Array_of_js (Ojs.get_prop_ascii (t_to_js x4129) "prototype")
    let (create : t -> length:float -> _Float32Array) =
      fun (x4131 : t) ->
        fun ~length:(x4130 : float) ->
          _Float32Array_of_js
            (Ojs.new_obj (t_to_js x4131) [|(Ojs.float_to_js x4130)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Float32Array) =
      fun (x4136 : t) ->
        fun ~array:(x4132 : (_ArrayBuffer, float _Array) union2) ->
          _Float32Array_of_js
            (Ojs.new_obj (t_to_js x4136)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x4134 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x4134) x4132)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Float32Array)
      =
      fun (x4143 : t) ->
        fun ~buffer:(x4137 : _ArrayBuffer) ->
          fun ?byteOffset:(x4138 : float option) ->
            fun ?length:(x4139 : float option) ->
              fun () ->
                _Float32Array_of_js
                  (Ojs.new_obj_arr (t_to_js x4143)
                     (let x4140 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x4140 "push" [|(_ArrayBuffer_to_js x4137)|]);
                      (match x4138 with
                       | Some x4142 ->
                           ignore
                             (Ojs.call x4140 "push"
                                [|(Ojs.float_to_js x4142)|])
                       | None -> ());
                      (match x4139 with
                       | Some x4141 ->
                           ignore
                             (Ojs.call x4140 "push"
                                [|(Ojs.float_to_js x4141)|])
                       | None -> ());
                      x4140))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x4144 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x4144) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Float32Array) =
      fun (x4148 : t) ->
        fun ~items:(x4145 : float list) ->
          _Float32Array_of_js
            (let x4149 = t_to_js x4148 in
             Ojs.call (Ojs.get_prop_ascii x4149 "of") "apply"
               [|x4149;((let x4146 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4147 : float) ->
                              ignore
                                (Ojs.call x4146 "push"
                                   [|(Ojs.float_to_js x4147)|])) x4145;
                         x4146))|])
    let (from : t -> array:float _Array -> _Float32Array) =
      fun (x4152 : t) ->
        fun ~array:(x4150 : float _Array) ->
          _Float32Array_of_js
            (Ojs.call (t_to_js x4152) "from"
               [|(_Array_to_js Ojs.float_to_js x4150)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Float32Array)
      =
      fun (x4161 : t) ->
        fun ~array:(x4153 : 'T _Array) ->
          fun ~mapfn:(x4154 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x4155 : any option) ->
              fun () ->
                _Float32Array_of_js
                  (let x4162 = t_to_js x4161 in
                   Ojs.call (Ojs.get_prop_ascii x4162 "from") "apply"
                     [|x4162;((let x4156 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4156 "push"
                                    [|(_Array_to_js Obj.magic x4153)|]);
                               ignore
                                 (Ojs.call x4156 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4158 : Ojs.t) ->
                                            fun (x4159 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4154 ~v:(Obj.magic x4158)
                                                   ~k:(Ojs.float_of_js x4159))))|]);
                               (match x4155 with
                                | Some x4157 ->
                                    ignore
                                      (Ojs.call x4156 "push"
                                         [|(any_to_js x4157)|])
                                | None -> ());
                               x4156))|])
  end
let (float32Array : _Float32ArrayConstructor) =
  _Float32ArrayConstructor_of_js
    (Ojs.get_prop_ascii Ojs.global "Float32Array")
module Float64Array =
  struct
    type t = _Float64Array
    let rec t_of_js : Ojs.t -> t =
      fun (x4164 : Ojs.t) -> _Float64Array_of_js x4164
    and t_to_js : t -> Ojs.t =
      fun (x4163 : _Float64Array) -> _Float64Array_to_js x4163
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x4165 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x4165) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x4166 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x4166) "buffer")
    let (get_byteLength : t -> float) =
      fun (x4167 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4167) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x4168 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4168) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x4174 : t) ->
        fun ~target:(x4169 : float) ->
          fun ~start:(x4170 : float) ->
            fun ?end_:(x4171 : float option) ->
              fun () ->
                t_of_js
                  (let x4175 = t_to_js x4174 in
                   Ojs.call (Ojs.get_prop_ascii x4175 "copyWithin") "apply"
                     [|x4175;((let x4172 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4172 "push"
                                    [|(Ojs.float_to_js x4169)|]);
                               ignore
                                 (Ojs.call x4172 "push"
                                    [|(Ojs.float_to_js x4170)|]);
                               (match x4171 with
                                | Some x4173 ->
                                    ignore
                                      (Ojs.call x4172 "push"
                                         [|(Ojs.float_to_js x4173)|])
                                | None -> ());
                               x4172))|])
    let (every :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4183 : t) ->
        fun
          ~predicate:(x4176 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x4177 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4184 = t_to_js x4183 in
                 Ojs.call (Ojs.get_prop_ascii x4184 "every") "apply"
                   [|x4184;((let x4178 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4178 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4180 : Ojs.t) ->
                                          fun (x4181 : Ojs.t) ->
                                            fun (x4182 : Ojs.t) ->
                                              unknown_to_js
                                                (x4176
                                                   ~value:(Ojs.float_of_js
                                                             x4180)
                                                   ~index:(Ojs.float_of_js
                                                             x4181)
                                                   ~array:(t_of_js x4182))))|]);
                             (match x4177 with
                              | Some x4179 ->
                                  ignore
                                    (Ojs.call x4178 "push"
                                       [|(any_to_js x4179)|])
                              | None -> ());
                             x4178))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x4191 : t) ->
        fun ~value:(x4185 : float) ->
          fun ?start:(x4186 : float option) ->
            fun ?end_:(x4187 : float option) ->
              fun () ->
                t_of_js
                  (let x4192 = t_to_js x4191 in
                   Ojs.call (Ojs.get_prop_ascii x4192 "fill") "apply"
                     [|x4192;((let x4188 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4188 "push"
                                    [|(Ojs.float_to_js x4185)|]);
                               (match x4186 with
                                | Some x4190 ->
                                    ignore
                                      (Ojs.call x4188 "push"
                                         [|(Ojs.float_to_js x4190)|])
                                | None -> ());
                               (match x4187 with
                                | Some x4189 ->
                                    ignore
                                      (Ojs.call x4188 "push"
                                         [|(Ojs.float_to_js x4189)|])
                                | None -> ());
                               x4188))|])
    let (filter :
      t ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4200 : t) ->
        fun ~predicate:(x4193 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x4194 : any option) ->
            fun () ->
              t_of_js
                (let x4201 = t_to_js x4200 in
                 Ojs.call (Ojs.get_prop_ascii x4201 "filter") "apply"
                   [|x4201;((let x4195 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4195 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4197 : Ojs.t) ->
                                          fun (x4198 : Ojs.t) ->
                                            fun (x4199 : Ojs.t) ->
                                              any_to_js
                                                (x4193
                                                   ~value:(Ojs.float_of_js
                                                             x4197)
                                                   ~index:(Ojs.float_of_js
                                                             x4198)
                                                   ~array:(t_of_js x4199))))|]);
                             (match x4194 with
                              | Some x4196 ->
                                  ignore
                                    (Ojs.call x4195 "push"
                                       [|(any_to_js x4196)|])
                              | None -> ());
                             x4195))|])
    let (find :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x4209 : t) ->
        fun ~predicate:(x4202 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x4203 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x4210 = t_to_js x4209 in
                 Ojs.call (Ojs.get_prop_ascii x4210 "find") "apply"
                   [|x4210;((let x4204 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4204 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4206 : Ojs.t) ->
                                          fun (x4207 : Ojs.t) ->
                                            fun (x4208 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4202
                                                   ~value:(Ojs.float_of_js
                                                             x4206)
                                                   ~index:(Ojs.float_of_js
                                                             x4207)
                                                   ~obj:(t_of_js x4208))))|]);
                             (match x4203 with
                              | Some x4205 ->
                                  ignore
                                    (Ojs.call x4204 "push"
                                       [|(any_to_js x4205)|])
                              | None -> ());
                             x4204))|])
    let (findIndex :
      t ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x4219 : t) ->
        fun ~predicate:(x4212 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x4213 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x4220 = t_to_js x4219 in
                 Ojs.call (Ojs.get_prop_ascii x4220 "findIndex") "apply"
                   [|x4220;((let x4214 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4214 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4216 : Ojs.t) ->
                                          fun (x4217 : Ojs.t) ->
                                            fun (x4218 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4212
                                                   ~value:(Ojs.float_of_js
                                                             x4216)
                                                   ~index:(Ojs.float_of_js
                                                             x4217)
                                                   ~obj:(t_of_js x4218))))|]);
                             (match x4213 with
                              | Some x4215 ->
                                  ignore
                                    (Ojs.call x4214 "push"
                                       [|(any_to_js x4215)|])
                              | None -> ());
                             x4214))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4228 : t) ->
        fun
          ~callbackfn:(x4221 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x4222 : any option) ->
            fun () ->
              ignore
                (let x4229 = t_to_js x4228 in
                 Ojs.call (Ojs.get_prop_ascii x4229 "forEach") "apply"
                   [|x4229;((let x4223 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4223 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4225 : Ojs.t) ->
                                          fun (x4226 : Ojs.t) ->
                                            fun (x4227 : Ojs.t) ->
                                              x4221
                                                ~value:(Ojs.float_of_js x4225)
                                                ~index:(Ojs.float_of_js x4226)
                                                ~array:(t_of_js x4227)))|]);
                             (match x4222 with
                              | Some x4224 ->
                                  ignore
                                    (Ojs.call x4223 "push"
                                       [|(any_to_js x4224)|])
                              | None -> ());
                             x4223))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x4234 : t) ->
        fun ~searchElement:(x4230 : float) ->
          fun ?fromIndex:(x4231 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4235 = t_to_js x4234 in
                 Ojs.call (Ojs.get_prop_ascii x4235 "indexOf") "apply"
                   [|x4235;((let x4232 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4232 "push"
                                  [|(Ojs.float_to_js x4230)|]);
                             (match x4231 with
                              | Some x4233 ->
                                  ignore
                                    (Ojs.call x4232 "push"
                                       [|(Ojs.float_to_js x4233)|])
                              | None -> ());
                             x4232))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x4239 : t) ->
        fun ?separator:(x4236 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x4240 = t_to_js x4239 in
               Ojs.call (Ojs.get_prop_ascii x4240 "join") "apply"
                 [|x4240;((let x4237 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4236 with
                            | Some x4238 ->
                                ignore
                                  (Ojs.call x4237 "push"
                                     [|(Ojs.string_to_js x4238)|])
                            | None -> ());
                           x4237))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x4245 : t) ->
        fun ~searchElement:(x4241 : float) ->
          fun ?fromIndex:(x4242 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4246 = t_to_js x4245 in
                 Ojs.call (Ojs.get_prop_ascii x4246 "lastIndexOf") "apply"
                   [|x4246;((let x4243 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4243 "push"
                                  [|(Ojs.float_to_js x4241)|]);
                             (match x4242 with
                              | Some x4244 ->
                                  ignore
                                    (Ojs.call x4243 "push"
                                       [|(Ojs.float_to_js x4244)|])
                              | None -> ());
                             x4243))|])
    let (get_length : t -> float) =
      fun (x4247 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4247) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4255 : t) ->
        fun
          ~callbackfn:(x4248 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x4249 : any option) ->
            fun () ->
              t_of_js
                (let x4256 = t_to_js x4255 in
                 Ojs.call (Ojs.get_prop_ascii x4256 "map") "apply"
                   [|x4256;((let x4250 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4250 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4252 : Ojs.t) ->
                                          fun (x4253 : Ojs.t) ->
                                            fun (x4254 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4248
                                                   ~value:(Ojs.float_of_js
                                                             x4252)
                                                   ~index:(Ojs.float_of_js
                                                             x4253)
                                                   ~array:(t_of_js x4254))))|]);
                             (match x4249 with
                              | Some x4251 ->
                                  ignore
                                    (Ojs.call x4250 "push"
                                       [|(any_to_js x4251)|])
                              | None -> ());
                             x4250))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4262 : t) ->
        fun
          ~callbackfn:(x4257 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x4262) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x4258 : Ojs.t) ->
                       fun (x4259 : Ojs.t) ->
                         fun (x4260 : Ojs.t) ->
                           fun (x4261 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4257 ~previousValue:(Ojs.float_of_js x4258)
                                  ~currentValue:(Ojs.float_of_js x4259)
                                  ~currentIndex:(Ojs.float_of_js x4260)
                                  ~array:(t_of_js x4261))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4269 : t) ->
        fun
          ~callbackfn:(x4263 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4268 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x4269) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4264 : Ojs.t) ->
                         fun (x4265 : Ojs.t) ->
                           fun (x4266 : Ojs.t) ->
                             fun (x4267 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4263
                                    ~previousValue:(Ojs.float_of_js x4264)
                                    ~currentValue:(Ojs.float_of_js x4265)
                                    ~currentIndex:(Ojs.float_of_js x4266)
                                    ~array:(t_of_js x4267))));(Ojs.float_to_js
                                                                 x4268)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4276 : t) ->
        fun
          ~callbackfn:(x4270 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4275 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x4276) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4271 : Ojs.t) ->
                         fun (x4272 : Ojs.t) ->
                           fun (x4273 : Ojs.t) ->
                             fun (x4274 : Ojs.t) ->
                               Obj.magic
                                 (x4270 ~previousValue:(Obj.magic x4271)
                                    ~currentValue:(Ojs.float_of_js x4272)
                                    ~currentIndex:(Ojs.float_of_js x4273)
                                    ~array:(t_of_js x4274))));(Obj.magic
                                                                 x4275)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4282 : t) ->
        fun
          ~callbackfn:(x4277 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x4282) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x4278 : Ojs.t) ->
                       fun (x4279 : Ojs.t) ->
                         fun (x4280 : Ojs.t) ->
                           fun (x4281 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4277 ~previousValue:(Ojs.float_of_js x4278)
                                  ~currentValue:(Ojs.float_of_js x4279)
                                  ~currentIndex:(Ojs.float_of_js x4280)
                                  ~array:(t_of_js x4281))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4289 : t) ->
        fun
          ~callbackfn:(x4283 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4288 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x4289) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4284 : Ojs.t) ->
                         fun (x4285 : Ojs.t) ->
                           fun (x4286 : Ojs.t) ->
                             fun (x4287 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4283
                                    ~previousValue:(Ojs.float_of_js x4284)
                                    ~currentValue:(Ojs.float_of_js x4285)
                                    ~currentIndex:(Ojs.float_of_js x4286)
                                    ~array:(t_of_js x4287))));(Ojs.float_to_js
                                                                 x4288)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4296 : t) ->
        fun
          ~callbackfn:(x4290 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4295 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x4296) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4291 : Ojs.t) ->
                         fun (x4292 : Ojs.t) ->
                           fun (x4293 : Ojs.t) ->
                             fun (x4294 : Ojs.t) ->
                               Obj.magic
                                 (x4290 ~previousValue:(Obj.magic x4291)
                                    ~currentValue:(Ojs.float_of_js x4292)
                                    ~currentIndex:(Ojs.float_of_js x4293)
                                    ~array:(t_of_js x4294))));(Obj.magic
                                                                 x4295)|])
    let (reverse : t -> t) =
      fun (x4297 : t) -> t_of_js (Ojs.call (t_to_js x4297) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x4303 : t) ->
        fun ~array:(x4298 : float _Array) ->
          fun ?offset:(x4299 : float option) ->
            fun () ->
              ignore
                (let x4304 = t_to_js x4303 in
                 Ojs.call (Ojs.get_prop_ascii x4304 "set") "apply"
                   [|x4304;((let x4300 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4300 "push"
                                  [|(_Array_to_js Ojs.float_to_js x4298)|]);
                             (match x4299 with
                              | Some x4301 ->
                                  ignore
                                    (Ojs.call x4300 "push"
                                       [|(Ojs.float_to_js x4301)|])
                              | None -> ());
                             x4300))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x4310 : t) ->
        fun ?start:(x4305 : float option) ->
          fun ?end_:(x4306 : float option) ->
            fun () ->
              t_of_js
                (let x4311 = t_to_js x4310 in
                 Ojs.call (Ojs.get_prop_ascii x4311 "slice") "apply"
                   [|x4311;((let x4307 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4305 with
                              | Some x4309 ->
                                  ignore
                                    (Ojs.call x4307 "push"
                                       [|(Ojs.float_to_js x4309)|])
                              | None -> ());
                             (match x4306 with
                              | Some x4308 ->
                                  ignore
                                    (Ojs.call x4307 "push"
                                       [|(Ojs.float_to_js x4308)|])
                              | None -> ());
                             x4307))|])
    let (some :
      t ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4319 : t) ->
        fun
          ~predicate:(x4312 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x4313 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4320 = t_to_js x4319 in
                 Ojs.call (Ojs.get_prop_ascii x4320 "some") "apply"
                   [|x4320;((let x4314 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4314 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4316 : Ojs.t) ->
                                          fun (x4317 : Ojs.t) ->
                                            fun (x4318 : Ojs.t) ->
                                              unknown_to_js
                                                (x4312
                                                   ~value:(Ojs.float_of_js
                                                             x4316)
                                                   ~index:(Ojs.float_of_js
                                                             x4317)
                                                   ~array:(t_of_js x4318))))|]);
                             (match x4313 with
                              | Some x4315 ->
                                  ignore
                                    (Ojs.call x4314 "push"
                                       [|(any_to_js x4315)|])
                              | None -> ());
                             x4314))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x4326 : t) ->
        fun ?compareFn:(x4321 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x4327 = t_to_js x4326 in
               Ojs.call (Ojs.get_prop_ascii x4327 "sort") "apply"
                 [|x4327;((let x4322 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4321 with
                            | Some x4323 ->
                                ignore
                                  (Ojs.call x4322 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x4324 : Ojs.t) ->
                                             fun (x4325 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x4323
                                                    ~a:(Ojs.float_of_js x4324)
                                                    ~b:(Ojs.float_of_js x4325))))|])
                            | None -> ());
                           x4322))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x4333 : t) ->
        fun ?begin_:(x4328 : float option) ->
          fun ?end_:(x4329 : float option) ->
            fun () ->
              t_of_js
                (let x4334 = t_to_js x4333 in
                 Ojs.call (Ojs.get_prop_ascii x4334 "subarray") "apply"
                   [|x4334;((let x4330 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4328 with
                              | Some x4332 ->
                                  ignore
                                    (Ojs.call x4330 "push"
                                       [|(Ojs.float_to_js x4332)|])
                              | None -> ());
                             (match x4329 with
                              | Some x4331 ->
                                  ignore
                                    (Ojs.call x4330 "push"
                                       [|(Ojs.float_to_js x4331)|])
                              | None -> ());
                             x4330))|])
    let (toString : t -> string) =
      fun (x4335 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4335) "toString" [||])
    let (valueOf : t -> t) =
      fun (x4336 : t) -> t_of_js (Ojs.call (t_to_js x4336) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x4337 : t) ->
        fun (x4338 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x4337) (Ojs.float_to_js x4338))
    let (set : t -> float -> float -> unit) =
      fun (x4339 : t) ->
        fun (x4340 : float) ->
          fun (x4341 : float) ->
            Ojs.set_prop (t_to_js x4339) (Ojs.float_to_js x4340)
              (Ojs.float_to_js x4341)
    let (create : length:float -> _Float64Array) =
      fun ~length:(x4342 : float) ->
        _Float64Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x4342)|])
    let (create' :
      array:(_ArrayBuffer, float _Array) union2 -> _Float64Array) =
      fun ~array:(x4343 : (_ArrayBuffer, float _Array) union2) ->
        _Float64Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x4345 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x4345) x4343)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Float64Array)
      =
      fun ~buffer:(x4347 : _ArrayBuffer) ->
        fun ?byteOffset:(x4348 : float option) ->
          fun ?length:(x4349 : float option) ->
            fun () ->
              _Float64Array_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x4350 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x4350 "push" [|(_ArrayBuffer_to_js x4347)|]);
                    (match x4348 with
                     | Some x4352 ->
                         ignore
                           (Ojs.call x4350 "push" [|(Ojs.float_to_js x4352)|])
                     | None -> ());
                    (match x4349 with
                     | Some x4351 ->
                         ignore
                           (Ojs.call x4350 "push" [|(Ojs.float_to_js x4351)|])
                     | None -> ());
                    x4350))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
           "BYTES_PER_ELEMENT")
    let (of_ : items:float list -> _Float64Array) =
      fun ~items:(x4353 : float list) ->
        _Float64Array_of_js
          (let x4356 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x4356 "of") "apply"
             [|x4356;((let x4354 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4355 : float) ->
                            ignore
                              (Ojs.call x4354 "push"
                                 [|(Ojs.float_to_js x4355)|])) x4353;
                       x4354))|])
    let (from : array:float _Array -> _Float64Array) =
      fun ~array:(x4357 : float _Array) ->
        _Float64Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(_Array_to_js Ojs.float_to_js x4357)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Float64Array)
      =
      fun ~array:(x4359 : 'T _Array) ->
        fun ~mapfn:(x4360 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x4361 : any option) ->
            fun () ->
              _Float64Array_of_js
                (let x4367 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x4367 "from") "apply"
                   [|x4367;((let x4362 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4362 "push"
                                  [|(_Array_to_js Obj.magic x4359)|]);
                             ignore
                               (Ojs.call x4362 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x4364 : Ojs.t) ->
                                          fun (x4365 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x4360 ~v:(Obj.magic x4364)
                                                 ~k:(Ojs.float_of_js x4365))))|]);
                             (match x4361 with
                              | Some x4363 ->
                                  ignore
                                    (Ojs.call x4362 "push"
                                       [|(any_to_js x4363)|])
                              | None -> ());
                             x4362))|])
  end
module Float64ArrayConstructor =
  struct
    type t = _Float64ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x4369 : Ojs.t) -> _Float64ArrayConstructor_of_js x4369
    and t_to_js : t -> Ojs.t =
      fun (x4368 : _Float64ArrayConstructor) ->
        _Float64ArrayConstructor_to_js x4368
    let (get_prototype : t -> _Float64Array) =
      fun (x4370 : t) ->
        _Float64Array_of_js (Ojs.get_prop_ascii (t_to_js x4370) "prototype")
    let (create : t -> length:float -> _Float64Array) =
      fun (x4372 : t) ->
        fun ~length:(x4371 : float) ->
          _Float64Array_of_js
            (Ojs.new_obj (t_to_js x4372) [|(Ojs.float_to_js x4371)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Float64Array) =
      fun (x4377 : t) ->
        fun ~array:(x4373 : (_ArrayBuffer, float _Array) union2) ->
          _Float64Array_of_js
            (Ojs.new_obj (t_to_js x4377)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x4375 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x4375) x4373)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Float64Array)
      =
      fun (x4384 : t) ->
        fun ~buffer:(x4378 : _ArrayBuffer) ->
          fun ?byteOffset:(x4379 : float option) ->
            fun ?length:(x4380 : float option) ->
              fun () ->
                _Float64Array_of_js
                  (Ojs.new_obj_arr (t_to_js x4384)
                     (let x4381 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x4381 "push" [|(_ArrayBuffer_to_js x4378)|]);
                      (match x4379 with
                       | Some x4383 ->
                           ignore
                             (Ojs.call x4381 "push"
                                [|(Ojs.float_to_js x4383)|])
                       | None -> ());
                      (match x4380 with
                       | Some x4382 ->
                           ignore
                             (Ojs.call x4381 "push"
                                [|(Ojs.float_to_js x4382)|])
                       | None -> ());
                      x4381))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x4385 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x4385) "BYTES_PER_ELEMENT")
    let (of_ : t -> items:float list -> _Float64Array) =
      fun (x4389 : t) ->
        fun ~items:(x4386 : float list) ->
          _Float64Array_of_js
            (let x4390 = t_to_js x4389 in
             Ojs.call (Ojs.get_prop_ascii x4390 "of") "apply"
               [|x4390;((let x4387 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4388 : float) ->
                              ignore
                                (Ojs.call x4387 "push"
                                   [|(Ojs.float_to_js x4388)|])) x4386;
                         x4387))|])
    let (from : t -> array:float _Array -> _Float64Array) =
      fun (x4393 : t) ->
        fun ~array:(x4391 : float _Array) ->
          _Float64Array_of_js
            (Ojs.call (t_to_js x4393) "from"
               [|(_Array_to_js Ojs.float_to_js x4391)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Float64Array)
      =
      fun (x4402 : t) ->
        fun ~array:(x4394 : 'T _Array) ->
          fun ~mapfn:(x4395 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x4396 : any option) ->
              fun () ->
                _Float64Array_of_js
                  (let x4403 = t_to_js x4402 in
                   Ojs.call (Ojs.get_prop_ascii x4403 "from") "apply"
                     [|x4403;((let x4397 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4397 "push"
                                    [|(_Array_to_js Obj.magic x4394)|]);
                               ignore
                                 (Ojs.call x4397 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4399 : Ojs.t) ->
                                            fun (x4400 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4395 ~v:(Obj.magic x4399)
                                                   ~k:(Ojs.float_of_js x4400))))|]);
                               (match x4396 with
                                | Some x4398 ->
                                    ignore
                                      (Ojs.call x4397 "push"
                                         [|(any_to_js x4398)|])
                                | None -> ());
                               x4397))|])
  end
let (float64Array : _Float64ArrayConstructor) =
  _Float64ArrayConstructor_of_js
    (Ojs.get_prop_ascii Ojs.global "Float64Array")
module Intl =
  struct
    module CollatorOptions =
      struct
        type t = _Intl_CollatorOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4405 : Ojs.t) -> _Intl_CollatorOptions_of_js x4405
        and t_to_js : t -> Ojs.t =
          fun (x4404 : _Intl_CollatorOptions) ->
            _Intl_CollatorOptions_to_js x4404
        let (get_usage : t -> string) =
          fun (x4406 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4406) "usage")
        let (set_usage : t -> string -> unit) =
          fun (x4407 : t) ->
            fun (x4408 : string) ->
              Ojs.set_prop_ascii (t_to_js x4407) "usage"
                (Ojs.string_to_js x4408)
        let (get_localeMatcher : t -> string) =
          fun (x4409 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4409) "localeMatcher")
        let (set_localeMatcher : t -> string -> unit) =
          fun (x4410 : t) ->
            fun (x4411 : string) ->
              Ojs.set_prop_ascii (t_to_js x4410) "localeMatcher"
                (Ojs.string_to_js x4411)
        let (get_numeric : t -> bool) =
          fun (x4412 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4412) "numeric")
        let (set_numeric : t -> bool -> unit) =
          fun (x4413 : t) ->
            fun (x4414 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4413) "numeric"
                (Ojs.bool_to_js x4414)
        let (get_caseFirst : t -> string) =
          fun (x4415 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4415) "caseFirst")
        let (set_caseFirst : t -> string -> unit) =
          fun (x4416 : t) ->
            fun (x4417 : string) ->
              Ojs.set_prop_ascii (t_to_js x4416) "caseFirst"
                (Ojs.string_to_js x4417)
        let (get_sensitivity : t -> string) =
          fun (x4418 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4418) "sensitivity")
        let (set_sensitivity : t -> string -> unit) =
          fun (x4419 : t) ->
            fun (x4420 : string) ->
              Ojs.set_prop_ascii (t_to_js x4419) "sensitivity"
                (Ojs.string_to_js x4420)
        let (get_ignorePunctuation : t -> bool) =
          fun (x4421 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x4421) "ignorePunctuation")
        let (set_ignorePunctuation : t -> bool -> unit) =
          fun (x4422 : t) ->
            fun (x4423 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4422) "ignorePunctuation"
                (Ojs.bool_to_js x4423)
      end
    module ResolvedCollatorOptions =
      struct
        type t = _Intl_ResolvedCollatorOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4425 : Ojs.t) -> _Intl_ResolvedCollatorOptions_of_js x4425
        and t_to_js : t -> Ojs.t =
          fun (x4424 : _Intl_ResolvedCollatorOptions) ->
            _Intl_ResolvedCollatorOptions_to_js x4424
        let (get_locale : t -> string) =
          fun (x4426 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4426) "locale")
        let (set_locale : t -> string -> unit) =
          fun (x4427 : t) ->
            fun (x4428 : string) ->
              Ojs.set_prop_ascii (t_to_js x4427) "locale"
                (Ojs.string_to_js x4428)
        let (get_usage : t -> string) =
          fun (x4429 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4429) "usage")
        let (set_usage : t -> string -> unit) =
          fun (x4430 : t) ->
            fun (x4431 : string) ->
              Ojs.set_prop_ascii (t_to_js x4430) "usage"
                (Ojs.string_to_js x4431)
        let (get_sensitivity : t -> string) =
          fun (x4432 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4432) "sensitivity")
        let (set_sensitivity : t -> string -> unit) =
          fun (x4433 : t) ->
            fun (x4434 : string) ->
              Ojs.set_prop_ascii (t_to_js x4433) "sensitivity"
                (Ojs.string_to_js x4434)
        let (get_ignorePunctuation : t -> bool) =
          fun (x4435 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x4435) "ignorePunctuation")
        let (set_ignorePunctuation : t -> bool -> unit) =
          fun (x4436 : t) ->
            fun (x4437 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4436) "ignorePunctuation"
                (Ojs.bool_to_js x4437)
        let (get_collation : t -> string) =
          fun (x4438 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4438) "collation")
        let (set_collation : t -> string -> unit) =
          fun (x4439 : t) ->
            fun (x4440 : string) ->
              Ojs.set_prop_ascii (t_to_js x4439) "collation"
                (Ojs.string_to_js x4440)
        let (get_caseFirst : t -> string) =
          fun (x4441 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4441) "caseFirst")
        let (set_caseFirst : t -> string -> unit) =
          fun (x4442 : t) ->
            fun (x4443 : string) ->
              Ojs.set_prop_ascii (t_to_js x4442) "caseFirst"
                (Ojs.string_to_js x4443)
        let (get_numeric : t -> bool) =
          fun (x4444 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4444) "numeric")
        let (set_numeric : t -> bool -> unit) =
          fun (x4445 : t) ->
            fun (x4446 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4445) "numeric"
                (Ojs.bool_to_js x4446)
      end
    module Collator =
      struct
        type t = _Intl_Collator
        let rec t_of_js : Ojs.t -> t =
          fun (x4448 : Ojs.t) -> _Intl_Collator_of_js x4448
        and t_to_js : t -> Ojs.t =
          fun (x4447 : _Intl_Collator) -> _Intl_Collator_to_js x4447
        let (compare : t -> x:string -> y:string -> float) =
          fun (x4451 : t) ->
            fun ~x:(x4449 : string) ->
              fun ~y:(x4450 : string) ->
                Ojs.float_of_js
                  (Ojs.call (t_to_js x4451) "compare"
                     [|(Ojs.string_to_js x4449);(Ojs.string_to_js x4450)|])
        let (resolvedOptions : t -> _Intl_ResolvedCollatorOptions) =
          fun (x4452 : t) ->
            _Intl_ResolvedCollatorOptions_of_js
              (Ojs.call (t_to_js x4452) "resolvedOptions" [||])
      end
    let (collator : anonymous_interface_2) =
      anonymous_interface_2_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
    module NumberFormatOptions =
      struct
        type t = _Intl_NumberFormatOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4454 : Ojs.t) -> _Intl_NumberFormatOptions_of_js x4454
        and t_to_js : t -> Ojs.t =
          fun (x4453 : _Intl_NumberFormatOptions) ->
            _Intl_NumberFormatOptions_to_js x4453
        let (get_localeMatcher : t -> string) =
          fun (x4455 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4455) "localeMatcher")
        let (set_localeMatcher : t -> string -> unit) =
          fun (x4456 : t) ->
            fun (x4457 : string) ->
              Ojs.set_prop_ascii (t_to_js x4456) "localeMatcher"
                (Ojs.string_to_js x4457)
        let (get_style : t -> string) =
          fun (x4458 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4458) "style")
        let (set_style : t -> string -> unit) =
          fun (x4459 : t) ->
            fun (x4460 : string) ->
              Ojs.set_prop_ascii (t_to_js x4459) "style"
                (Ojs.string_to_js x4460)
        let (get_currency : t -> string) =
          fun (x4461 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4461) "currency")
        let (set_currency : t -> string -> unit) =
          fun (x4462 : t) ->
            fun (x4463 : string) ->
              Ojs.set_prop_ascii (t_to_js x4462) "currency"
                (Ojs.string_to_js x4463)
        let (get_currencyDisplay : t -> string) =
          fun (x4464 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4464) "currencyDisplay")
        let (set_currencyDisplay : t -> string -> unit) =
          fun (x4465 : t) ->
            fun (x4466 : string) ->
              Ojs.set_prop_ascii (t_to_js x4465) "currencyDisplay"
                (Ojs.string_to_js x4466)
        let (get_currencySign : t -> string) =
          fun (x4467 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4467) "currencySign")
        let (set_currencySign : t -> string -> unit) =
          fun (x4468 : t) ->
            fun (x4469 : string) ->
              Ojs.set_prop_ascii (t_to_js x4468) "currencySign"
                (Ojs.string_to_js x4469)
        let (get_useGrouping : t -> bool) =
          fun (x4470 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4470) "useGrouping")
        let (set_useGrouping : t -> bool -> unit) =
          fun (x4471 : t) ->
            fun (x4472 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4471) "useGrouping"
                (Ojs.bool_to_js x4472)
        let (get_minimumIntegerDigits : t -> float) =
          fun (x4473 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4473) "minimumIntegerDigits")
        let (set_minimumIntegerDigits : t -> float -> unit) =
          fun (x4474 : t) ->
            fun (x4475 : float) ->
              Ojs.set_prop_ascii (t_to_js x4474) "minimumIntegerDigits"
                (Ojs.float_to_js x4475)
        let (get_minimumFractionDigits : t -> float) =
          fun (x4476 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4476) "minimumFractionDigits")
        let (set_minimumFractionDigits : t -> float -> unit) =
          fun (x4477 : t) ->
            fun (x4478 : float) ->
              Ojs.set_prop_ascii (t_to_js x4477) "minimumFractionDigits"
                (Ojs.float_to_js x4478)
        let (get_maximumFractionDigits : t -> float) =
          fun (x4479 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4479) "maximumFractionDigits")
        let (set_maximumFractionDigits : t -> float -> unit) =
          fun (x4480 : t) ->
            fun (x4481 : float) ->
              Ojs.set_prop_ascii (t_to_js x4480) "maximumFractionDigits"
                (Ojs.float_to_js x4481)
        let (get_minimumSignificantDigits : t -> float) =
          fun (x4482 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4482) "minimumSignificantDigits")
        let (set_minimumSignificantDigits : t -> float -> unit) =
          fun (x4483 : t) ->
            fun (x4484 : float) ->
              Ojs.set_prop_ascii (t_to_js x4483) "minimumSignificantDigits"
                (Ojs.float_to_js x4484)
        let (get_maximumSignificantDigits : t -> float) =
          fun (x4485 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4485) "maximumSignificantDigits")
        let (set_maximumSignificantDigits : t -> float -> unit) =
          fun (x4486 : t) ->
            fun (x4487 : float) ->
              Ojs.set_prop_ascii (t_to_js x4486) "maximumSignificantDigits"
                (Ojs.float_to_js x4487)
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = _Intl_ResolvedNumberFormatOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4489 : Ojs.t) ->
            _Intl_ResolvedNumberFormatOptions_of_js x4489
        and t_to_js : t -> Ojs.t =
          fun (x4488 : _Intl_ResolvedNumberFormatOptions) ->
            _Intl_ResolvedNumberFormatOptions_to_js x4488
        let (get_locale : t -> string) =
          fun (x4490 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4490) "locale")
        let (set_locale : t -> string -> unit) =
          fun (x4491 : t) ->
            fun (x4492 : string) ->
              Ojs.set_prop_ascii (t_to_js x4491) "locale"
                (Ojs.string_to_js x4492)
        let (get_numberingSystem : t -> string) =
          fun (x4493 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4493) "numberingSystem")
        let (set_numberingSystem : t -> string -> unit) =
          fun (x4494 : t) ->
            fun (x4495 : string) ->
              Ojs.set_prop_ascii (t_to_js x4494) "numberingSystem"
                (Ojs.string_to_js x4495)
        let (get_style : t -> string) =
          fun (x4496 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4496) "style")
        let (set_style : t -> string -> unit) =
          fun (x4497 : t) ->
            fun (x4498 : string) ->
              Ojs.set_prop_ascii (t_to_js x4497) "style"
                (Ojs.string_to_js x4498)
        let (get_currency : t -> string) =
          fun (x4499 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4499) "currency")
        let (set_currency : t -> string -> unit) =
          fun (x4500 : t) ->
            fun (x4501 : string) ->
              Ojs.set_prop_ascii (t_to_js x4500) "currency"
                (Ojs.string_to_js x4501)
        let (get_currencyDisplay : t -> string) =
          fun (x4502 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4502) "currencyDisplay")
        let (set_currencyDisplay : t -> string -> unit) =
          fun (x4503 : t) ->
            fun (x4504 : string) ->
              Ojs.set_prop_ascii (t_to_js x4503) "currencyDisplay"
                (Ojs.string_to_js x4504)
        let (get_minimumIntegerDigits : t -> float) =
          fun (x4505 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4505) "minimumIntegerDigits")
        let (set_minimumIntegerDigits : t -> float -> unit) =
          fun (x4506 : t) ->
            fun (x4507 : float) ->
              Ojs.set_prop_ascii (t_to_js x4506) "minimumIntegerDigits"
                (Ojs.float_to_js x4507)
        let (get_minimumFractionDigits : t -> float) =
          fun (x4508 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4508) "minimumFractionDigits")
        let (set_minimumFractionDigits : t -> float -> unit) =
          fun (x4509 : t) ->
            fun (x4510 : float) ->
              Ojs.set_prop_ascii (t_to_js x4509) "minimumFractionDigits"
                (Ojs.float_to_js x4510)
        let (get_maximumFractionDigits : t -> float) =
          fun (x4511 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4511) "maximumFractionDigits")
        let (set_maximumFractionDigits : t -> float -> unit) =
          fun (x4512 : t) ->
            fun (x4513 : float) ->
              Ojs.set_prop_ascii (t_to_js x4512) "maximumFractionDigits"
                (Ojs.float_to_js x4513)
        let (get_minimumSignificantDigits : t -> float) =
          fun (x4514 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4514) "minimumSignificantDigits")
        let (set_minimumSignificantDigits : t -> float -> unit) =
          fun (x4515 : t) ->
            fun (x4516 : float) ->
              Ojs.set_prop_ascii (t_to_js x4515) "minimumSignificantDigits"
                (Ojs.float_to_js x4516)
        let (get_maximumSignificantDigits : t -> float) =
          fun (x4517 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4517) "maximumSignificantDigits")
        let (set_maximumSignificantDigits : t -> float -> unit) =
          fun (x4518 : t) ->
            fun (x4519 : float) ->
              Ojs.set_prop_ascii (t_to_js x4518) "maximumSignificantDigits"
                (Ojs.float_to_js x4519)
        let (get_useGrouping : t -> bool) =
          fun (x4520 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4520) "useGrouping")
        let (set_useGrouping : t -> bool -> unit) =
          fun (x4521 : t) ->
            fun (x4522 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4521) "useGrouping"
                (Ojs.bool_to_js x4522)
      end
    module NumberFormat =
      struct
        type t = _Intl_NumberFormat
        let rec t_of_js : Ojs.t -> t =
          fun (x4524 : Ojs.t) -> _Intl_NumberFormat_of_js x4524
        and t_to_js : t -> Ojs.t =
          fun (x4523 : _Intl_NumberFormat) -> _Intl_NumberFormat_to_js x4523
        let (format : t -> value:float -> string) =
          fun (x4526 : t) ->
            fun ~value:(x4525 : float) ->
              Ojs.string_of_js
                (Ojs.call (t_to_js x4526) "format"
                   [|(Ojs.float_to_js x4525)|])
        let (resolvedOptions : t -> _Intl_ResolvedNumberFormatOptions) =
          fun (x4527 : t) ->
            _Intl_ResolvedNumberFormatOptions_of_js
              (Ojs.call (t_to_js x4527) "resolvedOptions" [||])
      end
    let (numberFormat : anonymous_interface_4) =
      anonymous_interface_4_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
           "NumberFormat")
    module DateTimeFormatOptions =
      struct
        type t = _Intl_DateTimeFormatOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4529 : Ojs.t) -> _Intl_DateTimeFormatOptions_of_js x4529
        and t_to_js : t -> Ojs.t =
          fun (x4528 : _Intl_DateTimeFormatOptions) ->
            _Intl_DateTimeFormatOptions_to_js x4528
        let (get_localeMatcher : t -> [ `best_fit  | `lookup ]) =
          fun (x4530 : t) ->
            let x4531 = Ojs.get_prop_ascii (t_to_js x4530) "localeMatcher" in
            match Ojs.string_of_js x4531 with
            | "best fit" -> `best_fit
            | "lookup" -> `lookup
            | _ -> assert false
        let (set_localeMatcher : t -> [ `best_fit  | `lookup ] -> unit) =
          fun (x4532 : t) ->
            fun (x4533 : [ `best_fit  | `lookup ]) ->
              Ojs.set_prop_ascii (t_to_js x4532) "localeMatcher"
                (match x4533 with
                 | `best_fit -> Ojs.string_to_js "bestFit"
                 | `lookup -> Ojs.string_to_js "lookup")
        let (get_weekday : t -> [ `long  | `narrow  | `short ]) =
          fun (x4534 : t) ->
            let x4535 = Ojs.get_prop_ascii (t_to_js x4534) "weekday" in
            match Ojs.string_of_js x4535 with
            | "long" -> `long
            | "narrow" -> `narrow
            | "short" -> `short
            | _ -> assert false
        let (set_weekday : t -> [ `long  | `narrow  | `short ] -> unit) =
          fun (x4536 : t) ->
            fun (x4537 : [ `long  | `narrow  | `short ]) ->
              Ojs.set_prop_ascii (t_to_js x4536) "weekday"
                (match x4537 with
                 | `long -> Ojs.string_to_js "long"
                 | `narrow -> Ojs.string_to_js "narrow"
                 | `short -> Ojs.string_to_js "short")
        let (get_era : t -> [ `long  | `narrow  | `short ]) =
          fun (x4538 : t) ->
            let x4539 = Ojs.get_prop_ascii (t_to_js x4538) "era" in
            match Ojs.string_of_js x4539 with
            | "long" -> `long
            | "narrow" -> `narrow
            | "short" -> `short
            | _ -> assert false
        let (set_era : t -> [ `long  | `narrow  | `short ] -> unit) =
          fun (x4540 : t) ->
            fun (x4541 : [ `long  | `narrow  | `short ]) ->
              Ojs.set_prop_ascii (t_to_js x4540) "era"
                (match x4541 with
                 | `long -> Ojs.string_to_js "long"
                 | `narrow -> Ojs.string_to_js "narrow"
                 | `short -> Ojs.string_to_js "short")
        let (get_year : t -> [ `two_digit  | `numeric ]) =
          fun (x4542 : t) ->
            let x4543 = Ojs.get_prop_ascii (t_to_js x4542) "year" in
            match Ojs.string_of_js x4543 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_year : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x4544 : t) ->
            fun (x4545 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4544) "year"
                (match x4545 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_month :
          t -> [ `two_digit  | `long  | `narrow  | `numeric  | `short ]) =
          fun (x4546 : t) ->
            let x4547 = Ojs.get_prop_ascii (t_to_js x4546) "month" in
            match Ojs.string_of_js x4547 with
            | "2-digit" -> `two_digit
            | "long" -> `long
            | "narrow" -> `narrow
            | "numeric" -> `numeric
            | "short" -> `short
            | _ -> assert false
        let (set_month :
          t ->
            [ `two_digit  | `long  | `narrow  | `numeric  | `short ] -> unit)
          =
          fun (x4548 : t) ->
            fun
              (x4549 :
                [ `two_digit  | `long  | `narrow  | `numeric  | `short ])
              ->
              Ojs.set_prop_ascii (t_to_js x4548) "month"
                (match x4549 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `long -> Ojs.string_to_js "long"
                 | `narrow -> Ojs.string_to_js "narrow"
                 | `numeric -> Ojs.string_to_js "numeric"
                 | `short -> Ojs.string_to_js "short")
        let (get_day : t -> [ `two_digit  | `numeric ]) =
          fun (x4550 : t) ->
            let x4551 = Ojs.get_prop_ascii (t_to_js x4550) "day" in
            match Ojs.string_of_js x4551 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_day : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x4552 : t) ->
            fun (x4553 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4552) "day"
                (match x4553 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_hour : t -> [ `two_digit  | `numeric ]) =
          fun (x4554 : t) ->
            let x4555 = Ojs.get_prop_ascii (t_to_js x4554) "hour" in
            match Ojs.string_of_js x4555 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_hour : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x4556 : t) ->
            fun (x4557 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4556) "hour"
                (match x4557 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_minute : t -> [ `two_digit  | `numeric ]) =
          fun (x4558 : t) ->
            let x4559 = Ojs.get_prop_ascii (t_to_js x4558) "minute" in
            match Ojs.string_of_js x4559 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_minute : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x4560 : t) ->
            fun (x4561 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4560) "minute"
                (match x4561 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_second : t -> [ `two_digit  | `numeric ]) =
          fun (x4562 : t) ->
            let x4563 = Ojs.get_prop_ascii (t_to_js x4562) "second" in
            match Ojs.string_of_js x4563 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_second : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x4564 : t) ->
            fun (x4565 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4564) "second"
                (match x4565 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_timeZoneName : t -> [ `long  | `short ]) =
          fun (x4566 : t) ->
            let x4567 = Ojs.get_prop_ascii (t_to_js x4566) "timeZoneName" in
            match Ojs.string_of_js x4567 with
            | "long" -> `long
            | "short" -> `short
            | _ -> assert false
        let (set_timeZoneName : t -> [ `long  | `short ] -> unit) =
          fun (x4568 : t) ->
            fun (x4569 : [ `long  | `short ]) ->
              Ojs.set_prop_ascii (t_to_js x4568) "timeZoneName"
                (match x4569 with
                 | `long -> Ojs.string_to_js "long"
                 | `short -> Ojs.string_to_js "short")
        let (get_formatMatcher : t -> [ `basic  | `best_fit ]) =
          fun (x4570 : t) ->
            let x4571 = Ojs.get_prop_ascii (t_to_js x4570) "formatMatcher" in
            match Ojs.string_of_js x4571 with
            | "basic" -> `basic
            | "best fit" -> `best_fit
            | _ -> assert false
        let (set_formatMatcher : t -> [ `basic  | `best_fit ] -> unit) =
          fun (x4572 : t) ->
            fun (x4573 : [ `basic  | `best_fit ]) ->
              Ojs.set_prop_ascii (t_to_js x4572) "formatMatcher"
                (match x4573 with
                 | `basic -> Ojs.string_to_js "basic"
                 | `best_fit -> Ojs.string_to_js "bestFit")
        let (get_hour12 : t -> bool) =
          fun (x4574 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4574) "hour12")
        let (set_hour12 : t -> bool -> unit) =
          fun (x4575 : t) ->
            fun (x4576 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4575) "hour12"
                (Ojs.bool_to_js x4576)
        let (get_timeZone : t -> string) =
          fun (x4577 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4577) "timeZone")
        let (set_timeZone : t -> string -> unit) =
          fun (x4578 : t) ->
            fun (x4579 : string) ->
              Ojs.set_prop_ascii (t_to_js x4578) "timeZone"
                (Ojs.string_to_js x4579)
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = _Intl_ResolvedDateTimeFormatOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4581 : Ojs.t) ->
            _Intl_ResolvedDateTimeFormatOptions_of_js x4581
        and t_to_js : t -> Ojs.t =
          fun (x4580 : _Intl_ResolvedDateTimeFormatOptions) ->
            _Intl_ResolvedDateTimeFormatOptions_to_js x4580
        let (get_locale : t -> string) =
          fun (x4582 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4582) "locale")
        let (set_locale : t -> string -> unit) =
          fun (x4583 : t) ->
            fun (x4584 : string) ->
              Ojs.set_prop_ascii (t_to_js x4583) "locale"
                (Ojs.string_to_js x4584)
        let (get_calendar : t -> string) =
          fun (x4585 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4585) "calendar")
        let (set_calendar : t -> string -> unit) =
          fun (x4586 : t) ->
            fun (x4587 : string) ->
              Ojs.set_prop_ascii (t_to_js x4586) "calendar"
                (Ojs.string_to_js x4587)
        let (get_numberingSystem : t -> string) =
          fun (x4588 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4588) "numberingSystem")
        let (set_numberingSystem : t -> string -> unit) =
          fun (x4589 : t) ->
            fun (x4590 : string) ->
              Ojs.set_prop_ascii (t_to_js x4589) "numberingSystem"
                (Ojs.string_to_js x4590)
        let (get_timeZone : t -> string) =
          fun (x4591 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4591) "timeZone")
        let (set_timeZone : t -> string -> unit) =
          fun (x4592 : t) ->
            fun (x4593 : string) ->
              Ojs.set_prop_ascii (t_to_js x4592) "timeZone"
                (Ojs.string_to_js x4593)
        let (get_hour12 : t -> bool) =
          fun (x4594 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4594) "hour12")
        let (set_hour12 : t -> bool -> unit) =
          fun (x4595 : t) ->
            fun (x4596 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4595) "hour12"
                (Ojs.bool_to_js x4596)
        let (get_weekday : t -> string) =
          fun (x4597 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4597) "weekday")
        let (set_weekday : t -> string -> unit) =
          fun (x4598 : t) ->
            fun (x4599 : string) ->
              Ojs.set_prop_ascii (t_to_js x4598) "weekday"
                (Ojs.string_to_js x4599)
        let (get_era : t -> string) =
          fun (x4600 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4600) "era")
        let (set_era : t -> string -> unit) =
          fun (x4601 : t) ->
            fun (x4602 : string) ->
              Ojs.set_prop_ascii (t_to_js x4601) "era"
                (Ojs.string_to_js x4602)
        let (get_year : t -> string) =
          fun (x4603 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4603) "year")
        let (set_year : t -> string -> unit) =
          fun (x4604 : t) ->
            fun (x4605 : string) ->
              Ojs.set_prop_ascii (t_to_js x4604) "year"
                (Ojs.string_to_js x4605)
        let (get_month : t -> string) =
          fun (x4606 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4606) "month")
        let (set_month : t -> string -> unit) =
          fun (x4607 : t) ->
            fun (x4608 : string) ->
              Ojs.set_prop_ascii (t_to_js x4607) "month"
                (Ojs.string_to_js x4608)
        let (get_day : t -> string) =
          fun (x4609 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4609) "day")
        let (set_day : t -> string -> unit) =
          fun (x4610 : t) ->
            fun (x4611 : string) ->
              Ojs.set_prop_ascii (t_to_js x4610) "day"
                (Ojs.string_to_js x4611)
        let (get_hour : t -> string) =
          fun (x4612 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4612) "hour")
        let (set_hour : t -> string -> unit) =
          fun (x4613 : t) ->
            fun (x4614 : string) ->
              Ojs.set_prop_ascii (t_to_js x4613) "hour"
                (Ojs.string_to_js x4614)
        let (get_minute : t -> string) =
          fun (x4615 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4615) "minute")
        let (set_minute : t -> string -> unit) =
          fun (x4616 : t) ->
            fun (x4617 : string) ->
              Ojs.set_prop_ascii (t_to_js x4616) "minute"
                (Ojs.string_to_js x4617)
        let (get_second : t -> string) =
          fun (x4618 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4618) "second")
        let (set_second : t -> string -> unit) =
          fun (x4619 : t) ->
            fun (x4620 : string) ->
              Ojs.set_prop_ascii (t_to_js x4619) "second"
                (Ojs.string_to_js x4620)
        let (get_timeZoneName : t -> string) =
          fun (x4621 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4621) "timeZoneName")
        let (set_timeZoneName : t -> string -> unit) =
          fun (x4622 : t) ->
            fun (x4623 : string) ->
              Ojs.set_prop_ascii (t_to_js x4622) "timeZoneName"
                (Ojs.string_to_js x4623)
      end
    module DateTimeFormat =
      struct
        type t = _Intl_DateTimeFormat
        let rec t_of_js : Ojs.t -> t =
          fun (x4625 : Ojs.t) -> _Intl_DateTimeFormat_of_js x4625
        and t_to_js : t -> Ojs.t =
          fun (x4624 : _Intl_DateTimeFormat) ->
            _Intl_DateTimeFormat_to_js x4624
        let (format : t -> ?date:_Date or_number -> unit -> string) =
          fun (x4630 : t) ->
            fun ?date:(x4626 : _Date or_number option) ->
              fun () ->
                Ojs.string_of_js
                  (let x4631 = t_to_js x4630 in
                   Ojs.call (Ojs.get_prop_ascii x4631 "format") "apply"
                     [|x4631;((let x4627 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4626 with
                                | Some x4628 ->
                                    ignore
                                      (Ojs.call x4627 "push"
                                         [|(or_number_to_js _Date_to_js x4628)|])
                                | None -> ());
                               x4627))|])
        let (resolvedOptions : t -> _Intl_ResolvedDateTimeFormatOptions) =
          fun (x4632 : t) ->
            _Intl_ResolvedDateTimeFormatOptions_of_js
              (Ojs.call (t_to_js x4632) "resolvedOptions" [||])
      end
    let (dateTimeFormat : anonymous_interface_3) =
      anonymous_interface_3_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
           "DateTimeFormat")
  end
include Intl
