[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
type never = Ojs.t
let rec never_of_js : Ojs.t -> never = fun (x2 : Ojs.t) -> x2
and never_to_js : never -> Ojs.t = fun (x1 : Ojs.t) -> x1
module Never =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x4 : Ojs.t) -> x4
    and t_to_js : t -> Ojs.t = fun (x3 : Ojs.t) -> x3
    exception Ts_Never 
    let absurd _ = raise Ts_Never
  end
type any = Ojs.t
let rec any_of_js : Ojs.t -> any = fun (x6 : Ojs.t) -> x6
and any_to_js : any -> Ojs.t = fun (x5 : Ojs.t) -> x5
module Any =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8 : Ojs.t) -> x8
    and t_to_js : t -> Ojs.t = fun (x7 : Ojs.t) -> x7
    let unsafe_cast x = Obj.magic x
  end
type unknown = Ojs.t
let rec unknown_of_js : Ojs.t -> unknown = fun (x10 : Ojs.t) -> x10
and unknown_to_js : unknown -> Ojs.t = fun (x9 : Ojs.t) -> x9
module Unknown =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x12 : Ojs.t) -> x12
    and t_to_js : t -> Ojs.t = fun (x11 : Ojs.t) -> x11
    let unsafe_cast x = Obj.magic x
  end
type -'a intf = Ojs.t
let intf_to_js _ x = (x : Ojs.t)
let intf_of_js _ x = (x : _ intf)
type ('t, +'a) enum = 'a
let enum_to_js (_ : 't -> Ojs.t) (f : 'a -> Ojs.t) (e : ('t, 'a) enum) =
  (f e : Ojs.t)
let enum_of_js (_ : Ojs.t -> 't) (f : Ojs.t -> 'a) (e : Ojs.t) =
  (f e : ('t, 'a) enum)
module Enum =
  struct
    type ('t, +'a) t = ('t, 'a) enum
    let t_to_js = enum_to_js
    let t_of_js = enum_of_js
    let get_value x = x
  end
type untyped_object = [ `Object ] intf
let rec untyped_object_of_js : Ojs.t -> untyped_object = Obj.magic
and untyped_object_to_js : untyped_object -> Ojs.t = Obj.magic
type untyped_function = [ `Function ] intf
let rec untyped_function_of_js : Ojs.t -> untyped_function = Obj.magic
and untyped_function_to_js : untyped_function -> Ojs.t = Obj.magic
type symbol = [ `Symbol ] intf
let rec symbol_of_js : Ojs.t -> symbol = Obj.magic
and symbol_to_js : symbol -> Ojs.t = Obj.magic
type regexp = [ `RegExp ] intf
let rec regexp_of_js : Ojs.t -> regexp = Obj.magic
and regexp_to_js : regexp -> Ojs.t = Obj.magic
type bigint = [ `BigInt ] intf
let rec bigint_of_js : Ojs.t -> bigint = Obj.magic
and bigint_to_js : bigint -> Ojs.t = Obj.magic
type 'a or_null = 'a option
let rec or_null_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_null = fun (type
  __a) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (x15 : Ojs.t) -> Ojs.option_of_js __a_of_js x15
and or_null_to_js : 'a . ('a -> Ojs.t) -> 'a or_null -> Ojs.t = fun (type
  __a) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (x13 : __a option) -> Ojs.option_to_js __a_to_js x13
type 'a or_undefined = 'a option
let rec or_undefined_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_undefined =
  fun (type __a) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (x19 : Ojs.t) -> Ojs.option_of_js __a_of_js x19
and or_undefined_to_js : 'a . ('a -> Ojs.t) -> 'a or_undefined -> Ojs.t = fun
  (type __a) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (x17 : __a option) -> Ojs.option_to_js __a_to_js x17
type 'a or_null_or_undefined = 'a option
let rec or_null_or_undefined_of_js :
  'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_null_or_undefined = fun (type __a) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (x23 : Ojs.t) -> Ojs.option_of_js __a_of_js x23
and or_null_or_undefined_to_js :
  'a . ('a -> Ojs.t) -> 'a or_null_or_undefined -> Ojs.t = fun (type __a) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (x21 : __a option) -> Ojs.option_to_js __a_to_js x21
type ('a, 'b) and_ = Ojs.t
let rec and__of_js :
  'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) and_ = fun
  (type __a) -> fun (type __b) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) -> fun (x26 : Ojs.t) -> x26
and and__to_js :
  'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) and_ -> Ojs.t = fun
  (type __a) -> fun (type __b) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) -> fun (x25 : Ojs.t) -> x25
module And =
  struct
    type ('a, 'b) t = ('a, 'b) and_
    let rec t_of_js :
      'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) t = fun
      (type __a) -> fun (type __b) ->
      fun (__a_of_js : Ojs.t -> __a) ->
        fun (__b_of_js : Ojs.t -> __b) ->
          fun (x30 : Ojs.t) -> and__of_js __a_of_js __b_of_js x30
    and t_to_js :
      'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) t -> Ojs.t = fun
      (type __a) -> fun (type __b) ->
      fun (__a_to_js : __a -> Ojs.t) ->
        fun (__b_to_js : __b -> Ojs.t) ->
          fun (x27 : (__a, __b) and_) -> and__to_js __a_to_js __b_to_js x27
    let car (x : ('a, 'b) t) = (Obj.magic x : 'a)
    let cdr (x : ('a, 'b) t) = (Obj.magic x : 'b)
  end
type ('a, 'b) intersection2 = ('b, 'a) and_
let rec intersection2_of_js :
  'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) intersection2 =
  fun (type __a) -> fun (type __b) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (x36 : Ojs.t) -> and__of_js __b_of_js __a_of_js x36
and intersection2_to_js :
  'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) intersection2 -> Ojs.t =
  fun (type __a) -> fun (type __b) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (x33 : (__b, __a) and_) -> and__to_js __b_to_js __a_to_js x33
type ('a, 'b, 'c) intersection3 = (('b, 'c) intersection2, 'a) and_
let rec intersection3_of_js :
  'a 'b 'c .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) -> (Ojs.t -> 'c) -> Ojs.t -> ('a, 'b, 'c) intersection3
  = fun (type __a) -> fun (type __b) -> fun (type __c) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (x44 : Ojs.t) ->
          and__of_js
            (fun (x45 : Ojs.t) -> intersection2_of_js __b_of_js __c_of_js x45)
            __a_of_js x44
and intersection3_to_js :
  'a 'b 'c .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) -> ('c -> Ojs.t) -> ('a, 'b, 'c) intersection3 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (x39 : ((__b, __c) intersection2, __a) and_) ->
          and__to_js
            (fun (x40 : (__b, __c) intersection2) ->
               intersection2_to_js __b_to_js __c_to_js x40) __a_to_js x39
type ('a, 'b, 'c, 'd) intersection4 = (('b, 'c, 'd) intersection3, 'a) and_
let rec intersection4_of_js :
  'a 'b 'c 'd .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) -> Ojs.t -> ('a, 'b, 'c, 'd) intersection4
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (x55 : Ojs.t) ->
            and__of_js
              (fun (x56 : Ojs.t) ->
                 intersection3_of_js __b_of_js __c_of_js __d_of_js x56)
              __a_of_js x55
and intersection4_to_js :
  'a 'b 'c 'd .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) -> ('a, 'b, 'c, 'd) intersection4 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (x49 : ((__b, __c, __d) intersection3, __a) and_) ->
            and__to_js
              (fun (x50 : (__b, __c, __d) intersection3) ->
                 intersection3_to_js __b_to_js __c_to_js __d_to_js x50)
              __a_to_js x49
type ('a, 'b, 'c, 'd, 'e) intersection5 =
  (('b, 'c, 'd, 'e) intersection4, 'a) and_
let rec intersection5_of_js :
  'a 'b 'c 'd 'e .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) -> Ojs.t -> ('a, 'b, 'c, 'd, 'e) intersection5
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (x68 : Ojs.t) ->
              and__of_js
                (fun (x69 : Ojs.t) ->
                   intersection4_of_js __b_of_js __c_of_js __d_of_js
                     __e_of_js x69) __a_of_js x68
and intersection5_to_js :
  'a 'b 'c 'd 'e .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) -> ('a, 'b, 'c, 'd, 'e) intersection5 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (x61 : ((__b, __c, __d, __e) intersection4, __a) and_) ->
              and__to_js
                (fun (x62 : (__b, __c, __d, __e) intersection4) ->
                   intersection4_to_js __b_to_js __c_to_js __d_to_js
                     __e_to_js x62) __a_to_js x61
type ('a, 'b, 'c, 'd, 'e, 'f) intersection6 =
  (('b, 'c, 'd, 'e, 'f) intersection5, 'a) and_
let rec intersection6_of_js :
  'a 'b 'c 'd 'e 'f .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f) intersection6
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (x83 : Ojs.t) ->
                and__of_js
                  (fun (x84 : Ojs.t) ->
                     intersection5_of_js __b_of_js __c_of_js __d_of_js
                       __e_of_js __f_of_js x84) __a_of_js x83
and intersection6_to_js :
  'a 'b 'c 'd 'e 'f .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('a, 'b, 'c, 'd, 'e, 'f) intersection6 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (x75 : ((__b, __c, __d, __e, __f) intersection5, __a) and_)
                ->
                and__to_js
                  (fun (x76 : (__b, __c, __d, __e, __f) intersection5) ->
                     intersection5_to_js __b_to_js __c_to_js __d_to_js
                       __e_to_js __f_to_js x76) __a_to_js x75
type ('a, 'b, 'c, 'd, 'e, 'f, 'g) intersection7 =
  (('b, 'c, 'd, 'e, 'f, 'g) intersection6, 'a) and_
let rec intersection7_of_js :
  'a 'b 'c 'd 'e 'f 'g .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                (Ojs.t -> 'g) ->
                  Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f, 'g) intersection7
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (__g_of_js : Ojs.t -> __g) ->
                fun (x100 : Ojs.t) ->
                  and__of_js
                    (fun (x101 : Ojs.t) ->
                       intersection6_of_js __b_of_js __c_of_js __d_of_js
                         __e_of_js __f_of_js __g_of_js x101) __a_of_js x100
and intersection7_to_js :
  'a 'b 'c 'd 'e 'f 'g .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('g -> Ojs.t) ->
                  ('a, 'b, 'c, 'd, 'e, 'f, 'g) intersection7 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (__g_to_js : __g -> Ojs.t) ->
                fun
                  (x91 :
                    ((__b, __c, __d, __e, __f, __g) intersection6, __a) and_)
                  ->
                  and__to_js
                    (fun (x92 : (__b, __c, __d, __e, __f, __g) intersection6)
                       ->
                       intersection6_to_js __b_to_js __c_to_js __d_to_js
                         __e_to_js __f_to_js __g_to_js x92) __a_to_js x91
type ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) intersection8 =
  (('b, 'c, 'd, 'e, 'f, 'g, 'h) intersection7, 'a) and_
let rec intersection8_of_js :
  'a 'b 'c 'd 'e 'f 'g 'h .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                (Ojs.t -> 'g) ->
                  (Ojs.t -> 'h) ->
                    Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) intersection8
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) -> fun (type __h) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (__g_of_js : Ojs.t -> __g) ->
                fun (__h_of_js : Ojs.t -> __h) ->
                  fun (x119 : Ojs.t) ->
                    and__of_js
                      (fun (x120 : Ojs.t) ->
                         intersection7_of_js __b_of_js __c_of_js __d_of_js
                           __e_of_js __f_of_js __g_of_js __h_of_js x120)
                      __a_of_js x119
and intersection8_to_js :
  'a 'b 'c 'd 'e 'f 'g 'h .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('g -> Ojs.t) ->
                  ('h -> Ojs.t) ->
                    ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) intersection8 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) -> fun (type __h) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (__g_to_js : __g -> Ojs.t) ->
                fun (__h_to_js : __h -> Ojs.t) ->
                  fun
                    (x109 :
                      ((__b, __c, __d, __e, __f, __g, __h) intersection7,
                        __a) and_)
                    ->
                    and__to_js
                      (fun
                         (x110 :
                           (__b, __c, __d, __e, __f, __g, __h) intersection7)
                         ->
                         intersection7_to_js __b_to_js __c_to_js __d_to_js
                           __e_to_js __f_to_js __g_to_js __h_to_js x110)
                      __a_to_js x109
module Intersection =
  struct
    let get_0 x = Obj.magic x
    let get_1 x = Obj.magic x
    let get_2 x = Obj.magic x
    let get_3 x = Obj.magic x
    let get_4 x = Obj.magic x
    let get_5 x = Obj.magic x
    let get_6 x = Obj.magic x
  end
type ('a, 'b) or_from_js =
  {
  a_of_js: Ojs.t -> 'a ;
  b_of_js: Ojs.t -> 'b ;
  value: Ojs.t }
type ('a, 'b) or_ =
  | A of 'a 
  | B of 'b 
  | FromJS of ('a, 'b) or_from_js 
let or__to_js a_to_js b_to_js =
  function | A a -> a_to_js a | B b -> b_to_js b | FromJS x -> x.value
let or__of_js a_of_js b_of_js value = FromJS { a_of_js; b_of_js; value }
module Or =
  struct
    type ('a, 'b) t = ('a, 'b) or_
    let rec t_of_js :
      'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) t = fun
      (type __a) -> fun (type __b) ->
      fun (__a_of_js : Ojs.t -> __a) ->
        fun (__b_of_js : Ojs.t -> __b) ->
          fun (x132 : Ojs.t) -> or__of_js __a_of_js __b_of_js x132
    and t_to_js :
      'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) t -> Ojs.t = fun
      (type __a) -> fun (type __b) ->
      fun (__a_to_js : __a -> Ojs.t) ->
        fun (__b_to_js : __b -> Ojs.t) ->
          fun (x129 : (__a, __b) or_) -> or__to_js __a_to_js __b_to_js x129
    let inl (x : 'a) = (A x : ('a, 'b) t)
    let inr (x : 'b) = (B x : ('a, 'b) t)
    let test ~is_left  ~is_right  =
      function
      | A a -> `Left a
      | B b -> `Right b
      | FromJS x ->
          if is_left x.value
          then `Left (x.a_of_js x.value)
          else
            if is_right x.value
            then `Right (x.b_of_js x.value)
            else `Other (x.value)
  end
type ('a, 'b) union2 = ('b, 'a) or_
let rec union2_of_js :
  'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) union2 = fun
  (type __a) -> fun (type __b) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (x138 : Ojs.t) -> or__of_js __b_of_js __a_of_js x138
and union2_to_js :
  'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) union2 -> Ojs.t = fun
  (type __a) -> fun (type __b) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (x135 : (__b, __a) or_) -> or__to_js __b_to_js __a_to_js x135
type ('a, 'b, 'c) union3 = (('b, 'c) union2, 'a) or_
let rec union3_of_js :
  'a 'b 'c .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) -> (Ojs.t -> 'c) -> Ojs.t -> ('a, 'b, 'c) union3
  = fun (type __a) -> fun (type __b) -> fun (type __c) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (x146 : Ojs.t) ->
          or__of_js
            (fun (x147 : Ojs.t) -> union2_of_js __b_of_js __c_of_js x147)
            __a_of_js x146
and union3_to_js :
  'a 'b 'c .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) -> ('c -> Ojs.t) -> ('a, 'b, 'c) union3 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (x141 : ((__b, __c) union2, __a) or_) ->
          or__to_js
            (fun (x142 : (__b, __c) union2) ->
               union2_to_js __b_to_js __c_to_js x142) __a_to_js x141
type ('a, 'b, 'c, 'd) union4 = (('b, 'c, 'd) union3, 'a) or_
let rec union4_of_js :
  'a 'b 'c 'd .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) -> (Ojs.t -> 'd) -> Ojs.t -> ('a, 'b, 'c, 'd) union4
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (x157 : Ojs.t) ->
            or__of_js
              (fun (x158 : Ojs.t) ->
                 union3_of_js __b_of_js __c_of_js __d_of_js x158) __a_of_js
              x157
and union4_to_js :
  'a 'b 'c 'd .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) -> ('d -> Ojs.t) -> ('a, 'b, 'c, 'd) union4 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (x151 : ((__b, __c, __d) union3, __a) or_) ->
            or__to_js
              (fun (x152 : (__b, __c, __d) union3) ->
                 union3_to_js __b_to_js __c_to_js __d_to_js x152) __a_to_js
              x151
type ('a, 'b, 'c, 'd, 'e) union5 = (('b, 'c, 'd, 'e) union4, 'a) or_
let rec union5_of_js :
  'a 'b 'c 'd 'e .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) -> Ojs.t -> ('a, 'b, 'c, 'd, 'e) union5
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (x170 : Ojs.t) ->
              or__of_js
                (fun (x171 : Ojs.t) ->
                   union4_of_js __b_of_js __c_of_js __d_of_js __e_of_js x171)
                __a_of_js x170
and union5_to_js :
  'a 'b 'c 'd 'e .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) -> ('a, 'b, 'c, 'd, 'e) union5 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (x163 : ((__b, __c, __d, __e) union4, __a) or_) ->
              or__to_js
                (fun (x164 : (__b, __c, __d, __e) union4) ->
                   union4_to_js __b_to_js __c_to_js __d_to_js __e_to_js x164)
                __a_to_js x163
type ('a, 'b, 'c, 'd, 'e, 'f) union6 = (('b, 'c, 'd, 'e, 'f) union5, 'a) or_
let rec union6_of_js :
  'a 'b 'c 'd 'e 'f .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) -> Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f) union6
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (x185 : Ojs.t) ->
                or__of_js
                  (fun (x186 : Ojs.t) ->
                     union5_of_js __b_of_js __c_of_js __d_of_js __e_of_js
                       __f_of_js x186) __a_of_js x185
and union6_to_js :
  'a 'b 'c 'd 'e 'f .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) -> ('a, 'b, 'c, 'd, 'e, 'f) union6 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (x177 : ((__b, __c, __d, __e, __f) union5, __a) or_) ->
                or__to_js
                  (fun (x178 : (__b, __c, __d, __e, __f) union5) ->
                     union5_to_js __b_to_js __c_to_js __d_to_js __e_to_js
                       __f_to_js x178) __a_to_js x177
type ('a, 'b, 'c, 'd, 'e, 'f, 'g) union7 =
  (('b, 'c, 'd, 'e, 'f, 'g) union6, 'a) or_
let rec union7_of_js :
  'a 'b 'c 'd 'e 'f 'g .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                (Ojs.t -> 'g) -> Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f, 'g) union7
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (__g_of_js : Ojs.t -> __g) ->
                fun (x202 : Ojs.t) ->
                  or__of_js
                    (fun (x203 : Ojs.t) ->
                       union6_of_js __b_of_js __c_of_js __d_of_js __e_of_js
                         __f_of_js __g_of_js x203) __a_of_js x202
and union7_to_js :
  'a 'b 'c 'd 'e 'f 'g .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('g -> Ojs.t) -> ('a, 'b, 'c, 'd, 'e, 'f, 'g) union7 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (__g_to_js : __g -> Ojs.t) ->
                fun (x193 : ((__b, __c, __d, __e, __f, __g) union6, __a) or_)
                  ->
                  or__to_js
                    (fun (x194 : (__b, __c, __d, __e, __f, __g) union6) ->
                       union6_to_js __b_to_js __c_to_js __d_to_js __e_to_js
                         __f_to_js __g_to_js x194) __a_to_js x193
type ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) union8 =
  (('b, 'c, 'd, 'e, 'f, 'g, 'h) union7, 'a) or_
let rec union8_of_js :
  'a 'b 'c 'd 'e 'f 'g 'h .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                (Ojs.t -> 'g) ->
                  (Ojs.t -> 'h) ->
                    Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) union8
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) -> fun (type __h) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (__g_of_js : Ojs.t -> __g) ->
                fun (__h_of_js : Ojs.t -> __h) ->
                  fun (x221 : Ojs.t) ->
                    or__of_js
                      (fun (x222 : Ojs.t) ->
                         union7_of_js __b_of_js __c_of_js __d_of_js __e_of_js
                           __f_of_js __g_of_js __h_of_js x222) __a_of_js x221
and union8_to_js :
  'a 'b 'c 'd 'e 'f 'g 'h .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('g -> Ojs.t) ->
                  ('h -> Ojs.t) ->
                    ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) union8 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) -> fun (type __h) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (__g_to_js : __g -> Ojs.t) ->
                fun (__h_to_js : __h -> Ojs.t) ->
                  fun
                    (x211 :
                      ((__b, __c, __d, __e, __f, __g, __h) union7, __a) or_)
                    ->
                    or__to_js
                      (fun
                         (x212 : (__b, __c, __d, __e, __f, __g, __h) union7)
                         ->
                         union7_to_js __b_to_js __c_to_js __d_to_js __e_to_js
                           __f_to_js __g_to_js __h_to_js x212) __a_to_js x211
module Union =
  struct
    let inject_0 x = Obj.magic x
    let inject_1 x = Obj.magic x
    let inject_2 x = Obj.magic x
    let inject_3 x = Obj.magic x
    let inject_4 x = Obj.magic x
    let inject_5 x = Obj.magic x
    let inject_6 x = Obj.magic x
  end
type 'a or_string = [ `String of string  | `Other of 'a ]
let rec or_string_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_string =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "string" -> `String (Ojs.string_of_js x)
      | _ -> `Other (a_of_js x)
and or_string_to_js : 'a . ('a -> Ojs.t) -> 'a or_string -> Ojs.t =
  fun a_to_js ->
    function | `String x -> Ojs.string_to_js x | `Other x -> a_to_js x
type 'a or_number = [ `Number of float  | `Other of 'a ]
let rec or_number_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_number =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "number" -> `Number (Ojs.float_of_js x)
      | _ -> `Other (a_of_js x)
and or_number_to_js : 'a . ('a -> Ojs.t) -> 'a or_number -> Ojs.t =
  fun a_to_js ->
    function | `Number x -> Ojs.float_to_js x | `Other x -> a_to_js x
type 'a or_boolean = [ `Boolean of bool  | `Other of 'a ]
let rec or_boolean_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_boolean =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "boolean" -> `Boolean (Ojs.bool_of_js x)
      | _ -> `Other (a_of_js x)
and or_boolean_to_js : 'a . ('a -> Ojs.t) -> 'a or_boolean -> Ojs.t =
  fun a_to_js ->
    function | `Boolean x -> Ojs.bool_to_js x | `Other x -> a_to_js x
type 'a or_symbol = [ `Symbol of symbol  | `Other of 'a ]
let rec or_symbol_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_symbol =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "symbol" -> `Symbol (symbol_of_js x)
      | _ -> `Other (a_of_js x)
and or_symbol_to_js : 'a . ('a -> Ojs.t) -> 'a or_symbol -> Ojs.t =
  fun a_to_js ->
    function | `Symbol x -> symbol_to_js x | `Other x -> a_to_js x
type 'a or_bigint = [ `BigInt of bigint  | `Other of 'a ]
let rec or_bigint_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_bigint =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "bigint" -> `BigInt (bigint_of_js x)
      | _ -> `Other (a_of_js x)
and or_bigint_to_js : 'a . ('a -> Ojs.t) -> 'a or_bigint -> Ojs.t =
  fun a_to_js ->
    function | `BigInt x -> bigint_to_js x | `Other x -> a_to_js x
let (is_array : Ojs.t -> bool) =
  fun (x231 : Ojs.t) ->
    Ojs.bool_of_js
      (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray" [|x231|])
type ('a, 't) or_array = [ `Array of 't list  | `Other of 'a ]
let rec or_array_of_js :
  'a 't . (Ojs.t -> 'a) -> (Ojs.t -> 't) -> Ojs.t -> ('a, 't) or_array =
  fun a_of_js ->
    fun t_of_js ->
      fun x ->
        if is_array x
        then `Array (Ojs.list_of_js t_of_js x)
        else `Other (a_of_js x)
and or_array_to_js :
  'a 't . ('a -> Ojs.t) -> ('t -> Ojs.t) -> ('a, 't) or_array -> Ojs.t =
  fun a_to_js ->
    fun t_to_js ->
      function | `Array x -> Ojs.list_to_js t_to_js x | `Other x -> a_to_js x
type ('a, 'cases) or_enum = [ `Enum of 'cases  | `Other of 'a ]
let rec or_enum_of_js :
  'a 'cases .
    (Ojs.t -> 'a) -> (Ojs.t -> 'cases) -> Ojs.t -> ('a, 'cases) or_enum
  =
  fun a_of_js ->
    fun cases_of_js ->
      fun x -> try `Enum (cases_of_js x) with | _ -> `Other (a_of_js x)
and or_enum_to_js :
  'a 'cases .
    ('a -> Ojs.t) -> ('cases -> Ojs.t) -> ('a, 'cases) or_enum -> Ojs.t
  =
  fun a_to_js ->
    fun cases_to_js ->
      function | `Enum cases -> cases_to_js cases | `Other x -> a_to_js x
external pure_js_expr : string -> Ojs.t = "caml_pure_js_expr"
module Internal =
  struct
    module AnonymousInterfaces =
      struct
        type anonymous_interface_0 = [ `anonymous_interface_0 ] intf
        let rec anonymous_interface_0_of_js : Ojs.t -> anonymous_interface_0
          = Obj.magic
        and anonymous_interface_0_to_js : anonymous_interface_0 -> Ojs.t =
          Obj.magic
        type anonymous_interface_1 = [ `anonymous_interface_1 ] intf
        let rec anonymous_interface_1_of_js : Ojs.t -> anonymous_interface_1
          = Obj.magic
        and anonymous_interface_1_to_js : anonymous_interface_1 -> Ojs.t =
          Obj.magic
        type anonymous_interface_2 = [ `anonymous_interface_2 ] intf
        let rec anonymous_interface_2_of_js : Ojs.t -> anonymous_interface_2
          = Obj.magic
        and anonymous_interface_2_to_js : anonymous_interface_2 -> Ojs.t =
          Obj.magic
        type anonymous_interface_3 = [ `anonymous_interface_3 ] intf
        let rec anonymous_interface_3_of_js : Ojs.t -> anonymous_interface_3
          = Obj.magic
        and anonymous_interface_3_to_js : anonymous_interface_3 -> Ojs.t =
          Obj.magic
        type anonymous_interface_4 = [ `anonymous_interface_4 ] intf
        let rec anonymous_interface_4_of_js : Ojs.t -> anonymous_interface_4
          = Obj.magic
        and anonymous_interface_4_to_js : anonymous_interface_4 -> Ojs.t =
          Obj.magic
        type ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5 =
          [ `anonymous_interface_5 ] intf
        let rec anonymous_interface_5_of_js :
          'A 'A0 'A1 'A2 'A3 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'A3) ->
                      (Ojs.t -> 'R) ->
                        Ojs.t ->
                          ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5
          =
          fun _A ->
            fun _A0 -> fun _A1 -> fun _A2 -> fun _A3 -> fun _R -> Obj.magic
        and anonymous_interface_5_to_js :
          'A 'A0 'A1 'A2 'A3 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('A3 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5 ->
                          Ojs.t
          =
          fun _A ->
            fun _A0 -> fun _A1 -> fun _A2 -> fun _A3 -> fun _R -> Obj.magic
        type ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6 =
          [ `anonymous_interface_6 ] intf
        let rec anonymous_interface_6_of_js :
          'A 'A0 'A1 'A2 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'R) ->
                      Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6
          = fun _A -> fun _A0 -> fun _A1 -> fun _A2 -> fun _R -> Obj.magic
        and anonymous_interface_6_to_js :
          'A 'A0 'A1 'A2 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('R -> Ojs.t) ->
                      ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6 -> Ojs.t
          = fun _A -> fun _A0 -> fun _A1 -> fun _A2 -> fun _R -> Obj.magic
        type ('A, 'A0, 'A1, 'R) anonymous_interface_7 =
          [ `anonymous_interface_7 ] intf
        let rec anonymous_interface_7_of_js :
          'A 'A0 'A1 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'R) ->
                    Ojs.t -> ('A, 'A0, 'A1, 'R) anonymous_interface_7
          = fun _A -> fun _A0 -> fun _A1 -> fun _R -> Obj.magic
        and anonymous_interface_7_to_js :
          'A 'A0 'A1 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('R -> Ojs.t) ->
                    ('A, 'A0, 'A1, 'R) anonymous_interface_7 -> Ojs.t
          = fun _A -> fun _A0 -> fun _A1 -> fun _R -> Obj.magic
        type ('A, 'A0, 'R) anonymous_interface_8 =
          [ `anonymous_interface_8 ] intf
        let rec anonymous_interface_8_of_js :
          'A 'A0 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) anonymous_interface_8
          = fun _A -> fun _A0 -> fun _R -> Obj.magic
        and anonymous_interface_8_to_js :
          'A 'A0 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('R -> Ojs.t) -> ('A, 'A0, 'R) anonymous_interface_8 -> Ojs.t
          = fun _A -> fun _A0 -> fun _R -> Obj.magic
        type ('A, 'R) anonymous_interface_9 = [ `anonymous_interface_9 ] intf
        let rec anonymous_interface_9_of_js :
          'A 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) anonymous_interface_9
          = fun _A -> fun _R -> Obj.magic
        and anonymous_interface_9_to_js :
          'A 'R .
            ('A -> Ojs.t) ->
              ('R -> Ojs.t) -> ('A, 'R) anonymous_interface_9 -> Ojs.t
          = fun _A -> fun _R -> Obj.magic
        type ('A, 'T) anonymous_interface_10 =
          [ `anonymous_interface_10 ] intf
        let rec anonymous_interface_10_of_js :
          'A 'T .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) anonymous_interface_10
          = fun _A -> fun _T -> Obj.magic
        and anonymous_interface_10_to_js :
          'A 'T .
            ('A -> Ojs.t) ->
              ('T -> Ojs.t) -> ('A, 'T) anonymous_interface_10 -> Ojs.t
          = fun _A -> fun _T -> Obj.magic
        type ('AX, 'R) anonymous_interface_11 =
          [ `anonymous_interface_11 ] intf
        let rec anonymous_interface_11_of_js :
          'AX 'R .
            (Ojs.t -> 'AX) ->
              (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) anonymous_interface_11
          = fun _AX -> fun _R -> Obj.magic
        and anonymous_interface_11_to_js :
          'AX 'R .
            ('AX -> Ojs.t) ->
              ('R -> Ojs.t) -> ('AX, 'R) anonymous_interface_11 -> Ojs.t
          = fun _AX -> fun _R -> Obj.magic
        type 'T anonymous_interface_12 = [ `anonymous_interface_12 ] intf
        let rec anonymous_interface_12_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T anonymous_interface_12 =
          fun _T -> Obj.magic
        and anonymous_interface_12_to_js :
          'T . ('T -> Ojs.t) -> 'T anonymous_interface_12 -> Ojs.t =
          fun _T -> Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
let (naN : float) = Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : float) =
  Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x232 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x232)|])
let (parseInt : string -> ?radix:float -> unit -> float) =
  fun (x233 : string) ->
    fun ?radix:(x234 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x237 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x237 "parseInt") "apply"
             [|x237;((let x235 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x235 "push" [|(Ojs.string_to_js x233)|]);
                      (match x234 with
                       | Some x236 ->
                           ignore
                             (Ojs.call x235 "push" [|(Ojs.float_to_js x236)|])
                       | None -> ());
                      x235))|])
let (parseFloat : string:string -> float) =
  fun ~string:(x238 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x238)|])
let (isNaN : float -> bool) =
  fun (x239 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x239)|])
let (isFinite : float -> bool) =
  fun (x240 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x240)|])
let (decodeURI : string -> string) =
  fun (x241 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x241)|])
let (decodeURIComponent : string -> string) =
  fun (x242 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x242)|])
let (encodeURI : string -> string) =
  fun (x243 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x243)|])
let (encodeURIComponent : bool or_string or_number -> string) =
  fun (x244 : bool or_string or_number) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(or_number_to_js
              (fun (x245 : bool or_string) ->
                 or_string_to_js Ojs.bool_to_js x245) x244)|])
let (escape : string -> string) =
  fun (x247 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x247)|])
let (unescape : string -> string) =
  fun (x248 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x248)|])
module Symbol =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x250 : Ojs.t) -> x250
    and t_to_js : t -> Ojs.t = fun (x249 : Ojs.t) -> x249
    let (toString : t -> string) =
      fun (x251 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x251) "toString" [||])
    let (valueOf : t -> symbol) =
      fun (x252 : t) -> symbol_of_js (Ojs.call (t_to_js x252) "valueOf" [||])
  end
module PropertyKey =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x254 : Ojs.t) -> x254
    and t_to_js : t -> Ojs.t = fun (x253 : Ojs.t) -> x253
  end
module PropertyDescriptor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x256 : Ojs.t) -> x256
    and t_to_js : t -> Ojs.t = fun (x255 : Ojs.t) -> x255
    let (get_configurable : t -> bool) =
      fun (x257 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x257) "configurable")
    let (set_configurable : t -> bool -> unit) =
      fun (x258 : t) ->
        fun (x259 : bool) ->
          Ojs.set_prop_ascii (t_to_js x258) "configurable"
            (Ojs.bool_to_js x259)
    let (get_enumerable : t -> bool) =
      fun (x260 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x260) "enumerable")
    let (set_enumerable : t -> bool -> unit) =
      fun (x261 : t) ->
        fun (x262 : bool) ->
          Ojs.set_prop_ascii (t_to_js x261) "enumerable"
            (Ojs.bool_to_js x262)
    let (get_value : t -> any) =
      fun (x263 : t) -> any_of_js (Ojs.get_prop_ascii (t_to_js x263) "value")
    let (set_value : t -> any -> unit) =
      fun (x264 : t) ->
        fun (x265 : any) ->
          Ojs.set_prop_ascii (t_to_js x264) "value" (any_to_js x265)
    let (get_writable : t -> bool) =
      fun (x266 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x266) "writable")
    let (set_writable : t -> bool -> unit) =
      fun (x267 : t) ->
        fun (x268 : bool) ->
          Ojs.set_prop_ascii (t_to_js x267) "writable" (Ojs.bool_to_js x268)
    let (get_ : t -> any) =
      fun (x269 : t) -> any_of_js (Ojs.call (t_to_js x269) "get" [||])
    let (set_ : t -> any -> unit) =
      fun (x271 : t) ->
        fun (x270 : any) ->
          ignore (Ojs.call (t_to_js x271) "set" [|(any_to_js x270)|])
  end
module PropertyDescriptorMap =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x273 : Ojs.t) -> x273
    and t_to_js : t -> Ojs.t = fun (x272 : Ojs.t) -> x272
    let (get : t -> string -> PropertyDescriptor.t) =
      fun (x274 : t) ->
        fun (x275 : string) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (t_to_js x274) (Ojs.string_to_js x275))
    let (set : t -> string -> PropertyDescriptor.t -> unit) =
      fun (x276 : t) ->
        fun (x277 : string) ->
          fun (x278 : PropertyDescriptor.t) ->
            Ojs.set_prop (t_to_js x276) (Ojs.string_to_js x277)
              (PropertyDescriptor.t_to_js x278)
  end
module Partial =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x280 : Ojs.t) -> x280
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x279 : Ojs.t) -> x279
  end
module Required =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x282 : Ojs.t) -> x282
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x281 : Ojs.t) -> x281
  end
module Readonly =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x284 : Ojs.t) -> x284
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x283 : Ojs.t) -> x283
  end
module Pick =
  struct
    type ('T, 'K) t = Ojs.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) -> fun (x286 : Ojs.t) -> x286
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) -> fun (x285 : Ojs.t) -> x285
  end
module Record =
  struct
    type ('K, 'T) t = Ojs.t
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) -> fun (x288 : Ojs.t) -> x288
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) -> fun (x287 : Ojs.t) -> x287
  end
module Exclude =
  struct
    type ('T, 'U) t = Ojs.t
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) -> fun (x290 : Ojs.t) -> x290
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) -> fun (x289 : Ojs.t) -> x289
  end
module Extract =
  struct
    type ('T, 'U) t = Ojs.t
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) -> fun (x292 : Ojs.t) -> x292
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) -> fun (x291 : Ojs.t) -> x291
  end
module Omit =
  struct
    type ('T, 'K) t = Ojs.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) -> fun (x294 : Ojs.t) -> x294
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) -> fun (x293 : Ojs.t) -> x293
  end
module NonNullable =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x296 : Ojs.t) -> x296
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x295 : Ojs.t) -> x295
  end
module Parameters =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x298 : Ojs.t) -> x298
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x297 : Ojs.t) -> x297
  end
module ConstructorParameters =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x300 : Ojs.t) -> x300
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x299 : Ojs.t) -> x299
  end
module ReturnType =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x302 : Ojs.t) -> x302
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x301 : Ojs.t) -> x301
  end
module InstanceType =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x304 : Ojs.t) -> x304
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x303 : Ojs.t) -> x303
  end
module ThisType =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x306 : Ojs.t) -> x306
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x305 : Ojs.t) -> x305
  end
module Function =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x308 : Ojs.t) -> x308
    and t_to_js : t -> Ojs.t = fun (x307 : Ojs.t) -> x307
    let (apply_ : t -> this:t -> thisArg:any -> ?argArray:any -> unit -> any)
      =
      fun (x314 : t) ->
        fun ~this:(x309 : t) ->
          fun ~thisArg:(x310 : any) ->
            fun ?argArray:(x311 : any option) ->
              fun () ->
                any_of_js
                  (let x315 = t_to_js x314 in
                   Ojs.call (Ojs.get_prop_ascii x315 "apply") "apply"
                     [|x315;((let x312 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x312 "push" [|(t_to_js x309)|]);
                              ignore
                                (Ojs.call x312 "push" [|(any_to_js x310)|]);
                              (match x311 with
                               | Some x313 ->
                                   ignore
                                     (Ojs.call x312 "push"
                                        [|(any_to_js x313)|])
                               | None -> ());
                              x312))|])
    let (call : t -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x321 : t) ->
        fun ~this:(x316 : t) ->
          fun ~thisArg:(x317 : any) ->
            fun ~argArray:(x318 : any list) ->
              any_of_js
                (let x322 = t_to_js x321 in
                 Ojs.call (Ojs.get_prop_ascii x322 "call") "apply"
                   [|x322;((let x319 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore (Ojs.call x319 "push" [|(t_to_js x316)|]);
                            ignore
                              (Ojs.call x319 "push" [|(any_to_js x317)|]);
                            List.iter
                              (fun (x320 : any) ->
                                 ignore
                                   (Ojs.call x319 "push" [|(any_to_js x320)|]))
                              x318;
                            x319))|])
    let (bind : t -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x328 : t) ->
        fun ~this:(x323 : t) ->
          fun ~thisArg:(x324 : any) ->
            fun ~argArray:(x325 : any list) ->
              any_of_js
                (let x329 = t_to_js x328 in
                 Ojs.call (Ojs.get_prop_ascii x329 "bind") "apply"
                   [|x329;((let x326 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore (Ojs.call x326 "push" [|(t_to_js x323)|]);
                            ignore
                              (Ojs.call x326 "push" [|(any_to_js x324)|]);
                            List.iter
                              (fun (x327 : any) ->
                                 ignore
                                   (Ojs.call x326 "push" [|(any_to_js x327)|]))
                              x325;
                            x326))|])
    let (toString : t -> string) =
      fun (x330 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x330) "toString" [||])
    let (get_prototype : t -> any) =
      fun (x331 : t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js x331) "prototype")
    let (set_prototype : t -> any -> unit) =
      fun (x332 : t) ->
        fun (x333 : any) ->
          Ojs.set_prop_ascii (t_to_js x332) "prototype" (any_to_js x333)
    let (get_length : t -> float) =
      fun (x334 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x334) "length")
    let (get_arguments : t -> any) =
      fun (x335 : t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js x335) "arguments")
    let (set_arguments : t -> any -> unit) =
      fun (x336 : t) ->
        fun (x337 : any) ->
          Ojs.set_prop_ascii (t_to_js x336) "arguments" (any_to_js x337)
    let (get_caller : t -> t) =
      fun (x338 : t) -> t_of_js (Ojs.get_prop_ascii (t_to_js x338) "caller")
    let (set_caller : t -> t -> unit) =
      fun (x339 : t) ->
        fun (x340 : t) ->
          Ojs.set_prop_ascii (t_to_js x339) "caller" (t_to_js x340)
    let (create : string list -> t) =
      fun (x341 : string list) ->
        t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x342 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x343 : string) ->
                   ignore (Ojs.call x342 "push" [|(Ojs.string_to_js x343)|]))
                x341;
              x342))
  end
module FunctionConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x345 : Ojs.t) -> x345
    and t_to_js : t -> Ojs.t = fun (x344 : Ojs.t) -> x344
    let (create : t -> string list -> Function.t) =
      fun (x349 : t) ->
        fun (x346 : string list) ->
          Function.t_of_js
            (Ojs.new_obj_arr (t_to_js x349)
               (let x347 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x348 : string) ->
                     ignore
                       (Ojs.call x347 "push" [|(Ojs.string_to_js x348)|]))
                  x346;
                x347))
    let (apply : t -> string list -> Function.t) =
      fun (x353 : t) ->
        fun (x350 : string list) ->
          Function.t_of_js
            (Ojs.call (t_to_js x353) "apply"
               [|Ojs.null;((let x351 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x352 : string) ->
                                 ignore
                                   (Ojs.call x351 "push"
                                      [|(Ojs.string_to_js x352)|])) x350;
                            x351))|])
    let (get_prototype : t -> Function.t) =
      fun (x354 : t) ->
        Function.t_of_js (Ojs.get_prop_ascii (t_to_js x354) "prototype")
  end
let (function_ : FunctionConstructor.t) =
  FunctionConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Function")
module Object =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x356 : Ojs.t) -> x356
    and t_to_js : t -> Ojs.t = fun (x355 : Ojs.t) -> x355
    let (get_constructor : t -> Function.t) =
      fun (x357 : t) ->
        Function.t_of_js (Ojs.get_prop_ascii (t_to_js x357) "constructor")
    let (set_constructor : t -> Function.t -> unit) =
      fun (x358 : t) ->
        fun (x359 : Function.t) ->
          Ojs.set_prop_ascii (t_to_js x358) "constructor"
            (Function.t_to_js x359)
    let (toString : t -> string) =
      fun (x360 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x360) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x361 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x361) "toLocaleString" [||])
    let (valueOf : t -> t) =
      fun (x362 : t) -> t_of_js (Ojs.call (t_to_js x362) "valueOf" [||])
    let (hasOwnProperty : t -> PropertyKey.t -> bool) =
      fun (x364 : t) ->
        fun (x363 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x364) "hasOwnProperty"
               [|(PropertyKey.t_to_js x363)|])
    let (isPrototypeOf : t -> t -> bool) =
      fun (x366 : t) ->
        fun (x365 : t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x366) "isPrototypeOf" [|(t_to_js x365)|])
    let (propertyIsEnumerable : t -> PropertyKey.t -> bool) =
      fun (x368 : t) ->
        fun (x367 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x368) "propertyIsEnumerable"
               [|(PropertyKey.t_to_js x367)|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x369 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x370 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x369 with
                 | Some x371 ->
                     ignore (Ojs.call x370 "push" [|(any_to_js x371)|])
                 | None -> ());
                x370))
    let (getPrototypeOf : any -> any) =
      fun (x372 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x372)|])
    let (getOwnPropertyDescriptor :
      any -> p:PropertyKey.t -> PropertyDescriptor.t or_undefined) =
      fun (x373 : any) ->
        fun ~p:(x374 : PropertyKey.t) ->
          or_undefined_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x373);(PropertyKey.t_to_js x374)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x376 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x376)|])
    let (create_ : untyped_object or_null -> any) =
      fun (x378 : untyped_object or_null) ->
        any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Object")
             [|(or_null_to_js untyped_object_to_js x378)|])
    let (create_' :
      untyped_object or_null ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          any)
      =
      fun (x380 : untyped_object or_null) ->
        fun
          ~properties:(x382 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          any_of_js
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Object")
               [|(or_null_to_js untyped_object_to_js x380);(intersection2_to_js
                                                              PropertyDescriptorMap.t_to_js
                                                              (fun
                                                                 (x384 :
                                                                   any
                                                                    ThisType.t)
                                                                 ->
                                                                 ThisType.t_to_js
                                                                   any_to_js
                                                                   x384) x382)|])
    let (defineProperty :
      t ->
        any ->
          p:PropertyKey.t ->
            attributes:(PropertyDescriptor.t, any ThisType.t) intersection2
              -> any)
      =
      fun (x386 : t) ->
        fun (x387 : any) ->
          fun ~p:(x388 : PropertyKey.t) ->
            fun
              ~attributes:(x389 :
                            (PropertyDescriptor.t, any ThisType.t)
                              intersection2)
              ->
              any_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                   "defineProperty"
                   [|(t_to_js x386);(any_to_js x387);(PropertyKey.t_to_js
                                                        x388);(intersection2_to_js
                                                                 PropertyDescriptor.t_to_js
                                                                 (fun
                                                                    (x391 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x391)
                                                                 x389)|])
    let (defineProperties :
      t ->
        any ->
          properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2
            -> any)
      =
      fun (x393 : t) ->
        fun (x394 : any) ->
          fun
            ~properties:(x395 :
                          (PropertyDescriptorMap.t, any ThisType.t)
                            intersection2)
            ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperties"
                 [|(t_to_js x393);(any_to_js x394);(intersection2_to_js
                                                      PropertyDescriptorMap.t_to_js
                                                      (fun
                                                         (x397 :
                                                           any ThisType.t)
                                                         ->
                                                         ThisType.t_to_js
                                                           any_to_js x397)
                                                      x395)|])
    let (seal : 'T -> 'T) =
      fun (x399 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x399)|])
    let (freeze : 'T list -> 'T list) =
      fun (x400 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Ojs.list_to_js Obj.magic x400)|])
    let (freeze' : 'T -> 'T) =
      fun (x403 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x403)|])
    let (freeze'' : 'T -> 'T Readonly.t) =
      fun (x404 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x404)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x406 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x406)|])
    let (isSealed : any -> bool) =
      fun (x407 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x407)|])
    let (isFrozen : any -> bool) =
      fun (x408 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x408)|])
    let (isExtensible : any -> bool) =
      fun (x409 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x409)|])
    let (keys : untyped_object -> string list) =
      fun (x410 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x410)|])
  end
module ObjectConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x413 : Ojs.t) -> x413
    and t_to_js : t -> Ojs.t = fun (x412 : Ojs.t) -> x412
    let (create : t -> ?value:any -> unit -> Object.t) =
      fun (x417 : t) ->
        fun ?value:(x414 : any option) ->
          fun () ->
            Object.t_of_js
              (Ojs.new_obj_arr (t_to_js x417)
                 (let x415 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x414 with
                   | Some x416 ->
                       ignore (Ojs.call x415 "push" [|(any_to_js x416)|])
                   | None -> ());
                  x415))
    let (apply : t -> any) =
      fun (x418 : t) -> any_of_js (Ojs.apply (t_to_js x418) [||])
    let (apply' : t -> any -> any) =
      fun (x420 : t) ->
        fun (x419 : any) ->
          any_of_js (Ojs.apply (t_to_js x420) [|(any_to_js x419)|])
    let (get_prototype : t -> Object.t) =
      fun (x421 : t) ->
        Object.t_of_js (Ojs.get_prop_ascii (t_to_js x421) "prototype")
    let (getPrototypeOf : t -> any -> any) =
      fun (x423 : t) ->
        fun (x422 : any) ->
          any_of_js
            (Ojs.call (t_to_js x423) "getPrototypeOf" [|(any_to_js x422)|])
    let (getOwnPropertyDescriptor :
      t -> any -> p:PropertyKey.t -> PropertyDescriptor.t or_undefined) =
      fun (x426 : t) ->
        fun (x424 : any) ->
          fun ~p:(x425 : PropertyKey.t) ->
            or_undefined_of_js PropertyDescriptor.t_of_js
              (Ojs.call (t_to_js x426) "getOwnPropertyDescriptor"
                 [|(any_to_js x424);(PropertyKey.t_to_js x425)|])
    let (getOwnPropertyNames : t -> any -> string list) =
      fun (x429 : t) ->
        fun (x428 : any) ->
          Ojs.list_of_js Ojs.string_of_js
            (Ojs.call (t_to_js x429) "getOwnPropertyNames"
               [|(any_to_js x428)|])
    let (create_ : t -> untyped_object or_null -> any) =
      fun (x433 : t) ->
        fun (x431 : untyped_object or_null) ->
          any_of_js
            (Ojs.call (t_to_js x433) "create"
               [|(or_null_to_js untyped_object_to_js x431)|])
    let (create_' :
      t ->
        untyped_object or_null ->
          properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2
            -> any)
      =
      fun (x440 : t) ->
        fun (x434 : untyped_object or_null) ->
          fun
            ~properties:(x436 :
                          (PropertyDescriptorMap.t, any ThisType.t)
                            intersection2)
            ->
            any_of_js
              (Ojs.call (t_to_js x440) "create"
                 [|(or_null_to_js untyped_object_to_js x434);(intersection2_to_js
                                                                PropertyDescriptorMap.t_to_js
                                                                (fun
                                                                   (x438 :
                                                                    any
                                                                    ThisType.t)
                                                                   ->
                                                                   ThisType.t_to_js
                                                                    any_to_js
                                                                    x438)
                                                                x436)|])
    let (defineProperty :
      t ->
        any ->
          p:PropertyKey.t ->
            attributes:(PropertyDescriptor.t, any ThisType.t) intersection2
              -> any)
      =
      fun (x447 : t) ->
        fun (x441 : any) ->
          fun ~p:(x442 : PropertyKey.t) ->
            fun
              ~attributes:(x443 :
                            (PropertyDescriptor.t, any ThisType.t)
                              intersection2)
              ->
              any_of_js
                (Ojs.call (t_to_js x447) "defineProperty"
                   [|(any_to_js x441);(PropertyKey.t_to_js x442);(intersection2_to_js
                                                                    PropertyDescriptor.t_to_js
                                                                    (
                                                                    fun
                                                                    (x445 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x445)
                                                                    x443)|])
    let (defineProperties :
      t ->
        any ->
          properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2
            -> any)
      =
      fun (x453 : t) ->
        fun (x448 : any) ->
          fun
            ~properties:(x449 :
                          (PropertyDescriptorMap.t, any ThisType.t)
                            intersection2)
            ->
            any_of_js
              (Ojs.call (t_to_js x453) "defineProperties"
                 [|(any_to_js x448);(intersection2_to_js
                                       PropertyDescriptorMap.t_to_js
                                       (fun (x451 : any ThisType.t) ->
                                          ThisType.t_to_js any_to_js x451)
                                       x449)|])
    let (seal : t -> 'T -> 'T) =
      fun (x455 : t) ->
        fun (x454 : 'T) ->
          Obj.magic (Ojs.call (t_to_js x455) "seal" [|(Obj.magic x454)|])
    let (freeze : t -> 'T list -> 'T list) =
      fun (x458 : t) ->
        fun (x456 : 'T list) ->
          Ojs.list_of_js Obj.magic
            (Ojs.call (t_to_js x458) "freeze"
               [|(Ojs.list_to_js Obj.magic x456)|])
    let (freeze' : t -> 'T -> 'T) =
      fun (x461 : t) ->
        fun (x460 : 'T) ->
          Obj.magic (Ojs.call (t_to_js x461) "freeze" [|(Obj.magic x460)|])
    let (freeze'' : t -> 'T -> 'T Readonly.t) =
      fun (x463 : t) ->
        fun (x462 : 'T) ->
          Readonly.t_of_js Obj.magic
            (Ojs.call (t_to_js x463) "freeze" [|(Obj.magic x462)|])
    let (preventExtensions : t -> 'T -> 'T) =
      fun (x466 : t) ->
        fun (x465 : 'T) ->
          Obj.magic
            (Ojs.call (t_to_js x466) "preventExtensions" [|(Obj.magic x465)|])
    let (isSealed : t -> any -> bool) =
      fun (x468 : t) ->
        fun (x467 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x468) "isSealed" [|(any_to_js x467)|])
    let (isFrozen : t -> any -> bool) =
      fun (x470 : t) ->
        fun (x469 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x470) "isFrozen" [|(any_to_js x469)|])
    let (isExtensible : t -> any -> bool) =
      fun (x472 : t) ->
        fun (x471 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x472) "isExtensible" [|(any_to_js x471)|])
    let (keys : t -> untyped_object -> string list) =
      fun (x474 : t) ->
        fun (x473 : untyped_object) ->
          Ojs.list_of_js Ojs.string_of_js
            (Ojs.call (t_to_js x474) "keys" [|(untyped_object_to_js x473)|])
  end
let (object_ : ObjectConstructor.t) =
  ObjectConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Object")
module ThisParameterType =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x477 : Ojs.t) -> x477
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x476 : Ojs.t) -> x476
  end
module OmitThisParameter =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x479 : Ojs.t) -> x479
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x478 : Ojs.t) -> x478
  end
module CallableFunction =
  struct
    include struct include Function end
    let (apply_ : t -> this:(this:'T -> 'R) -> thisArg:'T -> 'R) =
      fun (x483 : t) ->
        fun ~this:(x480 : this:'T -> 'R) ->
          fun ~thisArg:(x482 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js x483) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x481 : Ojs.t) ->
                         Obj.magic (x480 ~this:(Obj.magic x481))));(Obj.magic
                                                                    x482)|])
    let (apply_all :
      t ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x489 : t) ->
        fun ~this:(x484 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x487 : 'T) ->
            fun ~args:(x488 : 'A) ->
              Obj.magic
                (Ojs.call (t_to_js x489) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x485 : _) ->
                           Obj.magic
                             (x484 ~this:(Obj.magic (Ojs.array_get x485 0))
                                ~args:(Ojs.list_of_js_from any_of_js x485 1))));(
                     Obj.magic x487);(Obj.magic x488)|])
    let (call :
      t ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x497 : t) ->
        fun ~this:(x490 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x491 : 'T) ->
            fun ~args:(x492 : any list) ->
              Obj.magic
                (let x498 = t_to_js x497 in
                 Ojs.call (Ojs.get_prop_ascii x498 "call") "apply"
                   [|x498;((let x493 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x493 "push"
                                 [|(Ojs.fun_to_js_args
                                      (fun (x495 : _) ->
                                         Obj.magic
                                           (x490
                                              ~this:(Obj.magic
                                                       (Ojs.array_get x495 0))
                                              ~args:(Ojs.list_of_js_from
                                                       any_of_js x495 1))))|]);
                            ignore
                              (Ojs.call x493 "push" [|(Obj.magic x491)|]);
                            List.iter
                              (fun (x494 : any) ->
                                 ignore
                                   (Ojs.call x493 "push" [|(any_to_js x494)|]))
                              x492;
                            x493))|])
    let (bind :
      t ->
        this:'T -> thisArg:'T ThisParameterType.t -> 'T OmitThisParameter.t)
      =
      fun (x502 : t) ->
        fun ~this:(x499 : 'T) ->
          fun ~thisArg:(x500 : 'T ThisParameterType.t) ->
            OmitThisParameter.t_of_js Obj.magic
              (Ojs.call (t_to_js x502) "bind"
                 [|(Obj.magic x499);(ThisParameterType.t_to_js Obj.magic x500)|])
    let (bind_all :
      t ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x508 : t) ->
        fun ~this:(x504 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x507 : 'T) ->
            fun ~args:(x509 : any list) ->
              Obj.magic
                (Ojs.call
                   (Ojs.call (t_to_js x508) "bind"
                      [|(Ojs.fun_to_js_args
                           (fun (x505 : _) ->
                              Obj.magic
                                (x504
                                   ~this:(Obj.magic (Ojs.array_get x505 0))
                                   ~args:(Ojs.list_of_js_from any_of_js x505
                                            1))));(Obj.magic x507)|]) "apply"
                   [|Ojs.null;((let x510 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                List.iter
                                  (fun (x511 : any) ->
                                     ignore
                                       (Ojs.call x510 "push"
                                          [|(any_to_js x511)|])) x509;
                                x510))|])
  end
module NewableFunction =
  struct
    include struct include Function end
    let (bind : t -> this:'T -> thisArg:any -> 'T) =
      fun (x514 : t) ->
        fun ~this:(x512 : 'T) ->
          fun ~thisArg:(x513 : any) ->
            Obj.magic
              (Ojs.call (t_to_js x514) "bind"
                 [|(Obj.magic x512);(any_to_js x513)|])
  end
module IArguments =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x516 : Ojs.t) -> x516
    and t_to_js : t -> Ojs.t = fun (x515 : Ojs.t) -> x515
    let (get : t -> float -> any) =
      fun (x517 : t) ->
        fun (x518 : float) ->
          any_of_js (Ojs.get_prop (t_to_js x517) (Ojs.float_to_js x518))
    let (set : t -> float -> any -> unit) =
      fun (x519 : t) ->
        fun (x520 : float) ->
          fun (x521 : any) ->
            Ojs.set_prop (t_to_js x519) (Ojs.float_to_js x520)
              (any_to_js x521)
    let (get_length : t -> float) =
      fun (x522 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x522) "length")
    let (set_length : t -> float -> unit) =
      fun (x523 : t) ->
        fun (x524 : float) ->
          Ojs.set_prop_ascii (t_to_js x523) "length" (Ojs.float_to_js x524)
    let (get_callee : t -> Function.t) =
      fun (x525 : t) ->
        Function.t_of_js (Ojs.get_prop_ascii (t_to_js x525) "callee")
    let (set_callee : t -> Function.t -> unit) =
      fun (x526 : t) ->
        fun (x527 : Function.t) ->
          Ojs.set_prop_ascii (t_to_js x526) "callee" (Function.t_to_js x527)
  end
module Intl =
  struct
    module CollatorOptions =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x529 : Ojs.t) -> x529
        and t_to_js : t -> Ojs.t = fun (x528 : Ojs.t) -> x528
        let (get_usage : t -> string) =
          fun (x530 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x530) "usage")
        let (set_usage : t -> string -> unit) =
          fun (x531 : t) ->
            fun (x532 : string) ->
              Ojs.set_prop_ascii (t_to_js x531) "usage"
                (Ojs.string_to_js x532)
        let (get_localeMatcher : t -> string) =
          fun (x533 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x533) "localeMatcher")
        let (set_localeMatcher : t -> string -> unit) =
          fun (x534 : t) ->
            fun (x535 : string) ->
              Ojs.set_prop_ascii (t_to_js x534) "localeMatcher"
                (Ojs.string_to_js x535)
        let (get_numeric : t -> bool) =
          fun (x536 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x536) "numeric")
        let (set_numeric : t -> bool -> unit) =
          fun (x537 : t) ->
            fun (x538 : bool) ->
              Ojs.set_prop_ascii (t_to_js x537) "numeric"
                (Ojs.bool_to_js x538)
        let (get_caseFirst : t -> string) =
          fun (x539 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x539) "caseFirst")
        let (set_caseFirst : t -> string -> unit) =
          fun (x540 : t) ->
            fun (x541 : string) ->
              Ojs.set_prop_ascii (t_to_js x540) "caseFirst"
                (Ojs.string_to_js x541)
        let (get_sensitivity : t -> string) =
          fun (x542 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x542) "sensitivity")
        let (set_sensitivity : t -> string -> unit) =
          fun (x543 : t) ->
            fun (x544 : string) ->
              Ojs.set_prop_ascii (t_to_js x543) "sensitivity"
                (Ojs.string_to_js x544)
        let (get_ignorePunctuation : t -> bool) =
          fun (x545 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x545) "ignorePunctuation")
        let (set_ignorePunctuation : t -> bool -> unit) =
          fun (x546 : t) ->
            fun (x547 : bool) ->
              Ojs.set_prop_ascii (t_to_js x546) "ignorePunctuation"
                (Ojs.bool_to_js x547)
      end
    module ResolvedCollatorOptions =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x549 : Ojs.t) -> x549
        and t_to_js : t -> Ojs.t = fun (x548 : Ojs.t) -> x548
        let (get_locale : t -> string) =
          fun (x550 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x550) "locale")
        let (set_locale : t -> string -> unit) =
          fun (x551 : t) ->
            fun (x552 : string) ->
              Ojs.set_prop_ascii (t_to_js x551) "locale"
                (Ojs.string_to_js x552)
        let (get_usage : t -> string) =
          fun (x553 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x553) "usage")
        let (set_usage : t -> string -> unit) =
          fun (x554 : t) ->
            fun (x555 : string) ->
              Ojs.set_prop_ascii (t_to_js x554) "usage"
                (Ojs.string_to_js x555)
        let (get_sensitivity : t -> string) =
          fun (x556 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x556) "sensitivity")
        let (set_sensitivity : t -> string -> unit) =
          fun (x557 : t) ->
            fun (x558 : string) ->
              Ojs.set_prop_ascii (t_to_js x557) "sensitivity"
                (Ojs.string_to_js x558)
        let (get_ignorePunctuation : t -> bool) =
          fun (x559 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x559) "ignorePunctuation")
        let (set_ignorePunctuation : t -> bool -> unit) =
          fun (x560 : t) ->
            fun (x561 : bool) ->
              Ojs.set_prop_ascii (t_to_js x560) "ignorePunctuation"
                (Ojs.bool_to_js x561)
        let (get_collation : t -> string) =
          fun (x562 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x562) "collation")
        let (set_collation : t -> string -> unit) =
          fun (x563 : t) ->
            fun (x564 : string) ->
              Ojs.set_prop_ascii (t_to_js x563) "collation"
                (Ojs.string_to_js x564)
        let (get_caseFirst : t -> string) =
          fun (x565 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x565) "caseFirst")
        let (set_caseFirst : t -> string -> unit) =
          fun (x566 : t) ->
            fun (x567 : string) ->
              Ojs.set_prop_ascii (t_to_js x566) "caseFirst"
                (Ojs.string_to_js x567)
        let (get_numeric : t -> bool) =
          fun (x568 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x568) "numeric")
        let (set_numeric : t -> bool -> unit) =
          fun (x569 : t) ->
            fun (x570 : bool) ->
              Ojs.set_prop_ascii (t_to_js x569) "numeric"
                (Ojs.bool_to_js x570)
      end
    module Collator =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x572 : Ojs.t) -> x572
        and t_to_js : t -> Ojs.t = fun (x571 : Ojs.t) -> x571
        let (compare : t -> x:string -> y:string -> float) =
          fun (x575 : t) ->
            fun ~x:(x573 : string) ->
              fun ~y:(x574 : string) ->
                Ojs.float_of_js
                  (Ojs.call (t_to_js x575) "compare"
                     [|(Ojs.string_to_js x573);(Ojs.string_to_js x574)|])
        let (resolvedOptions : t -> ResolvedCollatorOptions.t) =
          fun (x576 : t) ->
            ResolvedCollatorOptions.t_of_js
              (Ojs.call (t_to_js x576) "resolvedOptions" [||])
      end
    let (collator : anonymous_interface_2) =
      anonymous_interface_2_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
    module NumberFormatOptions =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x578 : Ojs.t) -> x578
        and t_to_js : t -> Ojs.t = fun (x577 : Ojs.t) -> x577
        let (get_localeMatcher : t -> string) =
          fun (x579 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x579) "localeMatcher")
        let (set_localeMatcher : t -> string -> unit) =
          fun (x580 : t) ->
            fun (x581 : string) ->
              Ojs.set_prop_ascii (t_to_js x580) "localeMatcher"
                (Ojs.string_to_js x581)
        let (get_style : t -> string) =
          fun (x582 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x582) "style")
        let (set_style : t -> string -> unit) =
          fun (x583 : t) ->
            fun (x584 : string) ->
              Ojs.set_prop_ascii (t_to_js x583) "style"
                (Ojs.string_to_js x584)
        let (get_currency : t -> string) =
          fun (x585 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x585) "currency")
        let (set_currency : t -> string -> unit) =
          fun (x586 : t) ->
            fun (x587 : string) ->
              Ojs.set_prop_ascii (t_to_js x586) "currency"
                (Ojs.string_to_js x587)
        let (get_currencyDisplay : t -> string) =
          fun (x588 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x588) "currencyDisplay")
        let (set_currencyDisplay : t -> string -> unit) =
          fun (x589 : t) ->
            fun (x590 : string) ->
              Ojs.set_prop_ascii (t_to_js x589) "currencyDisplay"
                (Ojs.string_to_js x590)
        let (get_currencySign : t -> string) =
          fun (x591 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x591) "currencySign")
        let (set_currencySign : t -> string -> unit) =
          fun (x592 : t) ->
            fun (x593 : string) ->
              Ojs.set_prop_ascii (t_to_js x592) "currencySign"
                (Ojs.string_to_js x593)
        let (get_useGrouping : t -> bool) =
          fun (x594 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x594) "useGrouping")
        let (set_useGrouping : t -> bool -> unit) =
          fun (x595 : t) ->
            fun (x596 : bool) ->
              Ojs.set_prop_ascii (t_to_js x595) "useGrouping"
                (Ojs.bool_to_js x596)
        let (get_minimumIntegerDigits : t -> float) =
          fun (x597 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x597) "minimumIntegerDigits")
        let (set_minimumIntegerDigits : t -> float -> unit) =
          fun (x598 : t) ->
            fun (x599 : float) ->
              Ojs.set_prop_ascii (t_to_js x598) "minimumIntegerDigits"
                (Ojs.float_to_js x599)
        let (get_minimumFractionDigits : t -> float) =
          fun (x600 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x600) "minimumFractionDigits")
        let (set_minimumFractionDigits : t -> float -> unit) =
          fun (x601 : t) ->
            fun (x602 : float) ->
              Ojs.set_prop_ascii (t_to_js x601) "minimumFractionDigits"
                (Ojs.float_to_js x602)
        let (get_maximumFractionDigits : t -> float) =
          fun (x603 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x603) "maximumFractionDigits")
        let (set_maximumFractionDigits : t -> float -> unit) =
          fun (x604 : t) ->
            fun (x605 : float) ->
              Ojs.set_prop_ascii (t_to_js x604) "maximumFractionDigits"
                (Ojs.float_to_js x605)
        let (get_minimumSignificantDigits : t -> float) =
          fun (x606 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x606) "minimumSignificantDigits")
        let (set_minimumSignificantDigits : t -> float -> unit) =
          fun (x607 : t) ->
            fun (x608 : float) ->
              Ojs.set_prop_ascii (t_to_js x607) "minimumSignificantDigits"
                (Ojs.float_to_js x608)
        let (get_maximumSignificantDigits : t -> float) =
          fun (x609 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x609) "maximumSignificantDigits")
        let (set_maximumSignificantDigits : t -> float -> unit) =
          fun (x610 : t) ->
            fun (x611 : float) ->
              Ojs.set_prop_ascii (t_to_js x610) "maximumSignificantDigits"
                (Ojs.float_to_js x611)
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x613 : Ojs.t) -> x613
        and t_to_js : t -> Ojs.t = fun (x612 : Ojs.t) -> x612
        let (get_locale : t -> string) =
          fun (x614 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x614) "locale")
        let (set_locale : t -> string -> unit) =
          fun (x615 : t) ->
            fun (x616 : string) ->
              Ojs.set_prop_ascii (t_to_js x615) "locale"
                (Ojs.string_to_js x616)
        let (get_numberingSystem : t -> string) =
          fun (x617 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x617) "numberingSystem")
        let (set_numberingSystem : t -> string -> unit) =
          fun (x618 : t) ->
            fun (x619 : string) ->
              Ojs.set_prop_ascii (t_to_js x618) "numberingSystem"
                (Ojs.string_to_js x619)
        let (get_style : t -> string) =
          fun (x620 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x620) "style")
        let (set_style : t -> string -> unit) =
          fun (x621 : t) ->
            fun (x622 : string) ->
              Ojs.set_prop_ascii (t_to_js x621) "style"
                (Ojs.string_to_js x622)
        let (get_currency : t -> string) =
          fun (x623 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x623) "currency")
        let (set_currency : t -> string -> unit) =
          fun (x624 : t) ->
            fun (x625 : string) ->
              Ojs.set_prop_ascii (t_to_js x624) "currency"
                (Ojs.string_to_js x625)
        let (get_currencyDisplay : t -> string) =
          fun (x626 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x626) "currencyDisplay")
        let (set_currencyDisplay : t -> string -> unit) =
          fun (x627 : t) ->
            fun (x628 : string) ->
              Ojs.set_prop_ascii (t_to_js x627) "currencyDisplay"
                (Ojs.string_to_js x628)
        let (get_minimumIntegerDigits : t -> float) =
          fun (x629 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x629) "minimumIntegerDigits")
        let (set_minimumIntegerDigits : t -> float -> unit) =
          fun (x630 : t) ->
            fun (x631 : float) ->
              Ojs.set_prop_ascii (t_to_js x630) "minimumIntegerDigits"
                (Ojs.float_to_js x631)
        let (get_minimumFractionDigits : t -> float) =
          fun (x632 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x632) "minimumFractionDigits")
        let (set_minimumFractionDigits : t -> float -> unit) =
          fun (x633 : t) ->
            fun (x634 : float) ->
              Ojs.set_prop_ascii (t_to_js x633) "minimumFractionDigits"
                (Ojs.float_to_js x634)
        let (get_maximumFractionDigits : t -> float) =
          fun (x635 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x635) "maximumFractionDigits")
        let (set_maximumFractionDigits : t -> float -> unit) =
          fun (x636 : t) ->
            fun (x637 : float) ->
              Ojs.set_prop_ascii (t_to_js x636) "maximumFractionDigits"
                (Ojs.float_to_js x637)
        let (get_minimumSignificantDigits : t -> float) =
          fun (x638 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x638) "minimumSignificantDigits")
        let (set_minimumSignificantDigits : t -> float -> unit) =
          fun (x639 : t) ->
            fun (x640 : float) ->
              Ojs.set_prop_ascii (t_to_js x639) "minimumSignificantDigits"
                (Ojs.float_to_js x640)
        let (get_maximumSignificantDigits : t -> float) =
          fun (x641 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x641) "maximumSignificantDigits")
        let (set_maximumSignificantDigits : t -> float -> unit) =
          fun (x642 : t) ->
            fun (x643 : float) ->
              Ojs.set_prop_ascii (t_to_js x642) "maximumSignificantDigits"
                (Ojs.float_to_js x643)
        let (get_useGrouping : t -> bool) =
          fun (x644 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x644) "useGrouping")
        let (set_useGrouping : t -> bool -> unit) =
          fun (x645 : t) ->
            fun (x646 : bool) ->
              Ojs.set_prop_ascii (t_to_js x645) "useGrouping"
                (Ojs.bool_to_js x646)
      end
    module NumberFormat =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x648 : Ojs.t) -> x648
        and t_to_js : t -> Ojs.t = fun (x647 : Ojs.t) -> x647
        let (format : t -> value:float -> string) =
          fun (x650 : t) ->
            fun ~value:(x649 : float) ->
              Ojs.string_of_js
                (Ojs.call (t_to_js x650) "format" [|(Ojs.float_to_js x649)|])
        let (resolvedOptions : t -> ResolvedNumberFormatOptions.t) =
          fun (x651 : t) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (t_to_js x651) "resolvedOptions" [||])
      end
    let (numberFormat : anonymous_interface_4) =
      anonymous_interface_4_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
           "NumberFormat")
    module DateTimeFormatOptions =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x653 : Ojs.t) -> x653
        and t_to_js : t -> Ojs.t = fun (x652 : Ojs.t) -> x652
        let (get_localeMatcher : t -> [ `best_fit  | `lookup ]) =
          fun (x654 : t) ->
            let x655 = Ojs.get_prop_ascii (t_to_js x654) "localeMatcher" in
            match Ojs.string_of_js x655 with
            | "best fit" -> `best_fit
            | "lookup" -> `lookup
            | _ -> assert false
        let (set_localeMatcher : t -> [ `best_fit  | `lookup ] -> unit) =
          fun (x656 : t) ->
            fun (x657 : [ `best_fit  | `lookup ]) ->
              Ojs.set_prop_ascii (t_to_js x656) "localeMatcher"
                (match x657 with
                 | `best_fit -> Ojs.string_to_js "bestFit"
                 | `lookup -> Ojs.string_to_js "lookup")
        let (get_weekday : t -> [ `long  | `narrow  | `short ]) =
          fun (x658 : t) ->
            let x659 = Ojs.get_prop_ascii (t_to_js x658) "weekday" in
            match Ojs.string_of_js x659 with
            | "long" -> `long
            | "narrow" -> `narrow
            | "short" -> `short
            | _ -> assert false
        let (set_weekday : t -> [ `long  | `narrow  | `short ] -> unit) =
          fun (x660 : t) ->
            fun (x661 : [ `long  | `narrow  | `short ]) ->
              Ojs.set_prop_ascii (t_to_js x660) "weekday"
                (match x661 with
                 | `long -> Ojs.string_to_js "long"
                 | `narrow -> Ojs.string_to_js "narrow"
                 | `short -> Ojs.string_to_js "short")
        let (get_era : t -> [ `long  | `narrow  | `short ]) =
          fun (x662 : t) ->
            let x663 = Ojs.get_prop_ascii (t_to_js x662) "era" in
            match Ojs.string_of_js x663 with
            | "long" -> `long
            | "narrow" -> `narrow
            | "short" -> `short
            | _ -> assert false
        let (set_era : t -> [ `long  | `narrow  | `short ] -> unit) =
          fun (x664 : t) ->
            fun (x665 : [ `long  | `narrow  | `short ]) ->
              Ojs.set_prop_ascii (t_to_js x664) "era"
                (match x665 with
                 | `long -> Ojs.string_to_js "long"
                 | `narrow -> Ojs.string_to_js "narrow"
                 | `short -> Ojs.string_to_js "short")
        let (get_year : t -> [ `two_digit  | `numeric ]) =
          fun (x666 : t) ->
            let x667 = Ojs.get_prop_ascii (t_to_js x666) "year" in
            match Ojs.string_of_js x667 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_year : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x668 : t) ->
            fun (x669 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x668) "year"
                (match x669 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_month :
          t -> [ `two_digit  | `long  | `narrow  | `numeric  | `short ]) =
          fun (x670 : t) ->
            let x671 = Ojs.get_prop_ascii (t_to_js x670) "month" in
            match Ojs.string_of_js x671 with
            | "2-digit" -> `two_digit
            | "long" -> `long
            | "narrow" -> `narrow
            | "numeric" -> `numeric
            | "short" -> `short
            | _ -> assert false
        let (set_month :
          t ->
            [ `two_digit  | `long  | `narrow  | `numeric  | `short ] -> unit)
          =
          fun (x672 : t) ->
            fun
              (x673 :
                [ `two_digit  | `long  | `narrow  | `numeric  | `short ])
              ->
              Ojs.set_prop_ascii (t_to_js x672) "month"
                (match x673 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `long -> Ojs.string_to_js "long"
                 | `narrow -> Ojs.string_to_js "narrow"
                 | `numeric -> Ojs.string_to_js "numeric"
                 | `short -> Ojs.string_to_js "short")
        let (get_day : t -> [ `two_digit  | `numeric ]) =
          fun (x674 : t) ->
            let x675 = Ojs.get_prop_ascii (t_to_js x674) "day" in
            match Ojs.string_of_js x675 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_day : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x676 : t) ->
            fun (x677 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x676) "day"
                (match x677 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_hour : t -> [ `two_digit  | `numeric ]) =
          fun (x678 : t) ->
            let x679 = Ojs.get_prop_ascii (t_to_js x678) "hour" in
            match Ojs.string_of_js x679 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_hour : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x680 : t) ->
            fun (x681 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x680) "hour"
                (match x681 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_minute : t -> [ `two_digit  | `numeric ]) =
          fun (x682 : t) ->
            let x683 = Ojs.get_prop_ascii (t_to_js x682) "minute" in
            match Ojs.string_of_js x683 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_minute : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x684 : t) ->
            fun (x685 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x684) "minute"
                (match x685 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_second : t -> [ `two_digit  | `numeric ]) =
          fun (x686 : t) ->
            let x687 = Ojs.get_prop_ascii (t_to_js x686) "second" in
            match Ojs.string_of_js x687 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_second : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x688 : t) ->
            fun (x689 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x688) "second"
                (match x689 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_timeZoneName : t -> [ `long  | `short ]) =
          fun (x690 : t) ->
            let x691 = Ojs.get_prop_ascii (t_to_js x690) "timeZoneName" in
            match Ojs.string_of_js x691 with
            | "long" -> `long
            | "short" -> `short
            | _ -> assert false
        let (set_timeZoneName : t -> [ `long  | `short ] -> unit) =
          fun (x692 : t) ->
            fun (x693 : [ `long  | `short ]) ->
              Ojs.set_prop_ascii (t_to_js x692) "timeZoneName"
                (match x693 with
                 | `long -> Ojs.string_to_js "long"
                 | `short -> Ojs.string_to_js "short")
        let (get_formatMatcher : t -> [ `basic  | `best_fit ]) =
          fun (x694 : t) ->
            let x695 = Ojs.get_prop_ascii (t_to_js x694) "formatMatcher" in
            match Ojs.string_of_js x695 with
            | "basic" -> `basic
            | "best fit" -> `best_fit
            | _ -> assert false
        let (set_formatMatcher : t -> [ `basic  | `best_fit ] -> unit) =
          fun (x696 : t) ->
            fun (x697 : [ `basic  | `best_fit ]) ->
              Ojs.set_prop_ascii (t_to_js x696) "formatMatcher"
                (match x697 with
                 | `basic -> Ojs.string_to_js "basic"
                 | `best_fit -> Ojs.string_to_js "bestFit")
        let (get_hour12 : t -> bool) =
          fun (x698 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x698) "hour12")
        let (set_hour12 : t -> bool -> unit) =
          fun (x699 : t) ->
            fun (x700 : bool) ->
              Ojs.set_prop_ascii (t_to_js x699) "hour12"
                (Ojs.bool_to_js x700)
        let (get_timeZone : t -> string) =
          fun (x701 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x701) "timeZone")
        let (set_timeZone : t -> string -> unit) =
          fun (x702 : t) ->
            fun (x703 : string) ->
              Ojs.set_prop_ascii (t_to_js x702) "timeZone"
                (Ojs.string_to_js x703)
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x705 : Ojs.t) -> x705
        and t_to_js : t -> Ojs.t = fun (x704 : Ojs.t) -> x704
        let (get_locale : t -> string) =
          fun (x706 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x706) "locale")
        let (set_locale : t -> string -> unit) =
          fun (x707 : t) ->
            fun (x708 : string) ->
              Ojs.set_prop_ascii (t_to_js x707) "locale"
                (Ojs.string_to_js x708)
        let (get_calendar : t -> string) =
          fun (x709 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x709) "calendar")
        let (set_calendar : t -> string -> unit) =
          fun (x710 : t) ->
            fun (x711 : string) ->
              Ojs.set_prop_ascii (t_to_js x710) "calendar"
                (Ojs.string_to_js x711)
        let (get_numberingSystem : t -> string) =
          fun (x712 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x712) "numberingSystem")
        let (set_numberingSystem : t -> string -> unit) =
          fun (x713 : t) ->
            fun (x714 : string) ->
              Ojs.set_prop_ascii (t_to_js x713) "numberingSystem"
                (Ojs.string_to_js x714)
        let (get_timeZone : t -> string) =
          fun (x715 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x715) "timeZone")
        let (set_timeZone : t -> string -> unit) =
          fun (x716 : t) ->
            fun (x717 : string) ->
              Ojs.set_prop_ascii (t_to_js x716) "timeZone"
                (Ojs.string_to_js x717)
        let (get_hour12 : t -> bool) =
          fun (x718 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x718) "hour12")
        let (set_hour12 : t -> bool -> unit) =
          fun (x719 : t) ->
            fun (x720 : bool) ->
              Ojs.set_prop_ascii (t_to_js x719) "hour12"
                (Ojs.bool_to_js x720)
        let (get_weekday : t -> string) =
          fun (x721 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x721) "weekday")
        let (set_weekday : t -> string -> unit) =
          fun (x722 : t) ->
            fun (x723 : string) ->
              Ojs.set_prop_ascii (t_to_js x722) "weekday"
                (Ojs.string_to_js x723)
        let (get_era : t -> string) =
          fun (x724 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x724) "era")
        let (set_era : t -> string -> unit) =
          fun (x725 : t) ->
            fun (x726 : string) ->
              Ojs.set_prop_ascii (t_to_js x725) "era" (Ojs.string_to_js x726)
        let (get_year : t -> string) =
          fun (x727 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x727) "year")
        let (set_year : t -> string -> unit) =
          fun (x728 : t) ->
            fun (x729 : string) ->
              Ojs.set_prop_ascii (t_to_js x728) "year"
                (Ojs.string_to_js x729)
        let (get_month : t -> string) =
          fun (x730 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x730) "month")
        let (set_month : t -> string -> unit) =
          fun (x731 : t) ->
            fun (x732 : string) ->
              Ojs.set_prop_ascii (t_to_js x731) "month"
                (Ojs.string_to_js x732)
        let (get_day : t -> string) =
          fun (x733 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x733) "day")
        let (set_day : t -> string -> unit) =
          fun (x734 : t) ->
            fun (x735 : string) ->
              Ojs.set_prop_ascii (t_to_js x734) "day" (Ojs.string_to_js x735)
        let (get_hour : t -> string) =
          fun (x736 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x736) "hour")
        let (set_hour : t -> string -> unit) =
          fun (x737 : t) ->
            fun (x738 : string) ->
              Ojs.set_prop_ascii (t_to_js x737) "hour"
                (Ojs.string_to_js x738)
        let (get_minute : t -> string) =
          fun (x739 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x739) "minute")
        let (set_minute : t -> string -> unit) =
          fun (x740 : t) ->
            fun (x741 : string) ->
              Ojs.set_prop_ascii (t_to_js x740) "minute"
                (Ojs.string_to_js x741)
        let (get_second : t -> string) =
          fun (x742 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x742) "second")
        let (set_second : t -> string -> unit) =
          fun (x743 : t) ->
            fun (x744 : string) ->
              Ojs.set_prop_ascii (t_to_js x743) "second"
                (Ojs.string_to_js x744)
        let (get_timeZoneName : t -> string) =
          fun (x745 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x745) "timeZoneName")
        let (set_timeZoneName : t -> string -> unit) =
          fun (x746 : t) ->
            fun (x747 : string) ->
              Ojs.set_prop_ascii (t_to_js x746) "timeZoneName"
                (Ojs.string_to_js x747)
      end
  end
module ConcatArray =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x749 : Ojs.t) -> x749
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x748 : Ojs.t) -> x748
    let (get_length : 'T t -> float) =
      fun (x750 : 'T t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x750) "length")
    let (get : 'T t -> float -> 'T) =
      fun (x752 : 'T t) ->
        fun (x754 : float) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x752) (Ojs.float_to_js x754))
    let (join : 'T t -> ?separator:string -> unit -> string) =
      fun (x758 : 'T t) ->
        fun ?separator:(x755 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x760 = t_to_js Obj.magic x758 in
               Ojs.call (Ojs.get_prop_ascii x760 "join") "apply"
                 [|x760;((let x756 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x755 with
                           | Some x757 ->
                               ignore
                                 (Ojs.call x756 "push"
                                    [|(Ojs.string_to_js x757)|])
                           | None -> ());
                          x756))|])
    let (slice : 'T t -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x766 : 'T t) ->
        fun ?start:(x761 : float option) ->
          fun ?end_:(x762 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x768 = t_to_js Obj.magic x766 in
                 Ojs.call (Ojs.get_prop_ascii x768 "slice") "apply"
                   [|x768;((let x763 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x761 with
                             | Some x765 ->
                                 ignore
                                   (Ojs.call x763 "push"
                                      [|(Ojs.float_to_js x765)|])
                             | None -> ());
                            (match x762 with
                             | Some x764 ->
                                 ignore
                                   (Ojs.call x763 "push"
                                      [|(Ojs.float_to_js x764)|])
                             | None -> ());
                            x763))|])
  end
module ReadonlyArray =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x771 : Ojs.t) -> x771
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x770 : Ojs.t) -> x770
    let (get_length : 'T t -> float) =
      fun (x772 : 'T t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x772) "length")
    let (toString : 'T t -> string) =
      fun (x774 : 'T t) ->
        Ojs.string_of_js (Ojs.call (t_to_js Obj.magic x774) "toString" [||])
    let (toLocaleString : 'T t -> string) =
      fun (x776 : 'T t) ->
        Ojs.string_of_js
          (Ojs.call (t_to_js Obj.magic x776) "toLocaleString" [||])
    let (concat : 'T t -> 'T ConcatArray.t list -> 'T list) =
      fun (x782 : 'T t) ->
        fun (x778 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x784 = t_to_js Obj.magic x782 in
             Ojs.call (Ojs.get_prop_ascii x784 "concat") "apply"
               [|x784;((let x779 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x780 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x779 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x780)|]))
                          x778;
                        x779))|])
    let (concat' : 'T t -> ('T, 'T ConcatArray.t) union2 list -> 'T list) =
      fun (x792 : 'T t) ->
        fun (x786 : ('T, 'T ConcatArray.t) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x794 = t_to_js Obj.magic x792 in
             Ojs.call (Ojs.get_prop_ascii x794 "concat") "apply"
               [|x794;((let x787 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x788 : ('T, 'T ConcatArray.t) union2) ->
                             ignore
                               (Ojs.call x787 "push"
                                  [|(union2_to_js Obj.magic
                                       (fun (x790 : 'T ConcatArray.t) ->
                                          ConcatArray.t_to_js Obj.magic x790)
                                       x788)|])) x786;
                        x787))|])
    let (join : 'T t -> ?separator:string -> unit -> string) =
      fun (x799 : 'T t) ->
        fun ?separator:(x796 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x801 = t_to_js Obj.magic x799 in
               Ojs.call (Ojs.get_prop_ascii x801 "join") "apply"
                 [|x801;((let x797 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x796 with
                           | Some x798 ->
                               ignore
                                 (Ojs.call x797 "push"
                                    [|(Ojs.string_to_js x798)|])
                           | None -> ());
                          x797))|])
    let (slice : 'T t -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x807 : 'T t) ->
        fun ?start:(x802 : float option) ->
          fun ?end_:(x803 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x809 = t_to_js Obj.magic x807 in
                 Ojs.call (Ojs.get_prop_ascii x809 "slice") "apply"
                   [|x809;((let x804 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x802 with
                             | Some x806 ->
                                 ignore
                                   (Ojs.call x804 "push"
                                      [|(Ojs.float_to_js x806)|])
                             | None -> ());
                            (match x803 with
                             | Some x805 ->
                                 ignore
                                   (Ojs.call x804 "push"
                                      [|(Ojs.float_to_js x805)|])
                             | None -> ());
                            x804))|])
    let (indexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x815 : 'T t) ->
        fun ~searchElement:(x811 : 'T) ->
          fun ?fromIndex:(x812 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x817 = t_to_js Obj.magic x815 in
                 Ojs.call (Ojs.get_prop_ascii x817 "indexOf") "apply"
                   [|x817;((let x813 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x813 "push" [|(Obj.magic x811)|]);
                            (match x812 with
                             | Some x814 ->
                                 ignore
                                   (Ojs.call x813 "push"
                                      [|(Ojs.float_to_js x814)|])
                             | None -> ());
                            x813))|])
    let (lastIndexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x822 : 'T t) ->
        fun ~searchElement:(x818 : 'T) ->
          fun ?fromIndex:(x819 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x824 = t_to_js Obj.magic x822 in
                 Ojs.call (Ojs.get_prop_ascii x824 "lastIndexOf") "apply"
                   [|x824;((let x820 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x820 "push" [|(Obj.magic x818)|]);
                            (match x819 with
                             | Some x821 ->
                                 ignore
                                   (Ojs.call x820 "push"
                                      [|(Ojs.float_to_js x821)|])
                             | None -> ());
                            x820))|])
    let (every :
      'T t ->
        (value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x833 : 'T t) ->
        fun (x825 : value:'T -> index:float -> array:'T list -> bool) ->
          fun ?thisArg:(x826 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x835 = t_to_js Obj.magic x833 in
                 Ojs.call (Ojs.get_prop_ascii x835 "every") "apply"
                   [|x835;((let x827 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x827 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x829 : Ojs.t) ->
                                         fun (x830 : Ojs.t) ->
                                           fun (x831 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x825 ~value:(Obj.magic x829)
                                                  ~index:(Ojs.float_of_js
                                                            x830)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x831))))|]);
                            (match x826 with
                             | Some x828 ->
                                 ignore
                                   (Ojs.call x827 "push" [|(any_to_js x828)|])
                             | None -> ());
                            x827))|])
    let (every' :
      'T t ->
        (value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x844 : 'T t) ->
        fun (x836 : value:'T -> index:float -> array:'T list -> unknown) ->
          fun ?thisArg:(x837 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x846 = t_to_js Obj.magic x844 in
                 Ojs.call (Ojs.get_prop_ascii x846 "every") "apply"
                   [|x846;((let x838 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x838 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x840 : Ojs.t) ->
                                         fun (x841 : Ojs.t) ->
                                           fun (x842 : Ojs.t) ->
                                             unknown_to_js
                                               (x836 ~value:(Obj.magic x840)
                                                  ~index:(Ojs.float_of_js
                                                            x841)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x842))))|]);
                            (match x837 with
                             | Some x839 ->
                                 ignore
                                   (Ojs.call x838 "push" [|(any_to_js x839)|])
                             | None -> ());
                            x838))|])
    let (some :
      'T t ->
        (value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x855 : 'T t) ->
        fun (x847 : value:'T -> index:float -> array:'T list -> unknown) ->
          fun ?thisArg:(x848 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x857 = t_to_js Obj.magic x855 in
                 Ojs.call (Ojs.get_prop_ascii x857 "some") "apply"
                   [|x857;((let x849 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x849 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x851 : Ojs.t) ->
                                         fun (x852 : Ojs.t) ->
                                           fun (x853 : Ojs.t) ->
                                             unknown_to_js
                                               (x847 ~value:(Obj.magic x851)
                                                  ~index:(Ojs.float_of_js
                                                            x852)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x853))))|]);
                            (match x848 with
                             | Some x850 ->
                                 ignore
                                   (Ojs.call x849 "push" [|(any_to_js x850)|])
                             | None -> ());
                            x849))|])
    let (forEach :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x866 : 'T t) ->
        fun
          ~callbackfn:(x858 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x859 : any option) ->
            fun () ->
              ignore
                (let x868 = t_to_js Obj.magic x866 in
                 Ojs.call (Ojs.get_prop_ascii x868 "forEach") "apply"
                   [|x868;((let x860 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x860 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x862 : Ojs.t) ->
                                         fun (x863 : Ojs.t) ->
                                           fun (x864 : Ojs.t) ->
                                             x858 ~value:(Obj.magic x862)
                                               ~index:(Ojs.float_of_js x863)
                                               ~array:(Ojs.list_of_js
                                                         Obj.magic x864)))|]);
                            (match x859 with
                             | Some x861 ->
                                 ignore
                                   (Ojs.call x860 "push" [|(any_to_js x861)|])
                             | None -> ());
                            x860))|])
    let (map :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x877 : 'T t) ->
        fun
          ~callbackfn:(x869 : value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x870 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x879 = t_to_js Obj.magic x877 in
                 Ojs.call (Ojs.get_prop_ascii x879 "map") "apply"
                   [|x879;((let x871 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x871 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x873 : Ojs.t) ->
                                         fun (x874 : Ojs.t) ->
                                           fun (x875 : Ojs.t) ->
                                             Obj.magic
                                               (x869 ~value:(Obj.magic x873)
                                                  ~index:(Ojs.float_of_js
                                                            x874)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x875))))|]);
                            (match x870 with
                             | Some x872 ->
                                 ignore
                                   (Ojs.call x871 "push" [|(any_to_js x872)|])
                             | None -> ());
                            x871))|])
    let (filter :
      'T t ->
        (value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x889 : 'T t) ->
        fun (x881 : value:'T -> index:float -> array:'T list -> bool) ->
          fun ?thisArg:(x882 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x891 = t_to_js Obj.magic x889 in
                 Ojs.call (Ojs.get_prop_ascii x891 "filter") "apply"
                   [|x891;((let x883 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x883 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x885 : Ojs.t) ->
                                         fun (x886 : Ojs.t) ->
                                           fun (x887 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x881 ~value:(Obj.magic x885)
                                                  ~index:(Ojs.float_of_js
                                                            x886)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x887))))|]);
                            (match x882 with
                             | Some x884 ->
                                 ignore
                                   (Ojs.call x883 "push" [|(any_to_js x884)|])
                             | None -> ());
                            x883))|])
    let (filter' :
      'T t ->
        (value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x901 : 'T t) ->
        fun (x893 : value:'T -> index:float -> array:'T list -> unknown) ->
          fun ?thisArg:(x894 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x903 = t_to_js Obj.magic x901 in
                 Ojs.call (Ojs.get_prop_ascii x903 "filter") "apply"
                   [|x903;((let x895 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x895 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x897 : Ojs.t) ->
                                         fun (x898 : Ojs.t) ->
                                           fun (x899 : Ojs.t) ->
                                             unknown_to_js
                                               (x893 ~value:(Obj.magic x897)
                                                  ~index:(Ojs.float_of_js
                                                            x898)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x899))))|]);
                            (match x894 with
                             | Some x896 ->
                                 ignore
                                   (Ojs.call x895 "push" [|(any_to_js x896)|])
                             | None -> ());
                            x895))|])
    let (reduce :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x911 : 'T t) ->
        fun
          ~callbackfn:(x905 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x911) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x906 : Ojs.t) ->
                       fun (x907 : Ojs.t) ->
                         fun (x908 : Ojs.t) ->
                           fun (x909 : Ojs.t) ->
                             Obj.magic
                               (x905 ~previousValue:(Obj.magic x906)
                                  ~currentValue:(Obj.magic x907)
                                  ~currentIndex:(Ojs.float_of_js x908)
                                  ~array:(Ojs.list_of_js Obj.magic x909))))|])
    let (reduce' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x920 : 'T t) ->
        fun
          ~callbackfn:(x913 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x919 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x920) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x914 : Ojs.t) ->
                         fun (x915 : Ojs.t) ->
                           fun (x916 : Ojs.t) ->
                             fun (x917 : Ojs.t) ->
                               Obj.magic
                                 (x913 ~previousValue:(Obj.magic x914)
                                    ~currentValue:(Obj.magic x915)
                                    ~currentIndex:(Ojs.float_of_js x916)
                                    ~array:(Ojs.list_of_js Obj.magic x917))));(
                   Obj.magic x919)|])
    let (reduce'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x929 : 'T t) ->
        fun
          ~callbackfn:(x922 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x928 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x929) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x923 : Ojs.t) ->
                         fun (x924 : Ojs.t) ->
                           fun (x925 : Ojs.t) ->
                             fun (x926 : Ojs.t) ->
                               Obj.magic
                                 (x922 ~previousValue:(Obj.magic x923)
                                    ~currentValue:(Obj.magic x924)
                                    ~currentIndex:(Ojs.float_of_js x925)
                                    ~array:(Ojs.list_of_js Obj.magic x926))));(
                   Obj.magic x928)|])
    let (reduceRight :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x937 : 'T t) ->
        fun
          ~callbackfn:(x931 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x937) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x932 : Ojs.t) ->
                       fun (x933 : Ojs.t) ->
                         fun (x934 : Ojs.t) ->
                           fun (x935 : Ojs.t) ->
                             Obj.magic
                               (x931 ~previousValue:(Obj.magic x932)
                                  ~currentValue:(Obj.magic x933)
                                  ~currentIndex:(Ojs.float_of_js x934)
                                  ~array:(Ojs.list_of_js Obj.magic x935))))|])
    let (reduceRight' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x946 : 'T t) ->
        fun
          ~callbackfn:(x939 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x945 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x946) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x940 : Ojs.t) ->
                         fun (x941 : Ojs.t) ->
                           fun (x942 : Ojs.t) ->
                             fun (x943 : Ojs.t) ->
                               Obj.magic
                                 (x939 ~previousValue:(Obj.magic x940)
                                    ~currentValue:(Obj.magic x941)
                                    ~currentIndex:(Ojs.float_of_js x942)
                                    ~array:(Ojs.list_of_js Obj.magic x943))));(
                   Obj.magic x945)|])
    let (reduceRight'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x955 : 'T t) ->
        fun
          ~callbackfn:(x948 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x954 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x955) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x949 : Ojs.t) ->
                         fun (x950 : Ojs.t) ->
                           fun (x951 : Ojs.t) ->
                             fun (x952 : Ojs.t) ->
                               Obj.magic
                                 (x948 ~previousValue:(Obj.magic x949)
                                    ~currentValue:(Obj.magic x950)
                                    ~currentIndex:(Ojs.float_of_js x951)
                                    ~array:(Ojs.list_of_js Obj.magic x952))));(
                   Obj.magic x954)|])
    let (get : 'T t -> float -> 'T) =
      fun (x957 : 'T t) ->
        fun (x959 : float) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x957) (Ojs.float_to_js x959))
    let (to_ml : 'T t -> 'T list) =
      fun (x960 : 'T t) -> Ojs.list_of_js Obj.magic (t_to_js Obj.magic x960)
    let (of_ml : 'T list -> 'T t) =
      fun (x963 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x963)
  end
module TemplateStringsArray =
  struct
    include struct include ReadonlyArray end
    type t = string ReadonlyArray.t
    let rec t_of_js : Ojs.t -> t =
      fun (x968 : Ojs.t) -> ReadonlyArray.t_of_js Ojs.string_of_js x968
    and t_to_js : t -> Ojs.t =
      fun (x966 : string ReadonlyArray.t) ->
        ReadonlyArray.t_to_js Ojs.string_to_js x966
    let (get_raw : t -> string list) =
      fun (x970 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x970) "raw")
  end
module Array =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x973 : Ojs.t) -> x973
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x972 : Ojs.t) -> x972
    let (get_length : 'T t -> float) =
      fun (x974 : 'T t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x974) "length")
    let (set_length : 'T t -> float -> unit) =
      fun (x976 : 'T t) ->
        fun (x977 : float) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x976) "length"
            (Ojs.float_to_js x977)
    let (toString : 'T t -> string) =
      fun (x979 : 'T t) ->
        Ojs.string_of_js (Ojs.call (t_to_js Obj.magic x979) "toString" [||])
    let (toLocaleString : 'T t -> string) =
      fun (x981 : 'T t) ->
        Ojs.string_of_js
          (Ojs.call (t_to_js Obj.magic x981) "toLocaleString" [||])
    let (pop : 'T t -> 'T or_undefined) =
      fun (x983 : 'T t) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x983) "pop" [||])
    let (push : 'T t -> 'T list -> float) =
      fun (x989 : 'T t) ->
        fun (x986 : 'T list) ->
          Ojs.float_of_js
            (let x991 = t_to_js Obj.magic x989 in
             Ojs.call (Ojs.get_prop_ascii x991 "push") "apply"
               [|x991;((let x987 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x988 : 'T) ->
                             ignore
                               (Ojs.call x987 "push" [|(Obj.magic x988)|]))
                          x986;
                        x987))|])
    let (concat : 'T t -> 'T ConcatArray.t list -> 'T list) =
      fun (x996 : 'T t) ->
        fun (x992 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x998 = t_to_js Obj.magic x996 in
             Ojs.call (Ojs.get_prop_ascii x998 "concat") "apply"
               [|x998;((let x993 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x994 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x993 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x994)|]))
                          x992;
                        x993))|])
    let (concat' : 'T t -> ('T, 'T ConcatArray.t) union2 list -> 'T list) =
      fun (x1006 : 'T t) ->
        fun (x1000 : ('T, 'T ConcatArray.t) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x1008 = t_to_js Obj.magic x1006 in
             Ojs.call (Ojs.get_prop_ascii x1008 "concat") "apply"
               [|x1008;((let x1001 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1002 : ('T, 'T ConcatArray.t) union2) ->
                              ignore
                                (Ojs.call x1001 "push"
                                   [|(union2_to_js Obj.magic
                                        (fun (x1004 : 'T ConcatArray.t) ->
                                           ConcatArray.t_to_js Obj.magic
                                             x1004) x1002)|])) x1000;
                         x1001))|])
    let (join : 'T t -> ?separator:string -> unit -> string) =
      fun (x1013 : 'T t) ->
        fun ?separator:(x1010 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1015 = t_to_js Obj.magic x1013 in
               Ojs.call (Ojs.get_prop_ascii x1015 "join") "apply"
                 [|x1015;((let x1011 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1010 with
                            | Some x1012 ->
                                ignore
                                  (Ojs.call x1011 "push"
                                     [|(Ojs.string_to_js x1012)|])
                            | None -> ());
                           x1011))|])
    let (reverse : 'T t -> 'T list) =
      fun (x1016 : 'T t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x1016) "reverse" [||])
    let (shift : 'T t -> 'T or_undefined) =
      fun (x1019 : 'T t) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x1019) "shift" [||])
    let (slice : 'T t -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1027 : 'T t) ->
        fun ?start:(x1022 : float option) ->
          fun ?end_:(x1023 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1029 = t_to_js Obj.magic x1027 in
                 Ojs.call (Ojs.get_prop_ascii x1029 "slice") "apply"
                   [|x1029;((let x1024 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1022 with
                              | Some x1026 ->
                                  ignore
                                    (Ojs.call x1024 "push"
                                       [|(Ojs.float_to_js x1026)|])
                              | None -> ());
                             (match x1023 with
                              | Some x1025 ->
                                  ignore
                                    (Ojs.call x1024 "push"
                                       [|(Ojs.float_to_js x1025)|])
                              | None -> ());
                             x1024))|])
    let (sort : 'T t -> ?compareFn:(a:'T -> b:'T -> float) -> unit -> 'T t) =
      fun (x1036 : 'T t) ->
        fun ?compareFn:(x1031 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            t_of_js Obj.magic
              (let x1038 = t_to_js Obj.magic x1036 in
               Ojs.call (Ojs.get_prop_ascii x1038 "sort") "apply"
                 [|x1038;((let x1032 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1031 with
                            | Some x1033 ->
                                ignore
                                  (Ojs.call x1032 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1034 : Ojs.t) ->
                                             fun (x1035 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1033 ~a:(Obj.magic x1034)
                                                    ~b:(Obj.magic x1035))))|])
                            | None -> ());
                           x1032))|])
    let (splice :
      'T t -> start:float -> ?deleteCount:float -> unit -> 'T list) =
      fun (x1044 : 'T t) ->
        fun ~start:(x1040 : float) ->
          fun ?deleteCount:(x1041 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1046 = t_to_js Obj.magic x1044 in
                 Ojs.call (Ojs.get_prop_ascii x1046 "splice") "apply"
                   [|x1046;((let x1042 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1042 "push"
                                  [|(Ojs.float_to_js x1040)|]);
                             (match x1041 with
                              | Some x1043 ->
                                  ignore
                                    (Ojs.call x1042 "push"
                                       [|(Ojs.float_to_js x1043)|])
                              | None -> ());
                             x1042))|])
    let (splice' :
      'T t -> start:float -> deleteCount:float -> 'T list -> 'T list) =
      fun (x1053 : 'T t) ->
        fun ~start:(x1048 : float) ->
          fun ~deleteCount:(x1049 : float) ->
            fun (x1050 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1055 = t_to_js Obj.magic x1053 in
                 Ojs.call (Ojs.get_prop_ascii x1055 "splice") "apply"
                   [|x1055;((let x1051 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1051 "push"
                                  [|(Ojs.float_to_js x1048)|]);
                             ignore
                               (Ojs.call x1051 "push"
                                  [|(Ojs.float_to_js x1049)|]);
                             List.iter
                               (fun (x1052 : 'T) ->
                                  ignore
                                    (Ojs.call x1051 "push"
                                       [|(Obj.magic x1052)|])) x1050;
                             x1051))|])
    let (unshift : 'T t -> 'T list -> float) =
      fun (x1060 : 'T t) ->
        fun (x1057 : 'T list) ->
          Ojs.float_of_js
            (let x1062 = t_to_js Obj.magic x1060 in
             Ojs.call (Ojs.get_prop_ascii x1062 "unshift") "apply"
               [|x1062;((let x1058 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1059 : 'T) ->
                              ignore
                                (Ojs.call x1058 "push" [|(Obj.magic x1059)|]))
                           x1057;
                         x1058))|])
    let (indexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1067 : 'T t) ->
        fun ~searchElement:(x1063 : 'T) ->
          fun ?fromIndex:(x1064 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1069 = t_to_js Obj.magic x1067 in
                 Ojs.call (Ojs.get_prop_ascii x1069 "indexOf") "apply"
                   [|x1069;((let x1065 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1065 "push" [|(Obj.magic x1063)|]);
                             (match x1064 with
                              | Some x1066 ->
                                  ignore
                                    (Ojs.call x1065 "push"
                                       [|(Ojs.float_to_js x1066)|])
                              | None -> ());
                             x1065))|])
    let (lastIndexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1074 : 'T t) ->
        fun ~searchElement:(x1070 : 'T) ->
          fun ?fromIndex:(x1071 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1076 = t_to_js Obj.magic x1074 in
                 Ojs.call (Ojs.get_prop_ascii x1076 "lastIndexOf") "apply"
                   [|x1076;((let x1072 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1072 "push" [|(Obj.magic x1070)|]);
                             (match x1071 with
                              | Some x1073 ->
                                  ignore
                                    (Ojs.call x1072 "push"
                                       [|(Ojs.float_to_js x1073)|])
                              | None -> ());
                             x1072))|])
    let (every :
      'T t ->
        (value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1085 : 'T t) ->
        fun (x1077 : value:'T -> index:float -> array:'T list -> bool) ->
          fun ?thisArg:(x1078 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1087 = t_to_js Obj.magic x1085 in
                 Ojs.call (Ojs.get_prop_ascii x1087 "every") "apply"
                   [|x1087;((let x1079 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1079 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1081 : Ojs.t) ->
                                          fun (x1082 : Ojs.t) ->
                                            fun (x1083 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1077
                                                   ~value:(Obj.magic x1081)
                                                   ~index:(Ojs.float_of_js
                                                             x1082)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1083))))|]);
                             (match x1078 with
                              | Some x1080 ->
                                  ignore
                                    (Ojs.call x1079 "push"
                                       [|(any_to_js x1080)|])
                              | None -> ());
                             x1079))|])
    let (every' :
      'T t ->
        (value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1096 : 'T t) ->
        fun (x1088 : value:'T -> index:float -> array:'T list -> unknown) ->
          fun ?thisArg:(x1089 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1098 = t_to_js Obj.magic x1096 in
                 Ojs.call (Ojs.get_prop_ascii x1098 "every") "apply"
                   [|x1098;((let x1090 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1090 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1092 : Ojs.t) ->
                                          fun (x1093 : Ojs.t) ->
                                            fun (x1094 : Ojs.t) ->
                                              unknown_to_js
                                                (x1088
                                                   ~value:(Obj.magic x1092)
                                                   ~index:(Ojs.float_of_js
                                                             x1093)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1094))))|]);
                             (match x1089 with
                              | Some x1091 ->
                                  ignore
                                    (Ojs.call x1090 "push"
                                       [|(any_to_js x1091)|])
                              | None -> ());
                             x1090))|])
    let (some :
      'T t ->
        (value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1107 : 'T t) ->
        fun (x1099 : value:'T -> index:float -> array:'T list -> unknown) ->
          fun ?thisArg:(x1100 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1109 = t_to_js Obj.magic x1107 in
                 Ojs.call (Ojs.get_prop_ascii x1109 "some") "apply"
                   [|x1109;((let x1101 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1101 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1103 : Ojs.t) ->
                                          fun (x1104 : Ojs.t) ->
                                            fun (x1105 : Ojs.t) ->
                                              unknown_to_js
                                                (x1099
                                                   ~value:(Obj.magic x1103)
                                                   ~index:(Ojs.float_of_js
                                                             x1104)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1105))))|]);
                             (match x1100 with
                              | Some x1102 ->
                                  ignore
                                    (Ojs.call x1101 "push"
                                       [|(any_to_js x1102)|])
                              | None -> ());
                             x1101))|])
    let (forEach :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1118 : 'T t) ->
        fun
          ~callbackfn:(x1110 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1111 : any option) ->
            fun () ->
              ignore
                (let x1120 = t_to_js Obj.magic x1118 in
                 Ojs.call (Ojs.get_prop_ascii x1120 "forEach") "apply"
                   [|x1120;((let x1112 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1112 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1114 : Ojs.t) ->
                                          fun (x1115 : Ojs.t) ->
                                            fun (x1116 : Ojs.t) ->
                                              x1110 ~value:(Obj.magic x1114)
                                                ~index:(Ojs.float_of_js x1115)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1116)))|]);
                             (match x1111 with
                              | Some x1113 ->
                                  ignore
                                    (Ojs.call x1112 "push"
                                       [|(any_to_js x1113)|])
                              | None -> ());
                             x1112))|])
    let (map :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1129 : 'T t) ->
        fun
          ~callbackfn:(x1121 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1122 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1131 = t_to_js Obj.magic x1129 in
                 Ojs.call (Ojs.get_prop_ascii x1131 "map") "apply"
                   [|x1131;((let x1123 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1123 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1125 : Ojs.t) ->
                                          fun (x1126 : Ojs.t) ->
                                            fun (x1127 : Ojs.t) ->
                                              Obj.magic
                                                (x1121
                                                   ~value:(Obj.magic x1125)
                                                   ~index:(Ojs.float_of_js
                                                             x1126)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1127))))|]);
                             (match x1122 with
                              | Some x1124 ->
                                  ignore
                                    (Ojs.call x1123 "push"
                                       [|(any_to_js x1124)|])
                              | None -> ());
                             x1123))|])
    let (filter :
      'T t ->
        (value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1141 : 'T t) ->
        fun (x1133 : value:'T -> index:float -> array:'T list -> bool) ->
          fun ?thisArg:(x1134 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1143 = t_to_js Obj.magic x1141 in
                 Ojs.call (Ojs.get_prop_ascii x1143 "filter") "apply"
                   [|x1143;((let x1135 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1135 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1137 : Ojs.t) ->
                                          fun (x1138 : Ojs.t) ->
                                            fun (x1139 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1133
                                                   ~value:(Obj.magic x1137)
                                                   ~index:(Ojs.float_of_js
                                                             x1138)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1139))))|]);
                             (match x1134 with
                              | Some x1136 ->
                                  ignore
                                    (Ojs.call x1135 "push"
                                       [|(any_to_js x1136)|])
                              | None -> ());
                             x1135))|])
    let (filter' :
      'T t ->
        (value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1153 : 'T t) ->
        fun (x1145 : value:'T -> index:float -> array:'T list -> unknown) ->
          fun ?thisArg:(x1146 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1155 = t_to_js Obj.magic x1153 in
                 Ojs.call (Ojs.get_prop_ascii x1155 "filter") "apply"
                   [|x1155;((let x1147 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1147 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1149 : Ojs.t) ->
                                          fun (x1150 : Ojs.t) ->
                                            fun (x1151 : Ojs.t) ->
                                              unknown_to_js
                                                (x1145
                                                   ~value:(Obj.magic x1149)
                                                   ~index:(Ojs.float_of_js
                                                             x1150)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1151))))|]);
                             (match x1146 with
                              | Some x1148 ->
                                  ignore
                                    (Ojs.call x1147 "push"
                                       [|(any_to_js x1148)|])
                              | None -> ());
                             x1147))|])
    let (reduce :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1163 : 'T t) ->
        fun
          ~callbackfn:(x1157 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1163) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1158 : Ojs.t) ->
                       fun (x1159 : Ojs.t) ->
                         fun (x1160 : Ojs.t) ->
                           fun (x1161 : Ojs.t) ->
                             Obj.magic
                               (x1157 ~previousValue:(Obj.magic x1158)
                                  ~currentValue:(Obj.magic x1159)
                                  ~currentIndex:(Ojs.float_of_js x1160)
                                  ~array:(Ojs.list_of_js Obj.magic x1161))))|])
    let (reduce' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1172 : 'T t) ->
        fun
          ~callbackfn:(x1165 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1171 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1172) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1166 : Ojs.t) ->
                         fun (x1167 : Ojs.t) ->
                           fun (x1168 : Ojs.t) ->
                             fun (x1169 : Ojs.t) ->
                               Obj.magic
                                 (x1165 ~previousValue:(Obj.magic x1166)
                                    ~currentValue:(Obj.magic x1167)
                                    ~currentIndex:(Ojs.float_of_js x1168)
                                    ~array:(Ojs.list_of_js Obj.magic x1169))));(
                   Obj.magic x1171)|])
    let (reduce'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1181 : 'T t) ->
        fun
          ~callbackfn:(x1174 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1180 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1181) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1175 : Ojs.t) ->
                         fun (x1176 : Ojs.t) ->
                           fun (x1177 : Ojs.t) ->
                             fun (x1178 : Ojs.t) ->
                               Obj.magic
                                 (x1174 ~previousValue:(Obj.magic x1175)
                                    ~currentValue:(Obj.magic x1176)
                                    ~currentIndex:(Ojs.float_of_js x1177)
                                    ~array:(Ojs.list_of_js Obj.magic x1178))));(
                   Obj.magic x1180)|])
    let (reduceRight :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1189 : 'T t) ->
        fun
          ~callbackfn:(x1183 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1189) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1184 : Ojs.t) ->
                       fun (x1185 : Ojs.t) ->
                         fun (x1186 : Ojs.t) ->
                           fun (x1187 : Ojs.t) ->
                             Obj.magic
                               (x1183 ~previousValue:(Obj.magic x1184)
                                  ~currentValue:(Obj.magic x1185)
                                  ~currentIndex:(Ojs.float_of_js x1186)
                                  ~array:(Ojs.list_of_js Obj.magic x1187))))|])
    let (reduceRight' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1198 : 'T t) ->
        fun
          ~callbackfn:(x1191 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1197 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1198) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1192 : Ojs.t) ->
                         fun (x1193 : Ojs.t) ->
                           fun (x1194 : Ojs.t) ->
                             fun (x1195 : Ojs.t) ->
                               Obj.magic
                                 (x1191 ~previousValue:(Obj.magic x1192)
                                    ~currentValue:(Obj.magic x1193)
                                    ~currentIndex:(Ojs.float_of_js x1194)
                                    ~array:(Ojs.list_of_js Obj.magic x1195))));(
                   Obj.magic x1197)|])
    let (reduceRight'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1207 : 'T t) ->
        fun
          ~callbackfn:(x1200 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1206 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1207) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1201 : Ojs.t) ->
                         fun (x1202 : Ojs.t) ->
                           fun (x1203 : Ojs.t) ->
                             fun (x1204 : Ojs.t) ->
                               Obj.magic
                                 (x1200 ~previousValue:(Obj.magic x1201)
                                    ~currentValue:(Obj.magic x1202)
                                    ~currentIndex:(Ojs.float_of_js x1203)
                                    ~array:(Ojs.list_of_js Obj.magic x1204))));(
                   Obj.magic x1206)|])
    let (get : 'T t -> float -> 'T) =
      fun (x1209 : 'T t) ->
        fun (x1211 : float) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x1209) (Ojs.float_to_js x1211))
    let (set : 'T t -> float -> 'T -> unit) =
      fun (x1212 : 'T t) ->
        fun (x1214 : float) ->
          fun (x1215 : 'T) ->
            Ojs.set_prop (t_to_js Obj.magic x1212) (Ojs.float_to_js x1214)
              (Obj.magic x1215)
    let (to_ml : 'T t -> 'T list) =
      fun (x1216 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1216)
    let (of_ml : 'T list -> 'T t) =
      fun (x1219 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1219)
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1222 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1223 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1222 with
                 | Some x1224 ->
                     ignore
                       (Ojs.call x1223 "push" [|(Ojs.float_to_js x1224)|])
                 | None -> ());
                x1223))
    let (create' : arrayLength:float -> 'T list) =
      fun ~arrayLength:(x1226 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1226)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1228 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1229 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1230 : 'T) ->
                   ignore (Ojs.call x1229 "push" [|(Obj.magic x1230)|]))
                x1228;
              x1229))
    let (isArray : any -> bool) =
      fun (x1232 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1232)|])
  end
module ArrayConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1234 : Ojs.t) -> x1234
    and t_to_js : t -> Ojs.t = fun (x1233 : Ojs.t) -> x1233
    let (create : t -> ?arrayLength:float -> unit -> any list) =
      fun (x1238 : t) ->
        fun ?arrayLength:(x1235 : float option) ->
          fun () ->
            Ojs.list_of_js any_of_js
              (Ojs.new_obj_arr (t_to_js x1238)
                 (let x1236 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1235 with
                   | Some x1237 ->
                       ignore
                         (Ojs.call x1236 "push" [|(Ojs.float_to_js x1237)|])
                   | None -> ());
                  x1236))
    let (create' : t -> arrayLength:float -> 'T list) =
      fun (x1241 : t) ->
        fun ~arrayLength:(x1240 : float) ->
          Ojs.list_of_js Obj.magic
            (Ojs.new_obj (t_to_js x1241) [|(Ojs.float_to_js x1240)|])
    let (create'' : t -> 'T list -> 'T list) =
      fun (x1246 : t) ->
        fun (x1243 : 'T list) ->
          Ojs.list_of_js Obj.magic
            (Ojs.new_obj_arr (t_to_js x1246)
               (let x1244 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x1245 : 'T) ->
                     ignore (Ojs.call x1244 "push" [|(Obj.magic x1245)|]))
                  x1243;
                x1244))
    let (apply : t -> ?arrayLength:float -> unit -> any list) =
      fun (x1251 : t) ->
        fun ?arrayLength:(x1248 : float option) ->
          fun () ->
            Ojs.list_of_js any_of_js
              (Ojs.call (t_to_js x1251) "apply"
                 [|Ojs.null;((let x1249 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1248 with
                               | Some x1250 ->
                                   ignore
                                     (Ojs.call x1249 "push"
                                        [|(Ojs.float_to_js x1250)|])
                               | None -> ());
                              x1249))|])
    let (apply' : t -> arrayLength:float -> 'T list) =
      fun (x1254 : t) ->
        fun ~arrayLength:(x1253 : float) ->
          Ojs.list_of_js Obj.magic
            (Ojs.apply (t_to_js x1254) [|(Ojs.float_to_js x1253)|])
    let (apply'' : t -> 'T list -> 'T list) =
      fun (x1259 : t) ->
        fun (x1256 : 'T list) ->
          Ojs.list_of_js Obj.magic
            (Ojs.call (t_to_js x1259) "apply"
               [|Ojs.null;((let x1257 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x1258 : 'T) ->
                                 ignore
                                   (Ojs.call x1257 "push"
                                      [|(Obj.magic x1258)|])) x1256;
                            x1257))|])
    let (isArray : t -> any -> bool) =
      fun (x1262 : t) ->
        fun (x1261 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x1262) "isArray" [|(any_to_js x1261)|])
    let (get_prototype : t -> any list) =
      fun (x1263 : t) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (t_to_js x1263) "prototype")
  end
let (array : ArrayConstructor.t) =
  ArrayConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Array")
module RegExpMatchArray =
  struct
    include struct include Array end
    type t = string Array.t
    let rec t_of_js : Ojs.t -> t =
      fun (x1267 : Ojs.t) -> Array.t_of_js Ojs.string_of_js x1267
    and t_to_js : t -> Ojs.t =
      fun (x1265 : string Array.t) -> Array.t_to_js Ojs.string_to_js x1265
    let (get_index : t -> int) =
      fun (x1269 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1269) "index")
    let (set_index : t -> int -> unit) =
      fun (x1270 : t) ->
        fun (x1271 : int) ->
          Ojs.set_prop_ascii (t_to_js x1270) "index" (Ojs.int_to_js x1271)
    let (get_input : t -> string) =
      fun (x1272 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1272) "input")
    let (set_input : t -> string -> unit) =
      fun (x1273 : t) ->
        fun (x1274 : string) ->
          Ojs.set_prop_ascii (t_to_js x1273) "input" (Ojs.string_to_js x1274)
  end
module RegExpExecArray =
  struct
    include struct include Array end
    type t = string Array.t
    let rec t_of_js : Ojs.t -> t =
      fun (x1277 : Ojs.t) -> Array.t_of_js Ojs.string_of_js x1277
    and t_to_js : t -> Ojs.t =
      fun (x1275 : string Array.t) -> Array.t_to_js Ojs.string_to_js x1275
    let (get_index : t -> int) =
      fun (x1279 : t) ->
        Ojs.int_of_js (Ojs.get_prop_ascii (t_to_js x1279) "index")
    let (set_index : t -> int -> unit) =
      fun (x1280 : t) ->
        fun (x1281 : int) ->
          Ojs.set_prop_ascii (t_to_js x1280) "index" (Ojs.int_to_js x1281)
    let (get_input : t -> string) =
      fun (x1282 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1282) "input")
    let (set_input : t -> string -> unit) =
      fun (x1283 : t) ->
        fun (x1284 : string) ->
          Ojs.set_prop_ascii (t_to_js x1283) "input" (Ojs.string_to_js x1284)
  end
module RegExp =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1286 : Ojs.t) -> x1286
    and t_to_js : t -> Ojs.t = fun (x1285 : Ojs.t) -> x1285
    let (exec : t -> string:string -> RegExpExecArray.t or_null) =
      fun (x1288 : t) ->
        fun ~string:(x1287 : string) ->
          or_null_of_js RegExpExecArray.t_of_js
            (Ojs.call (t_to_js x1288) "exec" [|(Ojs.string_to_js x1287)|])
    let (test : t -> string:string -> bool) =
      fun (x1291 : t) ->
        fun ~string:(x1290 : string) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x1291) "test" [|(Ojs.string_to_js x1290)|])
    let (get_source : t -> string) =
      fun (x1292 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1292) "source")
    let (get_global : t -> bool) =
      fun (x1293 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1293) "global")
    let (get_ignoreCase : t -> bool) =
      fun (x1294 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1294) "ignoreCase")
    let (get_multiline : t -> bool) =
      fun (x1295 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1295) "multiline")
    let (get_lastIndex : t -> float) =
      fun (x1296 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1296) "lastIndex")
    let (set_lastIndex : t -> float -> unit) =
      fun (x1297 : t) ->
        fun (x1298 : float) ->
          Ojs.set_prop_ascii (t_to_js x1297) "lastIndex"
            (Ojs.float_to_js x1298)
    let (compile : t -> t) =
      fun (x1299 : t) -> t_of_js (Ojs.call (t_to_js x1299) "compile" [||])
    let (create : pattern:t or_string -> t) =
      fun ~pattern:(x1300 : t or_string) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|(or_string_to_js t_to_js x1300)|])
    let (create' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1302 : string) ->
        fun ?flags:(x1303 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1304 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1304 "push" [|(Ojs.string_to_js x1302)|]);
                  (match x1303 with
                   | Some x1305 ->
                       ignore
                         (Ojs.call x1304 "push" [|(Ojs.string_to_js x1305)|])
                   | None -> ());
                  x1304))
    let (get__1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$1" [||])
    let (set__1 : string -> unit) =
      fun (x1306 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$1"
             [|(Ojs.string_to_js x1306)|])
    let (get__2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$2" [||])
    let (set__2 : string -> unit) =
      fun (x1307 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$2"
             [|(Ojs.string_to_js x1307)|])
    let (get__3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$3" [||])
    let (set__3 : string -> unit) =
      fun (x1308 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$3"
             [|(Ojs.string_to_js x1308)|])
    let (get__4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$4" [||])
    let (set__4 : string -> unit) =
      fun (x1309 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$4"
             [|(Ojs.string_to_js x1309)|])
    let (get__5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$5" [||])
    let (set__5 : string -> unit) =
      fun (x1310 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$5"
             [|(Ojs.string_to_js x1310)|])
    let (get__6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$6" [||])
    let (set__6 : string -> unit) =
      fun (x1311 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$6"
             [|(Ojs.string_to_js x1311)|])
    let (get__7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$7" [||])
    let (set__7 : string -> unit) =
      fun (x1312 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$7"
             [|(Ojs.string_to_js x1312)|])
    let (get__8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$8" [||])
    let (set__8 : string -> unit) =
      fun (x1313 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$8"
             [|(Ojs.string_to_js x1313)|])
    let (get__9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$9" [||])
    let (set__9 : string -> unit) =
      fun (x1314 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$9"
             [|(Ojs.string_to_js x1314)|])
    let (get_lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "lastMatch" [||])
    let (set_lastMatch : string -> unit) =
      fun (x1315 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "lastMatch"
             [|(Ojs.string_to_js x1315)|])
  end
module RegExpConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1317 : Ojs.t) -> x1317
    and t_to_js : t -> Ojs.t = fun (x1316 : Ojs.t) -> x1316
    let (create : t -> pattern:RegExp.t or_string -> RegExp.t) =
      fun (x1320 : t) ->
        fun ~pattern:(x1318 : RegExp.t or_string) ->
          RegExp.t_of_js
            (Ojs.new_obj (t_to_js x1320)
               [|(or_string_to_js RegExp.t_to_js x1318)|])
    let (create' : t -> pattern:string -> ?flags:string -> unit -> RegExp.t)
      =
      fun (x1325 : t) ->
        fun ~pattern:(x1321 : string) ->
          fun ?flags:(x1322 : string option) ->
            fun () ->
              RegExp.t_of_js
                (Ojs.new_obj_arr (t_to_js x1325)
                   (let x1323 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x1323 "push" [|(Ojs.string_to_js x1321)|]);
                    (match x1322 with
                     | Some x1324 ->
                         ignore
                           (Ojs.call x1323 "push"
                              [|(Ojs.string_to_js x1324)|])
                     | None -> ());
                    x1323))
    let (apply : t -> pattern:RegExp.t or_string -> RegExp.t) =
      fun (x1328 : t) ->
        fun ~pattern:(x1326 : RegExp.t or_string) ->
          RegExp.t_of_js
            (Ojs.apply (t_to_js x1328)
               [|(or_string_to_js RegExp.t_to_js x1326)|])
    let (apply' : t -> pattern:string -> ?flags:string -> unit -> RegExp.t) =
      fun (x1333 : t) ->
        fun ~pattern:(x1329 : string) ->
          fun ?flags:(x1330 : string option) ->
            fun () ->
              RegExp.t_of_js
                (Ojs.call (t_to_js x1333) "apply"
                   [|Ojs.null;((let x1331 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x1331 "push"
                                     [|(Ojs.string_to_js x1329)|]);
                                (match x1330 with
                                 | Some x1332 ->
                                     ignore
                                       (Ojs.call x1331 "push"
                                          [|(Ojs.string_to_js x1332)|])
                                 | None -> ());
                                x1331))|])
    let (get_prototype : t -> RegExp.t) =
      fun (x1334 : t) ->
        RegExp.t_of_js (Ojs.get_prop_ascii (t_to_js x1334) "prototype")
    let (get__1 : t -> string) =
      fun (x1335 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1335) "$1")
    let (set__1 : t -> string -> unit) =
      fun (x1336 : t) ->
        fun (x1337 : string) ->
          Ojs.set_prop_ascii (t_to_js x1336) "$1" (Ojs.string_to_js x1337)
    let (get__2 : t -> string) =
      fun (x1338 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1338) "$2")
    let (set__2 : t -> string -> unit) =
      fun (x1339 : t) ->
        fun (x1340 : string) ->
          Ojs.set_prop_ascii (t_to_js x1339) "$2" (Ojs.string_to_js x1340)
    let (get__3 : t -> string) =
      fun (x1341 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1341) "$3")
    let (set__3 : t -> string -> unit) =
      fun (x1342 : t) ->
        fun (x1343 : string) ->
          Ojs.set_prop_ascii (t_to_js x1342) "$3" (Ojs.string_to_js x1343)
    let (get__4 : t -> string) =
      fun (x1344 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1344) "$4")
    let (set__4 : t -> string -> unit) =
      fun (x1345 : t) ->
        fun (x1346 : string) ->
          Ojs.set_prop_ascii (t_to_js x1345) "$4" (Ojs.string_to_js x1346)
    let (get__5 : t -> string) =
      fun (x1347 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1347) "$5")
    let (set__5 : t -> string -> unit) =
      fun (x1348 : t) ->
        fun (x1349 : string) ->
          Ojs.set_prop_ascii (t_to_js x1348) "$5" (Ojs.string_to_js x1349)
    let (get__6 : t -> string) =
      fun (x1350 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1350) "$6")
    let (set__6 : t -> string -> unit) =
      fun (x1351 : t) ->
        fun (x1352 : string) ->
          Ojs.set_prop_ascii (t_to_js x1351) "$6" (Ojs.string_to_js x1352)
    let (get__7 : t -> string) =
      fun (x1353 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1353) "$7")
    let (set__7 : t -> string -> unit) =
      fun (x1354 : t) ->
        fun (x1355 : string) ->
          Ojs.set_prop_ascii (t_to_js x1354) "$7" (Ojs.string_to_js x1355)
    let (get__8 : t -> string) =
      fun (x1356 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1356) "$8")
    let (set__8 : t -> string -> unit) =
      fun (x1357 : t) ->
        fun (x1358 : string) ->
          Ojs.set_prop_ascii (t_to_js x1357) "$8" (Ojs.string_to_js x1358)
    let (get__9 : t -> string) =
      fun (x1359 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1359) "$9")
    let (set__9 : t -> string -> unit) =
      fun (x1360 : t) ->
        fun (x1361 : string) ->
          Ojs.set_prop_ascii (t_to_js x1360) "$9" (Ojs.string_to_js x1361)
    let (get_lastMatch : t -> string) =
      fun (x1362 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1362) "lastMatch")
    let (set_lastMatch : t -> string -> unit) =
      fun (x1363 : t) ->
        fun (x1364 : string) ->
          Ojs.set_prop_ascii (t_to_js x1363) "lastMatch"
            (Ojs.string_to_js x1364)
  end
let (regExp : RegExpConstructor.t) =
  RegExpConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "RegExp")
module String =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1366 : Ojs.t) -> x1366
    and t_to_js : t -> Ojs.t = fun (x1365 : Ojs.t) -> x1365
    let (localeCompare :
      t ->
        that:string ->
          ?locales:string list or_string ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x1375 : t) ->
        fun ~that:(x1367 : string) ->
          fun ?locales:(x1368 : string list or_string option) ->
            fun ?options:(x1369 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1376 = t_to_js x1375 in
                   Ojs.call (Ojs.get_prop_ascii x1376 "localeCompare")
                     "apply"
                     [|x1376;((let x1370 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1370 "push"
                                    [|(Ojs.string_to_js x1367)|]);
                               (match x1368 with
                                | Some x1372 ->
                                    ignore
                                      (Ojs.call x1370 "push"
                                         [|(or_string_to_js
                                              (fun (x1373 : string list) ->
                                                 Ojs.list_to_js
                                                   Ojs.string_to_js x1373)
                                              x1372)|])
                                | None -> ());
                               (match x1369 with
                                | Some x1371 ->
                                    ignore
                                      (Ojs.call x1370 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x1371)|])
                                | None -> ());
                               x1370))|])
    let (toString : t -> string) =
      fun (x1377 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1377) "toString" [||])
    let (charAt : t -> pos:float -> string) =
      fun (x1379 : t) ->
        fun ~pos:(x1378 : float) ->
          Ojs.string_of_js
            (Ojs.call (t_to_js x1379) "charAt" [|(Ojs.float_to_js x1378)|])
    let (charCodeAt : t -> index:float -> float) =
      fun (x1381 : t) ->
        fun ~index:(x1380 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x1381) "charCodeAt"
               [|(Ojs.float_to_js x1380)|])
    let (concat : t -> strings:string list -> string) =
      fun (x1385 : t) ->
        fun ~strings:(x1382 : string list) ->
          Ojs.string_of_js
            (let x1386 = t_to_js x1385 in
             Ojs.call (Ojs.get_prop_ascii x1386 "concat") "apply"
               [|x1386;((let x1383 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1384 : string) ->
                              ignore
                                (Ojs.call x1383 "push"
                                   [|(Ojs.string_to_js x1384)|])) x1382;
                         x1383))|])
    let (indexOf :
      t -> searchString:string -> ?position:float -> unit -> float) =
      fun (x1391 : t) ->
        fun ~searchString:(x1387 : string) ->
          fun ?position:(x1388 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1392 = t_to_js x1391 in
                 Ojs.call (Ojs.get_prop_ascii x1392 "indexOf") "apply"
                   [|x1392;((let x1389 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1389 "push"
                                  [|(Ojs.string_to_js x1387)|]);
                             (match x1388 with
                              | Some x1390 ->
                                  ignore
                                    (Ojs.call x1389 "push"
                                       [|(Ojs.float_to_js x1390)|])
                              | None -> ());
                             x1389))|])
    let (lastIndexOf :
      t -> searchString:string -> ?position:float -> unit -> float) =
      fun (x1397 : t) ->
        fun ~searchString:(x1393 : string) ->
          fun ?position:(x1394 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1398 = t_to_js x1397 in
                 Ojs.call (Ojs.get_prop_ascii x1398 "lastIndexOf") "apply"
                   [|x1398;((let x1395 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1395 "push"
                                  [|(Ojs.string_to_js x1393)|]);
                             (match x1394 with
                              | Some x1396 ->
                                  ignore
                                    (Ojs.call x1395 "push"
                                       [|(Ojs.float_to_js x1396)|])
                              | None -> ());
                             x1395))|])
    let (localeCompare' : t -> that:string -> float) =
      fun (x1400 : t) ->
        fun ~that:(x1399 : string) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x1400) "localeCompare"
               [|(Ojs.string_to_js x1399)|])
    let (match_ :
      t -> regexp:RegExp.t or_string -> RegExpMatchArray.t or_null) =
      fun (x1403 : t) ->
        fun ~regexp:(x1401 : RegExp.t or_string) ->
          or_null_of_js RegExpMatchArray.t_of_js
            (Ojs.call (t_to_js x1403) "match"
               [|(or_string_to_js RegExp.t_to_js x1401)|])
    let (replace :
      t -> searchValue:RegExp.t or_string -> replaceValue:string -> string) =
      fun (x1408 : t) ->
        fun ~searchValue:(x1405 : RegExp.t or_string) ->
          fun ~replaceValue:(x1407 : string) ->
            Ojs.string_of_js
              (Ojs.call (t_to_js x1408) "replace"
                 [|(or_string_to_js RegExp.t_to_js x1405);(Ojs.string_to_js
                                                             x1407)|])
    let (replace' :
      t ->
        searchValue:RegExp.t or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x1414 : t) ->
        fun ~searchValue:(x1409 : RegExp.t or_string) ->
          fun ~replacer:(x1411 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (t_to_js x1414) "replace"
                 [|(or_string_to_js RegExp.t_to_js x1409);(Ojs.fun_to_js_args
                                                             (fun (x1412 : _)
                                                                ->
                                                                Ojs.string_to_js
                                                                  (x1411
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x1412 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x1412 1))))|])
    let (search : t -> regexp:RegExp.t or_string -> float) =
      fun (x1417 : t) ->
        fun ~regexp:(x1415 : RegExp.t or_string) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x1417) "search"
               [|(or_string_to_js RegExp.t_to_js x1415)|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> string) =
      fun (x1423 : t) ->
        fun ?start:(x1418 : float option) ->
          fun ?end_:(x1419 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x1424 = t_to_js x1423 in
                 Ojs.call (Ojs.get_prop_ascii x1424 "slice") "apply"
                   [|x1424;((let x1420 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1418 with
                              | Some x1422 ->
                                  ignore
                                    (Ojs.call x1420 "push"
                                       [|(Ojs.float_to_js x1422)|])
                              | None -> ());
                             (match x1419 with
                              | Some x1421 ->
                                  ignore
                                    (Ojs.call x1420 "push"
                                       [|(Ojs.float_to_js x1421)|])
                              | None -> ());
                             x1420))|])
    let (split :
      t ->
        separator:RegExp.t or_string -> ?limit:float -> unit -> string list)
      =
      fun (x1430 : t) ->
        fun ~separator:(x1425 : RegExp.t or_string) ->
          fun ?limit:(x1426 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x1431 = t_to_js x1430 in
                 Ojs.call (Ojs.get_prop_ascii x1431 "split") "apply"
                   [|x1431;((let x1427 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1427 "push"
                                  [|(or_string_to_js RegExp.t_to_js x1425)|]);
                             (match x1426 with
                              | Some x1428 ->
                                  ignore
                                    (Ojs.call x1427 "push"
                                       [|(Ojs.float_to_js x1428)|])
                              | None -> ());
                             x1427))|])
    let (substring : t -> start:float -> ?end_:float -> unit -> string) =
      fun (x1437 : t) ->
        fun ~start:(x1433 : float) ->
          fun ?end_:(x1434 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x1438 = t_to_js x1437 in
                 Ojs.call (Ojs.get_prop_ascii x1438 "substring") "apply"
                   [|x1438;((let x1435 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1435 "push"
                                  [|(Ojs.float_to_js x1433)|]);
                             (match x1434 with
                              | Some x1436 ->
                                  ignore
                                    (Ojs.call x1435 "push"
                                       [|(Ojs.float_to_js x1436)|])
                              | None -> ());
                             x1435))|])
    let (toLowerCase : t -> string) =
      fun (x1439 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1439) "toLowerCase" [||])
    let (toLocaleLowerCase :
      t -> ?locales:string list or_string -> unit -> string) =
      fun (x1445 : t) ->
        fun ?locales:(x1440 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1446 = t_to_js x1445 in
               Ojs.call (Ojs.get_prop_ascii x1446 "toLocaleLowerCase")
                 "apply"
                 [|x1446;((let x1441 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1440 with
                            | Some x1442 ->
                                ignore
                                  (Ojs.call x1441 "push"
                                     [|(or_string_to_js
                                          (fun (x1443 : string list) ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x1443) x1442)|])
                            | None -> ());
                           x1441))|])
    let (toUpperCase : t -> string) =
      fun (x1447 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1447) "toUpperCase" [||])
    let (toLocaleUpperCase :
      t -> ?locales:string list or_string -> unit -> string) =
      fun (x1453 : t) ->
        fun ?locales:(x1448 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1454 = t_to_js x1453 in
               Ojs.call (Ojs.get_prop_ascii x1454 "toLocaleUpperCase")
                 "apply"
                 [|x1454;((let x1449 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1448 with
                            | Some x1450 ->
                                ignore
                                  (Ojs.call x1449 "push"
                                     [|(or_string_to_js
                                          (fun (x1451 : string list) ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x1451) x1450)|])
                            | None -> ());
                           x1449))|])
    let (trim : t -> string) =
      fun (x1455 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1455) "trim" [||])
    let (get_length : t -> float) =
      fun (x1456 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1456) "length")
    let (substr : t -> from:float -> ?length:float -> unit -> string) =
      fun (x1461 : t) ->
        fun ~from:(x1457 : float) ->
          fun ?length:(x1458 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x1462 = t_to_js x1461 in
                 Ojs.call (Ojs.get_prop_ascii x1462 "substr") "apply"
                   [|x1462;((let x1459 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1459 "push"
                                  [|(Ojs.float_to_js x1457)|]);
                             (match x1458 with
                              | Some x1460 ->
                                  ignore
                                    (Ojs.call x1459 "push"
                                       [|(Ojs.float_to_js x1460)|])
                              | None -> ());
                             x1459))|])
    let (valueOf : t -> string) =
      fun (x1463 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1463) "valueOf" [||])
    let (get : t -> float -> string) =
      fun (x1464 : t) ->
        fun (x1465 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (t_to_js x1464) (Ojs.float_to_js x1465))
    let (to_ml : t -> string) =
      fun (x1466 : t) -> Ojs.string_of_js (t_to_js x1466)
    let (of_ml : string -> t) =
      fun (x1467 : string) -> t_of_js (Ojs.string_to_js x1467)
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x1468 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x1469 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1468 with
                 | Some x1470 ->
                     ignore (Ojs.call x1469 "push" [|(any_to_js x1470)|])
                 | None -> ());
                x1469))
    let (fromCharCode : codes:float list -> string) =
      fun ~codes:(x1471 : float list) ->
        Ojs.string_of_js
          (let x1474 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x1474 "fromCharCode") "apply"
             [|x1474;((let x1472 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1473 : float) ->
                            ignore
                              (Ojs.call x1472 "push"
                                 [|(Ojs.float_to_js x1473)|])) x1471;
                       x1472))|])
  end
module StringConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1476 : Ojs.t) -> x1476
    and t_to_js : t -> Ojs.t = fun (x1475 : Ojs.t) -> x1475
    let (create : t -> ?value:any -> unit -> String.t) =
      fun (x1480 : t) ->
        fun ?value:(x1477 : any option) ->
          fun () ->
            String.t_of_js
              (Ojs.new_obj_arr (t_to_js x1480)
                 (let x1478 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1477 with
                   | Some x1479 ->
                       ignore (Ojs.call x1478 "push" [|(any_to_js x1479)|])
                   | None -> ());
                  x1478))
    let (apply : t -> ?value:any -> unit -> string) =
      fun (x1484 : t) ->
        fun ?value:(x1481 : any option) ->
          fun () ->
            Ojs.string_of_js
              (Ojs.call (t_to_js x1484) "apply"
                 [|Ojs.null;((let x1482 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1481 with
                               | Some x1483 ->
                                   ignore
                                     (Ojs.call x1482 "push"
                                        [|(any_to_js x1483)|])
                               | None -> ());
                              x1482))|])
    let (get_prototype : t -> String.t) =
      fun (x1485 : t) ->
        String.t_of_js (Ojs.get_prop_ascii (t_to_js x1485) "prototype")
    let (fromCharCode : t -> codes:float list -> string) =
      fun (x1489 : t) ->
        fun ~codes:(x1486 : float list) ->
          Ojs.string_of_js
            (let x1490 = t_to_js x1489 in
             Ojs.call (Ojs.get_prop_ascii x1490 "fromCharCode") "apply"
               [|x1490;((let x1487 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1488 : float) ->
                              ignore
                                (Ojs.call x1487 "push"
                                   [|(Ojs.float_to_js x1488)|])) x1486;
                         x1487))|])
  end
let (string : StringConstructor.t) =
  StringConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "String")
module Boolean =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1492 : Ojs.t) -> x1492
    and t_to_js : t -> Ojs.t = fun (x1491 : Ojs.t) -> x1491
    let (valueOf : t -> bool) =
      fun (x1493 : t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js x1493) "valueOf" [||])
    let (to_ml : t -> bool) =
      fun (x1494 : t) -> Ojs.bool_of_js (t_to_js x1494)
    let (of_ml : bool -> t) =
      fun (x1495 : bool) -> t_of_js (Ojs.bool_to_js x1495)
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x1496 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x1497 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1496 with
                 | Some x1498 ->
                     ignore (Ojs.call x1497 "push" [|(any_to_js x1498)|])
                 | None -> ());
                x1497))
  end
module BooleanConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1500 : Ojs.t) -> x1500
    and t_to_js : t -> Ojs.t = fun (x1499 : Ojs.t) -> x1499
    let (create : t -> ?value:any -> unit -> Boolean.t) =
      fun (x1504 : t) ->
        fun ?value:(x1501 : any option) ->
          fun () ->
            Boolean.t_of_js
              (Ojs.new_obj_arr (t_to_js x1504)
                 (let x1502 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1501 with
                   | Some x1503 ->
                       ignore (Ojs.call x1502 "push" [|(any_to_js x1503)|])
                   | None -> ());
                  x1502))
    let (apply : t -> ?value:'T -> unit -> bool) =
      fun (x1508 : t) ->
        fun ?value:(x1505 : 'T option) ->
          fun () ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x1508) "apply"
                 [|Ojs.null;((let x1506 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1505 with
                               | Some x1507 ->
                                   ignore
                                     (Ojs.call x1506 "push"
                                        [|(Obj.magic x1507)|])
                               | None -> ());
                              x1506))|])
    let (get_prototype : t -> Boolean.t) =
      fun (x1509 : t) ->
        Boolean.t_of_js (Ojs.get_prop_ascii (t_to_js x1509) "prototype")
  end
let (boolean : BooleanConstructor.t) =
  BooleanConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Boolean")
module Number =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1511 : Ojs.t) -> x1511
    and t_to_js : t -> Ojs.t = fun (x1510 : Ojs.t) -> x1510
    let (toLocaleString :
      t ->
        ?locales:string list or_string ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x1519 : t) ->
        fun ?locales:(x1512 : string list or_string option) ->
          fun ?options:(x1513 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1520 = t_to_js x1519 in
                 Ojs.call (Ojs.get_prop_ascii x1520 "toLocaleString") "apply"
                   [|x1520;((let x1514 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1512 with
                              | Some x1516 ->
                                  ignore
                                    (Ojs.call x1514 "push"
                                       [|(or_string_to_js
                                            (fun (x1517 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1517)
                                            x1516)|])
                              | None -> ());
                             (match x1513 with
                              | Some x1515 ->
                                  ignore
                                    (Ojs.call x1514 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x1515)|])
                              | None -> ());
                             x1514))|])
    let (toString : t -> ?radix:float -> unit -> string) =
      fun (x1524 : t) ->
        fun ?radix:(x1521 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x1525 = t_to_js x1524 in
               Ojs.call (Ojs.get_prop_ascii x1525 "toString") "apply"
                 [|x1525;((let x1522 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1521 with
                            | Some x1523 ->
                                ignore
                                  (Ojs.call x1522 "push"
                                     [|(Ojs.float_to_js x1523)|])
                            | None -> ());
                           x1522))|])
    let (toFixed : t -> ?fractionDigits:float -> unit -> string) =
      fun (x1529 : t) ->
        fun ?fractionDigits:(x1526 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x1530 = t_to_js x1529 in
               Ojs.call (Ojs.get_prop_ascii x1530 "toFixed") "apply"
                 [|x1530;((let x1527 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1526 with
                            | Some x1528 ->
                                ignore
                                  (Ojs.call x1527 "push"
                                     [|(Ojs.float_to_js x1528)|])
                            | None -> ());
                           x1527))|])
    let (toExponential : t -> ?fractionDigits:float -> unit -> string) =
      fun (x1534 : t) ->
        fun ?fractionDigits:(x1531 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x1535 = t_to_js x1534 in
               Ojs.call (Ojs.get_prop_ascii x1535 "toExponential") "apply"
                 [|x1535;((let x1532 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1531 with
                            | Some x1533 ->
                                ignore
                                  (Ojs.call x1532 "push"
                                     [|(Ojs.float_to_js x1533)|])
                            | None -> ());
                           x1532))|])
    let (toPrecision : t -> ?precision:float -> unit -> string) =
      fun (x1539 : t) ->
        fun ?precision:(x1536 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x1540 = t_to_js x1539 in
               Ojs.call (Ojs.get_prop_ascii x1540 "toPrecision") "apply"
                 [|x1540;((let x1537 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1536 with
                            | Some x1538 ->
                                ignore
                                  (Ojs.call x1537 "push"
                                     [|(Ojs.float_to_js x1538)|])
                            | None -> ());
                           x1537))|])
    let (valueOf : t -> float) =
      fun (x1541 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1541) "valueOf" [||])
    let (to_ml : t -> float) =
      fun (x1542 : t) -> Ojs.float_of_js (t_to_js x1542)
    let (of_ml : float -> t) =
      fun (x1543 : float) -> t_of_js (Ojs.float_to_js x1543)
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x1544 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x1545 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1544 with
                 | Some x1546 ->
                     ignore (Ojs.call x1545 "push" [|(any_to_js x1546)|])
                 | None -> ());
                x1545))
    let (get_MAX_VALUE : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "MAX_VALUE")
    let (get_MIN_VALUE : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "MIN_VALUE")
    let (get_NaN : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (get_NEGATIVE_INFINITY : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "NEGATIVE_INFINITY")
    let (get_POSITIVE_INFINITY : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "POSITIVE_INFINITY")
  end
module NumberConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1548 : Ojs.t) -> x1548
    and t_to_js : t -> Ojs.t = fun (x1547 : Ojs.t) -> x1547
    let (create : t -> ?value:any -> unit -> Number.t) =
      fun (x1552 : t) ->
        fun ?value:(x1549 : any option) ->
          fun () ->
            Number.t_of_js
              (Ojs.new_obj_arr (t_to_js x1552)
                 (let x1550 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1549 with
                   | Some x1551 ->
                       ignore (Ojs.call x1550 "push" [|(any_to_js x1551)|])
                   | None -> ());
                  x1550))
    let (apply : t -> ?value:any -> unit -> float) =
      fun (x1556 : t) ->
        fun ?value:(x1553 : any option) ->
          fun () ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x1556) "apply"
                 [|Ojs.null;((let x1554 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1553 with
                               | Some x1555 ->
                                   ignore
                                     (Ojs.call x1554 "push"
                                        [|(any_to_js x1555)|])
                               | None -> ());
                              x1554))|])
    let (get_prototype : t -> Number.t) =
      fun (x1557 : t) ->
        Number.t_of_js (Ojs.get_prop_ascii (t_to_js x1557) "prototype")
    let (get_MAX_VALUE : t -> float) =
      fun (x1558 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1558) "MAX_VALUE")
    let (get_MIN_VALUE : t -> float) =
      fun (x1559 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1559) "MIN_VALUE")
    let (get_NaN : t -> float) =
      fun (x1560 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1560) "NaN")
    let (get_NEGATIVE_INFINITY : t -> float) =
      fun (x1561 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x1561) "NEGATIVE_INFINITY")
    let (get_POSITIVE_INFINITY : t -> float) =
      fun (x1562 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x1562) "POSITIVE_INFINITY")
  end
let (number : NumberConstructor.t) =
  NumberConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Number")
module ImportMeta =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1564 : Ojs.t) -> x1564
    and t_to_js : t -> Ojs.t = fun (x1563 : Ojs.t) -> x1563
  end
module Math =
  struct
    let (get_E : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (get_LN10 : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (get_LN2 : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (get_LOG2E : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (get_LOG10E : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (get_PI : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (get_SQRT1_2 : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT1_2")
    let (get_SQRT2 : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x1565 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x1565)|])
    let (acos : float -> float) =
      fun (x1566 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x1566)|])
    let (asin : float -> float) =
      fun (x1567 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x1567)|])
    let (atan : float -> float) =
      fun (x1568 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x1568)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x1569 : float) ->
        fun ~x:(x1570 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x1569);(Ojs.float_to_js x1570)|])
    let (ceil : float -> float) =
      fun (x1571 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x1571)|])
    let (cos : float -> float) =
      fun (x1572 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x1572)|])
    let (exp : float -> float) =
      fun (x1573 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x1573)|])
    let (floor : float -> float) =
      fun (x1574 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x1574)|])
    let (log : float -> float) =
      fun (x1575 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x1575)|])
    let (max : float list -> float) =
      fun (x1576 : float list) ->
        Ojs.float_of_js
          (let x1579 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x1579 "max") "apply"
             [|x1579;((let x1577 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1578 : float) ->
                            ignore
                              (Ojs.call x1577 "push"
                                 [|(Ojs.float_to_js x1578)|])) x1576;
                       x1577))|])
    let (min : float list -> float) =
      fun (x1580 : float list) ->
        Ojs.float_of_js
          (let x1583 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x1583 "min") "apply"
             [|x1583;((let x1581 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1582 : float) ->
                            ignore
                              (Ojs.call x1581 "push"
                                 [|(Ojs.float_to_js x1582)|])) x1580;
                       x1581))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x1584 : float) ->
        fun ~y:(x1585 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x1584);(Ojs.float_to_js x1585)|])
    let (random : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "random")
    let (round : float -> float) =
      fun (x1586 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x1586)|])
    let (sin : float -> float) =
      fun (x1587 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x1587)|])
    let (sqrt : float -> float) =
      fun (x1588 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x1588)|])
    let (tan : float -> float) =
      fun (x1589 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x1589)|])
  end
module Date =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1591 : Ojs.t) -> x1591
    and t_to_js : t -> Ojs.t = fun (x1590 : Ojs.t) -> x1590
    let (toLocaleString :
      t ->
        ?locales:string list or_string ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1599 : t) ->
        fun ?locales:(x1592 : string list or_string option) ->
          fun ?options:(x1593 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1600 = t_to_js x1599 in
                 Ojs.call (Ojs.get_prop_ascii x1600 "toLocaleString") "apply"
                   [|x1600;((let x1594 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1592 with
                              | Some x1596 ->
                                  ignore
                                    (Ojs.call x1594 "push"
                                       [|(or_string_to_js
                                            (fun (x1597 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1597)
                                            x1596)|])
                              | None -> ());
                             (match x1593 with
                              | Some x1595 ->
                                  ignore
                                    (Ojs.call x1594 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1595)|])
                              | None -> ());
                             x1594))|])
    let (toLocaleDateString :
      t ->
        ?locales:string list or_string ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1608 : t) ->
        fun ?locales:(x1601 : string list or_string option) ->
          fun ?options:(x1602 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1609 = t_to_js x1608 in
                 Ojs.call (Ojs.get_prop_ascii x1609 "toLocaleDateString")
                   "apply"
                   [|x1609;((let x1603 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1601 with
                              | Some x1605 ->
                                  ignore
                                    (Ojs.call x1603 "push"
                                       [|(or_string_to_js
                                            (fun (x1606 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1606)
                                            x1605)|])
                              | None -> ());
                             (match x1602 with
                              | Some x1604 ->
                                  ignore
                                    (Ojs.call x1603 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1604)|])
                              | None -> ());
                             x1603))|])
    let (toLocaleTimeString :
      t ->
        ?locales:string list or_string ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1617 : t) ->
        fun ?locales:(x1610 : string list or_string option) ->
          fun ?options:(x1611 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1618 = t_to_js x1617 in
                 Ojs.call (Ojs.get_prop_ascii x1618 "toLocaleTimeString")
                   "apply"
                   [|x1618;((let x1612 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1610 with
                              | Some x1614 ->
                                  ignore
                                    (Ojs.call x1612 "push"
                                       [|(or_string_to_js
                                            (fun (x1615 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1615)
                                            x1614)|])
                              | None -> ());
                             (match x1611 with
                              | Some x1613 ->
                                  ignore
                                    (Ojs.call x1612 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1613)|])
                              | None -> ());
                             x1612))|])
    let (toString : t -> string) =
      fun (x1619 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1619) "toString" [||])
    let (toDateString : t -> string) =
      fun (x1620 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1620) "toDateString" [||])
    let (toTimeString : t -> string) =
      fun (x1621 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1621) "toTimeString" [||])
    let (toLocaleString' : t -> string) =
      fun (x1622 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1622) "toLocaleString" [||])
    let (toLocaleDateString' : t -> string) =
      fun (x1623 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1623) "toLocaleDateString" [||])
    let (toLocaleTimeString' : t -> string) =
      fun (x1624 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1624) "toLocaleTimeString" [||])
    let (valueOf : t -> float) =
      fun (x1625 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1625) "valueOf" [||])
    let (getTime : t -> float) =
      fun (x1626 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1626) "getTime" [||])
    let (getFullYear : t -> float) =
      fun (x1627 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1627) "getFullYear" [||])
    let (getUTCFullYear : t -> float) =
      fun (x1628 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1628) "getUTCFullYear" [||])
    let (getMonth : t -> float) =
      fun (x1629 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1629) "getMonth" [||])
    let (getUTCMonth : t -> float) =
      fun (x1630 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1630) "getUTCMonth" [||])
    let (getDate : t -> float) =
      fun (x1631 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1631) "getDate" [||])
    let (getUTCDate : t -> float) =
      fun (x1632 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1632) "getUTCDate" [||])
    let (getDay : t -> float) =
      fun (x1633 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1633) "getDay" [||])
    let (getUTCDay : t -> float) =
      fun (x1634 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1634) "getUTCDay" [||])
    let (getHours : t -> float) =
      fun (x1635 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1635) "getHours" [||])
    let (getUTCHours : t -> float) =
      fun (x1636 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1636) "getUTCHours" [||])
    let (getMinutes : t -> float) =
      fun (x1637 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1637) "getMinutes" [||])
    let (getUTCMinutes : t -> float) =
      fun (x1638 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1638) "getUTCMinutes" [||])
    let (getSeconds : t -> float) =
      fun (x1639 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1639) "getSeconds" [||])
    let (getUTCSeconds : t -> float) =
      fun (x1640 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1640) "getUTCSeconds" [||])
    let (getMilliseconds : t -> float) =
      fun (x1641 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1641) "getMilliseconds" [||])
    let (getUTCMilliseconds : t -> float) =
      fun (x1642 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1642) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : t -> float) =
      fun (x1643 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1643) "getTimezoneOffset" [||])
    let (setTime : t -> time:float -> float) =
      fun (x1645 : t) ->
        fun ~time:(x1644 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x1645) "setTime" [|(Ojs.float_to_js x1644)|])
    let (setMilliseconds : t -> ms:float -> float) =
      fun (x1647 : t) ->
        fun ~ms:(x1646 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x1647) "setMilliseconds"
               [|(Ojs.float_to_js x1646)|])
    let (setUTCMilliseconds : t -> ms:float -> float) =
      fun (x1649 : t) ->
        fun ~ms:(x1648 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x1649) "setUTCMilliseconds"
               [|(Ojs.float_to_js x1648)|])
    let (setSeconds : t -> sec:float -> ?ms:float -> unit -> float) =
      fun (x1654 : t) ->
        fun ~sec:(x1650 : float) ->
          fun ?ms:(x1651 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1655 = t_to_js x1654 in
                 Ojs.call (Ojs.get_prop_ascii x1655 "setSeconds") "apply"
                   [|x1655;((let x1652 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1652 "push"
                                  [|(Ojs.float_to_js x1650)|]);
                             (match x1651 with
                              | Some x1653 ->
                                  ignore
                                    (Ojs.call x1652 "push"
                                       [|(Ojs.float_to_js x1653)|])
                              | None -> ());
                             x1652))|])
    let (setUTCSeconds : t -> sec:float -> ?ms:float -> unit -> float) =
      fun (x1660 : t) ->
        fun ~sec:(x1656 : float) ->
          fun ?ms:(x1657 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1661 = t_to_js x1660 in
                 Ojs.call (Ojs.get_prop_ascii x1661 "setUTCSeconds") "apply"
                   [|x1661;((let x1658 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1658 "push"
                                  [|(Ojs.float_to_js x1656)|]);
                             (match x1657 with
                              | Some x1659 ->
                                  ignore
                                    (Ojs.call x1658 "push"
                                       [|(Ojs.float_to_js x1659)|])
                              | None -> ());
                             x1658))|])
    let (setMinutes :
      t -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1668 : t) ->
        fun ~min:(x1662 : float) ->
          fun ?sec:(x1663 : float option) ->
            fun ?ms:(x1664 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1669 = t_to_js x1668 in
                   Ojs.call (Ojs.get_prop_ascii x1669 "setMinutes") "apply"
                     [|x1669;((let x1665 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1665 "push"
                                    [|(Ojs.float_to_js x1662)|]);
                               (match x1663 with
                                | Some x1667 ->
                                    ignore
                                      (Ojs.call x1665 "push"
                                         [|(Ojs.float_to_js x1667)|])
                                | None -> ());
                               (match x1664 with
                                | Some x1666 ->
                                    ignore
                                      (Ojs.call x1665 "push"
                                         [|(Ojs.float_to_js x1666)|])
                                | None -> ());
                               x1665))|])
    let (setUTCMinutes :
      t -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1676 : t) ->
        fun ~min:(x1670 : float) ->
          fun ?sec:(x1671 : float option) ->
            fun ?ms:(x1672 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1677 = t_to_js x1676 in
                   Ojs.call (Ojs.get_prop_ascii x1677 "setUTCMinutes")
                     "apply"
                     [|x1677;((let x1673 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1673 "push"
                                    [|(Ojs.float_to_js x1670)|]);
                               (match x1671 with
                                | Some x1675 ->
                                    ignore
                                      (Ojs.call x1673 "push"
                                         [|(Ojs.float_to_js x1675)|])
                                | None -> ());
                               (match x1672 with
                                | Some x1674 ->
                                    ignore
                                      (Ojs.call x1673 "push"
                                         [|(Ojs.float_to_js x1674)|])
                                | None -> ());
                               x1673))|])
    let (setHours :
      t ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1686 : t) ->
        fun ~hours:(x1678 : float) ->
          fun ?min:(x1679 : float option) ->
            fun ?sec:(x1680 : float option) ->
              fun ?ms:(x1681 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1687 = t_to_js x1686 in
                     Ojs.call (Ojs.get_prop_ascii x1687 "setHours") "apply"
                       [|x1687;((let x1682 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1682 "push"
                                      [|(Ojs.float_to_js x1678)|]);
                                 (match x1679 with
                                  | Some x1685 ->
                                      ignore
                                        (Ojs.call x1682 "push"
                                           [|(Ojs.float_to_js x1685)|])
                                  | None -> ());
                                 (match x1680 with
                                  | Some x1684 ->
                                      ignore
                                        (Ojs.call x1682 "push"
                                           [|(Ojs.float_to_js x1684)|])
                                  | None -> ());
                                 (match x1681 with
                                  | Some x1683 ->
                                      ignore
                                        (Ojs.call x1682 "push"
                                           [|(Ojs.float_to_js x1683)|])
                                  | None -> ());
                                 x1682))|])
    let (setUTCHours :
      t ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1696 : t) ->
        fun ~hours:(x1688 : float) ->
          fun ?min:(x1689 : float option) ->
            fun ?sec:(x1690 : float option) ->
              fun ?ms:(x1691 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1697 = t_to_js x1696 in
                     Ojs.call (Ojs.get_prop_ascii x1697 "setUTCHours")
                       "apply"
                       [|x1697;((let x1692 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1692 "push"
                                      [|(Ojs.float_to_js x1688)|]);
                                 (match x1689 with
                                  | Some x1695 ->
                                      ignore
                                        (Ojs.call x1692 "push"
                                           [|(Ojs.float_to_js x1695)|])
                                  | None -> ());
                                 (match x1690 with
                                  | Some x1694 ->
                                      ignore
                                        (Ojs.call x1692 "push"
                                           [|(Ojs.float_to_js x1694)|])
                                  | None -> ());
                                 (match x1691 with
                                  | Some x1693 ->
                                      ignore
                                        (Ojs.call x1692 "push"
                                           [|(Ojs.float_to_js x1693)|])
                                  | None -> ());
                                 x1692))|])
    let (setDate : t -> date:float -> float) =
      fun (x1699 : t) ->
        fun ~date:(x1698 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x1699) "setDate" [|(Ojs.float_to_js x1698)|])
    let (setUTCDate : t -> date:float -> float) =
      fun (x1701 : t) ->
        fun ~date:(x1700 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x1701) "setUTCDate"
               [|(Ojs.float_to_js x1700)|])
    let (setMonth : t -> month:float -> ?date:float -> unit -> float) =
      fun (x1706 : t) ->
        fun ~month:(x1702 : float) ->
          fun ?date:(x1703 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1707 = t_to_js x1706 in
                 Ojs.call (Ojs.get_prop_ascii x1707 "setMonth") "apply"
                   [|x1707;((let x1704 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1704 "push"
                                  [|(Ojs.float_to_js x1702)|]);
                             (match x1703 with
                              | Some x1705 ->
                                  ignore
                                    (Ojs.call x1704 "push"
                                       [|(Ojs.float_to_js x1705)|])
                              | None -> ());
                             x1704))|])
    let (setUTCMonth : t -> month:float -> ?date:float -> unit -> float) =
      fun (x1712 : t) ->
        fun ~month:(x1708 : float) ->
          fun ?date:(x1709 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1713 = t_to_js x1712 in
                 Ojs.call (Ojs.get_prop_ascii x1713 "setUTCMonth") "apply"
                   [|x1713;((let x1710 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1710 "push"
                                  [|(Ojs.float_to_js x1708)|]);
                             (match x1709 with
                              | Some x1711 ->
                                  ignore
                                    (Ojs.call x1710 "push"
                                       [|(Ojs.float_to_js x1711)|])
                              | None -> ());
                             x1710))|])
    let (setFullYear :
      t -> year:float -> ?month:float -> ?date:float -> unit -> float) =
      fun (x1720 : t) ->
        fun ~year:(x1714 : float) ->
          fun ?month:(x1715 : float option) ->
            fun ?date:(x1716 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1721 = t_to_js x1720 in
                   Ojs.call (Ojs.get_prop_ascii x1721 "setFullYear") "apply"
                     [|x1721;((let x1717 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1717 "push"
                                    [|(Ojs.float_to_js x1714)|]);
                               (match x1715 with
                                | Some x1719 ->
                                    ignore
                                      (Ojs.call x1717 "push"
                                         [|(Ojs.float_to_js x1719)|])
                                | None -> ());
                               (match x1716 with
                                | Some x1718 ->
                                    ignore
                                      (Ojs.call x1717 "push"
                                         [|(Ojs.float_to_js x1718)|])
                                | None -> ());
                               x1717))|])
    let (setUTCFullYear :
      t -> year:float -> ?month:float -> ?date:float -> unit -> float) =
      fun (x1728 : t) ->
        fun ~year:(x1722 : float) ->
          fun ?month:(x1723 : float option) ->
            fun ?date:(x1724 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1729 = t_to_js x1728 in
                   Ojs.call (Ojs.get_prop_ascii x1729 "setUTCFullYear")
                     "apply"
                     [|x1729;((let x1725 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1725 "push"
                                    [|(Ojs.float_to_js x1722)|]);
                               (match x1723 with
                                | Some x1727 ->
                                    ignore
                                      (Ojs.call x1725 "push"
                                         [|(Ojs.float_to_js x1727)|])
                                | None -> ());
                               (match x1724 with
                                | Some x1726 ->
                                    ignore
                                      (Ojs.call x1725 "push"
                                         [|(Ojs.float_to_js x1726)|])
                                | None -> ());
                               x1725))|])
    let (toUTCString : t -> string) =
      fun (x1730 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1730) "toUTCString" [||])
    let (toISOString : t -> string) =
      fun (x1731 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1731) "toISOString" [||])
    let (toJSON : t -> ?key:any -> unit -> string) =
      fun (x1735 : t) ->
        fun ?key:(x1732 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x1736 = t_to_js x1735 in
               Ojs.call (Ojs.get_prop_ascii x1736 "toJSON") "apply"
                 [|x1736;((let x1733 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1732 with
                            | Some x1734 ->
                                ignore
                                  (Ojs.call x1733 "push"
                                     [|(any_to_js x1734)|])
                            | None -> ());
                           x1733))|])
    let (create : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create' : string or_number -> t) =
      fun (x1737 : string or_number) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|(or_number_to_js Ojs.string_to_js x1737)|])
    let (create'' :
      t ->
        year:float ->
          month:float ->
            ?date:float ->
              ?hours:float ->
                ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t)
      =
      fun (x1739 : t) ->
        fun ~year:(x1740 : float) ->
          fun ~month:(x1741 : float) ->
            fun ?date:(x1742 : float option) ->
              fun ?hours:(x1743 : float option) ->
                fun ?minutes:(x1744 : float option) ->
                  fun ?seconds:(x1745 : float option) ->
                    fun ?ms:(x1746 : float option) ->
                      fun () ->
                        t_of_js
                          (Ojs.new_obj_arr
                             (Ojs.get_prop_ascii Ojs.global "Date")
                             (let x1747 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1747 "push" [|(t_to_js x1739)|]);
                              ignore
                                (Ojs.call x1747 "push"
                                   [|(Ojs.float_to_js x1740)|]);
                              ignore
                                (Ojs.call x1747 "push"
                                   [|(Ojs.float_to_js x1741)|]);
                              (match x1742 with
                               | Some x1752 ->
                                   ignore
                                     (Ojs.call x1747 "push"
                                        [|(Ojs.float_to_js x1752)|])
                               | None -> ());
                              (match x1743 with
                               | Some x1751 ->
                                   ignore
                                     (Ojs.call x1747 "push"
                                        [|(Ojs.float_to_js x1751)|])
                               | None -> ());
                              (match x1744 with
                               | Some x1750 ->
                                   ignore
                                     (Ojs.call x1747 "push"
                                        [|(Ojs.float_to_js x1750)|])
                               | None -> ());
                              (match x1745 with
                               | Some x1749 ->
                                   ignore
                                     (Ojs.call x1747 "push"
                                        [|(Ojs.float_to_js x1749)|])
                               | None -> ());
                              (match x1746 with
                               | Some x1748 ->
                                   ignore
                                     (Ojs.call x1747 "push"
                                        [|(Ojs.float_to_js x1748)|])
                               | None -> ());
                              x1747))
    let (parse : string -> float) =
      fun (x1753 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x1753)|])
    let (utc :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x1754 : float) ->
        fun ~month:(x1755 : float) ->
          fun ?date:(x1756 : float option) ->
            fun ?hours:(x1757 : float option) ->
              fun ?minutes:(x1758 : float option) ->
                fun ?seconds:(x1759 : float option) ->
                  fun ?ms:(x1760 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x1767 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x1767 "UTC") "apply"
                           [|x1767;((let x1761 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x1761 "push"
                                          [|(Ojs.float_to_js x1754)|]);
                                     ignore
                                       (Ojs.call x1761 "push"
                                          [|(Ojs.float_to_js x1755)|]);
                                     (match x1756 with
                                      | Some x1766 ->
                                          ignore
                                            (Ojs.call x1761 "push"
                                               [|(Ojs.float_to_js x1766)|])
                                      | None -> ());
                                     (match x1757 with
                                      | Some x1765 ->
                                          ignore
                                            (Ojs.call x1761 "push"
                                               [|(Ojs.float_to_js x1765)|])
                                      | None -> ());
                                     (match x1758 with
                                      | Some x1764 ->
                                          ignore
                                            (Ojs.call x1761 "push"
                                               [|(Ojs.float_to_js x1764)|])
                                      | None -> ());
                                     (match x1759 with
                                      | Some x1763 ->
                                          ignore
                                            (Ojs.call x1761 "push"
                                               [|(Ojs.float_to_js x1763)|])
                                      | None -> ());
                                     (match x1760 with
                                      | Some x1762 ->
                                          ignore
                                            (Ojs.call x1761 "push"
                                               [|(Ojs.float_to_js x1762)|])
                                      | None -> ());
                                     x1761))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
  end
module DateConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1769 : Ojs.t) -> x1769
    and t_to_js : t -> Ojs.t = fun (x1768 : Ojs.t) -> x1768
    let (create : t -> Date.t) =
      fun (x1770 : t) -> Date.t_of_js (Ojs.new_obj (t_to_js x1770) [||])
    let (create' : t -> string or_number -> Date.t) =
      fun (x1773 : t) ->
        fun (x1771 : string or_number) ->
          Date.t_of_js
            (Ojs.new_obj (t_to_js x1773)
               [|(or_number_to_js Ojs.string_to_js x1771)|])
    let (create'' :
      t ->
        year:float ->
          month:float ->
            ?date:float ->
              ?hours:float ->
                ?minutes:float ->
                  ?seconds:float -> ?ms:float -> unit -> Date.t)
      =
      fun (x1787 : t) ->
        fun ~year:(x1774 : float) ->
          fun ~month:(x1775 : float) ->
            fun ?date:(x1776 : float option) ->
              fun ?hours:(x1777 : float option) ->
                fun ?minutes:(x1778 : float option) ->
                  fun ?seconds:(x1779 : float option) ->
                    fun ?ms:(x1780 : float option) ->
                      fun () ->
                        Date.t_of_js
                          (Ojs.new_obj_arr (t_to_js x1787)
                             (let x1781 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1781 "push"
                                   [|(Ojs.float_to_js x1774)|]);
                              ignore
                                (Ojs.call x1781 "push"
                                   [|(Ojs.float_to_js x1775)|]);
                              (match x1776 with
                               | Some x1786 ->
                                   ignore
                                     (Ojs.call x1781 "push"
                                        [|(Ojs.float_to_js x1786)|])
                               | None -> ());
                              (match x1777 with
                               | Some x1785 ->
                                   ignore
                                     (Ojs.call x1781 "push"
                                        [|(Ojs.float_to_js x1785)|])
                               | None -> ());
                              (match x1778 with
                               | Some x1784 ->
                                   ignore
                                     (Ojs.call x1781 "push"
                                        [|(Ojs.float_to_js x1784)|])
                               | None -> ());
                              (match x1779 with
                               | Some x1783 ->
                                   ignore
                                     (Ojs.call x1781 "push"
                                        [|(Ojs.float_to_js x1783)|])
                               | None -> ());
                              (match x1780 with
                               | Some x1782 ->
                                   ignore
                                     (Ojs.call x1781 "push"
                                        [|(Ojs.float_to_js x1782)|])
                               | None -> ());
                              x1781))
    let (apply : t -> string) =
      fun (x1788 : t) -> Ojs.string_of_js (Ojs.apply (t_to_js x1788) [||])
    let (get_prototype : t -> Date.t) =
      fun (x1789 : t) ->
        Date.t_of_js (Ojs.get_prop_ascii (t_to_js x1789) "prototype")
    let (parse : t -> string -> float) =
      fun (x1791 : t) ->
        fun (x1790 : string) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x1791) "parse" [|(Ojs.string_to_js x1790)|])
    let (utc :
      t ->
        year:float ->
          month:float ->
            ?date:float ->
              ?hours:float ->
                ?minutes:float ->
                  ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun (x1805 : t) ->
        fun ~year:(x1792 : float) ->
          fun ~month:(x1793 : float) ->
            fun ?date:(x1794 : float option) ->
              fun ?hours:(x1795 : float option) ->
                fun ?minutes:(x1796 : float option) ->
                  fun ?seconds:(x1797 : float option) ->
                    fun ?ms:(x1798 : float option) ->
                      fun () ->
                        Ojs.float_of_js
                          (let x1806 = t_to_js x1805 in
                           Ojs.call (Ojs.get_prop_ascii x1806 "UTC") "apply"
                             [|x1806;((let x1799 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       ignore
                                         (Ojs.call x1799 "push"
                                            [|(Ojs.float_to_js x1792)|]);
                                       ignore
                                         (Ojs.call x1799 "push"
                                            [|(Ojs.float_to_js x1793)|]);
                                       (match x1794 with
                                        | Some x1804 ->
                                            ignore
                                              (Ojs.call x1799 "push"
                                                 [|(Ojs.float_to_js x1804)|])
                                        | None -> ());
                                       (match x1795 with
                                        | Some x1803 ->
                                            ignore
                                              (Ojs.call x1799 "push"
                                                 [|(Ojs.float_to_js x1803)|])
                                        | None -> ());
                                       (match x1796 with
                                        | Some x1802 ->
                                            ignore
                                              (Ojs.call x1799 "push"
                                                 [|(Ojs.float_to_js x1802)|])
                                        | None -> ());
                                       (match x1797 with
                                        | Some x1801 ->
                                            ignore
                                              (Ojs.call x1799 "push"
                                                 [|(Ojs.float_to_js x1801)|])
                                        | None -> ());
                                       (match x1798 with
                                        | Some x1800 ->
                                            ignore
                                              (Ojs.call x1799 "push"
                                                 [|(Ojs.float_to_js x1800)|])
                                        | None -> ());
                                       x1799))|])
    let (now : t -> float) =
      fun (x1807 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1807) "now" [||])
  end
let (date : DateConstructor.t) =
  DateConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Date")
module Error =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1809 : Ojs.t) -> x1809
    and t_to_js : t -> Ojs.t = fun (x1808 : Ojs.t) -> x1808
    let (get_name : t -> string) =
      fun (x1810 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1810) "name")
    let (set_name : t -> string -> unit) =
      fun (x1811 : t) ->
        fun (x1812 : string) ->
          Ojs.set_prop_ascii (t_to_js x1811) "name" (Ojs.string_to_js x1812)
    let (get_message : t -> string) =
      fun (x1813 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1813) "message")
    let (set_message : t -> string -> unit) =
      fun (x1814 : t) ->
        fun (x1815 : string) ->
          Ojs.set_prop_ascii (t_to_js x1814) "message"
            (Ojs.string_to_js x1815)
    let (get_stack : t -> string) =
      fun (x1816 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1816) "stack")
    let (set_stack : t -> string -> unit) =
      fun (x1817 : t) ->
        fun (x1818 : string) ->
          Ojs.set_prop_ascii (t_to_js x1817) "stack" (Ojs.string_to_js x1818)
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x1819 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x1820 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1819 with
                 | Some x1821 ->
                     ignore
                       (Ojs.call x1820 "push" [|(Ojs.string_to_js x1821)|])
                 | None -> ());
                x1820))
  end
module ErrorConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1823 : Ojs.t) -> x1823
    and t_to_js : t -> Ojs.t = fun (x1822 : Ojs.t) -> x1822
    let (create : t -> ?message:string -> unit -> Error.t) =
      fun (x1827 : t) ->
        fun ?message:(x1824 : string option) ->
          fun () ->
            Error.t_of_js
              (Ojs.new_obj_arr (t_to_js x1827)
                 (let x1825 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1824 with
                   | Some x1826 ->
                       ignore
                         (Ojs.call x1825 "push" [|(Ojs.string_to_js x1826)|])
                   | None -> ());
                  x1825))
    let (apply : t -> ?message:string -> unit -> Error.t) =
      fun (x1831 : t) ->
        fun ?message:(x1828 : string option) ->
          fun () ->
            Error.t_of_js
              (Ojs.call (t_to_js x1831) "apply"
                 [|Ojs.null;((let x1829 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1828 with
                               | Some x1830 ->
                                   ignore
                                     (Ojs.call x1829 "push"
                                        [|(Ojs.string_to_js x1830)|])
                               | None -> ());
                              x1829))|])
    let (get_prototype : t -> Error.t) =
      fun (x1832 : t) ->
        Error.t_of_js (Ojs.get_prop_ascii (t_to_js x1832) "prototype")
  end
let (error : ErrorConstructor.t) =
  ErrorConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Error")
module EvalError =
  struct
    include struct include Error end
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x1833 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x1834 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1833 with
                 | Some x1835 ->
                     ignore
                       (Ojs.call x1834 "push" [|(Ojs.string_to_js x1835)|])
                 | None -> ());
                x1834))
  end
module EvalErrorConstructor =
  struct
    include struct include ErrorConstructor end
    let (create : t -> ?message:string -> unit -> EvalError.t) =
      fun (x1839 : t) ->
        fun ?message:(x1836 : string option) ->
          fun () ->
            EvalError.t_of_js
              (Ojs.new_obj_arr (t_to_js x1839)
                 (let x1837 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1836 with
                   | Some x1838 ->
                       ignore
                         (Ojs.call x1837 "push" [|(Ojs.string_to_js x1838)|])
                   | None -> ());
                  x1837))
    let (apply : t -> ?message:string -> unit -> EvalError.t) =
      fun (x1843 : t) ->
        fun ?message:(x1840 : string option) ->
          fun () ->
            EvalError.t_of_js
              (Ojs.call (t_to_js x1843) "apply"
                 [|Ojs.null;((let x1841 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1840 with
                               | Some x1842 ->
                                   ignore
                                     (Ojs.call x1841 "push"
                                        [|(Ojs.string_to_js x1842)|])
                               | None -> ());
                              x1841))|])
    let (get_prototype : t -> EvalError.t) =
      fun (x1844 : t) ->
        EvalError.t_of_js (Ojs.get_prop_ascii (t_to_js x1844) "prototype")
  end
let (evalError : EvalErrorConstructor.t) =
  EvalErrorConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "EvalError")
module RangeError =
  struct
    include struct include Error end
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x1845 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x1846 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1845 with
                 | Some x1847 ->
                     ignore
                       (Ojs.call x1846 "push" [|(Ojs.string_to_js x1847)|])
                 | None -> ());
                x1846))
  end
module RangeErrorConstructor =
  struct
    include struct include ErrorConstructor end
    let (create : t -> ?message:string -> unit -> RangeError.t) =
      fun (x1851 : t) ->
        fun ?message:(x1848 : string option) ->
          fun () ->
            RangeError.t_of_js
              (Ojs.new_obj_arr (t_to_js x1851)
                 (let x1849 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1848 with
                   | Some x1850 ->
                       ignore
                         (Ojs.call x1849 "push" [|(Ojs.string_to_js x1850)|])
                   | None -> ());
                  x1849))
    let (apply : t -> ?message:string -> unit -> RangeError.t) =
      fun (x1855 : t) ->
        fun ?message:(x1852 : string option) ->
          fun () ->
            RangeError.t_of_js
              (Ojs.call (t_to_js x1855) "apply"
                 [|Ojs.null;((let x1853 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1852 with
                               | Some x1854 ->
                                   ignore
                                     (Ojs.call x1853 "push"
                                        [|(Ojs.string_to_js x1854)|])
                               | None -> ());
                              x1853))|])
    let (get_prototype : t -> RangeError.t) =
      fun (x1856 : t) ->
        RangeError.t_of_js (Ojs.get_prop_ascii (t_to_js x1856) "prototype")
  end
let (rangeError : RangeErrorConstructor.t) =
  RangeErrorConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "RangeError")
module ReferenceError =
  struct
    include struct include Error end
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x1857 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x1858 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1857 with
                 | Some x1859 ->
                     ignore
                       (Ojs.call x1858 "push" [|(Ojs.string_to_js x1859)|])
                 | None -> ());
                x1858))
  end
module ReferenceErrorConstructor =
  struct
    include struct include ErrorConstructor end
    let (create : t -> ?message:string -> unit -> ReferenceError.t) =
      fun (x1863 : t) ->
        fun ?message:(x1860 : string option) ->
          fun () ->
            ReferenceError.t_of_js
              (Ojs.new_obj_arr (t_to_js x1863)
                 (let x1861 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1860 with
                   | Some x1862 ->
                       ignore
                         (Ojs.call x1861 "push" [|(Ojs.string_to_js x1862)|])
                   | None -> ());
                  x1861))
    let (apply : t -> ?message:string -> unit -> ReferenceError.t) =
      fun (x1867 : t) ->
        fun ?message:(x1864 : string option) ->
          fun () ->
            ReferenceError.t_of_js
              (Ojs.call (t_to_js x1867) "apply"
                 [|Ojs.null;((let x1865 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1864 with
                               | Some x1866 ->
                                   ignore
                                     (Ojs.call x1865 "push"
                                        [|(Ojs.string_to_js x1866)|])
                               | None -> ());
                              x1865))|])
    let (get_prototype : t -> ReferenceError.t) =
      fun (x1868 : t) ->
        ReferenceError.t_of_js
          (Ojs.get_prop_ascii (t_to_js x1868) "prototype")
  end
let (referenceError : ReferenceErrorConstructor.t) =
  ReferenceErrorConstructor.t_of_js
    (Ojs.get_prop_ascii Ojs.global "ReferenceError")
module SyntaxError =
  struct
    include struct include Error end
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x1869 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1870 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1869 with
                 | Some x1871 ->
                     ignore
                       (Ojs.call x1870 "push" [|(Ojs.string_to_js x1871)|])
                 | None -> ());
                x1870))
  end
module SyntaxErrorConstructor =
  struct
    include struct include ErrorConstructor end
    let (create : t -> ?message:string -> unit -> SyntaxError.t) =
      fun (x1875 : t) ->
        fun ?message:(x1872 : string option) ->
          fun () ->
            SyntaxError.t_of_js
              (Ojs.new_obj_arr (t_to_js x1875)
                 (let x1873 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1872 with
                   | Some x1874 ->
                       ignore
                         (Ojs.call x1873 "push" [|(Ojs.string_to_js x1874)|])
                   | None -> ());
                  x1873))
    let (apply : t -> ?message:string -> unit -> SyntaxError.t) =
      fun (x1879 : t) ->
        fun ?message:(x1876 : string option) ->
          fun () ->
            SyntaxError.t_of_js
              (Ojs.call (t_to_js x1879) "apply"
                 [|Ojs.null;((let x1877 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1876 with
                               | Some x1878 ->
                                   ignore
                                     (Ojs.call x1877 "push"
                                        [|(Ojs.string_to_js x1878)|])
                               | None -> ());
                              x1877))|])
    let (get_prototype : t -> SyntaxError.t) =
      fun (x1880 : t) ->
        SyntaxError.t_of_js (Ojs.get_prop_ascii (t_to_js x1880) "prototype")
  end
let (syntaxError : SyntaxErrorConstructor.t) =
  SyntaxErrorConstructor.t_of_js
    (Ojs.get_prop_ascii Ojs.global "SyntaxError")
module TypeError =
  struct
    include struct include Error end
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x1881 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x1882 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1881 with
                 | Some x1883 ->
                     ignore
                       (Ojs.call x1882 "push" [|(Ojs.string_to_js x1883)|])
                 | None -> ());
                x1882))
  end
module TypeErrorConstructor =
  struct
    include struct include ErrorConstructor end
    let (create : t -> ?message:string -> unit -> TypeError.t) =
      fun (x1887 : t) ->
        fun ?message:(x1884 : string option) ->
          fun () ->
            TypeError.t_of_js
              (Ojs.new_obj_arr (t_to_js x1887)
                 (let x1885 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1884 with
                   | Some x1886 ->
                       ignore
                         (Ojs.call x1885 "push" [|(Ojs.string_to_js x1886)|])
                   | None -> ());
                  x1885))
    let (apply : t -> ?message:string -> unit -> TypeError.t) =
      fun (x1891 : t) ->
        fun ?message:(x1888 : string option) ->
          fun () ->
            TypeError.t_of_js
              (Ojs.call (t_to_js x1891) "apply"
                 [|Ojs.null;((let x1889 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1888 with
                               | Some x1890 ->
                                   ignore
                                     (Ojs.call x1889 "push"
                                        [|(Ojs.string_to_js x1890)|])
                               | None -> ());
                              x1889))|])
    let (get_prototype : t -> TypeError.t) =
      fun (x1892 : t) ->
        TypeError.t_of_js (Ojs.get_prop_ascii (t_to_js x1892) "prototype")
  end
let (typeError : TypeErrorConstructor.t) =
  TypeErrorConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "TypeError")
module URIError =
  struct
    include struct include Error end
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x1893 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x1894 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1893 with
                 | Some x1895 ->
                     ignore
                       (Ojs.call x1894 "push" [|(Ojs.string_to_js x1895)|])
                 | None -> ());
                x1894))
  end
module URIErrorConstructor =
  struct
    include struct include ErrorConstructor end
    let (create : t -> ?message:string -> unit -> URIError.t) =
      fun (x1899 : t) ->
        fun ?message:(x1896 : string option) ->
          fun () ->
            URIError.t_of_js
              (Ojs.new_obj_arr (t_to_js x1899)
                 (let x1897 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1896 with
                   | Some x1898 ->
                       ignore
                         (Ojs.call x1897 "push" [|(Ojs.string_to_js x1898)|])
                   | None -> ());
                  x1897))
    let (apply : t -> ?message:string -> unit -> URIError.t) =
      fun (x1903 : t) ->
        fun ?message:(x1900 : string option) ->
          fun () ->
            URIError.t_of_js
              (Ojs.call (t_to_js x1903) "apply"
                 [|Ojs.null;((let x1901 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1900 with
                               | Some x1902 ->
                                   ignore
                                     (Ojs.call x1901 "push"
                                        [|(Ojs.string_to_js x1902)|])
                               | None -> ());
                              x1901))|])
    let (get_prototype : t -> URIError.t) =
      fun (x1904 : t) ->
        URIError.t_of_js (Ojs.get_prop_ascii (t_to_js x1904) "prototype")
  end
let (uriError : URIErrorConstructor.t) =
  URIErrorConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "URIError")
module JSON =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1906 : Ojs.t) -> x1906
    and t_to_js : t -> Ojs.t = fun (x1905 : Ojs.t) -> x1905
    let (parse :
      string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun (x1907 : string) ->
        fun
          ?reviver:(x1908 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x1914 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x1914 "parse") "apply"
                 [|x1914;((let x1909 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1909 "push"
                                [|(Ojs.string_to_js x1907)|]);
                           (match x1908 with
                            | Some x1910 ->
                                ignore
                                  (Ojs.call x1909 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x1911 : Ojs.t) ->
                                             fun (x1912 : Ojs.t) ->
                                               fun (x1913 : Ojs.t) ->
                                                 any_to_js
                                                   (x1910
                                                      ~this:(any_of_js x1911)
                                                      ~key:(Ojs.string_of_js
                                                              x1912)
                                                      ~value:(any_of_js x1913))))|])
                            | None -> ());
                           x1909))|])
    let (stringify :
      any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:string or_number -> unit -> string)
      =
      fun (x1915 : any) ->
        fun
          ?replacer:(x1916 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x1917 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x1925 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x1925 "stringify") "apply"
                   [|x1925;((let x1918 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1918 "push" [|(any_to_js x1915)|]);
                             (match x1916 with
                              | Some x1921 ->
                                  ignore
                                    (Ojs.call x1918 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x1922 : Ojs.t) ->
                                               fun (x1923 : Ojs.t) ->
                                                 fun (x1924 : Ojs.t) ->
                                                   any_to_js
                                                     (x1921
                                                        ~this:(any_of_js
                                                                 x1922)
                                                        ~key:(Ojs.string_of_js
                                                                x1923)
                                                        ~value:(any_of_js
                                                                  x1924))))|])
                              | None -> ());
                             (match x1917 with
                              | Some x1919 ->
                                  ignore
                                    (Ojs.call x1918 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x1919)|])
                              | None -> ());
                             x1918))|])
    let (stringify' :
      any ->
        ?replacer:string or_number list or_null ->
          ?space:string or_number -> unit -> string)
      =
      fun (x1926 : any) ->
        fun ?replacer:(x1927 : string or_number list or_null option) ->
          fun ?space:(x1928 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x1936 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x1936 "stringify") "apply"
                   [|x1936;((let x1929 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1929 "push" [|(any_to_js x1926)|]);
                             (match x1927 with
                              | Some x1932 ->
                                  ignore
                                    (Ojs.call x1929 "push"
                                       [|(or_null_to_js
                                            (fun
                                               (x1933 :
                                                 string or_number list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x1934 :
                                                      string or_number)
                                                    ->
                                                    or_number_to_js
                                                      Ojs.string_to_js x1934)
                                                 x1933) x1932)|])
                              | None -> ());
                             (match x1928 with
                              | Some x1930 ->
                                  ignore
                                    (Ojs.call x1929 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x1930)|])
                              | None -> ());
                             x1929))|])
  end
module TypedPropertyDescriptor =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x1938 : Ojs.t) -> x1938
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x1937 : Ojs.t) -> x1937
    let (get_enumerable : 'T t -> bool) =
      fun (x1939 : 'T t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1939) "enumerable")
    let (set_enumerable : 'T t -> bool -> unit) =
      fun (x1941 : 'T t) ->
        fun (x1942 : bool) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1941) "enumerable"
            (Ojs.bool_to_js x1942)
    let (get_configurable : 'T t -> bool) =
      fun (x1944 : 'T t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1944) "configurable")
    let (set_configurable : 'T t -> bool -> unit) =
      fun (x1946 : 'T t) ->
        fun (x1947 : bool) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1946) "configurable"
            (Ojs.bool_to_js x1947)
    let (get_writable : 'T t -> bool) =
      fun (x1949 : 'T t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1949) "writable")
    let (set_writable : 'T t -> bool -> unit) =
      fun (x1951 : 'T t) ->
        fun (x1952 : bool) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1951) "writable"
            (Ojs.bool_to_js x1952)
    let (get_value : 'T t -> 'T) =
      fun (x1954 : 'T t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x1954) "value")
    let (set_value : 'T t -> 'T -> unit) =
      fun (x1956 : 'T t) ->
        fun (x1957 : 'T) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1956) "value"
            (Obj.magic x1957)
    let (get_ : 'T t -> 'T) =
      fun (x1959 : 'T t) ->
        Obj.magic (Ojs.call (t_to_js Obj.magic x1959) "get" [||])
    let (set_ : 'T t -> value:'T -> unit) =
      fun (x1962 : 'T t) ->
        fun ~value:(x1961 : 'T) ->
          ignore
            (Ojs.call (t_to_js Obj.magic x1962) "set" [|(Obj.magic x1961)|])
  end
module ClassDecorator =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1965 : Ojs.t) -> x1965
    and t_to_js : t -> Ojs.t = fun (x1964 : Ojs.t) -> x1964
    let (apply : t -> target:'TFunction -> ('TFunction, unit) union2) =
      fun (x1967 : t) ->
        fun ~target:(x1966 : 'TFunction) ->
          union2_of_js Obj.magic Ojs.unit_of_js
            (Ojs.apply (t_to_js x1967) [|(Obj.magic x1966)|])
  end
module PropertyDecorator =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1971 : Ojs.t) -> x1971
    and t_to_js : t -> Ojs.t = fun (x1970 : Ojs.t) -> x1970
    let (apply :
      t -> target:Object.t -> propertyKey:symbol or_string -> unit) =
      fun (x1975 : t) ->
        fun ~target:(x1972 : Object.t) ->
          fun ~propertyKey:(x1973 : symbol or_string) ->
            ignore
              (Ojs.apply (t_to_js x1975)
                 [|(Object.t_to_js x1972);(or_string_to_js symbol_to_js x1973)|])
  end
module MethodDecorator =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1977 : Ojs.t) -> x1977
    and t_to_js : t -> Ojs.t = fun (x1976 : Ojs.t) -> x1976
    let (apply :
      t ->
        target:Object.t ->
          propertyKey:symbol or_string ->
            descriptor:'T TypedPropertyDescriptor.t ->
              (unit, 'T TypedPropertyDescriptor.t) union2)
      =
      fun (x1983 : t) ->
        fun ~target:(x1978 : Object.t) ->
          fun ~propertyKey:(x1979 : symbol or_string) ->
            fun ~descriptor:(x1981 : 'T TypedPropertyDescriptor.t) ->
              union2_of_js Ojs.unit_of_js
                (fun (x1985 : Ojs.t) ->
                   TypedPropertyDescriptor.t_of_js Obj.magic x1985)
                (Ojs.apply (t_to_js x1983)
                   [|(Object.t_to_js x1978);(or_string_to_js symbol_to_js
                                               x1979);(TypedPropertyDescriptor.t_to_js
                                                         Obj.magic x1981)|])
  end
module ParameterDecorator =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1988 : Ojs.t) -> x1988
    and t_to_js : t -> Ojs.t = fun (x1987 : Ojs.t) -> x1987
    let (apply :
      t ->
        target:Object.t ->
          propertyKey:symbol or_string -> parameterIndex:float -> unit)
      =
      fun (x1993 : t) ->
        fun ~target:(x1989 : Object.t) ->
          fun ~propertyKey:(x1990 : symbol or_string) ->
            fun ~parameterIndex:(x1992 : float) ->
              ignore
                (Ojs.apply (t_to_js x1993)
                   [|(Object.t_to_js x1989);(or_string_to_js symbol_to_js
                                               x1990);(Ojs.float_to_js x1992)|])
  end
module Promise =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x1995 : Ojs.t) -> x1995
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x1994 : Ojs.t) -> x1994
    let (then_ :
      'T t ->
        ?onfulfilled:('T -> 'TResult t) ->
          ?onrejected:(any -> 'TResult t) -> unit -> 'TResult t)
      =
      fun (x2005 : 'T t) ->
        fun ?onfulfilled:(x1996 : ('T -> 'TResult t) option) ->
          fun ?onrejected:(x1997 : (any -> 'TResult t) option) ->
            fun () ->
              t_of_js Obj.magic
                (let x2007 = t_to_js Obj.magic x2005 in
                 Ojs.call (Ojs.get_prop_ascii x2007 "then") "apply"
                   [|x2007;((let x1998 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1996 with
                              | Some x2002 ->
                                  ignore
                                    (Ojs.call x1998 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x2003 : Ojs.t) ->
                                               t_to_js Obj.magic
                                                 (x2002 (Obj.magic x2003))))|])
                              | None -> ());
                             (match x1997 with
                              | Some x1999 ->
                                  ignore
                                    (Ojs.call x1998 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x2000 : Ojs.t) ->
                                               t_to_js Obj.magic
                                                 (x1999 (any_of_js x2000))))|])
                              | None -> ());
                             x1998))|])
    let (catch : 'T t -> ?onrejected:(any -> 'T t) -> unit -> 'T t) =
      fun (x2014 : 'T t) ->
        fun ?onrejected:(x2009 : (any -> 'T t) option) ->
          fun () ->
            t_of_js Obj.magic
              (let x2016 = t_to_js Obj.magic x2014 in
               Ojs.call (Ojs.get_prop_ascii x2016 "catch") "apply"
                 [|x2016;((let x2010 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2009 with
                            | Some x2011 ->
                                ignore
                                  (Ojs.call x2010 "push"
                                     [|(Ojs.fun_to_js 1
                                          (fun (x2012 : Ojs.t) ->
                                             t_to_js Obj.magic
                                               (x2011 (any_of_js x2012))))|])
                            | None -> ());
                           x2010))|])
  end
module ArrayBuffer =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2019 : Ojs.t) -> x2019
    and t_to_js : t -> Ojs.t = fun (x2018 : Ojs.t) -> x2018
    let (get_byteLength : t -> float) =
      fun (x2020 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2020) "byteLength")
    let (slice : t -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x2025 : t) ->
        fun ~begin_:(x2021 : float) ->
          fun ?end_:(x2022 : float option) ->
            fun () ->
              t_of_js
                (let x2026 = t_to_js x2025 in
                 Ojs.call (Ojs.get_prop_ascii x2026 "slice") "apply"
                   [|x2026;((let x2023 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2023 "push"
                                  [|(Ojs.float_to_js x2021)|]);
                             (match x2022 with
                              | Some x2024 ->
                                  ignore
                                    (Ojs.call x2023 "push"
                                       [|(Ojs.float_to_js x2024)|])
                              | None -> ());
                             x2023))|])
    let (create : byteLength:float -> t) =
      fun ~byteLength:(x2027 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x2027)|])
    let (isView : any -> bool) =
      fun (x2028 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x2028)|])
  end
module ArrayBufferTypes =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2030 : Ojs.t) -> x2030
    and t_to_js : t -> Ojs.t = fun (x2029 : Ojs.t) -> x2029
    let (get_ArrayBuffer : t -> ArrayBuffer.t) =
      fun (x2031 : t) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (t_to_js x2031) "ArrayBuffer")
    let (set_ArrayBuffer : t -> ArrayBuffer.t -> unit) =
      fun (x2032 : t) ->
        fun (x2033 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (t_to_js x2032) "ArrayBuffer"
            (ArrayBuffer.t_to_js x2033)
  end
module ArrayBufferConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2035 : Ojs.t) -> x2035
    and t_to_js : t -> Ojs.t = fun (x2034 : Ojs.t) -> x2034
    let (get_prototype : t -> ArrayBuffer.t) =
      fun (x2036 : t) ->
        ArrayBuffer.t_of_js (Ojs.get_prop_ascii (t_to_js x2036) "prototype")
    let (create : t -> byteLength:float -> ArrayBuffer.t) =
      fun (x2038 : t) ->
        fun ~byteLength:(x2037 : float) ->
          ArrayBuffer.t_of_js
            (Ojs.new_obj (t_to_js x2038) [|(Ojs.float_to_js x2037)|])
    let (isView : t -> any -> bool) =
      fun (x2040 : t) ->
        fun (x2039 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x2040) "isView" [|(any_to_js x2039)|])
  end
let (arrayBuffer : ArrayBufferConstructor.t) =
  ArrayBufferConstructor.t_of_js
    (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
module ArrayBufferView =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2042 : Ojs.t) -> x2042
    and t_to_js : t -> Ojs.t = fun (x2041 : Ojs.t) -> x2041
    let (get_buffer : t -> ArrayBuffer.t) =
      fun (x2043 : t) ->
        ArrayBuffer.t_of_js (Ojs.get_prop_ascii (t_to_js x2043) "buffer")
    let (set_buffer : t -> ArrayBuffer.t -> unit) =
      fun (x2044 : t) ->
        fun (x2045 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (t_to_js x2044) "buffer"
            (ArrayBuffer.t_to_js x2045)
    let (get_byteLength : t -> float) =
      fun (x2046 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2046) "byteLength")
    let (set_byteLength : t -> float -> unit) =
      fun (x2047 : t) ->
        fun (x2048 : float) ->
          Ojs.set_prop_ascii (t_to_js x2047) "byteLength"
            (Ojs.float_to_js x2048)
    let (get_byteOffset : t -> float) =
      fun (x2049 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2049) "byteOffset")
    let (set_byteOffset : t -> float -> unit) =
      fun (x2050 : t) ->
        fun (x2051 : float) ->
          Ojs.set_prop_ascii (t_to_js x2050) "byteOffset"
            (Ojs.float_to_js x2051)
  end
module DataView =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2053 : Ojs.t) -> x2053
    and t_to_js : t -> Ojs.t = fun (x2052 : Ojs.t) -> x2052
    let (get_buffer : t -> ArrayBuffer.t) =
      fun (x2054 : t) ->
        ArrayBuffer.t_of_js (Ojs.get_prop_ascii (t_to_js x2054) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2055 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2055) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2056 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2056) "byteOffset")
    let (getFloat32 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2061 : t) ->
        fun ~byteOffset:(x2057 : float) ->
          fun ?littleEndian:(x2058 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2062 = t_to_js x2061 in
                 Ojs.call (Ojs.get_prop_ascii x2062 "getFloat32") "apply"
                   [|x2062;((let x2059 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2059 "push"
                                  [|(Ojs.float_to_js x2057)|]);
                             (match x2058 with
                              | Some x2060 ->
                                  ignore
                                    (Ojs.call x2059 "push"
                                       [|(Ojs.bool_to_js x2060)|])
                              | None -> ());
                             x2059))|])
    let (getFloat64 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2067 : t) ->
        fun ~byteOffset:(x2063 : float) ->
          fun ?littleEndian:(x2064 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2068 = t_to_js x2067 in
                 Ojs.call (Ojs.get_prop_ascii x2068 "getFloat64") "apply"
                   [|x2068;((let x2065 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2065 "push"
                                  [|(Ojs.float_to_js x2063)|]);
                             (match x2064 with
                              | Some x2066 ->
                                  ignore
                                    (Ojs.call x2065 "push"
                                       [|(Ojs.bool_to_js x2066)|])
                              | None -> ());
                             x2065))|])
    let (getInt8 : t -> byteOffset:float -> float) =
      fun (x2070 : t) ->
        fun ~byteOffset:(x2069 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2070) "getInt8" [|(Ojs.float_to_js x2069)|])
    let (getInt16 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2075 : t) ->
        fun ~byteOffset:(x2071 : float) ->
          fun ?littleEndian:(x2072 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2076 = t_to_js x2075 in
                 Ojs.call (Ojs.get_prop_ascii x2076 "getInt16") "apply"
                   [|x2076;((let x2073 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2073 "push"
                                  [|(Ojs.float_to_js x2071)|]);
                             (match x2072 with
                              | Some x2074 ->
                                  ignore
                                    (Ojs.call x2073 "push"
                                       [|(Ojs.bool_to_js x2074)|])
                              | None -> ());
                             x2073))|])
    let (getInt32 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2081 : t) ->
        fun ~byteOffset:(x2077 : float) ->
          fun ?littleEndian:(x2078 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2082 = t_to_js x2081 in
                 Ojs.call (Ojs.get_prop_ascii x2082 "getInt32") "apply"
                   [|x2082;((let x2079 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2079 "push"
                                  [|(Ojs.float_to_js x2077)|]);
                             (match x2078 with
                              | Some x2080 ->
                                  ignore
                                    (Ojs.call x2079 "push"
                                       [|(Ojs.bool_to_js x2080)|])
                              | None -> ());
                             x2079))|])
    let (getUint8 : t -> byteOffset:float -> float) =
      fun (x2084 : t) ->
        fun ~byteOffset:(x2083 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2084) "getUint8" [|(Ojs.float_to_js x2083)|])
    let (getUint16 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2089 : t) ->
        fun ~byteOffset:(x2085 : float) ->
          fun ?littleEndian:(x2086 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2090 = t_to_js x2089 in
                 Ojs.call (Ojs.get_prop_ascii x2090 "getUint16") "apply"
                   [|x2090;((let x2087 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2087 "push"
                                  [|(Ojs.float_to_js x2085)|]);
                             (match x2086 with
                              | Some x2088 ->
                                  ignore
                                    (Ojs.call x2087 "push"
                                       [|(Ojs.bool_to_js x2088)|])
                              | None -> ());
                             x2087))|])
    let (getUint32 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2095 : t) ->
        fun ~byteOffset:(x2091 : float) ->
          fun ?littleEndian:(x2092 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2096 = t_to_js x2095 in
                 Ojs.call (Ojs.get_prop_ascii x2096 "getUint32") "apply"
                   [|x2096;((let x2093 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2093 "push"
                                  [|(Ojs.float_to_js x2091)|]);
                             (match x2092 with
                              | Some x2094 ->
                                  ignore
                                    (Ojs.call x2093 "push"
                                       [|(Ojs.bool_to_js x2094)|])
                              | None -> ());
                             x2093))|])
    let (setFloat32 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2102 : t) ->
        fun ~byteOffset:(x2097 : float) ->
          fun ~value:(x2098 : float) ->
            fun ?littleEndian:(x2099 : bool option) ->
              fun () ->
                ignore
                  (let x2103 = t_to_js x2102 in
                   Ojs.call (Ojs.get_prop_ascii x2103 "setFloat32") "apply"
                     [|x2103;((let x2100 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2100 "push"
                                    [|(Ojs.float_to_js x2097)|]);
                               ignore
                                 (Ojs.call x2100 "push"
                                    [|(Ojs.float_to_js x2098)|]);
                               (match x2099 with
                                | Some x2101 ->
                                    ignore
                                      (Ojs.call x2100 "push"
                                         [|(Ojs.bool_to_js x2101)|])
                                | None -> ());
                               x2100))|])
    let (setFloat64 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2109 : t) ->
        fun ~byteOffset:(x2104 : float) ->
          fun ~value:(x2105 : float) ->
            fun ?littleEndian:(x2106 : bool option) ->
              fun () ->
                ignore
                  (let x2110 = t_to_js x2109 in
                   Ojs.call (Ojs.get_prop_ascii x2110 "setFloat64") "apply"
                     [|x2110;((let x2107 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2107 "push"
                                    [|(Ojs.float_to_js x2104)|]);
                               ignore
                                 (Ojs.call x2107 "push"
                                    [|(Ojs.float_to_js x2105)|]);
                               (match x2106 with
                                | Some x2108 ->
                                    ignore
                                      (Ojs.call x2107 "push"
                                         [|(Ojs.bool_to_js x2108)|])
                                | None -> ());
                               x2107))|])
    let (setInt8 : t -> byteOffset:float -> value:float -> unit) =
      fun (x2113 : t) ->
        fun ~byteOffset:(x2111 : float) ->
          fun ~value:(x2112 : float) ->
            ignore
              (Ojs.call (t_to_js x2113) "setInt8"
                 [|(Ojs.float_to_js x2111);(Ojs.float_to_js x2112)|])
    let (setInt16 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2119 : t) ->
        fun ~byteOffset:(x2114 : float) ->
          fun ~value:(x2115 : float) ->
            fun ?littleEndian:(x2116 : bool option) ->
              fun () ->
                ignore
                  (let x2120 = t_to_js x2119 in
                   Ojs.call (Ojs.get_prop_ascii x2120 "setInt16") "apply"
                     [|x2120;((let x2117 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2117 "push"
                                    [|(Ojs.float_to_js x2114)|]);
                               ignore
                                 (Ojs.call x2117 "push"
                                    [|(Ojs.float_to_js x2115)|]);
                               (match x2116 with
                                | Some x2118 ->
                                    ignore
                                      (Ojs.call x2117 "push"
                                         [|(Ojs.bool_to_js x2118)|])
                                | None -> ());
                               x2117))|])
    let (setInt32 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2126 : t) ->
        fun ~byteOffset:(x2121 : float) ->
          fun ~value:(x2122 : float) ->
            fun ?littleEndian:(x2123 : bool option) ->
              fun () ->
                ignore
                  (let x2127 = t_to_js x2126 in
                   Ojs.call (Ojs.get_prop_ascii x2127 "setInt32") "apply"
                     [|x2127;((let x2124 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2124 "push"
                                    [|(Ojs.float_to_js x2121)|]);
                               ignore
                                 (Ojs.call x2124 "push"
                                    [|(Ojs.float_to_js x2122)|]);
                               (match x2123 with
                                | Some x2125 ->
                                    ignore
                                      (Ojs.call x2124 "push"
                                         [|(Ojs.bool_to_js x2125)|])
                                | None -> ());
                               x2124))|])
    let (setUint8 : t -> byteOffset:float -> value:float -> unit) =
      fun (x2130 : t) ->
        fun ~byteOffset:(x2128 : float) ->
          fun ~value:(x2129 : float) ->
            ignore
              (Ojs.call (t_to_js x2130) "setUint8"
                 [|(Ojs.float_to_js x2128);(Ojs.float_to_js x2129)|])
    let (setUint16 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2136 : t) ->
        fun ~byteOffset:(x2131 : float) ->
          fun ~value:(x2132 : float) ->
            fun ?littleEndian:(x2133 : bool option) ->
              fun () ->
                ignore
                  (let x2137 = t_to_js x2136 in
                   Ojs.call (Ojs.get_prop_ascii x2137 "setUint16") "apply"
                     [|x2137;((let x2134 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2134 "push"
                                    [|(Ojs.float_to_js x2131)|]);
                               ignore
                                 (Ojs.call x2134 "push"
                                    [|(Ojs.float_to_js x2132)|]);
                               (match x2133 with
                                | Some x2135 ->
                                    ignore
                                      (Ojs.call x2134 "push"
                                         [|(Ojs.bool_to_js x2135)|])
                                | None -> ());
                               x2134))|])
    let (setUint32 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2143 : t) ->
        fun ~byteOffset:(x2138 : float) ->
          fun ~value:(x2139 : float) ->
            fun ?littleEndian:(x2140 : bool option) ->
              fun () ->
                ignore
                  (let x2144 = t_to_js x2143 in
                   Ojs.call (Ojs.get_prop_ascii x2144 "setUint32") "apply"
                     [|x2144;((let x2141 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2141 "push"
                                    [|(Ojs.float_to_js x2138)|]);
                               ignore
                                 (Ojs.call x2141 "push"
                                    [|(Ojs.float_to_js x2139)|]);
                               (match x2140 with
                                | Some x2142 ->
                                    ignore
                                      (Ojs.call x2141 "push"
                                         [|(Ojs.bool_to_js x2142)|])
                                | None -> ());
                               x2141))|])
    let (create :
      buffer:ArrayBuffer.t ->
        ?byteOffset:float -> ?byteLength:float -> unit -> t)
      =
      fun ~buffer:(x2145 : ArrayBuffer.t) ->
        fun ?byteOffset:(x2146 : float option) ->
          fun ?byteLength:(x2147 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x2148 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2148 "push" [|(ArrayBuffer.t_to_js x2145)|]);
                    (match x2146 with
                     | Some x2150 ->
                         ignore
                           (Ojs.call x2148 "push" [|(Ojs.float_to_js x2150)|])
                     | None -> ());
                    (match x2147 with
                     | Some x2149 ->
                         ignore
                           (Ojs.call x2148 "push" [|(Ojs.float_to_js x2149)|])
                     | None -> ());
                    x2148))
  end
module DataViewConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2152 : Ojs.t) -> x2152
    and t_to_js : t -> Ojs.t = fun (x2151 : Ojs.t) -> x2151
    let (get_prototype : t -> DataView.t) =
      fun (x2153 : t) ->
        DataView.t_of_js (Ojs.get_prop_ascii (t_to_js x2153) "prototype")
    let (create :
      t ->
        buffer:ArrayBuffer.t ->
          ?byteOffset:float -> ?byteLength:float -> unit -> DataView.t)
      =
      fun (x2160 : t) ->
        fun ~buffer:(x2154 : ArrayBuffer.t) ->
          fun ?byteOffset:(x2155 : float option) ->
            fun ?byteLength:(x2156 : float option) ->
              fun () ->
                DataView.t_of_js
                  (Ojs.new_obj_arr (t_to_js x2160)
                     (let x2157 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2157 "push"
                           [|(ArrayBuffer.t_to_js x2154)|]);
                      (match x2155 with
                       | Some x2159 ->
                           ignore
                             (Ojs.call x2157 "push"
                                [|(Ojs.float_to_js x2159)|])
                       | None -> ());
                      (match x2156 with
                       | Some x2158 ->
                           ignore
                             (Ojs.call x2157 "push"
                                [|(Ojs.float_to_js x2158)|])
                       | None -> ());
                      x2157))
  end
let (dataView : DataViewConstructor.t) =
  DataViewConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "DataView")
module Int8Array =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2162 : Ojs.t) -> x2162
    and t_to_js : t -> Ojs.t = fun (x2161 : Ojs.t) -> x2161
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2163 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2163) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> ArrayBuffer.t) =
      fun (x2164 : t) ->
        ArrayBuffer.t_of_js (Ojs.get_prop_ascii (t_to_js x2164) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2165 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2165) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2166 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2166) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2172 : t) ->
        fun ~target:(x2167 : float) ->
          fun ~start:(x2168 : float) ->
            fun ?end_:(x2169 : float option) ->
              fun () ->
                t_of_js
                  (let x2173 = t_to_js x2172 in
                   Ojs.call (Ojs.get_prop_ascii x2173 "copyWithin") "apply"
                     [|x2173;((let x2170 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2170 "push"
                                    [|(Ojs.float_to_js x2167)|]);
                               ignore
                                 (Ojs.call x2170 "push"
                                    [|(Ojs.float_to_js x2168)|]);
                               (match x2169 with
                                | Some x2171 ->
                                    ignore
                                      (Ojs.call x2170 "push"
                                         [|(Ojs.float_to_js x2171)|])
                                | None -> ());
                               x2170))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2181 : t) ->
        fun (x2174 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2175 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2182 = t_to_js x2181 in
                 Ojs.call (Ojs.get_prop_ascii x2182 "every") "apply"
                   [|x2182;((let x2176 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2176 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2178 : Ojs.t) ->
                                          fun (x2179 : Ojs.t) ->
                                            fun (x2180 : Ojs.t) ->
                                              unknown_to_js
                                                (x2174
                                                   ~value:(Ojs.float_of_js
                                                             x2178)
                                                   ~index:(Ojs.float_of_js
                                                             x2179)
                                                   ~array:(t_of_js x2180))))|]);
                             (match x2175 with
                              | Some x2177 ->
                                  ignore
                                    (Ojs.call x2176 "push"
                                       [|(any_to_js x2177)|])
                              | None -> ());
                             x2176))|])
    let (fill : t -> float -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2189 : t) ->
        fun (x2183 : float) ->
          fun ?start:(x2184 : float option) ->
            fun ?end_:(x2185 : float option) ->
              fun () ->
                t_of_js
                  (let x2190 = t_to_js x2189 in
                   Ojs.call (Ojs.get_prop_ascii x2190 "fill") "apply"
                     [|x2190;((let x2186 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2186 "push"
                                    [|(Ojs.float_to_js x2183)|]);
                               (match x2184 with
                                | Some x2188 ->
                                    ignore
                                      (Ojs.call x2186 "push"
                                         [|(Ojs.float_to_js x2188)|])
                                | None -> ());
                               (match x2185 with
                                | Some x2187 ->
                                    ignore
                                      (Ojs.call x2186 "push"
                                         [|(Ojs.float_to_js x2187)|])
                                | None -> ());
                               x2186))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2198 : t) ->
        fun (x2191 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x2192 : any option) ->
            fun () ->
              t_of_js
                (let x2199 = t_to_js x2198 in
                 Ojs.call (Ojs.get_prop_ascii x2199 "filter") "apply"
                   [|x2199;((let x2193 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2193 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2195 : Ojs.t) ->
                                          fun (x2196 : Ojs.t) ->
                                            fun (x2197 : Ojs.t) ->
                                              any_to_js
                                                (x2191
                                                   ~value:(Ojs.float_of_js
                                                             x2195)
                                                   ~index:(Ojs.float_of_js
                                                             x2196)
                                                   ~array:(t_of_js x2197))))|]);
                             (match x2192 with
                              | Some x2194 ->
                                  ignore
                                    (Ojs.call x2193 "push"
                                       [|(any_to_js x2194)|])
                              | None -> ());
                             x2193))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2207 : t) ->
        fun (x2200 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2201 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2208 = t_to_js x2207 in
                 Ojs.call (Ojs.get_prop_ascii x2208 "find") "apply"
                   [|x2208;((let x2202 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2202 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2204 : Ojs.t) ->
                                          fun (x2205 : Ojs.t) ->
                                            fun (x2206 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2200
                                                   ~value:(Ojs.float_of_js
                                                             x2204)
                                                   ~index:(Ojs.float_of_js
                                                             x2205)
                                                   ~obj:(t_of_js x2206))))|]);
                             (match x2201 with
                              | Some x2203 ->
                                  ignore
                                    (Ojs.call x2202 "push"
                                       [|(any_to_js x2203)|])
                              | None -> ());
                             x2202))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2217 : t) ->
        fun (x2210 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2211 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2218 = t_to_js x2217 in
                 Ojs.call (Ojs.get_prop_ascii x2218 "findIndex") "apply"
                   [|x2218;((let x2212 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2212 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2214 : Ojs.t) ->
                                          fun (x2215 : Ojs.t) ->
                                            fun (x2216 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2210
                                                   ~value:(Ojs.float_of_js
                                                             x2214)
                                                   ~index:(Ojs.float_of_js
                                                             x2215)
                                                   ~obj:(t_of_js x2216))))|]);
                             (match x2211 with
                              | Some x2213 ->
                                  ignore
                                    (Ojs.call x2212 "push"
                                       [|(any_to_js x2213)|])
                              | None -> ());
                             x2212))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2226 : t) ->
        fun
          ~callbackfn:(x2219 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2220 : any option) ->
            fun () ->
              ignore
                (let x2227 = t_to_js x2226 in
                 Ojs.call (Ojs.get_prop_ascii x2227 "forEach") "apply"
                   [|x2227;((let x2221 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2221 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2223 : Ojs.t) ->
                                          fun (x2224 : Ojs.t) ->
                                            fun (x2225 : Ojs.t) ->
                                              x2219
                                                ~value:(Ojs.float_of_js x2223)
                                                ~index:(Ojs.float_of_js x2224)
                                                ~array:(t_of_js x2225)))|]);
                             (match x2220 with
                              | Some x2222 ->
                                  ignore
                                    (Ojs.call x2221 "push"
                                       [|(any_to_js x2222)|])
                              | None -> ());
                             x2221))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2232 : t) ->
        fun ~searchElement:(x2228 : float) ->
          fun ?fromIndex:(x2229 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2233 = t_to_js x2232 in
                 Ojs.call (Ojs.get_prop_ascii x2233 "indexOf") "apply"
                   [|x2233;((let x2230 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2230 "push"
                                  [|(Ojs.float_to_js x2228)|]);
                             (match x2229 with
                              | Some x2231 ->
                                  ignore
                                    (Ojs.call x2230 "push"
                                       [|(Ojs.float_to_js x2231)|])
                              | None -> ());
                             x2230))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2237 : t) ->
        fun ?separator:(x2234 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2238 = t_to_js x2237 in
               Ojs.call (Ojs.get_prop_ascii x2238 "join") "apply"
                 [|x2238;((let x2235 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2234 with
                            | Some x2236 ->
                                ignore
                                  (Ojs.call x2235 "push"
                                     [|(Ojs.string_to_js x2236)|])
                            | None -> ());
                           x2235))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2243 : t) ->
        fun ~searchElement:(x2239 : float) ->
          fun ?fromIndex:(x2240 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2244 = t_to_js x2243 in
                 Ojs.call (Ojs.get_prop_ascii x2244 "lastIndexOf") "apply"
                   [|x2244;((let x2241 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2241 "push"
                                  [|(Ojs.float_to_js x2239)|]);
                             (match x2240 with
                              | Some x2242 ->
                                  ignore
                                    (Ojs.call x2241 "push"
                                       [|(Ojs.float_to_js x2242)|])
                              | None -> ());
                             x2241))|])
    let (get_length : t -> float) =
      fun (x2245 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2245) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2253 : t) ->
        fun
          ~callbackfn:(x2246 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2247 : any option) ->
            fun () ->
              t_of_js
                (let x2254 = t_to_js x2253 in
                 Ojs.call (Ojs.get_prop_ascii x2254 "map") "apply"
                   [|x2254;((let x2248 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2248 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2250 : Ojs.t) ->
                                          fun (x2251 : Ojs.t) ->
                                            fun (x2252 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2246
                                                   ~value:(Ojs.float_of_js
                                                             x2250)
                                                   ~index:(Ojs.float_of_js
                                                             x2251)
                                                   ~array:(t_of_js x2252))))|]);
                             (match x2247 with
                              | Some x2249 ->
                                  ignore
                                    (Ojs.call x2248 "push"
                                       [|(any_to_js x2249)|])
                              | None -> ());
                             x2248))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2260 : t) ->
        fun
          ~callbackfn:(x2255 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2260) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2256 : Ojs.t) ->
                       fun (x2257 : Ojs.t) ->
                         fun (x2258 : Ojs.t) ->
                           fun (x2259 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2255 ~previousValue:(Ojs.float_of_js x2256)
                                  ~currentValue:(Ojs.float_of_js x2257)
                                  ~currentIndex:(Ojs.float_of_js x2258)
                                  ~array:(t_of_js x2259))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2267 : t) ->
        fun
          ~callbackfn:(x2261 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2266 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2267) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2262 : Ojs.t) ->
                         fun (x2263 : Ojs.t) ->
                           fun (x2264 : Ojs.t) ->
                             fun (x2265 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2261
                                    ~previousValue:(Ojs.float_of_js x2262)
                                    ~currentValue:(Ojs.float_of_js x2263)
                                    ~currentIndex:(Ojs.float_of_js x2264)
                                    ~array:(t_of_js x2265))));(Ojs.float_to_js
                                                                 x2266)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2274 : t) ->
        fun
          ~callbackfn:(x2268 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2273 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2274) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2269 : Ojs.t) ->
                         fun (x2270 : Ojs.t) ->
                           fun (x2271 : Ojs.t) ->
                             fun (x2272 : Ojs.t) ->
                               Obj.magic
                                 (x2268 ~previousValue:(Obj.magic x2269)
                                    ~currentValue:(Ojs.float_of_js x2270)
                                    ~currentIndex:(Ojs.float_of_js x2271)
                                    ~array:(t_of_js x2272))));(Obj.magic
                                                                 x2273)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2280 : t) ->
        fun
          ~callbackfn:(x2275 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2280) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x2276 : Ojs.t) ->
                       fun (x2277 : Ojs.t) ->
                         fun (x2278 : Ojs.t) ->
                           fun (x2279 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2275 ~previousValue:(Ojs.float_of_js x2276)
                                  ~currentValue:(Ojs.float_of_js x2277)
                                  ~currentIndex:(Ojs.float_of_js x2278)
                                  ~array:(t_of_js x2279))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2287 : t) ->
        fun
          ~callbackfn:(x2281 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2286 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2287) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2282 : Ojs.t) ->
                         fun (x2283 : Ojs.t) ->
                           fun (x2284 : Ojs.t) ->
                             fun (x2285 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2281
                                    ~previousValue:(Ojs.float_of_js x2282)
                                    ~currentValue:(Ojs.float_of_js x2283)
                                    ~currentIndex:(Ojs.float_of_js x2284)
                                    ~array:(t_of_js x2285))));(Ojs.float_to_js
                                                                 x2286)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2294 : t) ->
        fun
          ~callbackfn:(x2288 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2293 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2294) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2289 : Ojs.t) ->
                         fun (x2290 : Ojs.t) ->
                           fun (x2291 : Ojs.t) ->
                             fun (x2292 : Ojs.t) ->
                               Obj.magic
                                 (x2288 ~previousValue:(Obj.magic x2289)
                                    ~currentValue:(Ojs.float_of_js x2290)
                                    ~currentIndex:(Ojs.float_of_js x2291)
                                    ~array:(t_of_js x2292))));(Obj.magic
                                                                 x2293)|])
    let (reverse : t -> t) =
      fun (x2295 : t) -> t_of_js (Ojs.call (t_to_js x2295) "reverse" [||])
    let (set_ : t -> array:float Array.t -> ?offset:float -> unit -> unit) =
      fun (x2301 : t) ->
        fun ~array:(x2296 : float Array.t) ->
          fun ?offset:(x2297 : float option) ->
            fun () ->
              ignore
                (let x2302 = t_to_js x2301 in
                 Ojs.call (Ojs.get_prop_ascii x2302 "set") "apply"
                   [|x2302;((let x2298 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2298 "push"
                                  [|(Array.t_to_js Ojs.float_to_js x2296)|]);
                             (match x2297 with
                              | Some x2299 ->
                                  ignore
                                    (Ojs.call x2298 "push"
                                       [|(Ojs.float_to_js x2299)|])
                              | None -> ());
                             x2298))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2308 : t) ->
        fun ?start:(x2303 : float option) ->
          fun ?end_:(x2304 : float option) ->
            fun () ->
              t_of_js
                (let x2309 = t_to_js x2308 in
                 Ojs.call (Ojs.get_prop_ascii x2309 "slice") "apply"
                   [|x2309;((let x2305 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2303 with
                              | Some x2307 ->
                                  ignore
                                    (Ojs.call x2305 "push"
                                       [|(Ojs.float_to_js x2307)|])
                              | None -> ());
                             (match x2304 with
                              | Some x2306 ->
                                  ignore
                                    (Ojs.call x2305 "push"
                                       [|(Ojs.float_to_js x2306)|])
                              | None -> ());
                             x2305))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2317 : t) ->
        fun (x2310 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2311 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2318 = t_to_js x2317 in
                 Ojs.call (Ojs.get_prop_ascii x2318 "some") "apply"
                   [|x2318;((let x2312 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2312 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2314 : Ojs.t) ->
                                          fun (x2315 : Ojs.t) ->
                                            fun (x2316 : Ojs.t) ->
                                              unknown_to_js
                                                (x2310
                                                   ~value:(Ojs.float_of_js
                                                             x2314)
                                                   ~index:(Ojs.float_of_js
                                                             x2315)
                                                   ~array:(t_of_js x2316))))|]);
                             (match x2311 with
                              | Some x2313 ->
                                  ignore
                                    (Ojs.call x2312 "push"
                                       [|(any_to_js x2313)|])
                              | None -> ());
                             x2312))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x2324 : t) ->
        fun ?compareFn:(x2319 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x2325 = t_to_js x2324 in
               Ojs.call (Ojs.get_prop_ascii x2325 "sort") "apply"
                 [|x2325;((let x2320 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2319 with
                            | Some x2321 ->
                                ignore
                                  (Ojs.call x2320 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2322 : Ojs.t) ->
                                             fun (x2323 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x2321
                                                    ~a:(Ojs.float_of_js x2322)
                                                    ~b:(Ojs.float_of_js x2323))))|])
                            | None -> ());
                           x2320))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x2331 : t) ->
        fun ?begin_:(x2326 : float option) ->
          fun ?end_:(x2327 : float option) ->
            fun () ->
              t_of_js
                (let x2332 = t_to_js x2331 in
                 Ojs.call (Ojs.get_prop_ascii x2332 "subarray") "apply"
                   [|x2332;((let x2328 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2326 with
                              | Some x2330 ->
                                  ignore
                                    (Ojs.call x2328 "push"
                                       [|(Ojs.float_to_js x2330)|])
                              | None -> ());
                             (match x2327 with
                              | Some x2329 ->
                                  ignore
                                    (Ojs.call x2328 "push"
                                       [|(Ojs.float_to_js x2329)|])
                              | None -> ());
                             x2328))|])
    let (toLocaleString : t -> string) =
      fun (x2333 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2333) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x2334 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2334) "toString" [||])
    let (valueOf : t -> t) =
      fun (x2335 : t) -> t_of_js (Ojs.call (t_to_js x2335) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x2336 : t) ->
        fun (x2337 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x2336) (Ojs.float_to_js x2337))
    let (set : t -> float -> float -> unit) =
      fun (x2338 : t) ->
        fun (x2339 : float) ->
          fun (x2340 : float) ->
            Ojs.set_prop (t_to_js x2338) (Ojs.float_to_js x2339)
              (Ojs.float_to_js x2340)
    let (create : length:float -> t) =
      fun ~length:(x2341 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x2341)|])
    let (create' : array:(ArrayBuffer.t, float Array.t) union2 -> t) =
      fun ~array:(x2342 : (ArrayBuffer.t, float Array.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(union2_to_js ArrayBuffer.t_to_js
                  (fun (x2344 : float Array.t) ->
                     Array.t_to_js Ojs.float_to_js x2344) x2342)|])
    let (create'' :
      buffer:ArrayBuffer.t -> ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x2346 : ArrayBuffer.t) ->
        fun ?byteOffset:(x2347 : float option) ->
          fun ?length:(x2348 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x2349 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2349 "push" [|(ArrayBuffer.t_to_js x2346)|]);
                    (match x2347 with
                     | Some x2351 ->
                         ignore
                           (Ojs.call x2349 "push" [|(Ojs.float_to_js x2351)|])
                     | None -> ());
                    (match x2348 with
                     | Some x2350 ->
                         ignore
                           (Ojs.call x2349 "push" [|(Ojs.float_to_js x2350)|])
                     | None -> ());
                    x2349))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x2352 : float list) ->
        t_of_js
          (let x2355 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x2355 "of") "apply"
             [|x2355;((let x2353 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2354 : float) ->
                            ignore
                              (Ojs.call x2353 "push"
                                 [|(Ojs.float_to_js x2354)|])) x2352;
                       x2353))|])
    let (from : array:float Array.t -> t) =
      fun ~array:(x2356 : float Array.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(Array.t_to_js Ojs.float_to_js x2356)|])
    let (from' :
      array:'T Array.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~array:(x2358 : 'T Array.t) ->
        fun ~mapfn:(x2359 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x2360 : any option) ->
            fun () ->
              t_of_js
                (let x2366 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x2366 "from") "apply"
                   [|x2366;((let x2361 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2361 "push"
                                  [|(Array.t_to_js Obj.magic x2358)|]);
                             ignore
                               (Ojs.call x2361 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2363 : Ojs.t) ->
                                          fun (x2364 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x2359 ~v:(Obj.magic x2363)
                                                 ~k:(Ojs.float_of_js x2364))))|]);
                             (match x2360 with
                              | Some x2362 ->
                                  ignore
                                    (Ojs.call x2361 "push"
                                       [|(any_to_js x2362)|])
                              | None -> ());
                             x2361))|])
  end
module Int8ArrayConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2368 : Ojs.t) -> x2368
    and t_to_js : t -> Ojs.t = fun (x2367 : Ojs.t) -> x2367
    let (get_prototype : t -> Int8Array.t) =
      fun (x2369 : t) ->
        Int8Array.t_of_js (Ojs.get_prop_ascii (t_to_js x2369) "prototype")
    let (create : t -> length:float -> Int8Array.t) =
      fun (x2371 : t) ->
        fun ~length:(x2370 : float) ->
          Int8Array.t_of_js
            (Ojs.new_obj (t_to_js x2371) [|(Ojs.float_to_js x2370)|])
    let (create' :
      t -> array:(ArrayBuffer.t, float Array.t) union2 -> Int8Array.t) =
      fun (x2376 : t) ->
        fun ~array:(x2372 : (ArrayBuffer.t, float Array.t) union2) ->
          Int8Array.t_of_js
            (Ojs.new_obj (t_to_js x2376)
               [|(union2_to_js ArrayBuffer.t_to_js
                    (fun (x2374 : float Array.t) ->
                       Array.t_to_js Ojs.float_to_js x2374) x2372)|])
    let (create'' :
      t ->
        buffer:ArrayBuffer.t ->
          ?byteOffset:float -> ?length:float -> unit -> Int8Array.t)
      =
      fun (x2383 : t) ->
        fun ~buffer:(x2377 : ArrayBuffer.t) ->
          fun ?byteOffset:(x2378 : float option) ->
            fun ?length:(x2379 : float option) ->
              fun () ->
                Int8Array.t_of_js
                  (Ojs.new_obj_arr (t_to_js x2383)
                     (let x2380 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2380 "push"
                           [|(ArrayBuffer.t_to_js x2377)|]);
                      (match x2378 with
                       | Some x2382 ->
                           ignore
                             (Ojs.call x2380 "push"
                                [|(Ojs.float_to_js x2382)|])
                       | None -> ());
                      (match x2379 with
                       | Some x2381 ->
                           ignore
                             (Ojs.call x2380 "push"
                                [|(Ojs.float_to_js x2381)|])
                       | None -> ());
                      x2380))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2384 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2384) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> Int8Array.t) =
      fun (x2388 : t) ->
        fun (x2385 : float list) ->
          Int8Array.t_of_js
            (let x2389 = t_to_js x2388 in
             Ojs.call (Ojs.get_prop_ascii x2389 "of") "apply"
               [|x2389;((let x2386 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x2387 : float) ->
                              ignore
                                (Ojs.call x2386 "push"
                                   [|(Ojs.float_to_js x2387)|])) x2385;
                         x2386))|])
    let (from : t -> array:float Array.t -> Int8Array.t) =
      fun (x2392 : t) ->
        fun ~array:(x2390 : float Array.t) ->
          Int8Array.t_of_js
            (Ojs.call (t_to_js x2392) "from"
               [|(Array.t_to_js Ojs.float_to_js x2390)|])
    let (from' :
      t ->
        array:'T Array.t ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> Int8Array.t)
      =
      fun (x2401 : t) ->
        fun ~array:(x2393 : 'T Array.t) ->
          fun ~mapfn:(x2394 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x2395 : any option) ->
              fun () ->
                Int8Array.t_of_js
                  (let x2402 = t_to_js x2401 in
                   Ojs.call (Ojs.get_prop_ascii x2402 "from") "apply"
                     [|x2402;((let x2396 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2396 "push"
                                    [|(Array.t_to_js Obj.magic x2393)|]);
                               ignore
                                 (Ojs.call x2396 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x2398 : Ojs.t) ->
                                            fun (x2399 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2394 ~v:(Obj.magic x2398)
                                                   ~k:(Ojs.float_of_js x2399))))|]);
                               (match x2395 with
                                | Some x2397 ->
                                    ignore
                                      (Ojs.call x2396 "push"
                                         [|(any_to_js x2397)|])
                                | None -> ());
                               x2396))|])
  end
let (int8Array : Int8ArrayConstructor.t) =
  Int8ArrayConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Int8Array")
module Uint8Array =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2404 : Ojs.t) -> x2404
    and t_to_js : t -> Ojs.t = fun (x2403 : Ojs.t) -> x2403
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2405 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2405) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> ArrayBuffer.t) =
      fun (x2406 : t) ->
        ArrayBuffer.t_of_js (Ojs.get_prop_ascii (t_to_js x2406) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2407 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2407) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2408 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2408) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2414 : t) ->
        fun ~target:(x2409 : float) ->
          fun ~start:(x2410 : float) ->
            fun ?end_:(x2411 : float option) ->
              fun () ->
                t_of_js
                  (let x2415 = t_to_js x2414 in
                   Ojs.call (Ojs.get_prop_ascii x2415 "copyWithin") "apply"
                     [|x2415;((let x2412 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2412 "push"
                                    [|(Ojs.float_to_js x2409)|]);
                               ignore
                                 (Ojs.call x2412 "push"
                                    [|(Ojs.float_to_js x2410)|]);
                               (match x2411 with
                                | Some x2413 ->
                                    ignore
                                      (Ojs.call x2412 "push"
                                         [|(Ojs.float_to_js x2413)|])
                                | None -> ());
                               x2412))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2423 : t) ->
        fun (x2416 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2417 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2424 = t_to_js x2423 in
                 Ojs.call (Ojs.get_prop_ascii x2424 "every") "apply"
                   [|x2424;((let x2418 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2418 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2420 : Ojs.t) ->
                                          fun (x2421 : Ojs.t) ->
                                            fun (x2422 : Ojs.t) ->
                                              unknown_to_js
                                                (x2416
                                                   ~value:(Ojs.float_of_js
                                                             x2420)
                                                   ~index:(Ojs.float_of_js
                                                             x2421)
                                                   ~array:(t_of_js x2422))))|]);
                             (match x2417 with
                              | Some x2419 ->
                                  ignore
                                    (Ojs.call x2418 "push"
                                       [|(any_to_js x2419)|])
                              | None -> ());
                             x2418))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2431 : t) ->
        fun ~value:(x2425 : float) ->
          fun ?start:(x2426 : float option) ->
            fun ?end_:(x2427 : float option) ->
              fun () ->
                t_of_js
                  (let x2432 = t_to_js x2431 in
                   Ojs.call (Ojs.get_prop_ascii x2432 "fill") "apply"
                     [|x2432;((let x2428 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2428 "push"
                                    [|(Ojs.float_to_js x2425)|]);
                               (match x2426 with
                                | Some x2430 ->
                                    ignore
                                      (Ojs.call x2428 "push"
                                         [|(Ojs.float_to_js x2430)|])
                                | None -> ());
                               (match x2427 with
                                | Some x2429 ->
                                    ignore
                                      (Ojs.call x2428 "push"
                                         [|(Ojs.float_to_js x2429)|])
                                | None -> ());
                               x2428))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2440 : t) ->
        fun (x2433 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x2434 : any option) ->
            fun () ->
              t_of_js
                (let x2441 = t_to_js x2440 in
                 Ojs.call (Ojs.get_prop_ascii x2441 "filter") "apply"
                   [|x2441;((let x2435 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2435 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2437 : Ojs.t) ->
                                          fun (x2438 : Ojs.t) ->
                                            fun (x2439 : Ojs.t) ->
                                              any_to_js
                                                (x2433
                                                   ~value:(Ojs.float_of_js
                                                             x2437)
                                                   ~index:(Ojs.float_of_js
                                                             x2438)
                                                   ~array:(t_of_js x2439))))|]);
                             (match x2434 with
                              | Some x2436 ->
                                  ignore
                                    (Ojs.call x2435 "push"
                                       [|(any_to_js x2436)|])
                              | None -> ());
                             x2435))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2449 : t) ->
        fun (x2442 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2443 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2450 = t_to_js x2449 in
                 Ojs.call (Ojs.get_prop_ascii x2450 "find") "apply"
                   [|x2450;((let x2444 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2444 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2446 : Ojs.t) ->
                                          fun (x2447 : Ojs.t) ->
                                            fun (x2448 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2442
                                                   ~value:(Ojs.float_of_js
                                                             x2446)
                                                   ~index:(Ojs.float_of_js
                                                             x2447)
                                                   ~obj:(t_of_js x2448))))|]);
                             (match x2443 with
                              | Some x2445 ->
                                  ignore
                                    (Ojs.call x2444 "push"
                                       [|(any_to_js x2445)|])
                              | None -> ());
                             x2444))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2459 : t) ->
        fun (x2452 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2453 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2460 = t_to_js x2459 in
                 Ojs.call (Ojs.get_prop_ascii x2460 "findIndex") "apply"
                   [|x2460;((let x2454 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2454 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2456 : Ojs.t) ->
                                          fun (x2457 : Ojs.t) ->
                                            fun (x2458 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2452
                                                   ~value:(Ojs.float_of_js
                                                             x2456)
                                                   ~index:(Ojs.float_of_js
                                                             x2457)
                                                   ~obj:(t_of_js x2458))))|]);
                             (match x2453 with
                              | Some x2455 ->
                                  ignore
                                    (Ojs.call x2454 "push"
                                       [|(any_to_js x2455)|])
                              | None -> ());
                             x2454))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2468 : t) ->
        fun
          ~callbackfn:(x2461 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2462 : any option) ->
            fun () ->
              ignore
                (let x2469 = t_to_js x2468 in
                 Ojs.call (Ojs.get_prop_ascii x2469 "forEach") "apply"
                   [|x2469;((let x2463 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2463 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2465 : Ojs.t) ->
                                          fun (x2466 : Ojs.t) ->
                                            fun (x2467 : Ojs.t) ->
                                              x2461
                                                ~value:(Ojs.float_of_js x2465)
                                                ~index:(Ojs.float_of_js x2466)
                                                ~array:(t_of_js x2467)))|]);
                             (match x2462 with
                              | Some x2464 ->
                                  ignore
                                    (Ojs.call x2463 "push"
                                       [|(any_to_js x2464)|])
                              | None -> ());
                             x2463))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2474 : t) ->
        fun ~searchElement:(x2470 : float) ->
          fun ?fromIndex:(x2471 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2475 = t_to_js x2474 in
                 Ojs.call (Ojs.get_prop_ascii x2475 "indexOf") "apply"
                   [|x2475;((let x2472 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2472 "push"
                                  [|(Ojs.float_to_js x2470)|]);
                             (match x2471 with
                              | Some x2473 ->
                                  ignore
                                    (Ojs.call x2472 "push"
                                       [|(Ojs.float_to_js x2473)|])
                              | None -> ());
                             x2472))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2479 : t) ->
        fun ?separator:(x2476 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2480 = t_to_js x2479 in
               Ojs.call (Ojs.get_prop_ascii x2480 "join") "apply"
                 [|x2480;((let x2477 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2476 with
                            | Some x2478 ->
                                ignore
                                  (Ojs.call x2477 "push"
                                     [|(Ojs.string_to_js x2478)|])
                            | None -> ());
                           x2477))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2485 : t) ->
        fun ~searchElement:(x2481 : float) ->
          fun ?fromIndex:(x2482 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2486 = t_to_js x2485 in
                 Ojs.call (Ojs.get_prop_ascii x2486 "lastIndexOf") "apply"
                   [|x2486;((let x2483 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2483 "push"
                                  [|(Ojs.float_to_js x2481)|]);
                             (match x2482 with
                              | Some x2484 ->
                                  ignore
                                    (Ojs.call x2483 "push"
                                       [|(Ojs.float_to_js x2484)|])
                              | None -> ());
                             x2483))|])
    let (get_length : t -> float) =
      fun (x2487 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2487) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2495 : t) ->
        fun
          ~callbackfn:(x2488 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2489 : any option) ->
            fun () ->
              t_of_js
                (let x2496 = t_to_js x2495 in
                 Ojs.call (Ojs.get_prop_ascii x2496 "map") "apply"
                   [|x2496;((let x2490 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2490 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2492 : Ojs.t) ->
                                          fun (x2493 : Ojs.t) ->
                                            fun (x2494 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2488
                                                   ~value:(Ojs.float_of_js
                                                             x2492)
                                                   ~index:(Ojs.float_of_js
                                                             x2493)
                                                   ~array:(t_of_js x2494))))|]);
                             (match x2489 with
                              | Some x2491 ->
                                  ignore
                                    (Ojs.call x2490 "push"
                                       [|(any_to_js x2491)|])
                              | None -> ());
                             x2490))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2502 : t) ->
        fun
          ~callbackfn:(x2497 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2502) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2498 : Ojs.t) ->
                       fun (x2499 : Ojs.t) ->
                         fun (x2500 : Ojs.t) ->
                           fun (x2501 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2497 ~previousValue:(Ojs.float_of_js x2498)
                                  ~currentValue:(Ojs.float_of_js x2499)
                                  ~currentIndex:(Ojs.float_of_js x2500)
                                  ~array:(t_of_js x2501))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2509 : t) ->
        fun
          ~callbackfn:(x2503 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2508 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2509) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2504 : Ojs.t) ->
                         fun (x2505 : Ojs.t) ->
                           fun (x2506 : Ojs.t) ->
                             fun (x2507 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2503
                                    ~previousValue:(Ojs.float_of_js x2504)
                                    ~currentValue:(Ojs.float_of_js x2505)
                                    ~currentIndex:(Ojs.float_of_js x2506)
                                    ~array:(t_of_js x2507))));(Ojs.float_to_js
                                                                 x2508)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2516 : t) ->
        fun
          ~callbackfn:(x2510 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2515 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2516) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2511 : Ojs.t) ->
                         fun (x2512 : Ojs.t) ->
                           fun (x2513 : Ojs.t) ->
                             fun (x2514 : Ojs.t) ->
                               Obj.magic
                                 (x2510 ~previousValue:(Obj.magic x2511)
                                    ~currentValue:(Ojs.float_of_js x2512)
                                    ~currentIndex:(Ojs.float_of_js x2513)
                                    ~array:(t_of_js x2514))));(Obj.magic
                                                                 x2515)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2522 : t) ->
        fun
          ~callbackfn:(x2517 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2522) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x2518 : Ojs.t) ->
                       fun (x2519 : Ojs.t) ->
                         fun (x2520 : Ojs.t) ->
                           fun (x2521 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2517 ~previousValue:(Ojs.float_of_js x2518)
                                  ~currentValue:(Ojs.float_of_js x2519)
                                  ~currentIndex:(Ojs.float_of_js x2520)
                                  ~array:(t_of_js x2521))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2529 : t) ->
        fun
          ~callbackfn:(x2523 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2528 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2529) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2524 : Ojs.t) ->
                         fun (x2525 : Ojs.t) ->
                           fun (x2526 : Ojs.t) ->
                             fun (x2527 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2523
                                    ~previousValue:(Ojs.float_of_js x2524)
                                    ~currentValue:(Ojs.float_of_js x2525)
                                    ~currentIndex:(Ojs.float_of_js x2526)
                                    ~array:(t_of_js x2527))));(Ojs.float_to_js
                                                                 x2528)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2536 : t) ->
        fun
          ~callbackfn:(x2530 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2535 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2536) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2531 : Ojs.t) ->
                         fun (x2532 : Ojs.t) ->
                           fun (x2533 : Ojs.t) ->
                             fun (x2534 : Ojs.t) ->
                               Obj.magic
                                 (x2530 ~previousValue:(Obj.magic x2531)
                                    ~currentValue:(Ojs.float_of_js x2532)
                                    ~currentIndex:(Ojs.float_of_js x2533)
                                    ~array:(t_of_js x2534))));(Obj.magic
                                                                 x2535)|])
    let (reverse : t -> t) =
      fun (x2537 : t) -> t_of_js (Ojs.call (t_to_js x2537) "reverse" [||])
    let (set_ : t -> array:float Array.t -> ?offset:float -> unit -> unit) =
      fun (x2543 : t) ->
        fun ~array:(x2538 : float Array.t) ->
          fun ?offset:(x2539 : float option) ->
            fun () ->
              ignore
                (let x2544 = t_to_js x2543 in
                 Ojs.call (Ojs.get_prop_ascii x2544 "set") "apply"
                   [|x2544;((let x2540 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2540 "push"
                                  [|(Array.t_to_js Ojs.float_to_js x2538)|]);
                             (match x2539 with
                              | Some x2541 ->
                                  ignore
                                    (Ojs.call x2540 "push"
                                       [|(Ojs.float_to_js x2541)|])
                              | None -> ());
                             x2540))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2550 : t) ->
        fun ?start:(x2545 : float option) ->
          fun ?end_:(x2546 : float option) ->
            fun () ->
              t_of_js
                (let x2551 = t_to_js x2550 in
                 Ojs.call (Ojs.get_prop_ascii x2551 "slice") "apply"
                   [|x2551;((let x2547 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2545 with
                              | Some x2549 ->
                                  ignore
                                    (Ojs.call x2547 "push"
                                       [|(Ojs.float_to_js x2549)|])
                              | None -> ());
                             (match x2546 with
                              | Some x2548 ->
                                  ignore
                                    (Ojs.call x2547 "push"
                                       [|(Ojs.float_to_js x2548)|])
                              | None -> ());
                             x2547))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2559 : t) ->
        fun (x2552 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2553 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2560 = t_to_js x2559 in
                 Ojs.call (Ojs.get_prop_ascii x2560 "some") "apply"
                   [|x2560;((let x2554 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2554 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2556 : Ojs.t) ->
                                          fun (x2557 : Ojs.t) ->
                                            fun (x2558 : Ojs.t) ->
                                              unknown_to_js
                                                (x2552
                                                   ~value:(Ojs.float_of_js
                                                             x2556)
                                                   ~index:(Ojs.float_of_js
                                                             x2557)
                                                   ~array:(t_of_js x2558))))|]);
                             (match x2553 with
                              | Some x2555 ->
                                  ignore
                                    (Ojs.call x2554 "push"
                                       [|(any_to_js x2555)|])
                              | None -> ());
                             x2554))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x2566 : t) ->
        fun ?compareFn:(x2561 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x2567 = t_to_js x2566 in
               Ojs.call (Ojs.get_prop_ascii x2567 "sort") "apply"
                 [|x2567;((let x2562 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2561 with
                            | Some x2563 ->
                                ignore
                                  (Ojs.call x2562 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2564 : Ojs.t) ->
                                             fun (x2565 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x2563
                                                    ~a:(Ojs.float_of_js x2564)
                                                    ~b:(Ojs.float_of_js x2565))))|])
                            | None -> ());
                           x2562))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x2573 : t) ->
        fun ?begin_:(x2568 : float option) ->
          fun ?end_:(x2569 : float option) ->
            fun () ->
              t_of_js
                (let x2574 = t_to_js x2573 in
                 Ojs.call (Ojs.get_prop_ascii x2574 "subarray") "apply"
                   [|x2574;((let x2570 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2568 with
                              | Some x2572 ->
                                  ignore
                                    (Ojs.call x2570 "push"
                                       [|(Ojs.float_to_js x2572)|])
                              | None -> ());
                             (match x2569 with
                              | Some x2571 ->
                                  ignore
                                    (Ojs.call x2570 "push"
                                       [|(Ojs.float_to_js x2571)|])
                              | None -> ());
                             x2570))|])
    let (toLocaleString : t -> string) =
      fun (x2575 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2575) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x2576 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2576) "toString" [||])
    let (valueOf : t -> t) =
      fun (x2577 : t) -> t_of_js (Ojs.call (t_to_js x2577) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x2578 : t) ->
        fun (x2579 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x2578) (Ojs.float_to_js x2579))
    let (set : t -> float -> float -> unit) =
      fun (x2580 : t) ->
        fun (x2581 : float) ->
          fun (x2582 : float) ->
            Ojs.set_prop (t_to_js x2580) (Ojs.float_to_js x2581)
              (Ojs.float_to_js x2582)
    let (create : length:float -> t) =
      fun ~length:(x2583 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x2583)|])
    let (create' : array:(ArrayBuffer.t, float Array.t) union2 -> t) =
      fun ~array:(x2584 : (ArrayBuffer.t, float Array.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(union2_to_js ArrayBuffer.t_to_js
                  (fun (x2586 : float Array.t) ->
                     Array.t_to_js Ojs.float_to_js x2586) x2584)|])
    let (create'' :
      buffer:ArrayBuffer.t -> ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x2588 : ArrayBuffer.t) ->
        fun ?byteOffset:(x2589 : float option) ->
          fun ?length:(x2590 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x2591 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2591 "push" [|(ArrayBuffer.t_to_js x2588)|]);
                    (match x2589 with
                     | Some x2593 ->
                         ignore
                           (Ojs.call x2591 "push" [|(Ojs.float_to_js x2593)|])
                     | None -> ());
                    (match x2590 with
                     | Some x2592 ->
                         ignore
                           (Ojs.call x2591 "push" [|(Ojs.float_to_js x2592)|])
                     | None -> ());
                    x2591))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x2594 : float list) ->
        t_of_js
          (let x2597 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x2597 "of") "apply"
             [|x2597;((let x2595 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2596 : float) ->
                            ignore
                              (Ojs.call x2595 "push"
                                 [|(Ojs.float_to_js x2596)|])) x2594;
                       x2595))|])
    let (from : array:float Array.t -> t) =
      fun ~array:(x2598 : float Array.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(Array.t_to_js Ojs.float_to_js x2598)|])
    let (from' :
      array:'T Array.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~array:(x2600 : 'T Array.t) ->
        fun ~mapfn:(x2601 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x2602 : any option) ->
            fun () ->
              t_of_js
                (let x2608 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x2608 "from") "apply"
                   [|x2608;((let x2603 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2603 "push"
                                  [|(Array.t_to_js Obj.magic x2600)|]);
                             ignore
                               (Ojs.call x2603 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2605 : Ojs.t) ->
                                          fun (x2606 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x2601 ~v:(Obj.magic x2605)
                                                 ~k:(Ojs.float_of_js x2606))))|]);
                             (match x2602 with
                              | Some x2604 ->
                                  ignore
                                    (Ojs.call x2603 "push"
                                       [|(any_to_js x2604)|])
                              | None -> ());
                             x2603))|])
  end
module Uint8ArrayConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2610 : Ojs.t) -> x2610
    and t_to_js : t -> Ojs.t = fun (x2609 : Ojs.t) -> x2609
    let (get_prototype : t -> Uint8Array.t) =
      fun (x2611 : t) ->
        Uint8Array.t_of_js (Ojs.get_prop_ascii (t_to_js x2611) "prototype")
    let (create : t -> length:float -> Uint8Array.t) =
      fun (x2613 : t) ->
        fun ~length:(x2612 : float) ->
          Uint8Array.t_of_js
            (Ojs.new_obj (t_to_js x2613) [|(Ojs.float_to_js x2612)|])
    let (create' :
      t -> array:(ArrayBuffer.t, float Array.t) union2 -> Uint8Array.t) =
      fun (x2618 : t) ->
        fun ~array:(x2614 : (ArrayBuffer.t, float Array.t) union2) ->
          Uint8Array.t_of_js
            (Ojs.new_obj (t_to_js x2618)
               [|(union2_to_js ArrayBuffer.t_to_js
                    (fun (x2616 : float Array.t) ->
                       Array.t_to_js Ojs.float_to_js x2616) x2614)|])
    let (create'' :
      t ->
        buffer:ArrayBuffer.t ->
          ?byteOffset:float -> ?length:float -> unit -> Uint8Array.t)
      =
      fun (x2625 : t) ->
        fun ~buffer:(x2619 : ArrayBuffer.t) ->
          fun ?byteOffset:(x2620 : float option) ->
            fun ?length:(x2621 : float option) ->
              fun () ->
                Uint8Array.t_of_js
                  (Ojs.new_obj_arr (t_to_js x2625)
                     (let x2622 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2622 "push"
                           [|(ArrayBuffer.t_to_js x2619)|]);
                      (match x2620 with
                       | Some x2624 ->
                           ignore
                             (Ojs.call x2622 "push"
                                [|(Ojs.float_to_js x2624)|])
                       | None -> ());
                      (match x2621 with
                       | Some x2623 ->
                           ignore
                             (Ojs.call x2622 "push"
                                [|(Ojs.float_to_js x2623)|])
                       | None -> ());
                      x2622))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2626 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2626) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> Uint8Array.t) =
      fun (x2630 : t) ->
        fun (x2627 : float list) ->
          Uint8Array.t_of_js
            (let x2631 = t_to_js x2630 in
             Ojs.call (Ojs.get_prop_ascii x2631 "of") "apply"
               [|x2631;((let x2628 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x2629 : float) ->
                              ignore
                                (Ojs.call x2628 "push"
                                   [|(Ojs.float_to_js x2629)|])) x2627;
                         x2628))|])
    let (from : t -> array:float Array.t -> Uint8Array.t) =
      fun (x2634 : t) ->
        fun ~array:(x2632 : float Array.t) ->
          Uint8Array.t_of_js
            (Ojs.call (t_to_js x2634) "from"
               [|(Array.t_to_js Ojs.float_to_js x2632)|])
    let (from' :
      t ->
        array:'T Array.t ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> Uint8Array.t)
      =
      fun (x2643 : t) ->
        fun ~array:(x2635 : 'T Array.t) ->
          fun ~mapfn:(x2636 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x2637 : any option) ->
              fun () ->
                Uint8Array.t_of_js
                  (let x2644 = t_to_js x2643 in
                   Ojs.call (Ojs.get_prop_ascii x2644 "from") "apply"
                     [|x2644;((let x2638 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2638 "push"
                                    [|(Array.t_to_js Obj.magic x2635)|]);
                               ignore
                                 (Ojs.call x2638 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x2640 : Ojs.t) ->
                                            fun (x2641 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2636 ~v:(Obj.magic x2640)
                                                   ~k:(Ojs.float_of_js x2641))))|]);
                               (match x2637 with
                                | Some x2639 ->
                                    ignore
                                      (Ojs.call x2638 "push"
                                         [|(any_to_js x2639)|])
                                | None -> ());
                               x2638))|])
  end
let (uint8Array : Uint8ArrayConstructor.t) =
  Uint8ArrayConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Uint8Array")
module Uint8ClampedArray =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2646 : Ojs.t) -> x2646
    and t_to_js : t -> Ojs.t = fun (x2645 : Ojs.t) -> x2645
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2647 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2647) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> ArrayBuffer.t) =
      fun (x2648 : t) ->
        ArrayBuffer.t_of_js (Ojs.get_prop_ascii (t_to_js x2648) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2649 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2649) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2650 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2650) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2656 : t) ->
        fun ~target:(x2651 : float) ->
          fun ~start:(x2652 : float) ->
            fun ?end_:(x2653 : float option) ->
              fun () ->
                t_of_js
                  (let x2657 = t_to_js x2656 in
                   Ojs.call (Ojs.get_prop_ascii x2657 "copyWithin") "apply"
                     [|x2657;((let x2654 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2654 "push"
                                    [|(Ojs.float_to_js x2651)|]);
                               ignore
                                 (Ojs.call x2654 "push"
                                    [|(Ojs.float_to_js x2652)|]);
                               (match x2653 with
                                | Some x2655 ->
                                    ignore
                                      (Ojs.call x2654 "push"
                                         [|(Ojs.float_to_js x2655)|])
                                | None -> ());
                               x2654))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2665 : t) ->
        fun (x2658 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2659 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2666 = t_to_js x2665 in
                 Ojs.call (Ojs.get_prop_ascii x2666 "every") "apply"
                   [|x2666;((let x2660 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2660 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2662 : Ojs.t) ->
                                          fun (x2663 : Ojs.t) ->
                                            fun (x2664 : Ojs.t) ->
                                              unknown_to_js
                                                (x2658
                                                   ~value:(Ojs.float_of_js
                                                             x2662)
                                                   ~index:(Ojs.float_of_js
                                                             x2663)
                                                   ~array:(t_of_js x2664))))|]);
                             (match x2659 with
                              | Some x2661 ->
                                  ignore
                                    (Ojs.call x2660 "push"
                                       [|(any_to_js x2661)|])
                              | None -> ());
                             x2660))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2673 : t) ->
        fun ~value:(x2667 : float) ->
          fun ?start:(x2668 : float option) ->
            fun ?end_:(x2669 : float option) ->
              fun () ->
                t_of_js
                  (let x2674 = t_to_js x2673 in
                   Ojs.call (Ojs.get_prop_ascii x2674 "fill") "apply"
                     [|x2674;((let x2670 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2670 "push"
                                    [|(Ojs.float_to_js x2667)|]);
                               (match x2668 with
                                | Some x2672 ->
                                    ignore
                                      (Ojs.call x2670 "push"
                                         [|(Ojs.float_to_js x2672)|])
                                | None -> ());
                               (match x2669 with
                                | Some x2671 ->
                                    ignore
                                      (Ojs.call x2670 "push"
                                         [|(Ojs.float_to_js x2671)|])
                                | None -> ());
                               x2670))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2682 : t) ->
        fun (x2675 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x2676 : any option) ->
            fun () ->
              t_of_js
                (let x2683 = t_to_js x2682 in
                 Ojs.call (Ojs.get_prop_ascii x2683 "filter") "apply"
                   [|x2683;((let x2677 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2677 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2679 : Ojs.t) ->
                                          fun (x2680 : Ojs.t) ->
                                            fun (x2681 : Ojs.t) ->
                                              any_to_js
                                                (x2675
                                                   ~value:(Ojs.float_of_js
                                                             x2679)
                                                   ~index:(Ojs.float_of_js
                                                             x2680)
                                                   ~array:(t_of_js x2681))))|]);
                             (match x2676 with
                              | Some x2678 ->
                                  ignore
                                    (Ojs.call x2677 "push"
                                       [|(any_to_js x2678)|])
                              | None -> ());
                             x2677))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2691 : t) ->
        fun (x2684 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2685 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2692 = t_to_js x2691 in
                 Ojs.call (Ojs.get_prop_ascii x2692 "find") "apply"
                   [|x2692;((let x2686 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2686 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2688 : Ojs.t) ->
                                          fun (x2689 : Ojs.t) ->
                                            fun (x2690 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2684
                                                   ~value:(Ojs.float_of_js
                                                             x2688)
                                                   ~index:(Ojs.float_of_js
                                                             x2689)
                                                   ~obj:(t_of_js x2690))))|]);
                             (match x2685 with
                              | Some x2687 ->
                                  ignore
                                    (Ojs.call x2686 "push"
                                       [|(any_to_js x2687)|])
                              | None -> ());
                             x2686))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2701 : t) ->
        fun (x2694 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2695 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2702 = t_to_js x2701 in
                 Ojs.call (Ojs.get_prop_ascii x2702 "findIndex") "apply"
                   [|x2702;((let x2696 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2696 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2698 : Ojs.t) ->
                                          fun (x2699 : Ojs.t) ->
                                            fun (x2700 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2694
                                                   ~value:(Ojs.float_of_js
                                                             x2698)
                                                   ~index:(Ojs.float_of_js
                                                             x2699)
                                                   ~obj:(t_of_js x2700))))|]);
                             (match x2695 with
                              | Some x2697 ->
                                  ignore
                                    (Ojs.call x2696 "push"
                                       [|(any_to_js x2697)|])
                              | None -> ());
                             x2696))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2710 : t) ->
        fun
          ~callbackfn:(x2703 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2704 : any option) ->
            fun () ->
              ignore
                (let x2711 = t_to_js x2710 in
                 Ojs.call (Ojs.get_prop_ascii x2711 "forEach") "apply"
                   [|x2711;((let x2705 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2705 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2707 : Ojs.t) ->
                                          fun (x2708 : Ojs.t) ->
                                            fun (x2709 : Ojs.t) ->
                                              x2703
                                                ~value:(Ojs.float_of_js x2707)
                                                ~index:(Ojs.float_of_js x2708)
                                                ~array:(t_of_js x2709)))|]);
                             (match x2704 with
                              | Some x2706 ->
                                  ignore
                                    (Ojs.call x2705 "push"
                                       [|(any_to_js x2706)|])
                              | None -> ());
                             x2705))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2716 : t) ->
        fun ~searchElement:(x2712 : float) ->
          fun ?fromIndex:(x2713 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2717 = t_to_js x2716 in
                 Ojs.call (Ojs.get_prop_ascii x2717 "indexOf") "apply"
                   [|x2717;((let x2714 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2714 "push"
                                  [|(Ojs.float_to_js x2712)|]);
                             (match x2713 with
                              | Some x2715 ->
                                  ignore
                                    (Ojs.call x2714 "push"
                                       [|(Ojs.float_to_js x2715)|])
                              | None -> ());
                             x2714))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2721 : t) ->
        fun ?separator:(x2718 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2722 = t_to_js x2721 in
               Ojs.call (Ojs.get_prop_ascii x2722 "join") "apply"
                 [|x2722;((let x2719 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2718 with
                            | Some x2720 ->
                                ignore
                                  (Ojs.call x2719 "push"
                                     [|(Ojs.string_to_js x2720)|])
                            | None -> ());
                           x2719))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2727 : t) ->
        fun ~searchElement:(x2723 : float) ->
          fun ?fromIndex:(x2724 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2728 = t_to_js x2727 in
                 Ojs.call (Ojs.get_prop_ascii x2728 "lastIndexOf") "apply"
                   [|x2728;((let x2725 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2725 "push"
                                  [|(Ojs.float_to_js x2723)|]);
                             (match x2724 with
                              | Some x2726 ->
                                  ignore
                                    (Ojs.call x2725 "push"
                                       [|(Ojs.float_to_js x2726)|])
                              | None -> ());
                             x2725))|])
    let (get_length : t -> float) =
      fun (x2729 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2729) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2737 : t) ->
        fun
          ~callbackfn:(x2730 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2731 : any option) ->
            fun () ->
              t_of_js
                (let x2738 = t_to_js x2737 in
                 Ojs.call (Ojs.get_prop_ascii x2738 "map") "apply"
                   [|x2738;((let x2732 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2732 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2734 : Ojs.t) ->
                                          fun (x2735 : Ojs.t) ->
                                            fun (x2736 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2730
                                                   ~value:(Ojs.float_of_js
                                                             x2734)
                                                   ~index:(Ojs.float_of_js
                                                             x2735)
                                                   ~array:(t_of_js x2736))))|]);
                             (match x2731 with
                              | Some x2733 ->
                                  ignore
                                    (Ojs.call x2732 "push"
                                       [|(any_to_js x2733)|])
                              | None -> ());
                             x2732))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2744 : t) ->
        fun
          ~callbackfn:(x2739 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2744) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2740 : Ojs.t) ->
                       fun (x2741 : Ojs.t) ->
                         fun (x2742 : Ojs.t) ->
                           fun (x2743 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2739 ~previousValue:(Ojs.float_of_js x2740)
                                  ~currentValue:(Ojs.float_of_js x2741)
                                  ~currentIndex:(Ojs.float_of_js x2742)
                                  ~array:(t_of_js x2743))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2751 : t) ->
        fun
          ~callbackfn:(x2745 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2750 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2751) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2746 : Ojs.t) ->
                         fun (x2747 : Ojs.t) ->
                           fun (x2748 : Ojs.t) ->
                             fun (x2749 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2745
                                    ~previousValue:(Ojs.float_of_js x2746)
                                    ~currentValue:(Ojs.float_of_js x2747)
                                    ~currentIndex:(Ojs.float_of_js x2748)
                                    ~array:(t_of_js x2749))));(Ojs.float_to_js
                                                                 x2750)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2758 : t) ->
        fun
          ~callbackfn:(x2752 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2757 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2758) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2753 : Ojs.t) ->
                         fun (x2754 : Ojs.t) ->
                           fun (x2755 : Ojs.t) ->
                             fun (x2756 : Ojs.t) ->
                               Obj.magic
                                 (x2752 ~previousValue:(Obj.magic x2753)
                                    ~currentValue:(Ojs.float_of_js x2754)
                                    ~currentIndex:(Ojs.float_of_js x2755)
                                    ~array:(t_of_js x2756))));(Obj.magic
                                                                 x2757)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2764 : t) ->
        fun
          ~callbackfn:(x2759 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2764) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x2760 : Ojs.t) ->
                       fun (x2761 : Ojs.t) ->
                         fun (x2762 : Ojs.t) ->
                           fun (x2763 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2759 ~previousValue:(Ojs.float_of_js x2760)
                                  ~currentValue:(Ojs.float_of_js x2761)
                                  ~currentIndex:(Ojs.float_of_js x2762)
                                  ~array:(t_of_js x2763))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2771 : t) ->
        fun
          ~callbackfn:(x2765 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2770 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2771) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2766 : Ojs.t) ->
                         fun (x2767 : Ojs.t) ->
                           fun (x2768 : Ojs.t) ->
                             fun (x2769 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2765
                                    ~previousValue:(Ojs.float_of_js x2766)
                                    ~currentValue:(Ojs.float_of_js x2767)
                                    ~currentIndex:(Ojs.float_of_js x2768)
                                    ~array:(t_of_js x2769))));(Ojs.float_to_js
                                                                 x2770)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2778 : t) ->
        fun
          ~callbackfn:(x2772 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2777 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2778) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2773 : Ojs.t) ->
                         fun (x2774 : Ojs.t) ->
                           fun (x2775 : Ojs.t) ->
                             fun (x2776 : Ojs.t) ->
                               Obj.magic
                                 (x2772 ~previousValue:(Obj.magic x2773)
                                    ~currentValue:(Ojs.float_of_js x2774)
                                    ~currentIndex:(Ojs.float_of_js x2775)
                                    ~array:(t_of_js x2776))));(Obj.magic
                                                                 x2777)|])
    let (reverse : t -> t) =
      fun (x2779 : t) -> t_of_js (Ojs.call (t_to_js x2779) "reverse" [||])
    let (set_ : t -> array:float Array.t -> ?offset:float -> unit -> unit) =
      fun (x2785 : t) ->
        fun ~array:(x2780 : float Array.t) ->
          fun ?offset:(x2781 : float option) ->
            fun () ->
              ignore
                (let x2786 = t_to_js x2785 in
                 Ojs.call (Ojs.get_prop_ascii x2786 "set") "apply"
                   [|x2786;((let x2782 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2782 "push"
                                  [|(Array.t_to_js Ojs.float_to_js x2780)|]);
                             (match x2781 with
                              | Some x2783 ->
                                  ignore
                                    (Ojs.call x2782 "push"
                                       [|(Ojs.float_to_js x2783)|])
                              | None -> ());
                             x2782))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2792 : t) ->
        fun ?start:(x2787 : float option) ->
          fun ?end_:(x2788 : float option) ->
            fun () ->
              t_of_js
                (let x2793 = t_to_js x2792 in
                 Ojs.call (Ojs.get_prop_ascii x2793 "slice") "apply"
                   [|x2793;((let x2789 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2787 with
                              | Some x2791 ->
                                  ignore
                                    (Ojs.call x2789 "push"
                                       [|(Ojs.float_to_js x2791)|])
                              | None -> ());
                             (match x2788 with
                              | Some x2790 ->
                                  ignore
                                    (Ojs.call x2789 "push"
                                       [|(Ojs.float_to_js x2790)|])
                              | None -> ());
                             x2789))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2801 : t) ->
        fun (x2794 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2795 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2802 = t_to_js x2801 in
                 Ojs.call (Ojs.get_prop_ascii x2802 "some") "apply"
                   [|x2802;((let x2796 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2796 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2798 : Ojs.t) ->
                                          fun (x2799 : Ojs.t) ->
                                            fun (x2800 : Ojs.t) ->
                                              unknown_to_js
                                                (x2794
                                                   ~value:(Ojs.float_of_js
                                                             x2798)
                                                   ~index:(Ojs.float_of_js
                                                             x2799)
                                                   ~array:(t_of_js x2800))))|]);
                             (match x2795 with
                              | Some x2797 ->
                                  ignore
                                    (Ojs.call x2796 "push"
                                       [|(any_to_js x2797)|])
                              | None -> ());
                             x2796))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x2808 : t) ->
        fun ?compareFn:(x2803 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x2809 = t_to_js x2808 in
               Ojs.call (Ojs.get_prop_ascii x2809 "sort") "apply"
                 [|x2809;((let x2804 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2803 with
                            | Some x2805 ->
                                ignore
                                  (Ojs.call x2804 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2806 : Ojs.t) ->
                                             fun (x2807 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x2805
                                                    ~a:(Ojs.float_of_js x2806)
                                                    ~b:(Ojs.float_of_js x2807))))|])
                            | None -> ());
                           x2804))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x2815 : t) ->
        fun ?begin_:(x2810 : float option) ->
          fun ?end_:(x2811 : float option) ->
            fun () ->
              t_of_js
                (let x2816 = t_to_js x2815 in
                 Ojs.call (Ojs.get_prop_ascii x2816 "subarray") "apply"
                   [|x2816;((let x2812 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2810 with
                              | Some x2814 ->
                                  ignore
                                    (Ojs.call x2812 "push"
                                       [|(Ojs.float_to_js x2814)|])
                              | None -> ());
                             (match x2811 with
                              | Some x2813 ->
                                  ignore
                                    (Ojs.call x2812 "push"
                                       [|(Ojs.float_to_js x2813)|])
                              | None -> ());
                             x2812))|])
    let (toLocaleString : t -> string) =
      fun (x2817 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2817) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x2818 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2818) "toString" [||])
    let (valueOf : t -> t) =
      fun (x2819 : t) -> t_of_js (Ojs.call (t_to_js x2819) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x2820 : t) ->
        fun (x2821 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x2820) (Ojs.float_to_js x2821))
    let (set : t -> float -> float -> unit) =
      fun (x2822 : t) ->
        fun (x2823 : float) ->
          fun (x2824 : float) ->
            Ojs.set_prop (t_to_js x2822) (Ojs.float_to_js x2823)
              (Ojs.float_to_js x2824)
    let (create : length:float -> t) =
      fun ~length:(x2825 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x2825)|])
    let (create' : array:(ArrayBuffer.t, float Array.t) union2 -> t) =
      fun ~array:(x2826 : (ArrayBuffer.t, float Array.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(union2_to_js ArrayBuffer.t_to_js
                  (fun (x2828 : float Array.t) ->
                     Array.t_to_js Ojs.float_to_js x2828) x2826)|])
    let (create'' :
      buffer:ArrayBuffer.t -> ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x2830 : ArrayBuffer.t) ->
        fun ?byteOffset:(x2831 : float option) ->
          fun ?length:(x2832 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x2833 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2833 "push" [|(ArrayBuffer.t_to_js x2830)|]);
                    (match x2831 with
                     | Some x2835 ->
                         ignore
                           (Ojs.call x2833 "push" [|(Ojs.float_to_js x2835)|])
                     | None -> ());
                    (match x2832 with
                     | Some x2834 ->
                         ignore
                           (Ojs.call x2833 "push" [|(Ojs.float_to_js x2834)|])
                     | None -> ());
                    x2833))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x2836 : float list) ->
        t_of_js
          (let x2839 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x2839 "of") "apply"
             [|x2839;((let x2837 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2838 : float) ->
                            ignore
                              (Ojs.call x2837 "push"
                                 [|(Ojs.float_to_js x2838)|])) x2836;
                       x2837))|])
    let (from : array:float Array.t -> t) =
      fun ~array:(x2840 : float Array.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(Array.t_to_js Ojs.float_to_js x2840)|])
    let (from' :
      array:'T Array.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~array:(x2842 : 'T Array.t) ->
        fun ~mapfn:(x2843 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x2844 : any option) ->
            fun () ->
              t_of_js
                (let x2850 =
                   Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x2850 "from") "apply"
                   [|x2850;((let x2845 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2845 "push"
                                  [|(Array.t_to_js Obj.magic x2842)|]);
                             ignore
                               (Ojs.call x2845 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2847 : Ojs.t) ->
                                          fun (x2848 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x2843 ~v:(Obj.magic x2847)
                                                 ~k:(Ojs.float_of_js x2848))))|]);
                             (match x2844 with
                              | Some x2846 ->
                                  ignore
                                    (Ojs.call x2845 "push"
                                       [|(any_to_js x2846)|])
                              | None -> ());
                             x2845))|])
  end
module Uint8ClampedArrayConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2852 : Ojs.t) -> x2852
    and t_to_js : t -> Ojs.t = fun (x2851 : Ojs.t) -> x2851
    let (get_prototype : t -> Uint8ClampedArray.t) =
      fun (x2853 : t) ->
        Uint8ClampedArray.t_of_js
          (Ojs.get_prop_ascii (t_to_js x2853) "prototype")
    let (create : t -> length:float -> Uint8ClampedArray.t) =
      fun (x2855 : t) ->
        fun ~length:(x2854 : float) ->
          Uint8ClampedArray.t_of_js
            (Ojs.new_obj (t_to_js x2855) [|(Ojs.float_to_js x2854)|])
    let (create' :
      t -> array:(ArrayBuffer.t, float Array.t) union2 -> Uint8ClampedArray.t)
      =
      fun (x2860 : t) ->
        fun ~array:(x2856 : (ArrayBuffer.t, float Array.t) union2) ->
          Uint8ClampedArray.t_of_js
            (Ojs.new_obj (t_to_js x2860)
               [|(union2_to_js ArrayBuffer.t_to_js
                    (fun (x2858 : float Array.t) ->
                       Array.t_to_js Ojs.float_to_js x2858) x2856)|])
    let (create'' :
      t ->
        buffer:ArrayBuffer.t ->
          ?byteOffset:float -> ?length:float -> unit -> Uint8ClampedArray.t)
      =
      fun (x2867 : t) ->
        fun ~buffer:(x2861 : ArrayBuffer.t) ->
          fun ?byteOffset:(x2862 : float option) ->
            fun ?length:(x2863 : float option) ->
              fun () ->
                Uint8ClampedArray.t_of_js
                  (Ojs.new_obj_arr (t_to_js x2867)
                     (let x2864 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2864 "push"
                           [|(ArrayBuffer.t_to_js x2861)|]);
                      (match x2862 with
                       | Some x2866 ->
                           ignore
                             (Ojs.call x2864 "push"
                                [|(Ojs.float_to_js x2866)|])
                       | None -> ());
                      (match x2863 with
                       | Some x2865 ->
                           ignore
                             (Ojs.call x2864 "push"
                                [|(Ojs.float_to_js x2865)|])
                       | None -> ());
                      x2864))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2868 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2868) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> Uint8ClampedArray.t) =
      fun (x2872 : t) ->
        fun (x2869 : float list) ->
          Uint8ClampedArray.t_of_js
            (let x2873 = t_to_js x2872 in
             Ojs.call (Ojs.get_prop_ascii x2873 "of") "apply"
               [|x2873;((let x2870 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x2871 : float) ->
                              ignore
                                (Ojs.call x2870 "push"
                                   [|(Ojs.float_to_js x2871)|])) x2869;
                         x2870))|])
    let (from : t -> array:float Array.t -> Uint8ClampedArray.t) =
      fun (x2876 : t) ->
        fun ~array:(x2874 : float Array.t) ->
          Uint8ClampedArray.t_of_js
            (Ojs.call (t_to_js x2876) "from"
               [|(Array.t_to_js Ojs.float_to_js x2874)|])
    let (from' :
      t ->
        array:'T Array.t ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> Uint8ClampedArray.t)
      =
      fun (x2885 : t) ->
        fun ~array:(x2877 : 'T Array.t) ->
          fun ~mapfn:(x2878 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x2879 : any option) ->
              fun () ->
                Uint8ClampedArray.t_of_js
                  (let x2886 = t_to_js x2885 in
                   Ojs.call (Ojs.get_prop_ascii x2886 "from") "apply"
                     [|x2886;((let x2880 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2880 "push"
                                    [|(Array.t_to_js Obj.magic x2877)|]);
                               ignore
                                 (Ojs.call x2880 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x2882 : Ojs.t) ->
                                            fun (x2883 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2878 ~v:(Obj.magic x2882)
                                                   ~k:(Ojs.float_of_js x2883))))|]);
                               (match x2879 with
                                | Some x2881 ->
                                    ignore
                                      (Ojs.call x2880 "push"
                                         [|(any_to_js x2881)|])
                                | None -> ());
                               x2880))|])
  end
let (uint8ClampedArray : Uint8ClampedArrayConstructor.t) =
  Uint8ClampedArrayConstructor.t_of_js
    (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
module Int16Array =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2888 : Ojs.t) -> x2888
    and t_to_js : t -> Ojs.t = fun (x2887 : Ojs.t) -> x2887
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2889 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2889) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> ArrayBuffer.t) =
      fun (x2890 : t) ->
        ArrayBuffer.t_of_js (Ojs.get_prop_ascii (t_to_js x2890) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2891 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2891) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2892 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2892) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2898 : t) ->
        fun ~target:(x2893 : float) ->
          fun ~start:(x2894 : float) ->
            fun ?end_:(x2895 : float option) ->
              fun () ->
                t_of_js
                  (let x2899 = t_to_js x2898 in
                   Ojs.call (Ojs.get_prop_ascii x2899 "copyWithin") "apply"
                     [|x2899;((let x2896 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2896 "push"
                                    [|(Ojs.float_to_js x2893)|]);
                               ignore
                                 (Ojs.call x2896 "push"
                                    [|(Ojs.float_to_js x2894)|]);
                               (match x2895 with
                                | Some x2897 ->
                                    ignore
                                      (Ojs.call x2896 "push"
                                         [|(Ojs.float_to_js x2897)|])
                                | None -> ());
                               x2896))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2907 : t) ->
        fun (x2900 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2901 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2908 = t_to_js x2907 in
                 Ojs.call (Ojs.get_prop_ascii x2908 "every") "apply"
                   [|x2908;((let x2902 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2902 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2904 : Ojs.t) ->
                                          fun (x2905 : Ojs.t) ->
                                            fun (x2906 : Ojs.t) ->
                                              unknown_to_js
                                                (x2900
                                                   ~value:(Ojs.float_of_js
                                                             x2904)
                                                   ~index:(Ojs.float_of_js
                                                             x2905)
                                                   ~array:(t_of_js x2906))))|]);
                             (match x2901 with
                              | Some x2903 ->
                                  ignore
                                    (Ojs.call x2902 "push"
                                       [|(any_to_js x2903)|])
                              | None -> ());
                             x2902))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2915 : t) ->
        fun ~value:(x2909 : float) ->
          fun ?start:(x2910 : float option) ->
            fun ?end_:(x2911 : float option) ->
              fun () ->
                t_of_js
                  (let x2916 = t_to_js x2915 in
                   Ojs.call (Ojs.get_prop_ascii x2916 "fill") "apply"
                     [|x2916;((let x2912 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2912 "push"
                                    [|(Ojs.float_to_js x2909)|]);
                               (match x2910 with
                                | Some x2914 ->
                                    ignore
                                      (Ojs.call x2912 "push"
                                         [|(Ojs.float_to_js x2914)|])
                                | None -> ());
                               (match x2911 with
                                | Some x2913 ->
                                    ignore
                                      (Ojs.call x2912 "push"
                                         [|(Ojs.float_to_js x2913)|])
                                | None -> ());
                               x2912))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2924 : t) ->
        fun (x2917 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x2918 : any option) ->
            fun () ->
              t_of_js
                (let x2925 = t_to_js x2924 in
                 Ojs.call (Ojs.get_prop_ascii x2925 "filter") "apply"
                   [|x2925;((let x2919 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2919 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2921 : Ojs.t) ->
                                          fun (x2922 : Ojs.t) ->
                                            fun (x2923 : Ojs.t) ->
                                              any_to_js
                                                (x2917
                                                   ~value:(Ojs.float_of_js
                                                             x2921)
                                                   ~index:(Ojs.float_of_js
                                                             x2922)
                                                   ~array:(t_of_js x2923))))|]);
                             (match x2918 with
                              | Some x2920 ->
                                  ignore
                                    (Ojs.call x2919 "push"
                                       [|(any_to_js x2920)|])
                              | None -> ());
                             x2919))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2933 : t) ->
        fun (x2926 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2927 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2934 = t_to_js x2933 in
                 Ojs.call (Ojs.get_prop_ascii x2934 "find") "apply"
                   [|x2934;((let x2928 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2928 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2930 : Ojs.t) ->
                                          fun (x2931 : Ojs.t) ->
                                            fun (x2932 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2926
                                                   ~value:(Ojs.float_of_js
                                                             x2930)
                                                   ~index:(Ojs.float_of_js
                                                             x2931)
                                                   ~obj:(t_of_js x2932))))|]);
                             (match x2927 with
                              | Some x2929 ->
                                  ignore
                                    (Ojs.call x2928 "push"
                                       [|(any_to_js x2929)|])
                              | None -> ());
                             x2928))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2943 : t) ->
        fun (x2936 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2937 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2944 = t_to_js x2943 in
                 Ojs.call (Ojs.get_prop_ascii x2944 "findIndex") "apply"
                   [|x2944;((let x2938 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2938 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2940 : Ojs.t) ->
                                          fun (x2941 : Ojs.t) ->
                                            fun (x2942 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2936
                                                   ~value:(Ojs.float_of_js
                                                             x2940)
                                                   ~index:(Ojs.float_of_js
                                                             x2941)
                                                   ~obj:(t_of_js x2942))))|]);
                             (match x2937 with
                              | Some x2939 ->
                                  ignore
                                    (Ojs.call x2938 "push"
                                       [|(any_to_js x2939)|])
                              | None -> ());
                             x2938))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2952 : t) ->
        fun
          ~callbackfn:(x2945 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2946 : any option) ->
            fun () ->
              ignore
                (let x2953 = t_to_js x2952 in
                 Ojs.call (Ojs.get_prop_ascii x2953 "forEach") "apply"
                   [|x2953;((let x2947 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2947 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2949 : Ojs.t) ->
                                          fun (x2950 : Ojs.t) ->
                                            fun (x2951 : Ojs.t) ->
                                              x2945
                                                ~value:(Ojs.float_of_js x2949)
                                                ~index:(Ojs.float_of_js x2950)
                                                ~array:(t_of_js x2951)))|]);
                             (match x2946 with
                              | Some x2948 ->
                                  ignore
                                    (Ojs.call x2947 "push"
                                       [|(any_to_js x2948)|])
                              | None -> ());
                             x2947))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2958 : t) ->
        fun ~searchElement:(x2954 : float) ->
          fun ?fromIndex:(x2955 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2959 = t_to_js x2958 in
                 Ojs.call (Ojs.get_prop_ascii x2959 "indexOf") "apply"
                   [|x2959;((let x2956 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2956 "push"
                                  [|(Ojs.float_to_js x2954)|]);
                             (match x2955 with
                              | Some x2957 ->
                                  ignore
                                    (Ojs.call x2956 "push"
                                       [|(Ojs.float_to_js x2957)|])
                              | None -> ());
                             x2956))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2963 : t) ->
        fun ?separator:(x2960 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2964 = t_to_js x2963 in
               Ojs.call (Ojs.get_prop_ascii x2964 "join") "apply"
                 [|x2964;((let x2961 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2960 with
                            | Some x2962 ->
                                ignore
                                  (Ojs.call x2961 "push"
                                     [|(Ojs.string_to_js x2962)|])
                            | None -> ());
                           x2961))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2969 : t) ->
        fun ~searchElement:(x2965 : float) ->
          fun ?fromIndex:(x2966 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2970 = t_to_js x2969 in
                 Ojs.call (Ojs.get_prop_ascii x2970 "lastIndexOf") "apply"
                   [|x2970;((let x2967 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2967 "push"
                                  [|(Ojs.float_to_js x2965)|]);
                             (match x2966 with
                              | Some x2968 ->
                                  ignore
                                    (Ojs.call x2967 "push"
                                       [|(Ojs.float_to_js x2968)|])
                              | None -> ());
                             x2967))|])
    let (get_length : t -> float) =
      fun (x2971 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2971) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2979 : t) ->
        fun
          ~callbackfn:(x2972 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2973 : any option) ->
            fun () ->
              t_of_js
                (let x2980 = t_to_js x2979 in
                 Ojs.call (Ojs.get_prop_ascii x2980 "map") "apply"
                   [|x2980;((let x2974 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2974 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2976 : Ojs.t) ->
                                          fun (x2977 : Ojs.t) ->
                                            fun (x2978 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2972
                                                   ~value:(Ojs.float_of_js
                                                             x2976)
                                                   ~index:(Ojs.float_of_js
                                                             x2977)
                                                   ~array:(t_of_js x2978))))|]);
                             (match x2973 with
                              | Some x2975 ->
                                  ignore
                                    (Ojs.call x2974 "push"
                                       [|(any_to_js x2975)|])
                              | None -> ());
                             x2974))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2986 : t) ->
        fun
          ~callbackfn:(x2981 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2986) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2982 : Ojs.t) ->
                       fun (x2983 : Ojs.t) ->
                         fun (x2984 : Ojs.t) ->
                           fun (x2985 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2981 ~previousValue:(Ojs.float_of_js x2982)
                                  ~currentValue:(Ojs.float_of_js x2983)
                                  ~currentIndex:(Ojs.float_of_js x2984)
                                  ~array:(t_of_js x2985))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2993 : t) ->
        fun
          ~callbackfn:(x2987 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2992 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2993) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2988 : Ojs.t) ->
                         fun (x2989 : Ojs.t) ->
                           fun (x2990 : Ojs.t) ->
                             fun (x2991 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2987
                                    ~previousValue:(Ojs.float_of_js x2988)
                                    ~currentValue:(Ojs.float_of_js x2989)
                                    ~currentIndex:(Ojs.float_of_js x2990)
                                    ~array:(t_of_js x2991))));(Ojs.float_to_js
                                                                 x2992)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3000 : t) ->
        fun
          ~callbackfn:(x2994 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2999 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3000) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2995 : Ojs.t) ->
                         fun (x2996 : Ojs.t) ->
                           fun (x2997 : Ojs.t) ->
                             fun (x2998 : Ojs.t) ->
                               Obj.magic
                                 (x2994 ~previousValue:(Obj.magic x2995)
                                    ~currentValue:(Ojs.float_of_js x2996)
                                    ~currentIndex:(Ojs.float_of_js x2997)
                                    ~array:(t_of_js x2998))));(Obj.magic
                                                                 x2999)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3006 : t) ->
        fun
          ~callbackfn:(x3001 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3006) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3002 : Ojs.t) ->
                       fun (x3003 : Ojs.t) ->
                         fun (x3004 : Ojs.t) ->
                           fun (x3005 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3001 ~previousValue:(Ojs.float_of_js x3002)
                                  ~currentValue:(Ojs.float_of_js x3003)
                                  ~currentIndex:(Ojs.float_of_js x3004)
                                  ~array:(t_of_js x3005))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3013 : t) ->
        fun
          ~callbackfn:(x3007 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3012 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3013) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3008 : Ojs.t) ->
                         fun (x3009 : Ojs.t) ->
                           fun (x3010 : Ojs.t) ->
                             fun (x3011 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3007
                                    ~previousValue:(Ojs.float_of_js x3008)
                                    ~currentValue:(Ojs.float_of_js x3009)
                                    ~currentIndex:(Ojs.float_of_js x3010)
                                    ~array:(t_of_js x3011))));(Ojs.float_to_js
                                                                 x3012)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3020 : t) ->
        fun
          ~callbackfn:(x3014 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3019 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3020) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3015 : Ojs.t) ->
                         fun (x3016 : Ojs.t) ->
                           fun (x3017 : Ojs.t) ->
                             fun (x3018 : Ojs.t) ->
                               Obj.magic
                                 (x3014 ~previousValue:(Obj.magic x3015)
                                    ~currentValue:(Ojs.float_of_js x3016)
                                    ~currentIndex:(Ojs.float_of_js x3017)
                                    ~array:(t_of_js x3018))));(Obj.magic
                                                                 x3019)|])
    let (reverse : t -> t) =
      fun (x3021 : t) -> t_of_js (Ojs.call (t_to_js x3021) "reverse" [||])
    let (set_ : t -> array:float Array.t -> ?offset:float -> unit -> unit) =
      fun (x3027 : t) ->
        fun ~array:(x3022 : float Array.t) ->
          fun ?offset:(x3023 : float option) ->
            fun () ->
              ignore
                (let x3028 = t_to_js x3027 in
                 Ojs.call (Ojs.get_prop_ascii x3028 "set") "apply"
                   [|x3028;((let x3024 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3024 "push"
                                  [|(Array.t_to_js Ojs.float_to_js x3022)|]);
                             (match x3023 with
                              | Some x3025 ->
                                  ignore
                                    (Ojs.call x3024 "push"
                                       [|(Ojs.float_to_js x3025)|])
                              | None -> ());
                             x3024))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3034 : t) ->
        fun ?start:(x3029 : float option) ->
          fun ?end_:(x3030 : float option) ->
            fun () ->
              t_of_js
                (let x3035 = t_to_js x3034 in
                 Ojs.call (Ojs.get_prop_ascii x3035 "slice") "apply"
                   [|x3035;((let x3031 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3029 with
                              | Some x3033 ->
                                  ignore
                                    (Ojs.call x3031 "push"
                                       [|(Ojs.float_to_js x3033)|])
                              | None -> ());
                             (match x3030 with
                              | Some x3032 ->
                                  ignore
                                    (Ojs.call x3031 "push"
                                       [|(Ojs.float_to_js x3032)|])
                              | None -> ());
                             x3031))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3043 : t) ->
        fun (x3036 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3037 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3044 = t_to_js x3043 in
                 Ojs.call (Ojs.get_prop_ascii x3044 "some") "apply"
                   [|x3044;((let x3038 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3038 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3040 : Ojs.t) ->
                                          fun (x3041 : Ojs.t) ->
                                            fun (x3042 : Ojs.t) ->
                                              unknown_to_js
                                                (x3036
                                                   ~value:(Ojs.float_of_js
                                                             x3040)
                                                   ~index:(Ojs.float_of_js
                                                             x3041)
                                                   ~array:(t_of_js x3042))))|]);
                             (match x3037 with
                              | Some x3039 ->
                                  ignore
                                    (Ojs.call x3038 "push"
                                       [|(any_to_js x3039)|])
                              | None -> ());
                             x3038))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3050 : t) ->
        fun ?compareFn:(x3045 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3051 = t_to_js x3050 in
               Ojs.call (Ojs.get_prop_ascii x3051 "sort") "apply"
                 [|x3051;((let x3046 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3045 with
                            | Some x3047 ->
                                ignore
                                  (Ojs.call x3046 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3048 : Ojs.t) ->
                                             fun (x3049 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3047
                                                    ~a:(Ojs.float_of_js x3048)
                                                    ~b:(Ojs.float_of_js x3049))))|])
                            | None -> ());
                           x3046))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3057 : t) ->
        fun ?begin_:(x3052 : float option) ->
          fun ?end_:(x3053 : float option) ->
            fun () ->
              t_of_js
                (let x3058 = t_to_js x3057 in
                 Ojs.call (Ojs.get_prop_ascii x3058 "subarray") "apply"
                   [|x3058;((let x3054 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3052 with
                              | Some x3056 ->
                                  ignore
                                    (Ojs.call x3054 "push"
                                       [|(Ojs.float_to_js x3056)|])
                              | None -> ());
                             (match x3053 with
                              | Some x3055 ->
                                  ignore
                                    (Ojs.call x3054 "push"
                                       [|(Ojs.float_to_js x3055)|])
                              | None -> ());
                             x3054))|])
    let (toLocaleString : t -> string) =
      fun (x3059 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3059) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3060 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3060) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3061 : t) -> t_of_js (Ojs.call (t_to_js x3061) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3062 : t) ->
        fun (x3063 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3062) (Ojs.float_to_js x3063))
    let (set : t -> float -> float -> unit) =
      fun (x3064 : t) ->
        fun (x3065 : float) ->
          fun (x3066 : float) ->
            Ojs.set_prop (t_to_js x3064) (Ojs.float_to_js x3065)
              (Ojs.float_to_js x3066)
    let (create : length:float -> t) =
      fun ~length:(x3067 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x3067)|])
    let (create' : array:(ArrayBuffer.t, float Array.t) union2 -> t) =
      fun ~array:(x3068 : (ArrayBuffer.t, float Array.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(union2_to_js ArrayBuffer.t_to_js
                  (fun (x3070 : float Array.t) ->
                     Array.t_to_js Ojs.float_to_js x3070) x3068)|])
    let (create'' :
      buffer:ArrayBuffer.t -> ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x3072 : ArrayBuffer.t) ->
        fun ?byteOffset:(x3073 : float option) ->
          fun ?length:(x3074 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x3075 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3075 "push" [|(ArrayBuffer.t_to_js x3072)|]);
                    (match x3073 with
                     | Some x3077 ->
                         ignore
                           (Ojs.call x3075 "push" [|(Ojs.float_to_js x3077)|])
                     | None -> ());
                    (match x3074 with
                     | Some x3076 ->
                         ignore
                           (Ojs.call x3075 "push" [|(Ojs.float_to_js x3076)|])
                     | None -> ());
                    x3075))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x3078 : float list) ->
        t_of_js
          (let x3081 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x3081 "of") "apply"
             [|x3081;((let x3079 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3080 : float) ->
                            ignore
                              (Ojs.call x3079 "push"
                                 [|(Ojs.float_to_js x3080)|])) x3078;
                       x3079))|])
    let (from : array:float Array.t -> t) =
      fun ~array:(x3082 : float Array.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(Array.t_to_js Ojs.float_to_js x3082)|])
    let (from' :
      array:'T Array.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~array:(x3084 : 'T Array.t) ->
        fun ~mapfn:(x3085 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3086 : any option) ->
            fun () ->
              t_of_js
                (let x3092 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x3092 "from") "apply"
                   [|x3092;((let x3087 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3087 "push"
                                  [|(Array.t_to_js Obj.magic x3084)|]);
                             ignore
                               (Ojs.call x3087 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3089 : Ojs.t) ->
                                          fun (x3090 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3085 ~v:(Obj.magic x3089)
                                                 ~k:(Ojs.float_of_js x3090))))|]);
                             (match x3086 with
                              | Some x3088 ->
                                  ignore
                                    (Ojs.call x3087 "push"
                                       [|(any_to_js x3088)|])
                              | None -> ());
                             x3087))|])
  end
module Int16ArrayConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x3094 : Ojs.t) -> x3094
    and t_to_js : t -> Ojs.t = fun (x3093 : Ojs.t) -> x3093
    let (get_prototype : t -> Int16Array.t) =
      fun (x3095 : t) ->
        Int16Array.t_of_js (Ojs.get_prop_ascii (t_to_js x3095) "prototype")
    let (create : t -> length:float -> Int16Array.t) =
      fun (x3097 : t) ->
        fun ~length:(x3096 : float) ->
          Int16Array.t_of_js
            (Ojs.new_obj (t_to_js x3097) [|(Ojs.float_to_js x3096)|])
    let (create' :
      t -> array:(ArrayBuffer.t, float Array.t) union2 -> Int16Array.t) =
      fun (x3102 : t) ->
        fun ~array:(x3098 : (ArrayBuffer.t, float Array.t) union2) ->
          Int16Array.t_of_js
            (Ojs.new_obj (t_to_js x3102)
               [|(union2_to_js ArrayBuffer.t_to_js
                    (fun (x3100 : float Array.t) ->
                       Array.t_to_js Ojs.float_to_js x3100) x3098)|])
    let (create'' :
      t ->
        buffer:ArrayBuffer.t ->
          ?byteOffset:float -> ?length:float -> unit -> Int16Array.t)
      =
      fun (x3109 : t) ->
        fun ~buffer:(x3103 : ArrayBuffer.t) ->
          fun ?byteOffset:(x3104 : float option) ->
            fun ?length:(x3105 : float option) ->
              fun () ->
                Int16Array.t_of_js
                  (Ojs.new_obj_arr (t_to_js x3109)
                     (let x3106 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3106 "push"
                           [|(ArrayBuffer.t_to_js x3103)|]);
                      (match x3104 with
                       | Some x3108 ->
                           ignore
                             (Ojs.call x3106 "push"
                                [|(Ojs.float_to_js x3108)|])
                       | None -> ());
                      (match x3105 with
                       | Some x3107 ->
                           ignore
                             (Ojs.call x3106 "push"
                                [|(Ojs.float_to_js x3107)|])
                       | None -> ());
                      x3106))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3110 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3110) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> Int16Array.t) =
      fun (x3114 : t) ->
        fun (x3111 : float list) ->
          Int16Array.t_of_js
            (let x3115 = t_to_js x3114 in
             Ojs.call (Ojs.get_prop_ascii x3115 "of") "apply"
               [|x3115;((let x3112 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3113 : float) ->
                              ignore
                                (Ojs.call x3112 "push"
                                   [|(Ojs.float_to_js x3113)|])) x3111;
                         x3112))|])
    let (from : t -> array:float Array.t -> Int16Array.t) =
      fun (x3118 : t) ->
        fun ~array:(x3116 : float Array.t) ->
          Int16Array.t_of_js
            (Ojs.call (t_to_js x3118) "from"
               [|(Array.t_to_js Ojs.float_to_js x3116)|])
    let (from' :
      t ->
        array:'T Array.t ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> Int16Array.t)
      =
      fun (x3127 : t) ->
        fun ~array:(x3119 : 'T Array.t) ->
          fun ~mapfn:(x3120 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3121 : any option) ->
              fun () ->
                Int16Array.t_of_js
                  (let x3128 = t_to_js x3127 in
                   Ojs.call (Ojs.get_prop_ascii x3128 "from") "apply"
                     [|x3128;((let x3122 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3122 "push"
                                    [|(Array.t_to_js Obj.magic x3119)|]);
                               ignore
                                 (Ojs.call x3122 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3124 : Ojs.t) ->
                                            fun (x3125 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3120 ~v:(Obj.magic x3124)
                                                   ~k:(Ojs.float_of_js x3125))))|]);
                               (match x3121 with
                                | Some x3123 ->
                                    ignore
                                      (Ojs.call x3122 "push"
                                         [|(any_to_js x3123)|])
                                | None -> ());
                               x3122))|])
  end
let (int16Array : Int16ArrayConstructor.t) =
  Int16ArrayConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Int16Array")
module Uint16Array =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x3130 : Ojs.t) -> x3130
    and t_to_js : t -> Ojs.t = fun (x3129 : Ojs.t) -> x3129
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3131 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3131) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> ArrayBuffer.t) =
      fun (x3132 : t) ->
        ArrayBuffer.t_of_js (Ojs.get_prop_ascii (t_to_js x3132) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3133 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3133) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3134 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3134) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3140 : t) ->
        fun ~target:(x3135 : float) ->
          fun ~start:(x3136 : float) ->
            fun ?end_:(x3137 : float option) ->
              fun () ->
                t_of_js
                  (let x3141 = t_to_js x3140 in
                   Ojs.call (Ojs.get_prop_ascii x3141 "copyWithin") "apply"
                     [|x3141;((let x3138 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3138 "push"
                                    [|(Ojs.float_to_js x3135)|]);
                               ignore
                                 (Ojs.call x3138 "push"
                                    [|(Ojs.float_to_js x3136)|]);
                               (match x3137 with
                                | Some x3139 ->
                                    ignore
                                      (Ojs.call x3138 "push"
                                         [|(Ojs.float_to_js x3139)|])
                                | None -> ());
                               x3138))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3149 : t) ->
        fun (x3142 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3143 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3150 = t_to_js x3149 in
                 Ojs.call (Ojs.get_prop_ascii x3150 "every") "apply"
                   [|x3150;((let x3144 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3144 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3146 : Ojs.t) ->
                                          fun (x3147 : Ojs.t) ->
                                            fun (x3148 : Ojs.t) ->
                                              unknown_to_js
                                                (x3142
                                                   ~value:(Ojs.float_of_js
                                                             x3146)
                                                   ~index:(Ojs.float_of_js
                                                             x3147)
                                                   ~array:(t_of_js x3148))))|]);
                             (match x3143 with
                              | Some x3145 ->
                                  ignore
                                    (Ojs.call x3144 "push"
                                       [|(any_to_js x3145)|])
                              | None -> ());
                             x3144))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3157 : t) ->
        fun ~value:(x3151 : float) ->
          fun ?start:(x3152 : float option) ->
            fun ?end_:(x3153 : float option) ->
              fun () ->
                t_of_js
                  (let x3158 = t_to_js x3157 in
                   Ojs.call (Ojs.get_prop_ascii x3158 "fill") "apply"
                     [|x3158;((let x3154 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3154 "push"
                                    [|(Ojs.float_to_js x3151)|]);
                               (match x3152 with
                                | Some x3156 ->
                                    ignore
                                      (Ojs.call x3154 "push"
                                         [|(Ojs.float_to_js x3156)|])
                                | None -> ());
                               (match x3153 with
                                | Some x3155 ->
                                    ignore
                                      (Ojs.call x3154 "push"
                                         [|(Ojs.float_to_js x3155)|])
                                | None -> ());
                               x3154))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3166 : t) ->
        fun (x3159 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x3160 : any option) ->
            fun () ->
              t_of_js
                (let x3167 = t_to_js x3166 in
                 Ojs.call (Ojs.get_prop_ascii x3167 "filter") "apply"
                   [|x3167;((let x3161 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3161 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3163 : Ojs.t) ->
                                          fun (x3164 : Ojs.t) ->
                                            fun (x3165 : Ojs.t) ->
                                              any_to_js
                                                (x3159
                                                   ~value:(Ojs.float_of_js
                                                             x3163)
                                                   ~index:(Ojs.float_of_js
                                                             x3164)
                                                   ~array:(t_of_js x3165))))|]);
                             (match x3160 with
                              | Some x3162 ->
                                  ignore
                                    (Ojs.call x3161 "push"
                                       [|(any_to_js x3162)|])
                              | None -> ());
                             x3161))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3175 : t) ->
        fun (x3168 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3169 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3176 = t_to_js x3175 in
                 Ojs.call (Ojs.get_prop_ascii x3176 "find") "apply"
                   [|x3176;((let x3170 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3170 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3172 : Ojs.t) ->
                                          fun (x3173 : Ojs.t) ->
                                            fun (x3174 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3168
                                                   ~value:(Ojs.float_of_js
                                                             x3172)
                                                   ~index:(Ojs.float_of_js
                                                             x3173)
                                                   ~obj:(t_of_js x3174))))|]);
                             (match x3169 with
                              | Some x3171 ->
                                  ignore
                                    (Ojs.call x3170 "push"
                                       [|(any_to_js x3171)|])
                              | None -> ());
                             x3170))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3185 : t) ->
        fun (x3178 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3179 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3186 = t_to_js x3185 in
                 Ojs.call (Ojs.get_prop_ascii x3186 "findIndex") "apply"
                   [|x3186;((let x3180 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3180 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3182 : Ojs.t) ->
                                          fun (x3183 : Ojs.t) ->
                                            fun (x3184 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3178
                                                   ~value:(Ojs.float_of_js
                                                             x3182)
                                                   ~index:(Ojs.float_of_js
                                                             x3183)
                                                   ~obj:(t_of_js x3184))))|]);
                             (match x3179 with
                              | Some x3181 ->
                                  ignore
                                    (Ojs.call x3180 "push"
                                       [|(any_to_js x3181)|])
                              | None -> ());
                             x3180))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3194 : t) ->
        fun
          ~callbackfn:(x3187 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3188 : any option) ->
            fun () ->
              ignore
                (let x3195 = t_to_js x3194 in
                 Ojs.call (Ojs.get_prop_ascii x3195 "forEach") "apply"
                   [|x3195;((let x3189 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3189 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3191 : Ojs.t) ->
                                          fun (x3192 : Ojs.t) ->
                                            fun (x3193 : Ojs.t) ->
                                              x3187
                                                ~value:(Ojs.float_of_js x3191)
                                                ~index:(Ojs.float_of_js x3192)
                                                ~array:(t_of_js x3193)))|]);
                             (match x3188 with
                              | Some x3190 ->
                                  ignore
                                    (Ojs.call x3189 "push"
                                       [|(any_to_js x3190)|])
                              | None -> ());
                             x3189))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3200 : t) ->
        fun ~searchElement:(x3196 : float) ->
          fun ?fromIndex:(x3197 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3201 = t_to_js x3200 in
                 Ojs.call (Ojs.get_prop_ascii x3201 "indexOf") "apply"
                   [|x3201;((let x3198 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3198 "push"
                                  [|(Ojs.float_to_js x3196)|]);
                             (match x3197 with
                              | Some x3199 ->
                                  ignore
                                    (Ojs.call x3198 "push"
                                       [|(Ojs.float_to_js x3199)|])
                              | None -> ());
                             x3198))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3205 : t) ->
        fun ?separator:(x3202 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3206 = t_to_js x3205 in
               Ojs.call (Ojs.get_prop_ascii x3206 "join") "apply"
                 [|x3206;((let x3203 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3202 with
                            | Some x3204 ->
                                ignore
                                  (Ojs.call x3203 "push"
                                     [|(Ojs.string_to_js x3204)|])
                            | None -> ());
                           x3203))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3211 : t) ->
        fun ~searchElement:(x3207 : float) ->
          fun ?fromIndex:(x3208 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3212 = t_to_js x3211 in
                 Ojs.call (Ojs.get_prop_ascii x3212 "lastIndexOf") "apply"
                   [|x3212;((let x3209 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3209 "push"
                                  [|(Ojs.float_to_js x3207)|]);
                             (match x3208 with
                              | Some x3210 ->
                                  ignore
                                    (Ojs.call x3209 "push"
                                       [|(Ojs.float_to_js x3210)|])
                              | None -> ());
                             x3209))|])
    let (get_length : t -> float) =
      fun (x3213 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3213) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3221 : t) ->
        fun
          ~callbackfn:(x3214 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3215 : any option) ->
            fun () ->
              t_of_js
                (let x3222 = t_to_js x3221 in
                 Ojs.call (Ojs.get_prop_ascii x3222 "map") "apply"
                   [|x3222;((let x3216 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3216 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3218 : Ojs.t) ->
                                          fun (x3219 : Ojs.t) ->
                                            fun (x3220 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3214
                                                   ~value:(Ojs.float_of_js
                                                             x3218)
                                                   ~index:(Ojs.float_of_js
                                                             x3219)
                                                   ~array:(t_of_js x3220))))|]);
                             (match x3215 with
                              | Some x3217 ->
                                  ignore
                                    (Ojs.call x3216 "push"
                                       [|(any_to_js x3217)|])
                              | None -> ());
                             x3216))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3228 : t) ->
        fun
          ~callbackfn:(x3223 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3228) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3224 : Ojs.t) ->
                       fun (x3225 : Ojs.t) ->
                         fun (x3226 : Ojs.t) ->
                           fun (x3227 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3223 ~previousValue:(Ojs.float_of_js x3224)
                                  ~currentValue:(Ojs.float_of_js x3225)
                                  ~currentIndex:(Ojs.float_of_js x3226)
                                  ~array:(t_of_js x3227))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3235 : t) ->
        fun
          ~callbackfn:(x3229 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3234 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3235) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3230 : Ojs.t) ->
                         fun (x3231 : Ojs.t) ->
                           fun (x3232 : Ojs.t) ->
                             fun (x3233 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3229
                                    ~previousValue:(Ojs.float_of_js x3230)
                                    ~currentValue:(Ojs.float_of_js x3231)
                                    ~currentIndex:(Ojs.float_of_js x3232)
                                    ~array:(t_of_js x3233))));(Ojs.float_to_js
                                                                 x3234)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3242 : t) ->
        fun
          ~callbackfn:(x3236 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3241 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3242) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3237 : Ojs.t) ->
                         fun (x3238 : Ojs.t) ->
                           fun (x3239 : Ojs.t) ->
                             fun (x3240 : Ojs.t) ->
                               Obj.magic
                                 (x3236 ~previousValue:(Obj.magic x3237)
                                    ~currentValue:(Ojs.float_of_js x3238)
                                    ~currentIndex:(Ojs.float_of_js x3239)
                                    ~array:(t_of_js x3240))));(Obj.magic
                                                                 x3241)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3248 : t) ->
        fun
          ~callbackfn:(x3243 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3248) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3244 : Ojs.t) ->
                       fun (x3245 : Ojs.t) ->
                         fun (x3246 : Ojs.t) ->
                           fun (x3247 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3243 ~previousValue:(Ojs.float_of_js x3244)
                                  ~currentValue:(Ojs.float_of_js x3245)
                                  ~currentIndex:(Ojs.float_of_js x3246)
                                  ~array:(t_of_js x3247))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3255 : t) ->
        fun
          ~callbackfn:(x3249 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3254 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3255) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3250 : Ojs.t) ->
                         fun (x3251 : Ojs.t) ->
                           fun (x3252 : Ojs.t) ->
                             fun (x3253 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3249
                                    ~previousValue:(Ojs.float_of_js x3250)
                                    ~currentValue:(Ojs.float_of_js x3251)
                                    ~currentIndex:(Ojs.float_of_js x3252)
                                    ~array:(t_of_js x3253))));(Ojs.float_to_js
                                                                 x3254)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3262 : t) ->
        fun
          ~callbackfn:(x3256 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3261 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3262) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3257 : Ojs.t) ->
                         fun (x3258 : Ojs.t) ->
                           fun (x3259 : Ojs.t) ->
                             fun (x3260 : Ojs.t) ->
                               Obj.magic
                                 (x3256 ~previousValue:(Obj.magic x3257)
                                    ~currentValue:(Ojs.float_of_js x3258)
                                    ~currentIndex:(Ojs.float_of_js x3259)
                                    ~array:(t_of_js x3260))));(Obj.magic
                                                                 x3261)|])
    let (reverse : t -> t) =
      fun (x3263 : t) -> t_of_js (Ojs.call (t_to_js x3263) "reverse" [||])
    let (set_ : t -> array:float Array.t -> ?offset:float -> unit -> unit) =
      fun (x3269 : t) ->
        fun ~array:(x3264 : float Array.t) ->
          fun ?offset:(x3265 : float option) ->
            fun () ->
              ignore
                (let x3270 = t_to_js x3269 in
                 Ojs.call (Ojs.get_prop_ascii x3270 "set") "apply"
                   [|x3270;((let x3266 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3266 "push"
                                  [|(Array.t_to_js Ojs.float_to_js x3264)|]);
                             (match x3265 with
                              | Some x3267 ->
                                  ignore
                                    (Ojs.call x3266 "push"
                                       [|(Ojs.float_to_js x3267)|])
                              | None -> ());
                             x3266))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3276 : t) ->
        fun ?start:(x3271 : float option) ->
          fun ?end_:(x3272 : float option) ->
            fun () ->
              t_of_js
                (let x3277 = t_to_js x3276 in
                 Ojs.call (Ojs.get_prop_ascii x3277 "slice") "apply"
                   [|x3277;((let x3273 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3271 with
                              | Some x3275 ->
                                  ignore
                                    (Ojs.call x3273 "push"
                                       [|(Ojs.float_to_js x3275)|])
                              | None -> ());
                             (match x3272 with
                              | Some x3274 ->
                                  ignore
                                    (Ojs.call x3273 "push"
                                       [|(Ojs.float_to_js x3274)|])
                              | None -> ());
                             x3273))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3285 : t) ->
        fun (x3278 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3279 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3286 = t_to_js x3285 in
                 Ojs.call (Ojs.get_prop_ascii x3286 "some") "apply"
                   [|x3286;((let x3280 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3280 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3282 : Ojs.t) ->
                                          fun (x3283 : Ojs.t) ->
                                            fun (x3284 : Ojs.t) ->
                                              unknown_to_js
                                                (x3278
                                                   ~value:(Ojs.float_of_js
                                                             x3282)
                                                   ~index:(Ojs.float_of_js
                                                             x3283)
                                                   ~array:(t_of_js x3284))))|]);
                             (match x3279 with
                              | Some x3281 ->
                                  ignore
                                    (Ojs.call x3280 "push"
                                       [|(any_to_js x3281)|])
                              | None -> ());
                             x3280))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3292 : t) ->
        fun ?compareFn:(x3287 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3293 = t_to_js x3292 in
               Ojs.call (Ojs.get_prop_ascii x3293 "sort") "apply"
                 [|x3293;((let x3288 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3287 with
                            | Some x3289 ->
                                ignore
                                  (Ojs.call x3288 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3290 : Ojs.t) ->
                                             fun (x3291 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3289
                                                    ~a:(Ojs.float_of_js x3290)
                                                    ~b:(Ojs.float_of_js x3291))))|])
                            | None -> ());
                           x3288))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3299 : t) ->
        fun ?begin_:(x3294 : float option) ->
          fun ?end_:(x3295 : float option) ->
            fun () ->
              t_of_js
                (let x3300 = t_to_js x3299 in
                 Ojs.call (Ojs.get_prop_ascii x3300 "subarray") "apply"
                   [|x3300;((let x3296 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3294 with
                              | Some x3298 ->
                                  ignore
                                    (Ojs.call x3296 "push"
                                       [|(Ojs.float_to_js x3298)|])
                              | None -> ());
                             (match x3295 with
                              | Some x3297 ->
                                  ignore
                                    (Ojs.call x3296 "push"
                                       [|(Ojs.float_to_js x3297)|])
                              | None -> ());
                             x3296))|])
    let (toLocaleString : t -> string) =
      fun (x3301 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3301) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3302 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3302) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3303 : t) -> t_of_js (Ojs.call (t_to_js x3303) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3304 : t) ->
        fun (x3305 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3304) (Ojs.float_to_js x3305))
    let (set : t -> float -> float -> unit) =
      fun (x3306 : t) ->
        fun (x3307 : float) ->
          fun (x3308 : float) ->
            Ojs.set_prop (t_to_js x3306) (Ojs.float_to_js x3307)
              (Ojs.float_to_js x3308)
    let (create : length:float -> t) =
      fun ~length:(x3309 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x3309)|])
    let (create' : array:(ArrayBuffer.t, float Array.t) union2 -> t) =
      fun ~array:(x3310 : (ArrayBuffer.t, float Array.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(union2_to_js ArrayBuffer.t_to_js
                  (fun (x3312 : float Array.t) ->
                     Array.t_to_js Ojs.float_to_js x3312) x3310)|])
    let (create'' :
      buffer:ArrayBuffer.t -> ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x3314 : ArrayBuffer.t) ->
        fun ?byteOffset:(x3315 : float option) ->
          fun ?length:(x3316 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x3317 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3317 "push" [|(ArrayBuffer.t_to_js x3314)|]);
                    (match x3315 with
                     | Some x3319 ->
                         ignore
                           (Ojs.call x3317 "push" [|(Ojs.float_to_js x3319)|])
                     | None -> ());
                    (match x3316 with
                     | Some x3318 ->
                         ignore
                           (Ojs.call x3317 "push" [|(Ojs.float_to_js x3318)|])
                     | None -> ());
                    x3317))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x3320 : float list) ->
        t_of_js
          (let x3323 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x3323 "of") "apply"
             [|x3323;((let x3321 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3322 : float) ->
                            ignore
                              (Ojs.call x3321 "push"
                                 [|(Ojs.float_to_js x3322)|])) x3320;
                       x3321))|])
    let (from : array:float Array.t -> t) =
      fun ~array:(x3324 : float Array.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(Array.t_to_js Ojs.float_to_js x3324)|])
    let (from' :
      array:'T Array.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~array:(x3326 : 'T Array.t) ->
        fun ~mapfn:(x3327 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3328 : any option) ->
            fun () ->
              t_of_js
                (let x3334 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x3334 "from") "apply"
                   [|x3334;((let x3329 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3329 "push"
                                  [|(Array.t_to_js Obj.magic x3326)|]);
                             ignore
                               (Ojs.call x3329 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3331 : Ojs.t) ->
                                          fun (x3332 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3327 ~v:(Obj.magic x3331)
                                                 ~k:(Ojs.float_of_js x3332))))|]);
                             (match x3328 with
                              | Some x3330 ->
                                  ignore
                                    (Ojs.call x3329 "push"
                                       [|(any_to_js x3330)|])
                              | None -> ());
                             x3329))|])
  end
module Uint16ArrayConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x3336 : Ojs.t) -> x3336
    and t_to_js : t -> Ojs.t = fun (x3335 : Ojs.t) -> x3335
    let (get_prototype : t -> Uint16Array.t) =
      fun (x3337 : t) ->
        Uint16Array.t_of_js (Ojs.get_prop_ascii (t_to_js x3337) "prototype")
    let (create : t -> length:float -> Uint16Array.t) =
      fun (x3339 : t) ->
        fun ~length:(x3338 : float) ->
          Uint16Array.t_of_js
            (Ojs.new_obj (t_to_js x3339) [|(Ojs.float_to_js x3338)|])
    let (create' :
      t -> array:(ArrayBuffer.t, float Array.t) union2 -> Uint16Array.t) =
      fun (x3344 : t) ->
        fun ~array:(x3340 : (ArrayBuffer.t, float Array.t) union2) ->
          Uint16Array.t_of_js
            (Ojs.new_obj (t_to_js x3344)
               [|(union2_to_js ArrayBuffer.t_to_js
                    (fun (x3342 : float Array.t) ->
                       Array.t_to_js Ojs.float_to_js x3342) x3340)|])
    let (create'' :
      t ->
        buffer:ArrayBuffer.t ->
          ?byteOffset:float -> ?length:float -> unit -> Uint16Array.t)
      =
      fun (x3351 : t) ->
        fun ~buffer:(x3345 : ArrayBuffer.t) ->
          fun ?byteOffset:(x3346 : float option) ->
            fun ?length:(x3347 : float option) ->
              fun () ->
                Uint16Array.t_of_js
                  (Ojs.new_obj_arr (t_to_js x3351)
                     (let x3348 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3348 "push"
                           [|(ArrayBuffer.t_to_js x3345)|]);
                      (match x3346 with
                       | Some x3350 ->
                           ignore
                             (Ojs.call x3348 "push"
                                [|(Ojs.float_to_js x3350)|])
                       | None -> ());
                      (match x3347 with
                       | Some x3349 ->
                           ignore
                             (Ojs.call x3348 "push"
                                [|(Ojs.float_to_js x3349)|])
                       | None -> ());
                      x3348))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3352 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3352) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> Uint16Array.t) =
      fun (x3356 : t) ->
        fun (x3353 : float list) ->
          Uint16Array.t_of_js
            (let x3357 = t_to_js x3356 in
             Ojs.call (Ojs.get_prop_ascii x3357 "of") "apply"
               [|x3357;((let x3354 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3355 : float) ->
                              ignore
                                (Ojs.call x3354 "push"
                                   [|(Ojs.float_to_js x3355)|])) x3353;
                         x3354))|])
    let (from : t -> array:float Array.t -> Uint16Array.t) =
      fun (x3360 : t) ->
        fun ~array:(x3358 : float Array.t) ->
          Uint16Array.t_of_js
            (Ojs.call (t_to_js x3360) "from"
               [|(Array.t_to_js Ojs.float_to_js x3358)|])
    let (from' :
      t ->
        array:'T Array.t ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> Uint16Array.t)
      =
      fun (x3369 : t) ->
        fun ~array:(x3361 : 'T Array.t) ->
          fun ~mapfn:(x3362 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3363 : any option) ->
              fun () ->
                Uint16Array.t_of_js
                  (let x3370 = t_to_js x3369 in
                   Ojs.call (Ojs.get_prop_ascii x3370 "from") "apply"
                     [|x3370;((let x3364 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3364 "push"
                                    [|(Array.t_to_js Obj.magic x3361)|]);
                               ignore
                                 (Ojs.call x3364 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3366 : Ojs.t) ->
                                            fun (x3367 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3362 ~v:(Obj.magic x3366)
                                                   ~k:(Ojs.float_of_js x3367))))|]);
                               (match x3363 with
                                | Some x3365 ->
                                    ignore
                                      (Ojs.call x3364 "push"
                                         [|(any_to_js x3365)|])
                                | None -> ());
                               x3364))|])
  end
let (uint16Array : Uint16ArrayConstructor.t) =
  Uint16ArrayConstructor.t_of_js
    (Ojs.get_prop_ascii Ojs.global "Uint16Array")
module Int32Array =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x3372 : Ojs.t) -> x3372
    and t_to_js : t -> Ojs.t = fun (x3371 : Ojs.t) -> x3371
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3373 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3373) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> ArrayBuffer.t) =
      fun (x3374 : t) ->
        ArrayBuffer.t_of_js (Ojs.get_prop_ascii (t_to_js x3374) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3375 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3375) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3376 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3376) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3382 : t) ->
        fun ~target:(x3377 : float) ->
          fun ~start:(x3378 : float) ->
            fun ?end_:(x3379 : float option) ->
              fun () ->
                t_of_js
                  (let x3383 = t_to_js x3382 in
                   Ojs.call (Ojs.get_prop_ascii x3383 "copyWithin") "apply"
                     [|x3383;((let x3380 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3380 "push"
                                    [|(Ojs.float_to_js x3377)|]);
                               ignore
                                 (Ojs.call x3380 "push"
                                    [|(Ojs.float_to_js x3378)|]);
                               (match x3379 with
                                | Some x3381 ->
                                    ignore
                                      (Ojs.call x3380 "push"
                                         [|(Ojs.float_to_js x3381)|])
                                | None -> ());
                               x3380))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3391 : t) ->
        fun (x3384 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3385 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3392 = t_to_js x3391 in
                 Ojs.call (Ojs.get_prop_ascii x3392 "every") "apply"
                   [|x3392;((let x3386 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3386 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3388 : Ojs.t) ->
                                          fun (x3389 : Ojs.t) ->
                                            fun (x3390 : Ojs.t) ->
                                              unknown_to_js
                                                (x3384
                                                   ~value:(Ojs.float_of_js
                                                             x3388)
                                                   ~index:(Ojs.float_of_js
                                                             x3389)
                                                   ~array:(t_of_js x3390))))|]);
                             (match x3385 with
                              | Some x3387 ->
                                  ignore
                                    (Ojs.call x3386 "push"
                                       [|(any_to_js x3387)|])
                              | None -> ());
                             x3386))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3399 : t) ->
        fun ~value:(x3393 : float) ->
          fun ?start:(x3394 : float option) ->
            fun ?end_:(x3395 : float option) ->
              fun () ->
                t_of_js
                  (let x3400 = t_to_js x3399 in
                   Ojs.call (Ojs.get_prop_ascii x3400 "fill") "apply"
                     [|x3400;((let x3396 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3396 "push"
                                    [|(Ojs.float_to_js x3393)|]);
                               (match x3394 with
                                | Some x3398 ->
                                    ignore
                                      (Ojs.call x3396 "push"
                                         [|(Ojs.float_to_js x3398)|])
                                | None -> ());
                               (match x3395 with
                                | Some x3397 ->
                                    ignore
                                      (Ojs.call x3396 "push"
                                         [|(Ojs.float_to_js x3397)|])
                                | None -> ());
                               x3396))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3408 : t) ->
        fun (x3401 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x3402 : any option) ->
            fun () ->
              t_of_js
                (let x3409 = t_to_js x3408 in
                 Ojs.call (Ojs.get_prop_ascii x3409 "filter") "apply"
                   [|x3409;((let x3403 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3403 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3405 : Ojs.t) ->
                                          fun (x3406 : Ojs.t) ->
                                            fun (x3407 : Ojs.t) ->
                                              any_to_js
                                                (x3401
                                                   ~value:(Ojs.float_of_js
                                                             x3405)
                                                   ~index:(Ojs.float_of_js
                                                             x3406)
                                                   ~array:(t_of_js x3407))))|]);
                             (match x3402 with
                              | Some x3404 ->
                                  ignore
                                    (Ojs.call x3403 "push"
                                       [|(any_to_js x3404)|])
                              | None -> ());
                             x3403))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3417 : t) ->
        fun (x3410 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3411 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3418 = t_to_js x3417 in
                 Ojs.call (Ojs.get_prop_ascii x3418 "find") "apply"
                   [|x3418;((let x3412 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3412 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3414 : Ojs.t) ->
                                          fun (x3415 : Ojs.t) ->
                                            fun (x3416 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3410
                                                   ~value:(Ojs.float_of_js
                                                             x3414)
                                                   ~index:(Ojs.float_of_js
                                                             x3415)
                                                   ~obj:(t_of_js x3416))))|]);
                             (match x3411 with
                              | Some x3413 ->
                                  ignore
                                    (Ojs.call x3412 "push"
                                       [|(any_to_js x3413)|])
                              | None -> ());
                             x3412))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3427 : t) ->
        fun (x3420 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3421 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3428 = t_to_js x3427 in
                 Ojs.call (Ojs.get_prop_ascii x3428 "findIndex") "apply"
                   [|x3428;((let x3422 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3422 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3424 : Ojs.t) ->
                                          fun (x3425 : Ojs.t) ->
                                            fun (x3426 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3420
                                                   ~value:(Ojs.float_of_js
                                                             x3424)
                                                   ~index:(Ojs.float_of_js
                                                             x3425)
                                                   ~obj:(t_of_js x3426))))|]);
                             (match x3421 with
                              | Some x3423 ->
                                  ignore
                                    (Ojs.call x3422 "push"
                                       [|(any_to_js x3423)|])
                              | None -> ());
                             x3422))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3436 : t) ->
        fun
          ~callbackfn:(x3429 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3430 : any option) ->
            fun () ->
              ignore
                (let x3437 = t_to_js x3436 in
                 Ojs.call (Ojs.get_prop_ascii x3437 "forEach") "apply"
                   [|x3437;((let x3431 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3431 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3433 : Ojs.t) ->
                                          fun (x3434 : Ojs.t) ->
                                            fun (x3435 : Ojs.t) ->
                                              x3429
                                                ~value:(Ojs.float_of_js x3433)
                                                ~index:(Ojs.float_of_js x3434)
                                                ~array:(t_of_js x3435)))|]);
                             (match x3430 with
                              | Some x3432 ->
                                  ignore
                                    (Ojs.call x3431 "push"
                                       [|(any_to_js x3432)|])
                              | None -> ());
                             x3431))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3442 : t) ->
        fun ~searchElement:(x3438 : float) ->
          fun ?fromIndex:(x3439 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3443 = t_to_js x3442 in
                 Ojs.call (Ojs.get_prop_ascii x3443 "indexOf") "apply"
                   [|x3443;((let x3440 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3440 "push"
                                  [|(Ojs.float_to_js x3438)|]);
                             (match x3439 with
                              | Some x3441 ->
                                  ignore
                                    (Ojs.call x3440 "push"
                                       [|(Ojs.float_to_js x3441)|])
                              | None -> ());
                             x3440))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3447 : t) ->
        fun ?separator:(x3444 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3448 = t_to_js x3447 in
               Ojs.call (Ojs.get_prop_ascii x3448 "join") "apply"
                 [|x3448;((let x3445 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3444 with
                            | Some x3446 ->
                                ignore
                                  (Ojs.call x3445 "push"
                                     [|(Ojs.string_to_js x3446)|])
                            | None -> ());
                           x3445))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3453 : t) ->
        fun ~searchElement:(x3449 : float) ->
          fun ?fromIndex:(x3450 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3454 = t_to_js x3453 in
                 Ojs.call (Ojs.get_prop_ascii x3454 "lastIndexOf") "apply"
                   [|x3454;((let x3451 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3451 "push"
                                  [|(Ojs.float_to_js x3449)|]);
                             (match x3450 with
                              | Some x3452 ->
                                  ignore
                                    (Ojs.call x3451 "push"
                                       [|(Ojs.float_to_js x3452)|])
                              | None -> ());
                             x3451))|])
    let (get_length : t -> float) =
      fun (x3455 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3455) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3463 : t) ->
        fun
          ~callbackfn:(x3456 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3457 : any option) ->
            fun () ->
              t_of_js
                (let x3464 = t_to_js x3463 in
                 Ojs.call (Ojs.get_prop_ascii x3464 "map") "apply"
                   [|x3464;((let x3458 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3458 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3460 : Ojs.t) ->
                                          fun (x3461 : Ojs.t) ->
                                            fun (x3462 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3456
                                                   ~value:(Ojs.float_of_js
                                                             x3460)
                                                   ~index:(Ojs.float_of_js
                                                             x3461)
                                                   ~array:(t_of_js x3462))))|]);
                             (match x3457 with
                              | Some x3459 ->
                                  ignore
                                    (Ojs.call x3458 "push"
                                       [|(any_to_js x3459)|])
                              | None -> ());
                             x3458))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3470 : t) ->
        fun
          ~callbackfn:(x3465 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3470) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3466 : Ojs.t) ->
                       fun (x3467 : Ojs.t) ->
                         fun (x3468 : Ojs.t) ->
                           fun (x3469 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3465 ~previousValue:(Ojs.float_of_js x3466)
                                  ~currentValue:(Ojs.float_of_js x3467)
                                  ~currentIndex:(Ojs.float_of_js x3468)
                                  ~array:(t_of_js x3469))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3477 : t) ->
        fun
          ~callbackfn:(x3471 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3476 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3477) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3472 : Ojs.t) ->
                         fun (x3473 : Ojs.t) ->
                           fun (x3474 : Ojs.t) ->
                             fun (x3475 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3471
                                    ~previousValue:(Ojs.float_of_js x3472)
                                    ~currentValue:(Ojs.float_of_js x3473)
                                    ~currentIndex:(Ojs.float_of_js x3474)
                                    ~array:(t_of_js x3475))));(Ojs.float_to_js
                                                                 x3476)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3484 : t) ->
        fun
          ~callbackfn:(x3478 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3483 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3484) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3479 : Ojs.t) ->
                         fun (x3480 : Ojs.t) ->
                           fun (x3481 : Ojs.t) ->
                             fun (x3482 : Ojs.t) ->
                               Obj.magic
                                 (x3478 ~previousValue:(Obj.magic x3479)
                                    ~currentValue:(Ojs.float_of_js x3480)
                                    ~currentIndex:(Ojs.float_of_js x3481)
                                    ~array:(t_of_js x3482))));(Obj.magic
                                                                 x3483)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3490 : t) ->
        fun
          ~callbackfn:(x3485 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3490) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3486 : Ojs.t) ->
                       fun (x3487 : Ojs.t) ->
                         fun (x3488 : Ojs.t) ->
                           fun (x3489 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3485 ~previousValue:(Ojs.float_of_js x3486)
                                  ~currentValue:(Ojs.float_of_js x3487)
                                  ~currentIndex:(Ojs.float_of_js x3488)
                                  ~array:(t_of_js x3489))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3497 : t) ->
        fun
          ~callbackfn:(x3491 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3496 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3497) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3492 : Ojs.t) ->
                         fun (x3493 : Ojs.t) ->
                           fun (x3494 : Ojs.t) ->
                             fun (x3495 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3491
                                    ~previousValue:(Ojs.float_of_js x3492)
                                    ~currentValue:(Ojs.float_of_js x3493)
                                    ~currentIndex:(Ojs.float_of_js x3494)
                                    ~array:(t_of_js x3495))));(Ojs.float_to_js
                                                                 x3496)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3504 : t) ->
        fun
          ~callbackfn:(x3498 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3503 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3504) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3499 : Ojs.t) ->
                         fun (x3500 : Ojs.t) ->
                           fun (x3501 : Ojs.t) ->
                             fun (x3502 : Ojs.t) ->
                               Obj.magic
                                 (x3498 ~previousValue:(Obj.magic x3499)
                                    ~currentValue:(Ojs.float_of_js x3500)
                                    ~currentIndex:(Ojs.float_of_js x3501)
                                    ~array:(t_of_js x3502))));(Obj.magic
                                                                 x3503)|])
    let (reverse : t -> t) =
      fun (x3505 : t) -> t_of_js (Ojs.call (t_to_js x3505) "reverse" [||])
    let (set_ : t -> array:float Array.t -> ?offset:float -> unit -> unit) =
      fun (x3511 : t) ->
        fun ~array:(x3506 : float Array.t) ->
          fun ?offset:(x3507 : float option) ->
            fun () ->
              ignore
                (let x3512 = t_to_js x3511 in
                 Ojs.call (Ojs.get_prop_ascii x3512 "set") "apply"
                   [|x3512;((let x3508 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3508 "push"
                                  [|(Array.t_to_js Ojs.float_to_js x3506)|]);
                             (match x3507 with
                              | Some x3509 ->
                                  ignore
                                    (Ojs.call x3508 "push"
                                       [|(Ojs.float_to_js x3509)|])
                              | None -> ());
                             x3508))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3518 : t) ->
        fun ?start:(x3513 : float option) ->
          fun ?end_:(x3514 : float option) ->
            fun () ->
              t_of_js
                (let x3519 = t_to_js x3518 in
                 Ojs.call (Ojs.get_prop_ascii x3519 "slice") "apply"
                   [|x3519;((let x3515 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3513 with
                              | Some x3517 ->
                                  ignore
                                    (Ojs.call x3515 "push"
                                       [|(Ojs.float_to_js x3517)|])
                              | None -> ());
                             (match x3514 with
                              | Some x3516 ->
                                  ignore
                                    (Ojs.call x3515 "push"
                                       [|(Ojs.float_to_js x3516)|])
                              | None -> ());
                             x3515))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3527 : t) ->
        fun (x3520 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3521 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3528 = t_to_js x3527 in
                 Ojs.call (Ojs.get_prop_ascii x3528 "some") "apply"
                   [|x3528;((let x3522 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3522 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3524 : Ojs.t) ->
                                          fun (x3525 : Ojs.t) ->
                                            fun (x3526 : Ojs.t) ->
                                              unknown_to_js
                                                (x3520
                                                   ~value:(Ojs.float_of_js
                                                             x3524)
                                                   ~index:(Ojs.float_of_js
                                                             x3525)
                                                   ~array:(t_of_js x3526))))|]);
                             (match x3521 with
                              | Some x3523 ->
                                  ignore
                                    (Ojs.call x3522 "push"
                                       [|(any_to_js x3523)|])
                              | None -> ());
                             x3522))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3534 : t) ->
        fun ?compareFn:(x3529 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3535 = t_to_js x3534 in
               Ojs.call (Ojs.get_prop_ascii x3535 "sort") "apply"
                 [|x3535;((let x3530 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3529 with
                            | Some x3531 ->
                                ignore
                                  (Ojs.call x3530 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3532 : Ojs.t) ->
                                             fun (x3533 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3531
                                                    ~a:(Ojs.float_of_js x3532)
                                                    ~b:(Ojs.float_of_js x3533))))|])
                            | None -> ());
                           x3530))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3541 : t) ->
        fun ?begin_:(x3536 : float option) ->
          fun ?end_:(x3537 : float option) ->
            fun () ->
              t_of_js
                (let x3542 = t_to_js x3541 in
                 Ojs.call (Ojs.get_prop_ascii x3542 "subarray") "apply"
                   [|x3542;((let x3538 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3536 with
                              | Some x3540 ->
                                  ignore
                                    (Ojs.call x3538 "push"
                                       [|(Ojs.float_to_js x3540)|])
                              | None -> ());
                             (match x3537 with
                              | Some x3539 ->
                                  ignore
                                    (Ojs.call x3538 "push"
                                       [|(Ojs.float_to_js x3539)|])
                              | None -> ());
                             x3538))|])
    let (toLocaleString : t -> string) =
      fun (x3543 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3543) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3544 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3544) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3545 : t) -> t_of_js (Ojs.call (t_to_js x3545) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3546 : t) ->
        fun (x3547 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3546) (Ojs.float_to_js x3547))
    let (set : t -> float -> float -> unit) =
      fun (x3548 : t) ->
        fun (x3549 : float) ->
          fun (x3550 : float) ->
            Ojs.set_prop (t_to_js x3548) (Ojs.float_to_js x3549)
              (Ojs.float_to_js x3550)
    let (create : length:float -> t) =
      fun ~length:(x3551 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x3551)|])
    let (create' : array:(ArrayBuffer.t, float Array.t) union2 -> t) =
      fun ~array:(x3552 : (ArrayBuffer.t, float Array.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(union2_to_js ArrayBuffer.t_to_js
                  (fun (x3554 : float Array.t) ->
                     Array.t_to_js Ojs.float_to_js x3554) x3552)|])
    let (create'' :
      buffer:ArrayBuffer.t -> ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x3556 : ArrayBuffer.t) ->
        fun ?byteOffset:(x3557 : float option) ->
          fun ?length:(x3558 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x3559 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3559 "push" [|(ArrayBuffer.t_to_js x3556)|]);
                    (match x3557 with
                     | Some x3561 ->
                         ignore
                           (Ojs.call x3559 "push" [|(Ojs.float_to_js x3561)|])
                     | None -> ());
                    (match x3558 with
                     | Some x3560 ->
                         ignore
                           (Ojs.call x3559 "push" [|(Ojs.float_to_js x3560)|])
                     | None -> ());
                    x3559))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x3562 : float list) ->
        t_of_js
          (let x3565 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x3565 "of") "apply"
             [|x3565;((let x3563 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3564 : float) ->
                            ignore
                              (Ojs.call x3563 "push"
                                 [|(Ojs.float_to_js x3564)|])) x3562;
                       x3563))|])
    let (from : array:float Array.t -> t) =
      fun ~array:(x3566 : float Array.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(Array.t_to_js Ojs.float_to_js x3566)|])
    let (from' :
      array:'T Array.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~array:(x3568 : 'T Array.t) ->
        fun ~mapfn:(x3569 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3570 : any option) ->
            fun () ->
              t_of_js
                (let x3576 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x3576 "from") "apply"
                   [|x3576;((let x3571 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3571 "push"
                                  [|(Array.t_to_js Obj.magic x3568)|]);
                             ignore
                               (Ojs.call x3571 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3573 : Ojs.t) ->
                                          fun (x3574 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3569 ~v:(Obj.magic x3573)
                                                 ~k:(Ojs.float_of_js x3574))))|]);
                             (match x3570 with
                              | Some x3572 ->
                                  ignore
                                    (Ojs.call x3571 "push"
                                       [|(any_to_js x3572)|])
                              | None -> ());
                             x3571))|])
  end
module Int32ArrayConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x3578 : Ojs.t) -> x3578
    and t_to_js : t -> Ojs.t = fun (x3577 : Ojs.t) -> x3577
    let (get_prototype : t -> Int32Array.t) =
      fun (x3579 : t) ->
        Int32Array.t_of_js (Ojs.get_prop_ascii (t_to_js x3579) "prototype")
    let (create : t -> length:float -> Int32Array.t) =
      fun (x3581 : t) ->
        fun ~length:(x3580 : float) ->
          Int32Array.t_of_js
            (Ojs.new_obj (t_to_js x3581) [|(Ojs.float_to_js x3580)|])
    let (create' :
      t -> array:(ArrayBuffer.t, float Array.t) union2 -> Int32Array.t) =
      fun (x3586 : t) ->
        fun ~array:(x3582 : (ArrayBuffer.t, float Array.t) union2) ->
          Int32Array.t_of_js
            (Ojs.new_obj (t_to_js x3586)
               [|(union2_to_js ArrayBuffer.t_to_js
                    (fun (x3584 : float Array.t) ->
                       Array.t_to_js Ojs.float_to_js x3584) x3582)|])
    let (create'' :
      t ->
        buffer:ArrayBuffer.t ->
          ?byteOffset:float -> ?length:float -> unit -> Int32Array.t)
      =
      fun (x3593 : t) ->
        fun ~buffer:(x3587 : ArrayBuffer.t) ->
          fun ?byteOffset:(x3588 : float option) ->
            fun ?length:(x3589 : float option) ->
              fun () ->
                Int32Array.t_of_js
                  (Ojs.new_obj_arr (t_to_js x3593)
                     (let x3590 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3590 "push"
                           [|(ArrayBuffer.t_to_js x3587)|]);
                      (match x3588 with
                       | Some x3592 ->
                           ignore
                             (Ojs.call x3590 "push"
                                [|(Ojs.float_to_js x3592)|])
                       | None -> ());
                      (match x3589 with
                       | Some x3591 ->
                           ignore
                             (Ojs.call x3590 "push"
                                [|(Ojs.float_to_js x3591)|])
                       | None -> ());
                      x3590))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3594 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3594) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> Int32Array.t) =
      fun (x3598 : t) ->
        fun (x3595 : float list) ->
          Int32Array.t_of_js
            (let x3599 = t_to_js x3598 in
             Ojs.call (Ojs.get_prop_ascii x3599 "of") "apply"
               [|x3599;((let x3596 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3597 : float) ->
                              ignore
                                (Ojs.call x3596 "push"
                                   [|(Ojs.float_to_js x3597)|])) x3595;
                         x3596))|])
    let (from : t -> array:float Array.t -> Int32Array.t) =
      fun (x3602 : t) ->
        fun ~array:(x3600 : float Array.t) ->
          Int32Array.t_of_js
            (Ojs.call (t_to_js x3602) "from"
               [|(Array.t_to_js Ojs.float_to_js x3600)|])
    let (from' :
      t ->
        array:'T Array.t ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> Int32Array.t)
      =
      fun (x3611 : t) ->
        fun ~array:(x3603 : 'T Array.t) ->
          fun ~mapfn:(x3604 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3605 : any option) ->
              fun () ->
                Int32Array.t_of_js
                  (let x3612 = t_to_js x3611 in
                   Ojs.call (Ojs.get_prop_ascii x3612 "from") "apply"
                     [|x3612;((let x3606 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3606 "push"
                                    [|(Array.t_to_js Obj.magic x3603)|]);
                               ignore
                                 (Ojs.call x3606 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3608 : Ojs.t) ->
                                            fun (x3609 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3604 ~v:(Obj.magic x3608)
                                                   ~k:(Ojs.float_of_js x3609))))|]);
                               (match x3605 with
                                | Some x3607 ->
                                    ignore
                                      (Ojs.call x3606 "push"
                                         [|(any_to_js x3607)|])
                                | None -> ());
                               x3606))|])
  end
let (int32Array : Int32ArrayConstructor.t) =
  Int32ArrayConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Int32Array")
module Uint32Array =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x3614 : Ojs.t) -> x3614
    and t_to_js : t -> Ojs.t = fun (x3613 : Ojs.t) -> x3613
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3615 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3615) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> ArrayBuffer.t) =
      fun (x3616 : t) ->
        ArrayBuffer.t_of_js (Ojs.get_prop_ascii (t_to_js x3616) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3617 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3617) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3618 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3618) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3624 : t) ->
        fun ~target:(x3619 : float) ->
          fun ~start:(x3620 : float) ->
            fun ?end_:(x3621 : float option) ->
              fun () ->
                t_of_js
                  (let x3625 = t_to_js x3624 in
                   Ojs.call (Ojs.get_prop_ascii x3625 "copyWithin") "apply"
                     [|x3625;((let x3622 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3622 "push"
                                    [|(Ojs.float_to_js x3619)|]);
                               ignore
                                 (Ojs.call x3622 "push"
                                    [|(Ojs.float_to_js x3620)|]);
                               (match x3621 with
                                | Some x3623 ->
                                    ignore
                                      (Ojs.call x3622 "push"
                                         [|(Ojs.float_to_js x3623)|])
                                | None -> ());
                               x3622))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3633 : t) ->
        fun (x3626 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3627 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3634 = t_to_js x3633 in
                 Ojs.call (Ojs.get_prop_ascii x3634 "every") "apply"
                   [|x3634;((let x3628 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3628 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3630 : Ojs.t) ->
                                          fun (x3631 : Ojs.t) ->
                                            fun (x3632 : Ojs.t) ->
                                              unknown_to_js
                                                (x3626
                                                   ~value:(Ojs.float_of_js
                                                             x3630)
                                                   ~index:(Ojs.float_of_js
                                                             x3631)
                                                   ~array:(t_of_js x3632))))|]);
                             (match x3627 with
                              | Some x3629 ->
                                  ignore
                                    (Ojs.call x3628 "push"
                                       [|(any_to_js x3629)|])
                              | None -> ());
                             x3628))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3641 : t) ->
        fun ~value:(x3635 : float) ->
          fun ?start:(x3636 : float option) ->
            fun ?end_:(x3637 : float option) ->
              fun () ->
                t_of_js
                  (let x3642 = t_to_js x3641 in
                   Ojs.call (Ojs.get_prop_ascii x3642 "fill") "apply"
                     [|x3642;((let x3638 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3638 "push"
                                    [|(Ojs.float_to_js x3635)|]);
                               (match x3636 with
                                | Some x3640 ->
                                    ignore
                                      (Ojs.call x3638 "push"
                                         [|(Ojs.float_to_js x3640)|])
                                | None -> ());
                               (match x3637 with
                                | Some x3639 ->
                                    ignore
                                      (Ojs.call x3638 "push"
                                         [|(Ojs.float_to_js x3639)|])
                                | None -> ());
                               x3638))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3650 : t) ->
        fun (x3643 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x3644 : any option) ->
            fun () ->
              t_of_js
                (let x3651 = t_to_js x3650 in
                 Ojs.call (Ojs.get_prop_ascii x3651 "filter") "apply"
                   [|x3651;((let x3645 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3645 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3647 : Ojs.t) ->
                                          fun (x3648 : Ojs.t) ->
                                            fun (x3649 : Ojs.t) ->
                                              any_to_js
                                                (x3643
                                                   ~value:(Ojs.float_of_js
                                                             x3647)
                                                   ~index:(Ojs.float_of_js
                                                             x3648)
                                                   ~array:(t_of_js x3649))))|]);
                             (match x3644 with
                              | Some x3646 ->
                                  ignore
                                    (Ojs.call x3645 "push"
                                       [|(any_to_js x3646)|])
                              | None -> ());
                             x3645))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3659 : t) ->
        fun (x3652 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3653 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3660 = t_to_js x3659 in
                 Ojs.call (Ojs.get_prop_ascii x3660 "find") "apply"
                   [|x3660;((let x3654 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3654 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3656 : Ojs.t) ->
                                          fun (x3657 : Ojs.t) ->
                                            fun (x3658 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3652
                                                   ~value:(Ojs.float_of_js
                                                             x3656)
                                                   ~index:(Ojs.float_of_js
                                                             x3657)
                                                   ~obj:(t_of_js x3658))))|]);
                             (match x3653 with
                              | Some x3655 ->
                                  ignore
                                    (Ojs.call x3654 "push"
                                       [|(any_to_js x3655)|])
                              | None -> ());
                             x3654))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3669 : t) ->
        fun (x3662 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3663 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3670 = t_to_js x3669 in
                 Ojs.call (Ojs.get_prop_ascii x3670 "findIndex") "apply"
                   [|x3670;((let x3664 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3664 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3666 : Ojs.t) ->
                                          fun (x3667 : Ojs.t) ->
                                            fun (x3668 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3662
                                                   ~value:(Ojs.float_of_js
                                                             x3666)
                                                   ~index:(Ojs.float_of_js
                                                             x3667)
                                                   ~obj:(t_of_js x3668))))|]);
                             (match x3663 with
                              | Some x3665 ->
                                  ignore
                                    (Ojs.call x3664 "push"
                                       [|(any_to_js x3665)|])
                              | None -> ());
                             x3664))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3678 : t) ->
        fun
          ~callbackfn:(x3671 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3672 : any option) ->
            fun () ->
              ignore
                (let x3679 = t_to_js x3678 in
                 Ojs.call (Ojs.get_prop_ascii x3679 "forEach") "apply"
                   [|x3679;((let x3673 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3673 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3675 : Ojs.t) ->
                                          fun (x3676 : Ojs.t) ->
                                            fun (x3677 : Ojs.t) ->
                                              x3671
                                                ~value:(Ojs.float_of_js x3675)
                                                ~index:(Ojs.float_of_js x3676)
                                                ~array:(t_of_js x3677)))|]);
                             (match x3672 with
                              | Some x3674 ->
                                  ignore
                                    (Ojs.call x3673 "push"
                                       [|(any_to_js x3674)|])
                              | None -> ());
                             x3673))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3684 : t) ->
        fun ~searchElement:(x3680 : float) ->
          fun ?fromIndex:(x3681 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3685 = t_to_js x3684 in
                 Ojs.call (Ojs.get_prop_ascii x3685 "indexOf") "apply"
                   [|x3685;((let x3682 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3682 "push"
                                  [|(Ojs.float_to_js x3680)|]);
                             (match x3681 with
                              | Some x3683 ->
                                  ignore
                                    (Ojs.call x3682 "push"
                                       [|(Ojs.float_to_js x3683)|])
                              | None -> ());
                             x3682))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3689 : t) ->
        fun ?separator:(x3686 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3690 = t_to_js x3689 in
               Ojs.call (Ojs.get_prop_ascii x3690 "join") "apply"
                 [|x3690;((let x3687 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3686 with
                            | Some x3688 ->
                                ignore
                                  (Ojs.call x3687 "push"
                                     [|(Ojs.string_to_js x3688)|])
                            | None -> ());
                           x3687))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3695 : t) ->
        fun ~searchElement:(x3691 : float) ->
          fun ?fromIndex:(x3692 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3696 = t_to_js x3695 in
                 Ojs.call (Ojs.get_prop_ascii x3696 "lastIndexOf") "apply"
                   [|x3696;((let x3693 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3693 "push"
                                  [|(Ojs.float_to_js x3691)|]);
                             (match x3692 with
                              | Some x3694 ->
                                  ignore
                                    (Ojs.call x3693 "push"
                                       [|(Ojs.float_to_js x3694)|])
                              | None -> ());
                             x3693))|])
    let (get_length : t -> float) =
      fun (x3697 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3697) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3705 : t) ->
        fun
          ~callbackfn:(x3698 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3699 : any option) ->
            fun () ->
              t_of_js
                (let x3706 = t_to_js x3705 in
                 Ojs.call (Ojs.get_prop_ascii x3706 "map") "apply"
                   [|x3706;((let x3700 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3700 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3702 : Ojs.t) ->
                                          fun (x3703 : Ojs.t) ->
                                            fun (x3704 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3698
                                                   ~value:(Ojs.float_of_js
                                                             x3702)
                                                   ~index:(Ojs.float_of_js
                                                             x3703)
                                                   ~array:(t_of_js x3704))))|]);
                             (match x3699 with
                              | Some x3701 ->
                                  ignore
                                    (Ojs.call x3700 "push"
                                       [|(any_to_js x3701)|])
                              | None -> ());
                             x3700))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3712 : t) ->
        fun
          ~callbackfn:(x3707 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3712) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3708 : Ojs.t) ->
                       fun (x3709 : Ojs.t) ->
                         fun (x3710 : Ojs.t) ->
                           fun (x3711 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3707 ~previousValue:(Ojs.float_of_js x3708)
                                  ~currentValue:(Ojs.float_of_js x3709)
                                  ~currentIndex:(Ojs.float_of_js x3710)
                                  ~array:(t_of_js x3711))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3719 : t) ->
        fun
          ~callbackfn:(x3713 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3718 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3719) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3714 : Ojs.t) ->
                         fun (x3715 : Ojs.t) ->
                           fun (x3716 : Ojs.t) ->
                             fun (x3717 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3713
                                    ~previousValue:(Ojs.float_of_js x3714)
                                    ~currentValue:(Ojs.float_of_js x3715)
                                    ~currentIndex:(Ojs.float_of_js x3716)
                                    ~array:(t_of_js x3717))));(Ojs.float_to_js
                                                                 x3718)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3726 : t) ->
        fun
          ~callbackfn:(x3720 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3725 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3726) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3721 : Ojs.t) ->
                         fun (x3722 : Ojs.t) ->
                           fun (x3723 : Ojs.t) ->
                             fun (x3724 : Ojs.t) ->
                               Obj.magic
                                 (x3720 ~previousValue:(Obj.magic x3721)
                                    ~currentValue:(Ojs.float_of_js x3722)
                                    ~currentIndex:(Ojs.float_of_js x3723)
                                    ~array:(t_of_js x3724))));(Obj.magic
                                                                 x3725)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3732 : t) ->
        fun
          ~callbackfn:(x3727 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3732) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3728 : Ojs.t) ->
                       fun (x3729 : Ojs.t) ->
                         fun (x3730 : Ojs.t) ->
                           fun (x3731 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3727 ~previousValue:(Ojs.float_of_js x3728)
                                  ~currentValue:(Ojs.float_of_js x3729)
                                  ~currentIndex:(Ojs.float_of_js x3730)
                                  ~array:(t_of_js x3731))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3739 : t) ->
        fun
          ~callbackfn:(x3733 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3738 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3739) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3734 : Ojs.t) ->
                         fun (x3735 : Ojs.t) ->
                           fun (x3736 : Ojs.t) ->
                             fun (x3737 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3733
                                    ~previousValue:(Ojs.float_of_js x3734)
                                    ~currentValue:(Ojs.float_of_js x3735)
                                    ~currentIndex:(Ojs.float_of_js x3736)
                                    ~array:(t_of_js x3737))));(Ojs.float_to_js
                                                                 x3738)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3746 : t) ->
        fun
          ~callbackfn:(x3740 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3745 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3746) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3741 : Ojs.t) ->
                         fun (x3742 : Ojs.t) ->
                           fun (x3743 : Ojs.t) ->
                             fun (x3744 : Ojs.t) ->
                               Obj.magic
                                 (x3740 ~previousValue:(Obj.magic x3741)
                                    ~currentValue:(Ojs.float_of_js x3742)
                                    ~currentIndex:(Ojs.float_of_js x3743)
                                    ~array:(t_of_js x3744))));(Obj.magic
                                                                 x3745)|])
    let (reverse : t -> t) =
      fun (x3747 : t) -> t_of_js (Ojs.call (t_to_js x3747) "reverse" [||])
    let (set_ : t -> array:float Array.t -> ?offset:float -> unit -> unit) =
      fun (x3753 : t) ->
        fun ~array:(x3748 : float Array.t) ->
          fun ?offset:(x3749 : float option) ->
            fun () ->
              ignore
                (let x3754 = t_to_js x3753 in
                 Ojs.call (Ojs.get_prop_ascii x3754 "set") "apply"
                   [|x3754;((let x3750 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3750 "push"
                                  [|(Array.t_to_js Ojs.float_to_js x3748)|]);
                             (match x3749 with
                              | Some x3751 ->
                                  ignore
                                    (Ojs.call x3750 "push"
                                       [|(Ojs.float_to_js x3751)|])
                              | None -> ());
                             x3750))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3760 : t) ->
        fun ?start:(x3755 : float option) ->
          fun ?end_:(x3756 : float option) ->
            fun () ->
              t_of_js
                (let x3761 = t_to_js x3760 in
                 Ojs.call (Ojs.get_prop_ascii x3761 "slice") "apply"
                   [|x3761;((let x3757 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3755 with
                              | Some x3759 ->
                                  ignore
                                    (Ojs.call x3757 "push"
                                       [|(Ojs.float_to_js x3759)|])
                              | None -> ());
                             (match x3756 with
                              | Some x3758 ->
                                  ignore
                                    (Ojs.call x3757 "push"
                                       [|(Ojs.float_to_js x3758)|])
                              | None -> ());
                             x3757))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3769 : t) ->
        fun (x3762 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3763 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3770 = t_to_js x3769 in
                 Ojs.call (Ojs.get_prop_ascii x3770 "some") "apply"
                   [|x3770;((let x3764 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3764 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3766 : Ojs.t) ->
                                          fun (x3767 : Ojs.t) ->
                                            fun (x3768 : Ojs.t) ->
                                              unknown_to_js
                                                (x3762
                                                   ~value:(Ojs.float_of_js
                                                             x3766)
                                                   ~index:(Ojs.float_of_js
                                                             x3767)
                                                   ~array:(t_of_js x3768))))|]);
                             (match x3763 with
                              | Some x3765 ->
                                  ignore
                                    (Ojs.call x3764 "push"
                                       [|(any_to_js x3765)|])
                              | None -> ());
                             x3764))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3776 : t) ->
        fun ?compareFn:(x3771 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3777 = t_to_js x3776 in
               Ojs.call (Ojs.get_prop_ascii x3777 "sort") "apply"
                 [|x3777;((let x3772 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3771 with
                            | Some x3773 ->
                                ignore
                                  (Ojs.call x3772 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3774 : Ojs.t) ->
                                             fun (x3775 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3773
                                                    ~a:(Ojs.float_of_js x3774)
                                                    ~b:(Ojs.float_of_js x3775))))|])
                            | None -> ());
                           x3772))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3783 : t) ->
        fun ?begin_:(x3778 : float option) ->
          fun ?end_:(x3779 : float option) ->
            fun () ->
              t_of_js
                (let x3784 = t_to_js x3783 in
                 Ojs.call (Ojs.get_prop_ascii x3784 "subarray") "apply"
                   [|x3784;((let x3780 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3778 with
                              | Some x3782 ->
                                  ignore
                                    (Ojs.call x3780 "push"
                                       [|(Ojs.float_to_js x3782)|])
                              | None -> ());
                             (match x3779 with
                              | Some x3781 ->
                                  ignore
                                    (Ojs.call x3780 "push"
                                       [|(Ojs.float_to_js x3781)|])
                              | None -> ());
                             x3780))|])
    let (toLocaleString : t -> string) =
      fun (x3785 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3785) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3786 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3786) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3787 : t) -> t_of_js (Ojs.call (t_to_js x3787) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3788 : t) ->
        fun (x3789 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3788) (Ojs.float_to_js x3789))
    let (set : t -> float -> float -> unit) =
      fun (x3790 : t) ->
        fun (x3791 : float) ->
          fun (x3792 : float) ->
            Ojs.set_prop (t_to_js x3790) (Ojs.float_to_js x3791)
              (Ojs.float_to_js x3792)
    let (create : length:float -> t) =
      fun ~length:(x3793 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x3793)|])
    let (create' : array:(ArrayBuffer.t, float Array.t) union2 -> t) =
      fun ~array:(x3794 : (ArrayBuffer.t, float Array.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(union2_to_js ArrayBuffer.t_to_js
                  (fun (x3796 : float Array.t) ->
                     Array.t_to_js Ojs.float_to_js x3796) x3794)|])
    let (create'' :
      buffer:ArrayBuffer.t -> ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x3798 : ArrayBuffer.t) ->
        fun ?byteOffset:(x3799 : float option) ->
          fun ?length:(x3800 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x3801 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3801 "push" [|(ArrayBuffer.t_to_js x3798)|]);
                    (match x3799 with
                     | Some x3803 ->
                         ignore
                           (Ojs.call x3801 "push" [|(Ojs.float_to_js x3803)|])
                     | None -> ());
                    (match x3800 with
                     | Some x3802 ->
                         ignore
                           (Ojs.call x3801 "push" [|(Ojs.float_to_js x3802)|])
                     | None -> ());
                    x3801))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x3804 : float list) ->
        t_of_js
          (let x3807 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x3807 "of") "apply"
             [|x3807;((let x3805 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3806 : float) ->
                            ignore
                              (Ojs.call x3805 "push"
                                 [|(Ojs.float_to_js x3806)|])) x3804;
                       x3805))|])
    let (from : array:float Array.t -> t) =
      fun ~array:(x3808 : float Array.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(Array.t_to_js Ojs.float_to_js x3808)|])
    let (from' :
      array:'T Array.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~array:(x3810 : 'T Array.t) ->
        fun ~mapfn:(x3811 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3812 : any option) ->
            fun () ->
              t_of_js
                (let x3818 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x3818 "from") "apply"
                   [|x3818;((let x3813 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3813 "push"
                                  [|(Array.t_to_js Obj.magic x3810)|]);
                             ignore
                               (Ojs.call x3813 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3815 : Ojs.t) ->
                                          fun (x3816 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3811 ~v:(Obj.magic x3815)
                                                 ~k:(Ojs.float_of_js x3816))))|]);
                             (match x3812 with
                              | Some x3814 ->
                                  ignore
                                    (Ojs.call x3813 "push"
                                       [|(any_to_js x3814)|])
                              | None -> ());
                             x3813))|])
  end
module Uint32ArrayConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x3820 : Ojs.t) -> x3820
    and t_to_js : t -> Ojs.t = fun (x3819 : Ojs.t) -> x3819
    let (get_prototype : t -> Uint32Array.t) =
      fun (x3821 : t) ->
        Uint32Array.t_of_js (Ojs.get_prop_ascii (t_to_js x3821) "prototype")
    let (create : t -> length:float -> Uint32Array.t) =
      fun (x3823 : t) ->
        fun ~length:(x3822 : float) ->
          Uint32Array.t_of_js
            (Ojs.new_obj (t_to_js x3823) [|(Ojs.float_to_js x3822)|])
    let (create' :
      t -> array:(ArrayBuffer.t, float Array.t) union2 -> Uint32Array.t) =
      fun (x3828 : t) ->
        fun ~array:(x3824 : (ArrayBuffer.t, float Array.t) union2) ->
          Uint32Array.t_of_js
            (Ojs.new_obj (t_to_js x3828)
               [|(union2_to_js ArrayBuffer.t_to_js
                    (fun (x3826 : float Array.t) ->
                       Array.t_to_js Ojs.float_to_js x3826) x3824)|])
    let (create'' :
      t ->
        buffer:ArrayBuffer.t ->
          ?byteOffset:float -> ?length:float -> unit -> Uint32Array.t)
      =
      fun (x3835 : t) ->
        fun ~buffer:(x3829 : ArrayBuffer.t) ->
          fun ?byteOffset:(x3830 : float option) ->
            fun ?length:(x3831 : float option) ->
              fun () ->
                Uint32Array.t_of_js
                  (Ojs.new_obj_arr (t_to_js x3835)
                     (let x3832 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3832 "push"
                           [|(ArrayBuffer.t_to_js x3829)|]);
                      (match x3830 with
                       | Some x3834 ->
                           ignore
                             (Ojs.call x3832 "push"
                                [|(Ojs.float_to_js x3834)|])
                       | None -> ());
                      (match x3831 with
                       | Some x3833 ->
                           ignore
                             (Ojs.call x3832 "push"
                                [|(Ojs.float_to_js x3833)|])
                       | None -> ());
                      x3832))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3836 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3836) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> Uint32Array.t) =
      fun (x3840 : t) ->
        fun (x3837 : float list) ->
          Uint32Array.t_of_js
            (let x3841 = t_to_js x3840 in
             Ojs.call (Ojs.get_prop_ascii x3841 "of") "apply"
               [|x3841;((let x3838 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3839 : float) ->
                              ignore
                                (Ojs.call x3838 "push"
                                   [|(Ojs.float_to_js x3839)|])) x3837;
                         x3838))|])
    let (from : t -> array:float Array.t -> Uint32Array.t) =
      fun (x3844 : t) ->
        fun ~array:(x3842 : float Array.t) ->
          Uint32Array.t_of_js
            (Ojs.call (t_to_js x3844) "from"
               [|(Array.t_to_js Ojs.float_to_js x3842)|])
    let (from' :
      t ->
        array:'T Array.t ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> Uint32Array.t)
      =
      fun (x3853 : t) ->
        fun ~array:(x3845 : 'T Array.t) ->
          fun ~mapfn:(x3846 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3847 : any option) ->
              fun () ->
                Uint32Array.t_of_js
                  (let x3854 = t_to_js x3853 in
                   Ojs.call (Ojs.get_prop_ascii x3854 "from") "apply"
                     [|x3854;((let x3848 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3848 "push"
                                    [|(Array.t_to_js Obj.magic x3845)|]);
                               ignore
                                 (Ojs.call x3848 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3850 : Ojs.t) ->
                                            fun (x3851 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3846 ~v:(Obj.magic x3850)
                                                   ~k:(Ojs.float_of_js x3851))))|]);
                               (match x3847 with
                                | Some x3849 ->
                                    ignore
                                      (Ojs.call x3848 "push"
                                         [|(any_to_js x3849)|])
                                | None -> ());
                               x3848))|])
  end
let (uint32Array : Uint32ArrayConstructor.t) =
  Uint32ArrayConstructor.t_of_js
    (Ojs.get_prop_ascii Ojs.global "Uint32Array")
module Float32Array =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x3856 : Ojs.t) -> x3856
    and t_to_js : t -> Ojs.t = fun (x3855 : Ojs.t) -> x3855
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3857 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3857) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> ArrayBuffer.t) =
      fun (x3858 : t) ->
        ArrayBuffer.t_of_js (Ojs.get_prop_ascii (t_to_js x3858) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3859 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3859) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3860 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3860) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3866 : t) ->
        fun ~target:(x3861 : float) ->
          fun ~start:(x3862 : float) ->
            fun ?end_:(x3863 : float option) ->
              fun () ->
                t_of_js
                  (let x3867 = t_to_js x3866 in
                   Ojs.call (Ojs.get_prop_ascii x3867 "copyWithin") "apply"
                     [|x3867;((let x3864 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3864 "push"
                                    [|(Ojs.float_to_js x3861)|]);
                               ignore
                                 (Ojs.call x3864 "push"
                                    [|(Ojs.float_to_js x3862)|]);
                               (match x3863 with
                                | Some x3865 ->
                                    ignore
                                      (Ojs.call x3864 "push"
                                         [|(Ojs.float_to_js x3865)|])
                                | None -> ());
                               x3864))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3875 : t) ->
        fun (x3868 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3869 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3876 = t_to_js x3875 in
                 Ojs.call (Ojs.get_prop_ascii x3876 "every") "apply"
                   [|x3876;((let x3870 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3870 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3872 : Ojs.t) ->
                                          fun (x3873 : Ojs.t) ->
                                            fun (x3874 : Ojs.t) ->
                                              unknown_to_js
                                                (x3868
                                                   ~value:(Ojs.float_of_js
                                                             x3872)
                                                   ~index:(Ojs.float_of_js
                                                             x3873)
                                                   ~array:(t_of_js x3874))))|]);
                             (match x3869 with
                              | Some x3871 ->
                                  ignore
                                    (Ojs.call x3870 "push"
                                       [|(any_to_js x3871)|])
                              | None -> ());
                             x3870))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3883 : t) ->
        fun ~value:(x3877 : float) ->
          fun ?start:(x3878 : float option) ->
            fun ?end_:(x3879 : float option) ->
              fun () ->
                t_of_js
                  (let x3884 = t_to_js x3883 in
                   Ojs.call (Ojs.get_prop_ascii x3884 "fill") "apply"
                     [|x3884;((let x3880 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3880 "push"
                                    [|(Ojs.float_to_js x3877)|]);
                               (match x3878 with
                                | Some x3882 ->
                                    ignore
                                      (Ojs.call x3880 "push"
                                         [|(Ojs.float_to_js x3882)|])
                                | None -> ());
                               (match x3879 with
                                | Some x3881 ->
                                    ignore
                                      (Ojs.call x3880 "push"
                                         [|(Ojs.float_to_js x3881)|])
                                | None -> ());
                               x3880))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3892 : t) ->
        fun (x3885 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x3886 : any option) ->
            fun () ->
              t_of_js
                (let x3893 = t_to_js x3892 in
                 Ojs.call (Ojs.get_prop_ascii x3893 "filter") "apply"
                   [|x3893;((let x3887 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3887 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3889 : Ojs.t) ->
                                          fun (x3890 : Ojs.t) ->
                                            fun (x3891 : Ojs.t) ->
                                              any_to_js
                                                (x3885
                                                   ~value:(Ojs.float_of_js
                                                             x3889)
                                                   ~index:(Ojs.float_of_js
                                                             x3890)
                                                   ~array:(t_of_js x3891))))|]);
                             (match x3886 with
                              | Some x3888 ->
                                  ignore
                                    (Ojs.call x3887 "push"
                                       [|(any_to_js x3888)|])
                              | None -> ());
                             x3887))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3901 : t) ->
        fun (x3894 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3895 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3902 = t_to_js x3901 in
                 Ojs.call (Ojs.get_prop_ascii x3902 "find") "apply"
                   [|x3902;((let x3896 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3896 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3898 : Ojs.t) ->
                                          fun (x3899 : Ojs.t) ->
                                            fun (x3900 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3894
                                                   ~value:(Ojs.float_of_js
                                                             x3898)
                                                   ~index:(Ojs.float_of_js
                                                             x3899)
                                                   ~obj:(t_of_js x3900))))|]);
                             (match x3895 with
                              | Some x3897 ->
                                  ignore
                                    (Ojs.call x3896 "push"
                                       [|(any_to_js x3897)|])
                              | None -> ());
                             x3896))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3911 : t) ->
        fun (x3904 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3905 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3912 = t_to_js x3911 in
                 Ojs.call (Ojs.get_prop_ascii x3912 "findIndex") "apply"
                   [|x3912;((let x3906 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3906 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3908 : Ojs.t) ->
                                          fun (x3909 : Ojs.t) ->
                                            fun (x3910 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3904
                                                   ~value:(Ojs.float_of_js
                                                             x3908)
                                                   ~index:(Ojs.float_of_js
                                                             x3909)
                                                   ~obj:(t_of_js x3910))))|]);
                             (match x3905 with
                              | Some x3907 ->
                                  ignore
                                    (Ojs.call x3906 "push"
                                       [|(any_to_js x3907)|])
                              | None -> ());
                             x3906))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3920 : t) ->
        fun
          ~callbackfn:(x3913 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3914 : any option) ->
            fun () ->
              ignore
                (let x3921 = t_to_js x3920 in
                 Ojs.call (Ojs.get_prop_ascii x3921 "forEach") "apply"
                   [|x3921;((let x3915 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3915 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3917 : Ojs.t) ->
                                          fun (x3918 : Ojs.t) ->
                                            fun (x3919 : Ojs.t) ->
                                              x3913
                                                ~value:(Ojs.float_of_js x3917)
                                                ~index:(Ojs.float_of_js x3918)
                                                ~array:(t_of_js x3919)))|]);
                             (match x3914 with
                              | Some x3916 ->
                                  ignore
                                    (Ojs.call x3915 "push"
                                       [|(any_to_js x3916)|])
                              | None -> ());
                             x3915))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3926 : t) ->
        fun ~searchElement:(x3922 : float) ->
          fun ?fromIndex:(x3923 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3927 = t_to_js x3926 in
                 Ojs.call (Ojs.get_prop_ascii x3927 "indexOf") "apply"
                   [|x3927;((let x3924 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3924 "push"
                                  [|(Ojs.float_to_js x3922)|]);
                             (match x3923 with
                              | Some x3925 ->
                                  ignore
                                    (Ojs.call x3924 "push"
                                       [|(Ojs.float_to_js x3925)|])
                              | None -> ());
                             x3924))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3931 : t) ->
        fun ?separator:(x3928 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3932 = t_to_js x3931 in
               Ojs.call (Ojs.get_prop_ascii x3932 "join") "apply"
                 [|x3932;((let x3929 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3928 with
                            | Some x3930 ->
                                ignore
                                  (Ojs.call x3929 "push"
                                     [|(Ojs.string_to_js x3930)|])
                            | None -> ());
                           x3929))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3937 : t) ->
        fun ~searchElement:(x3933 : float) ->
          fun ?fromIndex:(x3934 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3938 = t_to_js x3937 in
                 Ojs.call (Ojs.get_prop_ascii x3938 "lastIndexOf") "apply"
                   [|x3938;((let x3935 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3935 "push"
                                  [|(Ojs.float_to_js x3933)|]);
                             (match x3934 with
                              | Some x3936 ->
                                  ignore
                                    (Ojs.call x3935 "push"
                                       [|(Ojs.float_to_js x3936)|])
                              | None -> ());
                             x3935))|])
    let (get_length : t -> float) =
      fun (x3939 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3939) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3947 : t) ->
        fun
          ~callbackfn:(x3940 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3941 : any option) ->
            fun () ->
              t_of_js
                (let x3948 = t_to_js x3947 in
                 Ojs.call (Ojs.get_prop_ascii x3948 "map") "apply"
                   [|x3948;((let x3942 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3942 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3944 : Ojs.t) ->
                                          fun (x3945 : Ojs.t) ->
                                            fun (x3946 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3940
                                                   ~value:(Ojs.float_of_js
                                                             x3944)
                                                   ~index:(Ojs.float_of_js
                                                             x3945)
                                                   ~array:(t_of_js x3946))))|]);
                             (match x3941 with
                              | Some x3943 ->
                                  ignore
                                    (Ojs.call x3942 "push"
                                       [|(any_to_js x3943)|])
                              | None -> ());
                             x3942))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3954 : t) ->
        fun
          ~callbackfn:(x3949 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3954) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3950 : Ojs.t) ->
                       fun (x3951 : Ojs.t) ->
                         fun (x3952 : Ojs.t) ->
                           fun (x3953 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3949 ~previousValue:(Ojs.float_of_js x3950)
                                  ~currentValue:(Ojs.float_of_js x3951)
                                  ~currentIndex:(Ojs.float_of_js x3952)
                                  ~array:(t_of_js x3953))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3961 : t) ->
        fun
          ~callbackfn:(x3955 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3960 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3961) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3956 : Ojs.t) ->
                         fun (x3957 : Ojs.t) ->
                           fun (x3958 : Ojs.t) ->
                             fun (x3959 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3955
                                    ~previousValue:(Ojs.float_of_js x3956)
                                    ~currentValue:(Ojs.float_of_js x3957)
                                    ~currentIndex:(Ojs.float_of_js x3958)
                                    ~array:(t_of_js x3959))));(Ojs.float_to_js
                                                                 x3960)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3968 : t) ->
        fun
          ~callbackfn:(x3962 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3967 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3968) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3963 : Ojs.t) ->
                         fun (x3964 : Ojs.t) ->
                           fun (x3965 : Ojs.t) ->
                             fun (x3966 : Ojs.t) ->
                               Obj.magic
                                 (x3962 ~previousValue:(Obj.magic x3963)
                                    ~currentValue:(Ojs.float_of_js x3964)
                                    ~currentIndex:(Ojs.float_of_js x3965)
                                    ~array:(t_of_js x3966))));(Obj.magic
                                                                 x3967)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3974 : t) ->
        fun
          ~callbackfn:(x3969 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3974) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3970 : Ojs.t) ->
                       fun (x3971 : Ojs.t) ->
                         fun (x3972 : Ojs.t) ->
                           fun (x3973 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3969 ~previousValue:(Ojs.float_of_js x3970)
                                  ~currentValue:(Ojs.float_of_js x3971)
                                  ~currentIndex:(Ojs.float_of_js x3972)
                                  ~array:(t_of_js x3973))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3981 : t) ->
        fun
          ~callbackfn:(x3975 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3980 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3981) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3976 : Ojs.t) ->
                         fun (x3977 : Ojs.t) ->
                           fun (x3978 : Ojs.t) ->
                             fun (x3979 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3975
                                    ~previousValue:(Ojs.float_of_js x3976)
                                    ~currentValue:(Ojs.float_of_js x3977)
                                    ~currentIndex:(Ojs.float_of_js x3978)
                                    ~array:(t_of_js x3979))));(Ojs.float_to_js
                                                                 x3980)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3988 : t) ->
        fun
          ~callbackfn:(x3982 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3987 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3988) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3983 : Ojs.t) ->
                         fun (x3984 : Ojs.t) ->
                           fun (x3985 : Ojs.t) ->
                             fun (x3986 : Ojs.t) ->
                               Obj.magic
                                 (x3982 ~previousValue:(Obj.magic x3983)
                                    ~currentValue:(Ojs.float_of_js x3984)
                                    ~currentIndex:(Ojs.float_of_js x3985)
                                    ~array:(t_of_js x3986))));(Obj.magic
                                                                 x3987)|])
    let (reverse : t -> t) =
      fun (x3989 : t) -> t_of_js (Ojs.call (t_to_js x3989) "reverse" [||])
    let (set_ : t -> array:float Array.t -> ?offset:float -> unit -> unit) =
      fun (x3995 : t) ->
        fun ~array:(x3990 : float Array.t) ->
          fun ?offset:(x3991 : float option) ->
            fun () ->
              ignore
                (let x3996 = t_to_js x3995 in
                 Ojs.call (Ojs.get_prop_ascii x3996 "set") "apply"
                   [|x3996;((let x3992 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3992 "push"
                                  [|(Array.t_to_js Ojs.float_to_js x3990)|]);
                             (match x3991 with
                              | Some x3993 ->
                                  ignore
                                    (Ojs.call x3992 "push"
                                       [|(Ojs.float_to_js x3993)|])
                              | None -> ());
                             x3992))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x4002 : t) ->
        fun ?start:(x3997 : float option) ->
          fun ?end_:(x3998 : float option) ->
            fun () ->
              t_of_js
                (let x4003 = t_to_js x4002 in
                 Ojs.call (Ojs.get_prop_ascii x4003 "slice") "apply"
                   [|x4003;((let x3999 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3997 with
                              | Some x4001 ->
                                  ignore
                                    (Ojs.call x3999 "push"
                                       [|(Ojs.float_to_js x4001)|])
                              | None -> ());
                             (match x3998 with
                              | Some x4000 ->
                                  ignore
                                    (Ojs.call x3999 "push"
                                       [|(Ojs.float_to_js x4000)|])
                              | None -> ());
                             x3999))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4011 : t) ->
        fun (x4004 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x4005 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4012 = t_to_js x4011 in
                 Ojs.call (Ojs.get_prop_ascii x4012 "some") "apply"
                   [|x4012;((let x4006 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4006 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4008 : Ojs.t) ->
                                          fun (x4009 : Ojs.t) ->
                                            fun (x4010 : Ojs.t) ->
                                              unknown_to_js
                                                (x4004
                                                   ~value:(Ojs.float_of_js
                                                             x4008)
                                                   ~index:(Ojs.float_of_js
                                                             x4009)
                                                   ~array:(t_of_js x4010))))|]);
                             (match x4005 with
                              | Some x4007 ->
                                  ignore
                                    (Ojs.call x4006 "push"
                                       [|(any_to_js x4007)|])
                              | None -> ());
                             x4006))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x4018 : t) ->
        fun ?compareFn:(x4013 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x4019 = t_to_js x4018 in
               Ojs.call (Ojs.get_prop_ascii x4019 "sort") "apply"
                 [|x4019;((let x4014 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4013 with
                            | Some x4015 ->
                                ignore
                                  (Ojs.call x4014 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x4016 : Ojs.t) ->
                                             fun (x4017 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x4015
                                                    ~a:(Ojs.float_of_js x4016)
                                                    ~b:(Ojs.float_of_js x4017))))|])
                            | None -> ());
                           x4014))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x4025 : t) ->
        fun ?begin_:(x4020 : float option) ->
          fun ?end_:(x4021 : float option) ->
            fun () ->
              t_of_js
                (let x4026 = t_to_js x4025 in
                 Ojs.call (Ojs.get_prop_ascii x4026 "subarray") "apply"
                   [|x4026;((let x4022 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4020 with
                              | Some x4024 ->
                                  ignore
                                    (Ojs.call x4022 "push"
                                       [|(Ojs.float_to_js x4024)|])
                              | None -> ());
                             (match x4021 with
                              | Some x4023 ->
                                  ignore
                                    (Ojs.call x4022 "push"
                                       [|(Ojs.float_to_js x4023)|])
                              | None -> ());
                             x4022))|])
    let (toLocaleString : t -> string) =
      fun (x4027 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4027) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x4028 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4028) "toString" [||])
    let (valueOf : t -> t) =
      fun (x4029 : t) -> t_of_js (Ojs.call (t_to_js x4029) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x4030 : t) ->
        fun (x4031 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x4030) (Ojs.float_to_js x4031))
    let (set : t -> float -> float -> unit) =
      fun (x4032 : t) ->
        fun (x4033 : float) ->
          fun (x4034 : float) ->
            Ojs.set_prop (t_to_js x4032) (Ojs.float_to_js x4033)
              (Ojs.float_to_js x4034)
    let (create : length:float -> t) =
      fun ~length:(x4035 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x4035)|])
    let (create' : array:(ArrayBuffer.t, float Array.t) union2 -> t) =
      fun ~array:(x4036 : (ArrayBuffer.t, float Array.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(union2_to_js ArrayBuffer.t_to_js
                  (fun (x4038 : float Array.t) ->
                     Array.t_to_js Ojs.float_to_js x4038) x4036)|])
    let (create'' :
      buffer:ArrayBuffer.t -> ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x4040 : ArrayBuffer.t) ->
        fun ?byteOffset:(x4041 : float option) ->
          fun ?length:(x4042 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x4043 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x4043 "push" [|(ArrayBuffer.t_to_js x4040)|]);
                    (match x4041 with
                     | Some x4045 ->
                         ignore
                           (Ojs.call x4043 "push" [|(Ojs.float_to_js x4045)|])
                     | None -> ());
                    (match x4042 with
                     | Some x4044 ->
                         ignore
                           (Ojs.call x4043 "push" [|(Ojs.float_to_js x4044)|])
                     | None -> ());
                    x4043))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x4046 : float list) ->
        t_of_js
          (let x4049 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x4049 "of") "apply"
             [|x4049;((let x4047 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4048 : float) ->
                            ignore
                              (Ojs.call x4047 "push"
                                 [|(Ojs.float_to_js x4048)|])) x4046;
                       x4047))|])
    let (from : array:float Array.t -> t) =
      fun ~array:(x4050 : float Array.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(Array.t_to_js Ojs.float_to_js x4050)|])
    let (from' :
      array:'T Array.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~array:(x4052 : 'T Array.t) ->
        fun ~mapfn:(x4053 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x4054 : any option) ->
            fun () ->
              t_of_js
                (let x4060 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x4060 "from") "apply"
                   [|x4060;((let x4055 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4055 "push"
                                  [|(Array.t_to_js Obj.magic x4052)|]);
                             ignore
                               (Ojs.call x4055 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x4057 : Ojs.t) ->
                                          fun (x4058 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x4053 ~v:(Obj.magic x4057)
                                                 ~k:(Ojs.float_of_js x4058))))|]);
                             (match x4054 with
                              | Some x4056 ->
                                  ignore
                                    (Ojs.call x4055 "push"
                                       [|(any_to_js x4056)|])
                              | None -> ());
                             x4055))|])
  end
module Float32ArrayConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x4062 : Ojs.t) -> x4062
    and t_to_js : t -> Ojs.t = fun (x4061 : Ojs.t) -> x4061
    let (get_prototype : t -> Float32Array.t) =
      fun (x4063 : t) ->
        Float32Array.t_of_js (Ojs.get_prop_ascii (t_to_js x4063) "prototype")
    let (create : t -> length:float -> Float32Array.t) =
      fun (x4065 : t) ->
        fun ~length:(x4064 : float) ->
          Float32Array.t_of_js
            (Ojs.new_obj (t_to_js x4065) [|(Ojs.float_to_js x4064)|])
    let (create' :
      t -> array:(ArrayBuffer.t, float Array.t) union2 -> Float32Array.t) =
      fun (x4070 : t) ->
        fun ~array:(x4066 : (ArrayBuffer.t, float Array.t) union2) ->
          Float32Array.t_of_js
            (Ojs.new_obj (t_to_js x4070)
               [|(union2_to_js ArrayBuffer.t_to_js
                    (fun (x4068 : float Array.t) ->
                       Array.t_to_js Ojs.float_to_js x4068) x4066)|])
    let (create'' :
      t ->
        buffer:ArrayBuffer.t ->
          ?byteOffset:float -> ?length:float -> unit -> Float32Array.t)
      =
      fun (x4077 : t) ->
        fun ~buffer:(x4071 : ArrayBuffer.t) ->
          fun ?byteOffset:(x4072 : float option) ->
            fun ?length:(x4073 : float option) ->
              fun () ->
                Float32Array.t_of_js
                  (Ojs.new_obj_arr (t_to_js x4077)
                     (let x4074 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x4074 "push"
                           [|(ArrayBuffer.t_to_js x4071)|]);
                      (match x4072 with
                       | Some x4076 ->
                           ignore
                             (Ojs.call x4074 "push"
                                [|(Ojs.float_to_js x4076)|])
                       | None -> ());
                      (match x4073 with
                       | Some x4075 ->
                           ignore
                             (Ojs.call x4074 "push"
                                [|(Ojs.float_to_js x4075)|])
                       | None -> ());
                      x4074))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x4078 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x4078) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> Float32Array.t) =
      fun (x4082 : t) ->
        fun (x4079 : float list) ->
          Float32Array.t_of_js
            (let x4083 = t_to_js x4082 in
             Ojs.call (Ojs.get_prop_ascii x4083 "of") "apply"
               [|x4083;((let x4080 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4081 : float) ->
                              ignore
                                (Ojs.call x4080 "push"
                                   [|(Ojs.float_to_js x4081)|])) x4079;
                         x4080))|])
    let (from : t -> array:float Array.t -> Float32Array.t) =
      fun (x4086 : t) ->
        fun ~array:(x4084 : float Array.t) ->
          Float32Array.t_of_js
            (Ojs.call (t_to_js x4086) "from"
               [|(Array.t_to_js Ojs.float_to_js x4084)|])
    let (from' :
      t ->
        array:'T Array.t ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> Float32Array.t)
      =
      fun (x4095 : t) ->
        fun ~array:(x4087 : 'T Array.t) ->
          fun ~mapfn:(x4088 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x4089 : any option) ->
              fun () ->
                Float32Array.t_of_js
                  (let x4096 = t_to_js x4095 in
                   Ojs.call (Ojs.get_prop_ascii x4096 "from") "apply"
                     [|x4096;((let x4090 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4090 "push"
                                    [|(Array.t_to_js Obj.magic x4087)|]);
                               ignore
                                 (Ojs.call x4090 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4092 : Ojs.t) ->
                                            fun (x4093 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4088 ~v:(Obj.magic x4092)
                                                   ~k:(Ojs.float_of_js x4093))))|]);
                               (match x4089 with
                                | Some x4091 ->
                                    ignore
                                      (Ojs.call x4090 "push"
                                         [|(any_to_js x4091)|])
                                | None -> ());
                               x4090))|])
  end
let (float32Array : Float32ArrayConstructor.t) =
  Float32ArrayConstructor.t_of_js
    (Ojs.get_prop_ascii Ojs.global "Float32Array")
module Float64Array =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x4098 : Ojs.t) -> x4098
    and t_to_js : t -> Ojs.t = fun (x4097 : Ojs.t) -> x4097
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x4099 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x4099) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> ArrayBuffer.t) =
      fun (x4100 : t) ->
        ArrayBuffer.t_of_js (Ojs.get_prop_ascii (t_to_js x4100) "buffer")
    let (get_byteLength : t -> float) =
      fun (x4101 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4101) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x4102 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4102) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x4108 : t) ->
        fun ~target:(x4103 : float) ->
          fun ~start:(x4104 : float) ->
            fun ?end_:(x4105 : float option) ->
              fun () ->
                t_of_js
                  (let x4109 = t_to_js x4108 in
                   Ojs.call (Ojs.get_prop_ascii x4109 "copyWithin") "apply"
                     [|x4109;((let x4106 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4106 "push"
                                    [|(Ojs.float_to_js x4103)|]);
                               ignore
                                 (Ojs.call x4106 "push"
                                    [|(Ojs.float_to_js x4104)|]);
                               (match x4105 with
                                | Some x4107 ->
                                    ignore
                                      (Ojs.call x4106 "push"
                                         [|(Ojs.float_to_js x4107)|])
                                | None -> ());
                               x4106))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4117 : t) ->
        fun (x4110 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x4111 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4118 = t_to_js x4117 in
                 Ojs.call (Ojs.get_prop_ascii x4118 "every") "apply"
                   [|x4118;((let x4112 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4112 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4114 : Ojs.t) ->
                                          fun (x4115 : Ojs.t) ->
                                            fun (x4116 : Ojs.t) ->
                                              unknown_to_js
                                                (x4110
                                                   ~value:(Ojs.float_of_js
                                                             x4114)
                                                   ~index:(Ojs.float_of_js
                                                             x4115)
                                                   ~array:(t_of_js x4116))))|]);
                             (match x4111 with
                              | Some x4113 ->
                                  ignore
                                    (Ojs.call x4112 "push"
                                       [|(any_to_js x4113)|])
                              | None -> ());
                             x4112))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x4125 : t) ->
        fun ~value:(x4119 : float) ->
          fun ?start:(x4120 : float option) ->
            fun ?end_:(x4121 : float option) ->
              fun () ->
                t_of_js
                  (let x4126 = t_to_js x4125 in
                   Ojs.call (Ojs.get_prop_ascii x4126 "fill") "apply"
                     [|x4126;((let x4122 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4122 "push"
                                    [|(Ojs.float_to_js x4119)|]);
                               (match x4120 with
                                | Some x4124 ->
                                    ignore
                                      (Ojs.call x4122 "push"
                                         [|(Ojs.float_to_js x4124)|])
                                | None -> ());
                               (match x4121 with
                                | Some x4123 ->
                                    ignore
                                      (Ojs.call x4122 "push"
                                         [|(Ojs.float_to_js x4123)|])
                                | None -> ());
                               x4122))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4134 : t) ->
        fun (x4127 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x4128 : any option) ->
            fun () ->
              t_of_js
                (let x4135 = t_to_js x4134 in
                 Ojs.call (Ojs.get_prop_ascii x4135 "filter") "apply"
                   [|x4135;((let x4129 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4129 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4131 : Ojs.t) ->
                                          fun (x4132 : Ojs.t) ->
                                            fun (x4133 : Ojs.t) ->
                                              any_to_js
                                                (x4127
                                                   ~value:(Ojs.float_of_js
                                                             x4131)
                                                   ~index:(Ojs.float_of_js
                                                             x4132)
                                                   ~array:(t_of_js x4133))))|]);
                             (match x4128 with
                              | Some x4130 ->
                                  ignore
                                    (Ojs.call x4129 "push"
                                       [|(any_to_js x4130)|])
                              | None -> ());
                             x4129))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x4143 : t) ->
        fun (x4136 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x4137 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x4144 = t_to_js x4143 in
                 Ojs.call (Ojs.get_prop_ascii x4144 "find") "apply"
                   [|x4144;((let x4138 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4138 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4140 : Ojs.t) ->
                                          fun (x4141 : Ojs.t) ->
                                            fun (x4142 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4136
                                                   ~value:(Ojs.float_of_js
                                                             x4140)
                                                   ~index:(Ojs.float_of_js
                                                             x4141)
                                                   ~obj:(t_of_js x4142))))|]);
                             (match x4137 with
                              | Some x4139 ->
                                  ignore
                                    (Ojs.call x4138 "push"
                                       [|(any_to_js x4139)|])
                              | None -> ());
                             x4138))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x4153 : t) ->
        fun (x4146 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x4147 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x4154 = t_to_js x4153 in
                 Ojs.call (Ojs.get_prop_ascii x4154 "findIndex") "apply"
                   [|x4154;((let x4148 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4148 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4150 : Ojs.t) ->
                                          fun (x4151 : Ojs.t) ->
                                            fun (x4152 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4146
                                                   ~value:(Ojs.float_of_js
                                                             x4150)
                                                   ~index:(Ojs.float_of_js
                                                             x4151)
                                                   ~obj:(t_of_js x4152))))|]);
                             (match x4147 with
                              | Some x4149 ->
                                  ignore
                                    (Ojs.call x4148 "push"
                                       [|(any_to_js x4149)|])
                              | None -> ());
                             x4148))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4162 : t) ->
        fun
          ~callbackfn:(x4155 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x4156 : any option) ->
            fun () ->
              ignore
                (let x4163 = t_to_js x4162 in
                 Ojs.call (Ojs.get_prop_ascii x4163 "forEach") "apply"
                   [|x4163;((let x4157 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4157 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4159 : Ojs.t) ->
                                          fun (x4160 : Ojs.t) ->
                                            fun (x4161 : Ojs.t) ->
                                              x4155
                                                ~value:(Ojs.float_of_js x4159)
                                                ~index:(Ojs.float_of_js x4160)
                                                ~array:(t_of_js x4161)))|]);
                             (match x4156 with
                              | Some x4158 ->
                                  ignore
                                    (Ojs.call x4157 "push"
                                       [|(any_to_js x4158)|])
                              | None -> ());
                             x4157))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x4168 : t) ->
        fun ~searchElement:(x4164 : float) ->
          fun ?fromIndex:(x4165 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4169 = t_to_js x4168 in
                 Ojs.call (Ojs.get_prop_ascii x4169 "indexOf") "apply"
                   [|x4169;((let x4166 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4166 "push"
                                  [|(Ojs.float_to_js x4164)|]);
                             (match x4165 with
                              | Some x4167 ->
                                  ignore
                                    (Ojs.call x4166 "push"
                                       [|(Ojs.float_to_js x4167)|])
                              | None -> ());
                             x4166))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x4173 : t) ->
        fun ?separator:(x4170 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x4174 = t_to_js x4173 in
               Ojs.call (Ojs.get_prop_ascii x4174 "join") "apply"
                 [|x4174;((let x4171 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4170 with
                            | Some x4172 ->
                                ignore
                                  (Ojs.call x4171 "push"
                                     [|(Ojs.string_to_js x4172)|])
                            | None -> ());
                           x4171))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x4179 : t) ->
        fun ~searchElement:(x4175 : float) ->
          fun ?fromIndex:(x4176 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4180 = t_to_js x4179 in
                 Ojs.call (Ojs.get_prop_ascii x4180 "lastIndexOf") "apply"
                   [|x4180;((let x4177 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4177 "push"
                                  [|(Ojs.float_to_js x4175)|]);
                             (match x4176 with
                              | Some x4178 ->
                                  ignore
                                    (Ojs.call x4177 "push"
                                       [|(Ojs.float_to_js x4178)|])
                              | None -> ());
                             x4177))|])
    let (get_length : t -> float) =
      fun (x4181 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4181) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4189 : t) ->
        fun
          ~callbackfn:(x4182 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x4183 : any option) ->
            fun () ->
              t_of_js
                (let x4190 = t_to_js x4189 in
                 Ojs.call (Ojs.get_prop_ascii x4190 "map") "apply"
                   [|x4190;((let x4184 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4184 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4186 : Ojs.t) ->
                                          fun (x4187 : Ojs.t) ->
                                            fun (x4188 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4182
                                                   ~value:(Ojs.float_of_js
                                                             x4186)
                                                   ~index:(Ojs.float_of_js
                                                             x4187)
                                                   ~array:(t_of_js x4188))))|]);
                             (match x4183 with
                              | Some x4185 ->
                                  ignore
                                    (Ojs.call x4184 "push"
                                       [|(any_to_js x4185)|])
                              | None -> ());
                             x4184))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4196 : t) ->
        fun
          ~callbackfn:(x4191 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x4196) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x4192 : Ojs.t) ->
                       fun (x4193 : Ojs.t) ->
                         fun (x4194 : Ojs.t) ->
                           fun (x4195 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4191 ~previousValue:(Ojs.float_of_js x4192)
                                  ~currentValue:(Ojs.float_of_js x4193)
                                  ~currentIndex:(Ojs.float_of_js x4194)
                                  ~array:(t_of_js x4195))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4203 : t) ->
        fun
          ~callbackfn:(x4197 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4202 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x4203) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4198 : Ojs.t) ->
                         fun (x4199 : Ojs.t) ->
                           fun (x4200 : Ojs.t) ->
                             fun (x4201 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4197
                                    ~previousValue:(Ojs.float_of_js x4198)
                                    ~currentValue:(Ojs.float_of_js x4199)
                                    ~currentIndex:(Ojs.float_of_js x4200)
                                    ~array:(t_of_js x4201))));(Ojs.float_to_js
                                                                 x4202)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4210 : t) ->
        fun
          ~callbackfn:(x4204 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4209 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x4210) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4205 : Ojs.t) ->
                         fun (x4206 : Ojs.t) ->
                           fun (x4207 : Ojs.t) ->
                             fun (x4208 : Ojs.t) ->
                               Obj.magic
                                 (x4204 ~previousValue:(Obj.magic x4205)
                                    ~currentValue:(Ojs.float_of_js x4206)
                                    ~currentIndex:(Ojs.float_of_js x4207)
                                    ~array:(t_of_js x4208))));(Obj.magic
                                                                 x4209)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4216 : t) ->
        fun
          ~callbackfn:(x4211 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x4216) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x4212 : Ojs.t) ->
                       fun (x4213 : Ojs.t) ->
                         fun (x4214 : Ojs.t) ->
                           fun (x4215 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4211 ~previousValue:(Ojs.float_of_js x4212)
                                  ~currentValue:(Ojs.float_of_js x4213)
                                  ~currentIndex:(Ojs.float_of_js x4214)
                                  ~array:(t_of_js x4215))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4223 : t) ->
        fun
          ~callbackfn:(x4217 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4222 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x4223) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4218 : Ojs.t) ->
                         fun (x4219 : Ojs.t) ->
                           fun (x4220 : Ojs.t) ->
                             fun (x4221 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4217
                                    ~previousValue:(Ojs.float_of_js x4218)
                                    ~currentValue:(Ojs.float_of_js x4219)
                                    ~currentIndex:(Ojs.float_of_js x4220)
                                    ~array:(t_of_js x4221))));(Ojs.float_to_js
                                                                 x4222)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4230 : t) ->
        fun
          ~callbackfn:(x4224 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4229 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x4230) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4225 : Ojs.t) ->
                         fun (x4226 : Ojs.t) ->
                           fun (x4227 : Ojs.t) ->
                             fun (x4228 : Ojs.t) ->
                               Obj.magic
                                 (x4224 ~previousValue:(Obj.magic x4225)
                                    ~currentValue:(Ojs.float_of_js x4226)
                                    ~currentIndex:(Ojs.float_of_js x4227)
                                    ~array:(t_of_js x4228))));(Obj.magic
                                                                 x4229)|])
    let (reverse : t -> t) =
      fun (x4231 : t) -> t_of_js (Ojs.call (t_to_js x4231) "reverse" [||])
    let (set_ : t -> array:float Array.t -> ?offset:float -> unit -> unit) =
      fun (x4237 : t) ->
        fun ~array:(x4232 : float Array.t) ->
          fun ?offset:(x4233 : float option) ->
            fun () ->
              ignore
                (let x4238 = t_to_js x4237 in
                 Ojs.call (Ojs.get_prop_ascii x4238 "set") "apply"
                   [|x4238;((let x4234 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4234 "push"
                                  [|(Array.t_to_js Ojs.float_to_js x4232)|]);
                             (match x4233 with
                              | Some x4235 ->
                                  ignore
                                    (Ojs.call x4234 "push"
                                       [|(Ojs.float_to_js x4235)|])
                              | None -> ());
                             x4234))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x4244 : t) ->
        fun ?start:(x4239 : float option) ->
          fun ?end_:(x4240 : float option) ->
            fun () ->
              t_of_js
                (let x4245 = t_to_js x4244 in
                 Ojs.call (Ojs.get_prop_ascii x4245 "slice") "apply"
                   [|x4245;((let x4241 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4239 with
                              | Some x4243 ->
                                  ignore
                                    (Ojs.call x4241 "push"
                                       [|(Ojs.float_to_js x4243)|])
                              | None -> ());
                             (match x4240 with
                              | Some x4242 ->
                                  ignore
                                    (Ojs.call x4241 "push"
                                       [|(Ojs.float_to_js x4242)|])
                              | None -> ());
                             x4241))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4253 : t) ->
        fun (x4246 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x4247 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4254 = t_to_js x4253 in
                 Ojs.call (Ojs.get_prop_ascii x4254 "some") "apply"
                   [|x4254;((let x4248 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4248 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4250 : Ojs.t) ->
                                          fun (x4251 : Ojs.t) ->
                                            fun (x4252 : Ojs.t) ->
                                              unknown_to_js
                                                (x4246
                                                   ~value:(Ojs.float_of_js
                                                             x4250)
                                                   ~index:(Ojs.float_of_js
                                                             x4251)
                                                   ~array:(t_of_js x4252))))|]);
                             (match x4247 with
                              | Some x4249 ->
                                  ignore
                                    (Ojs.call x4248 "push"
                                       [|(any_to_js x4249)|])
                              | None -> ());
                             x4248))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x4260 : t) ->
        fun ?compareFn:(x4255 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x4261 = t_to_js x4260 in
               Ojs.call (Ojs.get_prop_ascii x4261 "sort") "apply"
                 [|x4261;((let x4256 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4255 with
                            | Some x4257 ->
                                ignore
                                  (Ojs.call x4256 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x4258 : Ojs.t) ->
                                             fun (x4259 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x4257
                                                    ~a:(Ojs.float_of_js x4258)
                                                    ~b:(Ojs.float_of_js x4259))))|])
                            | None -> ());
                           x4256))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x4267 : t) ->
        fun ?begin_:(x4262 : float option) ->
          fun ?end_:(x4263 : float option) ->
            fun () ->
              t_of_js
                (let x4268 = t_to_js x4267 in
                 Ojs.call (Ojs.get_prop_ascii x4268 "subarray") "apply"
                   [|x4268;((let x4264 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4262 with
                              | Some x4266 ->
                                  ignore
                                    (Ojs.call x4264 "push"
                                       [|(Ojs.float_to_js x4266)|])
                              | None -> ());
                             (match x4263 with
                              | Some x4265 ->
                                  ignore
                                    (Ojs.call x4264 "push"
                                       [|(Ojs.float_to_js x4265)|])
                              | None -> ());
                             x4264))|])
    let (toString : t -> string) =
      fun (x4269 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4269) "toString" [||])
    let (valueOf : t -> t) =
      fun (x4270 : t) -> t_of_js (Ojs.call (t_to_js x4270) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x4271 : t) ->
        fun (x4272 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x4271) (Ojs.float_to_js x4272))
    let (set : t -> float -> float -> unit) =
      fun (x4273 : t) ->
        fun (x4274 : float) ->
          fun (x4275 : float) ->
            Ojs.set_prop (t_to_js x4273) (Ojs.float_to_js x4274)
              (Ojs.float_to_js x4275)
    let (create : length:float -> t) =
      fun ~length:(x4276 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x4276)|])
    let (create' : array:(ArrayBuffer.t, float Array.t) union2 -> t) =
      fun ~array:(x4277 : (ArrayBuffer.t, float Array.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(union2_to_js ArrayBuffer.t_to_js
                  (fun (x4279 : float Array.t) ->
                     Array.t_to_js Ojs.float_to_js x4279) x4277)|])
    let (create'' :
      buffer:ArrayBuffer.t -> ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x4281 : ArrayBuffer.t) ->
        fun ?byteOffset:(x4282 : float option) ->
          fun ?length:(x4283 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x4284 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x4284 "push" [|(ArrayBuffer.t_to_js x4281)|]);
                    (match x4282 with
                     | Some x4286 ->
                         ignore
                           (Ojs.call x4284 "push" [|(Ojs.float_to_js x4286)|])
                     | None -> ());
                    (match x4283 with
                     | Some x4285 ->
                         ignore
                           (Ojs.call x4284 "push" [|(Ojs.float_to_js x4285)|])
                     | None -> ());
                    x4284))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x4287 : float list) ->
        t_of_js
          (let x4290 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x4290 "of") "apply"
             [|x4290;((let x4288 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4289 : float) ->
                            ignore
                              (Ojs.call x4288 "push"
                                 [|(Ojs.float_to_js x4289)|])) x4287;
                       x4288))|])
    let (from : array:float Array.t -> t) =
      fun ~array:(x4291 : float Array.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(Array.t_to_js Ojs.float_to_js x4291)|])
    let (from' :
      array:'T Array.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~array:(x4293 : 'T Array.t) ->
        fun ~mapfn:(x4294 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x4295 : any option) ->
            fun () ->
              t_of_js
                (let x4301 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x4301 "from") "apply"
                   [|x4301;((let x4296 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4296 "push"
                                  [|(Array.t_to_js Obj.magic x4293)|]);
                             ignore
                               (Ojs.call x4296 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x4298 : Ojs.t) ->
                                          fun (x4299 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x4294 ~v:(Obj.magic x4298)
                                                 ~k:(Ojs.float_of_js x4299))))|]);
                             (match x4295 with
                              | Some x4297 ->
                                  ignore
                                    (Ojs.call x4296 "push"
                                       [|(any_to_js x4297)|])
                              | None -> ());
                             x4296))|])
  end
module Float64ArrayConstructor =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x4303 : Ojs.t) -> x4303
    and t_to_js : t -> Ojs.t = fun (x4302 : Ojs.t) -> x4302
    let (get_prototype : t -> Float64Array.t) =
      fun (x4304 : t) ->
        Float64Array.t_of_js (Ojs.get_prop_ascii (t_to_js x4304) "prototype")
    let (create : t -> length:float -> Float64Array.t) =
      fun (x4306 : t) ->
        fun ~length:(x4305 : float) ->
          Float64Array.t_of_js
            (Ojs.new_obj (t_to_js x4306) [|(Ojs.float_to_js x4305)|])
    let (create' :
      t -> array:(ArrayBuffer.t, float Array.t) union2 -> Float64Array.t) =
      fun (x4311 : t) ->
        fun ~array:(x4307 : (ArrayBuffer.t, float Array.t) union2) ->
          Float64Array.t_of_js
            (Ojs.new_obj (t_to_js x4311)
               [|(union2_to_js ArrayBuffer.t_to_js
                    (fun (x4309 : float Array.t) ->
                       Array.t_to_js Ojs.float_to_js x4309) x4307)|])
    let (create'' :
      t ->
        buffer:ArrayBuffer.t ->
          ?byteOffset:float -> ?length:float -> unit -> Float64Array.t)
      =
      fun (x4318 : t) ->
        fun ~buffer:(x4312 : ArrayBuffer.t) ->
          fun ?byteOffset:(x4313 : float option) ->
            fun ?length:(x4314 : float option) ->
              fun () ->
                Float64Array.t_of_js
                  (Ojs.new_obj_arr (t_to_js x4318)
                     (let x4315 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x4315 "push"
                           [|(ArrayBuffer.t_to_js x4312)|]);
                      (match x4313 with
                       | Some x4317 ->
                           ignore
                             (Ojs.call x4315 "push"
                                [|(Ojs.float_to_js x4317)|])
                       | None -> ());
                      (match x4314 with
                       | Some x4316 ->
                           ignore
                             (Ojs.call x4315 "push"
                                [|(Ojs.float_to_js x4316)|])
                       | None -> ());
                      x4315))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x4319 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x4319) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> Float64Array.t) =
      fun (x4323 : t) ->
        fun (x4320 : float list) ->
          Float64Array.t_of_js
            (let x4324 = t_to_js x4323 in
             Ojs.call (Ojs.get_prop_ascii x4324 "of") "apply"
               [|x4324;((let x4321 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4322 : float) ->
                              ignore
                                (Ojs.call x4321 "push"
                                   [|(Ojs.float_to_js x4322)|])) x4320;
                         x4321))|])
    let (from : t -> array:float Array.t -> Float64Array.t) =
      fun (x4327 : t) ->
        fun ~array:(x4325 : float Array.t) ->
          Float64Array.t_of_js
            (Ojs.call (t_to_js x4327) "from"
               [|(Array.t_to_js Ojs.float_to_js x4325)|])
    let (from' :
      t ->
        array:'T Array.t ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> Float64Array.t)
      =
      fun (x4336 : t) ->
        fun ~array:(x4328 : 'T Array.t) ->
          fun ~mapfn:(x4329 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x4330 : any option) ->
              fun () ->
                Float64Array.t_of_js
                  (let x4337 = t_to_js x4336 in
                   Ojs.call (Ojs.get_prop_ascii x4337 "from") "apply"
                     [|x4337;((let x4331 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4331 "push"
                                    [|(Array.t_to_js Obj.magic x4328)|]);
                               ignore
                                 (Ojs.call x4331 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4333 : Ojs.t) ->
                                            fun (x4334 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4329 ~v:(Obj.magic x4333)
                                                   ~k:(Ojs.float_of_js x4334))))|]);
                               (match x4330 with
                                | Some x4332 ->
                                    ignore
                                      (Ojs.call x4331 "push"
                                         [|(any_to_js x4332)|])
                                | None -> ());
                               x4331))|])
  end
let (float64Array : Float64ArrayConstructor.t) =
  Float64ArrayConstructor.t_of_js
    (Ojs.get_prop_ascii Ojs.global "Float64Array")
include struct include Intl end
module DateTimeFormat =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x4339 : Ojs.t) -> x4339
    and t_to_js : t -> Ojs.t = fun (x4338 : Ojs.t) -> x4338
    let (format : t -> ?date:Date.t or_number -> unit -> string) =
      fun (x4344 : t) ->
        fun ?date:(x4340 : Date.t or_number option) ->
          fun () ->
            Ojs.string_of_js
              (let x4345 = t_to_js x4344 in
               Ojs.call (Ojs.get_prop_ascii x4345 "format") "apply"
                 [|x4345;((let x4341 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4340 with
                            | Some x4342 ->
                                ignore
                                  (Ojs.call x4341 "push"
                                     [|(or_number_to_js Date.t_to_js x4342)|])
                            | None -> ());
                           x4341))|])
    let (resolvedOptions : t -> ResolvedDateTimeFormatOptions.t) =
      fun (x4346 : t) ->
        ResolvedDateTimeFormatOptions.t_of_js
          (Ojs.call (t_to_js x4346) "resolvedOptions" [||])
  end
let (dateTimeFormat : anonymous_interface_3) =
  anonymous_interface_3_of_js
    (Ojs.get_prop_ascii Ojs.global "DateTimeFormat")
