[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
type never = Ojs.t
let rec never_of_js : Ojs.t -> never = fun (x2 : Ojs.t) -> x2
and never_to_js : never -> Ojs.t = fun (x1 : Ojs.t) -> x1
module Never =
  struct
    type t = never
    let rec t_of_js : Ojs.t -> t = fun (x4 : Ojs.t) -> never_of_js x4
    and t_to_js : t -> Ojs.t = fun (x3 : never) -> never_to_js x3
    exception Ts_Never 
    let absurd _ = raise Ts_Never
  end
type any = Ojs.t
let rec any_of_js : Ojs.t -> any = fun (x6 : Ojs.t) -> x6
and any_to_js : any -> Ojs.t = fun (x5 : Ojs.t) -> x5
module Any =
  struct
    type t = any
    let rec t_of_js : Ojs.t -> t = fun (x8 : Ojs.t) -> any_of_js x8
    and t_to_js : t -> Ojs.t = fun (x7 : any) -> any_to_js x7
    let unsafe_cast x = Obj.magic x
  end
type unknown = Ojs.t
let rec unknown_of_js : Ojs.t -> unknown = fun (x10 : Ojs.t) -> x10
and unknown_to_js : unknown -> Ojs.t = fun (x9 : Ojs.t) -> x9
module Unknown =
  struct
    type t = unknown
    let rec t_of_js : Ojs.t -> t = fun (x12 : Ojs.t) -> unknown_of_js x12
    and t_to_js : t -> Ojs.t = fun (x11 : unknown) -> unknown_to_js x11
    let unsafe_cast x = Obj.magic x
  end
type -'a intf = Ojs.t
let intf_to_js _ x = (x : Ojs.t)
let intf_of_js _ x = (x : _ intf)
type ('t, +'a) enum = 'a
let enum_to_js (_ : 't -> Ojs.t) (f : 'a -> Ojs.t) (e : ('t, 'a) enum) =
  (f e : Ojs.t)
let enum_of_js (_ : Ojs.t -> 't) (f : Ojs.t -> 'a) (e : Ojs.t) =
  (f e : ('t, 'a) enum)
module Enum =
  struct
    type ('t, +'a) t = ('t, 'a) enum
    let t_to_js = enum_to_js
    let t_of_js = enum_of_js
    let get_value x = x
  end
type untyped_object = [ `Object ] intf
let rec untyped_object_of_js : Ojs.t -> untyped_object = Obj.magic
and untyped_object_to_js : untyped_object -> Ojs.t = Obj.magic
type untyped_function = [ `Function ] intf
let rec untyped_function_of_js : Ojs.t -> untyped_function = Obj.magic
and untyped_function_to_js : untyped_function -> Ojs.t = Obj.magic
type symbol = [ `Symbol ] intf
let rec symbol_of_js : Ojs.t -> symbol = Obj.magic
and symbol_to_js : symbol -> Ojs.t = Obj.magic
type regexp = [ `RegExp ] intf
let rec regexp_of_js : Ojs.t -> regexp = Obj.magic
and regexp_to_js : regexp -> Ojs.t = Obj.magic
type bigint = [ `BigInt ] intf
let rec bigint_of_js : Ojs.t -> bigint = Obj.magic
and bigint_to_js : bigint -> Ojs.t = Obj.magic
type 'a or_null = 'a option
let rec or_null_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_null = fun (type
  __a) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (x15 : Ojs.t) -> Ojs.option_of_js __a_of_js x15
and or_null_to_js : 'a . ('a -> Ojs.t) -> 'a or_null -> Ojs.t = fun (type
  __a) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (x13 : __a option) -> Ojs.option_to_js __a_to_js x13
type 'a or_undefined = 'a option
let rec or_undefined_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_undefined =
  fun (type __a) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (x19 : Ojs.t) -> Ojs.option_of_js __a_of_js x19
and or_undefined_to_js : 'a . ('a -> Ojs.t) -> 'a or_undefined -> Ojs.t = fun
  (type __a) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (x17 : __a option) -> Ojs.option_to_js __a_to_js x17
type 'a or_null_or_undefined = 'a option
let rec or_null_or_undefined_of_js :
  'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_null_or_undefined = fun (type __a) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (x23 : Ojs.t) -> Ojs.option_of_js __a_of_js x23
and or_null_or_undefined_to_js :
  'a . ('a -> Ojs.t) -> 'a or_null_or_undefined -> Ojs.t = fun (type __a) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (x21 : __a option) -> Ojs.option_to_js __a_to_js x21
type ('a, 'b) and_ = Ojs.t
let rec and__of_js :
  'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) and_ = fun
  (type __a) -> fun (type __b) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) -> fun (x26 : Ojs.t) -> x26
and and__to_js :
  'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) and_ -> Ojs.t = fun
  (type __a) -> fun (type __b) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) -> fun (x25 : Ojs.t) -> x25
module And =
  struct
    type ('a, 'b) t = ('a, 'b) and_
    let rec t_of_js :
      'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) t = fun
      (type __a) -> fun (type __b) ->
      fun (__a_of_js : Ojs.t -> __a) ->
        fun (__b_of_js : Ojs.t -> __b) ->
          fun (x30 : Ojs.t) -> and__of_js __a_of_js __b_of_js x30
    and t_to_js :
      'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) t -> Ojs.t = fun
      (type __a) -> fun (type __b) ->
      fun (__a_to_js : __a -> Ojs.t) ->
        fun (__b_to_js : __b -> Ojs.t) ->
          fun (x27 : (__a, __b) and_) -> and__to_js __a_to_js __b_to_js x27
    let car (x : ('a, 'b) t) = (Obj.magic x : 'a)
    let cdr (x : ('a, 'b) t) = (Obj.magic x : 'b)
  end
type ('a, 'b) intersection2 = ('b, 'a) and_
let rec intersection2_of_js :
  'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) intersection2 =
  fun (type __a) -> fun (type __b) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (x36 : Ojs.t) -> and__of_js __b_of_js __a_of_js x36
and intersection2_to_js :
  'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) intersection2 -> Ojs.t =
  fun (type __a) -> fun (type __b) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (x33 : (__b, __a) and_) -> and__to_js __b_to_js __a_to_js x33
type ('a, 'b, 'c) intersection3 = (('b, 'c) intersection2, 'a) and_
let rec intersection3_of_js :
  'a 'b 'c .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) -> (Ojs.t -> 'c) -> Ojs.t -> ('a, 'b, 'c) intersection3
  = fun (type __a) -> fun (type __b) -> fun (type __c) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (x44 : Ojs.t) ->
          and__of_js
            (fun (x45 : Ojs.t) -> intersection2_of_js __b_of_js __c_of_js x45)
            __a_of_js x44
and intersection3_to_js :
  'a 'b 'c .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) -> ('c -> Ojs.t) -> ('a, 'b, 'c) intersection3 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (x39 : ((__b, __c) intersection2, __a) and_) ->
          and__to_js
            (fun (x40 : (__b, __c) intersection2) ->
               intersection2_to_js __b_to_js __c_to_js x40) __a_to_js x39
type ('a, 'b, 'c, 'd) intersection4 = (('b, 'c, 'd) intersection3, 'a) and_
let rec intersection4_of_js :
  'a 'b 'c 'd .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) -> Ojs.t -> ('a, 'b, 'c, 'd) intersection4
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (x55 : Ojs.t) ->
            and__of_js
              (fun (x56 : Ojs.t) ->
                 intersection3_of_js __b_of_js __c_of_js __d_of_js x56)
              __a_of_js x55
and intersection4_to_js :
  'a 'b 'c 'd .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) -> ('a, 'b, 'c, 'd) intersection4 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (x49 : ((__b, __c, __d) intersection3, __a) and_) ->
            and__to_js
              (fun (x50 : (__b, __c, __d) intersection3) ->
                 intersection3_to_js __b_to_js __c_to_js __d_to_js x50)
              __a_to_js x49
type ('a, 'b, 'c, 'd, 'e) intersection5 =
  (('b, 'c, 'd, 'e) intersection4, 'a) and_
let rec intersection5_of_js :
  'a 'b 'c 'd 'e .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) -> Ojs.t -> ('a, 'b, 'c, 'd, 'e) intersection5
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (x68 : Ojs.t) ->
              and__of_js
                (fun (x69 : Ojs.t) ->
                   intersection4_of_js __b_of_js __c_of_js __d_of_js
                     __e_of_js x69) __a_of_js x68
and intersection5_to_js :
  'a 'b 'c 'd 'e .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) -> ('a, 'b, 'c, 'd, 'e) intersection5 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (x61 : ((__b, __c, __d, __e) intersection4, __a) and_) ->
              and__to_js
                (fun (x62 : (__b, __c, __d, __e) intersection4) ->
                   intersection4_to_js __b_to_js __c_to_js __d_to_js
                     __e_to_js x62) __a_to_js x61
type ('a, 'b, 'c, 'd, 'e, 'f) intersection6 =
  (('b, 'c, 'd, 'e, 'f) intersection5, 'a) and_
let rec intersection6_of_js :
  'a 'b 'c 'd 'e 'f .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f) intersection6
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (x83 : Ojs.t) ->
                and__of_js
                  (fun (x84 : Ojs.t) ->
                     intersection5_of_js __b_of_js __c_of_js __d_of_js
                       __e_of_js __f_of_js x84) __a_of_js x83
and intersection6_to_js :
  'a 'b 'c 'd 'e 'f .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('a, 'b, 'c, 'd, 'e, 'f) intersection6 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (x75 : ((__b, __c, __d, __e, __f) intersection5, __a) and_)
                ->
                and__to_js
                  (fun (x76 : (__b, __c, __d, __e, __f) intersection5) ->
                     intersection5_to_js __b_to_js __c_to_js __d_to_js
                       __e_to_js __f_to_js x76) __a_to_js x75
type ('a, 'b, 'c, 'd, 'e, 'f, 'g) intersection7 =
  (('b, 'c, 'd, 'e, 'f, 'g) intersection6, 'a) and_
let rec intersection7_of_js :
  'a 'b 'c 'd 'e 'f 'g .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                (Ojs.t -> 'g) ->
                  Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f, 'g) intersection7
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (__g_of_js : Ojs.t -> __g) ->
                fun (x100 : Ojs.t) ->
                  and__of_js
                    (fun (x101 : Ojs.t) ->
                       intersection6_of_js __b_of_js __c_of_js __d_of_js
                         __e_of_js __f_of_js __g_of_js x101) __a_of_js x100
and intersection7_to_js :
  'a 'b 'c 'd 'e 'f 'g .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('g -> Ojs.t) ->
                  ('a, 'b, 'c, 'd, 'e, 'f, 'g) intersection7 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (__g_to_js : __g -> Ojs.t) ->
                fun
                  (x91 :
                    ((__b, __c, __d, __e, __f, __g) intersection6, __a) and_)
                  ->
                  and__to_js
                    (fun (x92 : (__b, __c, __d, __e, __f, __g) intersection6)
                       ->
                       intersection6_to_js __b_to_js __c_to_js __d_to_js
                         __e_to_js __f_to_js __g_to_js x92) __a_to_js x91
type ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) intersection8 =
  (('b, 'c, 'd, 'e, 'f, 'g, 'h) intersection7, 'a) and_
let rec intersection8_of_js :
  'a 'b 'c 'd 'e 'f 'g 'h .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                (Ojs.t -> 'g) ->
                  (Ojs.t -> 'h) ->
                    Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) intersection8
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) -> fun (type __h) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (__g_of_js : Ojs.t -> __g) ->
                fun (__h_of_js : Ojs.t -> __h) ->
                  fun (x119 : Ojs.t) ->
                    and__of_js
                      (fun (x120 : Ojs.t) ->
                         intersection7_of_js __b_of_js __c_of_js __d_of_js
                           __e_of_js __f_of_js __g_of_js __h_of_js x120)
                      __a_of_js x119
and intersection8_to_js :
  'a 'b 'c 'd 'e 'f 'g 'h .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('g -> Ojs.t) ->
                  ('h -> Ojs.t) ->
                    ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) intersection8 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) -> fun (type __h) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (__g_to_js : __g -> Ojs.t) ->
                fun (__h_to_js : __h -> Ojs.t) ->
                  fun
                    (x109 :
                      ((__b, __c, __d, __e, __f, __g, __h) intersection7,
                        __a) and_)
                    ->
                    and__to_js
                      (fun
                         (x110 :
                           (__b, __c, __d, __e, __f, __g, __h) intersection7)
                         ->
                         intersection7_to_js __b_to_js __c_to_js __d_to_js
                           __e_to_js __f_to_js __g_to_js __h_to_js x110)
                      __a_to_js x109
module Intersection =
  struct
    let get_0 x = Obj.magic x
    let get_1 x = Obj.magic x
    let get_2 x = Obj.magic x
    let get_3 x = Obj.magic x
    let get_4 x = Obj.magic x
    let get_5 x = Obj.magic x
    let get_6 x = Obj.magic x
  end
type ('a, 'b) or_from_js =
  {
  a_of_js: Ojs.t -> 'a ;
  b_of_js: Ojs.t -> 'b ;
  value: Ojs.t }
type ('a, 'b) or_ =
  | A of 'a 
  | B of 'b 
  | FromJS of ('a, 'b) or_from_js 
let or__to_js a_to_js b_to_js =
  function | A a -> a_to_js a | B b -> b_to_js b | FromJS x -> x.value
let or__of_js a_of_js b_of_js value = FromJS { a_of_js; b_of_js; value }
module Or =
  struct
    type ('a, 'b) t = ('a, 'b) or_
    let rec t_of_js :
      'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) t = fun
      (type __a) -> fun (type __b) ->
      fun (__a_of_js : Ojs.t -> __a) ->
        fun (__b_of_js : Ojs.t -> __b) ->
          fun (x132 : Ojs.t) -> or__of_js __a_of_js __b_of_js x132
    and t_to_js :
      'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) t -> Ojs.t = fun
      (type __a) -> fun (type __b) ->
      fun (__a_to_js : __a -> Ojs.t) ->
        fun (__b_to_js : __b -> Ojs.t) ->
          fun (x129 : (__a, __b) or_) -> or__to_js __a_to_js __b_to_js x129
    let inl (x : 'a) = (A x : ('a, 'b) t)
    let inr (x : 'b) = (B x : ('a, 'b) t)
    let test ~is_left  ~is_right  =
      function
      | A a -> `Left a
      | B b -> `Right b
      | FromJS x ->
          if is_left x.value
          then `Left (x.a_of_js x.value)
          else
            if is_right x.value
            then `Right (x.b_of_js x.value)
            else `Other (x.value)
  end
type ('a, 'b) union2 = ('b, 'a) or_
let rec union2_of_js :
  'a 'b . (Ojs.t -> 'a) -> (Ojs.t -> 'b) -> Ojs.t -> ('a, 'b) union2 = fun
  (type __a) -> fun (type __b) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (x138 : Ojs.t) -> or__of_js __b_of_js __a_of_js x138
and union2_to_js :
  'a 'b . ('a -> Ojs.t) -> ('b -> Ojs.t) -> ('a, 'b) union2 -> Ojs.t = fun
  (type __a) -> fun (type __b) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (x135 : (__b, __a) or_) -> or__to_js __b_to_js __a_to_js x135
type ('a, 'b, 'c) union3 = (('b, 'c) union2, 'a) or_
let rec union3_of_js :
  'a 'b 'c .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) -> (Ojs.t -> 'c) -> Ojs.t -> ('a, 'b, 'c) union3
  = fun (type __a) -> fun (type __b) -> fun (type __c) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (x146 : Ojs.t) ->
          or__of_js
            (fun (x147 : Ojs.t) -> union2_of_js __b_of_js __c_of_js x147)
            __a_of_js x146
and union3_to_js :
  'a 'b 'c .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) -> ('c -> Ojs.t) -> ('a, 'b, 'c) union3 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (x141 : ((__b, __c) union2, __a) or_) ->
          or__to_js
            (fun (x142 : (__b, __c) union2) ->
               union2_to_js __b_to_js __c_to_js x142) __a_to_js x141
type ('a, 'b, 'c, 'd) union4 = (('b, 'c, 'd) union3, 'a) or_
let rec union4_of_js :
  'a 'b 'c 'd .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) -> (Ojs.t -> 'd) -> Ojs.t -> ('a, 'b, 'c, 'd) union4
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (x157 : Ojs.t) ->
            or__of_js
              (fun (x158 : Ojs.t) ->
                 union3_of_js __b_of_js __c_of_js __d_of_js x158) __a_of_js
              x157
and union4_to_js :
  'a 'b 'c 'd .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) -> ('d -> Ojs.t) -> ('a, 'b, 'c, 'd) union4 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (x151 : ((__b, __c, __d) union3, __a) or_) ->
            or__to_js
              (fun (x152 : (__b, __c, __d) union3) ->
                 union3_to_js __b_to_js __c_to_js __d_to_js x152) __a_to_js
              x151
type ('a, 'b, 'c, 'd, 'e) union5 = (('b, 'c, 'd, 'e) union4, 'a) or_
let rec union5_of_js :
  'a 'b 'c 'd 'e .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) -> Ojs.t -> ('a, 'b, 'c, 'd, 'e) union5
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (x170 : Ojs.t) ->
              or__of_js
                (fun (x171 : Ojs.t) ->
                   union4_of_js __b_of_js __c_of_js __d_of_js __e_of_js x171)
                __a_of_js x170
and union5_to_js :
  'a 'b 'c 'd 'e .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) -> ('a, 'b, 'c, 'd, 'e) union5 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (x163 : ((__b, __c, __d, __e) union4, __a) or_) ->
              or__to_js
                (fun (x164 : (__b, __c, __d, __e) union4) ->
                   union4_to_js __b_to_js __c_to_js __d_to_js __e_to_js x164)
                __a_to_js x163
type ('a, 'b, 'c, 'd, 'e, 'f) union6 = (('b, 'c, 'd, 'e, 'f) union5, 'a) or_
let rec union6_of_js :
  'a 'b 'c 'd 'e 'f .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) -> Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f) union6
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (x185 : Ojs.t) ->
                or__of_js
                  (fun (x186 : Ojs.t) ->
                     union5_of_js __b_of_js __c_of_js __d_of_js __e_of_js
                       __f_of_js x186) __a_of_js x185
and union6_to_js :
  'a 'b 'c 'd 'e 'f .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) -> ('a, 'b, 'c, 'd, 'e, 'f) union6 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (x177 : ((__b, __c, __d, __e, __f) union5, __a) or_) ->
                or__to_js
                  (fun (x178 : (__b, __c, __d, __e, __f) union5) ->
                     union5_to_js __b_to_js __c_to_js __d_to_js __e_to_js
                       __f_to_js x178) __a_to_js x177
type ('a, 'b, 'c, 'd, 'e, 'f, 'g) union7 =
  (('b, 'c, 'd, 'e, 'f, 'g) union6, 'a) or_
let rec union7_of_js :
  'a 'b 'c 'd 'e 'f 'g .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                (Ojs.t -> 'g) -> Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f, 'g) union7
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (__g_of_js : Ojs.t -> __g) ->
                fun (x202 : Ojs.t) ->
                  or__of_js
                    (fun (x203 : Ojs.t) ->
                       union6_of_js __b_of_js __c_of_js __d_of_js __e_of_js
                         __f_of_js __g_of_js x203) __a_of_js x202
and union7_to_js :
  'a 'b 'c 'd 'e 'f 'g .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('g -> Ojs.t) -> ('a, 'b, 'c, 'd, 'e, 'f, 'g) union7 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (__g_to_js : __g -> Ojs.t) ->
                fun (x193 : ((__b, __c, __d, __e, __f, __g) union6, __a) or_)
                  ->
                  or__to_js
                    (fun (x194 : (__b, __c, __d, __e, __f, __g) union6) ->
                       union6_to_js __b_to_js __c_to_js __d_to_js __e_to_js
                         __f_to_js __g_to_js x194) __a_to_js x193
type ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) union8 =
  (('b, 'c, 'd, 'e, 'f, 'g, 'h) union7, 'a) or_
let rec union8_of_js :
  'a 'b 'c 'd 'e 'f 'g 'h .
    (Ojs.t -> 'a) ->
      (Ojs.t -> 'b) ->
        (Ojs.t -> 'c) ->
          (Ojs.t -> 'd) ->
            (Ojs.t -> 'e) ->
              (Ojs.t -> 'f) ->
                (Ojs.t -> 'g) ->
                  (Ojs.t -> 'h) ->
                    Ojs.t -> ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) union8
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) -> fun (type __h) ->
  fun (__a_of_js : Ojs.t -> __a) ->
    fun (__b_of_js : Ojs.t -> __b) ->
      fun (__c_of_js : Ojs.t -> __c) ->
        fun (__d_of_js : Ojs.t -> __d) ->
          fun (__e_of_js : Ojs.t -> __e) ->
            fun (__f_of_js : Ojs.t -> __f) ->
              fun (__g_of_js : Ojs.t -> __g) ->
                fun (__h_of_js : Ojs.t -> __h) ->
                  fun (x221 : Ojs.t) ->
                    or__of_js
                      (fun (x222 : Ojs.t) ->
                         union7_of_js __b_of_js __c_of_js __d_of_js __e_of_js
                           __f_of_js __g_of_js __h_of_js x222) __a_of_js x221
and union8_to_js :
  'a 'b 'c 'd 'e 'f 'g 'h .
    ('a -> Ojs.t) ->
      ('b -> Ojs.t) ->
        ('c -> Ojs.t) ->
          ('d -> Ojs.t) ->
            ('e -> Ojs.t) ->
              ('f -> Ojs.t) ->
                ('g -> Ojs.t) ->
                  ('h -> Ojs.t) ->
                    ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h) union8 -> Ojs.t
  = fun (type __a) -> fun (type __b) -> fun (type __c) -> fun (type __d) ->
  fun (type __e) -> fun (type __f) -> fun (type __g) -> fun (type __h) ->
  fun (__a_to_js : __a -> Ojs.t) ->
    fun (__b_to_js : __b -> Ojs.t) ->
      fun (__c_to_js : __c -> Ojs.t) ->
        fun (__d_to_js : __d -> Ojs.t) ->
          fun (__e_to_js : __e -> Ojs.t) ->
            fun (__f_to_js : __f -> Ojs.t) ->
              fun (__g_to_js : __g -> Ojs.t) ->
                fun (__h_to_js : __h -> Ojs.t) ->
                  fun
                    (x211 :
                      ((__b, __c, __d, __e, __f, __g, __h) union7, __a) or_)
                    ->
                    or__to_js
                      (fun
                         (x212 : (__b, __c, __d, __e, __f, __g, __h) union7)
                         ->
                         union7_to_js __b_to_js __c_to_js __d_to_js __e_to_js
                           __f_to_js __g_to_js __h_to_js x212) __a_to_js x211
module Union =
  struct
    let inject_0 x = Obj.magic x
    let inject_1 x = Obj.magic x
    let inject_2 x = Obj.magic x
    let inject_3 x = Obj.magic x
    let inject_4 x = Obj.magic x
    let inject_5 x = Obj.magic x
    let inject_6 x = Obj.magic x
  end
type 'a or_string = [ `String of string  | `Other of 'a ]
let rec or_string_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_string =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "string" -> `String (Ojs.string_of_js x)
      | _ -> `Other (a_of_js x)
and or_string_to_js : 'a . ('a -> Ojs.t) -> 'a or_string -> Ojs.t =
  fun a_to_js ->
    function | `String x -> Ojs.string_to_js x | `Other x -> a_to_js x
type 'a or_number = [ `Number of float  | `Other of 'a ]
let rec or_number_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_number =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "number" -> `Number (Ojs.float_of_js x)
      | _ -> `Other (a_of_js x)
and or_number_to_js : 'a . ('a -> Ojs.t) -> 'a or_number -> Ojs.t =
  fun a_to_js ->
    function | `Number x -> Ojs.float_to_js x | `Other x -> a_to_js x
type 'a or_boolean = [ `Boolean of bool  | `Other of 'a ]
let rec or_boolean_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_boolean =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "boolean" -> `Boolean (Ojs.bool_of_js x)
      | _ -> `Other (a_of_js x)
and or_boolean_to_js : 'a . ('a -> Ojs.t) -> 'a or_boolean -> Ojs.t =
  fun a_to_js ->
    function | `Boolean x -> Ojs.bool_to_js x | `Other x -> a_to_js x
type 'a or_symbol = [ `Symbol of symbol  | `Other of 'a ]
let rec or_symbol_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_symbol =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "symbol" -> `Symbol (symbol_of_js x)
      | _ -> `Other (a_of_js x)
and or_symbol_to_js : 'a . ('a -> Ojs.t) -> 'a or_symbol -> Ojs.t =
  fun a_to_js ->
    function | `Symbol x -> symbol_to_js x | `Other x -> a_to_js x
type 'a or_bigint = [ `BigInt of bigint  | `Other of 'a ]
let rec or_bigint_of_js : 'a . (Ojs.t -> 'a) -> Ojs.t -> 'a or_bigint =
  fun a_of_js ->
    fun x ->
      match Ojs.type_of x with
      | "bigint" -> `BigInt (bigint_of_js x)
      | _ -> `Other (a_of_js x)
and or_bigint_to_js : 'a . ('a -> Ojs.t) -> 'a or_bigint -> Ojs.t =
  fun a_to_js ->
    function | `BigInt x -> bigint_to_js x | `Other x -> a_to_js x
let (is_array : Ojs.t -> bool) =
  fun (x231 : Ojs.t) ->
    Ojs.bool_of_js
      (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray" [|x231|])
type ('a, 't) or_array = [ `Array of 't list  | `Other of 'a ]
let rec or_array_of_js :
  'a 't . (Ojs.t -> 'a) -> (Ojs.t -> 't) -> Ojs.t -> ('a, 't) or_array =
  fun a_of_js ->
    fun t_of_js ->
      fun x ->
        if is_array x
        then `Array (Ojs.list_of_js t_of_js x)
        else `Other (a_of_js x)
and or_array_to_js :
  'a 't . ('a -> Ojs.t) -> ('t -> Ojs.t) -> ('a, 't) or_array -> Ojs.t =
  fun a_to_js ->
    fun t_to_js ->
      function | `Array x -> Ojs.list_to_js t_to_js x | `Other x -> a_to_js x
type ('a, 'cases) or_enum = [ `Enum of 'cases  | `Other of 'a ]
let rec or_enum_of_js :
  'a 'cases .
    (Ojs.t -> 'a) -> (Ojs.t -> 'cases) -> Ojs.t -> ('a, 'cases) or_enum
  =
  fun a_of_js ->
    fun cases_of_js ->
      fun x -> try `Enum (cases_of_js x) with | _ -> `Other (a_of_js x)
and or_enum_to_js :
  'a 'cases .
    ('a -> Ojs.t) -> ('cases -> Ojs.t) -> ('a, 'cases) or_enum -> Ojs.t
  =
  fun a_to_js ->
    fun cases_to_js ->
      function | `Enum cases -> cases_to_js cases | `Other x -> a_to_js x
external pure_js_expr : string -> Ojs.t = "caml_pure_js_expr"
module Internal =
  struct
    module AnonymousInterfaces =
      struct
        type anonymous_interface_0 = [ `anonymous_interface_0 ] intf
        let rec anonymous_interface_0_of_js : Ojs.t -> anonymous_interface_0
          = Obj.magic
        and anonymous_interface_0_to_js : anonymous_interface_0 -> Ojs.t =
          Obj.magic
        type anonymous_interface_1 = [ `anonymous_interface_1 ] intf
        let rec anonymous_interface_1_of_js : Ojs.t -> anonymous_interface_1
          = Obj.magic
        and anonymous_interface_1_to_js : anonymous_interface_1 -> Ojs.t =
          Obj.magic
        type anonymous_interface_2 = [ `anonymous_interface_2 ] intf
        let rec anonymous_interface_2_of_js : Ojs.t -> anonymous_interface_2
          = Obj.magic
        and anonymous_interface_2_to_js : anonymous_interface_2 -> Ojs.t =
          Obj.magic
        type anonymous_interface_3 = [ `anonymous_interface_3 ] intf
        let rec anonymous_interface_3_of_js : Ojs.t -> anonymous_interface_3
          = Obj.magic
        and anonymous_interface_3_to_js : anonymous_interface_3 -> Ojs.t =
          Obj.magic
        type anonymous_interface_4 = [ `anonymous_interface_4 ] intf
        let rec anonymous_interface_4_of_js : Ojs.t -> anonymous_interface_4
          = Obj.magic
        and anonymous_interface_4_to_js : anonymous_interface_4 -> Ojs.t =
          Obj.magic
        type ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5 =
          [ `anonymous_interface_5 ] intf
        let rec anonymous_interface_5_of_js :
          'A 'A0 'A1 'A2 'A3 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'A3) ->
                      (Ojs.t -> 'R) ->
                        Ojs.t ->
                          ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5
          =
          fun _A ->
            fun _A0 -> fun _A1 -> fun _A2 -> fun _A3 -> fun _R -> Obj.magic
        and anonymous_interface_5_to_js :
          'A 'A0 'A1 'A2 'A3 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('A3 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5 ->
                          Ojs.t
          =
          fun _A ->
            fun _A0 -> fun _A1 -> fun _A2 -> fun _A3 -> fun _R -> Obj.magic
        type ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6 =
          [ `anonymous_interface_6 ] intf
        let rec anonymous_interface_6_of_js :
          'A 'A0 'A1 'A2 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'R) ->
                      Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6
          = fun _A -> fun _A0 -> fun _A1 -> fun _A2 -> fun _R -> Obj.magic
        and anonymous_interface_6_to_js :
          'A 'A0 'A1 'A2 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('R -> Ojs.t) ->
                      ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6 -> Ojs.t
          = fun _A -> fun _A0 -> fun _A1 -> fun _A2 -> fun _R -> Obj.magic
        type ('A, 'A0, 'A1, 'R) anonymous_interface_7 =
          [ `anonymous_interface_7 ] intf
        let rec anonymous_interface_7_of_js :
          'A 'A0 'A1 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'R) ->
                    Ojs.t -> ('A, 'A0, 'A1, 'R) anonymous_interface_7
          = fun _A -> fun _A0 -> fun _A1 -> fun _R -> Obj.magic
        and anonymous_interface_7_to_js :
          'A 'A0 'A1 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('R -> Ojs.t) ->
                    ('A, 'A0, 'A1, 'R) anonymous_interface_7 -> Ojs.t
          = fun _A -> fun _A0 -> fun _A1 -> fun _R -> Obj.magic
        type ('A, 'A0, 'R) anonymous_interface_8 =
          [ `anonymous_interface_8 ] intf
        let rec anonymous_interface_8_of_js :
          'A 'A0 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) anonymous_interface_8
          = fun _A -> fun _A0 -> fun _R -> Obj.magic
        and anonymous_interface_8_to_js :
          'A 'A0 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('R -> Ojs.t) -> ('A, 'A0, 'R) anonymous_interface_8 -> Ojs.t
          = fun _A -> fun _A0 -> fun _R -> Obj.magic
        type ('A, 'R) anonymous_interface_9 = [ `anonymous_interface_9 ] intf
        let rec anonymous_interface_9_of_js :
          'A 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) anonymous_interface_9
          = fun _A -> fun _R -> Obj.magic
        and anonymous_interface_9_to_js :
          'A 'R .
            ('A -> Ojs.t) ->
              ('R -> Ojs.t) -> ('A, 'R) anonymous_interface_9 -> Ojs.t
          = fun _A -> fun _R -> Obj.magic
        type ('A, 'T) anonymous_interface_10 =
          [ `anonymous_interface_10 ] intf
        let rec anonymous_interface_10_of_js :
          'A 'T .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) anonymous_interface_10
          = fun _A -> fun _T -> Obj.magic
        and anonymous_interface_10_to_js :
          'A 'T .
            ('A -> Ojs.t) ->
              ('T -> Ojs.t) -> ('A, 'T) anonymous_interface_10 -> Ojs.t
          = fun _A -> fun _T -> Obj.magic
        type ('AX, 'R) anonymous_interface_11 =
          [ `anonymous_interface_11 ] intf
        let rec anonymous_interface_11_of_js :
          'AX 'R .
            (Ojs.t -> 'AX) ->
              (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) anonymous_interface_11
          = fun _AX -> fun _R -> Obj.magic
        and anonymous_interface_11_to_js :
          'AX 'R .
            ('AX -> Ojs.t) ->
              ('R -> Ojs.t) -> ('AX, 'R) anonymous_interface_11 -> Ojs.t
          = fun _AX -> fun _R -> Obj.magic
        type 'T anonymous_interface_12 = [ `anonymous_interface_12 ] intf
        let rec anonymous_interface_12_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T anonymous_interface_12 =
          fun _T -> Obj.magic
        and anonymous_interface_12_to_js :
          'T . ('T -> Ojs.t) -> 'T anonymous_interface_12 -> Ojs.t =
          fun _T -> Obj.magic
      end
    module Types =
      struct
        open AnonymousInterfaces
        type 'T _Array = [ `Array of 'T ] intf
        and _ArrayBuffer = [ `ArrayBuffer ] intf
        and _ArrayBufferConstructor = [ `ArrayBufferConstructor ] intf
        and _ArrayBufferTypes = [ `ArrayBufferTypes ] intf
        and _ArrayBufferView = [ `ArrayBufferView ] intf
        and _ArrayConstructor = [ `ArrayConstructor ] intf
        and _Boolean = [ `Boolean ] intf
        and _BooleanConstructor = [ `BooleanConstructor ] intf
        and _CallableFunction = [ `CallableFunction  | `Function ] intf
        and _ClassDecorator = [ `ClassDecorator ] intf
        and 'T _ConcatArray = [ `ConcatArray of 'T ] intf
        and 'T _ConstructorParameters = any
        and _DataView = [ `DataView ] intf
        and _DataViewConstructor = [ `DataViewConstructor ] intf
        and _Date = [ `Date ] intf
        and _DateConstructor = [ `DateConstructor ] intf
        and _Error = [ `Error ] intf
        and _ErrorConstructor = [ `ErrorConstructor ] intf
        and _EvalError = [ `EvalError  | `Error ] intf
        and _EvalErrorConstructor =
          [ `EvalErrorConstructor  | `ErrorConstructor ] intf
        and ('T, 'U) _Exclude = any
        and ('T, 'U) _Extract = any
        and _Float32Array = [ `Float32Array ] intf
        and _Float32ArrayConstructor = [ `Float32ArrayConstructor ] intf
        and _Float64Array = [ `Float64Array ] intf
        and _Float64ArrayConstructor = [ `Float64ArrayConstructor ] intf
        and _Function = untyped_function
        and _FunctionConstructor = [ `FunctionConstructor ] intf
        and _IArguments = [ `IArguments ] intf
        and _ImportMeta = [ `ImportMeta ] intf
        and 'T _InstanceType = any
        and _Int16Array = [ `Int16Array ] intf
        and _Int16ArrayConstructor = [ `Int16ArrayConstructor ] intf
        and _Int32Array = [ `Int32Array ] intf
        and _Int32ArrayConstructor = [ `Int32ArrayConstructor ] intf
        and _Int8Array = [ `Int8Array ] intf
        and _Int8ArrayConstructor = [ `Int8ArrayConstructor ] intf
        and _Intl_Collator = [ `Intl_Collator ] intf
        and _Intl_CollatorOptions = [ `Intl_CollatorOptions ] intf
        and _Intl_DateTimeFormat = [ `Intl_DateTimeFormat ] intf
        and _Intl_DateTimeFormatOptions =
          [ `Intl_DateTimeFormatOptions ] intf
        and _Intl_NumberFormat = [ `Intl_NumberFormat ] intf
        and _Intl_NumberFormatOptions = [ `Intl_NumberFormatOptions ] intf
        and _Intl_ResolvedCollatorOptions =
          [ `Intl_ResolvedCollatorOptions ] intf
        and _Intl_ResolvedDateTimeFormatOptions =
          [ `Intl_ResolvedDateTimeFormatOptions ] intf
        and _Intl_ResolvedNumberFormatOptions =
          [ `Intl_ResolvedNumberFormatOptions ] intf
        and _JSON = [ `JSON ] intf
        and _Math = [ `Math ] intf
        and _MethodDecorator = [ `MethodDecorator ] intf
        and _NewableFunction = [ `NewableFunction  | `Function ] intf
        and 'T _NonNullable = any
        and _Number = [ `Number ] intf
        and _NumberConstructor = [ `NumberConstructor ] intf
        and _Object = untyped_object
        and _ObjectConstructor = [ `ObjectConstructor ] intf
        and ('T, 'K) _Omit = ('T, (any, 'K) _Exclude) _Pick
        and 'T _OmitThisParameter = any
        and _ParameterDecorator = [ `ParameterDecorator ] intf
        and 'T _Parameters = any
        and 'T _Partial = any
        and ('T, 'K) _Pick = any
        and 'T _Promise = [ `Promise of 'T ] intf
        and _PropertyDecorator = [ `PropertyDecorator ] intf
        and _PropertyDescriptor = [ `PropertyDescriptor ] intf
        and _PropertyDescriptorMap = [ `PropertyDescriptorMap ] intf
        and _PropertyKey = symbol or_string or_number
        and _RangeError = [ `RangeError  | `Error ] intf
        and _RangeErrorConstructor =
          [ `RangeErrorConstructor  | `ErrorConstructor ] intf
        and 'T _Readonly = any
        and 'T _ReadonlyArray = [ `ReadonlyArray of 'T ] intf
        and ('K, 'T) _Record = any
        and _ReferenceError = [ `ReferenceError  | `Error ] intf
        and _ReferenceErrorConstructor =
          [ `ReferenceErrorConstructor  | `ErrorConstructor ] intf
        and _RegExp = regexp
        and _RegExpConstructor = [ `RegExpConstructor ] intf
        and _RegExpExecArray = [ `RegExpExecArray  | `Array of string ] intf
        and _RegExpMatchArray =
          [ `RegExpMatchArray  | `Array of string ] intf
        and 'T _Required = any
        and 'T _ReturnType = any
        and _String = [ `String ] intf
        and _StringConstructor = [ `StringConstructor ] intf
        and _Symbol = symbol
        and _SyntaxError = [ `SyntaxError  | `Error ] intf
        and _SyntaxErrorConstructor =
          [ `SyntaxErrorConstructor  | `ErrorConstructor ] intf
        and _TemplateStringsArray =
          [ `TemplateStringsArray  | `ReadonlyArray of string ] intf
        and 'T _ThisParameterType = any
        and 'T _ThisType = [ `ThisType of 'T ] intf
        and _TypeError = [ `TypeError  | `Error ] intf
        and _TypeErrorConstructor =
          [ `TypeErrorConstructor  | `ErrorConstructor ] intf
        and 'T _TypedPropertyDescriptor =
          [ `TypedPropertyDescriptor of 'T ] intf
        and _URIError = [ `URIError  | `Error ] intf
        and _URIErrorConstructor =
          [ `URIErrorConstructor  | `ErrorConstructor ] intf
        and _Uint16Array = [ `Uint16Array ] intf
        and _Uint16ArrayConstructor = [ `Uint16ArrayConstructor ] intf
        and _Uint32Array = [ `Uint32Array ] intf
        and _Uint32ArrayConstructor = [ `Uint32ArrayConstructor ] intf
        and _Uint8Array = [ `Uint8Array ] intf
        and _Uint8ArrayConstructor = [ `Uint8ArrayConstructor ] intf
        and _Uint8ClampedArray = [ `Uint8ClampedArray ] intf
        and _Uint8ClampedArrayConstructor =
          [ `Uint8ClampedArrayConstructor ] intf
        let rec _Array_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Array =
          fun _T -> Obj.magic
        and _Array_to_js : 'T . ('T -> Ojs.t) -> 'T _Array -> Ojs.t =
          fun _T -> Obj.magic
        and _ArrayBuffer_of_js : Ojs.t -> _ArrayBuffer = Obj.magic
        and _ArrayBuffer_to_js : _ArrayBuffer -> Ojs.t = Obj.magic
        and _ArrayBufferConstructor_of_js : Ojs.t -> _ArrayBufferConstructor
          = Obj.magic
        and _ArrayBufferConstructor_to_js : _ArrayBufferConstructor -> Ojs.t
          = Obj.magic
        and _ArrayBufferTypes_of_js : Ojs.t -> _ArrayBufferTypes = Obj.magic
        and _ArrayBufferTypes_to_js : _ArrayBufferTypes -> Ojs.t = Obj.magic
        and _ArrayBufferView_of_js : Ojs.t -> _ArrayBufferView = Obj.magic
        and _ArrayBufferView_to_js : _ArrayBufferView -> Ojs.t = Obj.magic
        and _ArrayConstructor_of_js : Ojs.t -> _ArrayConstructor = Obj.magic
        and _ArrayConstructor_to_js : _ArrayConstructor -> Ojs.t = Obj.magic
        and _Boolean_of_js : Ojs.t -> _Boolean = Obj.magic
        and _Boolean_to_js : _Boolean -> Ojs.t = Obj.magic
        and _BooleanConstructor_of_js : Ojs.t -> _BooleanConstructor =
          Obj.magic
        and _BooleanConstructor_to_js : _BooleanConstructor -> Ojs.t =
          Obj.magic
        and _CallableFunction_of_js : Ojs.t -> _CallableFunction = Obj.magic
        and _CallableFunction_to_js : _CallableFunction -> Ojs.t = Obj.magic
        and _ClassDecorator_of_js : Ojs.t -> _ClassDecorator = Obj.magic
        and _ClassDecorator_to_js : _ClassDecorator -> Ojs.t = Obj.magic
        and _ConcatArray_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ConcatArray =
          fun _T -> Obj.magic
        and _ConcatArray_to_js :
          'T . ('T -> Ojs.t) -> 'T _ConcatArray -> Ojs.t =
          fun _T -> Obj.magic
        and _ConstructorParameters_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ConstructorParameters = fun
          (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x233 : Ojs.t) -> any_of_js x233
        and _ConstructorParameters_to_js :
          'T . ('T -> Ojs.t) -> 'T _ConstructorParameters -> Ojs.t = fun
          (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x232 : any) -> any_to_js x232
        and _DataView_of_js : Ojs.t -> _DataView = Obj.magic
        and _DataView_to_js : _DataView -> Ojs.t = Obj.magic
        and _DataViewConstructor_of_js : Ojs.t -> _DataViewConstructor =
          Obj.magic
        and _DataViewConstructor_to_js : _DataViewConstructor -> Ojs.t =
          Obj.magic
        and _Date_of_js : Ojs.t -> _Date = Obj.magic
        and _Date_to_js : _Date -> Ojs.t = Obj.magic
        and _DateConstructor_of_js : Ojs.t -> _DateConstructor = Obj.magic
        and _DateConstructor_to_js : _DateConstructor -> Ojs.t = Obj.magic
        and _Error_of_js : Ojs.t -> _Error = Obj.magic
        and _Error_to_js : _Error -> Ojs.t = Obj.magic
        and _ErrorConstructor_of_js : Ojs.t -> _ErrorConstructor = Obj.magic
        and _ErrorConstructor_to_js : _ErrorConstructor -> Ojs.t = Obj.magic
        and _EvalError_of_js : Ojs.t -> _EvalError = Obj.magic
        and _EvalError_to_js : _EvalError -> Ojs.t = Obj.magic
        and _EvalErrorConstructor_of_js : Ojs.t -> _EvalErrorConstructor =
          Obj.magic
        and _EvalErrorConstructor_to_js : _EvalErrorConstructor -> Ojs.t =
          Obj.magic
        and _Exclude_of_js :
          'T 'U .
            (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) _Exclude
          = fun (type __T) -> fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x235 : Ojs.t) -> any_of_js x235
        and _Exclude_to_js :
          'T 'U .
            ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) _Exclude -> Ojs.t
          = fun (type __T) -> fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x234 : any) -> any_to_js x234
        and _Extract_of_js :
          'T 'U .
            (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) _Extract
          = fun (type __T) -> fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x237 : Ojs.t) -> any_of_js x237
        and _Extract_to_js :
          'T 'U .
            ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) _Extract -> Ojs.t
          = fun (type __T) -> fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x236 : any) -> any_to_js x236
        and _Float32Array_of_js : Ojs.t -> _Float32Array = Obj.magic
        and _Float32Array_to_js : _Float32Array -> Ojs.t = Obj.magic
        and _Float32ArrayConstructor_of_js :
          Ojs.t -> _Float32ArrayConstructor = Obj.magic
        and _Float32ArrayConstructor_to_js :
          _Float32ArrayConstructor -> Ojs.t = Obj.magic
        and _Float64Array_of_js : Ojs.t -> _Float64Array = Obj.magic
        and _Float64Array_to_js : _Float64Array -> Ojs.t = Obj.magic
        and _Float64ArrayConstructor_of_js :
          Ojs.t -> _Float64ArrayConstructor = Obj.magic
        and _Float64ArrayConstructor_to_js :
          _Float64ArrayConstructor -> Ojs.t = Obj.magic
        and _Function_of_js : Ojs.t -> _Function =
          fun (x239 : Ojs.t) -> untyped_function_of_js x239
        and _Function_to_js : _Function -> Ojs.t =
          fun (x238 : untyped_function) -> untyped_function_to_js x238
        and _FunctionConstructor_of_js : Ojs.t -> _FunctionConstructor =
          Obj.magic
        and _FunctionConstructor_to_js : _FunctionConstructor -> Ojs.t =
          Obj.magic
        and _IArguments_of_js : Ojs.t -> _IArguments = Obj.magic
        and _IArguments_to_js : _IArguments -> Ojs.t = Obj.magic
        and _ImportMeta_of_js : Ojs.t -> _ImportMeta = Obj.magic
        and _ImportMeta_to_js : _ImportMeta -> Ojs.t = Obj.magic
        and _InstanceType_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _InstanceType = fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x241 : Ojs.t) -> any_of_js x241
        and _InstanceType_to_js :
          'T . ('T -> Ojs.t) -> 'T _InstanceType -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x240 : any) -> any_to_js x240
        and _Int16Array_of_js : Ojs.t -> _Int16Array = Obj.magic
        and _Int16Array_to_js : _Int16Array -> Ojs.t = Obj.magic
        and _Int16ArrayConstructor_of_js : Ojs.t -> _Int16ArrayConstructor =
          Obj.magic
        and _Int16ArrayConstructor_to_js : _Int16ArrayConstructor -> Ojs.t =
          Obj.magic
        and _Int32Array_of_js : Ojs.t -> _Int32Array = Obj.magic
        and _Int32Array_to_js : _Int32Array -> Ojs.t = Obj.magic
        and _Int32ArrayConstructor_of_js : Ojs.t -> _Int32ArrayConstructor =
          Obj.magic
        and _Int32ArrayConstructor_to_js : _Int32ArrayConstructor -> Ojs.t =
          Obj.magic
        and _Int8Array_of_js : Ojs.t -> _Int8Array = Obj.magic
        and _Int8Array_to_js : _Int8Array -> Ojs.t = Obj.magic
        and _Int8ArrayConstructor_of_js : Ojs.t -> _Int8ArrayConstructor =
          Obj.magic
        and _Int8ArrayConstructor_to_js : _Int8ArrayConstructor -> Ojs.t =
          Obj.magic
        and _Intl_Collator_of_js : Ojs.t -> _Intl_Collator = Obj.magic
        and _Intl_Collator_to_js : _Intl_Collator -> Ojs.t = Obj.magic
        and _Intl_CollatorOptions_of_js : Ojs.t -> _Intl_CollatorOptions =
          Obj.magic
        and _Intl_CollatorOptions_to_js : _Intl_CollatorOptions -> Ojs.t =
          Obj.magic
        and _Intl_DateTimeFormat_of_js : Ojs.t -> _Intl_DateTimeFormat =
          Obj.magic
        and _Intl_DateTimeFormat_to_js : _Intl_DateTimeFormat -> Ojs.t =
          Obj.magic
        and _Intl_DateTimeFormatOptions_of_js :
          Ojs.t -> _Intl_DateTimeFormatOptions = Obj.magic
        and _Intl_DateTimeFormatOptions_to_js :
          _Intl_DateTimeFormatOptions -> Ojs.t = Obj.magic
        and _Intl_NumberFormat_of_js : Ojs.t -> _Intl_NumberFormat =
          Obj.magic
        and _Intl_NumberFormat_to_js : _Intl_NumberFormat -> Ojs.t =
          Obj.magic
        and _Intl_NumberFormatOptions_of_js :
          Ojs.t -> _Intl_NumberFormatOptions = Obj.magic
        and _Intl_NumberFormatOptions_to_js :
          _Intl_NumberFormatOptions -> Ojs.t = Obj.magic
        and _Intl_ResolvedCollatorOptions_of_js :
          Ojs.t -> _Intl_ResolvedCollatorOptions = Obj.magic
        and _Intl_ResolvedCollatorOptions_to_js :
          _Intl_ResolvedCollatorOptions -> Ojs.t = Obj.magic
        and _Intl_ResolvedDateTimeFormatOptions_of_js :
          Ojs.t -> _Intl_ResolvedDateTimeFormatOptions = Obj.magic
        and _Intl_ResolvedDateTimeFormatOptions_to_js :
          _Intl_ResolvedDateTimeFormatOptions -> Ojs.t = Obj.magic
        and _Intl_ResolvedNumberFormatOptions_of_js :
          Ojs.t -> _Intl_ResolvedNumberFormatOptions = Obj.magic
        and _Intl_ResolvedNumberFormatOptions_to_js :
          _Intl_ResolvedNumberFormatOptions -> Ojs.t = Obj.magic
        and _JSON_of_js : Ojs.t -> _JSON = Obj.magic
        and _JSON_to_js : _JSON -> Ojs.t = Obj.magic
        and _Math_of_js : Ojs.t -> _Math = Obj.magic
        and _Math_to_js : _Math -> Ojs.t = Obj.magic
        and _MethodDecorator_of_js : Ojs.t -> _MethodDecorator = Obj.magic
        and _MethodDecorator_to_js : _MethodDecorator -> Ojs.t = Obj.magic
        and _NewableFunction_of_js : Ojs.t -> _NewableFunction = Obj.magic
        and _NewableFunction_to_js : _NewableFunction -> Ojs.t = Obj.magic
        and _NonNullable_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _NonNullable = fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x243 : Ojs.t) -> any_of_js x243
        and _NonNullable_to_js :
          'T . ('T -> Ojs.t) -> 'T _NonNullable -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x242 : any) -> any_to_js x242
        and _Number_of_js : Ojs.t -> _Number = Obj.magic
        and _Number_to_js : _Number -> Ojs.t = Obj.magic
        and _NumberConstructor_of_js : Ojs.t -> _NumberConstructor =
          Obj.magic
        and _NumberConstructor_to_js : _NumberConstructor -> Ojs.t =
          Obj.magic
        and _Object_of_js : Ojs.t -> _Object =
          fun (x245 : Ojs.t) -> untyped_object_of_js x245
        and _Object_to_js : _Object -> Ojs.t =
          fun (x244 : untyped_object) -> untyped_object_to_js x244
        and _ObjectConstructor_of_js : Ojs.t -> _ObjectConstructor =
          Obj.magic
        and _ObjectConstructor_to_js : _ObjectConstructor -> Ojs.t =
          Obj.magic
        and _Omit_of_js :
          'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) _Omit =
          fun (type __T) -> fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x251 : Ojs.t) ->
                _Pick_of_js __T_of_js
                  (fun (x253 : Ojs.t) ->
                     _Exclude_of_js any_of_js __K_of_js x253) x251
        and _Omit_to_js :
          'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) _Omit -> Ojs.t =
          fun (type __T) -> fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x246 : (__T, (any, __K) _Exclude) _Pick) ->
                _Pick_to_js __T_to_js
                  (fun (x248 : (any, __K) _Exclude) ->
                     _Exclude_to_js any_to_js __K_to_js x248) x246
        and _OmitThisParameter_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _OmitThisParameter = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x257 : Ojs.t) -> any_of_js x257
        and _OmitThisParameter_to_js :
          'T . ('T -> Ojs.t) -> 'T _OmitThisParameter -> Ojs.t = fun (type
          __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x256 : any) -> any_to_js x256
        and _ParameterDecorator_of_js : Ojs.t -> _ParameterDecorator =
          Obj.magic
        and _ParameterDecorator_to_js : _ParameterDecorator -> Ojs.t =
          Obj.magic
        and _Parameters_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Parameters
          = fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x259 : Ojs.t) -> any_of_js x259
        and _Parameters_to_js : 'T . ('T -> Ojs.t) -> 'T _Parameters -> Ojs.t
          = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x258 : any) -> any_to_js x258
        and _Partial_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Partial = fun
          (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x261 : Ojs.t) -> any_of_js x261
        and _Partial_to_js : 'T . ('T -> Ojs.t) -> 'T _Partial -> Ojs.t = fun
          (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x260 : any) -> any_to_js x260
        and _Pick_of_js :
          'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) _Pick =
          fun (type __T) -> fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x263 : Ojs.t) -> any_of_js x263
        and _Pick_to_js :
          'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) _Pick -> Ojs.t =
          fun (type __T) -> fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x262 : any) -> any_to_js x262
        and _Promise_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Promise =
          fun _T -> Obj.magic
        and _Promise_to_js : 'T . ('T -> Ojs.t) -> 'T _Promise -> Ojs.t =
          fun _T -> Obj.magic
        and _PropertyDecorator_of_js : Ojs.t -> _PropertyDecorator =
          Obj.magic
        and _PropertyDecorator_to_js : _PropertyDecorator -> Ojs.t =
          Obj.magic
        and _PropertyDescriptor_of_js : Ojs.t -> _PropertyDescriptor =
          Obj.magic
        and _PropertyDescriptor_to_js : _PropertyDescriptor -> Ojs.t =
          Obj.magic
        and _PropertyDescriptorMap_of_js : Ojs.t -> _PropertyDescriptorMap =
          Obj.magic
        and _PropertyDescriptorMap_to_js : _PropertyDescriptorMap -> Ojs.t =
          Obj.magic
        and _PropertyKey_of_js : Ojs.t -> _PropertyKey =
          fun (x267 : Ojs.t) ->
            or_number_of_js
              (fun (x268 : Ojs.t) -> or_string_of_js symbol_of_js x268) x267
        and _PropertyKey_to_js : _PropertyKey -> Ojs.t =
          fun (x264 : symbol or_string or_number) ->
            or_number_to_js
              (fun (x265 : symbol or_string) ->
                 or_string_to_js symbol_to_js x265) x264
        and _RangeError_of_js : Ojs.t -> _RangeError = Obj.magic
        and _RangeError_to_js : _RangeError -> Ojs.t = Obj.magic
        and _RangeErrorConstructor_of_js : Ojs.t -> _RangeErrorConstructor =
          Obj.magic
        and _RangeErrorConstructor_to_js : _RangeErrorConstructor -> Ojs.t =
          Obj.magic
        and _Readonly_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Readonly =
          fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x271 : Ojs.t) -> any_of_js x271
        and _Readonly_to_js : 'T . ('T -> Ojs.t) -> 'T _Readonly -> Ojs.t =
          fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x270 : any) -> any_to_js x270
        and _ReadonlyArray_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ReadonlyArray =
          fun _T -> Obj.magic
        and _ReadonlyArray_to_js :
          'T . ('T -> Ojs.t) -> 'T _ReadonlyArray -> Ojs.t =
          fun _T -> Obj.magic
        and _Record_of_js :
          'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) _Record
          = fun (type __K) -> fun (type __T) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x273 : Ojs.t) -> any_of_js x273
        and _Record_to_js :
          'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) _Record -> Ojs.t
          = fun (type __K) -> fun (type __T) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x272 : any) -> any_to_js x272
        and _ReferenceError_of_js : Ojs.t -> _ReferenceError = Obj.magic
        and _ReferenceError_to_js : _ReferenceError -> Ojs.t = Obj.magic
        and _ReferenceErrorConstructor_of_js :
          Ojs.t -> _ReferenceErrorConstructor = Obj.magic
        and _ReferenceErrorConstructor_to_js :
          _ReferenceErrorConstructor -> Ojs.t = Obj.magic
        and _RegExp_of_js : Ojs.t -> _RegExp =
          fun (x275 : Ojs.t) -> regexp_of_js x275
        and _RegExp_to_js : _RegExp -> Ojs.t =
          fun (x274 : regexp) -> regexp_to_js x274
        and _RegExpConstructor_of_js : Ojs.t -> _RegExpConstructor =
          Obj.magic
        and _RegExpConstructor_to_js : _RegExpConstructor -> Ojs.t =
          Obj.magic
        and _RegExpExecArray_of_js : Ojs.t -> _RegExpExecArray = Obj.magic
        and _RegExpExecArray_to_js : _RegExpExecArray -> Ojs.t = Obj.magic
        and _RegExpMatchArray_of_js : Ojs.t -> _RegExpMatchArray = Obj.magic
        and _RegExpMatchArray_to_js : _RegExpMatchArray -> Ojs.t = Obj.magic
        and _Required_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _Required =
          fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x277 : Ojs.t) -> any_of_js x277
        and _Required_to_js : 'T . ('T -> Ojs.t) -> 'T _Required -> Ojs.t =
          fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x276 : any) -> any_to_js x276
        and _ReturnType_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ReturnType
          = fun (type __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x279 : Ojs.t) -> any_of_js x279
        and _ReturnType_to_js : 'T . ('T -> Ojs.t) -> 'T _ReturnType -> Ojs.t
          = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x278 : any) -> any_to_js x278
        and _String_of_js : Ojs.t -> _String = Obj.magic
        and _String_to_js : _String -> Ojs.t = Obj.magic
        and _StringConstructor_of_js : Ojs.t -> _StringConstructor =
          Obj.magic
        and _StringConstructor_to_js : _StringConstructor -> Ojs.t =
          Obj.magic
        and _Symbol_of_js : Ojs.t -> _Symbol =
          fun (x281 : Ojs.t) -> symbol_of_js x281
        and _Symbol_to_js : _Symbol -> Ojs.t =
          fun (x280 : symbol) -> symbol_to_js x280
        and _SyntaxError_of_js : Ojs.t -> _SyntaxError = Obj.magic
        and _SyntaxError_to_js : _SyntaxError -> Ojs.t = Obj.magic
        and _SyntaxErrorConstructor_of_js : Ojs.t -> _SyntaxErrorConstructor
          = Obj.magic
        and _SyntaxErrorConstructor_to_js : _SyntaxErrorConstructor -> Ojs.t
          = Obj.magic
        and _TemplateStringsArray_of_js : Ojs.t -> _TemplateStringsArray =
          Obj.magic
        and _TemplateStringsArray_to_js : _TemplateStringsArray -> Ojs.t =
          Obj.magic
        and _ThisParameterType_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ThisParameterType = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (x283 : Ojs.t) -> any_of_js x283
        and _ThisParameterType_to_js :
          'T . ('T -> Ojs.t) -> 'T _ThisParameterType -> Ojs.t = fun (type
          __T) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (x282 : any) -> any_to_js x282
        and _ThisType_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ThisType =
          fun _T -> Obj.magic
        and _ThisType_to_js : 'T . ('T -> Ojs.t) -> 'T _ThisType -> Ojs.t =
          fun _T -> Obj.magic
        and _TypeError_of_js : Ojs.t -> _TypeError = Obj.magic
        and _TypeError_to_js : _TypeError -> Ojs.t = Obj.magic
        and _TypeErrorConstructor_of_js : Ojs.t -> _TypeErrorConstructor =
          Obj.magic
        and _TypeErrorConstructor_to_js : _TypeErrorConstructor -> Ojs.t =
          Obj.magic
        and _TypedPropertyDescriptor_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _TypedPropertyDescriptor =
          fun _T -> Obj.magic
        and _TypedPropertyDescriptor_to_js :
          'T . ('T -> Ojs.t) -> 'T _TypedPropertyDescriptor -> Ojs.t =
          fun _T -> Obj.magic
        and _URIError_of_js : Ojs.t -> _URIError = Obj.magic
        and _URIError_to_js : _URIError -> Ojs.t = Obj.magic
        and _URIErrorConstructor_of_js : Ojs.t -> _URIErrorConstructor =
          Obj.magic
        and _URIErrorConstructor_to_js : _URIErrorConstructor -> Ojs.t =
          Obj.magic
        and _Uint16Array_of_js : Ojs.t -> _Uint16Array = Obj.magic
        and _Uint16Array_to_js : _Uint16Array -> Ojs.t = Obj.magic
        and _Uint16ArrayConstructor_of_js : Ojs.t -> _Uint16ArrayConstructor
          = Obj.magic
        and _Uint16ArrayConstructor_to_js : _Uint16ArrayConstructor -> Ojs.t
          = Obj.magic
        and _Uint32Array_of_js : Ojs.t -> _Uint32Array = Obj.magic
        and _Uint32Array_to_js : _Uint32Array -> Ojs.t = Obj.magic
        and _Uint32ArrayConstructor_of_js : Ojs.t -> _Uint32ArrayConstructor
          = Obj.magic
        and _Uint32ArrayConstructor_to_js : _Uint32ArrayConstructor -> Ojs.t
          = Obj.magic
        and _Uint8Array_of_js : Ojs.t -> _Uint8Array = Obj.magic
        and _Uint8Array_to_js : _Uint8Array -> Ojs.t = Obj.magic
        and _Uint8ArrayConstructor_of_js : Ojs.t -> _Uint8ArrayConstructor =
          Obj.magic
        and _Uint8ArrayConstructor_to_js : _Uint8ArrayConstructor -> Ojs.t =
          Obj.magic
        and _Uint8ClampedArray_of_js : Ojs.t -> _Uint8ClampedArray =
          Obj.magic
        and _Uint8ClampedArray_to_js : _Uint8ClampedArray -> Ojs.t =
          Obj.magic
        and _Uint8ClampedArrayConstructor_of_js :
          Ojs.t -> _Uint8ClampedArrayConstructor = Obj.magic
        and _Uint8ClampedArrayConstructor_to_js :
          _Uint8ClampedArrayConstructor -> Ojs.t = Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
open Types
let (naN : float) = Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : float) =
  Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x284 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x284)|])
let (parseInt : string -> ?radix:float -> unit -> float) =
  fun (x285 : string) ->
    fun ?radix:(x286 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x289 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x289 "parseInt") "apply"
             [|x289;((let x287 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x287 "push" [|(Ojs.string_to_js x285)|]);
                      (match x286 with
                       | Some x288 ->
                           ignore
                             (Ojs.call x287 "push" [|(Ojs.float_to_js x288)|])
                       | None -> ());
                      x287))|])
let (parseFloat : string:string -> float) =
  fun ~string:(x290 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x290)|])
let (isNaN : float -> bool) =
  fun (x291 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x291)|])
let (isFinite : float -> bool) =
  fun (x292 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x292)|])
let (decodeURI : string -> string) =
  fun (x293 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x293)|])
let (decodeURIComponent : string -> string) =
  fun (x294 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x294)|])
let (encodeURI : string -> string) =
  fun (x295 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x295)|])
let (encodeURIComponent : bool or_string or_number -> string) =
  fun (x296 : bool or_string or_number) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(or_number_to_js
              (fun (x297 : bool or_string) ->
                 or_string_to_js Ojs.bool_to_js x297) x296)|])
let (escape : string -> string) =
  fun (x299 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x299)|])
let (unescape : string -> string) =
  fun (x300 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x300)|])
module Symbol =
  struct
    type t = _Symbol
    let rec t_of_js : Ojs.t -> t = fun (x302 : Ojs.t) -> _Symbol_of_js x302
    and t_to_js : t -> Ojs.t = fun (x301 : _Symbol) -> _Symbol_to_js x301
    let (toString : t -> string) =
      fun (x303 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x303) "toString" [||])
    let (valueOf : t -> symbol) =
      fun (x304 : t) -> symbol_of_js (Ojs.call (t_to_js x304) "valueOf" [||])
  end
module PropertyKey =
  struct
    type t = _PropertyKey
    let rec t_of_js : Ojs.t -> t =
      fun (x306 : Ojs.t) -> _PropertyKey_of_js x306
    and t_to_js : t -> Ojs.t =
      fun (x305 : _PropertyKey) -> _PropertyKey_to_js x305
  end
module PropertyDescriptor =
  struct
    type t = _PropertyDescriptor
    let rec t_of_js : Ojs.t -> t =
      fun (x308 : Ojs.t) -> _PropertyDescriptor_of_js x308
    and t_to_js : t -> Ojs.t =
      fun (x307 : _PropertyDescriptor) -> _PropertyDescriptor_to_js x307
    let (get_configurable : t -> bool) =
      fun (x309 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x309) "configurable")
    let (set_configurable : t -> bool -> unit) =
      fun (x310 : t) ->
        fun (x311 : bool) ->
          Ojs.set_prop_ascii (t_to_js x310) "configurable"
            (Ojs.bool_to_js x311)
    let (get_enumerable : t -> bool) =
      fun (x312 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x312) "enumerable")
    let (set_enumerable : t -> bool -> unit) =
      fun (x313 : t) ->
        fun (x314 : bool) ->
          Ojs.set_prop_ascii (t_to_js x313) "enumerable"
            (Ojs.bool_to_js x314)
    let (get_value : t -> any) =
      fun (x315 : t) -> any_of_js (Ojs.get_prop_ascii (t_to_js x315) "value")
    let (set_value : t -> any -> unit) =
      fun (x316 : t) ->
        fun (x317 : any) ->
          Ojs.set_prop_ascii (t_to_js x316) "value" (any_to_js x317)
    let (get_writable : t -> bool) =
      fun (x318 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x318) "writable")
    let (set_writable : t -> bool -> unit) =
      fun (x319 : t) ->
        fun (x320 : bool) ->
          Ojs.set_prop_ascii (t_to_js x319) "writable" (Ojs.bool_to_js x320)
    let (get_ : t -> any) =
      fun (x321 : t) -> any_of_js (Ojs.call (t_to_js x321) "get" [||])
    let (set_ : t -> any -> unit) =
      fun (x323 : t) ->
        fun (x322 : any) ->
          ignore (Ojs.call (t_to_js x323) "set" [|(any_to_js x322)|])
  end
module PropertyDescriptorMap =
  struct
    type t = _PropertyDescriptorMap
    let rec t_of_js : Ojs.t -> t =
      fun (x325 : Ojs.t) -> _PropertyDescriptorMap_of_js x325
    and t_to_js : t -> Ojs.t =
      fun (x324 : _PropertyDescriptorMap) ->
        _PropertyDescriptorMap_to_js x324
    let (get : t -> string -> _PropertyDescriptor) =
      fun (x326 : t) ->
        fun (x327 : string) ->
          _PropertyDescriptor_of_js
            (Ojs.get_prop (t_to_js x326) (Ojs.string_to_js x327))
    let (set : t -> string -> _PropertyDescriptor -> unit) =
      fun (x328 : t) ->
        fun (x329 : string) ->
          fun (x330 : _PropertyDescriptor) ->
            Ojs.set_prop (t_to_js x328) (Ojs.string_to_js x329)
              (_PropertyDescriptor_to_js x330)
  end
module Object =
  struct
    type t = _Object
    let rec t_of_js : Ojs.t -> t = fun (x332 : Ojs.t) -> _Object_of_js x332
    and t_to_js : t -> Ojs.t = fun (x331 : _Object) -> _Object_to_js x331
    let (get_constructor : t -> _Function) =
      fun (x333 : t) ->
        _Function_of_js (Ojs.get_prop_ascii (t_to_js x333) "constructor")
    let (set_constructor : t -> _Function -> unit) =
      fun (x334 : t) ->
        fun (x335 : _Function) ->
          Ojs.set_prop_ascii (t_to_js x334) "constructor"
            (_Function_to_js x335)
    let (toString : t -> string) =
      fun (x336 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x336) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x337 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x337) "toLocaleString" [||])
    let (valueOf : t -> t) =
      fun (x338 : t) -> t_of_js (Ojs.call (t_to_js x338) "valueOf" [||])
    let (hasOwnProperty : t -> _PropertyKey -> bool) =
      fun (x340 : t) ->
        fun (x339 : _PropertyKey) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x340) "hasOwnProperty"
               [|(_PropertyKey_to_js x339)|])
    let (isPrototypeOf : t -> t -> bool) =
      fun (x342 : t) ->
        fun (x341 : t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x342) "isPrototypeOf" [|(t_to_js x341)|])
    let (propertyIsEnumerable : t -> _PropertyKey -> bool) =
      fun (x344 : t) ->
        fun (x343 : _PropertyKey) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x344) "propertyIsEnumerable"
               [|(_PropertyKey_to_js x343)|])
    let (create : ?value:any -> unit -> _Object) =
      fun ?value:(x345 : any option) ->
        fun () ->
          _Object_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x346 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x345 with
                 | Some x347 ->
                     ignore (Ojs.call x346 "push" [|(any_to_js x347)|])
                 | None -> ());
                x346))
    let (getPrototypeOf : any -> any) =
      fun (x348 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x348)|])
    let (getOwnPropertyDescriptor :
      any -> p:_PropertyKey -> _PropertyDescriptor or_undefined) =
      fun (x349 : any) ->
        fun ~p:(x350 : _PropertyKey) ->
          or_undefined_of_js _PropertyDescriptor_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x349);(_PropertyKey_to_js x350)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x352 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x352)|])
    let (create_ : untyped_object or_null -> any) =
      fun (x354 : untyped_object or_null) ->
        any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Object")
             [|(or_null_to_js untyped_object_to_js x354)|])
    let (create_' :
      untyped_object or_null ->
        properties:(_PropertyDescriptorMap, any _ThisType) intersection2 ->
          any)
      =
      fun (x356 : untyped_object or_null) ->
        fun
          ~properties:(x358 :
                        (_PropertyDescriptorMap, any _ThisType) intersection2)
          ->
          any_of_js
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Object")
               [|(or_null_to_js untyped_object_to_js x356);(intersection2_to_js
                                                              _PropertyDescriptorMap_to_js
                                                              (fun
                                                                 (x360 :
                                                                   any
                                                                    _ThisType)
                                                                 ->
                                                                 _ThisType_to_js
                                                                   any_to_js
                                                                   x360) x358)|])
    let (defineProperty :
      t ->
        any ->
          p:_PropertyKey ->
            attributes:(_PropertyDescriptor, any _ThisType) intersection2 ->
              any)
      =
      fun (x362 : t) ->
        fun (x363 : any) ->
          fun ~p:(x364 : _PropertyKey) ->
            fun
              ~attributes:(x365 :
                            (_PropertyDescriptor, any _ThisType)
                              intersection2)
              ->
              any_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                   "defineProperty"
                   [|(t_to_js x362);(any_to_js x363);(_PropertyKey_to_js x364);(
                     intersection2_to_js _PropertyDescriptor_to_js
                       (fun (x367 : any _ThisType) ->
                          _ThisType_to_js any_to_js x367) x365)|])
    let (defineProperties :
      t ->
        any ->
          properties:(_PropertyDescriptorMap, any _ThisType) intersection2 ->
            any)
      =
      fun (x369 : t) ->
        fun (x370 : any) ->
          fun
            ~properties:(x371 :
                          (_PropertyDescriptorMap, any _ThisType)
                            intersection2)
            ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperties"
                 [|(t_to_js x369);(any_to_js x370);(intersection2_to_js
                                                      _PropertyDescriptorMap_to_js
                                                      (fun
                                                         (x373 :
                                                           any _ThisType)
                                                         ->
                                                         _ThisType_to_js
                                                           any_to_js x373)
                                                      x371)|])
    let (seal : 'T -> 'T) =
      fun (x375 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x375)|])
    let (freeze : 'T list -> 'T list) =
      fun (x376 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Ojs.list_to_js Obj.magic x376)|])
    let (freeze' : 'T -> 'T) =
      fun (x379 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x379)|])
    let (freeze'' : 'T -> 'T _Readonly) =
      fun (x380 : 'T) ->
        _Readonly_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x380)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x382 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x382)|])
    let (isSealed : any -> bool) =
      fun (x383 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x383)|])
    let (isFrozen : any -> bool) =
      fun (x384 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x384)|])
    let (isExtensible : any -> bool) =
      fun (x385 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x385)|])
    let (keys : untyped_object -> string list) =
      fun (x386 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x386)|])
  end
module ObjectConstructor =
  struct
    type t = _ObjectConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x389 : Ojs.t) -> _ObjectConstructor_of_js x389
    and t_to_js : t -> Ojs.t =
      fun (x388 : _ObjectConstructor) -> _ObjectConstructor_to_js x388
    let (create : t -> ?value:any -> unit -> _Object) =
      fun (x393 : t) ->
        fun ?value:(x390 : any option) ->
          fun () ->
            _Object_of_js
              (Ojs.new_obj_arr (t_to_js x393)
                 (let x391 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x390 with
                   | Some x392 ->
                       ignore (Ojs.call x391 "push" [|(any_to_js x392)|])
                   | None -> ());
                  x391))
    let (apply : t -> any) =
      fun (x394 : t) -> any_of_js (Ojs.apply (t_to_js x394) [||])
    let (apply' : t -> any -> any) =
      fun (x396 : t) ->
        fun (x395 : any) ->
          any_of_js (Ojs.apply (t_to_js x396) [|(any_to_js x395)|])
    let (get_prototype : t -> _Object) =
      fun (x397 : t) ->
        _Object_of_js (Ojs.get_prop_ascii (t_to_js x397) "prototype")
    let (getPrototypeOf : t -> any -> any) =
      fun (x399 : t) ->
        fun (x398 : any) ->
          any_of_js
            (Ojs.call (t_to_js x399) "getPrototypeOf" [|(any_to_js x398)|])
    let (getOwnPropertyDescriptor :
      t -> any -> p:_PropertyKey -> _PropertyDescriptor or_undefined) =
      fun (x402 : t) ->
        fun (x400 : any) ->
          fun ~p:(x401 : _PropertyKey) ->
            or_undefined_of_js _PropertyDescriptor_of_js
              (Ojs.call (t_to_js x402) "getOwnPropertyDescriptor"
                 [|(any_to_js x400);(_PropertyKey_to_js x401)|])
    let (getOwnPropertyNames : t -> any -> string list) =
      fun (x405 : t) ->
        fun (x404 : any) ->
          Ojs.list_of_js Ojs.string_of_js
            (Ojs.call (t_to_js x405) "getOwnPropertyNames"
               [|(any_to_js x404)|])
    let (create_ : t -> untyped_object or_null -> any) =
      fun (x409 : t) ->
        fun (x407 : untyped_object or_null) ->
          any_of_js
            (Ojs.call (t_to_js x409) "create"
               [|(or_null_to_js untyped_object_to_js x407)|])
    let (create_' :
      t ->
        untyped_object or_null ->
          properties:(_PropertyDescriptorMap, any _ThisType) intersection2 ->
            any)
      =
      fun (x416 : t) ->
        fun (x410 : untyped_object or_null) ->
          fun
            ~properties:(x412 :
                          (_PropertyDescriptorMap, any _ThisType)
                            intersection2)
            ->
            any_of_js
              (Ojs.call (t_to_js x416) "create"
                 [|(or_null_to_js untyped_object_to_js x410);(intersection2_to_js
                                                                _PropertyDescriptorMap_to_js
                                                                (fun
                                                                   (x414 :
                                                                    any
                                                                    _ThisType)
                                                                   ->
                                                                   _ThisType_to_js
                                                                    any_to_js
                                                                    x414)
                                                                x412)|])
    let (defineProperty :
      t ->
        any ->
          p:_PropertyKey ->
            attributes:(_PropertyDescriptor, any _ThisType) intersection2 ->
              any)
      =
      fun (x423 : t) ->
        fun (x417 : any) ->
          fun ~p:(x418 : _PropertyKey) ->
            fun
              ~attributes:(x419 :
                            (_PropertyDescriptor, any _ThisType)
                              intersection2)
              ->
              any_of_js
                (Ojs.call (t_to_js x423) "defineProperty"
                   [|(any_to_js x417);(_PropertyKey_to_js x418);(intersection2_to_js
                                                                   _PropertyDescriptor_to_js
                                                                   (fun
                                                                    (x421 :
                                                                    any
                                                                    _ThisType)
                                                                    ->
                                                                    _ThisType_to_js
                                                                    any_to_js
                                                                    x421)
                                                                   x419)|])
    let (defineProperties :
      t ->
        any ->
          properties:(_PropertyDescriptorMap, any _ThisType) intersection2 ->
            any)
      =
      fun (x429 : t) ->
        fun (x424 : any) ->
          fun
            ~properties:(x425 :
                          (_PropertyDescriptorMap, any _ThisType)
                            intersection2)
            ->
            any_of_js
              (Ojs.call (t_to_js x429) "defineProperties"
                 [|(any_to_js x424);(intersection2_to_js
                                       _PropertyDescriptorMap_to_js
                                       (fun (x427 : any _ThisType) ->
                                          _ThisType_to_js any_to_js x427)
                                       x425)|])
    let (seal : t -> 'T -> 'T) =
      fun (x431 : t) ->
        fun (x430 : 'T) ->
          Obj.magic (Ojs.call (t_to_js x431) "seal" [|(Obj.magic x430)|])
    let (freeze : t -> 'T list -> 'T list) =
      fun (x434 : t) ->
        fun (x432 : 'T list) ->
          Ojs.list_of_js Obj.magic
            (Ojs.call (t_to_js x434) "freeze"
               [|(Ojs.list_to_js Obj.magic x432)|])
    let (freeze' : t -> 'T -> 'T) =
      fun (x437 : t) ->
        fun (x436 : 'T) ->
          Obj.magic (Ojs.call (t_to_js x437) "freeze" [|(Obj.magic x436)|])
    let (freeze'' : t -> 'T -> 'T _Readonly) =
      fun (x439 : t) ->
        fun (x438 : 'T) ->
          _Readonly_of_js Obj.magic
            (Ojs.call (t_to_js x439) "freeze" [|(Obj.magic x438)|])
    let (preventExtensions : t -> 'T -> 'T) =
      fun (x442 : t) ->
        fun (x441 : 'T) ->
          Obj.magic
            (Ojs.call (t_to_js x442) "preventExtensions" [|(Obj.magic x441)|])
    let (isSealed : t -> any -> bool) =
      fun (x444 : t) ->
        fun (x443 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x444) "isSealed" [|(any_to_js x443)|])
    let (isFrozen : t -> any -> bool) =
      fun (x446 : t) ->
        fun (x445 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x446) "isFrozen" [|(any_to_js x445)|])
    let (isExtensible : t -> any -> bool) =
      fun (x448 : t) ->
        fun (x447 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x448) "isExtensible" [|(any_to_js x447)|])
    let (keys : t -> untyped_object -> string list) =
      fun (x450 : t) ->
        fun (x449 : untyped_object) ->
          Ojs.list_of_js Ojs.string_of_js
            (Ojs.call (t_to_js x450) "keys" [|(untyped_object_to_js x449)|])
  end
let (object_ : _ObjectConstructor) =
  _ObjectConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Object")
module Function =
  struct
    type t = _Function
    let rec t_of_js : Ojs.t -> t = fun (x453 : Ojs.t) -> _Function_of_js x453
    and t_to_js : t -> Ojs.t = fun (x452 : _Function) -> _Function_to_js x452
    let (apply_ : t -> this:t -> thisArg:any -> ?argArray:any -> unit -> any)
      =
      fun (x459 : t) ->
        fun ~this:(x454 : t) ->
          fun ~thisArg:(x455 : any) ->
            fun ?argArray:(x456 : any option) ->
              fun () ->
                any_of_js
                  (let x460 = t_to_js x459 in
                   Ojs.call (Ojs.get_prop_ascii x460 "apply") "apply"
                     [|x460;((let x457 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x457 "push" [|(t_to_js x454)|]);
                              ignore
                                (Ojs.call x457 "push" [|(any_to_js x455)|]);
                              (match x456 with
                               | Some x458 ->
                                   ignore
                                     (Ojs.call x457 "push"
                                        [|(any_to_js x458)|])
                               | None -> ());
                              x457))|])
    let (call : t -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x466 : t) ->
        fun ~this:(x461 : t) ->
          fun ~thisArg:(x462 : any) ->
            fun ~argArray:(x463 : any list) ->
              any_of_js
                (let x467 = t_to_js x466 in
                 Ojs.call (Ojs.get_prop_ascii x467 "call") "apply"
                   [|x467;((let x464 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore (Ojs.call x464 "push" [|(t_to_js x461)|]);
                            ignore
                              (Ojs.call x464 "push" [|(any_to_js x462)|]);
                            List.iter
                              (fun (x465 : any) ->
                                 ignore
                                   (Ojs.call x464 "push" [|(any_to_js x465)|]))
                              x463;
                            x464))|])
    let (bind : t -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x473 : t) ->
        fun ~this:(x468 : t) ->
          fun ~thisArg:(x469 : any) ->
            fun ~argArray:(x470 : any list) ->
              any_of_js
                (let x474 = t_to_js x473 in
                 Ojs.call (Ojs.get_prop_ascii x474 "bind") "apply"
                   [|x474;((let x471 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore (Ojs.call x471 "push" [|(t_to_js x468)|]);
                            ignore
                              (Ojs.call x471 "push" [|(any_to_js x469)|]);
                            List.iter
                              (fun (x472 : any) ->
                                 ignore
                                   (Ojs.call x471 "push" [|(any_to_js x472)|]))
                              x470;
                            x471))|])
    let (toString : t -> string) =
      fun (x475 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x475) "toString" [||])
    let (get_prototype : t -> any) =
      fun (x476 : t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js x476) "prototype")
    let (set_prototype : t -> any -> unit) =
      fun (x477 : t) ->
        fun (x478 : any) ->
          Ojs.set_prop_ascii (t_to_js x477) "prototype" (any_to_js x478)
    let (get_length : t -> float) =
      fun (x479 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x479) "length")
    let (get_arguments : t -> any) =
      fun (x480 : t) ->
        any_of_js (Ojs.get_prop_ascii (t_to_js x480) "arguments")
    let (set_arguments : t -> any -> unit) =
      fun (x481 : t) ->
        fun (x482 : any) ->
          Ojs.set_prop_ascii (t_to_js x481) "arguments" (any_to_js x482)
    let (get_caller : t -> t) =
      fun (x483 : t) -> t_of_js (Ojs.get_prop_ascii (t_to_js x483) "caller")
    let (set_caller : t -> t -> unit) =
      fun (x484 : t) ->
        fun (x485 : t) ->
          Ojs.set_prop_ascii (t_to_js x484) "caller" (t_to_js x485)
    let (create : string list -> _Function) =
      fun (x486 : string list) ->
        _Function_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x487 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x488 : string) ->
                   ignore (Ojs.call x487 "push" [|(Ojs.string_to_js x488)|]))
                x486;
              x487))
  end
module FunctionConstructor =
  struct
    type t = _FunctionConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x490 : Ojs.t) -> _FunctionConstructor_of_js x490
    and t_to_js : t -> Ojs.t =
      fun (x489 : _FunctionConstructor) -> _FunctionConstructor_to_js x489
    let (create : t -> string list -> _Function) =
      fun (x494 : t) ->
        fun (x491 : string list) ->
          _Function_of_js
            (Ojs.new_obj_arr (t_to_js x494)
               (let x492 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x493 : string) ->
                     ignore
                       (Ojs.call x492 "push" [|(Ojs.string_to_js x493)|]))
                  x491;
                x492))
    let (apply : t -> string list -> _Function) =
      fun (x498 : t) ->
        fun (x495 : string list) ->
          _Function_of_js
            (Ojs.call (t_to_js x498) "apply"
               [|Ojs.null;((let x496 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x497 : string) ->
                                 ignore
                                   (Ojs.call x496 "push"
                                      [|(Ojs.string_to_js x497)|])) x495;
                            x496))|])
    let (get_prototype : t -> _Function) =
      fun (x499 : t) ->
        _Function_of_js (Ojs.get_prop_ascii (t_to_js x499) "prototype")
  end
let (function_ : _FunctionConstructor) =
  _FunctionConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Function")
module ThisParameterType =
  struct
    type 'T t = 'T _ThisParameterType
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x502 : Ojs.t) -> _ThisParameterType_of_js __T_of_js x502
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x500 : __T _ThisParameterType) ->
          _ThisParameterType_to_js __T_to_js x500
  end
module OmitThisParameter =
  struct
    type 'T t = 'T _OmitThisParameter
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x506 : Ojs.t) -> _OmitThisParameter_of_js __T_of_js x506
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x504 : __T _OmitThisParameter) ->
          _OmitThisParameter_to_js __T_to_js x504
  end
module CallableFunction =
  struct
    type t = _CallableFunction
    let rec t_of_js : Ojs.t -> t =
      fun (x509 : Ojs.t) -> _CallableFunction_of_js x509
    and t_to_js : t -> Ojs.t =
      fun (x508 : _CallableFunction) -> _CallableFunction_to_js x508
    let (apply_ : t -> this:(this:'T -> 'R) -> thisArg:'T -> 'R) =
      fun (x513 : t) ->
        fun ~this:(x510 : this:'T -> 'R) ->
          fun ~thisArg:(x512 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js x513) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x511 : Ojs.t) ->
                         Obj.magic (x510 ~this:(Obj.magic x511))));(Obj.magic
                                                                    x512)|])
    let (apply_all :
      t ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x519 : t) ->
        fun ~this:(x514 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x517 : 'T) ->
            fun ~args:(x518 : 'A) ->
              Obj.magic
                (Ojs.call (t_to_js x519) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x515 : _) ->
                           Obj.magic
                             (x514 ~this:(Obj.magic (Ojs.array_get x515 0))
                                ~args:(Ojs.list_of_js_from any_of_js x515 1))));(
                     Obj.magic x517);(Obj.magic x518)|])
    let (call :
      t ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x527 : t) ->
        fun ~this:(x520 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x521 : 'T) ->
            fun ~args:(x522 : any list) ->
              Obj.magic
                (let x528 = t_to_js x527 in
                 Ojs.call (Ojs.get_prop_ascii x528 "call") "apply"
                   [|x528;((let x523 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x523 "push"
                                 [|(Ojs.fun_to_js_args
                                      (fun (x525 : _) ->
                                         Obj.magic
                                           (x520
                                              ~this:(Obj.magic
                                                       (Ojs.array_get x525 0))
                                              ~args:(Ojs.list_of_js_from
                                                       any_of_js x525 1))))|]);
                            ignore
                              (Ojs.call x523 "push" [|(Obj.magic x521)|]);
                            List.iter
                              (fun (x524 : any) ->
                                 ignore
                                   (Ojs.call x523 "push" [|(any_to_js x524)|]))
                              x522;
                            x523))|])
    let (bind :
      t -> this:'T -> thisArg:'T _ThisParameterType -> 'T _OmitThisParameter)
      =
      fun (x532 : t) ->
        fun ~this:(x529 : 'T) ->
          fun ~thisArg:(x530 : 'T _ThisParameterType) ->
            _OmitThisParameter_of_js Obj.magic
              (Ojs.call (t_to_js x532) "bind"
                 [|(Obj.magic x529);(_ThisParameterType_to_js Obj.magic x530)|])
    let (bind_all :
      t ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x538 : t) ->
        fun ~this:(x534 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x537 : 'T) ->
            fun ~args:(x539 : any list) ->
              Obj.magic
                (Ojs.call
                   (Ojs.call (t_to_js x538) "bind"
                      [|(Ojs.fun_to_js_args
                           (fun (x535 : _) ->
                              Obj.magic
                                (x534
                                   ~this:(Obj.magic (Ojs.array_get x535 0))
                                   ~args:(Ojs.list_of_js_from any_of_js x535
                                            1))));(Obj.magic x537)|]) "apply"
                   [|Ojs.null;((let x540 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                List.iter
                                  (fun (x541 : any) ->
                                     ignore
                                       (Ojs.call x540 "push"
                                          [|(any_to_js x541)|])) x539;
                                x540))|])
    let (cast : t -> _Function) =
      fun (x542 : t) -> _Function_of_js (t_to_js x542)
  end
module NewableFunction =
  struct
    type t = _NewableFunction
    let rec t_of_js : Ojs.t -> t =
      fun (x544 : Ojs.t) -> _NewableFunction_of_js x544
    and t_to_js : t -> Ojs.t =
      fun (x543 : _NewableFunction) -> _NewableFunction_to_js x543
    let (apply_ : t -> this:'T anonymous_interface_12 -> thisArg:'T -> unit)
      =
      fun (x548 : t) ->
        fun ~this:(x545 : 'T anonymous_interface_12) ->
          fun ~thisArg:(x547 : 'T) ->
            ignore
              (Ojs.call (t_to_js x548) "apply"
                 [|(anonymous_interface_12_to_js Obj.magic x545);(Obj.magic
                                                                    x547)|])
    let (apply_' :
      t -> this:('A, 'T) anonymous_interface_10 -> thisArg:'T -> 'A -> unit)
      =
      fun (x554 : t) ->
        fun ~this:(x549 : ('A, 'T) anonymous_interface_10) ->
          fun ~thisArg:(x552 : 'T) ->
            fun (x553 : 'A) ->
              ignore
                (Ojs.call (t_to_js x554) "apply"
                   [|(anonymous_interface_10_to_js Obj.magic Obj.magic x549);(
                     Obj.magic x552);(Obj.magic x553)|])
    let (call :
      t ->
        this:('A, 'T) anonymous_interface_10 ->
          thisArg:'T -> any list -> unit)
      =
      fun (x562 : t) ->
        fun ~this:(x555 : ('A, 'T) anonymous_interface_10) ->
          fun ~thisArg:(x556 : 'T) ->
            fun (x557 : any list) ->
              ignore
                (let x563 = t_to_js x562 in
                 Ojs.call (Ojs.get_prop_ascii x563 "call") "apply"
                   [|x563;((let x558 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x558 "push"
                                 [|(anonymous_interface_10_to_js Obj.magic
                                      Obj.magic x555)|]);
                            ignore
                              (Ojs.call x558 "push" [|(Obj.magic x556)|]);
                            List.iter
                              (fun (x559 : any) ->
                                 ignore
                                   (Ojs.call x558 "push" [|(any_to_js x559)|]))
                              x557;
                            x558))|])
    let (bind : t -> this:'T -> thisArg:any -> 'T) =
      fun (x566 : t) ->
        fun ~this:(x564 : 'T) ->
          fun ~thisArg:(x565 : any) ->
            Obj.magic
              (Ojs.call (t_to_js x566) "bind"
                 [|(Obj.magic x564);(any_to_js x565)|])
    let (bind' :
      t ->
        this:('A, 'A0, 'R) anonymous_interface_8 ->
          thisArg:any -> arg0:'A0 -> ('A, 'R) anonymous_interface_9)
      =
      fun (x573 : t) ->
        fun ~this:(x567 : ('A, 'A0, 'R) anonymous_interface_8) ->
          fun ~thisArg:(x571 : any) ->
            fun ~arg0:(x572 : 'A0) ->
              anonymous_interface_9_of_js Obj.magic Obj.magic
                (Ojs.call (t_to_js x573) "bind"
                   [|(anonymous_interface_8_to_js Obj.magic Obj.magic
                        Obj.magic x567);(any_to_js x571);(Obj.magic x572)|])
    let (bind'' :
      t ->
        this:('A, 'A0, 'A1, 'R) anonymous_interface_7 ->
          thisArg:any ->
            arg0:'A0 -> arg1:'A1 -> ('A, 'R) anonymous_interface_9)
      =
      fun (x584 : t) ->
        fun ~this:(x576 : ('A, 'A0, 'A1, 'R) anonymous_interface_7) ->
          fun ~thisArg:(x581 : any) ->
            fun ~arg0:(x582 : 'A0) ->
              fun ~arg1:(x583 : 'A1) ->
                anonymous_interface_9_of_js Obj.magic Obj.magic
                  (Ojs.call (t_to_js x584) "bind"
                     [|(anonymous_interface_7_to_js Obj.magic Obj.magic
                          Obj.magic Obj.magic x576);(any_to_js x581);(
                       Obj.magic x582);(Obj.magic x583)|])
    let (bind''' :
      t ->
        this:('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6 ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> ('A, 'R) anonymous_interface_9)
      =
      fun (x597 : t) ->
        fun ~this:(x587 : ('A, 'A0, 'A1, 'A2, 'R) anonymous_interface_6) ->
          fun ~thisArg:(x593 : any) ->
            fun ~arg0:(x594 : 'A0) ->
              fun ~arg1:(x595 : 'A1) ->
                fun ~arg2:(x596 : 'A2) ->
                  anonymous_interface_9_of_js Obj.magic Obj.magic
                    (Ojs.call (t_to_js x597) "bind"
                       [|(anonymous_interface_6_to_js Obj.magic Obj.magic
                            Obj.magic Obj.magic Obj.magic x587);(any_to_js
                                                                   x593);(
                         Obj.magic x594);(Obj.magic x595);(Obj.magic x596)|])
    let (bind'''' :
      t ->
        this:('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5 ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 ->
                arg2:'A2 -> arg3:'A3 -> ('A, 'R) anonymous_interface_9)
      =
      fun (x612 : t) ->
        fun ~this:(x600 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) anonymous_interface_5)
          ->
          fun ~thisArg:(x607 : any) ->
            fun ~arg0:(x608 : 'A0) ->
              fun ~arg1:(x609 : 'A1) ->
                fun ~arg2:(x610 : 'A2) ->
                  fun ~arg3:(x611 : 'A3) ->
                    anonymous_interface_9_of_js Obj.magic Obj.magic
                      (Ojs.call (t_to_js x612) "bind"
                         [|(anonymous_interface_5_to_js Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic Obj.magic x600);(
                           any_to_js x607);(Obj.magic x608);(Obj.magic x609);(
                           Obj.magic x610);(Obj.magic x611)|])
    let (bind''''' :
      t ->
        this:('AX, 'R) anonymous_interface_11 ->
          thisArg:any -> 'AX list -> ('AX, 'R) anonymous_interface_11)
      =
      fun (x622 : t) ->
        fun ~this:(x615 : ('AX, 'R) anonymous_interface_11) ->
          fun ~thisArg:(x616 : any) ->
            fun (x617 : 'AX list) ->
              anonymous_interface_11_of_js Obj.magic Obj.magic
                (let x623 = t_to_js x622 in
                 Ojs.call (Ojs.get_prop_ascii x623 "bind") "apply"
                   [|x623;((let x618 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x618 "push"
                                 [|(anonymous_interface_11_to_js Obj.magic
                                      Obj.magic x615)|]);
                            ignore
                              (Ojs.call x618 "push" [|(any_to_js x616)|]);
                            List.iter
                              (fun (x619 : 'AX) ->
                                 ignore
                                   (Ojs.call x618 "push" [|(Obj.magic x619)|]))
                              x617;
                            x618))|])
    let (cast : t -> _Function) =
      fun (x626 : t) -> _Function_of_js (t_to_js x626)
  end
module IArguments =
  struct
    type t = _IArguments
    let rec t_of_js : Ojs.t -> t =
      fun (x628 : Ojs.t) -> _IArguments_of_js x628
    and t_to_js : t -> Ojs.t =
      fun (x627 : _IArguments) -> _IArguments_to_js x627
    let (get : t -> float -> any) =
      fun (x629 : t) ->
        fun (x630 : float) ->
          any_of_js (Ojs.get_prop (t_to_js x629) (Ojs.float_to_js x630))
    let (set : t -> float -> any -> unit) =
      fun (x631 : t) ->
        fun (x632 : float) ->
          fun (x633 : any) ->
            Ojs.set_prop (t_to_js x631) (Ojs.float_to_js x632)
              (any_to_js x633)
    let (get_length : t -> float) =
      fun (x634 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x634) "length")
    let (set_length : t -> float -> unit) =
      fun (x635 : t) ->
        fun (x636 : float) ->
          Ojs.set_prop_ascii (t_to_js x635) "length" (Ojs.float_to_js x636)
    let (get_callee : t -> _Function) =
      fun (x637 : t) ->
        _Function_of_js (Ojs.get_prop_ascii (t_to_js x637) "callee")
    let (set_callee : t -> _Function -> unit) =
      fun (x638 : t) ->
        fun (x639 : _Function) ->
          Ojs.set_prop_ascii (t_to_js x638) "callee" (_Function_to_js x639)
  end
module String =
  struct
    type t = _String
    let rec t_of_js : Ojs.t -> t = fun (x641 : Ojs.t) -> _String_of_js x641
    and t_to_js : t -> Ojs.t = fun (x640 : _String) -> _String_to_js x640
    let (localeCompare :
      t ->
        that:string ->
          ?locales:string list or_string ->
            ?options:_Intl_CollatorOptions -> unit -> float)
      =
      fun (x650 : t) ->
        fun ~that:(x642 : string) ->
          fun ?locales:(x643 : string list or_string option) ->
            fun ?options:(x644 : _Intl_CollatorOptions option) ->
              fun () ->
                Ojs.float_of_js
                  (let x651 = t_to_js x650 in
                   Ojs.call (Ojs.get_prop_ascii x651 "localeCompare") "apply"
                     [|x651;((let x645 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x645 "push"
                                   [|(Ojs.string_to_js x642)|]);
                              (match x643 with
                               | Some x647 ->
                                   ignore
                                     (Ojs.call x645 "push"
                                        [|(or_string_to_js
                                             (fun (x648 : string list) ->
                                                Ojs.list_to_js
                                                  Ojs.string_to_js x648) x647)|])
                               | None -> ());
                              (match x644 with
                               | Some x646 ->
                                   ignore
                                     (Ojs.call x645 "push"
                                        [|(_Intl_CollatorOptions_to_js x646)|])
                               | None -> ());
                              x645))|])
    let (toString : t -> string) =
      fun (x652 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x652) "toString" [||])
    let (charAt : t -> pos:float -> string) =
      fun (x654 : t) ->
        fun ~pos:(x653 : float) ->
          Ojs.string_of_js
            (Ojs.call (t_to_js x654) "charAt" [|(Ojs.float_to_js x653)|])
    let (charCodeAt : t -> index:float -> float) =
      fun (x656 : t) ->
        fun ~index:(x655 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x656) "charCodeAt" [|(Ojs.float_to_js x655)|])
    let (concat : t -> strings:string list -> string) =
      fun (x660 : t) ->
        fun ~strings:(x657 : string list) ->
          Ojs.string_of_js
            (let x661 = t_to_js x660 in
             Ojs.call (Ojs.get_prop_ascii x661 "concat") "apply"
               [|x661;((let x658 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x659 : string) ->
                             ignore
                               (Ojs.call x658 "push"
                                  [|(Ojs.string_to_js x659)|])) x657;
                        x658))|])
    let (indexOf :
      t -> searchString:string -> ?position:float -> unit -> float) =
      fun (x666 : t) ->
        fun ~searchString:(x662 : string) ->
          fun ?position:(x663 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x667 = t_to_js x666 in
                 Ojs.call (Ojs.get_prop_ascii x667 "indexOf") "apply"
                   [|x667;((let x664 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x664 "push"
                                 [|(Ojs.string_to_js x662)|]);
                            (match x663 with
                             | Some x665 ->
                                 ignore
                                   (Ojs.call x664 "push"
                                      [|(Ojs.float_to_js x665)|])
                             | None -> ());
                            x664))|])
    let (lastIndexOf :
      t -> searchString:string -> ?position:float -> unit -> float) =
      fun (x672 : t) ->
        fun ~searchString:(x668 : string) ->
          fun ?position:(x669 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x673 = t_to_js x672 in
                 Ojs.call (Ojs.get_prop_ascii x673 "lastIndexOf") "apply"
                   [|x673;((let x670 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x670 "push"
                                 [|(Ojs.string_to_js x668)|]);
                            (match x669 with
                             | Some x671 ->
                                 ignore
                                   (Ojs.call x670 "push"
                                      [|(Ojs.float_to_js x671)|])
                             | None -> ());
                            x670))|])
    let (localeCompare' : t -> that:string -> float) =
      fun (x675 : t) ->
        fun ~that:(x674 : string) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x675) "localeCompare"
               [|(Ojs.string_to_js x674)|])
    let (match_ : t -> regexp:_RegExp or_string -> _RegExpMatchArray or_null)
      =
      fun (x678 : t) ->
        fun ~regexp:(x676 : _RegExp or_string) ->
          or_null_of_js _RegExpMatchArray_of_js
            (Ojs.call (t_to_js x678) "match"
               [|(or_string_to_js _RegExp_to_js x676)|])
    let (replace :
      t -> searchValue:_RegExp or_string -> replaceValue:string -> string) =
      fun (x683 : t) ->
        fun ~searchValue:(x680 : _RegExp or_string) ->
          fun ~replaceValue:(x682 : string) ->
            Ojs.string_of_js
              (Ojs.call (t_to_js x683) "replace"
                 [|(or_string_to_js _RegExp_to_js x680);(Ojs.string_to_js
                                                           x682)|])
    let (replace' :
      t ->
        searchValue:_RegExp or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x689 : t) ->
        fun ~searchValue:(x684 : _RegExp or_string) ->
          fun ~replacer:(x686 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (t_to_js x689) "replace"
                 [|(or_string_to_js _RegExp_to_js x684);(Ojs.fun_to_js_args
                                                           (fun (x687 : _) ->
                                                              Ojs.string_to_js
                                                                (x686
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x687 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x687 1))))|])
    let (search : t -> regexp:_RegExp or_string -> float) =
      fun (x692 : t) ->
        fun ~regexp:(x690 : _RegExp or_string) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x692) "search"
               [|(or_string_to_js _RegExp_to_js x690)|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> string) =
      fun (x698 : t) ->
        fun ?start:(x693 : float option) ->
          fun ?end_:(x694 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x699 = t_to_js x698 in
                 Ojs.call (Ojs.get_prop_ascii x699 "slice") "apply"
                   [|x699;((let x695 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x693 with
                             | Some x697 ->
                                 ignore
                                   (Ojs.call x695 "push"
                                      [|(Ojs.float_to_js x697)|])
                             | None -> ());
                            (match x694 with
                             | Some x696 ->
                                 ignore
                                   (Ojs.call x695 "push"
                                      [|(Ojs.float_to_js x696)|])
                             | None -> ());
                            x695))|])
    let (split :
      t -> separator:_RegExp or_string -> ?limit:float -> unit -> string list)
      =
      fun (x705 : t) ->
        fun ~separator:(x700 : _RegExp or_string) ->
          fun ?limit:(x701 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x706 = t_to_js x705 in
                 Ojs.call (Ojs.get_prop_ascii x706 "split") "apply"
                   [|x706;((let x702 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x702 "push"
                                 [|(or_string_to_js _RegExp_to_js x700)|]);
                            (match x701 with
                             | Some x703 ->
                                 ignore
                                   (Ojs.call x702 "push"
                                      [|(Ojs.float_to_js x703)|])
                             | None -> ());
                            x702))|])
    let (substring : t -> start:float -> ?end_:float -> unit -> string) =
      fun (x712 : t) ->
        fun ~start:(x708 : float) ->
          fun ?end_:(x709 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x713 = t_to_js x712 in
                 Ojs.call (Ojs.get_prop_ascii x713 "substring") "apply"
                   [|x713;((let x710 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x710 "push"
                                 [|(Ojs.float_to_js x708)|]);
                            (match x709 with
                             | Some x711 ->
                                 ignore
                                   (Ojs.call x710 "push"
                                      [|(Ojs.float_to_js x711)|])
                             | None -> ());
                            x710))|])
    let (toLowerCase : t -> string) =
      fun (x714 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x714) "toLowerCase" [||])
    let (toLocaleLowerCase :
      t -> ?locales:string list or_string -> unit -> string) =
      fun (x720 : t) ->
        fun ?locales:(x715 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x721 = t_to_js x720 in
               Ojs.call (Ojs.get_prop_ascii x721 "toLocaleLowerCase") "apply"
                 [|x721;((let x716 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x715 with
                           | Some x717 ->
                               ignore
                                 (Ojs.call x716 "push"
                                    [|(or_string_to_js
                                         (fun (x718 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x718) x717)|])
                           | None -> ());
                          x716))|])
    let (toUpperCase : t -> string) =
      fun (x722 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x722) "toUpperCase" [||])
    let (toLocaleUpperCase :
      t -> ?locales:string list or_string -> unit -> string) =
      fun (x728 : t) ->
        fun ?locales:(x723 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x729 = t_to_js x728 in
               Ojs.call (Ojs.get_prop_ascii x729 "toLocaleUpperCase") "apply"
                 [|x729;((let x724 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x723 with
                           | Some x725 ->
                               ignore
                                 (Ojs.call x724 "push"
                                    [|(or_string_to_js
                                         (fun (x726 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x726) x725)|])
                           | None -> ());
                          x724))|])
    let (trim : t -> string) =
      fun (x730 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x730) "trim" [||])
    let (get_length : t -> float) =
      fun (x731 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x731) "length")
    let (substr : t -> from:float -> ?length:float -> unit -> string) =
      fun (x736 : t) ->
        fun ~from:(x732 : float) ->
          fun ?length:(x733 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x737 = t_to_js x736 in
                 Ojs.call (Ojs.get_prop_ascii x737 "substr") "apply"
                   [|x737;((let x734 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x734 "push"
                                 [|(Ojs.float_to_js x732)|]);
                            (match x733 with
                             | Some x735 ->
                                 ignore
                                   (Ojs.call x734 "push"
                                      [|(Ojs.float_to_js x735)|])
                             | None -> ());
                            x734))|])
    let (valueOf : t -> string) =
      fun (x738 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x738) "valueOf" [||])
    let (get : t -> float -> string) =
      fun (x739 : t) ->
        fun (x740 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (t_to_js x739) (Ojs.float_to_js x740))
    let (to_ml : t -> string) =
      fun (x741 : t) -> Ojs.string_of_js (t_to_js x741)
    let (of_ml : string -> t) =
      fun (x742 : string) -> t_of_js (Ojs.string_to_js x742)
    let (create : ?value:any -> unit -> _String) =
      fun ?value:(x743 : any option) ->
        fun () ->
          _String_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x744 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x743 with
                 | Some x745 ->
                     ignore (Ojs.call x744 "push" [|(any_to_js x745)|])
                 | None -> ());
                x744))
    let (fromCharCode : codes:float list -> string) =
      fun ~codes:(x746 : float list) ->
        Ojs.string_of_js
          (let x749 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x749 "fromCharCode") "apply"
             [|x749;((let x747 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x748 : float) ->
                           ignore
                             (Ojs.call x747 "push" [|(Ojs.float_to_js x748)|]))
                        x746;
                      x747))|])
  end
module StringConstructor =
  struct
    type t = _StringConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x751 : Ojs.t) -> _StringConstructor_of_js x751
    and t_to_js : t -> Ojs.t =
      fun (x750 : _StringConstructor) -> _StringConstructor_to_js x750
    let (create : t -> ?value:any -> unit -> _String) =
      fun (x755 : t) ->
        fun ?value:(x752 : any option) ->
          fun () ->
            _String_of_js
              (Ojs.new_obj_arr (t_to_js x755)
                 (let x753 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x752 with
                   | Some x754 ->
                       ignore (Ojs.call x753 "push" [|(any_to_js x754)|])
                   | None -> ());
                  x753))
    let (apply : t -> ?value:any -> unit -> string) =
      fun (x759 : t) ->
        fun ?value:(x756 : any option) ->
          fun () ->
            Ojs.string_of_js
              (Ojs.call (t_to_js x759) "apply"
                 [|Ojs.null;((let x757 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x756 with
                               | Some x758 ->
                                   ignore
                                     (Ojs.call x757 "push"
                                        [|(any_to_js x758)|])
                               | None -> ());
                              x757))|])
    let (get_prototype : t -> _String) =
      fun (x760 : t) ->
        _String_of_js (Ojs.get_prop_ascii (t_to_js x760) "prototype")
    let (fromCharCode : t -> codes:float list -> string) =
      fun (x764 : t) ->
        fun ~codes:(x761 : float list) ->
          Ojs.string_of_js
            (let x765 = t_to_js x764 in
             Ojs.call (Ojs.get_prop_ascii x765 "fromCharCode") "apply"
               [|x765;((let x762 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x763 : float) ->
                             ignore
                               (Ojs.call x762 "push"
                                  [|(Ojs.float_to_js x763)|])) x761;
                        x762))|])
  end
let (string : _StringConstructor) =
  _StringConstructor_of_js (Ojs.get_prop_ascii Ojs.global "String")
module Boolean =
  struct
    type t = _Boolean
    let rec t_of_js : Ojs.t -> t = fun (x767 : Ojs.t) -> _Boolean_of_js x767
    and t_to_js : t -> Ojs.t = fun (x766 : _Boolean) -> _Boolean_to_js x766
    let (valueOf : t -> bool) =
      fun (x768 : t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js x768) "valueOf" [||])
    let (to_ml : t -> bool) = fun (x769 : t) -> Ojs.bool_of_js (t_to_js x769)
    let (of_ml : bool -> t) =
      fun (x770 : bool) -> t_of_js (Ojs.bool_to_js x770)
    let (create : ?value:any -> unit -> _Boolean) =
      fun ?value:(x771 : any option) ->
        fun () ->
          _Boolean_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x772 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x771 with
                 | Some x773 ->
                     ignore (Ojs.call x772 "push" [|(any_to_js x773)|])
                 | None -> ());
                x772))
  end
module BooleanConstructor =
  struct
    type t = _BooleanConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x775 : Ojs.t) -> _BooleanConstructor_of_js x775
    and t_to_js : t -> Ojs.t =
      fun (x774 : _BooleanConstructor) -> _BooleanConstructor_to_js x774
    let (create : t -> ?value:any -> unit -> _Boolean) =
      fun (x779 : t) ->
        fun ?value:(x776 : any option) ->
          fun () ->
            _Boolean_of_js
              (Ojs.new_obj_arr (t_to_js x779)
                 (let x777 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x776 with
                   | Some x778 ->
                       ignore (Ojs.call x777 "push" [|(any_to_js x778)|])
                   | None -> ());
                  x777))
    let (apply : t -> ?value:'T -> unit -> bool) =
      fun (x783 : t) ->
        fun ?value:(x780 : 'T option) ->
          fun () ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x783) "apply"
                 [|Ojs.null;((let x781 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x780 with
                               | Some x782 ->
                                   ignore
                                     (Ojs.call x781 "push"
                                        [|(Obj.magic x782)|])
                               | None -> ());
                              x781))|])
    let (get_prototype : t -> _Boolean) =
      fun (x784 : t) ->
        _Boolean_of_js (Ojs.get_prop_ascii (t_to_js x784) "prototype")
  end
let (boolean : _BooleanConstructor) =
  _BooleanConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Boolean")
module Number =
  struct
    type t = _Number
    let rec t_of_js : Ojs.t -> t = fun (x786 : Ojs.t) -> _Number_of_js x786
    and t_to_js : t -> Ojs.t = fun (x785 : _Number) -> _Number_to_js x785
    let (toLocaleString :
      t ->
        ?locales:string list or_string ->
          ?options:_Intl_NumberFormatOptions -> unit -> string)
      =
      fun (x794 : t) ->
        fun ?locales:(x787 : string list or_string option) ->
          fun ?options:(x788 : _Intl_NumberFormatOptions option) ->
            fun () ->
              Ojs.string_of_js
                (let x795 = t_to_js x794 in
                 Ojs.call (Ojs.get_prop_ascii x795 "toLocaleString") "apply"
                   [|x795;((let x789 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x787 with
                             | Some x791 ->
                                 ignore
                                   (Ojs.call x789 "push"
                                      [|(or_string_to_js
                                           (fun (x792 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x792) x791)|])
                             | None -> ());
                            (match x788 with
                             | Some x790 ->
                                 ignore
                                   (Ojs.call x789 "push"
                                      [|(_Intl_NumberFormatOptions_to_js x790)|])
                             | None -> ());
                            x789))|])
    let (toString : t -> ?radix:float -> unit -> string) =
      fun (x799 : t) ->
        fun ?radix:(x796 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x800 = t_to_js x799 in
               Ojs.call (Ojs.get_prop_ascii x800 "toString") "apply"
                 [|x800;((let x797 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x796 with
                           | Some x798 ->
                               ignore
                                 (Ojs.call x797 "push"
                                    [|(Ojs.float_to_js x798)|])
                           | None -> ());
                          x797))|])
    let (toFixed : t -> ?fractionDigits:float -> unit -> string) =
      fun (x804 : t) ->
        fun ?fractionDigits:(x801 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x805 = t_to_js x804 in
               Ojs.call (Ojs.get_prop_ascii x805 "toFixed") "apply"
                 [|x805;((let x802 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x801 with
                           | Some x803 ->
                               ignore
                                 (Ojs.call x802 "push"
                                    [|(Ojs.float_to_js x803)|])
                           | None -> ());
                          x802))|])
    let (toExponential : t -> ?fractionDigits:float -> unit -> string) =
      fun (x809 : t) ->
        fun ?fractionDigits:(x806 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x810 = t_to_js x809 in
               Ojs.call (Ojs.get_prop_ascii x810 "toExponential") "apply"
                 [|x810;((let x807 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x806 with
                           | Some x808 ->
                               ignore
                                 (Ojs.call x807 "push"
                                    [|(Ojs.float_to_js x808)|])
                           | None -> ());
                          x807))|])
    let (toPrecision : t -> ?precision:float -> unit -> string) =
      fun (x814 : t) ->
        fun ?precision:(x811 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x815 = t_to_js x814 in
               Ojs.call (Ojs.get_prop_ascii x815 "toPrecision") "apply"
                 [|x815;((let x812 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x811 with
                           | Some x813 ->
                               ignore
                                 (Ojs.call x812 "push"
                                    [|(Ojs.float_to_js x813)|])
                           | None -> ());
                          x812))|])
    let (valueOf : t -> float) =
      fun (x816 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x816) "valueOf" [||])
    let (to_ml : t -> float) =
      fun (x817 : t) -> Ojs.float_of_js (t_to_js x817)
    let (of_ml : float -> t) =
      fun (x818 : float) -> t_of_js (Ojs.float_to_js x818)
    let (create : ?value:any -> unit -> _Number) =
      fun ?value:(x819 : any option) ->
        fun () ->
          _Number_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x820 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x819 with
                 | Some x821 ->
                     ignore (Ojs.call x820 "push" [|(any_to_js x821)|])
                 | None -> ());
                x820))
    let (get_MAX_VALUE : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "MAX_VALUE")
    let (get_MIN_VALUE : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "MIN_VALUE")
    let (get_NaN : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (get_NEGATIVE_INFINITY : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "NEGATIVE_INFINITY")
    let (get_POSITIVE_INFINITY : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
           "POSITIVE_INFINITY")
  end
module NumberConstructor =
  struct
    type t = _NumberConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x823 : Ojs.t) -> _NumberConstructor_of_js x823
    and t_to_js : t -> Ojs.t =
      fun (x822 : _NumberConstructor) -> _NumberConstructor_to_js x822
    let (create : t -> ?value:any -> unit -> _Number) =
      fun (x827 : t) ->
        fun ?value:(x824 : any option) ->
          fun () ->
            _Number_of_js
              (Ojs.new_obj_arr (t_to_js x827)
                 (let x825 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x824 with
                   | Some x826 ->
                       ignore (Ojs.call x825 "push" [|(any_to_js x826)|])
                   | None -> ());
                  x825))
    let (apply : t -> ?value:any -> unit -> float) =
      fun (x831 : t) ->
        fun ?value:(x828 : any option) ->
          fun () ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x831) "apply"
                 [|Ojs.null;((let x829 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x828 with
                               | Some x830 ->
                                   ignore
                                     (Ojs.call x829 "push"
                                        [|(any_to_js x830)|])
                               | None -> ());
                              x829))|])
    let (get_prototype : t -> _Number) =
      fun (x832 : t) ->
        _Number_of_js (Ojs.get_prop_ascii (t_to_js x832) "prototype")
    let (get_MAX_VALUE : t -> float) =
      fun (x833 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x833) "MAX_VALUE")
    let (get_MIN_VALUE : t -> float) =
      fun (x834 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x834) "MIN_VALUE")
    let (get_NaN : t -> float) =
      fun (x835 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x835) "NaN")
    let (get_NEGATIVE_INFINITY : t -> float) =
      fun (x836 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x836) "NEGATIVE_INFINITY")
    let (get_POSITIVE_INFINITY : t -> float) =
      fun (x837 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x837) "POSITIVE_INFINITY")
  end
let (number : _NumberConstructor) =
  _NumberConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Number")
module TemplateStringsArray =
  struct
    type t = _TemplateStringsArray
    let rec t_of_js : Ojs.t -> t =
      fun (x839 : Ojs.t) -> _TemplateStringsArray_of_js x839
    and t_to_js : t -> Ojs.t =
      fun (x838 : _TemplateStringsArray) -> _TemplateStringsArray_to_js x838
    let (get_raw : t -> string list) =
      fun (x840 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x840) "raw")
    let (cast : t -> string _ReadonlyArray) =
      fun (x842 : t) -> _ReadonlyArray_of_js Ojs.string_of_js (t_to_js x842)
  end
module ImportMeta =
  struct
    type t = _ImportMeta
    let rec t_of_js : Ojs.t -> t =
      fun (x845 : Ojs.t) -> _ImportMeta_of_js x845
    and t_to_js : t -> Ojs.t =
      fun (x844 : _ImportMeta) -> _ImportMeta_to_js x844
  end
module Math =
  struct
    let (get_E : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (get_LN10 : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (get_LN2 : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (get_LOG2E : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (get_LOG10E : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (get_PI : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (get_SQRT1_2 : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT1_2")
    let (get_SQRT2 : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x846 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x846)|])
    let (acos : float -> float) =
      fun (x847 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x847)|])
    let (asin : float -> float) =
      fun (x848 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x848)|])
    let (atan : float -> float) =
      fun (x849 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x849)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x850 : float) ->
        fun ~x:(x851 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x850);(Ojs.float_to_js x851)|])
    let (ceil : float -> float) =
      fun (x852 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x852)|])
    let (cos : float -> float) =
      fun (x853 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x853)|])
    let (exp : float -> float) =
      fun (x854 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x854)|])
    let (floor : float -> float) =
      fun (x855 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x855)|])
    let (log : float -> float) =
      fun (x856 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x856)|])
    let (max : float list -> float) =
      fun (x857 : float list) ->
        Ojs.float_of_js
          (let x860 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x860 "max") "apply"
             [|x860;((let x858 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x859 : float) ->
                           ignore
                             (Ojs.call x858 "push" [|(Ojs.float_to_js x859)|]))
                        x857;
                      x858))|])
    let (min : float list -> float) =
      fun (x861 : float list) ->
        Ojs.float_of_js
          (let x864 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x864 "min") "apply"
             [|x864;((let x862 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x863 : float) ->
                           ignore
                             (Ojs.call x862 "push" [|(Ojs.float_to_js x863)|]))
                        x861;
                      x862))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x865 : float) ->
        fun ~y:(x866 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x865);(Ojs.float_to_js x866)|])
    let (random : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "random")
    let (round : float -> float) =
      fun (x867 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x867)|])
    let (sin : float -> float) =
      fun (x868 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x868)|])
    let (sqrt : float -> float) =
      fun (x869 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x869)|])
    let (tan : float -> float) =
      fun (x870 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x870)|])
  end
module Date =
  struct
    type t = _Date
    let rec t_of_js : Ojs.t -> t = fun (x872 : Ojs.t) -> _Date_of_js x872
    and t_to_js : t -> Ojs.t = fun (x871 : _Date) -> _Date_to_js x871
    let (toLocaleString :
      t ->
        ?locales:string list or_string ->
          ?options:_Intl_DateTimeFormatOptions -> unit -> string)
      =
      fun (x880 : t) ->
        fun ?locales:(x873 : string list or_string option) ->
          fun ?options:(x874 : _Intl_DateTimeFormatOptions option) ->
            fun () ->
              Ojs.string_of_js
                (let x881 = t_to_js x880 in
                 Ojs.call (Ojs.get_prop_ascii x881 "toLocaleString") "apply"
                   [|x881;((let x875 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x873 with
                             | Some x877 ->
                                 ignore
                                   (Ojs.call x875 "push"
                                      [|(or_string_to_js
                                           (fun (x878 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x878) x877)|])
                             | None -> ());
                            (match x874 with
                             | Some x876 ->
                                 ignore
                                   (Ojs.call x875 "push"
                                      [|(_Intl_DateTimeFormatOptions_to_js
                                           x876)|])
                             | None -> ());
                            x875))|])
    let (toLocaleDateString :
      t ->
        ?locales:string list or_string ->
          ?options:_Intl_DateTimeFormatOptions -> unit -> string)
      =
      fun (x889 : t) ->
        fun ?locales:(x882 : string list or_string option) ->
          fun ?options:(x883 : _Intl_DateTimeFormatOptions option) ->
            fun () ->
              Ojs.string_of_js
                (let x890 = t_to_js x889 in
                 Ojs.call (Ojs.get_prop_ascii x890 "toLocaleDateString")
                   "apply"
                   [|x890;((let x884 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x882 with
                             | Some x886 ->
                                 ignore
                                   (Ojs.call x884 "push"
                                      [|(or_string_to_js
                                           (fun (x887 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x887) x886)|])
                             | None -> ());
                            (match x883 with
                             | Some x885 ->
                                 ignore
                                   (Ojs.call x884 "push"
                                      [|(_Intl_DateTimeFormatOptions_to_js
                                           x885)|])
                             | None -> ());
                            x884))|])
    let (toLocaleTimeString :
      t ->
        ?locales:string list or_string ->
          ?options:_Intl_DateTimeFormatOptions -> unit -> string)
      =
      fun (x898 : t) ->
        fun ?locales:(x891 : string list or_string option) ->
          fun ?options:(x892 : _Intl_DateTimeFormatOptions option) ->
            fun () ->
              Ojs.string_of_js
                (let x899 = t_to_js x898 in
                 Ojs.call (Ojs.get_prop_ascii x899 "toLocaleTimeString")
                   "apply"
                   [|x899;((let x893 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x891 with
                             | Some x895 ->
                                 ignore
                                   (Ojs.call x893 "push"
                                      [|(or_string_to_js
                                           (fun (x896 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x896) x895)|])
                             | None -> ());
                            (match x892 with
                             | Some x894 ->
                                 ignore
                                   (Ojs.call x893 "push"
                                      [|(_Intl_DateTimeFormatOptions_to_js
                                           x894)|])
                             | None -> ());
                            x893))|])
    let (toString : t -> string) =
      fun (x900 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x900) "toString" [||])
    let (toDateString : t -> string) =
      fun (x901 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x901) "toDateString" [||])
    let (toTimeString : t -> string) =
      fun (x902 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x902) "toTimeString" [||])
    let (toLocaleString' : t -> string) =
      fun (x903 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x903) "toLocaleString" [||])
    let (toLocaleDateString' : t -> string) =
      fun (x904 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x904) "toLocaleDateString" [||])
    let (toLocaleTimeString' : t -> string) =
      fun (x905 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x905) "toLocaleTimeString" [||])
    let (valueOf : t -> float) =
      fun (x906 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x906) "valueOf" [||])
    let (getTime : t -> float) =
      fun (x907 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x907) "getTime" [||])
    let (getFullYear : t -> float) =
      fun (x908 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x908) "getFullYear" [||])
    let (getUTCFullYear : t -> float) =
      fun (x909 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x909) "getUTCFullYear" [||])
    let (getMonth : t -> float) =
      fun (x910 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x910) "getMonth" [||])
    let (getUTCMonth : t -> float) =
      fun (x911 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x911) "getUTCMonth" [||])
    let (getDate : t -> float) =
      fun (x912 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x912) "getDate" [||])
    let (getUTCDate : t -> float) =
      fun (x913 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x913) "getUTCDate" [||])
    let (getDay : t -> float) =
      fun (x914 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x914) "getDay" [||])
    let (getUTCDay : t -> float) =
      fun (x915 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x915) "getUTCDay" [||])
    let (getHours : t -> float) =
      fun (x916 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x916) "getHours" [||])
    let (getUTCHours : t -> float) =
      fun (x917 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x917) "getUTCHours" [||])
    let (getMinutes : t -> float) =
      fun (x918 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x918) "getMinutes" [||])
    let (getUTCMinutes : t -> float) =
      fun (x919 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x919) "getUTCMinutes" [||])
    let (getSeconds : t -> float) =
      fun (x920 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x920) "getSeconds" [||])
    let (getUTCSeconds : t -> float) =
      fun (x921 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x921) "getUTCSeconds" [||])
    let (getMilliseconds : t -> float) =
      fun (x922 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x922) "getMilliseconds" [||])
    let (getUTCMilliseconds : t -> float) =
      fun (x923 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x923) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : t -> float) =
      fun (x924 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x924) "getTimezoneOffset" [||])
    let (setTime : t -> time:float -> float) =
      fun (x926 : t) ->
        fun ~time:(x925 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x926) "setTime" [|(Ojs.float_to_js x925)|])
    let (setMilliseconds : t -> ms:float -> float) =
      fun (x928 : t) ->
        fun ~ms:(x927 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x928) "setMilliseconds"
               [|(Ojs.float_to_js x927)|])
    let (setUTCMilliseconds : t -> ms:float -> float) =
      fun (x930 : t) ->
        fun ~ms:(x929 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x930) "setUTCMilliseconds"
               [|(Ojs.float_to_js x929)|])
    let (setSeconds : t -> sec:float -> ?ms:float -> unit -> float) =
      fun (x935 : t) ->
        fun ~sec:(x931 : float) ->
          fun ?ms:(x932 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x936 = t_to_js x935 in
                 Ojs.call (Ojs.get_prop_ascii x936 "setSeconds") "apply"
                   [|x936;((let x933 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x933 "push"
                                 [|(Ojs.float_to_js x931)|]);
                            (match x932 with
                             | Some x934 ->
                                 ignore
                                   (Ojs.call x933 "push"
                                      [|(Ojs.float_to_js x934)|])
                             | None -> ());
                            x933))|])
    let (setUTCSeconds : t -> sec:float -> ?ms:float -> unit -> float) =
      fun (x941 : t) ->
        fun ~sec:(x937 : float) ->
          fun ?ms:(x938 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x942 = t_to_js x941 in
                 Ojs.call (Ojs.get_prop_ascii x942 "setUTCSeconds") "apply"
                   [|x942;((let x939 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x939 "push"
                                 [|(Ojs.float_to_js x937)|]);
                            (match x938 with
                             | Some x940 ->
                                 ignore
                                   (Ojs.call x939 "push"
                                      [|(Ojs.float_to_js x940)|])
                             | None -> ());
                            x939))|])
    let (setMinutes :
      t -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x949 : t) ->
        fun ~min:(x943 : float) ->
          fun ?sec:(x944 : float option) ->
            fun ?ms:(x945 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x950 = t_to_js x949 in
                   Ojs.call (Ojs.get_prop_ascii x950 "setMinutes") "apply"
                     [|x950;((let x946 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x946 "push"
                                   [|(Ojs.float_to_js x943)|]);
                              (match x944 with
                               | Some x948 ->
                                   ignore
                                     (Ojs.call x946 "push"
                                        [|(Ojs.float_to_js x948)|])
                               | None -> ());
                              (match x945 with
                               | Some x947 ->
                                   ignore
                                     (Ojs.call x946 "push"
                                        [|(Ojs.float_to_js x947)|])
                               | None -> ());
                              x946))|])
    let (setUTCMinutes :
      t -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x957 : t) ->
        fun ~min:(x951 : float) ->
          fun ?sec:(x952 : float option) ->
            fun ?ms:(x953 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x958 = t_to_js x957 in
                   Ojs.call (Ojs.get_prop_ascii x958 "setUTCMinutes") "apply"
                     [|x958;((let x954 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x954 "push"
                                   [|(Ojs.float_to_js x951)|]);
                              (match x952 with
                               | Some x956 ->
                                   ignore
                                     (Ojs.call x954 "push"
                                        [|(Ojs.float_to_js x956)|])
                               | None -> ());
                              (match x953 with
                               | Some x955 ->
                                   ignore
                                     (Ojs.call x954 "push"
                                        [|(Ojs.float_to_js x955)|])
                               | None -> ());
                              x954))|])
    let (setHours :
      t ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x967 : t) ->
        fun ~hours:(x959 : float) ->
          fun ?min:(x960 : float option) ->
            fun ?sec:(x961 : float option) ->
              fun ?ms:(x962 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x968 = t_to_js x967 in
                     Ojs.call (Ojs.get_prop_ascii x968 "setHours") "apply"
                       [|x968;((let x963 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x963 "push"
                                     [|(Ojs.float_to_js x959)|]);
                                (match x960 with
                                 | Some x966 ->
                                     ignore
                                       (Ojs.call x963 "push"
                                          [|(Ojs.float_to_js x966)|])
                                 | None -> ());
                                (match x961 with
                                 | Some x965 ->
                                     ignore
                                       (Ojs.call x963 "push"
                                          [|(Ojs.float_to_js x965)|])
                                 | None -> ());
                                (match x962 with
                                 | Some x964 ->
                                     ignore
                                       (Ojs.call x963 "push"
                                          [|(Ojs.float_to_js x964)|])
                                 | None -> ());
                                x963))|])
    let (setUTCHours :
      t ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x977 : t) ->
        fun ~hours:(x969 : float) ->
          fun ?min:(x970 : float option) ->
            fun ?sec:(x971 : float option) ->
              fun ?ms:(x972 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x978 = t_to_js x977 in
                     Ojs.call (Ojs.get_prop_ascii x978 "setUTCHours") "apply"
                       [|x978;((let x973 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x973 "push"
                                     [|(Ojs.float_to_js x969)|]);
                                (match x970 with
                                 | Some x976 ->
                                     ignore
                                       (Ojs.call x973 "push"
                                          [|(Ojs.float_to_js x976)|])
                                 | None -> ());
                                (match x971 with
                                 | Some x975 ->
                                     ignore
                                       (Ojs.call x973 "push"
                                          [|(Ojs.float_to_js x975)|])
                                 | None -> ());
                                (match x972 with
                                 | Some x974 ->
                                     ignore
                                       (Ojs.call x973 "push"
                                          [|(Ojs.float_to_js x974)|])
                                 | None -> ());
                                x973))|])
    let (setDate : t -> date:float -> float) =
      fun (x980 : t) ->
        fun ~date:(x979 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x980) "setDate" [|(Ojs.float_to_js x979)|])
    let (setUTCDate : t -> date:float -> float) =
      fun (x982 : t) ->
        fun ~date:(x981 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x982) "setUTCDate" [|(Ojs.float_to_js x981)|])
    let (setMonth : t -> month:float -> ?date:float -> unit -> float) =
      fun (x987 : t) ->
        fun ~month:(x983 : float) ->
          fun ?date:(x984 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x988 = t_to_js x987 in
                 Ojs.call (Ojs.get_prop_ascii x988 "setMonth") "apply"
                   [|x988;((let x985 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x985 "push"
                                 [|(Ojs.float_to_js x983)|]);
                            (match x984 with
                             | Some x986 ->
                                 ignore
                                   (Ojs.call x985 "push"
                                      [|(Ojs.float_to_js x986)|])
                             | None -> ());
                            x985))|])
    let (setUTCMonth : t -> month:float -> ?date:float -> unit -> float) =
      fun (x993 : t) ->
        fun ~month:(x989 : float) ->
          fun ?date:(x990 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x994 = t_to_js x993 in
                 Ojs.call (Ojs.get_prop_ascii x994 "setUTCMonth") "apply"
                   [|x994;((let x991 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x991 "push"
                                 [|(Ojs.float_to_js x989)|]);
                            (match x990 with
                             | Some x992 ->
                                 ignore
                                   (Ojs.call x991 "push"
                                      [|(Ojs.float_to_js x992)|])
                             | None -> ());
                            x991))|])
    let (setFullYear :
      t -> year:float -> ?month:float -> ?date:float -> unit -> float) =
      fun (x1001 : t) ->
        fun ~year:(x995 : float) ->
          fun ?month:(x996 : float option) ->
            fun ?date:(x997 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1002 = t_to_js x1001 in
                   Ojs.call (Ojs.get_prop_ascii x1002 "setFullYear") "apply"
                     [|x1002;((let x998 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x998 "push"
                                    [|(Ojs.float_to_js x995)|]);
                               (match x996 with
                                | Some x1000 ->
                                    ignore
                                      (Ojs.call x998 "push"
                                         [|(Ojs.float_to_js x1000)|])
                                | None -> ());
                               (match x997 with
                                | Some x999 ->
                                    ignore
                                      (Ojs.call x998 "push"
                                         [|(Ojs.float_to_js x999)|])
                                | None -> ());
                               x998))|])
    let (setUTCFullYear :
      t -> year:float -> ?month:float -> ?date:float -> unit -> float) =
      fun (x1009 : t) ->
        fun ~year:(x1003 : float) ->
          fun ?month:(x1004 : float option) ->
            fun ?date:(x1005 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1010 = t_to_js x1009 in
                   Ojs.call (Ojs.get_prop_ascii x1010 "setUTCFullYear")
                     "apply"
                     [|x1010;((let x1006 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1006 "push"
                                    [|(Ojs.float_to_js x1003)|]);
                               (match x1004 with
                                | Some x1008 ->
                                    ignore
                                      (Ojs.call x1006 "push"
                                         [|(Ojs.float_to_js x1008)|])
                                | None -> ());
                               (match x1005 with
                                | Some x1007 ->
                                    ignore
                                      (Ojs.call x1006 "push"
                                         [|(Ojs.float_to_js x1007)|])
                                | None -> ());
                               x1006))|])
    let (toUTCString : t -> string) =
      fun (x1011 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1011) "toUTCString" [||])
    let (toISOString : t -> string) =
      fun (x1012 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x1012) "toISOString" [||])
    let (toJSON : t -> ?key:any -> unit -> string) =
      fun (x1016 : t) ->
        fun ?key:(x1013 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x1017 = t_to_js x1016 in
               Ojs.call (Ojs.get_prop_ascii x1017 "toJSON") "apply"
                 [|x1017;((let x1014 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1013 with
                            | Some x1015 ->
                                ignore
                                  (Ojs.call x1014 "push"
                                     [|(any_to_js x1015)|])
                            | None -> ());
                           x1014))|])
    let (create : unit -> _Date) =
      fun () ->
        _Date_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create' : string or_number -> _Date) =
      fun (x1018 : string or_number) ->
        _Date_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|(or_number_to_js Ojs.string_to_js x1018)|])
    let (create'' :
      t ->
        year:float ->
          month:float ->
            ?date:float ->
              ?hours:float ->
                ?minutes:float ->
                  ?seconds:float -> ?ms:float -> unit -> _Date)
      =
      fun (x1020 : t) ->
        fun ~year:(x1021 : float) ->
          fun ~month:(x1022 : float) ->
            fun ?date:(x1023 : float option) ->
              fun ?hours:(x1024 : float option) ->
                fun ?minutes:(x1025 : float option) ->
                  fun ?seconds:(x1026 : float option) ->
                    fun ?ms:(x1027 : float option) ->
                      fun () ->
                        _Date_of_js
                          (Ojs.new_obj_arr
                             (Ojs.get_prop_ascii Ojs.global "Date")
                             (let x1028 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1028 "push" [|(t_to_js x1020)|]);
                              ignore
                                (Ojs.call x1028 "push"
                                   [|(Ojs.float_to_js x1021)|]);
                              ignore
                                (Ojs.call x1028 "push"
                                   [|(Ojs.float_to_js x1022)|]);
                              (match x1023 with
                               | Some x1033 ->
                                   ignore
                                     (Ojs.call x1028 "push"
                                        [|(Ojs.float_to_js x1033)|])
                               | None -> ());
                              (match x1024 with
                               | Some x1032 ->
                                   ignore
                                     (Ojs.call x1028 "push"
                                        [|(Ojs.float_to_js x1032)|])
                               | None -> ());
                              (match x1025 with
                               | Some x1031 ->
                                   ignore
                                     (Ojs.call x1028 "push"
                                        [|(Ojs.float_to_js x1031)|])
                               | None -> ());
                              (match x1026 with
                               | Some x1030 ->
                                   ignore
                                     (Ojs.call x1028 "push"
                                        [|(Ojs.float_to_js x1030)|])
                               | None -> ());
                              (match x1027 with
                               | Some x1029 ->
                                   ignore
                                     (Ojs.call x1028 "push"
                                        [|(Ojs.float_to_js x1029)|])
                               | None -> ());
                              x1028))
    let (parse : string -> float) =
      fun (x1034 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x1034)|])
    let (utc :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x1035 : float) ->
        fun ~month:(x1036 : float) ->
          fun ?date:(x1037 : float option) ->
            fun ?hours:(x1038 : float option) ->
              fun ?minutes:(x1039 : float option) ->
                fun ?seconds:(x1040 : float option) ->
                  fun ?ms:(x1041 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x1048 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x1048 "UTC") "apply"
                           [|x1048;((let x1042 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x1042 "push"
                                          [|(Ojs.float_to_js x1035)|]);
                                     ignore
                                       (Ojs.call x1042 "push"
                                          [|(Ojs.float_to_js x1036)|]);
                                     (match x1037 with
                                      | Some x1047 ->
                                          ignore
                                            (Ojs.call x1042 "push"
                                               [|(Ojs.float_to_js x1047)|])
                                      | None -> ());
                                     (match x1038 with
                                      | Some x1046 ->
                                          ignore
                                            (Ojs.call x1042 "push"
                                               [|(Ojs.float_to_js x1046)|])
                                      | None -> ());
                                     (match x1039 with
                                      | Some x1045 ->
                                          ignore
                                            (Ojs.call x1042 "push"
                                               [|(Ojs.float_to_js x1045)|])
                                      | None -> ());
                                     (match x1040 with
                                      | Some x1044 ->
                                          ignore
                                            (Ojs.call x1042 "push"
                                               [|(Ojs.float_to_js x1044)|])
                                      | None -> ());
                                     (match x1041 with
                                      | Some x1043 ->
                                          ignore
                                            (Ojs.call x1042 "push"
                                               [|(Ojs.float_to_js x1043)|])
                                      | None -> ());
                                     x1042))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
  end
module DateConstructor =
  struct
    type t = _DateConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1050 : Ojs.t) -> _DateConstructor_of_js x1050
    and t_to_js : t -> Ojs.t =
      fun (x1049 : _DateConstructor) -> _DateConstructor_to_js x1049
    let (create : t -> _Date) =
      fun (x1051 : t) -> _Date_of_js (Ojs.new_obj (t_to_js x1051) [||])
    let (create' : t -> string or_number -> _Date) =
      fun (x1054 : t) ->
        fun (x1052 : string or_number) ->
          _Date_of_js
            (Ojs.new_obj (t_to_js x1054)
               [|(or_number_to_js Ojs.string_to_js x1052)|])
    let (create'' :
      t ->
        year:float ->
          month:float ->
            ?date:float ->
              ?hours:float ->
                ?minutes:float ->
                  ?seconds:float -> ?ms:float -> unit -> _Date)
      =
      fun (x1068 : t) ->
        fun ~year:(x1055 : float) ->
          fun ~month:(x1056 : float) ->
            fun ?date:(x1057 : float option) ->
              fun ?hours:(x1058 : float option) ->
                fun ?minutes:(x1059 : float option) ->
                  fun ?seconds:(x1060 : float option) ->
                    fun ?ms:(x1061 : float option) ->
                      fun () ->
                        _Date_of_js
                          (Ojs.new_obj_arr (t_to_js x1068)
                             (let x1062 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1062 "push"
                                   [|(Ojs.float_to_js x1055)|]);
                              ignore
                                (Ojs.call x1062 "push"
                                   [|(Ojs.float_to_js x1056)|]);
                              (match x1057 with
                               | Some x1067 ->
                                   ignore
                                     (Ojs.call x1062 "push"
                                        [|(Ojs.float_to_js x1067)|])
                               | None -> ());
                              (match x1058 with
                               | Some x1066 ->
                                   ignore
                                     (Ojs.call x1062 "push"
                                        [|(Ojs.float_to_js x1066)|])
                               | None -> ());
                              (match x1059 with
                               | Some x1065 ->
                                   ignore
                                     (Ojs.call x1062 "push"
                                        [|(Ojs.float_to_js x1065)|])
                               | None -> ());
                              (match x1060 with
                               | Some x1064 ->
                                   ignore
                                     (Ojs.call x1062 "push"
                                        [|(Ojs.float_to_js x1064)|])
                               | None -> ());
                              (match x1061 with
                               | Some x1063 ->
                                   ignore
                                     (Ojs.call x1062 "push"
                                        [|(Ojs.float_to_js x1063)|])
                               | None -> ());
                              x1062))
    let (apply : t -> string) =
      fun (x1069 : t) -> Ojs.string_of_js (Ojs.apply (t_to_js x1069) [||])
    let (get_prototype : t -> _Date) =
      fun (x1070 : t) ->
        _Date_of_js (Ojs.get_prop_ascii (t_to_js x1070) "prototype")
    let (parse : t -> string -> float) =
      fun (x1072 : t) ->
        fun (x1071 : string) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x1072) "parse" [|(Ojs.string_to_js x1071)|])
    let (utc :
      t ->
        year:float ->
          month:float ->
            ?date:float ->
              ?hours:float ->
                ?minutes:float ->
                  ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun (x1086 : t) ->
        fun ~year:(x1073 : float) ->
          fun ~month:(x1074 : float) ->
            fun ?date:(x1075 : float option) ->
              fun ?hours:(x1076 : float option) ->
                fun ?minutes:(x1077 : float option) ->
                  fun ?seconds:(x1078 : float option) ->
                    fun ?ms:(x1079 : float option) ->
                      fun () ->
                        Ojs.float_of_js
                          (let x1087 = t_to_js x1086 in
                           Ojs.call (Ojs.get_prop_ascii x1087 "UTC") "apply"
                             [|x1087;((let x1080 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       ignore
                                         (Ojs.call x1080 "push"
                                            [|(Ojs.float_to_js x1073)|]);
                                       ignore
                                         (Ojs.call x1080 "push"
                                            [|(Ojs.float_to_js x1074)|]);
                                       (match x1075 with
                                        | Some x1085 ->
                                            ignore
                                              (Ojs.call x1080 "push"
                                                 [|(Ojs.float_to_js x1085)|])
                                        | None -> ());
                                       (match x1076 with
                                        | Some x1084 ->
                                            ignore
                                              (Ojs.call x1080 "push"
                                                 [|(Ojs.float_to_js x1084)|])
                                        | None -> ());
                                       (match x1077 with
                                        | Some x1083 ->
                                            ignore
                                              (Ojs.call x1080 "push"
                                                 [|(Ojs.float_to_js x1083)|])
                                        | None -> ());
                                       (match x1078 with
                                        | Some x1082 ->
                                            ignore
                                              (Ojs.call x1080 "push"
                                                 [|(Ojs.float_to_js x1082)|])
                                        | None -> ());
                                       (match x1079 with
                                        | Some x1081 ->
                                            ignore
                                              (Ojs.call x1080 "push"
                                                 [|(Ojs.float_to_js x1081)|])
                                        | None -> ());
                                       x1080))|])
    let (now : t -> float) =
      fun (x1088 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x1088) "now" [||])
  end
let (date : _DateConstructor) =
  _DateConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Date")
module RegExpMatchArray =
  struct
    type t = _RegExpMatchArray
    let rec t_of_js : Ojs.t -> t =
      fun (x1090 : Ojs.t) -> _RegExpMatchArray_of_js x1090
    and t_to_js : t -> Ojs.t =
      fun (x1089 : _RegExpMatchArray) -> _RegExpMatchArray_to_js x1089
    let (get_index : t -> float) =
      fun (x1091 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1091) "index")
    let (set_index : t -> float -> unit) =
      fun (x1092 : t) ->
        fun (x1093 : float) ->
          Ojs.set_prop_ascii (t_to_js x1092) "index" (Ojs.float_to_js x1093)
    let (get_input : t -> string) =
      fun (x1094 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1094) "input")
    let (set_input : t -> string -> unit) =
      fun (x1095 : t) ->
        fun (x1096 : string) ->
          Ojs.set_prop_ascii (t_to_js x1095) "input" (Ojs.string_to_js x1096)
    let (cast : t -> string _Array) =
      fun (x1097 : t) -> _Array_of_js Ojs.string_of_js (t_to_js x1097)
  end
module RegExpExecArray =
  struct
    type t = _RegExpExecArray
    let rec t_of_js : Ojs.t -> t =
      fun (x1100 : Ojs.t) -> _RegExpExecArray_of_js x1100
    and t_to_js : t -> Ojs.t =
      fun (x1099 : _RegExpExecArray) -> _RegExpExecArray_to_js x1099
    let (get_index : t -> float) =
      fun (x1101 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1101) "index")
    let (set_index : t -> float -> unit) =
      fun (x1102 : t) ->
        fun (x1103 : float) ->
          Ojs.set_prop_ascii (t_to_js x1102) "index" (Ojs.float_to_js x1103)
    let (get_input : t -> string) =
      fun (x1104 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1104) "input")
    let (set_input : t -> string -> unit) =
      fun (x1105 : t) ->
        fun (x1106 : string) ->
          Ojs.set_prop_ascii (t_to_js x1105) "input" (Ojs.string_to_js x1106)
    let (cast : t -> string _Array) =
      fun (x1107 : t) -> _Array_of_js Ojs.string_of_js (t_to_js x1107)
  end
module RegExp =
  struct
    type t = _RegExp
    let rec t_of_js : Ojs.t -> t = fun (x1110 : Ojs.t) -> _RegExp_of_js x1110
    and t_to_js : t -> Ojs.t = fun (x1109 : _RegExp) -> _RegExp_to_js x1109
    let (exec : t -> string:string -> _RegExpExecArray or_null) =
      fun (x1112 : t) ->
        fun ~string:(x1111 : string) ->
          or_null_of_js _RegExpExecArray_of_js
            (Ojs.call (t_to_js x1112) "exec" [|(Ojs.string_to_js x1111)|])
    let (test : t -> string:string -> bool) =
      fun (x1115 : t) ->
        fun ~string:(x1114 : string) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x1115) "test" [|(Ojs.string_to_js x1114)|])
    let (get_source : t -> string) =
      fun (x1116 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1116) "source")
    let (get_global : t -> bool) =
      fun (x1117 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1117) "global")
    let (get_ignoreCase : t -> bool) =
      fun (x1118 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1118) "ignoreCase")
    let (get_multiline : t -> bool) =
      fun (x1119 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1119) "multiline")
    let (get_lastIndex : t -> float) =
      fun (x1120 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x1120) "lastIndex")
    let (set_lastIndex : t -> float -> unit) =
      fun (x1121 : t) ->
        fun (x1122 : float) ->
          Ojs.set_prop_ascii (t_to_js x1121) "lastIndex"
            (Ojs.float_to_js x1122)
    let (compile : t -> t) =
      fun (x1123 : t) -> t_of_js (Ojs.call (t_to_js x1123) "compile" [||])
    let (create : pattern:_RegExp or_string -> _RegExp) =
      fun ~pattern:(x1124 : _RegExp or_string) ->
        _RegExp_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|(or_string_to_js _RegExp_to_js x1124)|])
    let (create' : pattern:string -> ?flags:string -> unit -> _RegExp) =
      fun ~pattern:(x1126 : string) ->
        fun ?flags:(x1127 : string option) ->
          fun () ->
            _RegExp_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1128 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1128 "push" [|(Ojs.string_to_js x1126)|]);
                  (match x1127 with
                   | Some x1129 ->
                       ignore
                         (Ojs.call x1128 "push" [|(Ojs.string_to_js x1129)|])
                   | None -> ());
                  x1128))
    let (get__1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$1" [||])
    let (set__1 : string -> unit) =
      fun (x1130 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$1"
             [|(Ojs.string_to_js x1130)|])
    let (get__2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$2" [||])
    let (set__2 : string -> unit) =
      fun (x1131 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$2"
             [|(Ojs.string_to_js x1131)|])
    let (get__3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$3" [||])
    let (set__3 : string -> unit) =
      fun (x1132 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$3"
             [|(Ojs.string_to_js x1132)|])
    let (get__4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$4" [||])
    let (set__4 : string -> unit) =
      fun (x1133 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$4"
             [|(Ojs.string_to_js x1133)|])
    let (get__5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$5" [||])
    let (set__5 : string -> unit) =
      fun (x1134 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$5"
             [|(Ojs.string_to_js x1134)|])
    let (get__6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$6" [||])
    let (set__6 : string -> unit) =
      fun (x1135 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$6"
             [|(Ojs.string_to_js x1135)|])
    let (get__7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$7" [||])
    let (set__7 : string -> unit) =
      fun (x1136 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$7"
             [|(Ojs.string_to_js x1136)|])
    let (get__8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$8" [||])
    let (set__8 : string -> unit) =
      fun (x1137 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$8"
             [|(Ojs.string_to_js x1137)|])
    let (get__9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$9" [||])
    let (set__9 : string -> unit) =
      fun (x1138 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "$9"
             [|(Ojs.string_to_js x1138)|])
    let (get_lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "lastMatch" [||])
    let (set_lastMatch : string -> unit) =
      fun (x1139 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "lastMatch"
             [|(Ojs.string_to_js x1139)|])
  end
module RegExpConstructor =
  struct
    type t = _RegExpConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1141 : Ojs.t) -> _RegExpConstructor_of_js x1141
    and t_to_js : t -> Ojs.t =
      fun (x1140 : _RegExpConstructor) -> _RegExpConstructor_to_js x1140
    let (create : t -> pattern:_RegExp or_string -> _RegExp) =
      fun (x1144 : t) ->
        fun ~pattern:(x1142 : _RegExp or_string) ->
          _RegExp_of_js
            (Ojs.new_obj (t_to_js x1144)
               [|(or_string_to_js _RegExp_to_js x1142)|])
    let (create' : t -> pattern:string -> ?flags:string -> unit -> _RegExp) =
      fun (x1149 : t) ->
        fun ~pattern:(x1145 : string) ->
          fun ?flags:(x1146 : string option) ->
            fun () ->
              _RegExp_of_js
                (Ojs.new_obj_arr (t_to_js x1149)
                   (let x1147 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x1147 "push" [|(Ojs.string_to_js x1145)|]);
                    (match x1146 with
                     | Some x1148 ->
                         ignore
                           (Ojs.call x1147 "push"
                              [|(Ojs.string_to_js x1148)|])
                     | None -> ());
                    x1147))
    let (apply : t -> pattern:_RegExp or_string -> _RegExp) =
      fun (x1152 : t) ->
        fun ~pattern:(x1150 : _RegExp or_string) ->
          _RegExp_of_js
            (Ojs.apply (t_to_js x1152)
               [|(or_string_to_js _RegExp_to_js x1150)|])
    let (apply' : t -> pattern:string -> ?flags:string -> unit -> _RegExp) =
      fun (x1157 : t) ->
        fun ~pattern:(x1153 : string) ->
          fun ?flags:(x1154 : string option) ->
            fun () ->
              _RegExp_of_js
                (Ojs.call (t_to_js x1157) "apply"
                   [|Ojs.null;((let x1155 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x1155 "push"
                                     [|(Ojs.string_to_js x1153)|]);
                                (match x1154 with
                                 | Some x1156 ->
                                     ignore
                                       (Ojs.call x1155 "push"
                                          [|(Ojs.string_to_js x1156)|])
                                 | None -> ());
                                x1155))|])
    let (get_prototype : t -> _RegExp) =
      fun (x1158 : t) ->
        _RegExp_of_js (Ojs.get_prop_ascii (t_to_js x1158) "prototype")
    let (get__1 : t -> string) =
      fun (x1159 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1159) "$1")
    let (set__1 : t -> string -> unit) =
      fun (x1160 : t) ->
        fun (x1161 : string) ->
          Ojs.set_prop_ascii (t_to_js x1160) "$1" (Ojs.string_to_js x1161)
    let (get__2 : t -> string) =
      fun (x1162 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1162) "$2")
    let (set__2 : t -> string -> unit) =
      fun (x1163 : t) ->
        fun (x1164 : string) ->
          Ojs.set_prop_ascii (t_to_js x1163) "$2" (Ojs.string_to_js x1164)
    let (get__3 : t -> string) =
      fun (x1165 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1165) "$3")
    let (set__3 : t -> string -> unit) =
      fun (x1166 : t) ->
        fun (x1167 : string) ->
          Ojs.set_prop_ascii (t_to_js x1166) "$3" (Ojs.string_to_js x1167)
    let (get__4 : t -> string) =
      fun (x1168 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1168) "$4")
    let (set__4 : t -> string -> unit) =
      fun (x1169 : t) ->
        fun (x1170 : string) ->
          Ojs.set_prop_ascii (t_to_js x1169) "$4" (Ojs.string_to_js x1170)
    let (get__5 : t -> string) =
      fun (x1171 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1171) "$5")
    let (set__5 : t -> string -> unit) =
      fun (x1172 : t) ->
        fun (x1173 : string) ->
          Ojs.set_prop_ascii (t_to_js x1172) "$5" (Ojs.string_to_js x1173)
    let (get__6 : t -> string) =
      fun (x1174 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1174) "$6")
    let (set__6 : t -> string -> unit) =
      fun (x1175 : t) ->
        fun (x1176 : string) ->
          Ojs.set_prop_ascii (t_to_js x1175) "$6" (Ojs.string_to_js x1176)
    let (get__7 : t -> string) =
      fun (x1177 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1177) "$7")
    let (set__7 : t -> string -> unit) =
      fun (x1178 : t) ->
        fun (x1179 : string) ->
          Ojs.set_prop_ascii (t_to_js x1178) "$7" (Ojs.string_to_js x1179)
    let (get__8 : t -> string) =
      fun (x1180 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1180) "$8")
    let (set__8 : t -> string -> unit) =
      fun (x1181 : t) ->
        fun (x1182 : string) ->
          Ojs.set_prop_ascii (t_to_js x1181) "$8" (Ojs.string_to_js x1182)
    let (get__9 : t -> string) =
      fun (x1183 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1183) "$9")
    let (set__9 : t -> string -> unit) =
      fun (x1184 : t) ->
        fun (x1185 : string) ->
          Ojs.set_prop_ascii (t_to_js x1184) "$9" (Ojs.string_to_js x1185)
    let (get_lastMatch : t -> string) =
      fun (x1186 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1186) "lastMatch")
    let (set_lastMatch : t -> string -> unit) =
      fun (x1187 : t) ->
        fun (x1188 : string) ->
          Ojs.set_prop_ascii (t_to_js x1187) "lastMatch"
            (Ojs.string_to_js x1188)
  end
let (regExp : _RegExpConstructor) =
  _RegExpConstructor_of_js (Ojs.get_prop_ascii Ojs.global "RegExp")
module Error =
  struct
    type t = _Error
    let rec t_of_js : Ojs.t -> t = fun (x1190 : Ojs.t) -> _Error_of_js x1190
    and t_to_js : t -> Ojs.t = fun (x1189 : _Error) -> _Error_to_js x1189
    let (get_name : t -> string) =
      fun (x1191 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1191) "name")
    let (set_name : t -> string -> unit) =
      fun (x1192 : t) ->
        fun (x1193 : string) ->
          Ojs.set_prop_ascii (t_to_js x1192) "name" (Ojs.string_to_js x1193)
    let (get_message : t -> string) =
      fun (x1194 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1194) "message")
    let (set_message : t -> string -> unit) =
      fun (x1195 : t) ->
        fun (x1196 : string) ->
          Ojs.set_prop_ascii (t_to_js x1195) "message"
            (Ojs.string_to_js x1196)
    let (get_stack : t -> string) =
      fun (x1197 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x1197) "stack")
    let (set_stack : t -> string -> unit) =
      fun (x1198 : t) ->
        fun (x1199 : string) ->
          Ojs.set_prop_ascii (t_to_js x1198) "stack" (Ojs.string_to_js x1199)
    let (create : ?message:string -> unit -> _Error) =
      fun ?message:(x1200 : string option) ->
        fun () ->
          _Error_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x1201 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1200 with
                 | Some x1202 ->
                     ignore
                       (Ojs.call x1201 "push" [|(Ojs.string_to_js x1202)|])
                 | None -> ());
                x1201))
  end
module ErrorConstructor =
  struct
    type t = _ErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1204 : Ojs.t) -> _ErrorConstructor_of_js x1204
    and t_to_js : t -> Ojs.t =
      fun (x1203 : _ErrorConstructor) -> _ErrorConstructor_to_js x1203
    let (create : t -> ?message:string -> unit -> _Error) =
      fun (x1208 : t) ->
        fun ?message:(x1205 : string option) ->
          fun () ->
            _Error_of_js
              (Ojs.new_obj_arr (t_to_js x1208)
                 (let x1206 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1205 with
                   | Some x1207 ->
                       ignore
                         (Ojs.call x1206 "push" [|(Ojs.string_to_js x1207)|])
                   | None -> ());
                  x1206))
    let (apply : t -> ?message:string -> unit -> _Error) =
      fun (x1212 : t) ->
        fun ?message:(x1209 : string option) ->
          fun () ->
            _Error_of_js
              (Ojs.call (t_to_js x1212) "apply"
                 [|Ojs.null;((let x1210 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1209 with
                               | Some x1211 ->
                                   ignore
                                     (Ojs.call x1210 "push"
                                        [|(Ojs.string_to_js x1211)|])
                               | None -> ());
                              x1210))|])
    let (get_prototype : t -> _Error) =
      fun (x1213 : t) ->
        _Error_of_js (Ojs.get_prop_ascii (t_to_js x1213) "prototype")
  end
let (error : _ErrorConstructor) =
  _ErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Error")
module EvalError =
  struct
    type t = _EvalError
    let rec t_of_js : Ojs.t -> t =
      fun (x1215 : Ojs.t) -> _EvalError_of_js x1215
    and t_to_js : t -> Ojs.t =
      fun (x1214 : _EvalError) -> _EvalError_to_js x1214
    let (cast : t -> _Error) =
      fun (x1216 : t) -> _Error_of_js (t_to_js x1216)
    let (create : ?message:string -> unit -> _EvalError) =
      fun ?message:(x1217 : string option) ->
        fun () ->
          _EvalError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x1218 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1217 with
                 | Some x1219 ->
                     ignore
                       (Ojs.call x1218 "push" [|(Ojs.string_to_js x1219)|])
                 | None -> ());
                x1218))
  end
module EvalErrorConstructor =
  struct
    type t = _EvalErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1221 : Ojs.t) -> _EvalErrorConstructor_of_js x1221
    and t_to_js : t -> Ojs.t =
      fun (x1220 : _EvalErrorConstructor) ->
        _EvalErrorConstructor_to_js x1220
    let (create : t -> ?message:string -> unit -> _EvalError) =
      fun (x1225 : t) ->
        fun ?message:(x1222 : string option) ->
          fun () ->
            _EvalError_of_js
              (Ojs.new_obj_arr (t_to_js x1225)
                 (let x1223 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1222 with
                   | Some x1224 ->
                       ignore
                         (Ojs.call x1223 "push" [|(Ojs.string_to_js x1224)|])
                   | None -> ());
                  x1223))
    let (apply : t -> ?message:string -> unit -> _EvalError) =
      fun (x1229 : t) ->
        fun ?message:(x1226 : string option) ->
          fun () ->
            _EvalError_of_js
              (Ojs.call (t_to_js x1229) "apply"
                 [|Ojs.null;((let x1227 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1226 with
                               | Some x1228 ->
                                   ignore
                                     (Ojs.call x1227 "push"
                                        [|(Ojs.string_to_js x1228)|])
                               | None -> ());
                              x1227))|])
    let (get_prototype : t -> _EvalError) =
      fun (x1230 : t) ->
        _EvalError_of_js (Ojs.get_prop_ascii (t_to_js x1230) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1231 : t) -> _ErrorConstructor_of_js (t_to_js x1231)
  end
let (evalError : _EvalErrorConstructor) =
  _EvalErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "EvalError")
module RangeError =
  struct
    type t = _RangeError
    let rec t_of_js : Ojs.t -> t =
      fun (x1233 : Ojs.t) -> _RangeError_of_js x1233
    and t_to_js : t -> Ojs.t =
      fun (x1232 : _RangeError) -> _RangeError_to_js x1232
    let (cast : t -> _Error) =
      fun (x1234 : t) -> _Error_of_js (t_to_js x1234)
    let (create : ?message:string -> unit -> _RangeError) =
      fun ?message:(x1235 : string option) ->
        fun () ->
          _RangeError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x1236 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1235 with
                 | Some x1237 ->
                     ignore
                       (Ojs.call x1236 "push" [|(Ojs.string_to_js x1237)|])
                 | None -> ());
                x1236))
  end
module RangeErrorConstructor =
  struct
    type t = _RangeErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1239 : Ojs.t) -> _RangeErrorConstructor_of_js x1239
    and t_to_js : t -> Ojs.t =
      fun (x1238 : _RangeErrorConstructor) ->
        _RangeErrorConstructor_to_js x1238
    let (create : t -> ?message:string -> unit -> _RangeError) =
      fun (x1243 : t) ->
        fun ?message:(x1240 : string option) ->
          fun () ->
            _RangeError_of_js
              (Ojs.new_obj_arr (t_to_js x1243)
                 (let x1241 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1240 with
                   | Some x1242 ->
                       ignore
                         (Ojs.call x1241 "push" [|(Ojs.string_to_js x1242)|])
                   | None -> ());
                  x1241))
    let (apply : t -> ?message:string -> unit -> _RangeError) =
      fun (x1247 : t) ->
        fun ?message:(x1244 : string option) ->
          fun () ->
            _RangeError_of_js
              (Ojs.call (t_to_js x1247) "apply"
                 [|Ojs.null;((let x1245 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1244 with
                               | Some x1246 ->
                                   ignore
                                     (Ojs.call x1245 "push"
                                        [|(Ojs.string_to_js x1246)|])
                               | None -> ());
                              x1245))|])
    let (get_prototype : t -> _RangeError) =
      fun (x1248 : t) ->
        _RangeError_of_js (Ojs.get_prop_ascii (t_to_js x1248) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1249 : t) -> _ErrorConstructor_of_js (t_to_js x1249)
  end
let (rangeError : _RangeErrorConstructor) =
  _RangeErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "RangeError")
module ReferenceError =
  struct
    type t = _ReferenceError
    let rec t_of_js : Ojs.t -> t =
      fun (x1251 : Ojs.t) -> _ReferenceError_of_js x1251
    and t_to_js : t -> Ojs.t =
      fun (x1250 : _ReferenceError) -> _ReferenceError_to_js x1250
    let (cast : t -> _Error) =
      fun (x1252 : t) -> _Error_of_js (t_to_js x1252)
    let (create : ?message:string -> unit -> _ReferenceError) =
      fun ?message:(x1253 : string option) ->
        fun () ->
          _ReferenceError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x1254 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1253 with
                 | Some x1255 ->
                     ignore
                       (Ojs.call x1254 "push" [|(Ojs.string_to_js x1255)|])
                 | None -> ());
                x1254))
  end
module ReferenceErrorConstructor =
  struct
    type t = _ReferenceErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1257 : Ojs.t) -> _ReferenceErrorConstructor_of_js x1257
    and t_to_js : t -> Ojs.t =
      fun (x1256 : _ReferenceErrorConstructor) ->
        _ReferenceErrorConstructor_to_js x1256
    let (create : t -> ?message:string -> unit -> _ReferenceError) =
      fun (x1261 : t) ->
        fun ?message:(x1258 : string option) ->
          fun () ->
            _ReferenceError_of_js
              (Ojs.new_obj_arr (t_to_js x1261)
                 (let x1259 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1258 with
                   | Some x1260 ->
                       ignore
                         (Ojs.call x1259 "push" [|(Ojs.string_to_js x1260)|])
                   | None -> ());
                  x1259))
    let (apply : t -> ?message:string -> unit -> _ReferenceError) =
      fun (x1265 : t) ->
        fun ?message:(x1262 : string option) ->
          fun () ->
            _ReferenceError_of_js
              (Ojs.call (t_to_js x1265) "apply"
                 [|Ojs.null;((let x1263 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1262 with
                               | Some x1264 ->
                                   ignore
                                     (Ojs.call x1263 "push"
                                        [|(Ojs.string_to_js x1264)|])
                               | None -> ());
                              x1263))|])
    let (get_prototype : t -> _ReferenceError) =
      fun (x1266 : t) ->
        _ReferenceError_of_js
          (Ojs.get_prop_ascii (t_to_js x1266) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1267 : t) -> _ErrorConstructor_of_js (t_to_js x1267)
  end
let (referenceError : _ReferenceErrorConstructor) =
  _ReferenceErrorConstructor_of_js
    (Ojs.get_prop_ascii Ojs.global "ReferenceError")
module SyntaxError =
  struct
    type t = _SyntaxError
    let rec t_of_js : Ojs.t -> t =
      fun (x1269 : Ojs.t) -> _SyntaxError_of_js x1269
    and t_to_js : t -> Ojs.t =
      fun (x1268 : _SyntaxError) -> _SyntaxError_to_js x1268
    let (cast : t -> _Error) =
      fun (x1270 : t) -> _Error_of_js (t_to_js x1270)
    let (create : ?message:string -> unit -> _SyntaxError) =
      fun ?message:(x1271 : string option) ->
        fun () ->
          _SyntaxError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1272 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1271 with
                 | Some x1273 ->
                     ignore
                       (Ojs.call x1272 "push" [|(Ojs.string_to_js x1273)|])
                 | None -> ());
                x1272))
  end
module SyntaxErrorConstructor =
  struct
    type t = _SyntaxErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1275 : Ojs.t) -> _SyntaxErrorConstructor_of_js x1275
    and t_to_js : t -> Ojs.t =
      fun (x1274 : _SyntaxErrorConstructor) ->
        _SyntaxErrorConstructor_to_js x1274
    let (create : t -> ?message:string -> unit -> _SyntaxError) =
      fun (x1279 : t) ->
        fun ?message:(x1276 : string option) ->
          fun () ->
            _SyntaxError_of_js
              (Ojs.new_obj_arr (t_to_js x1279)
                 (let x1277 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1276 with
                   | Some x1278 ->
                       ignore
                         (Ojs.call x1277 "push" [|(Ojs.string_to_js x1278)|])
                   | None -> ());
                  x1277))
    let (apply : t -> ?message:string -> unit -> _SyntaxError) =
      fun (x1283 : t) ->
        fun ?message:(x1280 : string option) ->
          fun () ->
            _SyntaxError_of_js
              (Ojs.call (t_to_js x1283) "apply"
                 [|Ojs.null;((let x1281 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1280 with
                               | Some x1282 ->
                                   ignore
                                     (Ojs.call x1281 "push"
                                        [|(Ojs.string_to_js x1282)|])
                               | None -> ());
                              x1281))|])
    let (get_prototype : t -> _SyntaxError) =
      fun (x1284 : t) ->
        _SyntaxError_of_js (Ojs.get_prop_ascii (t_to_js x1284) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1285 : t) -> _ErrorConstructor_of_js (t_to_js x1285)
  end
let (syntaxError : _SyntaxErrorConstructor) =
  _SyntaxErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "SyntaxError")
module TypeError =
  struct
    type t = _TypeError
    let rec t_of_js : Ojs.t -> t =
      fun (x1287 : Ojs.t) -> _TypeError_of_js x1287
    and t_to_js : t -> Ojs.t =
      fun (x1286 : _TypeError) -> _TypeError_to_js x1286
    let (cast : t -> _Error) =
      fun (x1288 : t) -> _Error_of_js (t_to_js x1288)
    let (create : ?message:string -> unit -> _TypeError) =
      fun ?message:(x1289 : string option) ->
        fun () ->
          _TypeError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x1290 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1289 with
                 | Some x1291 ->
                     ignore
                       (Ojs.call x1290 "push" [|(Ojs.string_to_js x1291)|])
                 | None -> ());
                x1290))
  end
module TypeErrorConstructor =
  struct
    type t = _TypeErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1293 : Ojs.t) -> _TypeErrorConstructor_of_js x1293
    and t_to_js : t -> Ojs.t =
      fun (x1292 : _TypeErrorConstructor) ->
        _TypeErrorConstructor_to_js x1292
    let (create : t -> ?message:string -> unit -> _TypeError) =
      fun (x1297 : t) ->
        fun ?message:(x1294 : string option) ->
          fun () ->
            _TypeError_of_js
              (Ojs.new_obj_arr (t_to_js x1297)
                 (let x1295 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1294 with
                   | Some x1296 ->
                       ignore
                         (Ojs.call x1295 "push" [|(Ojs.string_to_js x1296)|])
                   | None -> ());
                  x1295))
    let (apply : t -> ?message:string -> unit -> _TypeError) =
      fun (x1301 : t) ->
        fun ?message:(x1298 : string option) ->
          fun () ->
            _TypeError_of_js
              (Ojs.call (t_to_js x1301) "apply"
                 [|Ojs.null;((let x1299 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1298 with
                               | Some x1300 ->
                                   ignore
                                     (Ojs.call x1299 "push"
                                        [|(Ojs.string_to_js x1300)|])
                               | None -> ());
                              x1299))|])
    let (get_prototype : t -> _TypeError) =
      fun (x1302 : t) ->
        _TypeError_of_js (Ojs.get_prop_ascii (t_to_js x1302) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1303 : t) -> _ErrorConstructor_of_js (t_to_js x1303)
  end
let (typeError : _TypeErrorConstructor) =
  _TypeErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "TypeError")
module URIError =
  struct
    type t = _URIError
    let rec t_of_js : Ojs.t -> t =
      fun (x1305 : Ojs.t) -> _URIError_of_js x1305
    and t_to_js : t -> Ojs.t =
      fun (x1304 : _URIError) -> _URIError_to_js x1304
    let (cast : t -> _Error) =
      fun (x1306 : t) -> _Error_of_js (t_to_js x1306)
    let (create : ?message:string -> unit -> _URIError) =
      fun ?message:(x1307 : string option) ->
        fun () ->
          _URIError_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x1308 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1307 with
                 | Some x1309 ->
                     ignore
                       (Ojs.call x1308 "push" [|(Ojs.string_to_js x1309)|])
                 | None -> ());
                x1308))
  end
module URIErrorConstructor =
  struct
    type t = _URIErrorConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1311 : Ojs.t) -> _URIErrorConstructor_of_js x1311
    and t_to_js : t -> Ojs.t =
      fun (x1310 : _URIErrorConstructor) -> _URIErrorConstructor_to_js x1310
    let (create : t -> ?message:string -> unit -> _URIError) =
      fun (x1315 : t) ->
        fun ?message:(x1312 : string option) ->
          fun () ->
            _URIError_of_js
              (Ojs.new_obj_arr (t_to_js x1315)
                 (let x1313 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1312 with
                   | Some x1314 ->
                       ignore
                         (Ojs.call x1313 "push" [|(Ojs.string_to_js x1314)|])
                   | None -> ());
                  x1313))
    let (apply : t -> ?message:string -> unit -> _URIError) =
      fun (x1319 : t) ->
        fun ?message:(x1316 : string option) ->
          fun () ->
            _URIError_of_js
              (Ojs.call (t_to_js x1319) "apply"
                 [|Ojs.null;((let x1317 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1316 with
                               | Some x1318 ->
                                   ignore
                                     (Ojs.call x1317 "push"
                                        [|(Ojs.string_to_js x1318)|])
                               | None -> ());
                              x1317))|])
    let (get_prototype : t -> _URIError) =
      fun (x1320 : t) ->
        _URIError_of_js (Ojs.get_prop_ascii (t_to_js x1320) "prototype")
    let (cast : t -> _ErrorConstructor) =
      fun (x1321 : t) -> _ErrorConstructor_of_js (t_to_js x1321)
  end
let (uriError : _URIErrorConstructor) =
  _URIErrorConstructor_of_js (Ojs.get_prop_ascii Ojs.global "URIError")
module JSON =
  struct
    type t = _JSON
    let rec t_of_js : Ojs.t -> t = fun (x1323 : Ojs.t) -> _JSON_of_js x1323
    and t_to_js : t -> Ojs.t = fun (x1322 : _JSON) -> _JSON_to_js x1322
    let (parse :
      string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun (x1324 : string) ->
        fun
          ?reviver:(x1325 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x1331 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x1331 "parse") "apply"
                 [|x1331;((let x1326 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1326 "push"
                                [|(Ojs.string_to_js x1324)|]);
                           (match x1325 with
                            | Some x1327 ->
                                ignore
                                  (Ojs.call x1326 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x1328 : Ojs.t) ->
                                             fun (x1329 : Ojs.t) ->
                                               fun (x1330 : Ojs.t) ->
                                                 any_to_js
                                                   (x1327
                                                      ~this:(any_of_js x1328)
                                                      ~key:(Ojs.string_of_js
                                                              x1329)
                                                      ~value:(any_of_js x1330))))|])
                            | None -> ());
                           x1326))|])
    let (stringify :
      any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:string or_number -> unit -> string)
      =
      fun (x1332 : any) ->
        fun
          ?replacer:(x1333 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x1334 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x1342 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x1342 "stringify") "apply"
                   [|x1342;((let x1335 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1335 "push" [|(any_to_js x1332)|]);
                             (match x1333 with
                              | Some x1338 ->
                                  ignore
                                    (Ojs.call x1335 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x1339 : Ojs.t) ->
                                               fun (x1340 : Ojs.t) ->
                                                 fun (x1341 : Ojs.t) ->
                                                   any_to_js
                                                     (x1338
                                                        ~this:(any_of_js
                                                                 x1339)
                                                        ~key:(Ojs.string_of_js
                                                                x1340)
                                                        ~value:(any_of_js
                                                                  x1341))))|])
                              | None -> ());
                             (match x1334 with
                              | Some x1336 ->
                                  ignore
                                    (Ojs.call x1335 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x1336)|])
                              | None -> ());
                             x1335))|])
    let (stringify' :
      any ->
        ?replacer:string or_number list or_null ->
          ?space:string or_number -> unit -> string)
      =
      fun (x1343 : any) ->
        fun ?replacer:(x1344 : string or_number list or_null option) ->
          fun ?space:(x1345 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x1353 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x1353 "stringify") "apply"
                   [|x1353;((let x1346 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1346 "push" [|(any_to_js x1343)|]);
                             (match x1344 with
                              | Some x1349 ->
                                  ignore
                                    (Ojs.call x1346 "push"
                                       [|(or_null_to_js
                                            (fun
                                               (x1350 :
                                                 string or_number list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x1351 :
                                                      string or_number)
                                                    ->
                                                    or_number_to_js
                                                      Ojs.string_to_js x1351)
                                                 x1350) x1349)|])
                              | None -> ());
                             (match x1345 with
                              | Some x1347 ->
                                  ignore
                                    (Ojs.call x1346 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x1347)|])
                              | None -> ());
                             x1346))|])
  end
module ReadonlyArray =
  struct
    type 'T t = 'T _ReadonlyArray
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1356 : Ojs.t) -> _ReadonlyArray_of_js __T_of_js x1356
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1354 : __T _ReadonlyArray) ->
          _ReadonlyArray_to_js __T_to_js x1354
    let (get_length : 'T t -> float) =
      fun (x1358 : 'T t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1358) "length")
    let (toString : 'T t -> string) =
      fun (x1360 : 'T t) ->
        Ojs.string_of_js (Ojs.call (t_to_js Obj.magic x1360) "toString" [||])
    let (toLocaleString : 'T t -> string) =
      fun (x1362 : 'T t) ->
        Ojs.string_of_js
          (Ojs.call (t_to_js Obj.magic x1362) "toLocaleString" [||])
    let (concat : 'T t -> 'T _ConcatArray list -> 'T list) =
      fun (x1368 : 'T t) ->
        fun (x1364 : 'T _ConcatArray list) ->
          Ojs.list_of_js Obj.magic
            (let x1370 = t_to_js Obj.magic x1368 in
             Ojs.call (Ojs.get_prop_ascii x1370 "concat") "apply"
               [|x1370;((let x1365 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1366 : 'T _ConcatArray) ->
                              ignore
                                (Ojs.call x1365 "push"
                                   [|(_ConcatArray_to_js Obj.magic x1366)|]))
                           x1364;
                         x1365))|])
    let (concat' : 'T t -> ('T, 'T _ConcatArray) union2 list -> 'T list) =
      fun (x1378 : 'T t) ->
        fun (x1372 : ('T, 'T _ConcatArray) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x1380 = t_to_js Obj.magic x1378 in
             Ojs.call (Ojs.get_prop_ascii x1380 "concat") "apply"
               [|x1380;((let x1373 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1374 : ('T, 'T _ConcatArray) union2) ->
                              ignore
                                (Ojs.call x1373 "push"
                                   [|(union2_to_js Obj.magic
                                        (fun (x1376 : 'T _ConcatArray) ->
                                           _ConcatArray_to_js Obj.magic x1376)
                                        x1374)|])) x1372;
                         x1373))|])
    let (join : 'T t -> ?separator:string -> unit -> string) =
      fun (x1385 : 'T t) ->
        fun ?separator:(x1382 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1387 = t_to_js Obj.magic x1385 in
               Ojs.call (Ojs.get_prop_ascii x1387 "join") "apply"
                 [|x1387;((let x1383 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1382 with
                            | Some x1384 ->
                                ignore
                                  (Ojs.call x1383 "push"
                                     [|(Ojs.string_to_js x1384)|])
                            | None -> ());
                           x1383))|])
    let (slice : 'T t -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1393 : 'T t) ->
        fun ?start:(x1388 : float option) ->
          fun ?end_:(x1389 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1395 = t_to_js Obj.magic x1393 in
                 Ojs.call (Ojs.get_prop_ascii x1395 "slice") "apply"
                   [|x1395;((let x1390 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1388 with
                              | Some x1392 ->
                                  ignore
                                    (Ojs.call x1390 "push"
                                       [|(Ojs.float_to_js x1392)|])
                              | None -> ());
                             (match x1389 with
                              | Some x1391 ->
                                  ignore
                                    (Ojs.call x1390 "push"
                                       [|(Ojs.float_to_js x1391)|])
                              | None -> ());
                             x1390))|])
    let (indexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1401 : 'T t) ->
        fun ~searchElement:(x1397 : 'T) ->
          fun ?fromIndex:(x1398 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1403 = t_to_js Obj.magic x1401 in
                 Ojs.call (Ojs.get_prop_ascii x1403 "indexOf") "apply"
                   [|x1403;((let x1399 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1399 "push" [|(Obj.magic x1397)|]);
                             (match x1398 with
                              | Some x1400 ->
                                  ignore
                                    (Ojs.call x1399 "push"
                                       [|(Ojs.float_to_js x1400)|])
                              | None -> ());
                             x1399))|])
    let (lastIndexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1408 : 'T t) ->
        fun ~searchElement:(x1404 : 'T) ->
          fun ?fromIndex:(x1405 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1410 = t_to_js Obj.magic x1408 in
                 Ojs.call (Ojs.get_prop_ascii x1410 "lastIndexOf") "apply"
                   [|x1410;((let x1406 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1406 "push" [|(Obj.magic x1404)|]);
                             (match x1405 with
                              | Some x1407 ->
                                  ignore
                                    (Ojs.call x1406 "push"
                                       [|(Ojs.float_to_js x1407)|])
                              | None -> ());
                             x1406))|])
    let (every :
      'T t ->
        (value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1419 : 'T t) ->
        fun (x1411 : value:'T -> index:float -> array:'T list -> bool) ->
          fun ?thisArg:(x1412 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1421 = t_to_js Obj.magic x1419 in
                 Ojs.call (Ojs.get_prop_ascii x1421 "every") "apply"
                   [|x1421;((let x1413 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1413 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1415 : Ojs.t) ->
                                          fun (x1416 : Ojs.t) ->
                                            fun (x1417 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1411
                                                   ~value:(Obj.magic x1415)
                                                   ~index:(Ojs.float_of_js
                                                             x1416)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1417))))|]);
                             (match x1412 with
                              | Some x1414 ->
                                  ignore
                                    (Ojs.call x1413 "push"
                                       [|(any_to_js x1414)|])
                              | None -> ());
                             x1413))|])
    let (every' :
      'T t ->
        (value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1430 : 'T t) ->
        fun (x1422 : value:'T -> index:float -> array:'T list -> unknown) ->
          fun ?thisArg:(x1423 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1432 = t_to_js Obj.magic x1430 in
                 Ojs.call (Ojs.get_prop_ascii x1432 "every") "apply"
                   [|x1432;((let x1424 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1424 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1426 : Ojs.t) ->
                                          fun (x1427 : Ojs.t) ->
                                            fun (x1428 : Ojs.t) ->
                                              unknown_to_js
                                                (x1422
                                                   ~value:(Obj.magic x1426)
                                                   ~index:(Ojs.float_of_js
                                                             x1427)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1428))))|]);
                             (match x1423 with
                              | Some x1425 ->
                                  ignore
                                    (Ojs.call x1424 "push"
                                       [|(any_to_js x1425)|])
                              | None -> ());
                             x1424))|])
    let (some :
      'T t ->
        (value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1441 : 'T t) ->
        fun (x1433 : value:'T -> index:float -> array:'T list -> unknown) ->
          fun ?thisArg:(x1434 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1443 = t_to_js Obj.magic x1441 in
                 Ojs.call (Ojs.get_prop_ascii x1443 "some") "apply"
                   [|x1443;((let x1435 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1435 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1437 : Ojs.t) ->
                                          fun (x1438 : Ojs.t) ->
                                            fun (x1439 : Ojs.t) ->
                                              unknown_to_js
                                                (x1433
                                                   ~value:(Obj.magic x1437)
                                                   ~index:(Ojs.float_of_js
                                                             x1438)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1439))))|]);
                             (match x1434 with
                              | Some x1436 ->
                                  ignore
                                    (Ojs.call x1435 "push"
                                       [|(any_to_js x1436)|])
                              | None -> ());
                             x1435))|])
    let (forEach :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1452 : 'T t) ->
        fun
          ~callbackfn:(x1444 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1445 : any option) ->
            fun () ->
              ignore
                (let x1454 = t_to_js Obj.magic x1452 in
                 Ojs.call (Ojs.get_prop_ascii x1454 "forEach") "apply"
                   [|x1454;((let x1446 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1446 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1448 : Ojs.t) ->
                                          fun (x1449 : Ojs.t) ->
                                            fun (x1450 : Ojs.t) ->
                                              x1444 ~value:(Obj.magic x1448)
                                                ~index:(Ojs.float_of_js x1449)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1450)))|]);
                             (match x1445 with
                              | Some x1447 ->
                                  ignore
                                    (Ojs.call x1446 "push"
                                       [|(any_to_js x1447)|])
                              | None -> ());
                             x1446))|])
    let (map :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1463 : 'T t) ->
        fun
          ~callbackfn:(x1455 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1456 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1465 = t_to_js Obj.magic x1463 in
                 Ojs.call (Ojs.get_prop_ascii x1465 "map") "apply"
                   [|x1465;((let x1457 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1457 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1459 : Ojs.t) ->
                                          fun (x1460 : Ojs.t) ->
                                            fun (x1461 : Ojs.t) ->
                                              Obj.magic
                                                (x1455
                                                   ~value:(Obj.magic x1459)
                                                   ~index:(Ojs.float_of_js
                                                             x1460)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1461))))|]);
                             (match x1456 with
                              | Some x1458 ->
                                  ignore
                                    (Ojs.call x1457 "push"
                                       [|(any_to_js x1458)|])
                              | None -> ());
                             x1457))|])
    let (filter :
      'T t ->
        (value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1475 : 'T t) ->
        fun (x1467 : value:'T -> index:float -> array:'T list -> bool) ->
          fun ?thisArg:(x1468 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1477 = t_to_js Obj.magic x1475 in
                 Ojs.call (Ojs.get_prop_ascii x1477 "filter") "apply"
                   [|x1477;((let x1469 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1469 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1471 : Ojs.t) ->
                                          fun (x1472 : Ojs.t) ->
                                            fun (x1473 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1467
                                                   ~value:(Obj.magic x1471)
                                                   ~index:(Ojs.float_of_js
                                                             x1472)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1473))))|]);
                             (match x1468 with
                              | Some x1470 ->
                                  ignore
                                    (Ojs.call x1469 "push"
                                       [|(any_to_js x1470)|])
                              | None -> ());
                             x1469))|])
    let (filter' :
      'T t ->
        (value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1487 : 'T t) ->
        fun (x1479 : value:'T -> index:float -> array:'T list -> unknown) ->
          fun ?thisArg:(x1480 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1489 = t_to_js Obj.magic x1487 in
                 Ojs.call (Ojs.get_prop_ascii x1489 "filter") "apply"
                   [|x1489;((let x1481 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1481 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1483 : Ojs.t) ->
                                          fun (x1484 : Ojs.t) ->
                                            fun (x1485 : Ojs.t) ->
                                              unknown_to_js
                                                (x1479
                                                   ~value:(Obj.magic x1483)
                                                   ~index:(Ojs.float_of_js
                                                             x1484)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1485))))|]);
                             (match x1480 with
                              | Some x1482 ->
                                  ignore
                                    (Ojs.call x1481 "push"
                                       [|(any_to_js x1482)|])
                              | None -> ());
                             x1481))|])
    let (reduce :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1497 : 'T t) ->
        fun
          ~callbackfn:(x1491 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1497) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1492 : Ojs.t) ->
                       fun (x1493 : Ojs.t) ->
                         fun (x1494 : Ojs.t) ->
                           fun (x1495 : Ojs.t) ->
                             Obj.magic
                               (x1491 ~previousValue:(Obj.magic x1492)
                                  ~currentValue:(Obj.magic x1493)
                                  ~currentIndex:(Ojs.float_of_js x1494)
                                  ~array:(Ojs.list_of_js Obj.magic x1495))))|])
    let (reduce' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1506 : 'T t) ->
        fun
          ~callbackfn:(x1499 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1505 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1506) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1500 : Ojs.t) ->
                         fun (x1501 : Ojs.t) ->
                           fun (x1502 : Ojs.t) ->
                             fun (x1503 : Ojs.t) ->
                               Obj.magic
                                 (x1499 ~previousValue:(Obj.magic x1500)
                                    ~currentValue:(Obj.magic x1501)
                                    ~currentIndex:(Ojs.float_of_js x1502)
                                    ~array:(Ojs.list_of_js Obj.magic x1503))));(
                   Obj.magic x1505)|])
    let (reduce'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1515 : 'T t) ->
        fun
          ~callbackfn:(x1508 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1514 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1515) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1509 : Ojs.t) ->
                         fun (x1510 : Ojs.t) ->
                           fun (x1511 : Ojs.t) ->
                             fun (x1512 : Ojs.t) ->
                               Obj.magic
                                 (x1508 ~previousValue:(Obj.magic x1509)
                                    ~currentValue:(Obj.magic x1510)
                                    ~currentIndex:(Ojs.float_of_js x1511)
                                    ~array:(Ojs.list_of_js Obj.magic x1512))));(
                   Obj.magic x1514)|])
    let (reduceRight :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1523 : 'T t) ->
        fun
          ~callbackfn:(x1517 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1523) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1518 : Ojs.t) ->
                       fun (x1519 : Ojs.t) ->
                         fun (x1520 : Ojs.t) ->
                           fun (x1521 : Ojs.t) ->
                             Obj.magic
                               (x1517 ~previousValue:(Obj.magic x1518)
                                  ~currentValue:(Obj.magic x1519)
                                  ~currentIndex:(Ojs.float_of_js x1520)
                                  ~array:(Ojs.list_of_js Obj.magic x1521))))|])
    let (reduceRight' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1532 : 'T t) ->
        fun
          ~callbackfn:(x1525 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1531 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1532) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1526 : Ojs.t) ->
                         fun (x1527 : Ojs.t) ->
                           fun (x1528 : Ojs.t) ->
                             fun (x1529 : Ojs.t) ->
                               Obj.magic
                                 (x1525 ~previousValue:(Obj.magic x1526)
                                    ~currentValue:(Obj.magic x1527)
                                    ~currentIndex:(Ojs.float_of_js x1528)
                                    ~array:(Ojs.list_of_js Obj.magic x1529))));(
                   Obj.magic x1531)|])
    let (reduceRight'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1541 : 'T t) ->
        fun
          ~callbackfn:(x1534 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1540 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1541) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1535 : Ojs.t) ->
                         fun (x1536 : Ojs.t) ->
                           fun (x1537 : Ojs.t) ->
                             fun (x1538 : Ojs.t) ->
                               Obj.magic
                                 (x1534 ~previousValue:(Obj.magic x1535)
                                    ~currentValue:(Obj.magic x1536)
                                    ~currentIndex:(Ojs.float_of_js x1537)
                                    ~array:(Ojs.list_of_js Obj.magic x1538))));(
                   Obj.magic x1540)|])
    let (get : 'T t -> float -> 'T) =
      fun (x1543 : 'T t) ->
        fun (x1545 : float) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x1543) (Ojs.float_to_js x1545))
    let (to_ml : 'T t -> 'T list) =
      fun (x1546 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1546)
    let (of_ml : 'T list -> 'T t) =
      fun (x1549 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1549)
  end
module ConcatArray =
  struct
    type 'T t = 'T _ConcatArray
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1554 : Ojs.t) -> _ConcatArray_of_js __T_of_js x1554
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1552 : __T _ConcatArray) -> _ConcatArray_to_js __T_to_js x1552
    let (get_length : 'T t -> float) =
      fun (x1556 : 'T t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1556) "length")
    let (get : 'T t -> float -> 'T) =
      fun (x1558 : 'T t) ->
        fun (x1560 : float) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x1558) (Ojs.float_to_js x1560))
    let (join : 'T t -> ?separator:string -> unit -> string) =
      fun (x1564 : 'T t) ->
        fun ?separator:(x1561 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1566 = t_to_js Obj.magic x1564 in
               Ojs.call (Ojs.get_prop_ascii x1566 "join") "apply"
                 [|x1566;((let x1562 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1561 with
                            | Some x1563 ->
                                ignore
                                  (Ojs.call x1562 "push"
                                     [|(Ojs.string_to_js x1563)|])
                            | None -> ());
                           x1562))|])
    let (slice : 'T t -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1572 : 'T t) ->
        fun ?start:(x1567 : float option) ->
          fun ?end_:(x1568 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1574 = t_to_js Obj.magic x1572 in
                 Ojs.call (Ojs.get_prop_ascii x1574 "slice") "apply"
                   [|x1574;((let x1569 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1567 with
                              | Some x1571 ->
                                  ignore
                                    (Ojs.call x1569 "push"
                                       [|(Ojs.float_to_js x1571)|])
                              | None -> ());
                             (match x1568 with
                              | Some x1570 ->
                                  ignore
                                    (Ojs.call x1569 "push"
                                       [|(Ojs.float_to_js x1570)|])
                              | None -> ());
                             x1569))|])
  end
module Array =
  struct
    type 'T t = 'T _Array
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1578 : Ojs.t) -> _Array_of_js __T_of_js x1578
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1576 : __T _Array) -> _Array_to_js __T_to_js x1576
    let (get_length : 'T t -> float) =
      fun (x1580 : 'T t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1580) "length")
    let (set_length : 'T t -> float -> unit) =
      fun (x1582 : 'T t) ->
        fun (x1583 : float) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1582) "length"
            (Ojs.float_to_js x1583)
    let (toString : 'T t -> string) =
      fun (x1585 : 'T t) ->
        Ojs.string_of_js (Ojs.call (t_to_js Obj.magic x1585) "toString" [||])
    let (toLocaleString : 'T t -> string) =
      fun (x1587 : 'T t) ->
        Ojs.string_of_js
          (Ojs.call (t_to_js Obj.magic x1587) "toLocaleString" [||])
    let (pop : 'T t -> 'T or_undefined) =
      fun (x1589 : 'T t) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x1589) "pop" [||])
    let (push : 'T t -> 'T list -> float) =
      fun (x1595 : 'T t) ->
        fun (x1592 : 'T list) ->
          Ojs.float_of_js
            (let x1597 = t_to_js Obj.magic x1595 in
             Ojs.call (Ojs.get_prop_ascii x1597 "push") "apply"
               [|x1597;((let x1593 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1594 : 'T) ->
                              ignore
                                (Ojs.call x1593 "push" [|(Obj.magic x1594)|]))
                           x1592;
                         x1593))|])
    let (concat : 'T t -> 'T _ConcatArray list -> 'T list) =
      fun (x1602 : 'T t) ->
        fun (x1598 : 'T _ConcatArray list) ->
          Ojs.list_of_js Obj.magic
            (let x1604 = t_to_js Obj.magic x1602 in
             Ojs.call (Ojs.get_prop_ascii x1604 "concat") "apply"
               [|x1604;((let x1599 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1600 : 'T _ConcatArray) ->
                              ignore
                                (Ojs.call x1599 "push"
                                   [|(_ConcatArray_to_js Obj.magic x1600)|]))
                           x1598;
                         x1599))|])
    let (concat' : 'T t -> ('T, 'T _ConcatArray) union2 list -> 'T list) =
      fun (x1612 : 'T t) ->
        fun (x1606 : ('T, 'T _ConcatArray) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x1614 = t_to_js Obj.magic x1612 in
             Ojs.call (Ojs.get_prop_ascii x1614 "concat") "apply"
               [|x1614;((let x1607 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1608 : ('T, 'T _ConcatArray) union2) ->
                              ignore
                                (Ojs.call x1607 "push"
                                   [|(union2_to_js Obj.magic
                                        (fun (x1610 : 'T _ConcatArray) ->
                                           _ConcatArray_to_js Obj.magic x1610)
                                        x1608)|])) x1606;
                         x1607))|])
    let (join : 'T t -> ?separator:string -> unit -> string) =
      fun (x1619 : 'T t) ->
        fun ?separator:(x1616 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1621 = t_to_js Obj.magic x1619 in
               Ojs.call (Ojs.get_prop_ascii x1621 "join") "apply"
                 [|x1621;((let x1617 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1616 with
                            | Some x1618 ->
                                ignore
                                  (Ojs.call x1617 "push"
                                     [|(Ojs.string_to_js x1618)|])
                            | None -> ());
                           x1617))|])
    let (reverse : 'T t -> 'T list) =
      fun (x1622 : 'T t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x1622) "reverse" [||])
    let (shift : 'T t -> 'T or_undefined) =
      fun (x1625 : 'T t) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (t_to_js Obj.magic x1625) "shift" [||])
    let (slice : 'T t -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1633 : 'T t) ->
        fun ?start:(x1628 : float option) ->
          fun ?end_:(x1629 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1635 = t_to_js Obj.magic x1633 in
                 Ojs.call (Ojs.get_prop_ascii x1635 "slice") "apply"
                   [|x1635;((let x1630 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1628 with
                              | Some x1632 ->
                                  ignore
                                    (Ojs.call x1630 "push"
                                       [|(Ojs.float_to_js x1632)|])
                              | None -> ());
                             (match x1629 with
                              | Some x1631 ->
                                  ignore
                                    (Ojs.call x1630 "push"
                                       [|(Ojs.float_to_js x1631)|])
                              | None -> ());
                             x1630))|])
    let (sort : 'T t -> ?compareFn:(a:'T -> b:'T -> float) -> unit -> 'T t) =
      fun (x1642 : 'T t) ->
        fun ?compareFn:(x1637 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            t_of_js Obj.magic
              (let x1644 = t_to_js Obj.magic x1642 in
               Ojs.call (Ojs.get_prop_ascii x1644 "sort") "apply"
                 [|x1644;((let x1638 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1637 with
                            | Some x1639 ->
                                ignore
                                  (Ojs.call x1638 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1640 : Ojs.t) ->
                                             fun (x1641 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1639 ~a:(Obj.magic x1640)
                                                    ~b:(Obj.magic x1641))))|])
                            | None -> ());
                           x1638))|])
    let (splice :
      'T t -> start:float -> ?deleteCount:float -> unit -> 'T list) =
      fun (x1650 : 'T t) ->
        fun ~start:(x1646 : float) ->
          fun ?deleteCount:(x1647 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1652 = t_to_js Obj.magic x1650 in
                 Ojs.call (Ojs.get_prop_ascii x1652 "splice") "apply"
                   [|x1652;((let x1648 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1648 "push"
                                  [|(Ojs.float_to_js x1646)|]);
                             (match x1647 with
                              | Some x1649 ->
                                  ignore
                                    (Ojs.call x1648 "push"
                                       [|(Ojs.float_to_js x1649)|])
                              | None -> ());
                             x1648))|])
    let (splice' :
      'T t -> start:float -> deleteCount:float -> 'T list -> 'T list) =
      fun (x1659 : 'T t) ->
        fun ~start:(x1654 : float) ->
          fun ~deleteCount:(x1655 : float) ->
            fun (x1656 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1661 = t_to_js Obj.magic x1659 in
                 Ojs.call (Ojs.get_prop_ascii x1661 "splice") "apply"
                   [|x1661;((let x1657 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1657 "push"
                                  [|(Ojs.float_to_js x1654)|]);
                             ignore
                               (Ojs.call x1657 "push"
                                  [|(Ojs.float_to_js x1655)|]);
                             List.iter
                               (fun (x1658 : 'T) ->
                                  ignore
                                    (Ojs.call x1657 "push"
                                       [|(Obj.magic x1658)|])) x1656;
                             x1657))|])
    let (unshift : 'T t -> 'T list -> float) =
      fun (x1666 : 'T t) ->
        fun (x1663 : 'T list) ->
          Ojs.float_of_js
            (let x1668 = t_to_js Obj.magic x1666 in
             Ojs.call (Ojs.get_prop_ascii x1668 "unshift") "apply"
               [|x1668;((let x1664 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1665 : 'T) ->
                              ignore
                                (Ojs.call x1664 "push" [|(Obj.magic x1665)|]))
                           x1663;
                         x1664))|])
    let (indexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1673 : 'T t) ->
        fun ~searchElement:(x1669 : 'T) ->
          fun ?fromIndex:(x1670 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1675 = t_to_js Obj.magic x1673 in
                 Ojs.call (Ojs.get_prop_ascii x1675 "indexOf") "apply"
                   [|x1675;((let x1671 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1671 "push" [|(Obj.magic x1669)|]);
                             (match x1670 with
                              | Some x1672 ->
                                  ignore
                                    (Ojs.call x1671 "push"
                                       [|(Ojs.float_to_js x1672)|])
                              | None -> ());
                             x1671))|])
    let (lastIndexOf :
      'T t -> searchElement:'T -> ?fromIndex:float -> unit -> float) =
      fun (x1680 : 'T t) ->
        fun ~searchElement:(x1676 : 'T) ->
          fun ?fromIndex:(x1677 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1682 = t_to_js Obj.magic x1680 in
                 Ojs.call (Ojs.get_prop_ascii x1682 "lastIndexOf") "apply"
                   [|x1682;((let x1678 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1678 "push" [|(Obj.magic x1676)|]);
                             (match x1677 with
                              | Some x1679 ->
                                  ignore
                                    (Ojs.call x1678 "push"
                                       [|(Ojs.float_to_js x1679)|])
                              | None -> ());
                             x1678))|])
    let (every :
      'T t ->
        (value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1691 : 'T t) ->
        fun (x1683 : value:'T -> index:float -> array:'T list -> bool) ->
          fun ?thisArg:(x1684 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1693 = t_to_js Obj.magic x1691 in
                 Ojs.call (Ojs.get_prop_ascii x1693 "every") "apply"
                   [|x1693;((let x1685 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1685 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1687 : Ojs.t) ->
                                          fun (x1688 : Ojs.t) ->
                                            fun (x1689 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1683
                                                   ~value:(Obj.magic x1687)
                                                   ~index:(Ojs.float_of_js
                                                             x1688)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1689))))|]);
                             (match x1684 with
                              | Some x1686 ->
                                  ignore
                                    (Ojs.call x1685 "push"
                                       [|(any_to_js x1686)|])
                              | None -> ());
                             x1685))|])
    let (every' :
      'T t ->
        (value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1702 : 'T t) ->
        fun (x1694 : value:'T -> index:float -> array:'T list -> unknown) ->
          fun ?thisArg:(x1695 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1704 = t_to_js Obj.magic x1702 in
                 Ojs.call (Ojs.get_prop_ascii x1704 "every") "apply"
                   [|x1704;((let x1696 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1696 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1698 : Ojs.t) ->
                                          fun (x1699 : Ojs.t) ->
                                            fun (x1700 : Ojs.t) ->
                                              unknown_to_js
                                                (x1694
                                                   ~value:(Obj.magic x1698)
                                                   ~index:(Ojs.float_of_js
                                                             x1699)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1700))))|]);
                             (match x1695 with
                              | Some x1697 ->
                                  ignore
                                    (Ojs.call x1696 "push"
                                       [|(any_to_js x1697)|])
                              | None -> ());
                             x1696))|])
    let (some :
      'T t ->
        (value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1713 : 'T t) ->
        fun (x1705 : value:'T -> index:float -> array:'T list -> unknown) ->
          fun ?thisArg:(x1706 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1715 = t_to_js Obj.magic x1713 in
                 Ojs.call (Ojs.get_prop_ascii x1715 "some") "apply"
                   [|x1715;((let x1707 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1707 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1709 : Ojs.t) ->
                                          fun (x1710 : Ojs.t) ->
                                            fun (x1711 : Ojs.t) ->
                                              unknown_to_js
                                                (x1705
                                                   ~value:(Obj.magic x1709)
                                                   ~index:(Ojs.float_of_js
                                                             x1710)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1711))))|]);
                             (match x1706 with
                              | Some x1708 ->
                                  ignore
                                    (Ojs.call x1707 "push"
                                       [|(any_to_js x1708)|])
                              | None -> ());
                             x1707))|])
    let (forEach :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1724 : 'T t) ->
        fun
          ~callbackfn:(x1716 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1717 : any option) ->
            fun () ->
              ignore
                (let x1726 = t_to_js Obj.magic x1724 in
                 Ojs.call (Ojs.get_prop_ascii x1726 "forEach") "apply"
                   [|x1726;((let x1718 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1718 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1720 : Ojs.t) ->
                                          fun (x1721 : Ojs.t) ->
                                            fun (x1722 : Ojs.t) ->
                                              x1716 ~value:(Obj.magic x1720)
                                                ~index:(Ojs.float_of_js x1721)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1722)))|]);
                             (match x1717 with
                              | Some x1719 ->
                                  ignore
                                    (Ojs.call x1718 "push"
                                       [|(any_to_js x1719)|])
                              | None -> ());
                             x1718))|])
    let (map :
      'T t ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1735 : 'T t) ->
        fun
          ~callbackfn:(x1727 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1728 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1737 = t_to_js Obj.magic x1735 in
                 Ojs.call (Ojs.get_prop_ascii x1737 "map") "apply"
                   [|x1737;((let x1729 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1729 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1731 : Ojs.t) ->
                                          fun (x1732 : Ojs.t) ->
                                            fun (x1733 : Ojs.t) ->
                                              Obj.magic
                                                (x1727
                                                   ~value:(Obj.magic x1731)
                                                   ~index:(Ojs.float_of_js
                                                             x1732)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1733))))|]);
                             (match x1728 with
                              | Some x1730 ->
                                  ignore
                                    (Ojs.call x1729 "push"
                                       [|(any_to_js x1730)|])
                              | None -> ());
                             x1729))|])
    let (filter :
      'T t ->
        (value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1747 : 'T t) ->
        fun (x1739 : value:'T -> index:float -> array:'T list -> bool) ->
          fun ?thisArg:(x1740 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1749 = t_to_js Obj.magic x1747 in
                 Ojs.call (Ojs.get_prop_ascii x1749 "filter") "apply"
                   [|x1749;((let x1741 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1741 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1743 : Ojs.t) ->
                                          fun (x1744 : Ojs.t) ->
                                            fun (x1745 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1739
                                                   ~value:(Obj.magic x1743)
                                                   ~index:(Ojs.float_of_js
                                                             x1744)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1745))))|]);
                             (match x1740 with
                              | Some x1742 ->
                                  ignore
                                    (Ojs.call x1741 "push"
                                       [|(any_to_js x1742)|])
                              | None -> ());
                             x1741))|])
    let (filter' :
      'T t ->
        (value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1759 : 'T t) ->
        fun (x1751 : value:'T -> index:float -> array:'T list -> unknown) ->
          fun ?thisArg:(x1752 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1761 = t_to_js Obj.magic x1759 in
                 Ojs.call (Ojs.get_prop_ascii x1761 "filter") "apply"
                   [|x1761;((let x1753 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1753 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1755 : Ojs.t) ->
                                          fun (x1756 : Ojs.t) ->
                                            fun (x1757 : Ojs.t) ->
                                              unknown_to_js
                                                (x1751
                                                   ~value:(Obj.magic x1755)
                                                   ~index:(Ojs.float_of_js
                                                             x1756)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1757))))|]);
                             (match x1752 with
                              | Some x1754 ->
                                  ignore
                                    (Ojs.call x1753 "push"
                                       [|(any_to_js x1754)|])
                              | None -> ());
                             x1753))|])
    let (reduce :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1769 : 'T t) ->
        fun
          ~callbackfn:(x1763 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1769) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1764 : Ojs.t) ->
                       fun (x1765 : Ojs.t) ->
                         fun (x1766 : Ojs.t) ->
                           fun (x1767 : Ojs.t) ->
                             Obj.magic
                               (x1763 ~previousValue:(Obj.magic x1764)
                                  ~currentValue:(Obj.magic x1765)
                                  ~currentIndex:(Ojs.float_of_js x1766)
                                  ~array:(Ojs.list_of_js Obj.magic x1767))))|])
    let (reduce' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1778 : 'T t) ->
        fun
          ~callbackfn:(x1771 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1777 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1778) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1772 : Ojs.t) ->
                         fun (x1773 : Ojs.t) ->
                           fun (x1774 : Ojs.t) ->
                             fun (x1775 : Ojs.t) ->
                               Obj.magic
                                 (x1771 ~previousValue:(Obj.magic x1772)
                                    ~currentValue:(Obj.magic x1773)
                                    ~currentIndex:(Ojs.float_of_js x1774)
                                    ~array:(Ojs.list_of_js Obj.magic x1775))));(
                   Obj.magic x1777)|])
    let (reduce'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1787 : 'T t) ->
        fun
          ~callbackfn:(x1780 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1786 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1787) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1781 : Ojs.t) ->
                         fun (x1782 : Ojs.t) ->
                           fun (x1783 : Ojs.t) ->
                             fun (x1784 : Ojs.t) ->
                               Obj.magic
                                 (x1780 ~previousValue:(Obj.magic x1781)
                                    ~currentValue:(Obj.magic x1782)
                                    ~currentIndex:(Ojs.float_of_js x1783)
                                    ~array:(Ojs.list_of_js Obj.magic x1784))));(
                   Obj.magic x1786)|])
    let (reduceRight :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1795 : 'T t) ->
        fun
          ~callbackfn:(x1789 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (t_to_js Obj.magic x1795) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1790 : Ojs.t) ->
                       fun (x1791 : Ojs.t) ->
                         fun (x1792 : Ojs.t) ->
                           fun (x1793 : Ojs.t) ->
                             Obj.magic
                               (x1789 ~previousValue:(Obj.magic x1790)
                                  ~currentValue:(Obj.magic x1791)
                                  ~currentIndex:(Ojs.float_of_js x1792)
                                  ~array:(Ojs.list_of_js Obj.magic x1793))))|])
    let (reduceRight' :
      'T t ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1804 : 'T t) ->
        fun
          ~callbackfn:(x1797 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1803 : 'T) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1804) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1798 : Ojs.t) ->
                         fun (x1799 : Ojs.t) ->
                           fun (x1800 : Ojs.t) ->
                             fun (x1801 : Ojs.t) ->
                               Obj.magic
                                 (x1797 ~previousValue:(Obj.magic x1798)
                                    ~currentValue:(Obj.magic x1799)
                                    ~currentIndex:(Ojs.float_of_js x1800)
                                    ~array:(Ojs.list_of_js Obj.magic x1801))));(
                   Obj.magic x1803)|])
    let (reduceRight'' :
      'T t ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1813 : 'T t) ->
        fun
          ~callbackfn:(x1806 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1812 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js Obj.magic x1813) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1807 : Ojs.t) ->
                         fun (x1808 : Ojs.t) ->
                           fun (x1809 : Ojs.t) ->
                             fun (x1810 : Ojs.t) ->
                               Obj.magic
                                 (x1806 ~previousValue:(Obj.magic x1807)
                                    ~currentValue:(Obj.magic x1808)
                                    ~currentIndex:(Ojs.float_of_js x1809)
                                    ~array:(Ojs.list_of_js Obj.magic x1810))));(
                   Obj.magic x1812)|])
    let (get : 'T t -> float -> 'T) =
      fun (x1815 : 'T t) ->
        fun (x1817 : float) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x1815) (Ojs.float_to_js x1817))
    let (set : 'T t -> float -> 'T -> unit) =
      fun (x1818 : 'T t) ->
        fun (x1820 : float) ->
          fun (x1821 : 'T) ->
            Ojs.set_prop (t_to_js Obj.magic x1818) (Ojs.float_to_js x1820)
              (Obj.magic x1821)
    let (to_ml : 'T t -> 'T list) =
      fun (x1822 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1822)
    let (of_ml : 'T list -> 'T t) =
      fun (x1825 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1825)
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1828 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1829 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1828 with
                 | Some x1830 ->
                     ignore
                       (Ojs.call x1829 "push" [|(Ojs.float_to_js x1830)|])
                 | None -> ());
                x1829))
    let (create' : arrayLength:float -> 'T list) =
      fun ~arrayLength:(x1832 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1832)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1834 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1835 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1836 : 'T) ->
                   ignore (Ojs.call x1835 "push" [|(Obj.magic x1836)|]))
                x1834;
              x1835))
    let (isArray : any -> bool) =
      fun (x1838 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1838)|])
  end
module ArrayConstructor =
  struct
    type t = _ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x1840 : Ojs.t) -> _ArrayConstructor_of_js x1840
    and t_to_js : t -> Ojs.t =
      fun (x1839 : _ArrayConstructor) -> _ArrayConstructor_to_js x1839
    let (create : t -> ?arrayLength:float -> unit -> any list) =
      fun (x1844 : t) ->
        fun ?arrayLength:(x1841 : float option) ->
          fun () ->
            Ojs.list_of_js any_of_js
              (Ojs.new_obj_arr (t_to_js x1844)
                 (let x1842 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1841 with
                   | Some x1843 ->
                       ignore
                         (Ojs.call x1842 "push" [|(Ojs.float_to_js x1843)|])
                   | None -> ());
                  x1842))
    let (create' : t -> arrayLength:float -> 'T list) =
      fun (x1847 : t) ->
        fun ~arrayLength:(x1846 : float) ->
          Ojs.list_of_js Obj.magic
            (Ojs.new_obj (t_to_js x1847) [|(Ojs.float_to_js x1846)|])
    let (create'' : t -> 'T list -> 'T list) =
      fun (x1852 : t) ->
        fun (x1849 : 'T list) ->
          Ojs.list_of_js Obj.magic
            (Ojs.new_obj_arr (t_to_js x1852)
               (let x1850 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x1851 : 'T) ->
                     ignore (Ojs.call x1850 "push" [|(Obj.magic x1851)|]))
                  x1849;
                x1850))
    let (apply : t -> ?arrayLength:float -> unit -> any list) =
      fun (x1857 : t) ->
        fun ?arrayLength:(x1854 : float option) ->
          fun () ->
            Ojs.list_of_js any_of_js
              (Ojs.call (t_to_js x1857) "apply"
                 [|Ojs.null;((let x1855 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1854 with
                               | Some x1856 ->
                                   ignore
                                     (Ojs.call x1855 "push"
                                        [|(Ojs.float_to_js x1856)|])
                               | None -> ());
                              x1855))|])
    let (apply' : t -> arrayLength:float -> 'T list) =
      fun (x1860 : t) ->
        fun ~arrayLength:(x1859 : float) ->
          Ojs.list_of_js Obj.magic
            (Ojs.apply (t_to_js x1860) [|(Ojs.float_to_js x1859)|])
    let (apply'' : t -> 'T list -> 'T list) =
      fun (x1865 : t) ->
        fun (x1862 : 'T list) ->
          Ojs.list_of_js Obj.magic
            (Ojs.call (t_to_js x1865) "apply"
               [|Ojs.null;((let x1863 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x1864 : 'T) ->
                                 ignore
                                   (Ojs.call x1863 "push"
                                      [|(Obj.magic x1864)|])) x1862;
                            x1863))|])
    let (isArray : t -> any -> bool) =
      fun (x1868 : t) ->
        fun (x1867 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x1868) "isArray" [|(any_to_js x1867)|])
    let (get_prototype : t -> any list) =
      fun (x1869 : t) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (t_to_js x1869) "prototype")
  end
let (array : _ArrayConstructor) =
  _ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Array")
module TypedPropertyDescriptor =
  struct
    type 'T t = 'T _TypedPropertyDescriptor
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1873 : Ojs.t) -> _TypedPropertyDescriptor_of_js __T_of_js x1873
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1871 : __T _TypedPropertyDescriptor) ->
          _TypedPropertyDescriptor_to_js __T_to_js x1871
    let (get_enumerable : 'T t -> bool) =
      fun (x1875 : 'T t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1875) "enumerable")
    let (set_enumerable : 'T t -> bool -> unit) =
      fun (x1877 : 'T t) ->
        fun (x1878 : bool) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1877) "enumerable"
            (Ojs.bool_to_js x1878)
    let (get_configurable : 'T t -> bool) =
      fun (x1880 : 'T t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1880) "configurable")
    let (set_configurable : 'T t -> bool -> unit) =
      fun (x1882 : 'T t) ->
        fun (x1883 : bool) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1882) "configurable"
            (Ojs.bool_to_js x1883)
    let (get_writable : 'T t -> bool) =
      fun (x1885 : 'T t) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (t_to_js Obj.magic x1885) "writable")
    let (set_writable : 'T t -> bool -> unit) =
      fun (x1887 : 'T t) ->
        fun (x1888 : bool) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1887) "writable"
            (Ojs.bool_to_js x1888)
    let (get_value : 'T t -> 'T) =
      fun (x1890 : 'T t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x1890) "value")
    let (set_value : 'T t -> 'T -> unit) =
      fun (x1892 : 'T t) ->
        fun (x1893 : 'T) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x1892) "value"
            (Obj.magic x1893)
    let (get_ : 'T t -> 'T) =
      fun (x1895 : 'T t) ->
        Obj.magic (Ojs.call (t_to_js Obj.magic x1895) "get" [||])
    let (set_ : 'T t -> value:'T -> unit) =
      fun (x1898 : 'T t) ->
        fun ~value:(x1897 : 'T) ->
          ignore
            (Ojs.call (t_to_js Obj.magic x1898) "set" [|(Obj.magic x1897)|])
  end
module ClassDecorator =
  struct
    type t = _ClassDecorator
    let rec t_of_js : Ojs.t -> t =
      fun (x1901 : Ojs.t) -> _ClassDecorator_of_js x1901
    and t_to_js : t -> Ojs.t =
      fun (x1900 : _ClassDecorator) -> _ClassDecorator_to_js x1900
    let (apply : t -> target:'TFunction -> ('TFunction, unit) union2) =
      fun (x1903 : t) ->
        fun ~target:(x1902 : 'TFunction) ->
          union2_of_js Obj.magic Ojs.unit_of_js
            (Ojs.apply (t_to_js x1903) [|(Obj.magic x1902)|])
  end
module PropertyDecorator =
  struct
    type t = _PropertyDecorator
    let rec t_of_js : Ojs.t -> t =
      fun (x1907 : Ojs.t) -> _PropertyDecorator_of_js x1907
    and t_to_js : t -> Ojs.t =
      fun (x1906 : _PropertyDecorator) -> _PropertyDecorator_to_js x1906
    let (apply : t -> target:_Object -> propertyKey:symbol or_string -> unit)
      =
      fun (x1911 : t) ->
        fun ~target:(x1908 : _Object) ->
          fun ~propertyKey:(x1909 : symbol or_string) ->
            ignore
              (Ojs.apply (t_to_js x1911)
                 [|(_Object_to_js x1908);(or_string_to_js symbol_to_js x1909)|])
  end
module MethodDecorator =
  struct
    type t = _MethodDecorator
    let rec t_of_js : Ojs.t -> t =
      fun (x1913 : Ojs.t) -> _MethodDecorator_of_js x1913
    and t_to_js : t -> Ojs.t =
      fun (x1912 : _MethodDecorator) -> _MethodDecorator_to_js x1912
    let (apply :
      t ->
        target:_Object ->
          propertyKey:symbol or_string ->
            descriptor:'T _TypedPropertyDescriptor ->
              (unit, 'T _TypedPropertyDescriptor) union2)
      =
      fun (x1919 : t) ->
        fun ~target:(x1914 : _Object) ->
          fun ~propertyKey:(x1915 : symbol or_string) ->
            fun ~descriptor:(x1917 : 'T _TypedPropertyDescriptor) ->
              union2_of_js Ojs.unit_of_js
                (fun (x1921 : Ojs.t) ->
                   _TypedPropertyDescriptor_of_js Obj.magic x1921)
                (Ojs.apply (t_to_js x1919)
                   [|(_Object_to_js x1914);(or_string_to_js symbol_to_js
                                              x1915);(_TypedPropertyDescriptor_to_js
                                                        Obj.magic x1917)|])
  end
module ParameterDecorator =
  struct
    type t = _ParameterDecorator
    let rec t_of_js : Ojs.t -> t =
      fun (x1924 : Ojs.t) -> _ParameterDecorator_of_js x1924
    and t_to_js : t -> Ojs.t =
      fun (x1923 : _ParameterDecorator) -> _ParameterDecorator_to_js x1923
    let (apply :
      t ->
        target:_Object ->
          propertyKey:symbol or_string -> parameterIndex:float -> unit)
      =
      fun (x1929 : t) ->
        fun ~target:(x1925 : _Object) ->
          fun ~propertyKey:(x1926 : symbol or_string) ->
            fun ~parameterIndex:(x1928 : float) ->
              ignore
                (Ojs.apply (t_to_js x1929)
                   [|(_Object_to_js x1925);(or_string_to_js symbol_to_js
                                              x1926);(Ojs.float_to_js x1928)|])
  end
module Promise =
  struct
    type 'T t = 'T _Promise
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1932 : Ojs.t) -> _Promise_of_js __T_of_js x1932
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1930 : __T _Promise) -> _Promise_to_js __T_to_js x1930
    let (then_ :
      'T t ->
        ?onfulfilled:('T -> 'TResult t) ->
          ?onrejected:(any -> 'TResult t) -> unit -> 'TResult t)
      =
      fun (x1943 : 'T t) ->
        fun ?onfulfilled:(x1934 : ('T -> 'TResult t) option) ->
          fun ?onrejected:(x1935 : (any -> 'TResult t) option) ->
            fun () ->
              t_of_js Obj.magic
                (let x1945 = t_to_js Obj.magic x1943 in
                 Ojs.call (Ojs.get_prop_ascii x1945 "then") "apply"
                   [|x1945;((let x1936 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1934 with
                              | Some x1940 ->
                                  ignore
                                    (Ojs.call x1936 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x1941 : Ojs.t) ->
                                               t_to_js Obj.magic
                                                 (x1940 (Obj.magic x1941))))|])
                              | None -> ());
                             (match x1935 with
                              | Some x1937 ->
                                  ignore
                                    (Ojs.call x1936 "push"
                                       [|(Ojs.fun_to_js 1
                                            (fun (x1938 : Ojs.t) ->
                                               t_to_js Obj.magic
                                                 (x1937 (any_of_js x1938))))|])
                              | None -> ());
                             x1936))|])
    let (catch : 'T t -> ?onrejected:(any -> 'T t) -> unit -> 'T t) =
      fun (x1952 : 'T t) ->
        fun ?onrejected:(x1947 : (any -> 'T t) option) ->
          fun () ->
            t_of_js Obj.magic
              (let x1954 = t_to_js Obj.magic x1952 in
               Ojs.call (Ojs.get_prop_ascii x1954 "catch") "apply"
                 [|x1954;((let x1948 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1947 with
                            | Some x1949 ->
                                ignore
                                  (Ojs.call x1948 "push"
                                     [|(Ojs.fun_to_js 1
                                          (fun (x1950 : Ojs.t) ->
                                             t_to_js Obj.magic
                                               (x1949 (any_of_js x1950))))|])
                            | None -> ());
                           x1948))|])
  end
module Partial =
  struct
    type 'T t = 'T _Partial
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1958 : Ojs.t) -> _Partial_of_js __T_of_js x1958
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1956 : __T _Partial) -> _Partial_to_js __T_to_js x1956
  end
module Required =
  struct
    type 'T t = 'T _Required
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1962 : Ojs.t) -> _Required_of_js __T_of_js x1962
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1960 : __T _Required) -> _Required_to_js __T_to_js x1960
  end
module Readonly =
  struct
    type 'T t = 'T _Readonly
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1966 : Ojs.t) -> _Readonly_of_js __T_of_js x1966
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1964 : __T _Readonly) -> _Readonly_to_js __T_to_js x1964
  end
module Pick =
  struct
    type ('T, 'K) t = ('T, 'K) _Pick
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x1971 : Ojs.t) -> _Pick_of_js __T_of_js __K_of_js x1971
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x1968 : (__T, __K) _Pick) ->
            _Pick_to_js __T_to_js __K_to_js x1968
  end
module Record =
  struct
    type ('K, 'T) t = ('K, 'T) _Record
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1977 : Ojs.t) -> _Record_of_js __K_of_js __T_of_js x1977
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1974 : (__K, __T) _Record) ->
            _Record_to_js __K_to_js __T_to_js x1974
  end
module Exclude =
  struct
    type ('T, 'U) t = ('T, 'U) _Exclude
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x1983 : Ojs.t) -> _Exclude_of_js __T_of_js __U_of_js x1983
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x1980 : (__T, __U) _Exclude) ->
            _Exclude_to_js __T_to_js __U_to_js x1980
  end
module Extract =
  struct
    type ('T, 'U) t = ('T, 'U) _Extract
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x1989 : Ojs.t) -> _Extract_of_js __T_of_js __U_of_js x1989
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x1986 : (__T, __U) _Extract) ->
            _Extract_to_js __T_to_js __U_to_js x1986
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, 'K) _Omit
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x1995 : Ojs.t) -> _Omit_of_js __T_of_js __K_of_js x1995
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x1992 : (__T, __K) _Omit) ->
            _Omit_to_js __T_to_js __K_to_js x1992
  end
module NonNullable =
  struct
    type 'T t = 'T _NonNullable
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2000 : Ojs.t) -> _NonNullable_of_js __T_of_js x2000
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1998 : __T _NonNullable) -> _NonNullable_to_js __T_to_js x1998
  end
module Parameters =
  struct
    type 'T t = 'T _Parameters
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2004 : Ojs.t) -> _Parameters_of_js __T_of_js x2004
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2002 : __T _Parameters) -> _Parameters_to_js __T_to_js x2002
  end
module ConstructorParameters =
  struct
    type 'T t = 'T _ConstructorParameters
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2008 : Ojs.t) -> _ConstructorParameters_of_js __T_of_js x2008
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2006 : __T _ConstructorParameters) ->
          _ConstructorParameters_to_js __T_to_js x2006
  end
module ReturnType =
  struct
    type 'T t = 'T _ReturnType
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2012 : Ojs.t) -> _ReturnType_of_js __T_of_js x2012
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2010 : __T _ReturnType) -> _ReturnType_to_js __T_to_js x2010
  end
module InstanceType =
  struct
    type 'T t = 'T _InstanceType
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2016 : Ojs.t) -> _InstanceType_of_js __T_of_js x2016
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2014 : __T _InstanceType) ->
          _InstanceType_to_js __T_to_js x2014
  end
module ThisType =
  struct
    type 'T t = 'T _ThisType
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x2020 : Ojs.t) -> _ThisType_of_js __T_of_js x2020
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x2018 : __T _ThisType) -> _ThisType_to_js __T_to_js x2018
  end
module ArrayBuffer =
  struct
    type t = _ArrayBuffer
    let rec t_of_js : Ojs.t -> t =
      fun (x2023 : Ojs.t) -> _ArrayBuffer_of_js x2023
    and t_to_js : t -> Ojs.t =
      fun (x2022 : _ArrayBuffer) -> _ArrayBuffer_to_js x2022
    let (get_byteLength : t -> float) =
      fun (x2024 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2024) "byteLength")
    let (slice : t -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x2029 : t) ->
        fun ~begin_:(x2025 : float) ->
          fun ?end_:(x2026 : float option) ->
            fun () ->
              t_of_js
                (let x2030 = t_to_js x2029 in
                 Ojs.call (Ojs.get_prop_ascii x2030 "slice") "apply"
                   [|x2030;((let x2027 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2027 "push"
                                  [|(Ojs.float_to_js x2025)|]);
                             (match x2026 with
                              | Some x2028 ->
                                  ignore
                                    (Ojs.call x2027 "push"
                                       [|(Ojs.float_to_js x2028)|])
                              | None -> ());
                             x2027))|])
    let (create : byteLength:float -> _ArrayBuffer) =
      fun ~byteLength:(x2031 : float) ->
        _ArrayBuffer_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x2031)|])
    let (isView : any -> bool) =
      fun (x2032 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x2032)|])
  end
module ArrayBufferTypes =
  struct
    type t = _ArrayBufferTypes
    let rec t_of_js : Ojs.t -> t =
      fun (x2034 : Ojs.t) -> _ArrayBufferTypes_of_js x2034
    and t_to_js : t -> Ojs.t =
      fun (x2033 : _ArrayBufferTypes) -> _ArrayBufferTypes_to_js x2033
    let (get_ArrayBuffer : t -> _ArrayBuffer) =
      fun (x2035 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2035) "ArrayBuffer")
    let (set_ArrayBuffer : t -> _ArrayBuffer -> unit) =
      fun (x2036 : t) ->
        fun (x2037 : _ArrayBuffer) ->
          Ojs.set_prop_ascii (t_to_js x2036) "ArrayBuffer"
            (_ArrayBuffer_to_js x2037)
  end
module ArrayBufferConstructor =
  struct
    type t = _ArrayBufferConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2039 : Ojs.t) -> _ArrayBufferConstructor_of_js x2039
    and t_to_js : t -> Ojs.t =
      fun (x2038 : _ArrayBufferConstructor) ->
        _ArrayBufferConstructor_to_js x2038
    let (get_prototype : t -> _ArrayBuffer) =
      fun (x2040 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2040) "prototype")
    let (create : t -> byteLength:float -> _ArrayBuffer) =
      fun (x2042 : t) ->
        fun ~byteLength:(x2041 : float) ->
          _ArrayBuffer_of_js
            (Ojs.new_obj (t_to_js x2042) [|(Ojs.float_to_js x2041)|])
    let (isView : t -> any -> bool) =
      fun (x2044 : t) ->
        fun (x2043 : any) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x2044) "isView" [|(any_to_js x2043)|])
  end
let (arrayBuffer : _ArrayBufferConstructor) =
  _ArrayBufferConstructor_of_js (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
module ArrayBufferView =
  struct
    type t = _ArrayBufferView
    let rec t_of_js : Ojs.t -> t =
      fun (x2046 : Ojs.t) -> _ArrayBufferView_of_js x2046
    and t_to_js : t -> Ojs.t =
      fun (x2045 : _ArrayBufferView) -> _ArrayBufferView_to_js x2045
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2047 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2047) "buffer")
    let (set_buffer : t -> _ArrayBuffer -> unit) =
      fun (x2048 : t) ->
        fun (x2049 : _ArrayBuffer) ->
          Ojs.set_prop_ascii (t_to_js x2048) "buffer"
            (_ArrayBuffer_to_js x2049)
    let (get_byteLength : t -> float) =
      fun (x2050 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2050) "byteLength")
    let (set_byteLength : t -> float -> unit) =
      fun (x2051 : t) ->
        fun (x2052 : float) ->
          Ojs.set_prop_ascii (t_to_js x2051) "byteLength"
            (Ojs.float_to_js x2052)
    let (get_byteOffset : t -> float) =
      fun (x2053 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2053) "byteOffset")
    let (set_byteOffset : t -> float -> unit) =
      fun (x2054 : t) ->
        fun (x2055 : float) ->
          Ojs.set_prop_ascii (t_to_js x2054) "byteOffset"
            (Ojs.float_to_js x2055)
  end
module DataView =
  struct
    type t = _DataView
    let rec t_of_js : Ojs.t -> t =
      fun (x2057 : Ojs.t) -> _DataView_of_js x2057
    and t_to_js : t -> Ojs.t =
      fun (x2056 : _DataView) -> _DataView_to_js x2056
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2058 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2058) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2059 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2059) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2060 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2060) "byteOffset")
    let (getFloat32 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2065 : t) ->
        fun ~byteOffset:(x2061 : float) ->
          fun ?littleEndian:(x2062 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2066 = t_to_js x2065 in
                 Ojs.call (Ojs.get_prop_ascii x2066 "getFloat32") "apply"
                   [|x2066;((let x2063 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2063 "push"
                                  [|(Ojs.float_to_js x2061)|]);
                             (match x2062 with
                              | Some x2064 ->
                                  ignore
                                    (Ojs.call x2063 "push"
                                       [|(Ojs.bool_to_js x2064)|])
                              | None -> ());
                             x2063))|])
    let (getFloat64 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2071 : t) ->
        fun ~byteOffset:(x2067 : float) ->
          fun ?littleEndian:(x2068 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2072 = t_to_js x2071 in
                 Ojs.call (Ojs.get_prop_ascii x2072 "getFloat64") "apply"
                   [|x2072;((let x2069 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2069 "push"
                                  [|(Ojs.float_to_js x2067)|]);
                             (match x2068 with
                              | Some x2070 ->
                                  ignore
                                    (Ojs.call x2069 "push"
                                       [|(Ojs.bool_to_js x2070)|])
                              | None -> ());
                             x2069))|])
    let (getInt8 : t -> byteOffset:float -> float) =
      fun (x2074 : t) ->
        fun ~byteOffset:(x2073 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2074) "getInt8" [|(Ojs.float_to_js x2073)|])
    let (getInt16 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2079 : t) ->
        fun ~byteOffset:(x2075 : float) ->
          fun ?littleEndian:(x2076 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2080 = t_to_js x2079 in
                 Ojs.call (Ojs.get_prop_ascii x2080 "getInt16") "apply"
                   [|x2080;((let x2077 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2077 "push"
                                  [|(Ojs.float_to_js x2075)|]);
                             (match x2076 with
                              | Some x2078 ->
                                  ignore
                                    (Ojs.call x2077 "push"
                                       [|(Ojs.bool_to_js x2078)|])
                              | None -> ());
                             x2077))|])
    let (getInt32 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2085 : t) ->
        fun ~byteOffset:(x2081 : float) ->
          fun ?littleEndian:(x2082 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2086 = t_to_js x2085 in
                 Ojs.call (Ojs.get_prop_ascii x2086 "getInt32") "apply"
                   [|x2086;((let x2083 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2083 "push"
                                  [|(Ojs.float_to_js x2081)|]);
                             (match x2082 with
                              | Some x2084 ->
                                  ignore
                                    (Ojs.call x2083 "push"
                                       [|(Ojs.bool_to_js x2084)|])
                              | None -> ());
                             x2083))|])
    let (getUint8 : t -> byteOffset:float -> float) =
      fun (x2088 : t) ->
        fun ~byteOffset:(x2087 : float) ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2088) "getUint8" [|(Ojs.float_to_js x2087)|])
    let (getUint16 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2093 : t) ->
        fun ~byteOffset:(x2089 : float) ->
          fun ?littleEndian:(x2090 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2094 = t_to_js x2093 in
                 Ojs.call (Ojs.get_prop_ascii x2094 "getUint16") "apply"
                   [|x2094;((let x2091 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2091 "push"
                                  [|(Ojs.float_to_js x2089)|]);
                             (match x2090 with
                              | Some x2092 ->
                                  ignore
                                    (Ojs.call x2091 "push"
                                       [|(Ojs.bool_to_js x2092)|])
                              | None -> ());
                             x2091))|])
    let (getUint32 :
      t -> byteOffset:float -> ?littleEndian:bool -> unit -> float) =
      fun (x2099 : t) ->
        fun ~byteOffset:(x2095 : float) ->
          fun ?littleEndian:(x2096 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x2100 = t_to_js x2099 in
                 Ojs.call (Ojs.get_prop_ascii x2100 "getUint32") "apply"
                   [|x2100;((let x2097 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2097 "push"
                                  [|(Ojs.float_to_js x2095)|]);
                             (match x2096 with
                              | Some x2098 ->
                                  ignore
                                    (Ojs.call x2097 "push"
                                       [|(Ojs.bool_to_js x2098)|])
                              | None -> ());
                             x2097))|])
    let (setFloat32 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2106 : t) ->
        fun ~byteOffset:(x2101 : float) ->
          fun ~value:(x2102 : float) ->
            fun ?littleEndian:(x2103 : bool option) ->
              fun () ->
                ignore
                  (let x2107 = t_to_js x2106 in
                   Ojs.call (Ojs.get_prop_ascii x2107 "setFloat32") "apply"
                     [|x2107;((let x2104 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2104 "push"
                                    [|(Ojs.float_to_js x2101)|]);
                               ignore
                                 (Ojs.call x2104 "push"
                                    [|(Ojs.float_to_js x2102)|]);
                               (match x2103 with
                                | Some x2105 ->
                                    ignore
                                      (Ojs.call x2104 "push"
                                         [|(Ojs.bool_to_js x2105)|])
                                | None -> ());
                               x2104))|])
    let (setFloat64 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2113 : t) ->
        fun ~byteOffset:(x2108 : float) ->
          fun ~value:(x2109 : float) ->
            fun ?littleEndian:(x2110 : bool option) ->
              fun () ->
                ignore
                  (let x2114 = t_to_js x2113 in
                   Ojs.call (Ojs.get_prop_ascii x2114 "setFloat64") "apply"
                     [|x2114;((let x2111 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2111 "push"
                                    [|(Ojs.float_to_js x2108)|]);
                               ignore
                                 (Ojs.call x2111 "push"
                                    [|(Ojs.float_to_js x2109)|]);
                               (match x2110 with
                                | Some x2112 ->
                                    ignore
                                      (Ojs.call x2111 "push"
                                         [|(Ojs.bool_to_js x2112)|])
                                | None -> ());
                               x2111))|])
    let (setInt8 : t -> byteOffset:float -> value:float -> unit) =
      fun (x2117 : t) ->
        fun ~byteOffset:(x2115 : float) ->
          fun ~value:(x2116 : float) ->
            ignore
              (Ojs.call (t_to_js x2117) "setInt8"
                 [|(Ojs.float_to_js x2115);(Ojs.float_to_js x2116)|])
    let (setInt16 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2123 : t) ->
        fun ~byteOffset:(x2118 : float) ->
          fun ~value:(x2119 : float) ->
            fun ?littleEndian:(x2120 : bool option) ->
              fun () ->
                ignore
                  (let x2124 = t_to_js x2123 in
                   Ojs.call (Ojs.get_prop_ascii x2124 "setInt16") "apply"
                     [|x2124;((let x2121 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2121 "push"
                                    [|(Ojs.float_to_js x2118)|]);
                               ignore
                                 (Ojs.call x2121 "push"
                                    [|(Ojs.float_to_js x2119)|]);
                               (match x2120 with
                                | Some x2122 ->
                                    ignore
                                      (Ojs.call x2121 "push"
                                         [|(Ojs.bool_to_js x2122)|])
                                | None -> ());
                               x2121))|])
    let (setInt32 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2130 : t) ->
        fun ~byteOffset:(x2125 : float) ->
          fun ~value:(x2126 : float) ->
            fun ?littleEndian:(x2127 : bool option) ->
              fun () ->
                ignore
                  (let x2131 = t_to_js x2130 in
                   Ojs.call (Ojs.get_prop_ascii x2131 "setInt32") "apply"
                     [|x2131;((let x2128 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2128 "push"
                                    [|(Ojs.float_to_js x2125)|]);
                               ignore
                                 (Ojs.call x2128 "push"
                                    [|(Ojs.float_to_js x2126)|]);
                               (match x2127 with
                                | Some x2129 ->
                                    ignore
                                      (Ojs.call x2128 "push"
                                         [|(Ojs.bool_to_js x2129)|])
                                | None -> ());
                               x2128))|])
    let (setUint8 : t -> byteOffset:float -> value:float -> unit) =
      fun (x2134 : t) ->
        fun ~byteOffset:(x2132 : float) ->
          fun ~value:(x2133 : float) ->
            ignore
              (Ojs.call (t_to_js x2134) "setUint8"
                 [|(Ojs.float_to_js x2132);(Ojs.float_to_js x2133)|])
    let (setUint16 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2140 : t) ->
        fun ~byteOffset:(x2135 : float) ->
          fun ~value:(x2136 : float) ->
            fun ?littleEndian:(x2137 : bool option) ->
              fun () ->
                ignore
                  (let x2141 = t_to_js x2140 in
                   Ojs.call (Ojs.get_prop_ascii x2141 "setUint16") "apply"
                     [|x2141;((let x2138 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2138 "push"
                                    [|(Ojs.float_to_js x2135)|]);
                               ignore
                                 (Ojs.call x2138 "push"
                                    [|(Ojs.float_to_js x2136)|]);
                               (match x2137 with
                                | Some x2139 ->
                                    ignore
                                      (Ojs.call x2138 "push"
                                         [|(Ojs.bool_to_js x2139)|])
                                | None -> ());
                               x2138))|])
    let (setUint32 :
      t ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x2147 : t) ->
        fun ~byteOffset:(x2142 : float) ->
          fun ~value:(x2143 : float) ->
            fun ?littleEndian:(x2144 : bool option) ->
              fun () ->
                ignore
                  (let x2148 = t_to_js x2147 in
                   Ojs.call (Ojs.get_prop_ascii x2148 "setUint32") "apply"
                     [|x2148;((let x2145 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2145 "push"
                                    [|(Ojs.float_to_js x2142)|]);
                               ignore
                                 (Ojs.call x2145 "push"
                                    [|(Ojs.float_to_js x2143)|]);
                               (match x2144 with
                                | Some x2146 ->
                                    ignore
                                      (Ojs.call x2145 "push"
                                         [|(Ojs.bool_to_js x2146)|])
                                | None -> ());
                               x2145))|])
    let (create :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?byteLength:float -> unit -> _DataView)
      =
      fun ~buffer:(x2149 : _ArrayBuffer) ->
        fun ?byteOffset:(x2150 : float option) ->
          fun ?byteLength:(x2151 : float option) ->
            fun () ->
              _DataView_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x2152 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2152 "push" [|(_ArrayBuffer_to_js x2149)|]);
                    (match x2150 with
                     | Some x2154 ->
                         ignore
                           (Ojs.call x2152 "push" [|(Ojs.float_to_js x2154)|])
                     | None -> ());
                    (match x2151 with
                     | Some x2153 ->
                         ignore
                           (Ojs.call x2152 "push" [|(Ojs.float_to_js x2153)|])
                     | None -> ());
                    x2152))
  end
module DataViewConstructor =
  struct
    type t = _DataViewConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2156 : Ojs.t) -> _DataViewConstructor_of_js x2156
    and t_to_js : t -> Ojs.t =
      fun (x2155 : _DataViewConstructor) -> _DataViewConstructor_to_js x2155
    let (get_prototype : t -> _DataView) =
      fun (x2157 : t) ->
        _DataView_of_js (Ojs.get_prop_ascii (t_to_js x2157) "prototype")
    let (create :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?byteLength:float -> unit -> _DataView)
      =
      fun (x2164 : t) ->
        fun ~buffer:(x2158 : _ArrayBuffer) ->
          fun ?byteOffset:(x2159 : float option) ->
            fun ?byteLength:(x2160 : float option) ->
              fun () ->
                _DataView_of_js
                  (Ojs.new_obj_arr (t_to_js x2164)
                     (let x2161 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2161 "push" [|(_ArrayBuffer_to_js x2158)|]);
                      (match x2159 with
                       | Some x2163 ->
                           ignore
                             (Ojs.call x2161 "push"
                                [|(Ojs.float_to_js x2163)|])
                       | None -> ());
                      (match x2160 with
                       | Some x2162 ->
                           ignore
                             (Ojs.call x2161 "push"
                                [|(Ojs.float_to_js x2162)|])
                       | None -> ());
                      x2161))
  end
let (dataView : _DataViewConstructor) =
  _DataViewConstructor_of_js (Ojs.get_prop_ascii Ojs.global "DataView")
module Int8Array =
  struct
    type t = _Int8Array
    let rec t_of_js : Ojs.t -> t =
      fun (x2166 : Ojs.t) -> _Int8Array_of_js x2166
    and t_to_js : t -> Ojs.t =
      fun (x2165 : _Int8Array) -> _Int8Array_to_js x2165
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2167 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2167) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2168 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2168) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2169 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2169) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2170 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2170) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2176 : t) ->
        fun ~target:(x2171 : float) ->
          fun ~start:(x2172 : float) ->
            fun ?end_:(x2173 : float option) ->
              fun () ->
                t_of_js
                  (let x2177 = t_to_js x2176 in
                   Ojs.call (Ojs.get_prop_ascii x2177 "copyWithin") "apply"
                     [|x2177;((let x2174 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2174 "push"
                                    [|(Ojs.float_to_js x2171)|]);
                               ignore
                                 (Ojs.call x2174 "push"
                                    [|(Ojs.float_to_js x2172)|]);
                               (match x2173 with
                                | Some x2175 ->
                                    ignore
                                      (Ojs.call x2174 "push"
                                         [|(Ojs.float_to_js x2175)|])
                                | None -> ());
                               x2174))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2185 : t) ->
        fun (x2178 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2179 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2186 = t_to_js x2185 in
                 Ojs.call (Ojs.get_prop_ascii x2186 "every") "apply"
                   [|x2186;((let x2180 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2180 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2182 : Ojs.t) ->
                                          fun (x2183 : Ojs.t) ->
                                            fun (x2184 : Ojs.t) ->
                                              unknown_to_js
                                                (x2178
                                                   ~value:(Ojs.float_of_js
                                                             x2182)
                                                   ~index:(Ojs.float_of_js
                                                             x2183)
                                                   ~array:(t_of_js x2184))))|]);
                             (match x2179 with
                              | Some x2181 ->
                                  ignore
                                    (Ojs.call x2180 "push"
                                       [|(any_to_js x2181)|])
                              | None -> ());
                             x2180))|])
    let (fill : t -> float -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2193 : t) ->
        fun (x2187 : float) ->
          fun ?start:(x2188 : float option) ->
            fun ?end_:(x2189 : float option) ->
              fun () ->
                t_of_js
                  (let x2194 = t_to_js x2193 in
                   Ojs.call (Ojs.get_prop_ascii x2194 "fill") "apply"
                     [|x2194;((let x2190 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2190 "push"
                                    [|(Ojs.float_to_js x2187)|]);
                               (match x2188 with
                                | Some x2192 ->
                                    ignore
                                      (Ojs.call x2190 "push"
                                         [|(Ojs.float_to_js x2192)|])
                                | None -> ());
                               (match x2189 with
                                | Some x2191 ->
                                    ignore
                                      (Ojs.call x2190 "push"
                                         [|(Ojs.float_to_js x2191)|])
                                | None -> ());
                               x2190))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2202 : t) ->
        fun (x2195 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x2196 : any option) ->
            fun () ->
              t_of_js
                (let x2203 = t_to_js x2202 in
                 Ojs.call (Ojs.get_prop_ascii x2203 "filter") "apply"
                   [|x2203;((let x2197 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2197 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2199 : Ojs.t) ->
                                          fun (x2200 : Ojs.t) ->
                                            fun (x2201 : Ojs.t) ->
                                              any_to_js
                                                (x2195
                                                   ~value:(Ojs.float_of_js
                                                             x2199)
                                                   ~index:(Ojs.float_of_js
                                                             x2200)
                                                   ~array:(t_of_js x2201))))|]);
                             (match x2196 with
                              | Some x2198 ->
                                  ignore
                                    (Ojs.call x2197 "push"
                                       [|(any_to_js x2198)|])
                              | None -> ());
                             x2197))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2211 : t) ->
        fun (x2204 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2205 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2212 = t_to_js x2211 in
                 Ojs.call (Ojs.get_prop_ascii x2212 "find") "apply"
                   [|x2212;((let x2206 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2206 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2208 : Ojs.t) ->
                                          fun (x2209 : Ojs.t) ->
                                            fun (x2210 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2204
                                                   ~value:(Ojs.float_of_js
                                                             x2208)
                                                   ~index:(Ojs.float_of_js
                                                             x2209)
                                                   ~obj:(t_of_js x2210))))|]);
                             (match x2205 with
                              | Some x2207 ->
                                  ignore
                                    (Ojs.call x2206 "push"
                                       [|(any_to_js x2207)|])
                              | None -> ());
                             x2206))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2221 : t) ->
        fun (x2214 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2215 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2222 = t_to_js x2221 in
                 Ojs.call (Ojs.get_prop_ascii x2222 "findIndex") "apply"
                   [|x2222;((let x2216 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2216 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2218 : Ojs.t) ->
                                          fun (x2219 : Ojs.t) ->
                                            fun (x2220 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2214
                                                   ~value:(Ojs.float_of_js
                                                             x2218)
                                                   ~index:(Ojs.float_of_js
                                                             x2219)
                                                   ~obj:(t_of_js x2220))))|]);
                             (match x2215 with
                              | Some x2217 ->
                                  ignore
                                    (Ojs.call x2216 "push"
                                       [|(any_to_js x2217)|])
                              | None -> ());
                             x2216))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2230 : t) ->
        fun
          ~callbackfn:(x2223 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2224 : any option) ->
            fun () ->
              ignore
                (let x2231 = t_to_js x2230 in
                 Ojs.call (Ojs.get_prop_ascii x2231 "forEach") "apply"
                   [|x2231;((let x2225 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2225 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2227 : Ojs.t) ->
                                          fun (x2228 : Ojs.t) ->
                                            fun (x2229 : Ojs.t) ->
                                              x2223
                                                ~value:(Ojs.float_of_js x2227)
                                                ~index:(Ojs.float_of_js x2228)
                                                ~array:(t_of_js x2229)))|]);
                             (match x2224 with
                              | Some x2226 ->
                                  ignore
                                    (Ojs.call x2225 "push"
                                       [|(any_to_js x2226)|])
                              | None -> ());
                             x2225))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2236 : t) ->
        fun ~searchElement:(x2232 : float) ->
          fun ?fromIndex:(x2233 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2237 = t_to_js x2236 in
                 Ojs.call (Ojs.get_prop_ascii x2237 "indexOf") "apply"
                   [|x2237;((let x2234 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2234 "push"
                                  [|(Ojs.float_to_js x2232)|]);
                             (match x2233 with
                              | Some x2235 ->
                                  ignore
                                    (Ojs.call x2234 "push"
                                       [|(Ojs.float_to_js x2235)|])
                              | None -> ());
                             x2234))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2241 : t) ->
        fun ?separator:(x2238 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2242 = t_to_js x2241 in
               Ojs.call (Ojs.get_prop_ascii x2242 "join") "apply"
                 [|x2242;((let x2239 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2238 with
                            | Some x2240 ->
                                ignore
                                  (Ojs.call x2239 "push"
                                     [|(Ojs.string_to_js x2240)|])
                            | None -> ());
                           x2239))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2247 : t) ->
        fun ~searchElement:(x2243 : float) ->
          fun ?fromIndex:(x2244 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2248 = t_to_js x2247 in
                 Ojs.call (Ojs.get_prop_ascii x2248 "lastIndexOf") "apply"
                   [|x2248;((let x2245 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2245 "push"
                                  [|(Ojs.float_to_js x2243)|]);
                             (match x2244 with
                              | Some x2246 ->
                                  ignore
                                    (Ojs.call x2245 "push"
                                       [|(Ojs.float_to_js x2246)|])
                              | None -> ());
                             x2245))|])
    let (get_length : t -> float) =
      fun (x2249 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2249) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2257 : t) ->
        fun
          ~callbackfn:(x2250 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2251 : any option) ->
            fun () ->
              t_of_js
                (let x2258 = t_to_js x2257 in
                 Ojs.call (Ojs.get_prop_ascii x2258 "map") "apply"
                   [|x2258;((let x2252 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2252 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2254 : Ojs.t) ->
                                          fun (x2255 : Ojs.t) ->
                                            fun (x2256 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2250
                                                   ~value:(Ojs.float_of_js
                                                             x2254)
                                                   ~index:(Ojs.float_of_js
                                                             x2255)
                                                   ~array:(t_of_js x2256))))|]);
                             (match x2251 with
                              | Some x2253 ->
                                  ignore
                                    (Ojs.call x2252 "push"
                                       [|(any_to_js x2253)|])
                              | None -> ());
                             x2252))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2264 : t) ->
        fun
          ~callbackfn:(x2259 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2264) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2260 : Ojs.t) ->
                       fun (x2261 : Ojs.t) ->
                         fun (x2262 : Ojs.t) ->
                           fun (x2263 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2259 ~previousValue:(Ojs.float_of_js x2260)
                                  ~currentValue:(Ojs.float_of_js x2261)
                                  ~currentIndex:(Ojs.float_of_js x2262)
                                  ~array:(t_of_js x2263))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2271 : t) ->
        fun
          ~callbackfn:(x2265 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2270 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2271) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2266 : Ojs.t) ->
                         fun (x2267 : Ojs.t) ->
                           fun (x2268 : Ojs.t) ->
                             fun (x2269 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2265
                                    ~previousValue:(Ojs.float_of_js x2266)
                                    ~currentValue:(Ojs.float_of_js x2267)
                                    ~currentIndex:(Ojs.float_of_js x2268)
                                    ~array:(t_of_js x2269))));(Ojs.float_to_js
                                                                 x2270)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2278 : t) ->
        fun
          ~callbackfn:(x2272 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2277 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2278) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2273 : Ojs.t) ->
                         fun (x2274 : Ojs.t) ->
                           fun (x2275 : Ojs.t) ->
                             fun (x2276 : Ojs.t) ->
                               Obj.magic
                                 (x2272 ~previousValue:(Obj.magic x2273)
                                    ~currentValue:(Ojs.float_of_js x2274)
                                    ~currentIndex:(Ojs.float_of_js x2275)
                                    ~array:(t_of_js x2276))));(Obj.magic
                                                                 x2277)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2284 : t) ->
        fun
          ~callbackfn:(x2279 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2284) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x2280 : Ojs.t) ->
                       fun (x2281 : Ojs.t) ->
                         fun (x2282 : Ojs.t) ->
                           fun (x2283 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2279 ~previousValue:(Ojs.float_of_js x2280)
                                  ~currentValue:(Ojs.float_of_js x2281)
                                  ~currentIndex:(Ojs.float_of_js x2282)
                                  ~array:(t_of_js x2283))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2291 : t) ->
        fun
          ~callbackfn:(x2285 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2290 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2291) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2286 : Ojs.t) ->
                         fun (x2287 : Ojs.t) ->
                           fun (x2288 : Ojs.t) ->
                             fun (x2289 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2285
                                    ~previousValue:(Ojs.float_of_js x2286)
                                    ~currentValue:(Ojs.float_of_js x2287)
                                    ~currentIndex:(Ojs.float_of_js x2288)
                                    ~array:(t_of_js x2289))));(Ojs.float_to_js
                                                                 x2290)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2298 : t) ->
        fun
          ~callbackfn:(x2292 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2297 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2298) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2293 : Ojs.t) ->
                         fun (x2294 : Ojs.t) ->
                           fun (x2295 : Ojs.t) ->
                             fun (x2296 : Ojs.t) ->
                               Obj.magic
                                 (x2292 ~previousValue:(Obj.magic x2293)
                                    ~currentValue:(Ojs.float_of_js x2294)
                                    ~currentIndex:(Ojs.float_of_js x2295)
                                    ~array:(t_of_js x2296))));(Obj.magic
                                                                 x2297)|])
    let (reverse : t -> t) =
      fun (x2299 : t) -> t_of_js (Ojs.call (t_to_js x2299) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x2305 : t) ->
        fun ~array:(x2300 : float _Array) ->
          fun ?offset:(x2301 : float option) ->
            fun () ->
              ignore
                (let x2306 = t_to_js x2305 in
                 Ojs.call (Ojs.get_prop_ascii x2306 "set") "apply"
                   [|x2306;((let x2302 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2302 "push"
                                  [|(_Array_to_js Ojs.float_to_js x2300)|]);
                             (match x2301 with
                              | Some x2303 ->
                                  ignore
                                    (Ojs.call x2302 "push"
                                       [|(Ojs.float_to_js x2303)|])
                              | None -> ());
                             x2302))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2312 : t) ->
        fun ?start:(x2307 : float option) ->
          fun ?end_:(x2308 : float option) ->
            fun () ->
              t_of_js
                (let x2313 = t_to_js x2312 in
                 Ojs.call (Ojs.get_prop_ascii x2313 "slice") "apply"
                   [|x2313;((let x2309 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2307 with
                              | Some x2311 ->
                                  ignore
                                    (Ojs.call x2309 "push"
                                       [|(Ojs.float_to_js x2311)|])
                              | None -> ());
                             (match x2308 with
                              | Some x2310 ->
                                  ignore
                                    (Ojs.call x2309 "push"
                                       [|(Ojs.float_to_js x2310)|])
                              | None -> ());
                             x2309))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2321 : t) ->
        fun (x2314 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2315 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2322 = t_to_js x2321 in
                 Ojs.call (Ojs.get_prop_ascii x2322 "some") "apply"
                   [|x2322;((let x2316 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2316 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2318 : Ojs.t) ->
                                          fun (x2319 : Ojs.t) ->
                                            fun (x2320 : Ojs.t) ->
                                              unknown_to_js
                                                (x2314
                                                   ~value:(Ojs.float_of_js
                                                             x2318)
                                                   ~index:(Ojs.float_of_js
                                                             x2319)
                                                   ~array:(t_of_js x2320))))|]);
                             (match x2315 with
                              | Some x2317 ->
                                  ignore
                                    (Ojs.call x2316 "push"
                                       [|(any_to_js x2317)|])
                              | None -> ());
                             x2316))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x2328 : t) ->
        fun ?compareFn:(x2323 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x2329 = t_to_js x2328 in
               Ojs.call (Ojs.get_prop_ascii x2329 "sort") "apply"
                 [|x2329;((let x2324 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2323 with
                            | Some x2325 ->
                                ignore
                                  (Ojs.call x2324 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2326 : Ojs.t) ->
                                             fun (x2327 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x2325
                                                    ~a:(Ojs.float_of_js x2326)
                                                    ~b:(Ojs.float_of_js x2327))))|])
                            | None -> ());
                           x2324))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x2335 : t) ->
        fun ?begin_:(x2330 : float option) ->
          fun ?end_:(x2331 : float option) ->
            fun () ->
              t_of_js
                (let x2336 = t_to_js x2335 in
                 Ojs.call (Ojs.get_prop_ascii x2336 "subarray") "apply"
                   [|x2336;((let x2332 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2330 with
                              | Some x2334 ->
                                  ignore
                                    (Ojs.call x2332 "push"
                                       [|(Ojs.float_to_js x2334)|])
                              | None -> ());
                             (match x2331 with
                              | Some x2333 ->
                                  ignore
                                    (Ojs.call x2332 "push"
                                       [|(Ojs.float_to_js x2333)|])
                              | None -> ());
                             x2332))|])
    let (toLocaleString : t -> string) =
      fun (x2337 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2337) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x2338 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2338) "toString" [||])
    let (valueOf : t -> t) =
      fun (x2339 : t) -> t_of_js (Ojs.call (t_to_js x2339) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x2340 : t) ->
        fun (x2341 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x2340) (Ojs.float_to_js x2341))
    let (set : t -> float -> float -> unit) =
      fun (x2342 : t) ->
        fun (x2343 : float) ->
          fun (x2344 : float) ->
            Ojs.set_prop (t_to_js x2342) (Ojs.float_to_js x2343)
              (Ojs.float_to_js x2344)
    let (create : length:float -> _Int8Array) =
      fun ~length:(x2345 : float) ->
        _Int8Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x2345)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Int8Array) =
      fun ~array:(x2346 : (_ArrayBuffer, float _Array) union2) ->
        _Int8Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x2348 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x2348) x2346)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Int8Array)
      =
      fun ~buffer:(x2350 : _ArrayBuffer) ->
        fun ?byteOffset:(x2351 : float option) ->
          fun ?length:(x2352 : float option) ->
            fun () ->
              _Int8Array_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x2353 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2353 "push" [|(_ArrayBuffer_to_js x2350)|]);
                    (match x2351 with
                     | Some x2355 ->
                         ignore
                           (Ojs.call x2353 "push" [|(Ojs.float_to_js x2355)|])
                     | None -> ());
                    (match x2352 with
                     | Some x2354 ->
                         ignore
                           (Ojs.call x2353 "push" [|(Ojs.float_to_js x2354)|])
                     | None -> ());
                    x2353))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> _Int8Array) =
      fun (x2356 : float list) ->
        _Int8Array_of_js
          (let x2359 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x2359 "of") "apply"
             [|x2359;((let x2357 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2358 : float) ->
                            ignore
                              (Ojs.call x2357 "push"
                                 [|(Ojs.float_to_js x2358)|])) x2356;
                       x2357))|])
    let (from : array:float _Array -> _Int8Array) =
      fun ~array:(x2360 : float _Array) ->
        _Int8Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(_Array_to_js Ojs.float_to_js x2360)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Int8Array)
      =
      fun ~array:(x2362 : 'T _Array) ->
        fun ~mapfn:(x2363 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x2364 : any option) ->
            fun () ->
              _Int8Array_of_js
                (let x2370 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x2370 "from") "apply"
                   [|x2370;((let x2365 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2365 "push"
                                  [|(_Array_to_js Obj.magic x2362)|]);
                             ignore
                               (Ojs.call x2365 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2367 : Ojs.t) ->
                                          fun (x2368 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x2363 ~v:(Obj.magic x2367)
                                                 ~k:(Ojs.float_of_js x2368))))|]);
                             (match x2364 with
                              | Some x2366 ->
                                  ignore
                                    (Ojs.call x2365 "push"
                                       [|(any_to_js x2366)|])
                              | None -> ());
                             x2365))|])
  end
module Int8ArrayConstructor =
  struct
    type t = _Int8ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2372 : Ojs.t) -> _Int8ArrayConstructor_of_js x2372
    and t_to_js : t -> Ojs.t =
      fun (x2371 : _Int8ArrayConstructor) ->
        _Int8ArrayConstructor_to_js x2371
    let (get_prototype : t -> _Int8Array) =
      fun (x2373 : t) ->
        _Int8Array_of_js (Ojs.get_prop_ascii (t_to_js x2373) "prototype")
    let (create : t -> length:float -> _Int8Array) =
      fun (x2375 : t) ->
        fun ~length:(x2374 : float) ->
          _Int8Array_of_js
            (Ojs.new_obj (t_to_js x2375) [|(Ojs.float_to_js x2374)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Int8Array) =
      fun (x2380 : t) ->
        fun ~array:(x2376 : (_ArrayBuffer, float _Array) union2) ->
          _Int8Array_of_js
            (Ojs.new_obj (t_to_js x2380)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x2378 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x2378) x2376)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Int8Array)
      =
      fun (x2387 : t) ->
        fun ~buffer:(x2381 : _ArrayBuffer) ->
          fun ?byteOffset:(x2382 : float option) ->
            fun ?length:(x2383 : float option) ->
              fun () ->
                _Int8Array_of_js
                  (Ojs.new_obj_arr (t_to_js x2387)
                     (let x2384 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2384 "push" [|(_ArrayBuffer_to_js x2381)|]);
                      (match x2382 with
                       | Some x2386 ->
                           ignore
                             (Ojs.call x2384 "push"
                                [|(Ojs.float_to_js x2386)|])
                       | None -> ());
                      (match x2383 with
                       | Some x2385 ->
                           ignore
                             (Ojs.call x2384 "push"
                                [|(Ojs.float_to_js x2385)|])
                       | None -> ());
                      x2384))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2388 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2388) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> _Int8Array) =
      fun (x2392 : t) ->
        fun (x2389 : float list) ->
          _Int8Array_of_js
            (let x2393 = t_to_js x2392 in
             Ojs.call (Ojs.get_prop_ascii x2393 "of") "apply"
               [|x2393;((let x2390 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x2391 : float) ->
                              ignore
                                (Ojs.call x2390 "push"
                                   [|(Ojs.float_to_js x2391)|])) x2389;
                         x2390))|])
    let (from : t -> array:float _Array -> _Int8Array) =
      fun (x2396 : t) ->
        fun ~array:(x2394 : float _Array) ->
          _Int8Array_of_js
            (Ojs.call (t_to_js x2396) "from"
               [|(_Array_to_js Ojs.float_to_js x2394)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Int8Array)
      =
      fun (x2405 : t) ->
        fun ~array:(x2397 : 'T _Array) ->
          fun ~mapfn:(x2398 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x2399 : any option) ->
              fun () ->
                _Int8Array_of_js
                  (let x2406 = t_to_js x2405 in
                   Ojs.call (Ojs.get_prop_ascii x2406 "from") "apply"
                     [|x2406;((let x2400 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2400 "push"
                                    [|(_Array_to_js Obj.magic x2397)|]);
                               ignore
                                 (Ojs.call x2400 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x2402 : Ojs.t) ->
                                            fun (x2403 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2398 ~v:(Obj.magic x2402)
                                                   ~k:(Ojs.float_of_js x2403))))|]);
                               (match x2399 with
                                | Some x2401 ->
                                    ignore
                                      (Ojs.call x2400 "push"
                                         [|(any_to_js x2401)|])
                                | None -> ());
                               x2400))|])
  end
let (int8Array : _Int8ArrayConstructor) =
  _Int8ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Int8Array")
module Uint8Array =
  struct
    type t = _Uint8Array
    let rec t_of_js : Ojs.t -> t =
      fun (x2408 : Ojs.t) -> _Uint8Array_of_js x2408
    and t_to_js : t -> Ojs.t =
      fun (x2407 : _Uint8Array) -> _Uint8Array_to_js x2407
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2409 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2409) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2410 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2410) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2411 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2411) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2412 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2412) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2418 : t) ->
        fun ~target:(x2413 : float) ->
          fun ~start:(x2414 : float) ->
            fun ?end_:(x2415 : float option) ->
              fun () ->
                t_of_js
                  (let x2419 = t_to_js x2418 in
                   Ojs.call (Ojs.get_prop_ascii x2419 "copyWithin") "apply"
                     [|x2419;((let x2416 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2416 "push"
                                    [|(Ojs.float_to_js x2413)|]);
                               ignore
                                 (Ojs.call x2416 "push"
                                    [|(Ojs.float_to_js x2414)|]);
                               (match x2415 with
                                | Some x2417 ->
                                    ignore
                                      (Ojs.call x2416 "push"
                                         [|(Ojs.float_to_js x2417)|])
                                | None -> ());
                               x2416))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2427 : t) ->
        fun (x2420 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2421 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2428 = t_to_js x2427 in
                 Ojs.call (Ojs.get_prop_ascii x2428 "every") "apply"
                   [|x2428;((let x2422 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2422 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2424 : Ojs.t) ->
                                          fun (x2425 : Ojs.t) ->
                                            fun (x2426 : Ojs.t) ->
                                              unknown_to_js
                                                (x2420
                                                   ~value:(Ojs.float_of_js
                                                             x2424)
                                                   ~index:(Ojs.float_of_js
                                                             x2425)
                                                   ~array:(t_of_js x2426))))|]);
                             (match x2421 with
                              | Some x2423 ->
                                  ignore
                                    (Ojs.call x2422 "push"
                                       [|(any_to_js x2423)|])
                              | None -> ());
                             x2422))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2435 : t) ->
        fun ~value:(x2429 : float) ->
          fun ?start:(x2430 : float option) ->
            fun ?end_:(x2431 : float option) ->
              fun () ->
                t_of_js
                  (let x2436 = t_to_js x2435 in
                   Ojs.call (Ojs.get_prop_ascii x2436 "fill") "apply"
                     [|x2436;((let x2432 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2432 "push"
                                    [|(Ojs.float_to_js x2429)|]);
                               (match x2430 with
                                | Some x2434 ->
                                    ignore
                                      (Ojs.call x2432 "push"
                                         [|(Ojs.float_to_js x2434)|])
                                | None -> ());
                               (match x2431 with
                                | Some x2433 ->
                                    ignore
                                      (Ojs.call x2432 "push"
                                         [|(Ojs.float_to_js x2433)|])
                                | None -> ());
                               x2432))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2444 : t) ->
        fun (x2437 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x2438 : any option) ->
            fun () ->
              t_of_js
                (let x2445 = t_to_js x2444 in
                 Ojs.call (Ojs.get_prop_ascii x2445 "filter") "apply"
                   [|x2445;((let x2439 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2439 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2441 : Ojs.t) ->
                                          fun (x2442 : Ojs.t) ->
                                            fun (x2443 : Ojs.t) ->
                                              any_to_js
                                                (x2437
                                                   ~value:(Ojs.float_of_js
                                                             x2441)
                                                   ~index:(Ojs.float_of_js
                                                             x2442)
                                                   ~array:(t_of_js x2443))))|]);
                             (match x2438 with
                              | Some x2440 ->
                                  ignore
                                    (Ojs.call x2439 "push"
                                       [|(any_to_js x2440)|])
                              | None -> ());
                             x2439))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2453 : t) ->
        fun (x2446 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2447 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2454 = t_to_js x2453 in
                 Ojs.call (Ojs.get_prop_ascii x2454 "find") "apply"
                   [|x2454;((let x2448 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2448 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2450 : Ojs.t) ->
                                          fun (x2451 : Ojs.t) ->
                                            fun (x2452 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2446
                                                   ~value:(Ojs.float_of_js
                                                             x2450)
                                                   ~index:(Ojs.float_of_js
                                                             x2451)
                                                   ~obj:(t_of_js x2452))))|]);
                             (match x2447 with
                              | Some x2449 ->
                                  ignore
                                    (Ojs.call x2448 "push"
                                       [|(any_to_js x2449)|])
                              | None -> ());
                             x2448))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2463 : t) ->
        fun (x2456 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2457 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2464 = t_to_js x2463 in
                 Ojs.call (Ojs.get_prop_ascii x2464 "findIndex") "apply"
                   [|x2464;((let x2458 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2458 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2460 : Ojs.t) ->
                                          fun (x2461 : Ojs.t) ->
                                            fun (x2462 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2456
                                                   ~value:(Ojs.float_of_js
                                                             x2460)
                                                   ~index:(Ojs.float_of_js
                                                             x2461)
                                                   ~obj:(t_of_js x2462))))|]);
                             (match x2457 with
                              | Some x2459 ->
                                  ignore
                                    (Ojs.call x2458 "push"
                                       [|(any_to_js x2459)|])
                              | None -> ());
                             x2458))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2472 : t) ->
        fun
          ~callbackfn:(x2465 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2466 : any option) ->
            fun () ->
              ignore
                (let x2473 = t_to_js x2472 in
                 Ojs.call (Ojs.get_prop_ascii x2473 "forEach") "apply"
                   [|x2473;((let x2467 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2467 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2469 : Ojs.t) ->
                                          fun (x2470 : Ojs.t) ->
                                            fun (x2471 : Ojs.t) ->
                                              x2465
                                                ~value:(Ojs.float_of_js x2469)
                                                ~index:(Ojs.float_of_js x2470)
                                                ~array:(t_of_js x2471)))|]);
                             (match x2466 with
                              | Some x2468 ->
                                  ignore
                                    (Ojs.call x2467 "push"
                                       [|(any_to_js x2468)|])
                              | None -> ());
                             x2467))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2478 : t) ->
        fun ~searchElement:(x2474 : float) ->
          fun ?fromIndex:(x2475 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2479 = t_to_js x2478 in
                 Ojs.call (Ojs.get_prop_ascii x2479 "indexOf") "apply"
                   [|x2479;((let x2476 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2476 "push"
                                  [|(Ojs.float_to_js x2474)|]);
                             (match x2475 with
                              | Some x2477 ->
                                  ignore
                                    (Ojs.call x2476 "push"
                                       [|(Ojs.float_to_js x2477)|])
                              | None -> ());
                             x2476))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2483 : t) ->
        fun ?separator:(x2480 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2484 = t_to_js x2483 in
               Ojs.call (Ojs.get_prop_ascii x2484 "join") "apply"
                 [|x2484;((let x2481 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2480 with
                            | Some x2482 ->
                                ignore
                                  (Ojs.call x2481 "push"
                                     [|(Ojs.string_to_js x2482)|])
                            | None -> ());
                           x2481))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2489 : t) ->
        fun ~searchElement:(x2485 : float) ->
          fun ?fromIndex:(x2486 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2490 = t_to_js x2489 in
                 Ojs.call (Ojs.get_prop_ascii x2490 "lastIndexOf") "apply"
                   [|x2490;((let x2487 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2487 "push"
                                  [|(Ojs.float_to_js x2485)|]);
                             (match x2486 with
                              | Some x2488 ->
                                  ignore
                                    (Ojs.call x2487 "push"
                                       [|(Ojs.float_to_js x2488)|])
                              | None -> ());
                             x2487))|])
    let (get_length : t -> float) =
      fun (x2491 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2491) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2499 : t) ->
        fun
          ~callbackfn:(x2492 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2493 : any option) ->
            fun () ->
              t_of_js
                (let x2500 = t_to_js x2499 in
                 Ojs.call (Ojs.get_prop_ascii x2500 "map") "apply"
                   [|x2500;((let x2494 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2494 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2496 : Ojs.t) ->
                                          fun (x2497 : Ojs.t) ->
                                            fun (x2498 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2492
                                                   ~value:(Ojs.float_of_js
                                                             x2496)
                                                   ~index:(Ojs.float_of_js
                                                             x2497)
                                                   ~array:(t_of_js x2498))))|]);
                             (match x2493 with
                              | Some x2495 ->
                                  ignore
                                    (Ojs.call x2494 "push"
                                       [|(any_to_js x2495)|])
                              | None -> ());
                             x2494))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2506 : t) ->
        fun
          ~callbackfn:(x2501 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2506) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2502 : Ojs.t) ->
                       fun (x2503 : Ojs.t) ->
                         fun (x2504 : Ojs.t) ->
                           fun (x2505 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2501 ~previousValue:(Ojs.float_of_js x2502)
                                  ~currentValue:(Ojs.float_of_js x2503)
                                  ~currentIndex:(Ojs.float_of_js x2504)
                                  ~array:(t_of_js x2505))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2513 : t) ->
        fun
          ~callbackfn:(x2507 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2512 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2513) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2508 : Ojs.t) ->
                         fun (x2509 : Ojs.t) ->
                           fun (x2510 : Ojs.t) ->
                             fun (x2511 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2507
                                    ~previousValue:(Ojs.float_of_js x2508)
                                    ~currentValue:(Ojs.float_of_js x2509)
                                    ~currentIndex:(Ojs.float_of_js x2510)
                                    ~array:(t_of_js x2511))));(Ojs.float_to_js
                                                                 x2512)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2520 : t) ->
        fun
          ~callbackfn:(x2514 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2519 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2520) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2515 : Ojs.t) ->
                         fun (x2516 : Ojs.t) ->
                           fun (x2517 : Ojs.t) ->
                             fun (x2518 : Ojs.t) ->
                               Obj.magic
                                 (x2514 ~previousValue:(Obj.magic x2515)
                                    ~currentValue:(Ojs.float_of_js x2516)
                                    ~currentIndex:(Ojs.float_of_js x2517)
                                    ~array:(t_of_js x2518))));(Obj.magic
                                                                 x2519)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2526 : t) ->
        fun
          ~callbackfn:(x2521 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2526) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x2522 : Ojs.t) ->
                       fun (x2523 : Ojs.t) ->
                         fun (x2524 : Ojs.t) ->
                           fun (x2525 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2521 ~previousValue:(Ojs.float_of_js x2522)
                                  ~currentValue:(Ojs.float_of_js x2523)
                                  ~currentIndex:(Ojs.float_of_js x2524)
                                  ~array:(t_of_js x2525))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2533 : t) ->
        fun
          ~callbackfn:(x2527 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2532 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2533) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2528 : Ojs.t) ->
                         fun (x2529 : Ojs.t) ->
                           fun (x2530 : Ojs.t) ->
                             fun (x2531 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2527
                                    ~previousValue:(Ojs.float_of_js x2528)
                                    ~currentValue:(Ojs.float_of_js x2529)
                                    ~currentIndex:(Ojs.float_of_js x2530)
                                    ~array:(t_of_js x2531))));(Ojs.float_to_js
                                                                 x2532)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2540 : t) ->
        fun
          ~callbackfn:(x2534 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2539 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2540) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2535 : Ojs.t) ->
                         fun (x2536 : Ojs.t) ->
                           fun (x2537 : Ojs.t) ->
                             fun (x2538 : Ojs.t) ->
                               Obj.magic
                                 (x2534 ~previousValue:(Obj.magic x2535)
                                    ~currentValue:(Ojs.float_of_js x2536)
                                    ~currentIndex:(Ojs.float_of_js x2537)
                                    ~array:(t_of_js x2538))));(Obj.magic
                                                                 x2539)|])
    let (reverse : t -> t) =
      fun (x2541 : t) -> t_of_js (Ojs.call (t_to_js x2541) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x2547 : t) ->
        fun ~array:(x2542 : float _Array) ->
          fun ?offset:(x2543 : float option) ->
            fun () ->
              ignore
                (let x2548 = t_to_js x2547 in
                 Ojs.call (Ojs.get_prop_ascii x2548 "set") "apply"
                   [|x2548;((let x2544 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2544 "push"
                                  [|(_Array_to_js Ojs.float_to_js x2542)|]);
                             (match x2543 with
                              | Some x2545 ->
                                  ignore
                                    (Ojs.call x2544 "push"
                                       [|(Ojs.float_to_js x2545)|])
                              | None -> ());
                             x2544))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2554 : t) ->
        fun ?start:(x2549 : float option) ->
          fun ?end_:(x2550 : float option) ->
            fun () ->
              t_of_js
                (let x2555 = t_to_js x2554 in
                 Ojs.call (Ojs.get_prop_ascii x2555 "slice") "apply"
                   [|x2555;((let x2551 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2549 with
                              | Some x2553 ->
                                  ignore
                                    (Ojs.call x2551 "push"
                                       [|(Ojs.float_to_js x2553)|])
                              | None -> ());
                             (match x2550 with
                              | Some x2552 ->
                                  ignore
                                    (Ojs.call x2551 "push"
                                       [|(Ojs.float_to_js x2552)|])
                              | None -> ());
                             x2551))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2563 : t) ->
        fun (x2556 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2557 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2564 = t_to_js x2563 in
                 Ojs.call (Ojs.get_prop_ascii x2564 "some") "apply"
                   [|x2564;((let x2558 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2558 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2560 : Ojs.t) ->
                                          fun (x2561 : Ojs.t) ->
                                            fun (x2562 : Ojs.t) ->
                                              unknown_to_js
                                                (x2556
                                                   ~value:(Ojs.float_of_js
                                                             x2560)
                                                   ~index:(Ojs.float_of_js
                                                             x2561)
                                                   ~array:(t_of_js x2562))))|]);
                             (match x2557 with
                              | Some x2559 ->
                                  ignore
                                    (Ojs.call x2558 "push"
                                       [|(any_to_js x2559)|])
                              | None -> ());
                             x2558))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x2570 : t) ->
        fun ?compareFn:(x2565 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x2571 = t_to_js x2570 in
               Ojs.call (Ojs.get_prop_ascii x2571 "sort") "apply"
                 [|x2571;((let x2566 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2565 with
                            | Some x2567 ->
                                ignore
                                  (Ojs.call x2566 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2568 : Ojs.t) ->
                                             fun (x2569 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x2567
                                                    ~a:(Ojs.float_of_js x2568)
                                                    ~b:(Ojs.float_of_js x2569))))|])
                            | None -> ());
                           x2566))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x2577 : t) ->
        fun ?begin_:(x2572 : float option) ->
          fun ?end_:(x2573 : float option) ->
            fun () ->
              t_of_js
                (let x2578 = t_to_js x2577 in
                 Ojs.call (Ojs.get_prop_ascii x2578 "subarray") "apply"
                   [|x2578;((let x2574 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2572 with
                              | Some x2576 ->
                                  ignore
                                    (Ojs.call x2574 "push"
                                       [|(Ojs.float_to_js x2576)|])
                              | None -> ());
                             (match x2573 with
                              | Some x2575 ->
                                  ignore
                                    (Ojs.call x2574 "push"
                                       [|(Ojs.float_to_js x2575)|])
                              | None -> ());
                             x2574))|])
    let (toLocaleString : t -> string) =
      fun (x2579 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2579) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x2580 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2580) "toString" [||])
    let (valueOf : t -> t) =
      fun (x2581 : t) -> t_of_js (Ojs.call (t_to_js x2581) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x2582 : t) ->
        fun (x2583 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x2582) (Ojs.float_to_js x2583))
    let (set : t -> float -> float -> unit) =
      fun (x2584 : t) ->
        fun (x2585 : float) ->
          fun (x2586 : float) ->
            Ojs.set_prop (t_to_js x2584) (Ojs.float_to_js x2585)
              (Ojs.float_to_js x2586)
    let (create : length:float -> _Uint8Array) =
      fun ~length:(x2587 : float) ->
        _Uint8Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x2587)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Uint8Array)
      =
      fun ~array:(x2588 : (_ArrayBuffer, float _Array) union2) ->
        _Uint8Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x2590 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x2590) x2588)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Uint8Array)
      =
      fun ~buffer:(x2592 : _ArrayBuffer) ->
        fun ?byteOffset:(x2593 : float option) ->
          fun ?length:(x2594 : float option) ->
            fun () ->
              _Uint8Array_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x2595 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2595 "push" [|(_ArrayBuffer_to_js x2592)|]);
                    (match x2593 with
                     | Some x2597 ->
                         ignore
                           (Ojs.call x2595 "push" [|(Ojs.float_to_js x2597)|])
                     | None -> ());
                    (match x2594 with
                     | Some x2596 ->
                         ignore
                           (Ojs.call x2595 "push" [|(Ojs.float_to_js x2596)|])
                     | None -> ());
                    x2595))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> _Uint8Array) =
      fun (x2598 : float list) ->
        _Uint8Array_of_js
          (let x2601 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x2601 "of") "apply"
             [|x2601;((let x2599 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2600 : float) ->
                            ignore
                              (Ojs.call x2599 "push"
                                 [|(Ojs.float_to_js x2600)|])) x2598;
                       x2599))|])
    let (from : array:float _Array -> _Uint8Array) =
      fun ~array:(x2602 : float _Array) ->
        _Uint8Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(_Array_to_js Ojs.float_to_js x2602)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Uint8Array)
      =
      fun ~array:(x2604 : 'T _Array) ->
        fun ~mapfn:(x2605 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x2606 : any option) ->
            fun () ->
              _Uint8Array_of_js
                (let x2612 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x2612 "from") "apply"
                   [|x2612;((let x2607 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2607 "push"
                                  [|(_Array_to_js Obj.magic x2604)|]);
                             ignore
                               (Ojs.call x2607 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2609 : Ojs.t) ->
                                          fun (x2610 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x2605 ~v:(Obj.magic x2609)
                                                 ~k:(Ojs.float_of_js x2610))))|]);
                             (match x2606 with
                              | Some x2608 ->
                                  ignore
                                    (Ojs.call x2607 "push"
                                       [|(any_to_js x2608)|])
                              | None -> ());
                             x2607))|])
  end
module Uint8ArrayConstructor =
  struct
    type t = _Uint8ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2614 : Ojs.t) -> _Uint8ArrayConstructor_of_js x2614
    and t_to_js : t -> Ojs.t =
      fun (x2613 : _Uint8ArrayConstructor) ->
        _Uint8ArrayConstructor_to_js x2613
    let (get_prototype : t -> _Uint8Array) =
      fun (x2615 : t) ->
        _Uint8Array_of_js (Ojs.get_prop_ascii (t_to_js x2615) "prototype")
    let (create : t -> length:float -> _Uint8Array) =
      fun (x2617 : t) ->
        fun ~length:(x2616 : float) ->
          _Uint8Array_of_js
            (Ojs.new_obj (t_to_js x2617) [|(Ojs.float_to_js x2616)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Uint8Array) =
      fun (x2622 : t) ->
        fun ~array:(x2618 : (_ArrayBuffer, float _Array) union2) ->
          _Uint8Array_of_js
            (Ojs.new_obj (t_to_js x2622)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x2620 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x2620) x2618)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Uint8Array)
      =
      fun (x2629 : t) ->
        fun ~buffer:(x2623 : _ArrayBuffer) ->
          fun ?byteOffset:(x2624 : float option) ->
            fun ?length:(x2625 : float option) ->
              fun () ->
                _Uint8Array_of_js
                  (Ojs.new_obj_arr (t_to_js x2629)
                     (let x2626 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2626 "push" [|(_ArrayBuffer_to_js x2623)|]);
                      (match x2624 with
                       | Some x2628 ->
                           ignore
                             (Ojs.call x2626 "push"
                                [|(Ojs.float_to_js x2628)|])
                       | None -> ());
                      (match x2625 with
                       | Some x2627 ->
                           ignore
                             (Ojs.call x2626 "push"
                                [|(Ojs.float_to_js x2627)|])
                       | None -> ());
                      x2626))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2630 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2630) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> _Uint8Array) =
      fun (x2634 : t) ->
        fun (x2631 : float list) ->
          _Uint8Array_of_js
            (let x2635 = t_to_js x2634 in
             Ojs.call (Ojs.get_prop_ascii x2635 "of") "apply"
               [|x2635;((let x2632 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x2633 : float) ->
                              ignore
                                (Ojs.call x2632 "push"
                                   [|(Ojs.float_to_js x2633)|])) x2631;
                         x2632))|])
    let (from : t -> array:float _Array -> _Uint8Array) =
      fun (x2638 : t) ->
        fun ~array:(x2636 : float _Array) ->
          _Uint8Array_of_js
            (Ojs.call (t_to_js x2638) "from"
               [|(_Array_to_js Ojs.float_to_js x2636)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Uint8Array)
      =
      fun (x2647 : t) ->
        fun ~array:(x2639 : 'T _Array) ->
          fun ~mapfn:(x2640 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x2641 : any option) ->
              fun () ->
                _Uint8Array_of_js
                  (let x2648 = t_to_js x2647 in
                   Ojs.call (Ojs.get_prop_ascii x2648 "from") "apply"
                     [|x2648;((let x2642 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2642 "push"
                                    [|(_Array_to_js Obj.magic x2639)|]);
                               ignore
                                 (Ojs.call x2642 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x2644 : Ojs.t) ->
                                            fun (x2645 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2640 ~v:(Obj.magic x2644)
                                                   ~k:(Ojs.float_of_js x2645))))|]);
                               (match x2641 with
                                | Some x2643 ->
                                    ignore
                                      (Ojs.call x2642 "push"
                                         [|(any_to_js x2643)|])
                                | None -> ());
                               x2642))|])
  end
let (uint8Array : _Uint8ArrayConstructor) =
  _Uint8ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Uint8Array")
module Uint8ClampedArray =
  struct
    type t = _Uint8ClampedArray
    let rec t_of_js : Ojs.t -> t =
      fun (x2650 : Ojs.t) -> _Uint8ClampedArray_of_js x2650
    and t_to_js : t -> Ojs.t =
      fun (x2649 : _Uint8ClampedArray) -> _Uint8ClampedArray_to_js x2649
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2651 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2651) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2652 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2652) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2653 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2653) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2654 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2654) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2660 : t) ->
        fun ~target:(x2655 : float) ->
          fun ~start:(x2656 : float) ->
            fun ?end_:(x2657 : float option) ->
              fun () ->
                t_of_js
                  (let x2661 = t_to_js x2660 in
                   Ojs.call (Ojs.get_prop_ascii x2661 "copyWithin") "apply"
                     [|x2661;((let x2658 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2658 "push"
                                    [|(Ojs.float_to_js x2655)|]);
                               ignore
                                 (Ojs.call x2658 "push"
                                    [|(Ojs.float_to_js x2656)|]);
                               (match x2657 with
                                | Some x2659 ->
                                    ignore
                                      (Ojs.call x2658 "push"
                                         [|(Ojs.float_to_js x2659)|])
                                | None -> ());
                               x2658))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2669 : t) ->
        fun (x2662 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2663 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2670 = t_to_js x2669 in
                 Ojs.call (Ojs.get_prop_ascii x2670 "every") "apply"
                   [|x2670;((let x2664 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2664 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2666 : Ojs.t) ->
                                          fun (x2667 : Ojs.t) ->
                                            fun (x2668 : Ojs.t) ->
                                              unknown_to_js
                                                (x2662
                                                   ~value:(Ojs.float_of_js
                                                             x2666)
                                                   ~index:(Ojs.float_of_js
                                                             x2667)
                                                   ~array:(t_of_js x2668))))|]);
                             (match x2663 with
                              | Some x2665 ->
                                  ignore
                                    (Ojs.call x2664 "push"
                                       [|(any_to_js x2665)|])
                              | None -> ());
                             x2664))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2677 : t) ->
        fun ~value:(x2671 : float) ->
          fun ?start:(x2672 : float option) ->
            fun ?end_:(x2673 : float option) ->
              fun () ->
                t_of_js
                  (let x2678 = t_to_js x2677 in
                   Ojs.call (Ojs.get_prop_ascii x2678 "fill") "apply"
                     [|x2678;((let x2674 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2674 "push"
                                    [|(Ojs.float_to_js x2671)|]);
                               (match x2672 with
                                | Some x2676 ->
                                    ignore
                                      (Ojs.call x2674 "push"
                                         [|(Ojs.float_to_js x2676)|])
                                | None -> ());
                               (match x2673 with
                                | Some x2675 ->
                                    ignore
                                      (Ojs.call x2674 "push"
                                         [|(Ojs.float_to_js x2675)|])
                                | None -> ());
                               x2674))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2686 : t) ->
        fun (x2679 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x2680 : any option) ->
            fun () ->
              t_of_js
                (let x2687 = t_to_js x2686 in
                 Ojs.call (Ojs.get_prop_ascii x2687 "filter") "apply"
                   [|x2687;((let x2681 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2681 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2683 : Ojs.t) ->
                                          fun (x2684 : Ojs.t) ->
                                            fun (x2685 : Ojs.t) ->
                                              any_to_js
                                                (x2679
                                                   ~value:(Ojs.float_of_js
                                                             x2683)
                                                   ~index:(Ojs.float_of_js
                                                             x2684)
                                                   ~array:(t_of_js x2685))))|]);
                             (match x2680 with
                              | Some x2682 ->
                                  ignore
                                    (Ojs.call x2681 "push"
                                       [|(any_to_js x2682)|])
                              | None -> ());
                             x2681))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2695 : t) ->
        fun (x2688 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2689 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2696 = t_to_js x2695 in
                 Ojs.call (Ojs.get_prop_ascii x2696 "find") "apply"
                   [|x2696;((let x2690 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2690 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2692 : Ojs.t) ->
                                          fun (x2693 : Ojs.t) ->
                                            fun (x2694 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2688
                                                   ~value:(Ojs.float_of_js
                                                             x2692)
                                                   ~index:(Ojs.float_of_js
                                                             x2693)
                                                   ~obj:(t_of_js x2694))))|]);
                             (match x2689 with
                              | Some x2691 ->
                                  ignore
                                    (Ojs.call x2690 "push"
                                       [|(any_to_js x2691)|])
                              | None -> ());
                             x2690))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2705 : t) ->
        fun (x2698 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2699 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2706 = t_to_js x2705 in
                 Ojs.call (Ojs.get_prop_ascii x2706 "findIndex") "apply"
                   [|x2706;((let x2700 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2700 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2702 : Ojs.t) ->
                                          fun (x2703 : Ojs.t) ->
                                            fun (x2704 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2698
                                                   ~value:(Ojs.float_of_js
                                                             x2702)
                                                   ~index:(Ojs.float_of_js
                                                             x2703)
                                                   ~obj:(t_of_js x2704))))|]);
                             (match x2699 with
                              | Some x2701 ->
                                  ignore
                                    (Ojs.call x2700 "push"
                                       [|(any_to_js x2701)|])
                              | None -> ());
                             x2700))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2714 : t) ->
        fun
          ~callbackfn:(x2707 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2708 : any option) ->
            fun () ->
              ignore
                (let x2715 = t_to_js x2714 in
                 Ojs.call (Ojs.get_prop_ascii x2715 "forEach") "apply"
                   [|x2715;((let x2709 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2709 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2711 : Ojs.t) ->
                                          fun (x2712 : Ojs.t) ->
                                            fun (x2713 : Ojs.t) ->
                                              x2707
                                                ~value:(Ojs.float_of_js x2711)
                                                ~index:(Ojs.float_of_js x2712)
                                                ~array:(t_of_js x2713)))|]);
                             (match x2708 with
                              | Some x2710 ->
                                  ignore
                                    (Ojs.call x2709 "push"
                                       [|(any_to_js x2710)|])
                              | None -> ());
                             x2709))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2720 : t) ->
        fun ~searchElement:(x2716 : float) ->
          fun ?fromIndex:(x2717 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2721 = t_to_js x2720 in
                 Ojs.call (Ojs.get_prop_ascii x2721 "indexOf") "apply"
                   [|x2721;((let x2718 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2718 "push"
                                  [|(Ojs.float_to_js x2716)|]);
                             (match x2717 with
                              | Some x2719 ->
                                  ignore
                                    (Ojs.call x2718 "push"
                                       [|(Ojs.float_to_js x2719)|])
                              | None -> ());
                             x2718))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2725 : t) ->
        fun ?separator:(x2722 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2726 = t_to_js x2725 in
               Ojs.call (Ojs.get_prop_ascii x2726 "join") "apply"
                 [|x2726;((let x2723 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2722 with
                            | Some x2724 ->
                                ignore
                                  (Ojs.call x2723 "push"
                                     [|(Ojs.string_to_js x2724)|])
                            | None -> ());
                           x2723))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2731 : t) ->
        fun ~searchElement:(x2727 : float) ->
          fun ?fromIndex:(x2728 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2732 = t_to_js x2731 in
                 Ojs.call (Ojs.get_prop_ascii x2732 "lastIndexOf") "apply"
                   [|x2732;((let x2729 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2729 "push"
                                  [|(Ojs.float_to_js x2727)|]);
                             (match x2728 with
                              | Some x2730 ->
                                  ignore
                                    (Ojs.call x2729 "push"
                                       [|(Ojs.float_to_js x2730)|])
                              | None -> ());
                             x2729))|])
    let (get_length : t -> float) =
      fun (x2733 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2733) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2741 : t) ->
        fun
          ~callbackfn:(x2734 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2735 : any option) ->
            fun () ->
              t_of_js
                (let x2742 = t_to_js x2741 in
                 Ojs.call (Ojs.get_prop_ascii x2742 "map") "apply"
                   [|x2742;((let x2736 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2736 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2738 : Ojs.t) ->
                                          fun (x2739 : Ojs.t) ->
                                            fun (x2740 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2734
                                                   ~value:(Ojs.float_of_js
                                                             x2738)
                                                   ~index:(Ojs.float_of_js
                                                             x2739)
                                                   ~array:(t_of_js x2740))))|]);
                             (match x2735 with
                              | Some x2737 ->
                                  ignore
                                    (Ojs.call x2736 "push"
                                       [|(any_to_js x2737)|])
                              | None -> ());
                             x2736))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2748 : t) ->
        fun
          ~callbackfn:(x2743 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2748) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2744 : Ojs.t) ->
                       fun (x2745 : Ojs.t) ->
                         fun (x2746 : Ojs.t) ->
                           fun (x2747 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2743 ~previousValue:(Ojs.float_of_js x2744)
                                  ~currentValue:(Ojs.float_of_js x2745)
                                  ~currentIndex:(Ojs.float_of_js x2746)
                                  ~array:(t_of_js x2747))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2755 : t) ->
        fun
          ~callbackfn:(x2749 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2754 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2755) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2750 : Ojs.t) ->
                         fun (x2751 : Ojs.t) ->
                           fun (x2752 : Ojs.t) ->
                             fun (x2753 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2749
                                    ~previousValue:(Ojs.float_of_js x2750)
                                    ~currentValue:(Ojs.float_of_js x2751)
                                    ~currentIndex:(Ojs.float_of_js x2752)
                                    ~array:(t_of_js x2753))));(Ojs.float_to_js
                                                                 x2754)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2762 : t) ->
        fun
          ~callbackfn:(x2756 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2761 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2762) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2757 : Ojs.t) ->
                         fun (x2758 : Ojs.t) ->
                           fun (x2759 : Ojs.t) ->
                             fun (x2760 : Ojs.t) ->
                               Obj.magic
                                 (x2756 ~previousValue:(Obj.magic x2757)
                                    ~currentValue:(Ojs.float_of_js x2758)
                                    ~currentIndex:(Ojs.float_of_js x2759)
                                    ~array:(t_of_js x2760))));(Obj.magic
                                                                 x2761)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2768 : t) ->
        fun
          ~callbackfn:(x2763 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2768) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x2764 : Ojs.t) ->
                       fun (x2765 : Ojs.t) ->
                         fun (x2766 : Ojs.t) ->
                           fun (x2767 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2763 ~previousValue:(Ojs.float_of_js x2764)
                                  ~currentValue:(Ojs.float_of_js x2765)
                                  ~currentIndex:(Ojs.float_of_js x2766)
                                  ~array:(t_of_js x2767))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2775 : t) ->
        fun
          ~callbackfn:(x2769 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2774 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2775) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2770 : Ojs.t) ->
                         fun (x2771 : Ojs.t) ->
                           fun (x2772 : Ojs.t) ->
                             fun (x2773 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2769
                                    ~previousValue:(Ojs.float_of_js x2770)
                                    ~currentValue:(Ojs.float_of_js x2771)
                                    ~currentIndex:(Ojs.float_of_js x2772)
                                    ~array:(t_of_js x2773))));(Ojs.float_to_js
                                                                 x2774)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x2782 : t) ->
        fun
          ~callbackfn:(x2776 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x2781 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x2782) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x2777 : Ojs.t) ->
                         fun (x2778 : Ojs.t) ->
                           fun (x2779 : Ojs.t) ->
                             fun (x2780 : Ojs.t) ->
                               Obj.magic
                                 (x2776 ~previousValue:(Obj.magic x2777)
                                    ~currentValue:(Ojs.float_of_js x2778)
                                    ~currentIndex:(Ojs.float_of_js x2779)
                                    ~array:(t_of_js x2780))));(Obj.magic
                                                                 x2781)|])
    let (reverse : t -> t) =
      fun (x2783 : t) -> t_of_js (Ojs.call (t_to_js x2783) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x2789 : t) ->
        fun ~array:(x2784 : float _Array) ->
          fun ?offset:(x2785 : float option) ->
            fun () ->
              ignore
                (let x2790 = t_to_js x2789 in
                 Ojs.call (Ojs.get_prop_ascii x2790 "set") "apply"
                   [|x2790;((let x2786 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2786 "push"
                                  [|(_Array_to_js Ojs.float_to_js x2784)|]);
                             (match x2785 with
                              | Some x2787 ->
                                  ignore
                                    (Ojs.call x2786 "push"
                                       [|(Ojs.float_to_js x2787)|])
                              | None -> ());
                             x2786))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x2796 : t) ->
        fun ?start:(x2791 : float option) ->
          fun ?end_:(x2792 : float option) ->
            fun () ->
              t_of_js
                (let x2797 = t_to_js x2796 in
                 Ojs.call (Ojs.get_prop_ascii x2797 "slice") "apply"
                   [|x2797;((let x2793 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2791 with
                              | Some x2795 ->
                                  ignore
                                    (Ojs.call x2793 "push"
                                       [|(Ojs.float_to_js x2795)|])
                              | None -> ());
                             (match x2792 with
                              | Some x2794 ->
                                  ignore
                                    (Ojs.call x2793 "push"
                                       [|(Ojs.float_to_js x2794)|])
                              | None -> ());
                             x2793))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2805 : t) ->
        fun (x2798 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2799 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2806 = t_to_js x2805 in
                 Ojs.call (Ojs.get_prop_ascii x2806 "some") "apply"
                   [|x2806;((let x2800 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2800 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2802 : Ojs.t) ->
                                          fun (x2803 : Ojs.t) ->
                                            fun (x2804 : Ojs.t) ->
                                              unknown_to_js
                                                (x2798
                                                   ~value:(Ojs.float_of_js
                                                             x2802)
                                                   ~index:(Ojs.float_of_js
                                                             x2803)
                                                   ~array:(t_of_js x2804))))|]);
                             (match x2799 with
                              | Some x2801 ->
                                  ignore
                                    (Ojs.call x2800 "push"
                                       [|(any_to_js x2801)|])
                              | None -> ());
                             x2800))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x2812 : t) ->
        fun ?compareFn:(x2807 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x2813 = t_to_js x2812 in
               Ojs.call (Ojs.get_prop_ascii x2813 "sort") "apply"
                 [|x2813;((let x2808 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2807 with
                            | Some x2809 ->
                                ignore
                                  (Ojs.call x2808 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x2810 : Ojs.t) ->
                                             fun (x2811 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x2809
                                                    ~a:(Ojs.float_of_js x2810)
                                                    ~b:(Ojs.float_of_js x2811))))|])
                            | None -> ());
                           x2808))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x2819 : t) ->
        fun ?begin_:(x2814 : float option) ->
          fun ?end_:(x2815 : float option) ->
            fun () ->
              t_of_js
                (let x2820 = t_to_js x2819 in
                 Ojs.call (Ojs.get_prop_ascii x2820 "subarray") "apply"
                   [|x2820;((let x2816 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x2814 with
                              | Some x2818 ->
                                  ignore
                                    (Ojs.call x2816 "push"
                                       [|(Ojs.float_to_js x2818)|])
                              | None -> ());
                             (match x2815 with
                              | Some x2817 ->
                                  ignore
                                    (Ojs.call x2816 "push"
                                       [|(Ojs.float_to_js x2817)|])
                              | None -> ());
                             x2816))|])
    let (toLocaleString : t -> string) =
      fun (x2821 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2821) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x2822 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x2822) "toString" [||])
    let (valueOf : t -> t) =
      fun (x2823 : t) -> t_of_js (Ojs.call (t_to_js x2823) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x2824 : t) ->
        fun (x2825 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x2824) (Ojs.float_to_js x2825))
    let (set : t -> float -> float -> unit) =
      fun (x2826 : t) ->
        fun (x2827 : float) ->
          fun (x2828 : float) ->
            Ojs.set_prop (t_to_js x2826) (Ojs.float_to_js x2827)
              (Ojs.float_to_js x2828)
    let (create : length:float -> _Uint8ClampedArray) =
      fun ~length:(x2829 : float) ->
        _Uint8ClampedArray_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x2829)|])
    let (create' :
      array:(_ArrayBuffer, float _Array) union2 -> _Uint8ClampedArray) =
      fun ~array:(x2830 : (_ArrayBuffer, float _Array) union2) ->
        _Uint8ClampedArray_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x2832 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x2832) x2830)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Uint8ClampedArray)
      =
      fun ~buffer:(x2834 : _ArrayBuffer) ->
        fun ?byteOffset:(x2835 : float option) ->
          fun ?length:(x2836 : float option) ->
            fun () ->
              _Uint8ClampedArray_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x2837 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x2837 "push" [|(_ArrayBuffer_to_js x2834)|]);
                    (match x2835 with
                     | Some x2839 ->
                         ignore
                           (Ojs.call x2837 "push" [|(Ojs.float_to_js x2839)|])
                     | None -> ());
                    (match x2836 with
                     | Some x2838 ->
                         ignore
                           (Ojs.call x2837 "push" [|(Ojs.float_to_js x2838)|])
                     | None -> ());
                    x2837))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii
           (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> _Uint8ClampedArray) =
      fun (x2840 : float list) ->
        _Uint8ClampedArray_of_js
          (let x2843 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x2843 "of") "apply"
             [|x2843;((let x2841 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2842 : float) ->
                            ignore
                              (Ojs.call x2841 "push"
                                 [|(Ojs.float_to_js x2842)|])) x2840;
                       x2841))|])
    let (from : array:float _Array -> _Uint8ClampedArray) =
      fun ~array:(x2844 : float _Array) ->
        _Uint8ClampedArray_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(_Array_to_js Ojs.float_to_js x2844)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Uint8ClampedArray)
      =
      fun ~array:(x2846 : 'T _Array) ->
        fun ~mapfn:(x2847 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x2848 : any option) ->
            fun () ->
              _Uint8ClampedArray_of_js
                (let x2854 =
                   Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x2854 "from") "apply"
                   [|x2854;((let x2849 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2849 "push"
                                  [|(_Array_to_js Obj.magic x2846)|]);
                             ignore
                               (Ojs.call x2849 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2851 : Ojs.t) ->
                                          fun (x2852 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x2847 ~v:(Obj.magic x2851)
                                                 ~k:(Ojs.float_of_js x2852))))|]);
                             (match x2848 with
                              | Some x2850 ->
                                  ignore
                                    (Ojs.call x2849 "push"
                                       [|(any_to_js x2850)|])
                              | None -> ());
                             x2849))|])
  end
module Uint8ClampedArrayConstructor =
  struct
    type t = _Uint8ClampedArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2856 : Ojs.t) -> _Uint8ClampedArrayConstructor_of_js x2856
    and t_to_js : t -> Ojs.t =
      fun (x2855 : _Uint8ClampedArrayConstructor) ->
        _Uint8ClampedArrayConstructor_to_js x2855
    let (get_prototype : t -> _Uint8ClampedArray) =
      fun (x2857 : t) ->
        _Uint8ClampedArray_of_js
          (Ojs.get_prop_ascii (t_to_js x2857) "prototype")
    let (create : t -> length:float -> _Uint8ClampedArray) =
      fun (x2859 : t) ->
        fun ~length:(x2858 : float) ->
          _Uint8ClampedArray_of_js
            (Ojs.new_obj (t_to_js x2859) [|(Ojs.float_to_js x2858)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Uint8ClampedArray) =
      fun (x2864 : t) ->
        fun ~array:(x2860 : (_ArrayBuffer, float _Array) union2) ->
          _Uint8ClampedArray_of_js
            (Ojs.new_obj (t_to_js x2864)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x2862 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x2862) x2860)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Uint8ClampedArray)
      =
      fun (x2871 : t) ->
        fun ~buffer:(x2865 : _ArrayBuffer) ->
          fun ?byteOffset:(x2866 : float option) ->
            fun ?length:(x2867 : float option) ->
              fun () ->
                _Uint8ClampedArray_of_js
                  (Ojs.new_obj_arr (t_to_js x2871)
                     (let x2868 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x2868 "push" [|(_ArrayBuffer_to_js x2865)|]);
                      (match x2866 with
                       | Some x2870 ->
                           ignore
                             (Ojs.call x2868 "push"
                                [|(Ojs.float_to_js x2870)|])
                       | None -> ());
                      (match x2867 with
                       | Some x2869 ->
                           ignore
                             (Ojs.call x2868 "push"
                                [|(Ojs.float_to_js x2869)|])
                       | None -> ());
                      x2868))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2872 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2872) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> _Uint8ClampedArray) =
      fun (x2876 : t) ->
        fun (x2873 : float list) ->
          _Uint8ClampedArray_of_js
            (let x2877 = t_to_js x2876 in
             Ojs.call (Ojs.get_prop_ascii x2877 "of") "apply"
               [|x2877;((let x2874 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x2875 : float) ->
                              ignore
                                (Ojs.call x2874 "push"
                                   [|(Ojs.float_to_js x2875)|])) x2873;
                         x2874))|])
    let (from : t -> array:float _Array -> _Uint8ClampedArray) =
      fun (x2880 : t) ->
        fun ~array:(x2878 : float _Array) ->
          _Uint8ClampedArray_of_js
            (Ojs.call (t_to_js x2880) "from"
               [|(_Array_to_js Ojs.float_to_js x2878)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Uint8ClampedArray)
      =
      fun (x2889 : t) ->
        fun ~array:(x2881 : 'T _Array) ->
          fun ~mapfn:(x2882 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x2883 : any option) ->
              fun () ->
                _Uint8ClampedArray_of_js
                  (let x2890 = t_to_js x2889 in
                   Ojs.call (Ojs.get_prop_ascii x2890 "from") "apply"
                     [|x2890;((let x2884 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2884 "push"
                                    [|(_Array_to_js Obj.magic x2881)|]);
                               ignore
                                 (Ojs.call x2884 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x2886 : Ojs.t) ->
                                            fun (x2887 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2882 ~v:(Obj.magic x2886)
                                                   ~k:(Ojs.float_of_js x2887))))|]);
                               (match x2883 with
                                | Some x2885 ->
                                    ignore
                                      (Ojs.call x2884 "push"
                                         [|(any_to_js x2885)|])
                                | None -> ());
                               x2884))|])
  end
let (uint8ClampedArray : _Uint8ClampedArrayConstructor) =
  _Uint8ClampedArrayConstructor_of_js
    (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
module Int16Array =
  struct
    type t = _Int16Array
    let rec t_of_js : Ojs.t -> t =
      fun (x2892 : Ojs.t) -> _Int16Array_of_js x2892
    and t_to_js : t -> Ojs.t =
      fun (x2891 : _Int16Array) -> _Int16Array_to_js x2891
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x2893 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x2893) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x2894 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x2894) "buffer")
    let (get_byteLength : t -> float) =
      fun (x2895 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2895) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x2896 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2896) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x2902 : t) ->
        fun ~target:(x2897 : float) ->
          fun ~start:(x2898 : float) ->
            fun ?end_:(x2899 : float option) ->
              fun () ->
                t_of_js
                  (let x2903 = t_to_js x2902 in
                   Ojs.call (Ojs.get_prop_ascii x2903 "copyWithin") "apply"
                     [|x2903;((let x2900 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2900 "push"
                                    [|(Ojs.float_to_js x2897)|]);
                               ignore
                                 (Ojs.call x2900 "push"
                                    [|(Ojs.float_to_js x2898)|]);
                               (match x2899 with
                                | Some x2901 ->
                                    ignore
                                      (Ojs.call x2900 "push"
                                         [|(Ojs.float_to_js x2901)|])
                                | None -> ());
                               x2900))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x2911 : t) ->
        fun (x2904 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x2905 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2912 = t_to_js x2911 in
                 Ojs.call (Ojs.get_prop_ascii x2912 "every") "apply"
                   [|x2912;((let x2906 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2906 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2908 : Ojs.t) ->
                                          fun (x2909 : Ojs.t) ->
                                            fun (x2910 : Ojs.t) ->
                                              unknown_to_js
                                                (x2904
                                                   ~value:(Ojs.float_of_js
                                                             x2908)
                                                   ~index:(Ojs.float_of_js
                                                             x2909)
                                                   ~array:(t_of_js x2910))))|]);
                             (match x2905 with
                              | Some x2907 ->
                                  ignore
                                    (Ojs.call x2906 "push"
                                       [|(any_to_js x2907)|])
                              | None -> ());
                             x2906))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x2919 : t) ->
        fun ~value:(x2913 : float) ->
          fun ?start:(x2914 : float option) ->
            fun ?end_:(x2915 : float option) ->
              fun () ->
                t_of_js
                  (let x2920 = t_to_js x2919 in
                   Ojs.call (Ojs.get_prop_ascii x2920 "fill") "apply"
                     [|x2920;((let x2916 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2916 "push"
                                    [|(Ojs.float_to_js x2913)|]);
                               (match x2914 with
                                | Some x2918 ->
                                    ignore
                                      (Ojs.call x2916 "push"
                                         [|(Ojs.float_to_js x2918)|])
                                | None -> ());
                               (match x2915 with
                                | Some x2917 ->
                                    ignore
                                      (Ojs.call x2916 "push"
                                         [|(Ojs.float_to_js x2917)|])
                                | None -> ());
                               x2916))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2928 : t) ->
        fun (x2921 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x2922 : any option) ->
            fun () ->
              t_of_js
                (let x2929 = t_to_js x2928 in
                 Ojs.call (Ojs.get_prop_ascii x2929 "filter") "apply"
                   [|x2929;((let x2923 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2923 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2925 : Ojs.t) ->
                                          fun (x2926 : Ojs.t) ->
                                            fun (x2927 : Ojs.t) ->
                                              any_to_js
                                                (x2921
                                                   ~value:(Ojs.float_of_js
                                                             x2925)
                                                   ~index:(Ojs.float_of_js
                                                             x2926)
                                                   ~array:(t_of_js x2927))))|]);
                             (match x2922 with
                              | Some x2924 ->
                                  ignore
                                    (Ojs.call x2923 "push"
                                       [|(any_to_js x2924)|])
                              | None -> ());
                             x2923))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x2937 : t) ->
        fun (x2930 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2931 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x2938 = t_to_js x2937 in
                 Ojs.call (Ojs.get_prop_ascii x2938 "find") "apply"
                   [|x2938;((let x2932 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2932 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2934 : Ojs.t) ->
                                          fun (x2935 : Ojs.t) ->
                                            fun (x2936 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2930
                                                   ~value:(Ojs.float_of_js
                                                             x2934)
                                                   ~index:(Ojs.float_of_js
                                                             x2935)
                                                   ~obj:(t_of_js x2936))))|]);
                             (match x2931 with
                              | Some x2933 ->
                                  ignore
                                    (Ojs.call x2932 "push"
                                       [|(any_to_js x2933)|])
                              | None -> ());
                             x2932))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x2947 : t) ->
        fun (x2940 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x2941 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x2948 = t_to_js x2947 in
                 Ojs.call (Ojs.get_prop_ascii x2948 "findIndex") "apply"
                   [|x2948;((let x2942 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2942 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2944 : Ojs.t) ->
                                          fun (x2945 : Ojs.t) ->
                                            fun (x2946 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x2940
                                                   ~value:(Ojs.float_of_js
                                                             x2944)
                                                   ~index:(Ojs.float_of_js
                                                             x2945)
                                                   ~obj:(t_of_js x2946))))|]);
                             (match x2941 with
                              | Some x2943 ->
                                  ignore
                                    (Ojs.call x2942 "push"
                                       [|(any_to_js x2943)|])
                              | None -> ());
                             x2942))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2956 : t) ->
        fun
          ~callbackfn:(x2949 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x2950 : any option) ->
            fun () ->
              ignore
                (let x2957 = t_to_js x2956 in
                 Ojs.call (Ojs.get_prop_ascii x2957 "forEach") "apply"
                   [|x2957;((let x2951 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2951 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2953 : Ojs.t) ->
                                          fun (x2954 : Ojs.t) ->
                                            fun (x2955 : Ojs.t) ->
                                              x2949
                                                ~value:(Ojs.float_of_js x2953)
                                                ~index:(Ojs.float_of_js x2954)
                                                ~array:(t_of_js x2955)))|]);
                             (match x2950 with
                              | Some x2952 ->
                                  ignore
                                    (Ojs.call x2951 "push"
                                       [|(any_to_js x2952)|])
                              | None -> ());
                             x2951))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2962 : t) ->
        fun ~searchElement:(x2958 : float) ->
          fun ?fromIndex:(x2959 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2963 = t_to_js x2962 in
                 Ojs.call (Ojs.get_prop_ascii x2963 "indexOf") "apply"
                   [|x2963;((let x2960 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2960 "push"
                                  [|(Ojs.float_to_js x2958)|]);
                             (match x2959 with
                              | Some x2961 ->
                                  ignore
                                    (Ojs.call x2960 "push"
                                       [|(Ojs.float_to_js x2961)|])
                              | None -> ());
                             x2960))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x2967 : t) ->
        fun ?separator:(x2964 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2968 = t_to_js x2967 in
               Ojs.call (Ojs.get_prop_ascii x2968 "join") "apply"
                 [|x2968;((let x2965 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2964 with
                            | Some x2966 ->
                                ignore
                                  (Ojs.call x2965 "push"
                                     [|(Ojs.string_to_js x2966)|])
                            | None -> ());
                           x2965))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x2973 : t) ->
        fun ~searchElement:(x2969 : float) ->
          fun ?fromIndex:(x2970 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x2974 = t_to_js x2973 in
                 Ojs.call (Ojs.get_prop_ascii x2974 "lastIndexOf") "apply"
                   [|x2974;((let x2971 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2971 "push"
                                  [|(Ojs.float_to_js x2969)|]);
                             (match x2970 with
                              | Some x2972 ->
                                  ignore
                                    (Ojs.call x2971 "push"
                                       [|(Ojs.float_to_js x2972)|])
                              | None -> ());
                             x2971))|])
    let (get_length : t -> float) =
      fun (x2975 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x2975) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x2983 : t) ->
        fun
          ~callbackfn:(x2976 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x2977 : any option) ->
            fun () ->
              t_of_js
                (let x2984 = t_to_js x2983 in
                 Ojs.call (Ojs.get_prop_ascii x2984 "map") "apply"
                   [|x2984;((let x2978 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2978 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2980 : Ojs.t) ->
                                          fun (x2981 : Ojs.t) ->
                                            fun (x2982 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x2976
                                                   ~value:(Ojs.float_of_js
                                                             x2980)
                                                   ~index:(Ojs.float_of_js
                                                             x2981)
                                                   ~array:(t_of_js x2982))))|]);
                             (match x2977 with
                              | Some x2979 ->
                                  ignore
                                    (Ojs.call x2978 "push"
                                       [|(any_to_js x2979)|])
                              | None -> ());
                             x2978))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x2990 : t) ->
        fun
          ~callbackfn:(x2985 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x2990) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x2986 : Ojs.t) ->
                       fun (x2987 : Ojs.t) ->
                         fun (x2988 : Ojs.t) ->
                           fun (x2989 : Ojs.t) ->
                             Ojs.float_to_js
                               (x2985 ~previousValue:(Ojs.float_of_js x2986)
                                  ~currentValue:(Ojs.float_of_js x2987)
                                  ~currentIndex:(Ojs.float_of_js x2988)
                                  ~array:(t_of_js x2989))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x2997 : t) ->
        fun
          ~callbackfn:(x2991 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x2996 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x2997) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2992 : Ojs.t) ->
                         fun (x2993 : Ojs.t) ->
                           fun (x2994 : Ojs.t) ->
                             fun (x2995 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x2991
                                    ~previousValue:(Ojs.float_of_js x2992)
                                    ~currentValue:(Ojs.float_of_js x2993)
                                    ~currentIndex:(Ojs.float_of_js x2994)
                                    ~array:(t_of_js x2995))));(Ojs.float_to_js
                                                                 x2996)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3004 : t) ->
        fun
          ~callbackfn:(x2998 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3003 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3004) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x2999 : Ojs.t) ->
                         fun (x3000 : Ojs.t) ->
                           fun (x3001 : Ojs.t) ->
                             fun (x3002 : Ojs.t) ->
                               Obj.magic
                                 (x2998 ~previousValue:(Obj.magic x2999)
                                    ~currentValue:(Ojs.float_of_js x3000)
                                    ~currentIndex:(Ojs.float_of_js x3001)
                                    ~array:(t_of_js x3002))));(Obj.magic
                                                                 x3003)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3010 : t) ->
        fun
          ~callbackfn:(x3005 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3010) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3006 : Ojs.t) ->
                       fun (x3007 : Ojs.t) ->
                         fun (x3008 : Ojs.t) ->
                           fun (x3009 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3005 ~previousValue:(Ojs.float_of_js x3006)
                                  ~currentValue:(Ojs.float_of_js x3007)
                                  ~currentIndex:(Ojs.float_of_js x3008)
                                  ~array:(t_of_js x3009))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3017 : t) ->
        fun
          ~callbackfn:(x3011 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3016 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3017) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3012 : Ojs.t) ->
                         fun (x3013 : Ojs.t) ->
                           fun (x3014 : Ojs.t) ->
                             fun (x3015 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3011
                                    ~previousValue:(Ojs.float_of_js x3012)
                                    ~currentValue:(Ojs.float_of_js x3013)
                                    ~currentIndex:(Ojs.float_of_js x3014)
                                    ~array:(t_of_js x3015))));(Ojs.float_to_js
                                                                 x3016)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3024 : t) ->
        fun
          ~callbackfn:(x3018 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3023 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3024) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3019 : Ojs.t) ->
                         fun (x3020 : Ojs.t) ->
                           fun (x3021 : Ojs.t) ->
                             fun (x3022 : Ojs.t) ->
                               Obj.magic
                                 (x3018 ~previousValue:(Obj.magic x3019)
                                    ~currentValue:(Ojs.float_of_js x3020)
                                    ~currentIndex:(Ojs.float_of_js x3021)
                                    ~array:(t_of_js x3022))));(Obj.magic
                                                                 x3023)|])
    let (reverse : t -> t) =
      fun (x3025 : t) -> t_of_js (Ojs.call (t_to_js x3025) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x3031 : t) ->
        fun ~array:(x3026 : float _Array) ->
          fun ?offset:(x3027 : float option) ->
            fun () ->
              ignore
                (let x3032 = t_to_js x3031 in
                 Ojs.call (Ojs.get_prop_ascii x3032 "set") "apply"
                   [|x3032;((let x3028 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3028 "push"
                                  [|(_Array_to_js Ojs.float_to_js x3026)|]);
                             (match x3027 with
                              | Some x3029 ->
                                  ignore
                                    (Ojs.call x3028 "push"
                                       [|(Ojs.float_to_js x3029)|])
                              | None -> ());
                             x3028))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3038 : t) ->
        fun ?start:(x3033 : float option) ->
          fun ?end_:(x3034 : float option) ->
            fun () ->
              t_of_js
                (let x3039 = t_to_js x3038 in
                 Ojs.call (Ojs.get_prop_ascii x3039 "slice") "apply"
                   [|x3039;((let x3035 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3033 with
                              | Some x3037 ->
                                  ignore
                                    (Ojs.call x3035 "push"
                                       [|(Ojs.float_to_js x3037)|])
                              | None -> ());
                             (match x3034 with
                              | Some x3036 ->
                                  ignore
                                    (Ojs.call x3035 "push"
                                       [|(Ojs.float_to_js x3036)|])
                              | None -> ());
                             x3035))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3047 : t) ->
        fun (x3040 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3041 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3048 = t_to_js x3047 in
                 Ojs.call (Ojs.get_prop_ascii x3048 "some") "apply"
                   [|x3048;((let x3042 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3042 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3044 : Ojs.t) ->
                                          fun (x3045 : Ojs.t) ->
                                            fun (x3046 : Ojs.t) ->
                                              unknown_to_js
                                                (x3040
                                                   ~value:(Ojs.float_of_js
                                                             x3044)
                                                   ~index:(Ojs.float_of_js
                                                             x3045)
                                                   ~array:(t_of_js x3046))))|]);
                             (match x3041 with
                              | Some x3043 ->
                                  ignore
                                    (Ojs.call x3042 "push"
                                       [|(any_to_js x3043)|])
                              | None -> ());
                             x3042))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3054 : t) ->
        fun ?compareFn:(x3049 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3055 = t_to_js x3054 in
               Ojs.call (Ojs.get_prop_ascii x3055 "sort") "apply"
                 [|x3055;((let x3050 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3049 with
                            | Some x3051 ->
                                ignore
                                  (Ojs.call x3050 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3052 : Ojs.t) ->
                                             fun (x3053 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3051
                                                    ~a:(Ojs.float_of_js x3052)
                                                    ~b:(Ojs.float_of_js x3053))))|])
                            | None -> ());
                           x3050))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3061 : t) ->
        fun ?begin_:(x3056 : float option) ->
          fun ?end_:(x3057 : float option) ->
            fun () ->
              t_of_js
                (let x3062 = t_to_js x3061 in
                 Ojs.call (Ojs.get_prop_ascii x3062 "subarray") "apply"
                   [|x3062;((let x3058 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3056 with
                              | Some x3060 ->
                                  ignore
                                    (Ojs.call x3058 "push"
                                       [|(Ojs.float_to_js x3060)|])
                              | None -> ());
                             (match x3057 with
                              | Some x3059 ->
                                  ignore
                                    (Ojs.call x3058 "push"
                                       [|(Ojs.float_to_js x3059)|])
                              | None -> ());
                             x3058))|])
    let (toLocaleString : t -> string) =
      fun (x3063 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3063) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3064 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3064) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3065 : t) -> t_of_js (Ojs.call (t_to_js x3065) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3066 : t) ->
        fun (x3067 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3066) (Ojs.float_to_js x3067))
    let (set : t -> float -> float -> unit) =
      fun (x3068 : t) ->
        fun (x3069 : float) ->
          fun (x3070 : float) ->
            Ojs.set_prop (t_to_js x3068) (Ojs.float_to_js x3069)
              (Ojs.float_to_js x3070)
    let (create : length:float -> _Int16Array) =
      fun ~length:(x3071 : float) ->
        _Int16Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x3071)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Int16Array)
      =
      fun ~array:(x3072 : (_ArrayBuffer, float _Array) union2) ->
        _Int16Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x3074 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x3074) x3072)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Int16Array)
      =
      fun ~buffer:(x3076 : _ArrayBuffer) ->
        fun ?byteOffset:(x3077 : float option) ->
          fun ?length:(x3078 : float option) ->
            fun () ->
              _Int16Array_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x3079 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3079 "push" [|(_ArrayBuffer_to_js x3076)|]);
                    (match x3077 with
                     | Some x3081 ->
                         ignore
                           (Ojs.call x3079 "push" [|(Ojs.float_to_js x3081)|])
                     | None -> ());
                    (match x3078 with
                     | Some x3080 ->
                         ignore
                           (Ojs.call x3079 "push" [|(Ojs.float_to_js x3080)|])
                     | None -> ());
                    x3079))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> _Int16Array) =
      fun (x3082 : float list) ->
        _Int16Array_of_js
          (let x3085 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x3085 "of") "apply"
             [|x3085;((let x3083 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3084 : float) ->
                            ignore
                              (Ojs.call x3083 "push"
                                 [|(Ojs.float_to_js x3084)|])) x3082;
                       x3083))|])
    let (from : array:float _Array -> _Int16Array) =
      fun ~array:(x3086 : float _Array) ->
        _Int16Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(_Array_to_js Ojs.float_to_js x3086)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Int16Array)
      =
      fun ~array:(x3088 : 'T _Array) ->
        fun ~mapfn:(x3089 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3090 : any option) ->
            fun () ->
              _Int16Array_of_js
                (let x3096 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x3096 "from") "apply"
                   [|x3096;((let x3091 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3091 "push"
                                  [|(_Array_to_js Obj.magic x3088)|]);
                             ignore
                               (Ojs.call x3091 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3093 : Ojs.t) ->
                                          fun (x3094 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3089 ~v:(Obj.magic x3093)
                                                 ~k:(Ojs.float_of_js x3094))))|]);
                             (match x3090 with
                              | Some x3092 ->
                                  ignore
                                    (Ojs.call x3091 "push"
                                       [|(any_to_js x3092)|])
                              | None -> ());
                             x3091))|])
  end
module Int16ArrayConstructor =
  struct
    type t = _Int16ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x3098 : Ojs.t) -> _Int16ArrayConstructor_of_js x3098
    and t_to_js : t -> Ojs.t =
      fun (x3097 : _Int16ArrayConstructor) ->
        _Int16ArrayConstructor_to_js x3097
    let (get_prototype : t -> _Int16Array) =
      fun (x3099 : t) ->
        _Int16Array_of_js (Ojs.get_prop_ascii (t_to_js x3099) "prototype")
    let (create : t -> length:float -> _Int16Array) =
      fun (x3101 : t) ->
        fun ~length:(x3100 : float) ->
          _Int16Array_of_js
            (Ojs.new_obj (t_to_js x3101) [|(Ojs.float_to_js x3100)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Int16Array) =
      fun (x3106 : t) ->
        fun ~array:(x3102 : (_ArrayBuffer, float _Array) union2) ->
          _Int16Array_of_js
            (Ojs.new_obj (t_to_js x3106)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x3104 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x3104) x3102)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Int16Array)
      =
      fun (x3113 : t) ->
        fun ~buffer:(x3107 : _ArrayBuffer) ->
          fun ?byteOffset:(x3108 : float option) ->
            fun ?length:(x3109 : float option) ->
              fun () ->
                _Int16Array_of_js
                  (Ojs.new_obj_arr (t_to_js x3113)
                     (let x3110 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3110 "push" [|(_ArrayBuffer_to_js x3107)|]);
                      (match x3108 with
                       | Some x3112 ->
                           ignore
                             (Ojs.call x3110 "push"
                                [|(Ojs.float_to_js x3112)|])
                       | None -> ());
                      (match x3109 with
                       | Some x3111 ->
                           ignore
                             (Ojs.call x3110 "push"
                                [|(Ojs.float_to_js x3111)|])
                       | None -> ());
                      x3110))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3114 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3114) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> _Int16Array) =
      fun (x3118 : t) ->
        fun (x3115 : float list) ->
          _Int16Array_of_js
            (let x3119 = t_to_js x3118 in
             Ojs.call (Ojs.get_prop_ascii x3119 "of") "apply"
               [|x3119;((let x3116 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3117 : float) ->
                              ignore
                                (Ojs.call x3116 "push"
                                   [|(Ojs.float_to_js x3117)|])) x3115;
                         x3116))|])
    let (from : t -> array:float _Array -> _Int16Array) =
      fun (x3122 : t) ->
        fun ~array:(x3120 : float _Array) ->
          _Int16Array_of_js
            (Ojs.call (t_to_js x3122) "from"
               [|(_Array_to_js Ojs.float_to_js x3120)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Int16Array)
      =
      fun (x3131 : t) ->
        fun ~array:(x3123 : 'T _Array) ->
          fun ~mapfn:(x3124 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3125 : any option) ->
              fun () ->
                _Int16Array_of_js
                  (let x3132 = t_to_js x3131 in
                   Ojs.call (Ojs.get_prop_ascii x3132 "from") "apply"
                     [|x3132;((let x3126 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3126 "push"
                                    [|(_Array_to_js Obj.magic x3123)|]);
                               ignore
                                 (Ojs.call x3126 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3128 : Ojs.t) ->
                                            fun (x3129 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3124 ~v:(Obj.magic x3128)
                                                   ~k:(Ojs.float_of_js x3129))))|]);
                               (match x3125 with
                                | Some x3127 ->
                                    ignore
                                      (Ojs.call x3126 "push"
                                         [|(any_to_js x3127)|])
                                | None -> ());
                               x3126))|])
  end
let (int16Array : _Int16ArrayConstructor) =
  _Int16ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Int16Array")
module Uint16Array =
  struct
    type t = _Uint16Array
    let rec t_of_js : Ojs.t -> t =
      fun (x3134 : Ojs.t) -> _Uint16Array_of_js x3134
    and t_to_js : t -> Ojs.t =
      fun (x3133 : _Uint16Array) -> _Uint16Array_to_js x3133
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3135 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3135) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x3136 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x3136) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3137 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3137) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3138 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3138) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3144 : t) ->
        fun ~target:(x3139 : float) ->
          fun ~start:(x3140 : float) ->
            fun ?end_:(x3141 : float option) ->
              fun () ->
                t_of_js
                  (let x3145 = t_to_js x3144 in
                   Ojs.call (Ojs.get_prop_ascii x3145 "copyWithin") "apply"
                     [|x3145;((let x3142 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3142 "push"
                                    [|(Ojs.float_to_js x3139)|]);
                               ignore
                                 (Ojs.call x3142 "push"
                                    [|(Ojs.float_to_js x3140)|]);
                               (match x3141 with
                                | Some x3143 ->
                                    ignore
                                      (Ojs.call x3142 "push"
                                         [|(Ojs.float_to_js x3143)|])
                                | None -> ());
                               x3142))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3153 : t) ->
        fun (x3146 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3147 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3154 = t_to_js x3153 in
                 Ojs.call (Ojs.get_prop_ascii x3154 "every") "apply"
                   [|x3154;((let x3148 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3148 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3150 : Ojs.t) ->
                                          fun (x3151 : Ojs.t) ->
                                            fun (x3152 : Ojs.t) ->
                                              unknown_to_js
                                                (x3146
                                                   ~value:(Ojs.float_of_js
                                                             x3150)
                                                   ~index:(Ojs.float_of_js
                                                             x3151)
                                                   ~array:(t_of_js x3152))))|]);
                             (match x3147 with
                              | Some x3149 ->
                                  ignore
                                    (Ojs.call x3148 "push"
                                       [|(any_to_js x3149)|])
                              | None -> ());
                             x3148))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3161 : t) ->
        fun ~value:(x3155 : float) ->
          fun ?start:(x3156 : float option) ->
            fun ?end_:(x3157 : float option) ->
              fun () ->
                t_of_js
                  (let x3162 = t_to_js x3161 in
                   Ojs.call (Ojs.get_prop_ascii x3162 "fill") "apply"
                     [|x3162;((let x3158 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3158 "push"
                                    [|(Ojs.float_to_js x3155)|]);
                               (match x3156 with
                                | Some x3160 ->
                                    ignore
                                      (Ojs.call x3158 "push"
                                         [|(Ojs.float_to_js x3160)|])
                                | None -> ());
                               (match x3157 with
                                | Some x3159 ->
                                    ignore
                                      (Ojs.call x3158 "push"
                                         [|(Ojs.float_to_js x3159)|])
                                | None -> ());
                               x3158))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3170 : t) ->
        fun (x3163 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x3164 : any option) ->
            fun () ->
              t_of_js
                (let x3171 = t_to_js x3170 in
                 Ojs.call (Ojs.get_prop_ascii x3171 "filter") "apply"
                   [|x3171;((let x3165 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3165 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3167 : Ojs.t) ->
                                          fun (x3168 : Ojs.t) ->
                                            fun (x3169 : Ojs.t) ->
                                              any_to_js
                                                (x3163
                                                   ~value:(Ojs.float_of_js
                                                             x3167)
                                                   ~index:(Ojs.float_of_js
                                                             x3168)
                                                   ~array:(t_of_js x3169))))|]);
                             (match x3164 with
                              | Some x3166 ->
                                  ignore
                                    (Ojs.call x3165 "push"
                                       [|(any_to_js x3166)|])
                              | None -> ());
                             x3165))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3179 : t) ->
        fun (x3172 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3173 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3180 = t_to_js x3179 in
                 Ojs.call (Ojs.get_prop_ascii x3180 "find") "apply"
                   [|x3180;((let x3174 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3174 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3176 : Ojs.t) ->
                                          fun (x3177 : Ojs.t) ->
                                            fun (x3178 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3172
                                                   ~value:(Ojs.float_of_js
                                                             x3176)
                                                   ~index:(Ojs.float_of_js
                                                             x3177)
                                                   ~obj:(t_of_js x3178))))|]);
                             (match x3173 with
                              | Some x3175 ->
                                  ignore
                                    (Ojs.call x3174 "push"
                                       [|(any_to_js x3175)|])
                              | None -> ());
                             x3174))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3189 : t) ->
        fun (x3182 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3183 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3190 = t_to_js x3189 in
                 Ojs.call (Ojs.get_prop_ascii x3190 "findIndex") "apply"
                   [|x3190;((let x3184 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3184 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3186 : Ojs.t) ->
                                          fun (x3187 : Ojs.t) ->
                                            fun (x3188 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3182
                                                   ~value:(Ojs.float_of_js
                                                             x3186)
                                                   ~index:(Ojs.float_of_js
                                                             x3187)
                                                   ~obj:(t_of_js x3188))))|]);
                             (match x3183 with
                              | Some x3185 ->
                                  ignore
                                    (Ojs.call x3184 "push"
                                       [|(any_to_js x3185)|])
                              | None -> ());
                             x3184))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3198 : t) ->
        fun
          ~callbackfn:(x3191 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3192 : any option) ->
            fun () ->
              ignore
                (let x3199 = t_to_js x3198 in
                 Ojs.call (Ojs.get_prop_ascii x3199 "forEach") "apply"
                   [|x3199;((let x3193 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3193 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3195 : Ojs.t) ->
                                          fun (x3196 : Ojs.t) ->
                                            fun (x3197 : Ojs.t) ->
                                              x3191
                                                ~value:(Ojs.float_of_js x3195)
                                                ~index:(Ojs.float_of_js x3196)
                                                ~array:(t_of_js x3197)))|]);
                             (match x3192 with
                              | Some x3194 ->
                                  ignore
                                    (Ojs.call x3193 "push"
                                       [|(any_to_js x3194)|])
                              | None -> ());
                             x3193))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3204 : t) ->
        fun ~searchElement:(x3200 : float) ->
          fun ?fromIndex:(x3201 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3205 = t_to_js x3204 in
                 Ojs.call (Ojs.get_prop_ascii x3205 "indexOf") "apply"
                   [|x3205;((let x3202 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3202 "push"
                                  [|(Ojs.float_to_js x3200)|]);
                             (match x3201 with
                              | Some x3203 ->
                                  ignore
                                    (Ojs.call x3202 "push"
                                       [|(Ojs.float_to_js x3203)|])
                              | None -> ());
                             x3202))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3209 : t) ->
        fun ?separator:(x3206 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3210 = t_to_js x3209 in
               Ojs.call (Ojs.get_prop_ascii x3210 "join") "apply"
                 [|x3210;((let x3207 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3206 with
                            | Some x3208 ->
                                ignore
                                  (Ojs.call x3207 "push"
                                     [|(Ojs.string_to_js x3208)|])
                            | None -> ());
                           x3207))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3215 : t) ->
        fun ~searchElement:(x3211 : float) ->
          fun ?fromIndex:(x3212 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3216 = t_to_js x3215 in
                 Ojs.call (Ojs.get_prop_ascii x3216 "lastIndexOf") "apply"
                   [|x3216;((let x3213 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3213 "push"
                                  [|(Ojs.float_to_js x3211)|]);
                             (match x3212 with
                              | Some x3214 ->
                                  ignore
                                    (Ojs.call x3213 "push"
                                       [|(Ojs.float_to_js x3214)|])
                              | None -> ());
                             x3213))|])
    let (get_length : t -> float) =
      fun (x3217 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3217) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3225 : t) ->
        fun
          ~callbackfn:(x3218 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3219 : any option) ->
            fun () ->
              t_of_js
                (let x3226 = t_to_js x3225 in
                 Ojs.call (Ojs.get_prop_ascii x3226 "map") "apply"
                   [|x3226;((let x3220 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3220 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3222 : Ojs.t) ->
                                          fun (x3223 : Ojs.t) ->
                                            fun (x3224 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3218
                                                   ~value:(Ojs.float_of_js
                                                             x3222)
                                                   ~index:(Ojs.float_of_js
                                                             x3223)
                                                   ~array:(t_of_js x3224))))|]);
                             (match x3219 with
                              | Some x3221 ->
                                  ignore
                                    (Ojs.call x3220 "push"
                                       [|(any_to_js x3221)|])
                              | None -> ());
                             x3220))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3232 : t) ->
        fun
          ~callbackfn:(x3227 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3232) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3228 : Ojs.t) ->
                       fun (x3229 : Ojs.t) ->
                         fun (x3230 : Ojs.t) ->
                           fun (x3231 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3227 ~previousValue:(Ojs.float_of_js x3228)
                                  ~currentValue:(Ojs.float_of_js x3229)
                                  ~currentIndex:(Ojs.float_of_js x3230)
                                  ~array:(t_of_js x3231))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3239 : t) ->
        fun
          ~callbackfn:(x3233 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3238 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3239) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3234 : Ojs.t) ->
                         fun (x3235 : Ojs.t) ->
                           fun (x3236 : Ojs.t) ->
                             fun (x3237 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3233
                                    ~previousValue:(Ojs.float_of_js x3234)
                                    ~currentValue:(Ojs.float_of_js x3235)
                                    ~currentIndex:(Ojs.float_of_js x3236)
                                    ~array:(t_of_js x3237))));(Ojs.float_to_js
                                                                 x3238)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3246 : t) ->
        fun
          ~callbackfn:(x3240 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3245 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3246) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3241 : Ojs.t) ->
                         fun (x3242 : Ojs.t) ->
                           fun (x3243 : Ojs.t) ->
                             fun (x3244 : Ojs.t) ->
                               Obj.magic
                                 (x3240 ~previousValue:(Obj.magic x3241)
                                    ~currentValue:(Ojs.float_of_js x3242)
                                    ~currentIndex:(Ojs.float_of_js x3243)
                                    ~array:(t_of_js x3244))));(Obj.magic
                                                                 x3245)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3252 : t) ->
        fun
          ~callbackfn:(x3247 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3252) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3248 : Ojs.t) ->
                       fun (x3249 : Ojs.t) ->
                         fun (x3250 : Ojs.t) ->
                           fun (x3251 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3247 ~previousValue:(Ojs.float_of_js x3248)
                                  ~currentValue:(Ojs.float_of_js x3249)
                                  ~currentIndex:(Ojs.float_of_js x3250)
                                  ~array:(t_of_js x3251))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3259 : t) ->
        fun
          ~callbackfn:(x3253 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3258 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3259) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3254 : Ojs.t) ->
                         fun (x3255 : Ojs.t) ->
                           fun (x3256 : Ojs.t) ->
                             fun (x3257 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3253
                                    ~previousValue:(Ojs.float_of_js x3254)
                                    ~currentValue:(Ojs.float_of_js x3255)
                                    ~currentIndex:(Ojs.float_of_js x3256)
                                    ~array:(t_of_js x3257))));(Ojs.float_to_js
                                                                 x3258)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3266 : t) ->
        fun
          ~callbackfn:(x3260 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3265 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3266) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3261 : Ojs.t) ->
                         fun (x3262 : Ojs.t) ->
                           fun (x3263 : Ojs.t) ->
                             fun (x3264 : Ojs.t) ->
                               Obj.magic
                                 (x3260 ~previousValue:(Obj.magic x3261)
                                    ~currentValue:(Ojs.float_of_js x3262)
                                    ~currentIndex:(Ojs.float_of_js x3263)
                                    ~array:(t_of_js x3264))));(Obj.magic
                                                                 x3265)|])
    let (reverse : t -> t) =
      fun (x3267 : t) -> t_of_js (Ojs.call (t_to_js x3267) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x3273 : t) ->
        fun ~array:(x3268 : float _Array) ->
          fun ?offset:(x3269 : float option) ->
            fun () ->
              ignore
                (let x3274 = t_to_js x3273 in
                 Ojs.call (Ojs.get_prop_ascii x3274 "set") "apply"
                   [|x3274;((let x3270 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3270 "push"
                                  [|(_Array_to_js Ojs.float_to_js x3268)|]);
                             (match x3269 with
                              | Some x3271 ->
                                  ignore
                                    (Ojs.call x3270 "push"
                                       [|(Ojs.float_to_js x3271)|])
                              | None -> ());
                             x3270))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3280 : t) ->
        fun ?start:(x3275 : float option) ->
          fun ?end_:(x3276 : float option) ->
            fun () ->
              t_of_js
                (let x3281 = t_to_js x3280 in
                 Ojs.call (Ojs.get_prop_ascii x3281 "slice") "apply"
                   [|x3281;((let x3277 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3275 with
                              | Some x3279 ->
                                  ignore
                                    (Ojs.call x3277 "push"
                                       [|(Ojs.float_to_js x3279)|])
                              | None -> ());
                             (match x3276 with
                              | Some x3278 ->
                                  ignore
                                    (Ojs.call x3277 "push"
                                       [|(Ojs.float_to_js x3278)|])
                              | None -> ());
                             x3277))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3289 : t) ->
        fun (x3282 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3283 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3290 = t_to_js x3289 in
                 Ojs.call (Ojs.get_prop_ascii x3290 "some") "apply"
                   [|x3290;((let x3284 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3284 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3286 : Ojs.t) ->
                                          fun (x3287 : Ojs.t) ->
                                            fun (x3288 : Ojs.t) ->
                                              unknown_to_js
                                                (x3282
                                                   ~value:(Ojs.float_of_js
                                                             x3286)
                                                   ~index:(Ojs.float_of_js
                                                             x3287)
                                                   ~array:(t_of_js x3288))))|]);
                             (match x3283 with
                              | Some x3285 ->
                                  ignore
                                    (Ojs.call x3284 "push"
                                       [|(any_to_js x3285)|])
                              | None -> ());
                             x3284))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3296 : t) ->
        fun ?compareFn:(x3291 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3297 = t_to_js x3296 in
               Ojs.call (Ojs.get_prop_ascii x3297 "sort") "apply"
                 [|x3297;((let x3292 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3291 with
                            | Some x3293 ->
                                ignore
                                  (Ojs.call x3292 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3294 : Ojs.t) ->
                                             fun (x3295 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3293
                                                    ~a:(Ojs.float_of_js x3294)
                                                    ~b:(Ojs.float_of_js x3295))))|])
                            | None -> ());
                           x3292))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3303 : t) ->
        fun ?begin_:(x3298 : float option) ->
          fun ?end_:(x3299 : float option) ->
            fun () ->
              t_of_js
                (let x3304 = t_to_js x3303 in
                 Ojs.call (Ojs.get_prop_ascii x3304 "subarray") "apply"
                   [|x3304;((let x3300 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3298 with
                              | Some x3302 ->
                                  ignore
                                    (Ojs.call x3300 "push"
                                       [|(Ojs.float_to_js x3302)|])
                              | None -> ());
                             (match x3299 with
                              | Some x3301 ->
                                  ignore
                                    (Ojs.call x3300 "push"
                                       [|(Ojs.float_to_js x3301)|])
                              | None -> ());
                             x3300))|])
    let (toLocaleString : t -> string) =
      fun (x3305 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3305) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3306 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3306) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3307 : t) -> t_of_js (Ojs.call (t_to_js x3307) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3308 : t) ->
        fun (x3309 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3308) (Ojs.float_to_js x3309))
    let (set : t -> float -> float -> unit) =
      fun (x3310 : t) ->
        fun (x3311 : float) ->
          fun (x3312 : float) ->
            Ojs.set_prop (t_to_js x3310) (Ojs.float_to_js x3311)
              (Ojs.float_to_js x3312)
    let (create : length:float -> _Uint16Array) =
      fun ~length:(x3313 : float) ->
        _Uint16Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x3313)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Uint16Array)
      =
      fun ~array:(x3314 : (_ArrayBuffer, float _Array) union2) ->
        _Uint16Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x3316 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x3316) x3314)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Uint16Array)
      =
      fun ~buffer:(x3318 : _ArrayBuffer) ->
        fun ?byteOffset:(x3319 : float option) ->
          fun ?length:(x3320 : float option) ->
            fun () ->
              _Uint16Array_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x3321 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3321 "push" [|(_ArrayBuffer_to_js x3318)|]);
                    (match x3319 with
                     | Some x3323 ->
                         ignore
                           (Ojs.call x3321 "push" [|(Ojs.float_to_js x3323)|])
                     | None -> ());
                    (match x3320 with
                     | Some x3322 ->
                         ignore
                           (Ojs.call x3321 "push" [|(Ojs.float_to_js x3322)|])
                     | None -> ());
                    x3321))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> _Uint16Array) =
      fun (x3324 : float list) ->
        _Uint16Array_of_js
          (let x3327 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x3327 "of") "apply"
             [|x3327;((let x3325 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3326 : float) ->
                            ignore
                              (Ojs.call x3325 "push"
                                 [|(Ojs.float_to_js x3326)|])) x3324;
                       x3325))|])
    let (from : array:float _Array -> _Uint16Array) =
      fun ~array:(x3328 : float _Array) ->
        _Uint16Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(_Array_to_js Ojs.float_to_js x3328)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Uint16Array)
      =
      fun ~array:(x3330 : 'T _Array) ->
        fun ~mapfn:(x3331 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3332 : any option) ->
            fun () ->
              _Uint16Array_of_js
                (let x3338 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x3338 "from") "apply"
                   [|x3338;((let x3333 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3333 "push"
                                  [|(_Array_to_js Obj.magic x3330)|]);
                             ignore
                               (Ojs.call x3333 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3335 : Ojs.t) ->
                                          fun (x3336 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3331 ~v:(Obj.magic x3335)
                                                 ~k:(Ojs.float_of_js x3336))))|]);
                             (match x3332 with
                              | Some x3334 ->
                                  ignore
                                    (Ojs.call x3333 "push"
                                       [|(any_to_js x3334)|])
                              | None -> ());
                             x3333))|])
  end
module Uint16ArrayConstructor =
  struct
    type t = _Uint16ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x3340 : Ojs.t) -> _Uint16ArrayConstructor_of_js x3340
    and t_to_js : t -> Ojs.t =
      fun (x3339 : _Uint16ArrayConstructor) ->
        _Uint16ArrayConstructor_to_js x3339
    let (get_prototype : t -> _Uint16Array) =
      fun (x3341 : t) ->
        _Uint16Array_of_js (Ojs.get_prop_ascii (t_to_js x3341) "prototype")
    let (create : t -> length:float -> _Uint16Array) =
      fun (x3343 : t) ->
        fun ~length:(x3342 : float) ->
          _Uint16Array_of_js
            (Ojs.new_obj (t_to_js x3343) [|(Ojs.float_to_js x3342)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Uint16Array) =
      fun (x3348 : t) ->
        fun ~array:(x3344 : (_ArrayBuffer, float _Array) union2) ->
          _Uint16Array_of_js
            (Ojs.new_obj (t_to_js x3348)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x3346 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x3346) x3344)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Uint16Array)
      =
      fun (x3355 : t) ->
        fun ~buffer:(x3349 : _ArrayBuffer) ->
          fun ?byteOffset:(x3350 : float option) ->
            fun ?length:(x3351 : float option) ->
              fun () ->
                _Uint16Array_of_js
                  (Ojs.new_obj_arr (t_to_js x3355)
                     (let x3352 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3352 "push" [|(_ArrayBuffer_to_js x3349)|]);
                      (match x3350 with
                       | Some x3354 ->
                           ignore
                             (Ojs.call x3352 "push"
                                [|(Ojs.float_to_js x3354)|])
                       | None -> ());
                      (match x3351 with
                       | Some x3353 ->
                           ignore
                             (Ojs.call x3352 "push"
                                [|(Ojs.float_to_js x3353)|])
                       | None -> ());
                      x3352))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3356 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3356) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> _Uint16Array) =
      fun (x3360 : t) ->
        fun (x3357 : float list) ->
          _Uint16Array_of_js
            (let x3361 = t_to_js x3360 in
             Ojs.call (Ojs.get_prop_ascii x3361 "of") "apply"
               [|x3361;((let x3358 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3359 : float) ->
                              ignore
                                (Ojs.call x3358 "push"
                                   [|(Ojs.float_to_js x3359)|])) x3357;
                         x3358))|])
    let (from : t -> array:float _Array -> _Uint16Array) =
      fun (x3364 : t) ->
        fun ~array:(x3362 : float _Array) ->
          _Uint16Array_of_js
            (Ojs.call (t_to_js x3364) "from"
               [|(_Array_to_js Ojs.float_to_js x3362)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Uint16Array)
      =
      fun (x3373 : t) ->
        fun ~array:(x3365 : 'T _Array) ->
          fun ~mapfn:(x3366 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3367 : any option) ->
              fun () ->
                _Uint16Array_of_js
                  (let x3374 = t_to_js x3373 in
                   Ojs.call (Ojs.get_prop_ascii x3374 "from") "apply"
                     [|x3374;((let x3368 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3368 "push"
                                    [|(_Array_to_js Obj.magic x3365)|]);
                               ignore
                                 (Ojs.call x3368 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3370 : Ojs.t) ->
                                            fun (x3371 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3366 ~v:(Obj.magic x3370)
                                                   ~k:(Ojs.float_of_js x3371))))|]);
                               (match x3367 with
                                | Some x3369 ->
                                    ignore
                                      (Ojs.call x3368 "push"
                                         [|(any_to_js x3369)|])
                                | None -> ());
                               x3368))|])
  end
let (uint16Array : _Uint16ArrayConstructor) =
  _Uint16ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Uint16Array")
module Int32Array =
  struct
    type t = _Int32Array
    let rec t_of_js : Ojs.t -> t =
      fun (x3376 : Ojs.t) -> _Int32Array_of_js x3376
    and t_to_js : t -> Ojs.t =
      fun (x3375 : _Int32Array) -> _Int32Array_to_js x3375
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3377 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3377) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x3378 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x3378) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3379 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3379) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3380 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3380) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3386 : t) ->
        fun ~target:(x3381 : float) ->
          fun ~start:(x3382 : float) ->
            fun ?end_:(x3383 : float option) ->
              fun () ->
                t_of_js
                  (let x3387 = t_to_js x3386 in
                   Ojs.call (Ojs.get_prop_ascii x3387 "copyWithin") "apply"
                     [|x3387;((let x3384 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3384 "push"
                                    [|(Ojs.float_to_js x3381)|]);
                               ignore
                                 (Ojs.call x3384 "push"
                                    [|(Ojs.float_to_js x3382)|]);
                               (match x3383 with
                                | Some x3385 ->
                                    ignore
                                      (Ojs.call x3384 "push"
                                         [|(Ojs.float_to_js x3385)|])
                                | None -> ());
                               x3384))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3395 : t) ->
        fun (x3388 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3389 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3396 = t_to_js x3395 in
                 Ojs.call (Ojs.get_prop_ascii x3396 "every") "apply"
                   [|x3396;((let x3390 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3390 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3392 : Ojs.t) ->
                                          fun (x3393 : Ojs.t) ->
                                            fun (x3394 : Ojs.t) ->
                                              unknown_to_js
                                                (x3388
                                                   ~value:(Ojs.float_of_js
                                                             x3392)
                                                   ~index:(Ojs.float_of_js
                                                             x3393)
                                                   ~array:(t_of_js x3394))))|]);
                             (match x3389 with
                              | Some x3391 ->
                                  ignore
                                    (Ojs.call x3390 "push"
                                       [|(any_to_js x3391)|])
                              | None -> ());
                             x3390))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3403 : t) ->
        fun ~value:(x3397 : float) ->
          fun ?start:(x3398 : float option) ->
            fun ?end_:(x3399 : float option) ->
              fun () ->
                t_of_js
                  (let x3404 = t_to_js x3403 in
                   Ojs.call (Ojs.get_prop_ascii x3404 "fill") "apply"
                     [|x3404;((let x3400 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3400 "push"
                                    [|(Ojs.float_to_js x3397)|]);
                               (match x3398 with
                                | Some x3402 ->
                                    ignore
                                      (Ojs.call x3400 "push"
                                         [|(Ojs.float_to_js x3402)|])
                                | None -> ());
                               (match x3399 with
                                | Some x3401 ->
                                    ignore
                                      (Ojs.call x3400 "push"
                                         [|(Ojs.float_to_js x3401)|])
                                | None -> ());
                               x3400))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3412 : t) ->
        fun (x3405 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x3406 : any option) ->
            fun () ->
              t_of_js
                (let x3413 = t_to_js x3412 in
                 Ojs.call (Ojs.get_prop_ascii x3413 "filter") "apply"
                   [|x3413;((let x3407 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3407 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3409 : Ojs.t) ->
                                          fun (x3410 : Ojs.t) ->
                                            fun (x3411 : Ojs.t) ->
                                              any_to_js
                                                (x3405
                                                   ~value:(Ojs.float_of_js
                                                             x3409)
                                                   ~index:(Ojs.float_of_js
                                                             x3410)
                                                   ~array:(t_of_js x3411))))|]);
                             (match x3406 with
                              | Some x3408 ->
                                  ignore
                                    (Ojs.call x3407 "push"
                                       [|(any_to_js x3408)|])
                              | None -> ());
                             x3407))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3421 : t) ->
        fun (x3414 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3415 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3422 = t_to_js x3421 in
                 Ojs.call (Ojs.get_prop_ascii x3422 "find") "apply"
                   [|x3422;((let x3416 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3416 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3418 : Ojs.t) ->
                                          fun (x3419 : Ojs.t) ->
                                            fun (x3420 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3414
                                                   ~value:(Ojs.float_of_js
                                                             x3418)
                                                   ~index:(Ojs.float_of_js
                                                             x3419)
                                                   ~obj:(t_of_js x3420))))|]);
                             (match x3415 with
                              | Some x3417 ->
                                  ignore
                                    (Ojs.call x3416 "push"
                                       [|(any_to_js x3417)|])
                              | None -> ());
                             x3416))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3431 : t) ->
        fun (x3424 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3425 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3432 = t_to_js x3431 in
                 Ojs.call (Ojs.get_prop_ascii x3432 "findIndex") "apply"
                   [|x3432;((let x3426 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3426 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3428 : Ojs.t) ->
                                          fun (x3429 : Ojs.t) ->
                                            fun (x3430 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3424
                                                   ~value:(Ojs.float_of_js
                                                             x3428)
                                                   ~index:(Ojs.float_of_js
                                                             x3429)
                                                   ~obj:(t_of_js x3430))))|]);
                             (match x3425 with
                              | Some x3427 ->
                                  ignore
                                    (Ojs.call x3426 "push"
                                       [|(any_to_js x3427)|])
                              | None -> ());
                             x3426))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3440 : t) ->
        fun
          ~callbackfn:(x3433 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3434 : any option) ->
            fun () ->
              ignore
                (let x3441 = t_to_js x3440 in
                 Ojs.call (Ojs.get_prop_ascii x3441 "forEach") "apply"
                   [|x3441;((let x3435 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3435 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3437 : Ojs.t) ->
                                          fun (x3438 : Ojs.t) ->
                                            fun (x3439 : Ojs.t) ->
                                              x3433
                                                ~value:(Ojs.float_of_js x3437)
                                                ~index:(Ojs.float_of_js x3438)
                                                ~array:(t_of_js x3439)))|]);
                             (match x3434 with
                              | Some x3436 ->
                                  ignore
                                    (Ojs.call x3435 "push"
                                       [|(any_to_js x3436)|])
                              | None -> ());
                             x3435))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3446 : t) ->
        fun ~searchElement:(x3442 : float) ->
          fun ?fromIndex:(x3443 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3447 = t_to_js x3446 in
                 Ojs.call (Ojs.get_prop_ascii x3447 "indexOf") "apply"
                   [|x3447;((let x3444 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3444 "push"
                                  [|(Ojs.float_to_js x3442)|]);
                             (match x3443 with
                              | Some x3445 ->
                                  ignore
                                    (Ojs.call x3444 "push"
                                       [|(Ojs.float_to_js x3445)|])
                              | None -> ());
                             x3444))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3451 : t) ->
        fun ?separator:(x3448 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3452 = t_to_js x3451 in
               Ojs.call (Ojs.get_prop_ascii x3452 "join") "apply"
                 [|x3452;((let x3449 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3448 with
                            | Some x3450 ->
                                ignore
                                  (Ojs.call x3449 "push"
                                     [|(Ojs.string_to_js x3450)|])
                            | None -> ());
                           x3449))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3457 : t) ->
        fun ~searchElement:(x3453 : float) ->
          fun ?fromIndex:(x3454 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3458 = t_to_js x3457 in
                 Ojs.call (Ojs.get_prop_ascii x3458 "lastIndexOf") "apply"
                   [|x3458;((let x3455 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3455 "push"
                                  [|(Ojs.float_to_js x3453)|]);
                             (match x3454 with
                              | Some x3456 ->
                                  ignore
                                    (Ojs.call x3455 "push"
                                       [|(Ojs.float_to_js x3456)|])
                              | None -> ());
                             x3455))|])
    let (get_length : t -> float) =
      fun (x3459 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3459) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3467 : t) ->
        fun
          ~callbackfn:(x3460 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3461 : any option) ->
            fun () ->
              t_of_js
                (let x3468 = t_to_js x3467 in
                 Ojs.call (Ojs.get_prop_ascii x3468 "map") "apply"
                   [|x3468;((let x3462 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3462 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3464 : Ojs.t) ->
                                          fun (x3465 : Ojs.t) ->
                                            fun (x3466 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3460
                                                   ~value:(Ojs.float_of_js
                                                             x3464)
                                                   ~index:(Ojs.float_of_js
                                                             x3465)
                                                   ~array:(t_of_js x3466))))|]);
                             (match x3461 with
                              | Some x3463 ->
                                  ignore
                                    (Ojs.call x3462 "push"
                                       [|(any_to_js x3463)|])
                              | None -> ());
                             x3462))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3474 : t) ->
        fun
          ~callbackfn:(x3469 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3474) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3470 : Ojs.t) ->
                       fun (x3471 : Ojs.t) ->
                         fun (x3472 : Ojs.t) ->
                           fun (x3473 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3469 ~previousValue:(Ojs.float_of_js x3470)
                                  ~currentValue:(Ojs.float_of_js x3471)
                                  ~currentIndex:(Ojs.float_of_js x3472)
                                  ~array:(t_of_js x3473))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3481 : t) ->
        fun
          ~callbackfn:(x3475 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3480 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3481) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3476 : Ojs.t) ->
                         fun (x3477 : Ojs.t) ->
                           fun (x3478 : Ojs.t) ->
                             fun (x3479 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3475
                                    ~previousValue:(Ojs.float_of_js x3476)
                                    ~currentValue:(Ojs.float_of_js x3477)
                                    ~currentIndex:(Ojs.float_of_js x3478)
                                    ~array:(t_of_js x3479))));(Ojs.float_to_js
                                                                 x3480)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3488 : t) ->
        fun
          ~callbackfn:(x3482 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3487 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3488) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3483 : Ojs.t) ->
                         fun (x3484 : Ojs.t) ->
                           fun (x3485 : Ojs.t) ->
                             fun (x3486 : Ojs.t) ->
                               Obj.magic
                                 (x3482 ~previousValue:(Obj.magic x3483)
                                    ~currentValue:(Ojs.float_of_js x3484)
                                    ~currentIndex:(Ojs.float_of_js x3485)
                                    ~array:(t_of_js x3486))));(Obj.magic
                                                                 x3487)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3494 : t) ->
        fun
          ~callbackfn:(x3489 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3494) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3490 : Ojs.t) ->
                       fun (x3491 : Ojs.t) ->
                         fun (x3492 : Ojs.t) ->
                           fun (x3493 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3489 ~previousValue:(Ojs.float_of_js x3490)
                                  ~currentValue:(Ojs.float_of_js x3491)
                                  ~currentIndex:(Ojs.float_of_js x3492)
                                  ~array:(t_of_js x3493))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3501 : t) ->
        fun
          ~callbackfn:(x3495 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3500 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3501) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3496 : Ojs.t) ->
                         fun (x3497 : Ojs.t) ->
                           fun (x3498 : Ojs.t) ->
                             fun (x3499 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3495
                                    ~previousValue:(Ojs.float_of_js x3496)
                                    ~currentValue:(Ojs.float_of_js x3497)
                                    ~currentIndex:(Ojs.float_of_js x3498)
                                    ~array:(t_of_js x3499))));(Ojs.float_to_js
                                                                 x3500)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3508 : t) ->
        fun
          ~callbackfn:(x3502 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3507 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3508) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3503 : Ojs.t) ->
                         fun (x3504 : Ojs.t) ->
                           fun (x3505 : Ojs.t) ->
                             fun (x3506 : Ojs.t) ->
                               Obj.magic
                                 (x3502 ~previousValue:(Obj.magic x3503)
                                    ~currentValue:(Ojs.float_of_js x3504)
                                    ~currentIndex:(Ojs.float_of_js x3505)
                                    ~array:(t_of_js x3506))));(Obj.magic
                                                                 x3507)|])
    let (reverse : t -> t) =
      fun (x3509 : t) -> t_of_js (Ojs.call (t_to_js x3509) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x3515 : t) ->
        fun ~array:(x3510 : float _Array) ->
          fun ?offset:(x3511 : float option) ->
            fun () ->
              ignore
                (let x3516 = t_to_js x3515 in
                 Ojs.call (Ojs.get_prop_ascii x3516 "set") "apply"
                   [|x3516;((let x3512 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3512 "push"
                                  [|(_Array_to_js Ojs.float_to_js x3510)|]);
                             (match x3511 with
                              | Some x3513 ->
                                  ignore
                                    (Ojs.call x3512 "push"
                                       [|(Ojs.float_to_js x3513)|])
                              | None -> ());
                             x3512))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3522 : t) ->
        fun ?start:(x3517 : float option) ->
          fun ?end_:(x3518 : float option) ->
            fun () ->
              t_of_js
                (let x3523 = t_to_js x3522 in
                 Ojs.call (Ojs.get_prop_ascii x3523 "slice") "apply"
                   [|x3523;((let x3519 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3517 with
                              | Some x3521 ->
                                  ignore
                                    (Ojs.call x3519 "push"
                                       [|(Ojs.float_to_js x3521)|])
                              | None -> ());
                             (match x3518 with
                              | Some x3520 ->
                                  ignore
                                    (Ojs.call x3519 "push"
                                       [|(Ojs.float_to_js x3520)|])
                              | None -> ());
                             x3519))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3531 : t) ->
        fun (x3524 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3525 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3532 = t_to_js x3531 in
                 Ojs.call (Ojs.get_prop_ascii x3532 "some") "apply"
                   [|x3532;((let x3526 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3526 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3528 : Ojs.t) ->
                                          fun (x3529 : Ojs.t) ->
                                            fun (x3530 : Ojs.t) ->
                                              unknown_to_js
                                                (x3524
                                                   ~value:(Ojs.float_of_js
                                                             x3528)
                                                   ~index:(Ojs.float_of_js
                                                             x3529)
                                                   ~array:(t_of_js x3530))))|]);
                             (match x3525 with
                              | Some x3527 ->
                                  ignore
                                    (Ojs.call x3526 "push"
                                       [|(any_to_js x3527)|])
                              | None -> ());
                             x3526))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3538 : t) ->
        fun ?compareFn:(x3533 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3539 = t_to_js x3538 in
               Ojs.call (Ojs.get_prop_ascii x3539 "sort") "apply"
                 [|x3539;((let x3534 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3533 with
                            | Some x3535 ->
                                ignore
                                  (Ojs.call x3534 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3536 : Ojs.t) ->
                                             fun (x3537 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3535
                                                    ~a:(Ojs.float_of_js x3536)
                                                    ~b:(Ojs.float_of_js x3537))))|])
                            | None -> ());
                           x3534))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3545 : t) ->
        fun ?begin_:(x3540 : float option) ->
          fun ?end_:(x3541 : float option) ->
            fun () ->
              t_of_js
                (let x3546 = t_to_js x3545 in
                 Ojs.call (Ojs.get_prop_ascii x3546 "subarray") "apply"
                   [|x3546;((let x3542 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3540 with
                              | Some x3544 ->
                                  ignore
                                    (Ojs.call x3542 "push"
                                       [|(Ojs.float_to_js x3544)|])
                              | None -> ());
                             (match x3541 with
                              | Some x3543 ->
                                  ignore
                                    (Ojs.call x3542 "push"
                                       [|(Ojs.float_to_js x3543)|])
                              | None -> ());
                             x3542))|])
    let (toLocaleString : t -> string) =
      fun (x3547 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3547) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3548 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3548) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3549 : t) -> t_of_js (Ojs.call (t_to_js x3549) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3550 : t) ->
        fun (x3551 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3550) (Ojs.float_to_js x3551))
    let (set : t -> float -> float -> unit) =
      fun (x3552 : t) ->
        fun (x3553 : float) ->
          fun (x3554 : float) ->
            Ojs.set_prop (t_to_js x3552) (Ojs.float_to_js x3553)
              (Ojs.float_to_js x3554)
    let (create : length:float -> _Int32Array) =
      fun ~length:(x3555 : float) ->
        _Int32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x3555)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Int32Array)
      =
      fun ~array:(x3556 : (_ArrayBuffer, float _Array) union2) ->
        _Int32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x3558 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x3558) x3556)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Int32Array)
      =
      fun ~buffer:(x3560 : _ArrayBuffer) ->
        fun ?byteOffset:(x3561 : float option) ->
          fun ?length:(x3562 : float option) ->
            fun () ->
              _Int32Array_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x3563 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3563 "push" [|(_ArrayBuffer_to_js x3560)|]);
                    (match x3561 with
                     | Some x3565 ->
                         ignore
                           (Ojs.call x3563 "push" [|(Ojs.float_to_js x3565)|])
                     | None -> ());
                    (match x3562 with
                     | Some x3564 ->
                         ignore
                           (Ojs.call x3563 "push" [|(Ojs.float_to_js x3564)|])
                     | None -> ());
                    x3563))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> _Int32Array) =
      fun (x3566 : float list) ->
        _Int32Array_of_js
          (let x3569 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x3569 "of") "apply"
             [|x3569;((let x3567 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3568 : float) ->
                            ignore
                              (Ojs.call x3567 "push"
                                 [|(Ojs.float_to_js x3568)|])) x3566;
                       x3567))|])
    let (from : array:float _Array -> _Int32Array) =
      fun ~array:(x3570 : float _Array) ->
        _Int32Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(_Array_to_js Ojs.float_to_js x3570)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Int32Array)
      =
      fun ~array:(x3572 : 'T _Array) ->
        fun ~mapfn:(x3573 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3574 : any option) ->
            fun () ->
              _Int32Array_of_js
                (let x3580 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x3580 "from") "apply"
                   [|x3580;((let x3575 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3575 "push"
                                  [|(_Array_to_js Obj.magic x3572)|]);
                             ignore
                               (Ojs.call x3575 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3577 : Ojs.t) ->
                                          fun (x3578 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3573 ~v:(Obj.magic x3577)
                                                 ~k:(Ojs.float_of_js x3578))))|]);
                             (match x3574 with
                              | Some x3576 ->
                                  ignore
                                    (Ojs.call x3575 "push"
                                       [|(any_to_js x3576)|])
                              | None -> ());
                             x3575))|])
  end
module Int32ArrayConstructor =
  struct
    type t = _Int32ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x3582 : Ojs.t) -> _Int32ArrayConstructor_of_js x3582
    and t_to_js : t -> Ojs.t =
      fun (x3581 : _Int32ArrayConstructor) ->
        _Int32ArrayConstructor_to_js x3581
    let (get_prototype : t -> _Int32Array) =
      fun (x3583 : t) ->
        _Int32Array_of_js (Ojs.get_prop_ascii (t_to_js x3583) "prototype")
    let (create : t -> length:float -> _Int32Array) =
      fun (x3585 : t) ->
        fun ~length:(x3584 : float) ->
          _Int32Array_of_js
            (Ojs.new_obj (t_to_js x3585) [|(Ojs.float_to_js x3584)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Int32Array) =
      fun (x3590 : t) ->
        fun ~array:(x3586 : (_ArrayBuffer, float _Array) union2) ->
          _Int32Array_of_js
            (Ojs.new_obj (t_to_js x3590)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x3588 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x3588) x3586)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Int32Array)
      =
      fun (x3597 : t) ->
        fun ~buffer:(x3591 : _ArrayBuffer) ->
          fun ?byteOffset:(x3592 : float option) ->
            fun ?length:(x3593 : float option) ->
              fun () ->
                _Int32Array_of_js
                  (Ojs.new_obj_arr (t_to_js x3597)
                     (let x3594 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3594 "push" [|(_ArrayBuffer_to_js x3591)|]);
                      (match x3592 with
                       | Some x3596 ->
                           ignore
                             (Ojs.call x3594 "push"
                                [|(Ojs.float_to_js x3596)|])
                       | None -> ());
                      (match x3593 with
                       | Some x3595 ->
                           ignore
                             (Ojs.call x3594 "push"
                                [|(Ojs.float_to_js x3595)|])
                       | None -> ());
                      x3594))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3598 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3598) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> _Int32Array) =
      fun (x3602 : t) ->
        fun (x3599 : float list) ->
          _Int32Array_of_js
            (let x3603 = t_to_js x3602 in
             Ojs.call (Ojs.get_prop_ascii x3603 "of") "apply"
               [|x3603;((let x3600 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3601 : float) ->
                              ignore
                                (Ojs.call x3600 "push"
                                   [|(Ojs.float_to_js x3601)|])) x3599;
                         x3600))|])
    let (from : t -> array:float _Array -> _Int32Array) =
      fun (x3606 : t) ->
        fun ~array:(x3604 : float _Array) ->
          _Int32Array_of_js
            (Ojs.call (t_to_js x3606) "from"
               [|(_Array_to_js Ojs.float_to_js x3604)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Int32Array)
      =
      fun (x3615 : t) ->
        fun ~array:(x3607 : 'T _Array) ->
          fun ~mapfn:(x3608 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3609 : any option) ->
              fun () ->
                _Int32Array_of_js
                  (let x3616 = t_to_js x3615 in
                   Ojs.call (Ojs.get_prop_ascii x3616 "from") "apply"
                     [|x3616;((let x3610 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3610 "push"
                                    [|(_Array_to_js Obj.magic x3607)|]);
                               ignore
                                 (Ojs.call x3610 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3612 : Ojs.t) ->
                                            fun (x3613 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3608 ~v:(Obj.magic x3612)
                                                   ~k:(Ojs.float_of_js x3613))))|]);
                               (match x3609 with
                                | Some x3611 ->
                                    ignore
                                      (Ojs.call x3610 "push"
                                         [|(any_to_js x3611)|])
                                | None -> ());
                               x3610))|])
  end
let (int32Array : _Int32ArrayConstructor) =
  _Int32ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Int32Array")
module Uint32Array =
  struct
    type t = _Uint32Array
    let rec t_of_js : Ojs.t -> t =
      fun (x3618 : Ojs.t) -> _Uint32Array_of_js x3618
    and t_to_js : t -> Ojs.t =
      fun (x3617 : _Uint32Array) -> _Uint32Array_to_js x3617
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3619 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3619) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x3620 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x3620) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3621 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3621) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3622 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3622) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3628 : t) ->
        fun ~target:(x3623 : float) ->
          fun ~start:(x3624 : float) ->
            fun ?end_:(x3625 : float option) ->
              fun () ->
                t_of_js
                  (let x3629 = t_to_js x3628 in
                   Ojs.call (Ojs.get_prop_ascii x3629 "copyWithin") "apply"
                     [|x3629;((let x3626 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3626 "push"
                                    [|(Ojs.float_to_js x3623)|]);
                               ignore
                                 (Ojs.call x3626 "push"
                                    [|(Ojs.float_to_js x3624)|]);
                               (match x3625 with
                                | Some x3627 ->
                                    ignore
                                      (Ojs.call x3626 "push"
                                         [|(Ojs.float_to_js x3627)|])
                                | None -> ());
                               x3626))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3637 : t) ->
        fun (x3630 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3631 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3638 = t_to_js x3637 in
                 Ojs.call (Ojs.get_prop_ascii x3638 "every") "apply"
                   [|x3638;((let x3632 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3632 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3634 : Ojs.t) ->
                                          fun (x3635 : Ojs.t) ->
                                            fun (x3636 : Ojs.t) ->
                                              unknown_to_js
                                                (x3630
                                                   ~value:(Ojs.float_of_js
                                                             x3634)
                                                   ~index:(Ojs.float_of_js
                                                             x3635)
                                                   ~array:(t_of_js x3636))))|]);
                             (match x3631 with
                              | Some x3633 ->
                                  ignore
                                    (Ojs.call x3632 "push"
                                       [|(any_to_js x3633)|])
                              | None -> ());
                             x3632))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3645 : t) ->
        fun ~value:(x3639 : float) ->
          fun ?start:(x3640 : float option) ->
            fun ?end_:(x3641 : float option) ->
              fun () ->
                t_of_js
                  (let x3646 = t_to_js x3645 in
                   Ojs.call (Ojs.get_prop_ascii x3646 "fill") "apply"
                     [|x3646;((let x3642 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3642 "push"
                                    [|(Ojs.float_to_js x3639)|]);
                               (match x3640 with
                                | Some x3644 ->
                                    ignore
                                      (Ojs.call x3642 "push"
                                         [|(Ojs.float_to_js x3644)|])
                                | None -> ());
                               (match x3641 with
                                | Some x3643 ->
                                    ignore
                                      (Ojs.call x3642 "push"
                                         [|(Ojs.float_to_js x3643)|])
                                | None -> ());
                               x3642))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3654 : t) ->
        fun (x3647 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x3648 : any option) ->
            fun () ->
              t_of_js
                (let x3655 = t_to_js x3654 in
                 Ojs.call (Ojs.get_prop_ascii x3655 "filter") "apply"
                   [|x3655;((let x3649 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3649 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3651 : Ojs.t) ->
                                          fun (x3652 : Ojs.t) ->
                                            fun (x3653 : Ojs.t) ->
                                              any_to_js
                                                (x3647
                                                   ~value:(Ojs.float_of_js
                                                             x3651)
                                                   ~index:(Ojs.float_of_js
                                                             x3652)
                                                   ~array:(t_of_js x3653))))|]);
                             (match x3648 with
                              | Some x3650 ->
                                  ignore
                                    (Ojs.call x3649 "push"
                                       [|(any_to_js x3650)|])
                              | None -> ());
                             x3649))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3663 : t) ->
        fun (x3656 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3657 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3664 = t_to_js x3663 in
                 Ojs.call (Ojs.get_prop_ascii x3664 "find") "apply"
                   [|x3664;((let x3658 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3658 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3660 : Ojs.t) ->
                                          fun (x3661 : Ojs.t) ->
                                            fun (x3662 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3656
                                                   ~value:(Ojs.float_of_js
                                                             x3660)
                                                   ~index:(Ojs.float_of_js
                                                             x3661)
                                                   ~obj:(t_of_js x3662))))|]);
                             (match x3657 with
                              | Some x3659 ->
                                  ignore
                                    (Ojs.call x3658 "push"
                                       [|(any_to_js x3659)|])
                              | None -> ());
                             x3658))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3673 : t) ->
        fun (x3666 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3667 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3674 = t_to_js x3673 in
                 Ojs.call (Ojs.get_prop_ascii x3674 "findIndex") "apply"
                   [|x3674;((let x3668 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3668 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3670 : Ojs.t) ->
                                          fun (x3671 : Ojs.t) ->
                                            fun (x3672 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3666
                                                   ~value:(Ojs.float_of_js
                                                             x3670)
                                                   ~index:(Ojs.float_of_js
                                                             x3671)
                                                   ~obj:(t_of_js x3672))))|]);
                             (match x3667 with
                              | Some x3669 ->
                                  ignore
                                    (Ojs.call x3668 "push"
                                       [|(any_to_js x3669)|])
                              | None -> ());
                             x3668))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3682 : t) ->
        fun
          ~callbackfn:(x3675 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3676 : any option) ->
            fun () ->
              ignore
                (let x3683 = t_to_js x3682 in
                 Ojs.call (Ojs.get_prop_ascii x3683 "forEach") "apply"
                   [|x3683;((let x3677 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3677 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3679 : Ojs.t) ->
                                          fun (x3680 : Ojs.t) ->
                                            fun (x3681 : Ojs.t) ->
                                              x3675
                                                ~value:(Ojs.float_of_js x3679)
                                                ~index:(Ojs.float_of_js x3680)
                                                ~array:(t_of_js x3681)))|]);
                             (match x3676 with
                              | Some x3678 ->
                                  ignore
                                    (Ojs.call x3677 "push"
                                       [|(any_to_js x3678)|])
                              | None -> ());
                             x3677))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3688 : t) ->
        fun ~searchElement:(x3684 : float) ->
          fun ?fromIndex:(x3685 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3689 = t_to_js x3688 in
                 Ojs.call (Ojs.get_prop_ascii x3689 "indexOf") "apply"
                   [|x3689;((let x3686 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3686 "push"
                                  [|(Ojs.float_to_js x3684)|]);
                             (match x3685 with
                              | Some x3687 ->
                                  ignore
                                    (Ojs.call x3686 "push"
                                       [|(Ojs.float_to_js x3687)|])
                              | None -> ());
                             x3686))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3693 : t) ->
        fun ?separator:(x3690 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3694 = t_to_js x3693 in
               Ojs.call (Ojs.get_prop_ascii x3694 "join") "apply"
                 [|x3694;((let x3691 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3690 with
                            | Some x3692 ->
                                ignore
                                  (Ojs.call x3691 "push"
                                     [|(Ojs.string_to_js x3692)|])
                            | None -> ());
                           x3691))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3699 : t) ->
        fun ~searchElement:(x3695 : float) ->
          fun ?fromIndex:(x3696 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3700 = t_to_js x3699 in
                 Ojs.call (Ojs.get_prop_ascii x3700 "lastIndexOf") "apply"
                   [|x3700;((let x3697 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3697 "push"
                                  [|(Ojs.float_to_js x3695)|]);
                             (match x3696 with
                              | Some x3698 ->
                                  ignore
                                    (Ojs.call x3697 "push"
                                       [|(Ojs.float_to_js x3698)|])
                              | None -> ());
                             x3697))|])
    let (get_length : t -> float) =
      fun (x3701 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3701) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3709 : t) ->
        fun
          ~callbackfn:(x3702 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3703 : any option) ->
            fun () ->
              t_of_js
                (let x3710 = t_to_js x3709 in
                 Ojs.call (Ojs.get_prop_ascii x3710 "map") "apply"
                   [|x3710;((let x3704 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3704 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3706 : Ojs.t) ->
                                          fun (x3707 : Ojs.t) ->
                                            fun (x3708 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3702
                                                   ~value:(Ojs.float_of_js
                                                             x3706)
                                                   ~index:(Ojs.float_of_js
                                                             x3707)
                                                   ~array:(t_of_js x3708))))|]);
                             (match x3703 with
                              | Some x3705 ->
                                  ignore
                                    (Ojs.call x3704 "push"
                                       [|(any_to_js x3705)|])
                              | None -> ());
                             x3704))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3716 : t) ->
        fun
          ~callbackfn:(x3711 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3716) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3712 : Ojs.t) ->
                       fun (x3713 : Ojs.t) ->
                         fun (x3714 : Ojs.t) ->
                           fun (x3715 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3711 ~previousValue:(Ojs.float_of_js x3712)
                                  ~currentValue:(Ojs.float_of_js x3713)
                                  ~currentIndex:(Ojs.float_of_js x3714)
                                  ~array:(t_of_js x3715))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3723 : t) ->
        fun
          ~callbackfn:(x3717 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3722 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3723) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3718 : Ojs.t) ->
                         fun (x3719 : Ojs.t) ->
                           fun (x3720 : Ojs.t) ->
                             fun (x3721 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3717
                                    ~previousValue:(Ojs.float_of_js x3718)
                                    ~currentValue:(Ojs.float_of_js x3719)
                                    ~currentIndex:(Ojs.float_of_js x3720)
                                    ~array:(t_of_js x3721))));(Ojs.float_to_js
                                                                 x3722)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3730 : t) ->
        fun
          ~callbackfn:(x3724 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3729 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3730) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3725 : Ojs.t) ->
                         fun (x3726 : Ojs.t) ->
                           fun (x3727 : Ojs.t) ->
                             fun (x3728 : Ojs.t) ->
                               Obj.magic
                                 (x3724 ~previousValue:(Obj.magic x3725)
                                    ~currentValue:(Ojs.float_of_js x3726)
                                    ~currentIndex:(Ojs.float_of_js x3727)
                                    ~array:(t_of_js x3728))));(Obj.magic
                                                                 x3729)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3736 : t) ->
        fun
          ~callbackfn:(x3731 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3736) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3732 : Ojs.t) ->
                       fun (x3733 : Ojs.t) ->
                         fun (x3734 : Ojs.t) ->
                           fun (x3735 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3731 ~previousValue:(Ojs.float_of_js x3732)
                                  ~currentValue:(Ojs.float_of_js x3733)
                                  ~currentIndex:(Ojs.float_of_js x3734)
                                  ~array:(t_of_js x3735))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3743 : t) ->
        fun
          ~callbackfn:(x3737 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3742 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3743) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3738 : Ojs.t) ->
                         fun (x3739 : Ojs.t) ->
                           fun (x3740 : Ojs.t) ->
                             fun (x3741 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3737
                                    ~previousValue:(Ojs.float_of_js x3738)
                                    ~currentValue:(Ojs.float_of_js x3739)
                                    ~currentIndex:(Ojs.float_of_js x3740)
                                    ~array:(t_of_js x3741))));(Ojs.float_to_js
                                                                 x3742)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3750 : t) ->
        fun
          ~callbackfn:(x3744 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3749 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3750) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3745 : Ojs.t) ->
                         fun (x3746 : Ojs.t) ->
                           fun (x3747 : Ojs.t) ->
                             fun (x3748 : Ojs.t) ->
                               Obj.magic
                                 (x3744 ~previousValue:(Obj.magic x3745)
                                    ~currentValue:(Ojs.float_of_js x3746)
                                    ~currentIndex:(Ojs.float_of_js x3747)
                                    ~array:(t_of_js x3748))));(Obj.magic
                                                                 x3749)|])
    let (reverse : t -> t) =
      fun (x3751 : t) -> t_of_js (Ojs.call (t_to_js x3751) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x3757 : t) ->
        fun ~array:(x3752 : float _Array) ->
          fun ?offset:(x3753 : float option) ->
            fun () ->
              ignore
                (let x3758 = t_to_js x3757 in
                 Ojs.call (Ojs.get_prop_ascii x3758 "set") "apply"
                   [|x3758;((let x3754 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3754 "push"
                                  [|(_Array_to_js Ojs.float_to_js x3752)|]);
                             (match x3753 with
                              | Some x3755 ->
                                  ignore
                                    (Ojs.call x3754 "push"
                                       [|(Ojs.float_to_js x3755)|])
                              | None -> ());
                             x3754))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x3764 : t) ->
        fun ?start:(x3759 : float option) ->
          fun ?end_:(x3760 : float option) ->
            fun () ->
              t_of_js
                (let x3765 = t_to_js x3764 in
                 Ojs.call (Ojs.get_prop_ascii x3765 "slice") "apply"
                   [|x3765;((let x3761 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3759 with
                              | Some x3763 ->
                                  ignore
                                    (Ojs.call x3761 "push"
                                       [|(Ojs.float_to_js x3763)|])
                              | None -> ());
                             (match x3760 with
                              | Some x3762 ->
                                  ignore
                                    (Ojs.call x3761 "push"
                                       [|(Ojs.float_to_js x3762)|])
                              | None -> ());
                             x3761))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3773 : t) ->
        fun (x3766 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3767 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3774 = t_to_js x3773 in
                 Ojs.call (Ojs.get_prop_ascii x3774 "some") "apply"
                   [|x3774;((let x3768 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3768 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3770 : Ojs.t) ->
                                          fun (x3771 : Ojs.t) ->
                                            fun (x3772 : Ojs.t) ->
                                              unknown_to_js
                                                (x3766
                                                   ~value:(Ojs.float_of_js
                                                             x3770)
                                                   ~index:(Ojs.float_of_js
                                                             x3771)
                                                   ~array:(t_of_js x3772))))|]);
                             (match x3767 with
                              | Some x3769 ->
                                  ignore
                                    (Ojs.call x3768 "push"
                                       [|(any_to_js x3769)|])
                              | None -> ());
                             x3768))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x3780 : t) ->
        fun ?compareFn:(x3775 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x3781 = t_to_js x3780 in
               Ojs.call (Ojs.get_prop_ascii x3781 "sort") "apply"
                 [|x3781;((let x3776 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3775 with
                            | Some x3777 ->
                                ignore
                                  (Ojs.call x3776 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x3778 : Ojs.t) ->
                                             fun (x3779 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x3777
                                                    ~a:(Ojs.float_of_js x3778)
                                                    ~b:(Ojs.float_of_js x3779))))|])
                            | None -> ());
                           x3776))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x3787 : t) ->
        fun ?begin_:(x3782 : float option) ->
          fun ?end_:(x3783 : float option) ->
            fun () ->
              t_of_js
                (let x3788 = t_to_js x3787 in
                 Ojs.call (Ojs.get_prop_ascii x3788 "subarray") "apply"
                   [|x3788;((let x3784 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3782 with
                              | Some x3786 ->
                                  ignore
                                    (Ojs.call x3784 "push"
                                       [|(Ojs.float_to_js x3786)|])
                              | None -> ());
                             (match x3783 with
                              | Some x3785 ->
                                  ignore
                                    (Ojs.call x3784 "push"
                                       [|(Ojs.float_to_js x3785)|])
                              | None -> ());
                             x3784))|])
    let (toLocaleString : t -> string) =
      fun (x3789 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3789) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x3790 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3790) "toString" [||])
    let (valueOf : t -> t) =
      fun (x3791 : t) -> t_of_js (Ojs.call (t_to_js x3791) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x3792 : t) ->
        fun (x3793 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x3792) (Ojs.float_to_js x3793))
    let (set : t -> float -> float -> unit) =
      fun (x3794 : t) ->
        fun (x3795 : float) ->
          fun (x3796 : float) ->
            Ojs.set_prop (t_to_js x3794) (Ojs.float_to_js x3795)
              (Ojs.float_to_js x3796)
    let (create : length:float -> _Uint32Array) =
      fun ~length:(x3797 : float) ->
        _Uint32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x3797)|])
    let (create' : array:(_ArrayBuffer, float _Array) union2 -> _Uint32Array)
      =
      fun ~array:(x3798 : (_ArrayBuffer, float _Array) union2) ->
        _Uint32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x3800 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x3800) x3798)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Uint32Array)
      =
      fun ~buffer:(x3802 : _ArrayBuffer) ->
        fun ?byteOffset:(x3803 : float option) ->
          fun ?length:(x3804 : float option) ->
            fun () ->
              _Uint32Array_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x3805 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3805 "push" [|(_ArrayBuffer_to_js x3802)|]);
                    (match x3803 with
                     | Some x3807 ->
                         ignore
                           (Ojs.call x3805 "push" [|(Ojs.float_to_js x3807)|])
                     | None -> ());
                    (match x3804 with
                     | Some x3806 ->
                         ignore
                           (Ojs.call x3805 "push" [|(Ojs.float_to_js x3806)|])
                     | None -> ());
                    x3805))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> _Uint32Array) =
      fun (x3808 : float list) ->
        _Uint32Array_of_js
          (let x3811 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x3811 "of") "apply"
             [|x3811;((let x3809 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3810 : float) ->
                            ignore
                              (Ojs.call x3809 "push"
                                 [|(Ojs.float_to_js x3810)|])) x3808;
                       x3809))|])
    let (from : array:float _Array -> _Uint32Array) =
      fun ~array:(x3812 : float _Array) ->
        _Uint32Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(_Array_to_js Ojs.float_to_js x3812)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Uint32Array)
      =
      fun ~array:(x3814 : 'T _Array) ->
        fun ~mapfn:(x3815 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x3816 : any option) ->
            fun () ->
              _Uint32Array_of_js
                (let x3822 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x3822 "from") "apply"
                   [|x3822;((let x3817 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3817 "push"
                                  [|(_Array_to_js Obj.magic x3814)|]);
                             ignore
                               (Ojs.call x3817 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x3819 : Ojs.t) ->
                                          fun (x3820 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x3815 ~v:(Obj.magic x3819)
                                                 ~k:(Ojs.float_of_js x3820))))|]);
                             (match x3816 with
                              | Some x3818 ->
                                  ignore
                                    (Ojs.call x3817 "push"
                                       [|(any_to_js x3818)|])
                              | None -> ());
                             x3817))|])
  end
module Uint32ArrayConstructor =
  struct
    type t = _Uint32ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x3824 : Ojs.t) -> _Uint32ArrayConstructor_of_js x3824
    and t_to_js : t -> Ojs.t =
      fun (x3823 : _Uint32ArrayConstructor) ->
        _Uint32ArrayConstructor_to_js x3823
    let (get_prototype : t -> _Uint32Array) =
      fun (x3825 : t) ->
        _Uint32Array_of_js (Ojs.get_prop_ascii (t_to_js x3825) "prototype")
    let (create : t -> length:float -> _Uint32Array) =
      fun (x3827 : t) ->
        fun ~length:(x3826 : float) ->
          _Uint32Array_of_js
            (Ojs.new_obj (t_to_js x3827) [|(Ojs.float_to_js x3826)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Uint32Array) =
      fun (x3832 : t) ->
        fun ~array:(x3828 : (_ArrayBuffer, float _Array) union2) ->
          _Uint32Array_of_js
            (Ojs.new_obj (t_to_js x3832)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x3830 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x3830) x3828)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Uint32Array)
      =
      fun (x3839 : t) ->
        fun ~buffer:(x3833 : _ArrayBuffer) ->
          fun ?byteOffset:(x3834 : float option) ->
            fun ?length:(x3835 : float option) ->
              fun () ->
                _Uint32Array_of_js
                  (Ojs.new_obj_arr (t_to_js x3839)
                     (let x3836 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x3836 "push" [|(_ArrayBuffer_to_js x3833)|]);
                      (match x3834 with
                       | Some x3838 ->
                           ignore
                             (Ojs.call x3836 "push"
                                [|(Ojs.float_to_js x3838)|])
                       | None -> ());
                      (match x3835 with
                       | Some x3837 ->
                           ignore
                             (Ojs.call x3836 "push"
                                [|(Ojs.float_to_js x3837)|])
                       | None -> ());
                      x3836))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3840 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3840) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> _Uint32Array) =
      fun (x3844 : t) ->
        fun (x3841 : float list) ->
          _Uint32Array_of_js
            (let x3845 = t_to_js x3844 in
             Ojs.call (Ojs.get_prop_ascii x3845 "of") "apply"
               [|x3845;((let x3842 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3843 : float) ->
                              ignore
                                (Ojs.call x3842 "push"
                                   [|(Ojs.float_to_js x3843)|])) x3841;
                         x3842))|])
    let (from : t -> array:float _Array -> _Uint32Array) =
      fun (x3848 : t) ->
        fun ~array:(x3846 : float _Array) ->
          _Uint32Array_of_js
            (Ojs.call (t_to_js x3848) "from"
               [|(_Array_to_js Ojs.float_to_js x3846)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Uint32Array)
      =
      fun (x3857 : t) ->
        fun ~array:(x3849 : 'T _Array) ->
          fun ~mapfn:(x3850 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x3851 : any option) ->
              fun () ->
                _Uint32Array_of_js
                  (let x3858 = t_to_js x3857 in
                   Ojs.call (Ojs.get_prop_ascii x3858 "from") "apply"
                     [|x3858;((let x3852 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3852 "push"
                                    [|(_Array_to_js Obj.magic x3849)|]);
                               ignore
                                 (Ojs.call x3852 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x3854 : Ojs.t) ->
                                            fun (x3855 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3850 ~v:(Obj.magic x3854)
                                                   ~k:(Ojs.float_of_js x3855))))|]);
                               (match x3851 with
                                | Some x3853 ->
                                    ignore
                                      (Ojs.call x3852 "push"
                                         [|(any_to_js x3853)|])
                                | None -> ());
                               x3852))|])
  end
let (uint32Array : _Uint32ArrayConstructor) =
  _Uint32ArrayConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Uint32Array")
module Float32Array =
  struct
    type t = _Float32Array
    let rec t_of_js : Ojs.t -> t =
      fun (x3860 : Ojs.t) -> _Float32Array_of_js x3860
    and t_to_js : t -> Ojs.t =
      fun (x3859 : _Float32Array) -> _Float32Array_to_js x3859
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x3861 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x3861) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x3862 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x3862) "buffer")
    let (get_byteLength : t -> float) =
      fun (x3863 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3863) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x3864 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3864) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x3870 : t) ->
        fun ~target:(x3865 : float) ->
          fun ~start:(x3866 : float) ->
            fun ?end_:(x3867 : float option) ->
              fun () ->
                t_of_js
                  (let x3871 = t_to_js x3870 in
                   Ojs.call (Ojs.get_prop_ascii x3871 "copyWithin") "apply"
                     [|x3871;((let x3868 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3868 "push"
                                    [|(Ojs.float_to_js x3865)|]);
                               ignore
                                 (Ojs.call x3868 "push"
                                    [|(Ojs.float_to_js x3866)|]);
                               (match x3867 with
                                | Some x3869 ->
                                    ignore
                                      (Ojs.call x3868 "push"
                                         [|(Ojs.float_to_js x3869)|])
                                | None -> ());
                               x3868))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x3879 : t) ->
        fun (x3872 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x3873 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3880 = t_to_js x3879 in
                 Ojs.call (Ojs.get_prop_ascii x3880 "every") "apply"
                   [|x3880;((let x3874 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3874 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3876 : Ojs.t) ->
                                          fun (x3877 : Ojs.t) ->
                                            fun (x3878 : Ojs.t) ->
                                              unknown_to_js
                                                (x3872
                                                   ~value:(Ojs.float_of_js
                                                             x3876)
                                                   ~index:(Ojs.float_of_js
                                                             x3877)
                                                   ~array:(t_of_js x3878))))|]);
                             (match x3873 with
                              | Some x3875 ->
                                  ignore
                                    (Ojs.call x3874 "push"
                                       [|(any_to_js x3875)|])
                              | None -> ());
                             x3874))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x3887 : t) ->
        fun ~value:(x3881 : float) ->
          fun ?start:(x3882 : float option) ->
            fun ?end_:(x3883 : float option) ->
              fun () ->
                t_of_js
                  (let x3888 = t_to_js x3887 in
                   Ojs.call (Ojs.get_prop_ascii x3888 "fill") "apply"
                     [|x3888;((let x3884 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3884 "push"
                                    [|(Ojs.float_to_js x3881)|]);
                               (match x3882 with
                                | Some x3886 ->
                                    ignore
                                      (Ojs.call x3884 "push"
                                         [|(Ojs.float_to_js x3886)|])
                                | None -> ());
                               (match x3883 with
                                | Some x3885 ->
                                    ignore
                                      (Ojs.call x3884 "push"
                                         [|(Ojs.float_to_js x3885)|])
                                | None -> ());
                               x3884))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3896 : t) ->
        fun (x3889 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x3890 : any option) ->
            fun () ->
              t_of_js
                (let x3897 = t_to_js x3896 in
                 Ojs.call (Ojs.get_prop_ascii x3897 "filter") "apply"
                   [|x3897;((let x3891 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3891 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3893 : Ojs.t) ->
                                          fun (x3894 : Ojs.t) ->
                                            fun (x3895 : Ojs.t) ->
                                              any_to_js
                                                (x3889
                                                   ~value:(Ojs.float_of_js
                                                             x3893)
                                                   ~index:(Ojs.float_of_js
                                                             x3894)
                                                   ~array:(t_of_js x3895))))|]);
                             (match x3890 with
                              | Some x3892 ->
                                  ignore
                                    (Ojs.call x3891 "push"
                                       [|(any_to_js x3892)|])
                              | None -> ());
                             x3891))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x3905 : t) ->
        fun (x3898 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3899 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x3906 = t_to_js x3905 in
                 Ojs.call (Ojs.get_prop_ascii x3906 "find") "apply"
                   [|x3906;((let x3900 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3900 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3902 : Ojs.t) ->
                                          fun (x3903 : Ojs.t) ->
                                            fun (x3904 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3898
                                                   ~value:(Ojs.float_of_js
                                                             x3902)
                                                   ~index:(Ojs.float_of_js
                                                             x3903)
                                                   ~obj:(t_of_js x3904))))|]);
                             (match x3899 with
                              | Some x3901 ->
                                  ignore
                                    (Ojs.call x3900 "push"
                                       [|(any_to_js x3901)|])
                              | None -> ());
                             x3900))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x3915 : t) ->
        fun (x3908 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x3909 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x3916 = t_to_js x3915 in
                 Ojs.call (Ojs.get_prop_ascii x3916 "findIndex") "apply"
                   [|x3916;((let x3910 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3910 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3912 : Ojs.t) ->
                                          fun (x3913 : Ojs.t) ->
                                            fun (x3914 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x3908
                                                   ~value:(Ojs.float_of_js
                                                             x3912)
                                                   ~index:(Ojs.float_of_js
                                                             x3913)
                                                   ~obj:(t_of_js x3914))))|]);
                             (match x3909 with
                              | Some x3911 ->
                                  ignore
                                    (Ojs.call x3910 "push"
                                       [|(any_to_js x3911)|])
                              | None -> ());
                             x3910))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3924 : t) ->
        fun
          ~callbackfn:(x3917 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x3918 : any option) ->
            fun () ->
              ignore
                (let x3925 = t_to_js x3924 in
                 Ojs.call (Ojs.get_prop_ascii x3925 "forEach") "apply"
                   [|x3925;((let x3919 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3919 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3921 : Ojs.t) ->
                                          fun (x3922 : Ojs.t) ->
                                            fun (x3923 : Ojs.t) ->
                                              x3917
                                                ~value:(Ojs.float_of_js x3921)
                                                ~index:(Ojs.float_of_js x3922)
                                                ~array:(t_of_js x3923)))|]);
                             (match x3918 with
                              | Some x3920 ->
                                  ignore
                                    (Ojs.call x3919 "push"
                                       [|(any_to_js x3920)|])
                              | None -> ());
                             x3919))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3930 : t) ->
        fun ~searchElement:(x3926 : float) ->
          fun ?fromIndex:(x3927 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3931 = t_to_js x3930 in
                 Ojs.call (Ojs.get_prop_ascii x3931 "indexOf") "apply"
                   [|x3931;((let x3928 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3928 "push"
                                  [|(Ojs.float_to_js x3926)|]);
                             (match x3927 with
                              | Some x3929 ->
                                  ignore
                                    (Ojs.call x3928 "push"
                                       [|(Ojs.float_to_js x3929)|])
                              | None -> ());
                             x3928))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x3935 : t) ->
        fun ?separator:(x3932 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3936 = t_to_js x3935 in
               Ojs.call (Ojs.get_prop_ascii x3936 "join") "apply"
                 [|x3936;((let x3933 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3932 with
                            | Some x3934 ->
                                ignore
                                  (Ojs.call x3933 "push"
                                     [|(Ojs.string_to_js x3934)|])
                            | None -> ());
                           x3933))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x3941 : t) ->
        fun ~searchElement:(x3937 : float) ->
          fun ?fromIndex:(x3938 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3942 = t_to_js x3941 in
                 Ojs.call (Ojs.get_prop_ascii x3942 "lastIndexOf") "apply"
                   [|x3942;((let x3939 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3939 "push"
                                  [|(Ojs.float_to_js x3937)|]);
                             (match x3938 with
                              | Some x3940 ->
                                  ignore
                                    (Ojs.call x3939 "push"
                                       [|(Ojs.float_to_js x3940)|])
                              | None -> ());
                             x3939))|])
    let (get_length : t -> float) =
      fun (x3943 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x3943) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x3951 : t) ->
        fun
          ~callbackfn:(x3944 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x3945 : any option) ->
            fun () ->
              t_of_js
                (let x3952 = t_to_js x3951 in
                 Ojs.call (Ojs.get_prop_ascii x3952 "map") "apply"
                   [|x3952;((let x3946 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3946 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3948 : Ojs.t) ->
                                          fun (x3949 : Ojs.t) ->
                                            fun (x3950 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x3944
                                                   ~value:(Ojs.float_of_js
                                                             x3948)
                                                   ~index:(Ojs.float_of_js
                                                             x3949)
                                                   ~array:(t_of_js x3950))))|]);
                             (match x3945 with
                              | Some x3947 ->
                                  ignore
                                    (Ojs.call x3946 "push"
                                       [|(any_to_js x3947)|])
                              | None -> ());
                             x3946))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3958 : t) ->
        fun
          ~callbackfn:(x3953 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3958) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x3954 : Ojs.t) ->
                       fun (x3955 : Ojs.t) ->
                         fun (x3956 : Ojs.t) ->
                           fun (x3957 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3953 ~previousValue:(Ojs.float_of_js x3954)
                                  ~currentValue:(Ojs.float_of_js x3955)
                                  ~currentIndex:(Ojs.float_of_js x3956)
                                  ~array:(t_of_js x3957))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3965 : t) ->
        fun
          ~callbackfn:(x3959 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3964 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3965) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3960 : Ojs.t) ->
                         fun (x3961 : Ojs.t) ->
                           fun (x3962 : Ojs.t) ->
                             fun (x3963 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3959
                                    ~previousValue:(Ojs.float_of_js x3960)
                                    ~currentValue:(Ojs.float_of_js x3961)
                                    ~currentIndex:(Ojs.float_of_js x3962)
                                    ~array:(t_of_js x3963))));(Ojs.float_to_js
                                                                 x3964)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3972 : t) ->
        fun
          ~callbackfn:(x3966 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3971 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3972) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x3967 : Ojs.t) ->
                         fun (x3968 : Ojs.t) ->
                           fun (x3969 : Ojs.t) ->
                             fun (x3970 : Ojs.t) ->
                               Obj.magic
                                 (x3966 ~previousValue:(Obj.magic x3967)
                                    ~currentValue:(Ojs.float_of_js x3968)
                                    ~currentIndex:(Ojs.float_of_js x3969)
                                    ~array:(t_of_js x3970))));(Obj.magic
                                                                 x3971)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x3978 : t) ->
        fun
          ~callbackfn:(x3973 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x3978) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x3974 : Ojs.t) ->
                       fun (x3975 : Ojs.t) ->
                         fun (x3976 : Ojs.t) ->
                           fun (x3977 : Ojs.t) ->
                             Ojs.float_to_js
                               (x3973 ~previousValue:(Ojs.float_of_js x3974)
                                  ~currentValue:(Ojs.float_of_js x3975)
                                  ~currentIndex:(Ojs.float_of_js x3976)
                                  ~array:(t_of_js x3977))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x3985 : t) ->
        fun
          ~callbackfn:(x3979 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x3984 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x3985) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3980 : Ojs.t) ->
                         fun (x3981 : Ojs.t) ->
                           fun (x3982 : Ojs.t) ->
                             fun (x3983 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x3979
                                    ~previousValue:(Ojs.float_of_js x3980)
                                    ~currentValue:(Ojs.float_of_js x3981)
                                    ~currentIndex:(Ojs.float_of_js x3982)
                                    ~array:(t_of_js x3983))));(Ojs.float_to_js
                                                                 x3984)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x3992 : t) ->
        fun
          ~callbackfn:(x3986 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x3991 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x3992) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x3987 : Ojs.t) ->
                         fun (x3988 : Ojs.t) ->
                           fun (x3989 : Ojs.t) ->
                             fun (x3990 : Ojs.t) ->
                               Obj.magic
                                 (x3986 ~previousValue:(Obj.magic x3987)
                                    ~currentValue:(Ojs.float_of_js x3988)
                                    ~currentIndex:(Ojs.float_of_js x3989)
                                    ~array:(t_of_js x3990))));(Obj.magic
                                                                 x3991)|])
    let (reverse : t -> t) =
      fun (x3993 : t) -> t_of_js (Ojs.call (t_to_js x3993) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x3999 : t) ->
        fun ~array:(x3994 : float _Array) ->
          fun ?offset:(x3995 : float option) ->
            fun () ->
              ignore
                (let x4000 = t_to_js x3999 in
                 Ojs.call (Ojs.get_prop_ascii x4000 "set") "apply"
                   [|x4000;((let x3996 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3996 "push"
                                  [|(_Array_to_js Ojs.float_to_js x3994)|]);
                             (match x3995 with
                              | Some x3997 ->
                                  ignore
                                    (Ojs.call x3996 "push"
                                       [|(Ojs.float_to_js x3997)|])
                              | None -> ());
                             x3996))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x4006 : t) ->
        fun ?start:(x4001 : float option) ->
          fun ?end_:(x4002 : float option) ->
            fun () ->
              t_of_js
                (let x4007 = t_to_js x4006 in
                 Ojs.call (Ojs.get_prop_ascii x4007 "slice") "apply"
                   [|x4007;((let x4003 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4001 with
                              | Some x4005 ->
                                  ignore
                                    (Ojs.call x4003 "push"
                                       [|(Ojs.float_to_js x4005)|])
                              | None -> ());
                             (match x4002 with
                              | Some x4004 ->
                                  ignore
                                    (Ojs.call x4003 "push"
                                       [|(Ojs.float_to_js x4004)|])
                              | None -> ());
                             x4003))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4015 : t) ->
        fun (x4008 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x4009 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4016 = t_to_js x4015 in
                 Ojs.call (Ojs.get_prop_ascii x4016 "some") "apply"
                   [|x4016;((let x4010 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4010 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4012 : Ojs.t) ->
                                          fun (x4013 : Ojs.t) ->
                                            fun (x4014 : Ojs.t) ->
                                              unknown_to_js
                                                (x4008
                                                   ~value:(Ojs.float_of_js
                                                             x4012)
                                                   ~index:(Ojs.float_of_js
                                                             x4013)
                                                   ~array:(t_of_js x4014))))|]);
                             (match x4009 with
                              | Some x4011 ->
                                  ignore
                                    (Ojs.call x4010 "push"
                                       [|(any_to_js x4011)|])
                              | None -> ());
                             x4010))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x4022 : t) ->
        fun ?compareFn:(x4017 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x4023 = t_to_js x4022 in
               Ojs.call (Ojs.get_prop_ascii x4023 "sort") "apply"
                 [|x4023;((let x4018 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4017 with
                            | Some x4019 ->
                                ignore
                                  (Ojs.call x4018 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x4020 : Ojs.t) ->
                                             fun (x4021 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x4019
                                                    ~a:(Ojs.float_of_js x4020)
                                                    ~b:(Ojs.float_of_js x4021))))|])
                            | None -> ());
                           x4018))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x4029 : t) ->
        fun ?begin_:(x4024 : float option) ->
          fun ?end_:(x4025 : float option) ->
            fun () ->
              t_of_js
                (let x4030 = t_to_js x4029 in
                 Ojs.call (Ojs.get_prop_ascii x4030 "subarray") "apply"
                   [|x4030;((let x4026 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4024 with
                              | Some x4028 ->
                                  ignore
                                    (Ojs.call x4026 "push"
                                       [|(Ojs.float_to_js x4028)|])
                              | None -> ());
                             (match x4025 with
                              | Some x4027 ->
                                  ignore
                                    (Ojs.call x4026 "push"
                                       [|(Ojs.float_to_js x4027)|])
                              | None -> ());
                             x4026))|])
    let (toLocaleString : t -> string) =
      fun (x4031 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4031) "toLocaleString" [||])
    let (toString : t -> string) =
      fun (x4032 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4032) "toString" [||])
    let (valueOf : t -> t) =
      fun (x4033 : t) -> t_of_js (Ojs.call (t_to_js x4033) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x4034 : t) ->
        fun (x4035 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x4034) (Ojs.float_to_js x4035))
    let (set : t -> float -> float -> unit) =
      fun (x4036 : t) ->
        fun (x4037 : float) ->
          fun (x4038 : float) ->
            Ojs.set_prop (t_to_js x4036) (Ojs.float_to_js x4037)
              (Ojs.float_to_js x4038)
    let (create : length:float -> _Float32Array) =
      fun ~length:(x4039 : float) ->
        _Float32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x4039)|])
    let (create' :
      array:(_ArrayBuffer, float _Array) union2 -> _Float32Array) =
      fun ~array:(x4040 : (_ArrayBuffer, float _Array) union2) ->
        _Float32Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x4042 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x4042) x4040)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Float32Array)
      =
      fun ~buffer:(x4044 : _ArrayBuffer) ->
        fun ?byteOffset:(x4045 : float option) ->
          fun ?length:(x4046 : float option) ->
            fun () ->
              _Float32Array_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x4047 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x4047 "push" [|(_ArrayBuffer_to_js x4044)|]);
                    (match x4045 with
                     | Some x4049 ->
                         ignore
                           (Ojs.call x4047 "push" [|(Ojs.float_to_js x4049)|])
                     | None -> ());
                    (match x4046 with
                     | Some x4048 ->
                         ignore
                           (Ojs.call x4047 "push" [|(Ojs.float_to_js x4048)|])
                     | None -> ());
                    x4047))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> _Float32Array) =
      fun (x4050 : float list) ->
        _Float32Array_of_js
          (let x4053 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x4053 "of") "apply"
             [|x4053;((let x4051 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4052 : float) ->
                            ignore
                              (Ojs.call x4051 "push"
                                 [|(Ojs.float_to_js x4052)|])) x4050;
                       x4051))|])
    let (from : array:float _Array -> _Float32Array) =
      fun ~array:(x4054 : float _Array) ->
        _Float32Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(_Array_to_js Ojs.float_to_js x4054)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Float32Array)
      =
      fun ~array:(x4056 : 'T _Array) ->
        fun ~mapfn:(x4057 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x4058 : any option) ->
            fun () ->
              _Float32Array_of_js
                (let x4064 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x4064 "from") "apply"
                   [|x4064;((let x4059 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4059 "push"
                                  [|(_Array_to_js Obj.magic x4056)|]);
                             ignore
                               (Ojs.call x4059 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x4061 : Ojs.t) ->
                                          fun (x4062 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x4057 ~v:(Obj.magic x4061)
                                                 ~k:(Ojs.float_of_js x4062))))|]);
                             (match x4058 with
                              | Some x4060 ->
                                  ignore
                                    (Ojs.call x4059 "push"
                                       [|(any_to_js x4060)|])
                              | None -> ());
                             x4059))|])
  end
module Float32ArrayConstructor =
  struct
    type t = _Float32ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x4066 : Ojs.t) -> _Float32ArrayConstructor_of_js x4066
    and t_to_js : t -> Ojs.t =
      fun (x4065 : _Float32ArrayConstructor) ->
        _Float32ArrayConstructor_to_js x4065
    let (get_prototype : t -> _Float32Array) =
      fun (x4067 : t) ->
        _Float32Array_of_js (Ojs.get_prop_ascii (t_to_js x4067) "prototype")
    let (create : t -> length:float -> _Float32Array) =
      fun (x4069 : t) ->
        fun ~length:(x4068 : float) ->
          _Float32Array_of_js
            (Ojs.new_obj (t_to_js x4069) [|(Ojs.float_to_js x4068)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Float32Array) =
      fun (x4074 : t) ->
        fun ~array:(x4070 : (_ArrayBuffer, float _Array) union2) ->
          _Float32Array_of_js
            (Ojs.new_obj (t_to_js x4074)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x4072 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x4072) x4070)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Float32Array)
      =
      fun (x4081 : t) ->
        fun ~buffer:(x4075 : _ArrayBuffer) ->
          fun ?byteOffset:(x4076 : float option) ->
            fun ?length:(x4077 : float option) ->
              fun () ->
                _Float32Array_of_js
                  (Ojs.new_obj_arr (t_to_js x4081)
                     (let x4078 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x4078 "push" [|(_ArrayBuffer_to_js x4075)|]);
                      (match x4076 with
                       | Some x4080 ->
                           ignore
                             (Ojs.call x4078 "push"
                                [|(Ojs.float_to_js x4080)|])
                       | None -> ());
                      (match x4077 with
                       | Some x4079 ->
                           ignore
                             (Ojs.call x4078 "push"
                                [|(Ojs.float_to_js x4079)|])
                       | None -> ());
                      x4078))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x4082 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x4082) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> _Float32Array) =
      fun (x4086 : t) ->
        fun (x4083 : float list) ->
          _Float32Array_of_js
            (let x4087 = t_to_js x4086 in
             Ojs.call (Ojs.get_prop_ascii x4087 "of") "apply"
               [|x4087;((let x4084 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4085 : float) ->
                              ignore
                                (Ojs.call x4084 "push"
                                   [|(Ojs.float_to_js x4085)|])) x4083;
                         x4084))|])
    let (from : t -> array:float _Array -> _Float32Array) =
      fun (x4090 : t) ->
        fun ~array:(x4088 : float _Array) ->
          _Float32Array_of_js
            (Ojs.call (t_to_js x4090) "from"
               [|(_Array_to_js Ojs.float_to_js x4088)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Float32Array)
      =
      fun (x4099 : t) ->
        fun ~array:(x4091 : 'T _Array) ->
          fun ~mapfn:(x4092 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x4093 : any option) ->
              fun () ->
                _Float32Array_of_js
                  (let x4100 = t_to_js x4099 in
                   Ojs.call (Ojs.get_prop_ascii x4100 "from") "apply"
                     [|x4100;((let x4094 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4094 "push"
                                    [|(_Array_to_js Obj.magic x4091)|]);
                               ignore
                                 (Ojs.call x4094 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4096 : Ojs.t) ->
                                            fun (x4097 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4092 ~v:(Obj.magic x4096)
                                                   ~k:(Ojs.float_of_js x4097))))|]);
                               (match x4093 with
                                | Some x4095 ->
                                    ignore
                                      (Ojs.call x4094 "push"
                                         [|(any_to_js x4095)|])
                                | None -> ());
                               x4094))|])
  end
let (float32Array : _Float32ArrayConstructor) =
  _Float32ArrayConstructor_of_js
    (Ojs.get_prop_ascii Ojs.global "Float32Array")
module Float64Array =
  struct
    type t = _Float64Array
    let rec t_of_js : Ojs.t -> t =
      fun (x4102 : Ojs.t) -> _Float64Array_of_js x4102
    and t_to_js : t -> Ojs.t =
      fun (x4101 : _Float64Array) -> _Float64Array_to_js x4101
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x4103 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x4103) "BYTES_PER_ELEMENT")
    let (get_buffer : t -> _ArrayBuffer) =
      fun (x4104 : t) ->
        _ArrayBuffer_of_js (Ojs.get_prop_ascii (t_to_js x4104) "buffer")
    let (get_byteLength : t -> float) =
      fun (x4105 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4105) "byteLength")
    let (get_byteOffset : t -> float) =
      fun (x4106 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4106) "byteOffset")
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x4112 : t) ->
        fun ~target:(x4107 : float) ->
          fun ~start:(x4108 : float) ->
            fun ?end_:(x4109 : float option) ->
              fun () ->
                t_of_js
                  (let x4113 = t_to_js x4112 in
                   Ojs.call (Ojs.get_prop_ascii x4113 "copyWithin") "apply"
                     [|x4113;((let x4110 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4110 "push"
                                    [|(Ojs.float_to_js x4107)|]);
                               ignore
                                 (Ojs.call x4110 "push"
                                    [|(Ojs.float_to_js x4108)|]);
                               (match x4109 with
                                | Some x4111 ->
                                    ignore
                                      (Ojs.call x4110 "push"
                                         [|(Ojs.float_to_js x4111)|])
                                | None -> ());
                               x4110))|])
    let (every :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4121 : t) ->
        fun (x4114 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x4115 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4122 = t_to_js x4121 in
                 Ojs.call (Ojs.get_prop_ascii x4122 "every") "apply"
                   [|x4122;((let x4116 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4116 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4118 : Ojs.t) ->
                                          fun (x4119 : Ojs.t) ->
                                            fun (x4120 : Ojs.t) ->
                                              unknown_to_js
                                                (x4114
                                                   ~value:(Ojs.float_of_js
                                                             x4118)
                                                   ~index:(Ojs.float_of_js
                                                             x4119)
                                                   ~array:(t_of_js x4120))))|]);
                             (match x4115 with
                              | Some x4117 ->
                                  ignore
                                    (Ojs.call x4116 "push"
                                       [|(any_to_js x4117)|])
                              | None -> ());
                             x4116))|])
    let (fill : t -> value:float -> ?start:float -> ?end_:float -> unit -> t)
      =
      fun (x4129 : t) ->
        fun ~value:(x4123 : float) ->
          fun ?start:(x4124 : float option) ->
            fun ?end_:(x4125 : float option) ->
              fun () ->
                t_of_js
                  (let x4130 = t_to_js x4129 in
                   Ojs.call (Ojs.get_prop_ascii x4130 "fill") "apply"
                     [|x4130;((let x4126 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4126 "push"
                                    [|(Ojs.float_to_js x4123)|]);
                               (match x4124 with
                                | Some x4128 ->
                                    ignore
                                      (Ojs.call x4126 "push"
                                         [|(Ojs.float_to_js x4128)|])
                                | None -> ());
                               (match x4125 with
                                | Some x4127 ->
                                    ignore
                                      (Ojs.call x4126 "push"
                                         [|(Ojs.float_to_js x4127)|])
                                | None -> ());
                               x4126))|])
    let (filter :
      t ->
        (value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4138 : t) ->
        fun (x4131 : value:float -> index:float -> array:t -> any) ->
          fun ?thisArg:(x4132 : any option) ->
            fun () ->
              t_of_js
                (let x4139 = t_to_js x4138 in
                 Ojs.call (Ojs.get_prop_ascii x4139 "filter") "apply"
                   [|x4139;((let x4133 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4133 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4135 : Ojs.t) ->
                                          fun (x4136 : Ojs.t) ->
                                            fun (x4137 : Ojs.t) ->
                                              any_to_js
                                                (x4131
                                                   ~value:(Ojs.float_of_js
                                                             x4135)
                                                   ~index:(Ojs.float_of_js
                                                             x4136)
                                                   ~array:(t_of_js x4137))))|]);
                             (match x4132 with
                              | Some x4134 ->
                                  ignore
                                    (Ojs.call x4133 "push"
                                       [|(any_to_js x4134)|])
                              | None -> ());
                             x4133))|])
    let (find :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x4147 : t) ->
        fun (x4140 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x4141 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x4148 = t_to_js x4147 in
                 Ojs.call (Ojs.get_prop_ascii x4148 "find") "apply"
                   [|x4148;((let x4142 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4142 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4144 : Ojs.t) ->
                                          fun (x4145 : Ojs.t) ->
                                            fun (x4146 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4140
                                                   ~value:(Ojs.float_of_js
                                                             x4144)
                                                   ~index:(Ojs.float_of_js
                                                             x4145)
                                                   ~obj:(t_of_js x4146))))|]);
                             (match x4141 with
                              | Some x4143 ->
                                  ignore
                                    (Ojs.call x4142 "push"
                                       [|(any_to_js x4143)|])
                              | None -> ());
                             x4142))|])
    let (findIndex :
      t ->
        (value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x4157 : t) ->
        fun (x4150 : value:float -> index:float -> obj:t -> bool) ->
          fun ?thisArg:(x4151 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x4158 = t_to_js x4157 in
                 Ojs.call (Ojs.get_prop_ascii x4158 "findIndex") "apply"
                   [|x4158;((let x4152 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4152 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4154 : Ojs.t) ->
                                          fun (x4155 : Ojs.t) ->
                                            fun (x4156 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4150
                                                   ~value:(Ojs.float_of_js
                                                             x4154)
                                                   ~index:(Ojs.float_of_js
                                                             x4155)
                                                   ~obj:(t_of_js x4156))))|]);
                             (match x4151 with
                              | Some x4153 ->
                                  ignore
                                    (Ojs.call x4152 "push"
                                       [|(any_to_js x4153)|])
                              | None -> ());
                             x4152))|])
    let (forEach :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4166 : t) ->
        fun
          ~callbackfn:(x4159 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x4160 : any option) ->
            fun () ->
              ignore
                (let x4167 = t_to_js x4166 in
                 Ojs.call (Ojs.get_prop_ascii x4167 "forEach") "apply"
                   [|x4167;((let x4161 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4161 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4163 : Ojs.t) ->
                                          fun (x4164 : Ojs.t) ->
                                            fun (x4165 : Ojs.t) ->
                                              x4159
                                                ~value:(Ojs.float_of_js x4163)
                                                ~index:(Ojs.float_of_js x4164)
                                                ~array:(t_of_js x4165)))|]);
                             (match x4160 with
                              | Some x4162 ->
                                  ignore
                                    (Ojs.call x4161 "push"
                                       [|(any_to_js x4162)|])
                              | None -> ());
                             x4161))|])
    let (indexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x4172 : t) ->
        fun ~searchElement:(x4168 : float) ->
          fun ?fromIndex:(x4169 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4173 = t_to_js x4172 in
                 Ojs.call (Ojs.get_prop_ascii x4173 "indexOf") "apply"
                   [|x4173;((let x4170 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4170 "push"
                                  [|(Ojs.float_to_js x4168)|]);
                             (match x4169 with
                              | Some x4171 ->
                                  ignore
                                    (Ojs.call x4170 "push"
                                       [|(Ojs.float_to_js x4171)|])
                              | None -> ());
                             x4170))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x4177 : t) ->
        fun ?separator:(x4174 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x4178 = t_to_js x4177 in
               Ojs.call (Ojs.get_prop_ascii x4178 "join") "apply"
                 [|x4178;((let x4175 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4174 with
                            | Some x4176 ->
                                ignore
                                  (Ojs.call x4175 "push"
                                     [|(Ojs.string_to_js x4176)|])
                            | None -> ());
                           x4175))|])
    let (lastIndexOf :
      t -> searchElement:float -> ?fromIndex:float -> unit -> float) =
      fun (x4183 : t) ->
        fun ~searchElement:(x4179 : float) ->
          fun ?fromIndex:(x4180 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4184 = t_to_js x4183 in
                 Ojs.call (Ojs.get_prop_ascii x4184 "lastIndexOf") "apply"
                   [|x4184;((let x4181 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4181 "push"
                                  [|(Ojs.float_to_js x4179)|]);
                             (match x4180 with
                              | Some x4182 ->
                                  ignore
                                    (Ojs.call x4181 "push"
                                       [|(Ojs.float_to_js x4182)|])
                              | None -> ());
                             x4181))|])
    let (get_length : t -> float) =
      fun (x4185 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x4185) "length")
    let (map :
      t ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4193 : t) ->
        fun
          ~callbackfn:(x4186 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x4187 : any option) ->
            fun () ->
              t_of_js
                (let x4194 = t_to_js x4193 in
                 Ojs.call (Ojs.get_prop_ascii x4194 "map") "apply"
                   [|x4194;((let x4188 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4188 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4190 : Ojs.t) ->
                                          fun (x4191 : Ojs.t) ->
                                            fun (x4192 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4186
                                                   ~value:(Ojs.float_of_js
                                                             x4190)
                                                   ~index:(Ojs.float_of_js
                                                             x4191)
                                                   ~array:(t_of_js x4192))))|]);
                             (match x4187 with
                              | Some x4189 ->
                                  ignore
                                    (Ojs.call x4188 "push"
                                       [|(any_to_js x4189)|])
                              | None -> ());
                             x4188))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4200 : t) ->
        fun
          ~callbackfn:(x4195 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x4200) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x4196 : Ojs.t) ->
                       fun (x4197 : Ojs.t) ->
                         fun (x4198 : Ojs.t) ->
                           fun (x4199 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4195 ~previousValue:(Ojs.float_of_js x4196)
                                  ~currentValue:(Ojs.float_of_js x4197)
                                  ~currentIndex:(Ojs.float_of_js x4198)
                                  ~array:(t_of_js x4199))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4207 : t) ->
        fun
          ~callbackfn:(x4201 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4206 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x4207) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4202 : Ojs.t) ->
                         fun (x4203 : Ojs.t) ->
                           fun (x4204 : Ojs.t) ->
                             fun (x4205 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4201
                                    ~previousValue:(Ojs.float_of_js x4202)
                                    ~currentValue:(Ojs.float_of_js x4203)
                                    ~currentIndex:(Ojs.float_of_js x4204)
                                    ~array:(t_of_js x4205))));(Ojs.float_to_js
                                                                 x4206)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4214 : t) ->
        fun
          ~callbackfn:(x4208 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4213 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x4214) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4209 : Ojs.t) ->
                         fun (x4210 : Ojs.t) ->
                           fun (x4211 : Ojs.t) ->
                             fun (x4212 : Ojs.t) ->
                               Obj.magic
                                 (x4208 ~previousValue:(Obj.magic x4209)
                                    ~currentValue:(Ojs.float_of_js x4210)
                                    ~currentIndex:(Ojs.float_of_js x4211)
                                    ~array:(t_of_js x4212))));(Obj.magic
                                                                 x4213)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4220 : t) ->
        fun
          ~callbackfn:(x4215 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (t_to_js x4220) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x4216 : Ojs.t) ->
                       fun (x4217 : Ojs.t) ->
                         fun (x4218 : Ojs.t) ->
                           fun (x4219 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4215 ~previousValue:(Ojs.float_of_js x4216)
                                  ~currentValue:(Ojs.float_of_js x4217)
                                  ~currentIndex:(Ojs.float_of_js x4218)
                                  ~array:(t_of_js x4219))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4227 : t) ->
        fun
          ~callbackfn:(x4221 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4226 : float) ->
            Ojs.float_of_js
              (Ojs.call (t_to_js x4227) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4222 : Ojs.t) ->
                         fun (x4223 : Ojs.t) ->
                           fun (x4224 : Ojs.t) ->
                             fun (x4225 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4221
                                    ~previousValue:(Ojs.float_of_js x4222)
                                    ~currentValue:(Ojs.float_of_js x4223)
                                    ~currentIndex:(Ojs.float_of_js x4224)
                                    ~array:(t_of_js x4225))));(Ojs.float_to_js
                                                                 x4226)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4234 : t) ->
        fun
          ~callbackfn:(x4228 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4233 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x4234) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4229 : Ojs.t) ->
                         fun (x4230 : Ojs.t) ->
                           fun (x4231 : Ojs.t) ->
                             fun (x4232 : Ojs.t) ->
                               Obj.magic
                                 (x4228 ~previousValue:(Obj.magic x4229)
                                    ~currentValue:(Ojs.float_of_js x4230)
                                    ~currentIndex:(Ojs.float_of_js x4231)
                                    ~array:(t_of_js x4232))));(Obj.magic
                                                                 x4233)|])
    let (reverse : t -> t) =
      fun (x4235 : t) -> t_of_js (Ojs.call (t_to_js x4235) "reverse" [||])
    let (set_ : t -> array:float _Array -> ?offset:float -> unit -> unit) =
      fun (x4241 : t) ->
        fun ~array:(x4236 : float _Array) ->
          fun ?offset:(x4237 : float option) ->
            fun () ->
              ignore
                (let x4242 = t_to_js x4241 in
                 Ojs.call (Ojs.get_prop_ascii x4242 "set") "apply"
                   [|x4242;((let x4238 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4238 "push"
                                  [|(_Array_to_js Ojs.float_to_js x4236)|]);
                             (match x4237 with
                              | Some x4239 ->
                                  ignore
                                    (Ojs.call x4238 "push"
                                       [|(Ojs.float_to_js x4239)|])
                              | None -> ());
                             x4238))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x4248 : t) ->
        fun ?start:(x4243 : float option) ->
          fun ?end_:(x4244 : float option) ->
            fun () ->
              t_of_js
                (let x4249 = t_to_js x4248 in
                 Ojs.call (Ojs.get_prop_ascii x4249 "slice") "apply"
                   [|x4249;((let x4245 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4243 with
                              | Some x4247 ->
                                  ignore
                                    (Ojs.call x4245 "push"
                                       [|(Ojs.float_to_js x4247)|])
                              | None -> ());
                             (match x4244 with
                              | Some x4246 ->
                                  ignore
                                    (Ojs.call x4245 "push"
                                       [|(Ojs.float_to_js x4246)|])
                              | None -> ());
                             x4245))|])
    let (some :
      t ->
        (value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4257 : t) ->
        fun (x4250 : value:float -> index:float -> array:t -> unknown) ->
          fun ?thisArg:(x4251 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4258 = t_to_js x4257 in
                 Ojs.call (Ojs.get_prop_ascii x4258 "some") "apply"
                   [|x4258;((let x4252 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4252 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4254 : Ojs.t) ->
                                          fun (x4255 : Ojs.t) ->
                                            fun (x4256 : Ojs.t) ->
                                              unknown_to_js
                                                (x4250
                                                   ~value:(Ojs.float_of_js
                                                             x4254)
                                                   ~index:(Ojs.float_of_js
                                                             x4255)
                                                   ~array:(t_of_js x4256))))|]);
                             (match x4251 with
                              | Some x4253 ->
                                  ignore
                                    (Ojs.call x4252 "push"
                                       [|(any_to_js x4253)|])
                              | None -> ());
                             x4252))|])
    let (sort : t -> ?compareFn:(a:float -> b:float -> float) -> unit -> t) =
      fun (x4264 : t) ->
        fun ?compareFn:(x4259 : (a:float -> b:float -> float) option) ->
          fun () ->
            t_of_js
              (let x4265 = t_to_js x4264 in
               Ojs.call (Ojs.get_prop_ascii x4265 "sort") "apply"
                 [|x4265;((let x4260 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4259 with
                            | Some x4261 ->
                                ignore
                                  (Ojs.call x4260 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x4262 : Ojs.t) ->
                                             fun (x4263 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x4261
                                                    ~a:(Ojs.float_of_js x4262)
                                                    ~b:(Ojs.float_of_js x4263))))|])
                            | None -> ());
                           x4260))|])
    let (subarray : t -> ?begin_:float -> ?end_:float -> unit -> t) =
      fun (x4271 : t) ->
        fun ?begin_:(x4266 : float option) ->
          fun ?end_:(x4267 : float option) ->
            fun () ->
              t_of_js
                (let x4272 = t_to_js x4271 in
                 Ojs.call (Ojs.get_prop_ascii x4272 "subarray") "apply"
                   [|x4272;((let x4268 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4266 with
                              | Some x4270 ->
                                  ignore
                                    (Ojs.call x4268 "push"
                                       [|(Ojs.float_to_js x4270)|])
                              | None -> ());
                             (match x4267 with
                              | Some x4269 ->
                                  ignore
                                    (Ojs.call x4268 "push"
                                       [|(Ojs.float_to_js x4269)|])
                              | None -> ());
                             x4268))|])
    let (toString : t -> string) =
      fun (x4273 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x4273) "toString" [||])
    let (valueOf : t -> t) =
      fun (x4274 : t) -> t_of_js (Ojs.call (t_to_js x4274) "valueOf" [||])
    let (get : t -> float -> float) =
      fun (x4275 : t) ->
        fun (x4276 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (t_to_js x4275) (Ojs.float_to_js x4276))
    let (set : t -> float -> float -> unit) =
      fun (x4277 : t) ->
        fun (x4278 : float) ->
          fun (x4279 : float) ->
            Ojs.set_prop (t_to_js x4277) (Ojs.float_to_js x4278)
              (Ojs.float_to_js x4279)
    let (create : length:float -> _Float64Array) =
      fun ~length:(x4280 : float) ->
        _Float64Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x4280)|])
    let (create' :
      array:(_ArrayBuffer, float _Array) union2 -> _Float64Array) =
      fun ~array:(x4281 : (_ArrayBuffer, float _Array) union2) ->
        _Float64Array_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(union2_to_js _ArrayBuffer_to_js
                  (fun (x4283 : float _Array) ->
                     _Array_to_js Ojs.float_to_js x4283) x4281)|])
    let (create'' :
      buffer:_ArrayBuffer ->
        ?byteOffset:float -> ?length:float -> unit -> _Float64Array)
      =
      fun ~buffer:(x4285 : _ArrayBuffer) ->
        fun ?byteOffset:(x4286 : float option) ->
          fun ?length:(x4287 : float option) ->
            fun () ->
              _Float64Array_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x4288 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x4288 "push" [|(_ArrayBuffer_to_js x4285)|]);
                    (match x4286 with
                     | Some x4290 ->
                         ignore
                           (Ojs.call x4288 "push" [|(Ojs.float_to_js x4290)|])
                     | None -> ());
                    (match x4287 with
                     | Some x4289 ->
                         ignore
                           (Ojs.call x4288 "push" [|(Ojs.float_to_js x4289)|])
                     | None -> ());
                    x4288))
    let (get_BYTES_PER_ELEMENT : float) =
      Ojs.float_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
           "BYTES_PER_ELEMENT")
    let (of_ : float list -> _Float64Array) =
      fun (x4291 : float list) ->
        _Float64Array_of_js
          (let x4294 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x4294 "of") "apply"
             [|x4294;((let x4292 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4293 : float) ->
                            ignore
                              (Ojs.call x4292 "push"
                                 [|(Ojs.float_to_js x4293)|])) x4291;
                       x4292))|])
    let (from : array:float _Array -> _Float64Array) =
      fun ~array:(x4295 : float _Array) ->
        _Float64Array_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(_Array_to_js Ojs.float_to_js x4295)|])
    let (from' :
      array:'T _Array ->
        mapfn:(v:'T -> k:float -> float) ->
          ?thisArg:any -> unit -> _Float64Array)
      =
      fun ~array:(x4297 : 'T _Array) ->
        fun ~mapfn:(x4298 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x4299 : any option) ->
            fun () ->
              _Float64Array_of_js
                (let x4305 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x4305 "from") "apply"
                   [|x4305;((let x4300 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4300 "push"
                                  [|(_Array_to_js Obj.magic x4297)|]);
                             ignore
                               (Ojs.call x4300 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x4302 : Ojs.t) ->
                                          fun (x4303 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x4298 ~v:(Obj.magic x4302)
                                                 ~k:(Ojs.float_of_js x4303))))|]);
                             (match x4299 with
                              | Some x4301 ->
                                  ignore
                                    (Ojs.call x4300 "push"
                                       [|(any_to_js x4301)|])
                              | None -> ());
                             x4300))|])
  end
module Float64ArrayConstructor =
  struct
    type t = _Float64ArrayConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x4307 : Ojs.t) -> _Float64ArrayConstructor_of_js x4307
    and t_to_js : t -> Ojs.t =
      fun (x4306 : _Float64ArrayConstructor) ->
        _Float64ArrayConstructor_to_js x4306
    let (get_prototype : t -> _Float64Array) =
      fun (x4308 : t) ->
        _Float64Array_of_js (Ojs.get_prop_ascii (t_to_js x4308) "prototype")
    let (create : t -> length:float -> _Float64Array) =
      fun (x4310 : t) ->
        fun ~length:(x4309 : float) ->
          _Float64Array_of_js
            (Ojs.new_obj (t_to_js x4310) [|(Ojs.float_to_js x4309)|])
    let (create' :
      t -> array:(_ArrayBuffer, float _Array) union2 -> _Float64Array) =
      fun (x4315 : t) ->
        fun ~array:(x4311 : (_ArrayBuffer, float _Array) union2) ->
          _Float64Array_of_js
            (Ojs.new_obj (t_to_js x4315)
               [|(union2_to_js _ArrayBuffer_to_js
                    (fun (x4313 : float _Array) ->
                       _Array_to_js Ojs.float_to_js x4313) x4311)|])
    let (create'' :
      t ->
        buffer:_ArrayBuffer ->
          ?byteOffset:float -> ?length:float -> unit -> _Float64Array)
      =
      fun (x4322 : t) ->
        fun ~buffer:(x4316 : _ArrayBuffer) ->
          fun ?byteOffset:(x4317 : float option) ->
            fun ?length:(x4318 : float option) ->
              fun () ->
                _Float64Array_of_js
                  (Ojs.new_obj_arr (t_to_js x4322)
                     (let x4319 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x4319 "push" [|(_ArrayBuffer_to_js x4316)|]);
                      (match x4317 with
                       | Some x4321 ->
                           ignore
                             (Ojs.call x4319 "push"
                                [|(Ojs.float_to_js x4321)|])
                       | None -> ());
                      (match x4318 with
                       | Some x4320 ->
                           ignore
                             (Ojs.call x4319 "push"
                                [|(Ojs.float_to_js x4320)|])
                       | None -> ());
                      x4319))
    let (get_BYTES_PER_ELEMENT : t -> float) =
      fun (x4323 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x4323) "BYTES_PER_ELEMENT")
    let (of_ : t -> float list -> _Float64Array) =
      fun (x4327 : t) ->
        fun (x4324 : float list) ->
          _Float64Array_of_js
            (let x4328 = t_to_js x4327 in
             Ojs.call (Ojs.get_prop_ascii x4328 "of") "apply"
               [|x4328;((let x4325 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4326 : float) ->
                              ignore
                                (Ojs.call x4325 "push"
                                   [|(Ojs.float_to_js x4326)|])) x4324;
                         x4325))|])
    let (from : t -> array:float _Array -> _Float64Array) =
      fun (x4331 : t) ->
        fun ~array:(x4329 : float _Array) ->
          _Float64Array_of_js
            (Ojs.call (t_to_js x4331) "from"
               [|(_Array_to_js Ojs.float_to_js x4329)|])
    let (from' :
      t ->
        array:'T _Array ->
          mapfn:(v:'T -> k:float -> float) ->
            ?thisArg:any -> unit -> _Float64Array)
      =
      fun (x4340 : t) ->
        fun ~array:(x4332 : 'T _Array) ->
          fun ~mapfn:(x4333 : v:'T -> k:float -> float) ->
            fun ?thisArg:(x4334 : any option) ->
              fun () ->
                _Float64Array_of_js
                  (let x4341 = t_to_js x4340 in
                   Ojs.call (Ojs.get_prop_ascii x4341 "from") "apply"
                     [|x4341;((let x4335 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4335 "push"
                                    [|(_Array_to_js Obj.magic x4332)|]);
                               ignore
                                 (Ojs.call x4335 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4337 : Ojs.t) ->
                                            fun (x4338 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4333 ~v:(Obj.magic x4337)
                                                   ~k:(Ojs.float_of_js x4338))))|]);
                               (match x4334 with
                                | Some x4336 ->
                                    ignore
                                      (Ojs.call x4335 "push"
                                         [|(any_to_js x4336)|])
                                | None -> ());
                               x4335))|])
  end
let (float64Array : _Float64ArrayConstructor) =
  _Float64ArrayConstructor_of_js
    (Ojs.get_prop_ascii Ojs.global "Float64Array")
module Intl =
  struct
    module CollatorOptions =
      struct
        type t = _Intl_CollatorOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4343 : Ojs.t) -> _Intl_CollatorOptions_of_js x4343
        and t_to_js : t -> Ojs.t =
          fun (x4342 : _Intl_CollatorOptions) ->
            _Intl_CollatorOptions_to_js x4342
        let (get_usage : t -> string) =
          fun (x4344 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4344) "usage")
        let (set_usage : t -> string -> unit) =
          fun (x4345 : t) ->
            fun (x4346 : string) ->
              Ojs.set_prop_ascii (t_to_js x4345) "usage"
                (Ojs.string_to_js x4346)
        let (get_localeMatcher : t -> string) =
          fun (x4347 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4347) "localeMatcher")
        let (set_localeMatcher : t -> string -> unit) =
          fun (x4348 : t) ->
            fun (x4349 : string) ->
              Ojs.set_prop_ascii (t_to_js x4348) "localeMatcher"
                (Ojs.string_to_js x4349)
        let (get_numeric : t -> bool) =
          fun (x4350 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4350) "numeric")
        let (set_numeric : t -> bool -> unit) =
          fun (x4351 : t) ->
            fun (x4352 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4351) "numeric"
                (Ojs.bool_to_js x4352)
        let (get_caseFirst : t -> string) =
          fun (x4353 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4353) "caseFirst")
        let (set_caseFirst : t -> string -> unit) =
          fun (x4354 : t) ->
            fun (x4355 : string) ->
              Ojs.set_prop_ascii (t_to_js x4354) "caseFirst"
                (Ojs.string_to_js x4355)
        let (get_sensitivity : t -> string) =
          fun (x4356 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4356) "sensitivity")
        let (set_sensitivity : t -> string -> unit) =
          fun (x4357 : t) ->
            fun (x4358 : string) ->
              Ojs.set_prop_ascii (t_to_js x4357) "sensitivity"
                (Ojs.string_to_js x4358)
        let (get_ignorePunctuation : t -> bool) =
          fun (x4359 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x4359) "ignorePunctuation")
        let (set_ignorePunctuation : t -> bool -> unit) =
          fun (x4360 : t) ->
            fun (x4361 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4360) "ignorePunctuation"
                (Ojs.bool_to_js x4361)
      end
    module ResolvedCollatorOptions =
      struct
        type t = _Intl_ResolvedCollatorOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4363 : Ojs.t) -> _Intl_ResolvedCollatorOptions_of_js x4363
        and t_to_js : t -> Ojs.t =
          fun (x4362 : _Intl_ResolvedCollatorOptions) ->
            _Intl_ResolvedCollatorOptions_to_js x4362
        let (get_locale : t -> string) =
          fun (x4364 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4364) "locale")
        let (set_locale : t -> string -> unit) =
          fun (x4365 : t) ->
            fun (x4366 : string) ->
              Ojs.set_prop_ascii (t_to_js x4365) "locale"
                (Ojs.string_to_js x4366)
        let (get_usage : t -> string) =
          fun (x4367 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4367) "usage")
        let (set_usage : t -> string -> unit) =
          fun (x4368 : t) ->
            fun (x4369 : string) ->
              Ojs.set_prop_ascii (t_to_js x4368) "usage"
                (Ojs.string_to_js x4369)
        let (get_sensitivity : t -> string) =
          fun (x4370 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4370) "sensitivity")
        let (set_sensitivity : t -> string -> unit) =
          fun (x4371 : t) ->
            fun (x4372 : string) ->
              Ojs.set_prop_ascii (t_to_js x4371) "sensitivity"
                (Ojs.string_to_js x4372)
        let (get_ignorePunctuation : t -> bool) =
          fun (x4373 : t) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (t_to_js x4373) "ignorePunctuation")
        let (set_ignorePunctuation : t -> bool -> unit) =
          fun (x4374 : t) ->
            fun (x4375 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4374) "ignorePunctuation"
                (Ojs.bool_to_js x4375)
        let (get_collation : t -> string) =
          fun (x4376 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4376) "collation")
        let (set_collation : t -> string -> unit) =
          fun (x4377 : t) ->
            fun (x4378 : string) ->
              Ojs.set_prop_ascii (t_to_js x4377) "collation"
                (Ojs.string_to_js x4378)
        let (get_caseFirst : t -> string) =
          fun (x4379 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4379) "caseFirst")
        let (set_caseFirst : t -> string -> unit) =
          fun (x4380 : t) ->
            fun (x4381 : string) ->
              Ojs.set_prop_ascii (t_to_js x4380) "caseFirst"
                (Ojs.string_to_js x4381)
        let (get_numeric : t -> bool) =
          fun (x4382 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4382) "numeric")
        let (set_numeric : t -> bool -> unit) =
          fun (x4383 : t) ->
            fun (x4384 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4383) "numeric"
                (Ojs.bool_to_js x4384)
      end
    module Collator =
      struct
        type t = _Intl_Collator
        let rec t_of_js : Ojs.t -> t =
          fun (x4386 : Ojs.t) -> _Intl_Collator_of_js x4386
        and t_to_js : t -> Ojs.t =
          fun (x4385 : _Intl_Collator) -> _Intl_Collator_to_js x4385
        let (compare : t -> x:string -> y:string -> float) =
          fun (x4389 : t) ->
            fun ~x:(x4387 : string) ->
              fun ~y:(x4388 : string) ->
                Ojs.float_of_js
                  (Ojs.call (t_to_js x4389) "compare"
                     [|(Ojs.string_to_js x4387);(Ojs.string_to_js x4388)|])
        let (resolvedOptions : t -> _Intl_ResolvedCollatorOptions) =
          fun (x4390 : t) ->
            _Intl_ResolvedCollatorOptions_of_js
              (Ojs.call (t_to_js x4390) "resolvedOptions" [||])
      end
    let (collator : anonymous_interface_2) =
      anonymous_interface_2_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
    module NumberFormatOptions =
      struct
        type t = _Intl_NumberFormatOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4392 : Ojs.t) -> _Intl_NumberFormatOptions_of_js x4392
        and t_to_js : t -> Ojs.t =
          fun (x4391 : _Intl_NumberFormatOptions) ->
            _Intl_NumberFormatOptions_to_js x4391
        let (get_localeMatcher : t -> string) =
          fun (x4393 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4393) "localeMatcher")
        let (set_localeMatcher : t -> string -> unit) =
          fun (x4394 : t) ->
            fun (x4395 : string) ->
              Ojs.set_prop_ascii (t_to_js x4394) "localeMatcher"
                (Ojs.string_to_js x4395)
        let (get_style : t -> string) =
          fun (x4396 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4396) "style")
        let (set_style : t -> string -> unit) =
          fun (x4397 : t) ->
            fun (x4398 : string) ->
              Ojs.set_prop_ascii (t_to_js x4397) "style"
                (Ojs.string_to_js x4398)
        let (get_currency : t -> string) =
          fun (x4399 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4399) "currency")
        let (set_currency : t -> string -> unit) =
          fun (x4400 : t) ->
            fun (x4401 : string) ->
              Ojs.set_prop_ascii (t_to_js x4400) "currency"
                (Ojs.string_to_js x4401)
        let (get_currencyDisplay : t -> string) =
          fun (x4402 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4402) "currencyDisplay")
        let (set_currencyDisplay : t -> string -> unit) =
          fun (x4403 : t) ->
            fun (x4404 : string) ->
              Ojs.set_prop_ascii (t_to_js x4403) "currencyDisplay"
                (Ojs.string_to_js x4404)
        let (get_currencySign : t -> string) =
          fun (x4405 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4405) "currencySign")
        let (set_currencySign : t -> string -> unit) =
          fun (x4406 : t) ->
            fun (x4407 : string) ->
              Ojs.set_prop_ascii (t_to_js x4406) "currencySign"
                (Ojs.string_to_js x4407)
        let (get_useGrouping : t -> bool) =
          fun (x4408 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4408) "useGrouping")
        let (set_useGrouping : t -> bool -> unit) =
          fun (x4409 : t) ->
            fun (x4410 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4409) "useGrouping"
                (Ojs.bool_to_js x4410)
        let (get_minimumIntegerDigits : t -> float) =
          fun (x4411 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4411) "minimumIntegerDigits")
        let (set_minimumIntegerDigits : t -> float -> unit) =
          fun (x4412 : t) ->
            fun (x4413 : float) ->
              Ojs.set_prop_ascii (t_to_js x4412) "minimumIntegerDigits"
                (Ojs.float_to_js x4413)
        let (get_minimumFractionDigits : t -> float) =
          fun (x4414 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4414) "minimumFractionDigits")
        let (set_minimumFractionDigits : t -> float -> unit) =
          fun (x4415 : t) ->
            fun (x4416 : float) ->
              Ojs.set_prop_ascii (t_to_js x4415) "minimumFractionDigits"
                (Ojs.float_to_js x4416)
        let (get_maximumFractionDigits : t -> float) =
          fun (x4417 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4417) "maximumFractionDigits")
        let (set_maximumFractionDigits : t -> float -> unit) =
          fun (x4418 : t) ->
            fun (x4419 : float) ->
              Ojs.set_prop_ascii (t_to_js x4418) "maximumFractionDigits"
                (Ojs.float_to_js x4419)
        let (get_minimumSignificantDigits : t -> float) =
          fun (x4420 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4420) "minimumSignificantDigits")
        let (set_minimumSignificantDigits : t -> float -> unit) =
          fun (x4421 : t) ->
            fun (x4422 : float) ->
              Ojs.set_prop_ascii (t_to_js x4421) "minimumSignificantDigits"
                (Ojs.float_to_js x4422)
        let (get_maximumSignificantDigits : t -> float) =
          fun (x4423 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4423) "maximumSignificantDigits")
        let (set_maximumSignificantDigits : t -> float -> unit) =
          fun (x4424 : t) ->
            fun (x4425 : float) ->
              Ojs.set_prop_ascii (t_to_js x4424) "maximumSignificantDigits"
                (Ojs.float_to_js x4425)
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = _Intl_ResolvedNumberFormatOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4427 : Ojs.t) ->
            _Intl_ResolvedNumberFormatOptions_of_js x4427
        and t_to_js : t -> Ojs.t =
          fun (x4426 : _Intl_ResolvedNumberFormatOptions) ->
            _Intl_ResolvedNumberFormatOptions_to_js x4426
        let (get_locale : t -> string) =
          fun (x4428 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4428) "locale")
        let (set_locale : t -> string -> unit) =
          fun (x4429 : t) ->
            fun (x4430 : string) ->
              Ojs.set_prop_ascii (t_to_js x4429) "locale"
                (Ojs.string_to_js x4430)
        let (get_numberingSystem : t -> string) =
          fun (x4431 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4431) "numberingSystem")
        let (set_numberingSystem : t -> string -> unit) =
          fun (x4432 : t) ->
            fun (x4433 : string) ->
              Ojs.set_prop_ascii (t_to_js x4432) "numberingSystem"
                (Ojs.string_to_js x4433)
        let (get_style : t -> string) =
          fun (x4434 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4434) "style")
        let (set_style : t -> string -> unit) =
          fun (x4435 : t) ->
            fun (x4436 : string) ->
              Ojs.set_prop_ascii (t_to_js x4435) "style"
                (Ojs.string_to_js x4436)
        let (get_currency : t -> string) =
          fun (x4437 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4437) "currency")
        let (set_currency : t -> string -> unit) =
          fun (x4438 : t) ->
            fun (x4439 : string) ->
              Ojs.set_prop_ascii (t_to_js x4438) "currency"
                (Ojs.string_to_js x4439)
        let (get_currencyDisplay : t -> string) =
          fun (x4440 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4440) "currencyDisplay")
        let (set_currencyDisplay : t -> string -> unit) =
          fun (x4441 : t) ->
            fun (x4442 : string) ->
              Ojs.set_prop_ascii (t_to_js x4441) "currencyDisplay"
                (Ojs.string_to_js x4442)
        let (get_minimumIntegerDigits : t -> float) =
          fun (x4443 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4443) "minimumIntegerDigits")
        let (set_minimumIntegerDigits : t -> float -> unit) =
          fun (x4444 : t) ->
            fun (x4445 : float) ->
              Ojs.set_prop_ascii (t_to_js x4444) "minimumIntegerDigits"
                (Ojs.float_to_js x4445)
        let (get_minimumFractionDigits : t -> float) =
          fun (x4446 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4446) "minimumFractionDigits")
        let (set_minimumFractionDigits : t -> float -> unit) =
          fun (x4447 : t) ->
            fun (x4448 : float) ->
              Ojs.set_prop_ascii (t_to_js x4447) "minimumFractionDigits"
                (Ojs.float_to_js x4448)
        let (get_maximumFractionDigits : t -> float) =
          fun (x4449 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4449) "maximumFractionDigits")
        let (set_maximumFractionDigits : t -> float -> unit) =
          fun (x4450 : t) ->
            fun (x4451 : float) ->
              Ojs.set_prop_ascii (t_to_js x4450) "maximumFractionDigits"
                (Ojs.float_to_js x4451)
        let (get_minimumSignificantDigits : t -> float) =
          fun (x4452 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4452) "minimumSignificantDigits")
        let (set_minimumSignificantDigits : t -> float -> unit) =
          fun (x4453 : t) ->
            fun (x4454 : float) ->
              Ojs.set_prop_ascii (t_to_js x4453) "minimumSignificantDigits"
                (Ojs.float_to_js x4454)
        let (get_maximumSignificantDigits : t -> float) =
          fun (x4455 : t) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (t_to_js x4455) "maximumSignificantDigits")
        let (set_maximumSignificantDigits : t -> float -> unit) =
          fun (x4456 : t) ->
            fun (x4457 : float) ->
              Ojs.set_prop_ascii (t_to_js x4456) "maximumSignificantDigits"
                (Ojs.float_to_js x4457)
        let (get_useGrouping : t -> bool) =
          fun (x4458 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4458) "useGrouping")
        let (set_useGrouping : t -> bool -> unit) =
          fun (x4459 : t) ->
            fun (x4460 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4459) "useGrouping"
                (Ojs.bool_to_js x4460)
      end
    module NumberFormat =
      struct
        type t = _Intl_NumberFormat
        let rec t_of_js : Ojs.t -> t =
          fun (x4462 : Ojs.t) -> _Intl_NumberFormat_of_js x4462
        and t_to_js : t -> Ojs.t =
          fun (x4461 : _Intl_NumberFormat) -> _Intl_NumberFormat_to_js x4461
        let (format : t -> value:float -> string) =
          fun (x4464 : t) ->
            fun ~value:(x4463 : float) ->
              Ojs.string_of_js
                (Ojs.call (t_to_js x4464) "format"
                   [|(Ojs.float_to_js x4463)|])
        let (resolvedOptions : t -> _Intl_ResolvedNumberFormatOptions) =
          fun (x4465 : t) ->
            _Intl_ResolvedNumberFormatOptions_of_js
              (Ojs.call (t_to_js x4465) "resolvedOptions" [||])
      end
    let (numberFormat : anonymous_interface_4) =
      anonymous_interface_4_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
           "NumberFormat")
    module DateTimeFormatOptions =
      struct
        type t = _Intl_DateTimeFormatOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4467 : Ojs.t) -> _Intl_DateTimeFormatOptions_of_js x4467
        and t_to_js : t -> Ojs.t =
          fun (x4466 : _Intl_DateTimeFormatOptions) ->
            _Intl_DateTimeFormatOptions_to_js x4466
        let (get_localeMatcher : t -> [ `best_fit  | `lookup ]) =
          fun (x4468 : t) ->
            let x4469 = Ojs.get_prop_ascii (t_to_js x4468) "localeMatcher" in
            match Ojs.string_of_js x4469 with
            | "best fit" -> `best_fit
            | "lookup" -> `lookup
            | _ -> assert false
        let (set_localeMatcher : t -> [ `best_fit  | `lookup ] -> unit) =
          fun (x4470 : t) ->
            fun (x4471 : [ `best_fit  | `lookup ]) ->
              Ojs.set_prop_ascii (t_to_js x4470) "localeMatcher"
                (match x4471 with
                 | `best_fit -> Ojs.string_to_js "bestFit"
                 | `lookup -> Ojs.string_to_js "lookup")
        let (get_weekday : t -> [ `long  | `narrow  | `short ]) =
          fun (x4472 : t) ->
            let x4473 = Ojs.get_prop_ascii (t_to_js x4472) "weekday" in
            match Ojs.string_of_js x4473 with
            | "long" -> `long
            | "narrow" -> `narrow
            | "short" -> `short
            | _ -> assert false
        let (set_weekday : t -> [ `long  | `narrow  | `short ] -> unit) =
          fun (x4474 : t) ->
            fun (x4475 : [ `long  | `narrow  | `short ]) ->
              Ojs.set_prop_ascii (t_to_js x4474) "weekday"
                (match x4475 with
                 | `long -> Ojs.string_to_js "long"
                 | `narrow -> Ojs.string_to_js "narrow"
                 | `short -> Ojs.string_to_js "short")
        let (get_era : t -> [ `long  | `narrow  | `short ]) =
          fun (x4476 : t) ->
            let x4477 = Ojs.get_prop_ascii (t_to_js x4476) "era" in
            match Ojs.string_of_js x4477 with
            | "long" -> `long
            | "narrow" -> `narrow
            | "short" -> `short
            | _ -> assert false
        let (set_era : t -> [ `long  | `narrow  | `short ] -> unit) =
          fun (x4478 : t) ->
            fun (x4479 : [ `long  | `narrow  | `short ]) ->
              Ojs.set_prop_ascii (t_to_js x4478) "era"
                (match x4479 with
                 | `long -> Ojs.string_to_js "long"
                 | `narrow -> Ojs.string_to_js "narrow"
                 | `short -> Ojs.string_to_js "short")
        let (get_year : t -> [ `two_digit  | `numeric ]) =
          fun (x4480 : t) ->
            let x4481 = Ojs.get_prop_ascii (t_to_js x4480) "year" in
            match Ojs.string_of_js x4481 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_year : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x4482 : t) ->
            fun (x4483 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4482) "year"
                (match x4483 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_month :
          t -> [ `two_digit  | `long  | `narrow  | `numeric  | `short ]) =
          fun (x4484 : t) ->
            let x4485 = Ojs.get_prop_ascii (t_to_js x4484) "month" in
            match Ojs.string_of_js x4485 with
            | "2-digit" -> `two_digit
            | "long" -> `long
            | "narrow" -> `narrow
            | "numeric" -> `numeric
            | "short" -> `short
            | _ -> assert false
        let (set_month :
          t ->
            [ `two_digit  | `long  | `narrow  | `numeric  | `short ] -> unit)
          =
          fun (x4486 : t) ->
            fun
              (x4487 :
                [ `two_digit  | `long  | `narrow  | `numeric  | `short ])
              ->
              Ojs.set_prop_ascii (t_to_js x4486) "month"
                (match x4487 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `long -> Ojs.string_to_js "long"
                 | `narrow -> Ojs.string_to_js "narrow"
                 | `numeric -> Ojs.string_to_js "numeric"
                 | `short -> Ojs.string_to_js "short")
        let (get_day : t -> [ `two_digit  | `numeric ]) =
          fun (x4488 : t) ->
            let x4489 = Ojs.get_prop_ascii (t_to_js x4488) "day" in
            match Ojs.string_of_js x4489 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_day : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x4490 : t) ->
            fun (x4491 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4490) "day"
                (match x4491 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_hour : t -> [ `two_digit  | `numeric ]) =
          fun (x4492 : t) ->
            let x4493 = Ojs.get_prop_ascii (t_to_js x4492) "hour" in
            match Ojs.string_of_js x4493 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_hour : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x4494 : t) ->
            fun (x4495 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4494) "hour"
                (match x4495 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_minute : t -> [ `two_digit  | `numeric ]) =
          fun (x4496 : t) ->
            let x4497 = Ojs.get_prop_ascii (t_to_js x4496) "minute" in
            match Ojs.string_of_js x4497 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_minute : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x4498 : t) ->
            fun (x4499 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4498) "minute"
                (match x4499 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_second : t -> [ `two_digit  | `numeric ]) =
          fun (x4500 : t) ->
            let x4501 = Ojs.get_prop_ascii (t_to_js x4500) "second" in
            match Ojs.string_of_js x4501 with
            | "2-digit" -> `two_digit
            | "numeric" -> `numeric
            | _ -> assert false
        let (set_second : t -> [ `two_digit  | `numeric ] -> unit) =
          fun (x4502 : t) ->
            fun (x4503 : [ `two_digit  | `numeric ]) ->
              Ojs.set_prop_ascii (t_to_js x4502) "second"
                (match x4503 with
                 | `two_digit -> Ojs.string_to_js "twoDigit"
                 | `numeric -> Ojs.string_to_js "numeric")
        let (get_timeZoneName : t -> [ `long  | `short ]) =
          fun (x4504 : t) ->
            let x4505 = Ojs.get_prop_ascii (t_to_js x4504) "timeZoneName" in
            match Ojs.string_of_js x4505 with
            | "long" -> `long
            | "short" -> `short
            | _ -> assert false
        let (set_timeZoneName : t -> [ `long  | `short ] -> unit) =
          fun (x4506 : t) ->
            fun (x4507 : [ `long  | `short ]) ->
              Ojs.set_prop_ascii (t_to_js x4506) "timeZoneName"
                (match x4507 with
                 | `long -> Ojs.string_to_js "long"
                 | `short -> Ojs.string_to_js "short")
        let (get_formatMatcher : t -> [ `basic  | `best_fit ]) =
          fun (x4508 : t) ->
            let x4509 = Ojs.get_prop_ascii (t_to_js x4508) "formatMatcher" in
            match Ojs.string_of_js x4509 with
            | "basic" -> `basic
            | "best fit" -> `best_fit
            | _ -> assert false
        let (set_formatMatcher : t -> [ `basic  | `best_fit ] -> unit) =
          fun (x4510 : t) ->
            fun (x4511 : [ `basic  | `best_fit ]) ->
              Ojs.set_prop_ascii (t_to_js x4510) "formatMatcher"
                (match x4511 with
                 | `basic -> Ojs.string_to_js "basic"
                 | `best_fit -> Ojs.string_to_js "bestFit")
        let (get_hour12 : t -> bool) =
          fun (x4512 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4512) "hour12")
        let (set_hour12 : t -> bool -> unit) =
          fun (x4513 : t) ->
            fun (x4514 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4513) "hour12"
                (Ojs.bool_to_js x4514)
        let (get_timeZone : t -> string) =
          fun (x4515 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4515) "timeZone")
        let (set_timeZone : t -> string -> unit) =
          fun (x4516 : t) ->
            fun (x4517 : string) ->
              Ojs.set_prop_ascii (t_to_js x4516) "timeZone"
                (Ojs.string_to_js x4517)
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = _Intl_ResolvedDateTimeFormatOptions
        let rec t_of_js : Ojs.t -> t =
          fun (x4519 : Ojs.t) ->
            _Intl_ResolvedDateTimeFormatOptions_of_js x4519
        and t_to_js : t -> Ojs.t =
          fun (x4518 : _Intl_ResolvedDateTimeFormatOptions) ->
            _Intl_ResolvedDateTimeFormatOptions_to_js x4518
        let (get_locale : t -> string) =
          fun (x4520 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4520) "locale")
        let (set_locale : t -> string -> unit) =
          fun (x4521 : t) ->
            fun (x4522 : string) ->
              Ojs.set_prop_ascii (t_to_js x4521) "locale"
                (Ojs.string_to_js x4522)
        let (get_calendar : t -> string) =
          fun (x4523 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4523) "calendar")
        let (set_calendar : t -> string -> unit) =
          fun (x4524 : t) ->
            fun (x4525 : string) ->
              Ojs.set_prop_ascii (t_to_js x4524) "calendar"
                (Ojs.string_to_js x4525)
        let (get_numberingSystem : t -> string) =
          fun (x4526 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4526) "numberingSystem")
        let (set_numberingSystem : t -> string -> unit) =
          fun (x4527 : t) ->
            fun (x4528 : string) ->
              Ojs.set_prop_ascii (t_to_js x4527) "numberingSystem"
                (Ojs.string_to_js x4528)
        let (get_timeZone : t -> string) =
          fun (x4529 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4529) "timeZone")
        let (set_timeZone : t -> string -> unit) =
          fun (x4530 : t) ->
            fun (x4531 : string) ->
              Ojs.set_prop_ascii (t_to_js x4530) "timeZone"
                (Ojs.string_to_js x4531)
        let (get_hour12 : t -> bool) =
          fun (x4532 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x4532) "hour12")
        let (set_hour12 : t -> bool -> unit) =
          fun (x4533 : t) ->
            fun (x4534 : bool) ->
              Ojs.set_prop_ascii (t_to_js x4533) "hour12"
                (Ojs.bool_to_js x4534)
        let (get_weekday : t -> string) =
          fun (x4535 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4535) "weekday")
        let (set_weekday : t -> string -> unit) =
          fun (x4536 : t) ->
            fun (x4537 : string) ->
              Ojs.set_prop_ascii (t_to_js x4536) "weekday"
                (Ojs.string_to_js x4537)
        let (get_era : t -> string) =
          fun (x4538 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4538) "era")
        let (set_era : t -> string -> unit) =
          fun (x4539 : t) ->
            fun (x4540 : string) ->
              Ojs.set_prop_ascii (t_to_js x4539) "era"
                (Ojs.string_to_js x4540)
        let (get_year : t -> string) =
          fun (x4541 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4541) "year")
        let (set_year : t -> string -> unit) =
          fun (x4542 : t) ->
            fun (x4543 : string) ->
              Ojs.set_prop_ascii (t_to_js x4542) "year"
                (Ojs.string_to_js x4543)
        let (get_month : t -> string) =
          fun (x4544 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4544) "month")
        let (set_month : t -> string -> unit) =
          fun (x4545 : t) ->
            fun (x4546 : string) ->
              Ojs.set_prop_ascii (t_to_js x4545) "month"
                (Ojs.string_to_js x4546)
        let (get_day : t -> string) =
          fun (x4547 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4547) "day")
        let (set_day : t -> string -> unit) =
          fun (x4548 : t) ->
            fun (x4549 : string) ->
              Ojs.set_prop_ascii (t_to_js x4548) "day"
                (Ojs.string_to_js x4549)
        let (get_hour : t -> string) =
          fun (x4550 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4550) "hour")
        let (set_hour : t -> string -> unit) =
          fun (x4551 : t) ->
            fun (x4552 : string) ->
              Ojs.set_prop_ascii (t_to_js x4551) "hour"
                (Ojs.string_to_js x4552)
        let (get_minute : t -> string) =
          fun (x4553 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4553) "minute")
        let (set_minute : t -> string -> unit) =
          fun (x4554 : t) ->
            fun (x4555 : string) ->
              Ojs.set_prop_ascii (t_to_js x4554) "minute"
                (Ojs.string_to_js x4555)
        let (get_second : t -> string) =
          fun (x4556 : t) ->
            Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x4556) "second")
        let (set_second : t -> string -> unit) =
          fun (x4557 : t) ->
            fun (x4558 : string) ->
              Ojs.set_prop_ascii (t_to_js x4557) "second"
                (Ojs.string_to_js x4558)
        let (get_timeZoneName : t -> string) =
          fun (x4559 : t) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (t_to_js x4559) "timeZoneName")
        let (set_timeZoneName : t -> string -> unit) =
          fun (x4560 : t) ->
            fun (x4561 : string) ->
              Ojs.set_prop_ascii (t_to_js x4560) "timeZoneName"
                (Ojs.string_to_js x4561)
      end
    module DateTimeFormat =
      struct
        type t = _Intl_DateTimeFormat
        let rec t_of_js : Ojs.t -> t =
          fun (x4563 : Ojs.t) -> _Intl_DateTimeFormat_of_js x4563
        and t_to_js : t -> Ojs.t =
          fun (x4562 : _Intl_DateTimeFormat) ->
            _Intl_DateTimeFormat_to_js x4562
        let (format : t -> ?date:_Date or_number -> unit -> string) =
          fun (x4568 : t) ->
            fun ?date:(x4564 : _Date or_number option) ->
              fun () ->
                Ojs.string_of_js
                  (let x4569 = t_to_js x4568 in
                   Ojs.call (Ojs.get_prop_ascii x4569 "format") "apply"
                     [|x4569;((let x4565 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x4564 with
                                | Some x4566 ->
                                    ignore
                                      (Ojs.call x4565 "push"
                                         [|(or_number_to_js _Date_to_js x4566)|])
                                | None -> ());
                               x4565))|])
        let (resolvedOptions : t -> _Intl_ResolvedDateTimeFormatOptions) =
          fun (x4570 : t) ->
            _Intl_ResolvedDateTimeFormatOptions_of_js
              (Ojs.call (t_to_js x4570) "resolvedOptions" [||])
      end
    let (dateTimeFormat : anonymous_interface_3) =
      anonymous_interface_3_of_js
        (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
           "DateTimeFormat")
  end
include Intl
