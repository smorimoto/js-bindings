[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es5
module Internal =
  struct
    module AnonymousInterfaces =
      struct
        type anonymous_interface_0 = [ `anonymous_interface_0 ] intf
        let rec anonymous_interface_0_of_js : Ojs.t -> anonymous_interface_0
          = Obj.magic
        and anonymous_interface_0_to_js : anonymous_interface_0 -> Ojs.t =
          Obj.magic
      end
    module Types =
      struct
        open AnonymousInterfaces
        type _ProxyConstructor = [ `ProxyConstructor ] intf
        and 'T _ProxyHandler = [ `ProxyHandler of 'T ] intf
        let rec _ProxyConstructor_of_js : Ojs.t -> _ProxyConstructor =
          Obj.magic
        and _ProxyConstructor_to_js : _ProxyConstructor -> Ojs.t = Obj.magic
        and _ProxyHandler_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _ProxyHandler =
          fun _T -> Obj.magic
        and _ProxyHandler_to_js :
          'T . ('T -> Ojs.t) -> 'T _ProxyHandler -> Ojs.t =
          fun _T -> Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
open Types
module Revocable =
  struct
    type t = anonymous_interface_0
    let rec t_of_js : Ojs.t -> t =
      fun (x2 : Ojs.t) -> anonymous_interface_0_of_js x2
    and t_to_js : t -> Ojs.t =
      fun (x1 : anonymous_interface_0) -> anonymous_interface_0_to_js x1
    let (get_proxy : t -> 'T) =
      fun (x3 : t) -> Obj.magic (Ojs.get_prop_ascii (t_to_js x3) "proxy")
    let (set_proxy : t -> 'T -> unit) =
      fun (x4 : t) ->
        fun (x5 : 'T) ->
          Ojs.set_prop_ascii (t_to_js x4) "proxy" (Obj.magic x5)
    let (revoke : t -> unit) =
      fun (x6 : t) -> ignore (Ojs.call (t_to_js x6) "revoke" [||])
  end
module ProxyHandler =
  struct
    type 'T t = 'T _ProxyHandler
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9 : Ojs.t) -> _ProxyHandler_of_js __T_of_js x9
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x7 : __T _ProxyHandler) -> _ProxyHandler_to_js __T_to_js x7
    let (apply_ :
      'T t -> target:'T -> thisArg:any -> argArray:any list -> any) =
      fun (x15 : 'T t) ->
        fun ~target:(x11 : 'T) ->
          fun ~thisArg:(x12 : any) ->
            fun ~argArray:(x13 : any list) ->
              any_of_js
                (Ojs.call (t_to_js Obj.magic x15) "apply"
                   [|(Obj.magic x11);(any_to_js x12);(Ojs.list_to_js
                                                        any_to_js x13)|])
    let (construct :
      'T t ->
        target:'T ->
          argArray:any list -> newTarget:untyped_function -> untyped_object)
      =
      fun (x21 : 'T t) ->
        fun ~target:(x17 : 'T) ->
          fun ~argArray:(x18 : any list) ->
            fun ~newTarget:(x20 : untyped_function) ->
              untyped_object_of_js
                (Ojs.call (t_to_js Obj.magic x21) "construct"
                   [|(Obj.magic x17);(Ojs.list_to_js any_to_js x18);(
                     untyped_function_to_js x20)|])
    let (defineProperty :
      'T t ->
        target:'T ->
          p:symbol or_string -> attributes:PropertyDescriptor.t -> bool)
      =
      fun (x27 : 'T t) ->
        fun ~target:(x23 : 'T) ->
          fun ~p:(x24 : symbol or_string) ->
            fun ~attributes:(x26 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js Obj.magic x27) "defineProperty"
                   [|(Obj.magic x23);(or_string_to_js symbol_to_js x24);(
                     PropertyDescriptor.t_to_js x26)|])
    let (deleteProperty : 'T t -> target:'T -> p:symbol or_string -> bool) =
      fun (x32 : 'T t) ->
        fun ~target:(x29 : 'T) ->
          fun ~p:(x30 : symbol or_string) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js Obj.magic x32) "deleteProperty"
                 [|(Obj.magic x29);(or_string_to_js symbol_to_js x30)|])
    let (get_ :
      'T t -> target:'T -> p:symbol or_string -> receiver:any -> any) =
      fun (x38 : 'T t) ->
        fun ~target:(x34 : 'T) ->
          fun ~p:(x35 : symbol or_string) ->
            fun ~receiver:(x37 : any) ->
              any_of_js
                (Ojs.call (t_to_js Obj.magic x38) "get"
                   [|(Obj.magic x34);(or_string_to_js symbol_to_js x35);(
                     any_to_js x37)|])
    let (getOwnPropertyDescriptor :
      'T t ->
        target:'T -> p:symbol or_string -> PropertyDescriptor.t or_undefined)
      =
      fun (x43 : 'T t) ->
        fun ~target:(x40 : 'T) ->
          fun ~p:(x41 : symbol or_string) ->
            or_undefined_of_js PropertyDescriptor.t_of_js
              (Ojs.call (t_to_js Obj.magic x43) "getOwnPropertyDescriptor"
                 [|(Obj.magic x40);(or_string_to_js symbol_to_js x41)|])
    let (getPrototypeOf : 'T t -> target:'T -> untyped_object or_null) =
      fun (x47 : 'T t) ->
        fun ~target:(x46 : 'T) ->
          or_null_of_js untyped_object_of_js
            (Ojs.call (t_to_js Obj.magic x47) "getPrototypeOf"
               [|(Obj.magic x46)|])
    let (has : 'T t -> target:'T -> p:symbol or_string -> bool) =
      fun (x53 : 'T t) ->
        fun ~target:(x50 : 'T) ->
          fun ~p:(x51 : symbol or_string) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js Obj.magic x53) "has"
                 [|(Obj.magic x50);(or_string_to_js symbol_to_js x51)|])
    let (isExtensible : 'T t -> target:'T -> bool) =
      fun (x56 : 'T t) ->
        fun ~target:(x55 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js Obj.magic x56) "isExtensible"
               [|(Obj.magic x55)|])
    let (ownKeys : 'T t -> target:'T -> symbol or_string Array.t) =
      fun (x59 : 'T t) ->
        fun ~target:(x58 : 'T) ->
          Array.t_of_js
            (fun (x61 : Ojs.t) -> or_string_of_js symbol_of_js x61)
            (Ojs.call (t_to_js Obj.magic x59) "ownKeys" [|(Obj.magic x58)|])
    let (preventExtensions : 'T t -> target:'T -> bool) =
      fun (x64 : 'T t) ->
        fun ~target:(x63 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js Obj.magic x64) "preventExtensions"
               [|(Obj.magic x63)|])
    let (set_ :
      'T t ->
        target:'T -> p:symbol or_string -> value:any -> receiver:any -> bool)
      =
      fun (x71 : 'T t) ->
        fun ~target:(x66 : 'T) ->
          fun ~p:(x67 : symbol or_string) ->
            fun ~value:(x69 : any) ->
              fun ~receiver:(x70 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js Obj.magic x71) "set"
                     [|(Obj.magic x66);(or_string_to_js symbol_to_js x67);(
                       any_to_js x69);(any_to_js x70)|])
    let (setPrototypeOf :
      'T t -> target:'T -> v:untyped_object or_null -> bool) =
      fun (x76 : 'T t) ->
        fun ~target:(x73 : 'T) ->
          fun ~v:(x74 : untyped_object or_null) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js Obj.magic x76) "setPrototypeOf"
                 [|(Obj.magic x73);(or_null_to_js untyped_object_to_js x74)|])
  end
module ProxyConstructor =
  struct
    type t = _ProxyConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x79 : Ojs.t) -> _ProxyConstructor_of_js x79
    and t_to_js : t -> Ojs.t =
      fun (x78 : _ProxyConstructor) -> _ProxyConstructor_to_js x78
    let (revocable :
      t -> target:'T -> handler:'T _ProxyHandler -> anonymous_interface_0) =
      fun (x83 : t) ->
        fun ~target:(x80 : 'T) ->
          fun ~handler:(x81 : 'T _ProxyHandler) ->
            anonymous_interface_0_of_js
              (Ojs.call (t_to_js x83) "revocable"
                 [|(Obj.magic x80);(_ProxyHandler_to_js Obj.magic x81)|])
    let (create : t -> target:'T -> handler:'T _ProxyHandler -> 'T) =
      fun (x87 : t) ->
        fun ~target:(x84 : 'T) ->
          fun ~handler:(x85 : 'T _ProxyHandler) ->
            Obj.magic
              (Ojs.new_obj (t_to_js x87)
                 [|(Obj.magic x84);(_ProxyHandler_to_js Obj.magic x85)|])
  end
let (proxy : _ProxyConstructor) =
  _ProxyConstructor_of_js (Ojs.get_prop_ascii Ojs.global "Proxy")
