[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2017
module Internal =
  struct
    module AnonymousInterfaces = struct  end
    module Types =
      struct
        open AnonymousInterfaces
        type 'T _AsyncIterable = [ `AsyncIterable of 'T ] intf
        and 'T _AsyncIterableIterator =
          [ `AsyncIterableIterator of 'T  | `AsyncIterator of 'T ] intf
        and ('T, 'TReturn, 'TNext) _AsyncIterator =
          [ `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
        and _SymbolConstructor = [ `SymbolConstructor ] intf
        let rec _AsyncIterable_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _AsyncIterable =
          fun _T -> Obj.magic
        and _AsyncIterable_to_js :
          'T . ('T -> Ojs.t) -> 'T _AsyncIterable -> Ojs.t =
          fun _T -> Obj.magic
        and _AsyncIterableIterator_of_js :
          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T _AsyncIterableIterator =
          fun _T -> Obj.magic
        and _AsyncIterableIterator_to_js :
          'T . ('T -> Ojs.t) -> 'T _AsyncIterableIterator -> Ojs.t =
          fun _T -> Obj.magic
        and _AsyncIterator_of_js :
          'T 'TReturn 'TNext .
            (Ojs.t -> 'T) ->
              (Ojs.t -> 'TReturn) ->
                (Ojs.t -> 'TNext) ->
                  Ojs.t -> ('T, 'TReturn, 'TNext) _AsyncIterator
          = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
        and _AsyncIterator_to_js :
          'T 'TReturn 'TNext .
            ('T -> Ojs.t) ->
              ('TReturn -> Ojs.t) ->
                ('TNext -> Ojs.t) ->
                  ('T, 'TReturn, 'TNext) _AsyncIterator -> Ojs.t
          = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
        and _SymbolConstructor_of_js : Ojs.t -> _SymbolConstructor =
          Obj.magic
        and _SymbolConstructor_to_js : _SymbolConstructor -> Ojs.t =
          Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
open Types
module SymbolConstructor =
  struct
    type t = _SymbolConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x2 : Ojs.t) -> _SymbolConstructor_of_js x2
    and t_to_js : t -> Ojs.t =
      fun (x1 : _SymbolConstructor) -> _SymbolConstructor_to_js x1
    let (get_asyncIterator : t -> symbol) =
      fun (x3 : t) ->
        symbol_of_js (Ojs.get_prop_ascii (t_to_js x3) "asyncIterator")
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t = ('T, 'TReturn, 'TNext) _AsyncIterator
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x8 : Ojs.t) ->
              _AsyncIterator_of_js __T_of_js __TReturn_of_js __TNext_of_js x8
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x4 : (__T, __TReturn, __TNext) _AsyncIterator) ->
              _AsyncIterator_to_js __T_to_js __TReturn_to_js __TNext_to_js x4
    let (next :
      ('T, 'TReturn, 'TNext) t ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x15 : ('T, 'TReturn, 'TNext) t) ->
        fun ~args:(x12 : any list) ->
          Promise.t_of_js
            (fun (x20 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x20)
            (let x19 = t_to_js Obj.magic Obj.magic Obj.magic x15 in
             Ojs.call (Ojs.get_prop_ascii x19 "next") "apply"
               [|x19;((let x13 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x14 : any) ->
                            ignore (Ojs.call x13 "push" [|(any_to_js x14)|]))
                         x12;
                       x13))|])
    let (return :
      ('T, 'TReturn, 'TNext) t ->
        ?value:('TReturn, 'TReturn Promise.t) union2 ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x29 : ('T, 'TReturn, 'TNext) t) ->
        fun ?value:(x23 : ('TReturn, 'TReturn Promise.t) union2 option) ->
          fun () ->
            Promise.t_of_js
              (fun (x34 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x34)
              (let x33 = t_to_js Obj.magic Obj.magic Obj.magic x29 in
               Ojs.call (Ojs.get_prop_ascii x33 "return") "apply"
                 [|x33;((let x24 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x23 with
                          | Some x25 ->
                              ignore
                                (Ojs.call x24 "push"
                                   [|(union2_to_js Obj.magic
                                        (fun (x27 : 'TReturn Promise.t) ->
                                           Promise.t_to_js Obj.magic x27) x25)|])
                          | None -> ());
                         x24))|])
    let (throw :
      ('T, 'TReturn, 'TNext) t ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x40 : ('T, 'TReturn, 'TNext) t) ->
        fun ?e:(x37 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x45 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x45)
              (let x44 = t_to_js Obj.magic Obj.magic Obj.magic x40 in
               Ojs.call (Ojs.get_prop_ascii x44 "throw") "apply"
                 [|x44;((let x38 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x37 with
                          | Some x39 ->
                              ignore
                                (Ojs.call x38 "push" [|(any_to_js x39)|])
                          | None -> ());
                         x38))|])
  end
module AsyncIterable =
  struct
    type 'T t = 'T _AsyncIterable
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x50 : Ojs.t) -> _AsyncIterable_of_js __T_of_js x50
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x48 : __T _AsyncIterable) -> _AsyncIterable_to_js __T_to_js x48
  end
module AsyncIterableIterator =
  struct
    type 'T t = ('T, any, never or_undefined) AsyncIterator.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x57 : Ojs.t) ->
          AsyncIterator.t_of_js __T_of_js any_of_js
            (fun (x60 : Ojs.t) -> or_undefined_of_js never_of_js x60) x57
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x52 : (__T, any, never or_undefined) AsyncIterator.t) ->
          AsyncIterator.t_to_js __T_to_js any_to_js
            (fun (x55 : never or_undefined) ->
               or_undefined_to_js never_to_js x55) x52
  end
