[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Es2017
open Es2018_asynciterable
module Internal =
  struct
    module AnonymousInterfaces = struct  end
    module Types =
      struct
        open AnonymousInterfaces
        type ('T, 'TReturn, 'TNext) _AsyncGenerator =
          [ `AsyncGenerator of ('T * 'TReturn * 'TNext) ] intf
        and _AsyncGeneratorFunction = [ `AsyncGeneratorFunction ] intf
        and _AsyncGeneratorFunctionConstructor =
          [ `AsyncGeneratorFunctionConstructor ] intf
        let rec _AsyncGenerator_of_js :
          'T 'TReturn 'TNext .
            (Ojs.t -> 'T) ->
              (Ojs.t -> 'TReturn) ->
                (Ojs.t -> 'TNext) ->
                  Ojs.t -> ('T, 'TReturn, 'TNext) _AsyncGenerator
          = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
        and _AsyncGenerator_to_js :
          'T 'TReturn 'TNext .
            ('T -> Ojs.t) ->
              ('TReturn -> Ojs.t) ->
                ('TNext -> Ojs.t) ->
                  ('T, 'TReturn, 'TNext) _AsyncGenerator -> Ojs.t
          = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
        and _AsyncGeneratorFunction_of_js : Ojs.t -> _AsyncGeneratorFunction
          = Obj.magic
        and _AsyncGeneratorFunction_to_js : _AsyncGeneratorFunction -> Ojs.t
          = Obj.magic
        and _AsyncGeneratorFunctionConstructor_of_js :
          Ojs.t -> _AsyncGeneratorFunctionConstructor = Obj.magic
        and _AsyncGeneratorFunctionConstructor_to_js :
          _AsyncGeneratorFunctionConstructor -> Ojs.t = Obj.magic
      end
  end
open Internal
open AnonymousInterfaces
open Types
module AsyncGenerator =
  struct
    type ('T, 'TReturn, 'TNext) t = ('T, 'TReturn, 'TNext) _AsyncGenerator
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x5 : Ojs.t) ->
              _AsyncGenerator_of_js __T_of_js __TReturn_of_js __TNext_of_js
                x5
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x1 : (__T, __TReturn, __TNext) _AsyncGenerator) ->
              _AsyncGenerator_to_js __T_to_js __TReturn_to_js __TNext_to_js
                x1
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x13 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js unknown_of_js x13
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x9 : (__T, __TReturn, unknown) t) ->
            t_to_js __T_to_js __TReturn_to_js unknown_to_js x9
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x21 : Ojs.t) -> t_of_js __T_of_js any_of_js unknown_of_js x21
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x17 : (__T, any, unknown) t) ->
          t_to_js __T_to_js any_to_js unknown_to_js x17
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x29 : Ojs.t) -> t_of_js unknown_of_js any_of_js unknown_of_js x29
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x25 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x25
    let (next :
      ('T, 'TReturn, 'TNext) t ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x36 : ('T, 'TReturn, 'TNext) t) ->
        fun ~args:(x33 : any list) ->
          Promise.t_of_js
            (fun (x41 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x41)
            (let x40 = t_to_js Obj.magic Obj.magic Obj.magic x36 in
             Ojs.call (Ojs.get_prop_ascii x40 "next") "apply"
               [|x40;((let x34 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x35 : any) ->
                            ignore (Ojs.call x34 "push" [|(any_to_js x35)|]))
                         x33;
                       x34))|])
    let (return :
      ('T, 'TReturn, 'TNext) t ->
        value:('TReturn, 'TReturn Promise.t) union2 ->
          ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x48 : ('T, 'TReturn, 'TNext) t) ->
        fun ~value:(x44 : ('TReturn, 'TReturn Promise.t) union2) ->
          Promise.t_of_js
            (fun (x52 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x52)
            (Ojs.call (t_to_js Obj.magic Obj.magic Obj.magic x48) "return"
               [|(union2_to_js Obj.magic
                    (fun (x46 : 'TReturn Promise.t) ->
                       Promise.t_to_js Obj.magic x46) x44)|])
    let (throw :
      ('T, 'TReturn, 'TNext) t ->
        e:any -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x56 : ('T, 'TReturn, 'TNext) t) ->
        fun ~e:(x55 : any) ->
          Promise.t_of_js
            (fun (x60 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x60)
            (Ojs.call (t_to_js Obj.magic Obj.magic Obj.magic x56) "throw"
               [|(any_to_js x55)|])
    let (cast :
      ('T, 'TReturn, 'TNext) t -> ('T, 'TReturn, 'TNext) AsyncIterator.t) =
      fun (x63 : ('T, 'TReturn, 'TNext) t) ->
        AsyncIterator.t_of_js Obj.magic Obj.magic Obj.magic
          (t_to_js Obj.magic Obj.magic Obj.magic x63)
  end
module AsyncGeneratorFunction =
  struct
    type t = _AsyncGeneratorFunction
    let rec t_of_js : Ojs.t -> t =
      fun (x71 : Ojs.t) -> _AsyncGeneratorFunction_of_js x71
    and t_to_js : t -> Ojs.t =
      fun (x70 : _AsyncGeneratorFunction) ->
        _AsyncGeneratorFunction_to_js x70
    let (create :
      t -> args:any list -> (unknown, any, unknown) _AsyncGenerator) =
      fun (x75 : t) ->
        fun ~args:(x72 : any list) ->
          _AsyncGenerator_of_js unknown_of_js any_of_js unknown_of_js
            (Ojs.new_obj_arr (t_to_js x75)
               (let x73 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x74 : any) ->
                     ignore (Ojs.call x73 "push" [|(any_to_js x74)|])) x72;
                x73))
    let (apply :
      t -> args:any list -> (unknown, any, unknown) _AsyncGenerator) =
      fun (x82 : t) ->
        fun ~args:(x79 : any list) ->
          _AsyncGenerator_of_js unknown_of_js any_of_js unknown_of_js
            (Ojs.call (t_to_js x82) "apply"
               [|Ojs.null;((let x80 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x81 : any) ->
                                 ignore
                                   (Ojs.call x80 "push" [|(any_to_js x81)|]))
                              x79;
                            x80))|])
    let (get_length : t -> float) =
      fun (x86 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x86) "length")
    let (get_name : t -> string) =
      fun (x87 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x87) "name")
    let (get_prototype : t -> (unknown, any, unknown) _AsyncGenerator) =
      fun (x88 : t) ->
        _AsyncGenerator_of_js unknown_of_js any_of_js unknown_of_js
          (Ojs.get_prop_ascii (t_to_js x88) "prototype")
  end
module AsyncGeneratorFunctionConstructor =
  struct
    type t = _AsyncGeneratorFunctionConstructor
    let rec t_of_js : Ojs.t -> t =
      fun (x93 : Ojs.t) -> _AsyncGeneratorFunctionConstructor_of_js x93
    and t_to_js : t -> Ojs.t =
      fun (x92 : _AsyncGeneratorFunctionConstructor) ->
        _AsyncGeneratorFunctionConstructor_to_js x92
    let (create : t -> string list -> _AsyncGeneratorFunction) =
      fun (x97 : t) ->
        fun (x94 : string list) ->
          _AsyncGeneratorFunction_of_js
            (Ojs.new_obj_arr (t_to_js x97)
               (let x95 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x96 : string) ->
                     ignore (Ojs.call x95 "push" [|(Ojs.string_to_js x96)|]))
                  x94;
                x95))
    let (apply : t -> string list -> _AsyncGeneratorFunction) =
      fun (x101 : t) ->
        fun (x98 : string list) ->
          _AsyncGeneratorFunction_of_js
            (Ojs.call (t_to_js x101) "apply"
               [|Ojs.null;((let x99 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x100 : string) ->
                                 ignore
                                   (Ojs.call x99 "push"
                                      [|(Ojs.string_to_js x100)|])) x98;
                            x99))|])
    let (get_length : t -> float) =
      fun (x102 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x102) "length")
    let (get_name : t -> string) =
      fun (x103 : t) ->
        Ojs.string_of_js (Ojs.get_prop_ascii (t_to_js x103) "name")
    let (get_prototype : t -> _AsyncGeneratorFunction) =
      fun (x104 : t) ->
        _AsyncGeneratorFunction_of_js
          (Ojs.get_prop_ascii (t_to_js x104) "prototype")
  end
